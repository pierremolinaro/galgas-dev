//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'predefined_types.h'                          *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      july 20th, 2008, at 12h15'58"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef predefined_types_DEFINED
#define predefined_types_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/C_GGS_Object.h"
#include "galgas/GGS_location.h"
#include "galgas/GGS_lbool.h"
#include "galgas/GGS_lchar.h"
#include "galgas/GGS_lstring.h"
#include "galgas/GGS_ldouble.h"
#include "galgas/GGS_luint.h"
#include "galgas/GGS_lsint.h"
#include "galgas/GGS_luint64.h"
#include "galgas/GGS_lsint64.h"
#include "galgas/GGS_stringset.h"
#include "galgas/GGS_binaryset.h"
#include "galgas/GGS_filewrapper.h"
#include "galgas/predefined_types.h"
#include "galgas/AC_galgas_class.h"
#include "galgas/AC_galgas_domain.h"
#include "galgas/AC_galgas_mapindex.h"
#include "galgas/AC_galgas_map.h"
#include "galgas/AC_galgas_listmap.h"
#include "galgas/AC_galgas_list.h"
#include "galgas/AC_galgas_sortedlist.h"

//---------------------------------------------------------------------------*

#include "galgas/C_Lexique.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_UINTLIST ;
class GGS_LUINTLIST ;
class GGS_UINT64LIST ;
class GGS_STRINGLIST ;
class GGS_LSTRINGLIST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                             list '@UINTLIST'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_UINTLIST ;

class GGS_UINTLIST : public AC_galgas_list {
  public : typedef elementOf_GGS_UINTLIST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_UINTLIST constructor_emptyList (void) ;
  public : static GGS_UINTLIST constructor_listWithValue (const GGS_uint & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_UINTLIST & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_UINTLIST
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_UINTLIST
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_UINTLIST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_uint & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_uint & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_uint & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_uint & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_UINTLIST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_uint & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_UINTLIST _operator_concat (const GGS_UINTLIST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_uint & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_uint & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_uint & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_uint 
  reader_mValueAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMValueAtIndex (C_Compiler & inLexique,
                              const GGS_uint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_UINTLIST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_uint   & _mValue (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            list '@LUINTLIST'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_LUINTLIST ;

class GGS_LUINTLIST : public AC_galgas_list {
  public : typedef elementOf_GGS_LUINTLIST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_LUINTLIST constructor_emptyList (void) ;
  public : static GGS_LUINTLIST constructor_listWithValue (const GGS_luint & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_LUINTLIST & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_LUINTLIST
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_LUINTLIST
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_LUINTLIST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_luint & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_luint & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_luint & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_luint & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_LUINTLIST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_luint & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_LUINTLIST _operator_concat (const GGS_LUINTLIST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_luint & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_luint & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_luint & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_luint 
  reader_mValueAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMValueAtIndex (C_Compiler & inLexique,
                              const GGS_luint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_LUINTLIST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_luint   & _mValue (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            list '@UINT64LIST'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_UINT64LIST ;

class GGS_UINT64LIST : public AC_galgas_list {
  public : typedef elementOf_GGS_UINT64LIST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_UINT64LIST constructor_emptyList (void) ;
  public : static GGS_UINT64LIST constructor_listWithValue (const GGS_uint64 & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_UINT64LIST & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_UINT64LIST
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_UINT64LIST
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_UINT64LIST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_uint64 & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_uint64 & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_uint64 & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_uint64 & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_UINT64LIST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_uint64 & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_UINT64LIST _operator_concat (const GGS_UINT64LIST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_uint64 & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_uint64 & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_uint64 & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_uint64 
  reader_mValueAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMValueAtIndex (C_Compiler & inLexique,
                              const GGS_uint64  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_UINT64LIST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_uint64   & _mValue (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            list '@STRINGLIST'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_STRINGLIST ;

class GGS_STRINGLIST : public AC_galgas_list {
  public : typedef elementOf_GGS_STRINGLIST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_STRINGLIST constructor_emptyList (void) ;
  public : static GGS_STRINGLIST constructor_listWithValue (const GGS_string& argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_STRINGLIST & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_STRINGLIST
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_STRINGLIST
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_STRINGLIST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_string& _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_string& _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_string& _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_string& _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_STRINGLIST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_string& argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_STRINGLIST _operator_concat (const GGS_STRINGLIST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_string
  reader_mValueAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMValueAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_STRINGLIST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_string  & _mValue (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           list '@LSTRINGLIST'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_LSTRINGLIST ;

class GGS_LSTRINGLIST : public AC_galgas_list {
  public : typedef elementOf_GGS_LSTRINGLIST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_LSTRINGLIST constructor_emptyList (void) ;
  public : static GGS_LSTRINGLIST constructor_listWithValue (const GGS_lstring & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_LSTRINGLIST & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_LSTRINGLIST
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_LSTRINGLIST
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_LSTRINGLIST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_lstring & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_lstring & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_lstring & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_lstring & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_LSTRINGLIST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_LSTRINGLIST _operator_concat (const GGS_LSTRINGLIST & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mValueAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMValueAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_LSTRINGLIST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_lstring   & _mValue (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of list '@UINTLIST'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_UINTLIST : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_uint  mValue ;
//--- Constructor
  public : elementOf_GGS_UINTLIST (const GGS_uint & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_UINTLIST * nextObject (void) const { return (elementOf_GGS_UINTLIST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_UINTLIST * previousObject (void) const { return (elementOf_GGS_UINTLIST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_UINTLIST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of list '@LUINTLIST'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_LUINTLIST : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_luint  mValue ;
//--- Constructor
  public : elementOf_GGS_LUINTLIST (const GGS_luint & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_LUINTLIST * nextObject (void) const { return (elementOf_GGS_LUINTLIST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_LUINTLIST * previousObject (void) const { return (elementOf_GGS_LUINTLIST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_LUINTLIST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of list '@UINT64LIST'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_UINT64LIST : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_uint64  mValue ;
//--- Constructor
  public : elementOf_GGS_UINT64LIST (const GGS_uint64 & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_UINT64LIST * nextObject (void) const { return (elementOf_GGS_UINT64LIST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_UINT64LIST * previousObject (void) const { return (elementOf_GGS_UINT64LIST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_UINT64LIST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of list '@STRINGLIST'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_STRINGLIST : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_string mValue ;
//--- Constructor
  public : elementOf_GGS_STRINGLIST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_STRINGLIST * nextObject (void) const { return (elementOf_GGS_STRINGLIST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_STRINGLIST * previousObject (void) const { return (elementOf_GGS_STRINGLIST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_STRINGLIST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of list '@LSTRINGLIST'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_LSTRINGLIST : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mValue ;
//--- Constructor
  public : elementOf_GGS_LSTRINGLIST (const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_LSTRINGLIST * nextObject (void) const { return (elementOf_GGS_LSTRINGLIST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_LSTRINGLIST * previousObject (void) const { return (elementOf_GGS_LSTRINGLIST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_LSTRINGLIST ;
} ;

//---------------------------------------------------------------------------*

#endif
