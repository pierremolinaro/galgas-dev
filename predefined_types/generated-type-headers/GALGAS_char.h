//---------------------------------------------------------------------------*
//                                                                           *
//                           File 'GALGAS_char.h'                            *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     january 20th, 2010, at 13h53'27"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef GALGAS_char_CLASS_DEFINED
#define GALGAS_char_CLASS_DEFINED

//---------------------------------------------------------------------------*

#include "galgas2/AC_GALGAS__root.h"

//---------------------------------------------------------------------------*

class GALGAS_string ;
class GALGAS_char ;
class GALGAS_bool ;
class GALGAS_uint ;
class GALGAS_sint ;
class GALGAS_uint_36__34_ ;
class GALGAS_sint_36__34_ ;
class GALGAS_double ;
class GALGAS_lstring ;
class GALGAS_lchar ;
class GALGAS_lbool ;
class GALGAS_luint ;
class GALGAS_lsint ;
class GALGAS_luint_36__34_ ;
class GALGAS_lsint_36__34_ ;
class GALGAS_ldouble ;
class GALGAS_binaryset ;
class GALGAS_stringset ;
class GALGAS_location ;
class GALGAS_data ;
class GALGAS_type ;
class GALGAS_function ;
class GALGAS_object ;
class GALGAS_lstringlist ;
class GALGAS_stringlist ;
class GALGAS_typelist ;
class GALGAS_uint_36__34_list ;
class GALGAS_luintlist ;
class GALGAS_uintlist ;
class GALGAS_functionlist ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_char ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            'GALGAS_char' class                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GALGAS_char : public AC_GALGAS__root {
//--------------------------------- Native constructor
  protected : GALGAS_char (const utf32 inValue COMMA_LOCATION_ARGS) ;

  public : static GALGAS_char * constructor_new (const utf32 inValue COMMA_LOCATION_ARGS) ;
//--------------------------------- GALGAS constructors
  public : static GALGAS_char * constructor_replacementCharacter (LOCATION_ARGS) ;

  public : static GALGAS_char * constructor_unicodeCharacterWithUnsigned (const GALGAS_uint * inOperand0
                                                                          COMMA_LOCATION_ARGS) ;


//--------------------------------- No copy
  private : GALGAS_char (const GALGAS_char &) ;
  private : GALGAS_char & operator = (const GALGAS_char &) ;

//--------------------------------- Implementation of reader 'description'
  public : virtual void description (C_String & ioString,
                                     const PMSInt32 inIndentation) const ;

//--------------------------------- Readers
  protected : virtual GALGAS_bool * reader_isUnicodeCommand (LOCATION_ARGS) const ;

  protected : virtual GALGAS_bool * reader_isUnicodeLetter (LOCATION_ARGS) const ;

  protected : virtual GALGAS_bool * reader_isUnicodeMark (LOCATION_ARGS) const ;

  protected : virtual GALGAS_bool * reader_isUnicodeNumber (LOCATION_ARGS) const ;

  protected : virtual GALGAS_bool * reader_isUnicodePunctuation (LOCATION_ARGS) const ;

  protected : virtual GALGAS_bool * reader_isUnicodeSeparator (LOCATION_ARGS) const ;

  protected : virtual GALGAS_bool * reader_isUnicodeSymbol (LOCATION_ARGS) const ;

  protected : virtual GALGAS_bool * reader_isalnum (LOCATION_ARGS) const ;

  protected : virtual GALGAS_bool * reader_isalpha (LOCATION_ARGS) const ;

  protected : virtual GALGAS_bool * reader_iscntrl (LOCATION_ARGS) const ;

  protected : virtual GALGAS_bool * reader_isdigit (LOCATION_ARGS) const ;

  protected : virtual GALGAS_bool * reader_islower (LOCATION_ARGS) const ;

  protected : virtual GALGAS_bool * reader_isupper (LOCATION_ARGS) const ;

  protected : virtual GALGAS_bool * reader_isxdigit (LOCATION_ARGS) const ;

  protected : virtual GALGAS_string * reader_string (LOCATION_ARGS) const ;

  protected : virtual GALGAS_uint * reader_uint (C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const ;

  protected : virtual GALGAS_uint * reader_uintValue (LOCATION_ARGS) const ;

  protected : virtual GALGAS_string * reader_unicodeName (LOCATION_ARGS) const ;

  protected : virtual GALGAS_char * reader_unicodeToLower (LOCATION_ARGS) const ;

  protected : virtual GALGAS_char * reader_unicodeToUpper (LOCATION_ARGS) const ;

  protected : virtual GALGAS_string * reader_utf32CharConstantRepresentation (LOCATION_ARGS) const ;

//--------------------------------- Comparison
  public : static GALGAS_bool * operator_isEqual (const GALGAS_char * inOperand1,
                                                  const GALGAS_char * inOperand2
                                                  COMMA_LOCATION_ARGS) ;

  public : static GALGAS_bool * operator_isNotEqual (const GALGAS_char * inOperand1,
                                                     const GALGAS_char * inOperand2
                                                     COMMA_LOCATION_ARGS) ;

  public : static GALGAS_bool * operator_infOrEqual (const GALGAS_char * inOperand1,
                                                     const GALGAS_char * inOperand2
                                                     COMMA_LOCATION_ARGS) ;

  public : static GALGAS_bool * operator_supOrEqual (const GALGAS_char * inOperand1,
                                                     const GALGAS_char * inOperand2
                                                     COMMA_LOCATION_ARGS) ;

  public : static GALGAS_bool * operator_strictInf (const GALGAS_char * inOperand1,
                                                    const GALGAS_char * inOperand2
                                                    COMMA_LOCATION_ARGS) ;

  public : static GALGAS_bool * operator_strictSup (const GALGAS_char * inOperand1,
                                                    const GALGAS_char * inOperand2
                                                    COMMA_LOCATION_ARGS) ;

  public : virtual PMSInt32 compareForSortedList (const AC_GALGAS__root * inOperand
                                                   COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptor * typeDescriptor (void) const ;

//--------------------------------- Private data member
  private : utf32 mValue ;
  public : inline utf32 value (void) const { return mValue ; }
//--------------------------------- Friends
  friend GALGAS_bool * readerCall_isUnicodeCommand (const GALGAS_char * inObject
                                                    COMMA_LOCATION_ARGS) ;

  friend GALGAS_bool * readerCall_isUnicodeLetter (const GALGAS_char * inObject
                                                   COMMA_LOCATION_ARGS) ;

  friend GALGAS_bool * readerCall_isUnicodeMark (const GALGAS_char * inObject
                                                 COMMA_LOCATION_ARGS) ;

  friend GALGAS_bool * readerCall_isUnicodeNumber (const GALGAS_char * inObject
                                                   COMMA_LOCATION_ARGS) ;

  friend GALGAS_bool * readerCall_isUnicodePunctuation (const GALGAS_char * inObject
                                                        COMMA_LOCATION_ARGS) ;

  friend GALGAS_bool * readerCall_isUnicodeSeparator (const GALGAS_char * inObject
                                                      COMMA_LOCATION_ARGS) ;

  friend GALGAS_bool * readerCall_isUnicodeSymbol (const GALGAS_char * inObject
                                                   COMMA_LOCATION_ARGS) ;

  friend GALGAS_bool * readerCall_isalnum (const GALGAS_char * inObject
                                           COMMA_LOCATION_ARGS) ;

  friend GALGAS_bool * readerCall_isalpha (const GALGAS_char * inObject
                                           COMMA_LOCATION_ARGS) ;

  friend GALGAS_bool * readerCall_iscntrl (const GALGAS_char * inObject
                                           COMMA_LOCATION_ARGS) ;

  friend GALGAS_bool * readerCall_isdigit (const GALGAS_char * inObject
                                           COMMA_LOCATION_ARGS) ;

  friend GALGAS_bool * readerCall_islower (const GALGAS_char * inObject
                                           COMMA_LOCATION_ARGS) ;

  friend GALGAS_bool * readerCall_isupper (const GALGAS_char * inObject
                                           COMMA_LOCATION_ARGS) ;

  friend GALGAS_bool * readerCall_isxdigit (const GALGAS_char * inObject
                                            COMMA_LOCATION_ARGS) ;

  friend GALGAS_string * readerCall_string (const GALGAS_char * inObject
                                            COMMA_LOCATION_ARGS) ;

  friend GALGAS_uint * readerCall_uint (const GALGAS_char * inObject,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) ;

  friend GALGAS_uint * readerCall_uintValue (const GALGAS_char * inObject
                                             COMMA_LOCATION_ARGS) ;

  friend GALGAS_string * readerCall_unicodeName (const GALGAS_char * inObject
                                                 COMMA_LOCATION_ARGS) ;

  friend GALGAS_char * readerCall_unicodeToLower (const GALGAS_char * inObject
                                                  COMMA_LOCATION_ARGS) ;

  friend GALGAS_char * readerCall_unicodeToUpper (const GALGAS_char * inObject
                                                  COMMA_LOCATION_ARGS) ;

  friend GALGAS_string * readerCall_utf32CharConstantRepresentation (const GALGAS_char * inObject
                                                                     COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           'GALGAS_char' readers                           *
//                                                                           *
//---------------------------------------------------------------------------*

inline GALGAS_bool * readerCall_isUnicodeCommand (const GALGAS_char * inObject
                                                  COMMA_LOCATION_ARGS) {
  GALGAS_bool * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_isUnicodeCommand (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

inline GALGAS_bool * readerCall_isUnicodeLetter (const GALGAS_char * inObject
                                                 COMMA_LOCATION_ARGS) {
  GALGAS_bool * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_isUnicodeLetter (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

inline GALGAS_bool * readerCall_isUnicodeMark (const GALGAS_char * inObject
                                               COMMA_LOCATION_ARGS) {
  GALGAS_bool * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_isUnicodeMark (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

inline GALGAS_bool * readerCall_isUnicodeNumber (const GALGAS_char * inObject
                                                 COMMA_LOCATION_ARGS) {
  GALGAS_bool * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_isUnicodeNumber (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

inline GALGAS_bool * readerCall_isUnicodePunctuation (const GALGAS_char * inObject
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_bool * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_isUnicodePunctuation (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

inline GALGAS_bool * readerCall_isUnicodeSeparator (const GALGAS_char * inObject
                                                    COMMA_LOCATION_ARGS) {
  GALGAS_bool * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_isUnicodeSeparator (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

inline GALGAS_bool * readerCall_isUnicodeSymbol (const GALGAS_char * inObject
                                                 COMMA_LOCATION_ARGS) {
  GALGAS_bool * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_isUnicodeSymbol (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

inline GALGAS_bool * readerCall_isalnum (const GALGAS_char * inObject
                                         COMMA_LOCATION_ARGS) {
  GALGAS_bool * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_isalnum (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

inline GALGAS_bool * readerCall_isalpha (const GALGAS_char * inObject
                                         COMMA_LOCATION_ARGS) {
  GALGAS_bool * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_isalpha (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

inline GALGAS_bool * readerCall_iscntrl (const GALGAS_char * inObject
                                         COMMA_LOCATION_ARGS) {
  GALGAS_bool * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_iscntrl (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

inline GALGAS_bool * readerCall_isdigit (const GALGAS_char * inObject
                                         COMMA_LOCATION_ARGS) {
  GALGAS_bool * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_isdigit (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

inline GALGAS_bool * readerCall_islower (const GALGAS_char * inObject
                                         COMMA_LOCATION_ARGS) {
  GALGAS_bool * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_islower (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

inline GALGAS_bool * readerCall_isupper (const GALGAS_char * inObject
                                         COMMA_LOCATION_ARGS) {
  GALGAS_bool * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_isupper (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

inline GALGAS_bool * readerCall_isxdigit (const GALGAS_char * inObject
                                          COMMA_LOCATION_ARGS) {
  GALGAS_bool * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_isxdigit (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

inline GALGAS_string * readerCall_string (const GALGAS_char * inObject
                                          COMMA_LOCATION_ARGS) {
  GALGAS_string * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_string (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

inline GALGAS_uint * readerCall_uint (const GALGAS_char * inObject,
                                      C_Compiler * inCompiler
                                      COMMA_LOCATION_ARGS) {
  GALGAS_uint * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_uint (inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

inline GALGAS_uint * readerCall_uintValue (const GALGAS_char * inObject
                                           COMMA_LOCATION_ARGS) {
  GALGAS_uint * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_uintValue (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

inline GALGAS_string * readerCall_unicodeName (const GALGAS_char * inObject
                                               COMMA_LOCATION_ARGS) {
  GALGAS_string * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_unicodeName (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

inline GALGAS_char * readerCall_unicodeToLower (const GALGAS_char * inObject
                                                COMMA_LOCATION_ARGS) {
  GALGAS_char * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_unicodeToLower (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

inline GALGAS_char * readerCall_unicodeToUpper (const GALGAS_char * inObject
                                                COMMA_LOCATION_ARGS) {
  GALGAS_char * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_unicodeToUpper (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

inline GALGAS_string * readerCall_utf32CharConstantRepresentation (const GALGAS_char * inObject
                                                                   COMMA_LOCATION_ARGS) {
  GALGAS_string * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_utf32CharConstantRepresentation (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*



#endif

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

