//---------------------------------------------------------------------------*
//                                                                           *
//                         File 'GALGAS_location.h'                          *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     january 20th, 2010, at 13h53'27"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef GALGAS_location_CLASS_DEFINED
#define GALGAS_location_CLASS_DEFINED

//---------------------------------------------------------------------------*

#include "galgas2/AC_GALGAS__root.h"

//---------------------------------------------------------------------------*

class GALGAS_string ;
class GALGAS_char ;
class GALGAS_bool ;
class GALGAS_uint ;
class GALGAS_sint ;
class GALGAS_uint_36__34_ ;
class GALGAS_sint_36__34_ ;
class GALGAS_double ;
class GALGAS_lstring ;
class GALGAS_lchar ;
class GALGAS_lbool ;
class GALGAS_luint ;
class GALGAS_lsint ;
class GALGAS_luint_36__34_ ;
class GALGAS_lsint_36__34_ ;
class GALGAS_ldouble ;
class GALGAS_binaryset ;
class GALGAS_stringset ;
class GALGAS_location ;
class GALGAS_data ;
class GALGAS_type ;
class GALGAS_function ;
class GALGAS_object ;
class GALGAS_lstringlist ;
class GALGAS_stringlist ;
class GALGAS_typelist ;
class GALGAS_uint_36__34_list ;
class GALGAS_luintlist ;
class GALGAS_uintlist ;
class GALGAS_functionlist ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_location ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          'GALGAS_location' class                          *
//                                                                           *
//---------------------------------------------------------------------------*

class GALGAS_location : public AC_GALGAS__root {
//--------------------------------- Native constructor
  protected : GALGAS_location (LOCATION_ARGS) ;

//--------------------------------- No copy
  private : GALGAS_location (const GALGAS_location &) ;
  private : GALGAS_location & operator = (const GALGAS_location &) ;

//--------------------------------- Implementation of reader 'description'
  public : virtual void description (C_String & ioString,
                                     const PMSInt32 inIndentation) const ;

//--------------------------------- Readers
  protected : virtual GALGAS_uint * reader_column (LOCATION_ARGS) const ;

  protected : virtual GALGAS_uint * reader_line (LOCATION_ARGS) const ;

  protected : virtual GALGAS_uint * reader_locationIndex (LOCATION_ARGS) const ;

  protected : virtual GALGAS_string * reader_locationString (LOCATION_ARGS) const ;

//--------------------------------- Comparison
  public : static GALGAS_bool * operator_isEqual (const GALGAS_location * inOperand1,
                                                  const GALGAS_location * inOperand2
                                                  COMMA_LOCATION_ARGS) ;

  public : static GALGAS_bool * operator_isNotEqual (const GALGAS_location * inOperand1,
                                                     const GALGAS_location * inOperand2
                                                     COMMA_LOCATION_ARGS) ;

  public : virtual PMSInt32 compareForSortedList (const AC_GALGAS__root * inOperand
                                                   COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptor * typeDescriptor (void) const ;

//--------------------------------- Friends
  friend GALGAS_uint * readerCall_column (const GALGAS_location * inObject
                                          COMMA_LOCATION_ARGS) ;

  friend GALGAS_uint * readerCall_line (const GALGAS_location * inObject
                                        COMMA_LOCATION_ARGS) ;

  friend GALGAS_uint * readerCall_locationIndex (const GALGAS_location * inObject
                                                 COMMA_LOCATION_ARGS) ;

  friend GALGAS_string * readerCall_locationString (const GALGAS_location * inObject
                                                    COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         'GALGAS_location' readers                         *
//                                                                           *
//---------------------------------------------------------------------------*

inline GALGAS_uint * readerCall_column (const GALGAS_location * inObject
                                        COMMA_LOCATION_ARGS) {
  GALGAS_uint * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_column (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

inline GALGAS_uint * readerCall_line (const GALGAS_location * inObject
                                      COMMA_LOCATION_ARGS) {
  GALGAS_uint * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_line (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

inline GALGAS_uint * readerCall_locationIndex (const GALGAS_location * inObject
                                               COMMA_LOCATION_ARGS) {
  GALGAS_uint * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_locationIndex (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

inline GALGAS_string * readerCall_locationString (const GALGAS_location * inObject
                                                  COMMA_LOCATION_ARGS) {
  GALGAS_string * result = NULL ;
  if (inObject != NULL) {
    result = inObject->reader_locationString (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*



#endif

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

