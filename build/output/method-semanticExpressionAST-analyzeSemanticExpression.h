//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          File 'method-semanticExpressionAST-analyzeSemanticExpression.h'                            *
//                                             Generated by version 3.0.0                                              *
//                                         september 23th, 2014, at 20h45'54"                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef method_2D_semanticExpressionAST_2D_analyzeSemanticExpression_1_DEFINED
#define method_2D_semanticExpressionAST_2D_analyzeSemanticExpression_1_DEFINED

//---------------------------------------------------------------------------------------------------------------------*

#include "galgas2/predefined-types.h"

//---------------------------------------------------------------------------------------------------------------------*

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                     Abstract category method '@semanticExpressionAST analyzeSemanticExpression'                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

typedef void (*categoryMethodSignature_semanticExpressionAST_analyzeSemanticExpression) (const class cPtr_semanticExpressionAST * inObject,
                                                                                         const class GALGAS_unifiedTypeMapProxy constinArgument0,
                                                                                         const class GALGAS_analysisContext constinArgument1,
                                                                                         class GALGAS_variableMap & ioArgument2,
                                                                                         class GALGAS_semanticExpressionForGeneration & outArgument3,
                                                                                         class C_Compiler * inCompiler
                                                                                         COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------------------------------------------------*

void enterCategoryMethod_analyzeSemanticExpression (const int32_t inClassIndex,
                                                    categoryMethodSignature_semanticExpressionAST_analyzeSemanticExpression inMethod) ;

//---------------------------------------------------------------------------------------------------------------------*

void callCategoryMethod_analyzeSemanticExpression (const class cPtr_semanticExpressionAST * inObject,
                                                   const GALGAS_unifiedTypeMapProxy constin_inType,
                                                   const GALGAS_analysisContext constin_inAnalysisContext,
                                                   GALGAS_variableMap & io_ioVariableMap,
                                                   GALGAS_semanticExpressionForGeneration & out_outExpression,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) ;


//---------------------------------------------------------------------------------------------------------------------*

#endif

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


