Insertion Test Done
Delete Test Done
Insertion Test Done
Delete Test Done
*************************************** begin of foreach instruction test 1
  before
  do 'a'
  between
  do 'b'
  between
  do 'c'
  between
  do 'd'
  after
--- begin of foreach instruction test 2
--- begin of foreach instruction test 3
  before
  do 'a', n: 0
  between
  do 'b', n: 1
  after
--- begin of foreach instruction test 4
  before
  do 'a'
  between
  do 'b'
  after
--- begin of foreach instruction test 5
  before
  do 'a' (idx: 0)
  between
  do 'b' (idx: 1)
  between
  do 'c' (idx: 2)
  between
  do 'd' (idx: 3)
  after
--- begin of foreach instruction test 6
  do 'a' (idx: 0)
  do 'b' (idx: 1)
  do 'c' (idx: 2)
  do 'd' (idx: 3)
--- begin of foreach instruction test 7
  do 'A' (idx: 0)
  do 'B' (idx: 1)
  do 'C' (idx: 2)
  do 'D' (idx: 3)
  do 'E' (idx: 4)
  do 'F' (idx: 5)
  do 'G' (idx: 6)
  do 'H' (idx: 7)
--- begin of foreach instruction test 8
  do 'H' (idx: 0)
  do 'G' (idx: 1)
  do 'F' (idx: 2)
  do 'E' (idx: 3)
  do 'D' (idx: 4)
  do 'C' (idx: 5)
  do 'B' (idx: 6)
  do 'A' (idx: 7)
--- begin of foreach instruction test 9
  do '1' (idx: 0)
  do '2' (idx: 1)
  do '3' (idx: 2)
  do '4' (idx: 3)
  do '5' (idx: 4)
  do '6' (idx: 5)
  do '7' (idx: 6)
  do '8' (idx: 7)
*************************************** begin of for instruction test 1
  before
  do 'a'
  between
  do 'b'
  between
  do 'c'
  between
  do 'd'
  after
--- begin of for instruction test 2
--- begin of for instruction test 3
  before
  do 'a', n: 0
  between
  do 'b', n: 1
  after
--- begin of for instruction test 4
  before
  do 'a'
  between
  do 'b'
  after
--- begin of for instruction test 5
  before
  do 'a' (idx: 0)
  between
  do 'b' (idx: 1)
  between
  do 'c' (idx: 2)
  between
  do 'd' (idx: 3)
  after
--- begin of for instruction test 6
  do 'a' (idx: 0)
  do 'b' (idx: 1)
  do 'c' (idx: 2)
  do 'd' (idx: 3)
--- begin of for instruction test 7
  do 'A' (idx: 0)
  do 'B' (idx: 1)
  do 'C' (idx: 2)
  do 'D' (idx: 3)
  do 'E' (idx: 4)
  do 'F' (idx: 5)
  do 'G' (idx: 6)
  do 'H' (idx: 7)
--- begin of for instruction test 8
  do 'H' (idx: 0)
  do 'G' (idx: 1)
  do 'F' (idx: 2)
  do 'E' (idx: 3)
  do 'D' (idx: 4)
  do 'C' (idx: 5)
  do 'B' (idx: 6)
  do 'A' (idx: 7)
--- begin of for instruction test 9
  do '1' (idx: 0)
  do '2' (idx: 1)
  do '3' (idx: 2)
  do '4' (idx: 3)
  do '5' (idx: 4)
  do '6' (idx: 5)
  do '7' (idx: 6)
  do '8' (idx: 7)
*************************************** begin of list direct access
LOGGING s: <@string:"a">
LOGGING s: <@string:"b">
LOGGING s: <@string:"c">
LOGGING s: <@string:"d">
LOGGING strList: <list @myList (4 objects):
|-at 0
| mValue:<@string:"a">
|-at 1
| mValue:<@string:"b">
|-at 2
| mValue:<@string:"c">
|-at 3
| mValue:<@string:"z">>
--- test .= operator on list
LOGGING s: <@string:"d">
*************************************** begin of list compare
LOGGING comp: <@bool:true>
*************************************** begin of collection value
LOGGING str: <list @stringlist (5 objects):
|-at 0
| mValue:<@string:"a">
|-at 1
| mValue:<@string:"b">
|-at 2
| mValue:<@string:"c">
|-at 3
| mValue:<@string:"d">
|-at 4
| mValue:<@string:"e">>
LOGGING str2: <list @stringlist (5 objects):
|-at 0
| mValue:<@string:"a">
|-at 1
| mValue:<@string:"b">
|-at 2
| mValue:<@string:"c">
|-at 3
| mValue:<@string:"d">
|-at 4
| mValue:<@string:"e">>
*************************************** begin of sorted list test
  index 0 : d
  index 1 : c
  index 2 : b
  index 3 : a
*************************************** begin of struct logging
LOGGING s: <struct @structTest:<@string:"az">, <@uint:34>>
*************************************** begin of map
LOGGING m: <map @aMap (1 object):
|-at 0: key 'g'
| | value:<@uint:37>>
LOGGING m: <map @aMap (1 object):
|-at 0: key 'g'
| | value:<@uint:56>>
LOGGING mm: <map @aMap (0 object):
|  override #1 (1 object):
|-at 0: key 'g'
| | value:<@uint:56>>
LOGGING v: <@uint:56>
LOGGING mm: <map @aMap (1 object):
|-at 0: key 'g'
| | value:<@uint:11>
|  override #1 (1 object):
|-at 0: key 'g'
| | value:<@uint:56>>
LOGGING v: <@uint:11>
LOGGING m: <map @aMap (1 object):
|-at 0: key 'g'
| | value:<@uint:56>>
LOGGING levelCount: <@uint:1>
LOGGING hasKeyAtLevel: <@bool:true>
LOGGING hasKeyAtLevel: <@bool:false>
LOGGING loc: <@location:nowhere:1:1>
  key 'A', value: 1
  key 'B', value: 2
  key 'C', value: 3
  key 'D', value: 4
  key 'E', value: 5
  key 'F', value: 6
  key 'G', value: 7
  key 'H', value: 8
  key 'I', value: 9
  key 'K', value: 10
  key 'L', value: 11
  key 'M', value: 12
  key 'N', value: 13
  key 'O', value: 14
  key 'P', value: 15
  key 'R', value: 16
  key 'S', value: 17
  key 'T', value: 18
  key 'U', value: 19
  key 'V', value: 20
  key 'W', value: 21
  key 'X', value: 22
  key 'Y', value: 23
  key 'Z', value: 24
  key 'a', value: 25
  key 'b', value: 26
  key 'c', value: 27
  key 'd', value: 28
  key 'e', value: 29
  key 'f', value: 30
  key 'g', value: 31
  key 'h', value: 32
  key 'i', value: 33
  key 'j', value: 34
  key 'k', value: 35
  key 'l', value: 36
  key 'm', value: 37
  key 'n', value: 38
  key 'o', value: 39
  key 'p', value: 40
  key 'q', value: 41
  key 'r', value: 42
  key 's', value: 43
  key 't', value: 44
  key 'u', value: 45
  key 'v', value: 46
  key 'w', value: 47
  key 'x', value: 48
  key 'y', value: 49
  key 'z', value: 50
*************************************** begin of function test
LOGGING r: <@uint:5>
LOGGING r: <@uint:5>
*************************************** begin of introspection test
--- Type list (102 types)
  @2lstringlist
  @2lstringlist.element
  @2stringlist
  @2stringlist.element
  @A_A
  @A_A.weak
  @B_B
  @B_B.weak
  @TestExtensionMethod
  @TestExtensionMethod.weak
  @TestExtensionSetter
  @TestExtensionSetter.weak
  @aMap
  @aMap.element
  @aMap.element?
  @abstractOverridingTestExtensionSetter
  @abstractOverridingTestExtensionSetter.weak
  @abstractTestExtensionSetter
  @abstractTestExtensionSetter.weak
  @baseClassForTypeCastInSetterCall
  @baseClassForTypeCastInSetterCall.weak
  @bigint
  @bigint?
  @bigintlist
  @bigintlist.element
  @binaryset
  @bool
  @char
  @classeA
  @classeA.weak
  @classeB
  @classeB.weak
  @classeC
  @classeC.weak
  @classeD
  @classeD.weak
  @classeE
  @classeE.weak
  @classeF
  @classeF.weak
  @classeG
  @classeG.weak
  @classeH
  @classeH.weak
  @classeH?
  @classeI
  @classeI.weak
  @complex
  @data
  @double
  @filewrapper
  @function
  @functionlist
  @functionlist.element
  @inheritedClassForTypeCastInSetterCall
  @inheritedClassForTypeCastInSetterCall.weak
  @lbigint
  @lbigintlist
  @lbigintlist.element
  @lbool
  @lchar
  @ldouble
  @location
  @lsint
  @lsint64
  @lstring
  @lstringlist
  @lstringlist.element
  @luint
  @luint64
  @luintlist
  @luintlist.element
  @myList
  @myList.element
  @myMap
  @myMap.element
  @myMap.element?
  @mySortedList
  @mySortedList.element
  @object
  @objectlist
  @objectlist.element
  @overridingTestExtensionSetter
  @overridingTestExtensionSetter.weak
  @range
  @sint
  @sint64
  @string
  @stringlist
  @stringlist.element
  @stringset
  @structTest
  @timer
  @type
  @typelist
  @typelist.element
  @uint
  @uint64
  @uint64list
  @uint64list.element
  @uintlist
  @uintlist.element
--- Function list (1 function)
LOGGING mValue: <@function:functionTest [?@uint ?@uint] -> @uint>
<@function:functionTest [?@uint ?@uint] -> @uint>  functionTest [?@uint ?@uint] -> @uint
Function 'foo' exists:false
Function 'functionTest' exists:true
LOGGING object: 
LOGGING y: <@uint:2>
LOGGING result: 
*************************************** begin of extension reader test
LOGGING s: <@string:"-3-4-4">
Carré de 9: 81
*************************************** begin of extension procs
2
*************************************** begin of extension setter test
LOGGING u: <@uint:3>
LOGGING v: <@TestExtensionSetter:[@TestExtensionSetter:<@uint:3>, <@string:"Hello World">]>
Appel @inheritedClassForTypeCastInSetterCall unSetter
*************************************** begin of mutating proc test
v = 179
v = 183
v = 752
*************************************** begin of type extension test
LOGGING Square of 7: <@uint64:49>
LOGGING Sum 1 + 2 + 3 + 4: <@uint:10>
LOGGING Hello !: <@string:"Hello !">
LOGGING v: <@uint64:49>
LOGGING u: <@uint:10>
LOGGING s: <@string:"Hello !">
LOGGING ls: <struct @lstring:<@string:"Hello3">, <@location:nowhere:1:1>>
LOGGING aList: <list @uintlist (5 objects):
|-at 0
| mValue:<@uint:1>
|-at 1
| mValue:<@uint:2>
|-at 2
| mValue:<@uint:3>
|-at 3
| mValue:<@uint:4>
|-at 4
| mValue:<@uint:81>>
*************************************** begin of string test
LOGGING command: <@string:"echo accentué">
LOGGING result: <@string:"accentué
">
*************************************** begin of range test
LOGGING s: <@string:"Range [4, 3] enumeration: 4 5 6">
LOGGING s: <@string:"Range [4, 3] reverse enumeration: 6 5 4">
*************************************** begin of extern type test
LOGGING complex: <@complex:1, -1>
LOGGING real: <@double:1>
LOGGING imaginary: <@double:-1>
*************************************** begin of @bigint test
--- construction
0
1234
-1234
1234
-1234
--- getter string
-123456789012345678901234567890
--- getter hexString
-0x18EE90FF6C373E0EE4E3F0AD2
--- getter xString
-18EE90FF6C373E0EE4E3F0AD2
123 456 789 012 345 678
-123 456 789 012 345 678
--- extract8ForUnsignedRepresentation
0x11 0x22 0x33 0x44 0x55 0x66 0x77 0x88 0x99 0xAA 0xBB 0xCC 0xDD 0xEE 0xFF
0xFF 0xEE 0xDD 0xCC 0xBB 0xAA 0x99 0x88 0x77 0x66 0x55 0x44 0x33 0x22 0x11
0x0
--- extract8ForSignedRepresentation
0x11 0x22 0x33 0x44 0x55 0x66 0x77 0x88 0x99 0xAA 0xBB 0xCC 0xDD 0xEE 0xFF 0x0
0x0 0xFF 0xEE 0xDD 0xCC 0xBB 0xAA 0x99 0x88 0x77 0x66 0x55 0x44 0x33 0x22 0x11
0xEF 0xDD 0xCC 0xBB
0xBB 0xCC 0xDD 0xEF
--- extract32ForUnsignedRepresentation
0x44332211 0x88776655 0xCCBBAA99 0xFFEEDD
0xFFEEDD 0xCCBBAA99 0x88776655 0x44332211
0x0
--- extract32ForSignedRepresentation
0x44332211 0x88776655 0xCCBBAA99 0xFFEEDD
0xFFEEDD 0xCCBBAA99 0x88776655 0x44332211
0xBBCCDDEF 0xFFFFFFAA
0xFFFFFFAA 0xBBCCDDEF
--- extract64ForUnsignedRepresentation
0x8877665544332211 0x00FFEEDDCCBBAA99
0x00FFEEDDCCBBAA99 0x8877665544332211
0x0000000000000000
--- extract64ForSignedRepresentation
0x8877665544332211 0x00FFEEDDCCBBAA99
0x00FFEEDDCCBBAA99 0x8877665544332211
0xFFFFFFAABBCCDDEF
0xFFFFFFAABBCCDDEF
--- Addition
111111111011111111100
--- Subtract
-86419753208641975320
--- Multiply
1219326311370217952237463801111263526900
--- Divide
8
-8
8
-8
-3
3
-3
--- mod
90
-90
-90
90
170
-170
-170
170
--- divideBy
80000000737 8280
-80000000737 -8280
80000000737 -8280
-80000000737 8280
--- operator <<
0x1234567890000
-0x1234567890000
8000
-8000
--- operator >>
0x1234567
-0x1234568
500
-500
4
4
3
3
1
1
0
0
-5
-5
-4
-4
-2
-2
-1
-1
--- operator &
0x220
0x4100
0x80
--- operator |
0x5335
-0x1013
-0x1
--- operator ^
0x5115
-0x5113
-0x81
0x81
--- operator ~
-0x1235
0x1233
--- bitAtIndex
NO
YES
NO
YES
NO
YES
--- setBitAtIndex
0x5234
0x10000005234
-0x5234
-0x10000005234
--- complementBitAtIndex
0x5234
-0x10000001234
2**127 - 1 = 170141183460469231731687303715884105727
(2**148 + 1) / 17 = 20988936657440586486151264256610222593863921
2**607 - 1 = 531137992816767098689588206552468627329593117727031923199444138200403559860852242739162502265229285668889329486246501015346579337652707239409519978766587351943831270835393219031728127
2**4423 - 1 = 285542542228279613901563566102164008326164238644702889199247456602284400390600653875954571505539843239754513915896150297878399377056071435169747221107988791198200988477531339214282772016059009904586686254989084815735422480409022344297588352526004383890632616124076317387416881148592486188361873904175783145696016919574390765598280188599035578448591077683677175520434074287726578006266759615970759521327828555662781678385691581844436444812511562428136742490459363212810180276096088111401003377570363545725120924073646921576797146199387619296560302680261790118132925012323046444438622308877924609373773012481681672424493674474488537770155783006880852648161513067144814790288366664062257274665275787127374649231096375001170901890786263324619578795731425693805073056119677580338084333381987500902968831935913095269821311141322393356490178488728982288156282600813831296143663845945431144043753821542871277745606447858564159213328443580206422714694913091762716447041689678070096773590429808909616750452927258000843500344831628297089902728649981994387647234574276263729694848304750917174186181130688518792748622612293341368928056634384466646326572476167275660839105650528975713899320211121495795311427946254553305387067821067601768750977866100460014602138408448021225053689054793742003095722096732954750721718115531871310231057902608580607
2**44497 - 1 = 
n = 8424432925592889329288197322308900672459420460792433
n**17 + 9 = 5422399434264617905838035661823760094533245274444778381163322644470684014556025354326572603683214512817778943220852105247435787139655288372568214529732149891821835447880048573569497586125680729772895376989310392923009802505289451440346639477090499002886487897632404404482159205141675196270103587421812160018303626150273259181572943403788480416092798350850581050570919230595268005683737038737614837979321671856048816900617661268571951951479521471895400112518905083178760328942621191118003008185389634039725069498928003319516144092876876477522701088349515402728153579589424876215920147169441412361775567424733999353906673411981711243782953359182952442225572962323946209002915406935052778318470492386590734772526878027984663942362502037680359441917676710708493149619277794975206735948258692675386240208328393435527686377693005410063448224075882352899690251043898231682422328806149679482
(n+1)**17 + 9 = 5422399434264617905838035661823760094533245274444789323239922537520926671207843171948373807364848722405938383169799967832740810014133699102588158857947796449853399140998991276341988769160437705045554401905457480485552943046998252273098940867296518716133339164378141391658854551102418625972168980457170880188131625849701314118629641314827371840077902919473761547480918873851891278837542053511854642952793770030214946239815608410085097678599730980155385376673689706123260820562487129872415958738328605933566390262552458268012491016809705845642414798888072130550082453856736868749935430898993780907624106508629867627867226341668409836001251450042540271978536177164815814791146249637452591003390521742002264005209945135187859286962886440407051945421214032859470333699515448621500276590165862439244714356984173394399924586585927200563811508612111669423809712025508253890314787725191020553
PGCD = 8936582237915716659950962253358945635793453256935559
*************************************** begin of reference classe test
7
5
*************************************** end of reference classe test
LOGGING a: <map @myMap (1 object):
|-at 0: key 'var'
| | value:<@string:"Hello">>
No warning, no error.
