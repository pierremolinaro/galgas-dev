

list @aList {
  public var @string mString
  public var @uint mInt
}

listmap @myListMap (@aList)

proc testsuite_listmap {
  message "*************************************** begin of listmap\n"
  var m = @myListMap {}
  m += !"d" !"g" !37
  m += !"a" !"b" !23
  m += !"c" !"f" !11
  m += !"a" !"c" !98
  log m
  var @uint c = [m count]
  log c
  var @stringset s = [m allKeys]
  log s
  var @stringlist sl = [m keyList]
  log sl
  var @aList aList = [m listForKey !"a"]
  log aList
#  message "--- test .= operator listmap\n" ;
  var m2 = @myListMap {}
#  m2 += !"b" !"z" !9 ;
#  m2 += !"a" !"q" !14 ;
#  m .= m2 ;
#  log m ;
  message "--- test += operator listmap\n"
  m2 = @myListMap {}
  m2 += !"b" !"w" !7
  m2 += !"e" !"r" !2
  m2 += !"b" !"x" !19
#  @myListMap mm := m . m2 ;
#  log mm ;
  message "--- test foreach for listmap\n"
  for e in m do
    log "key: " : e.key
    log "list: " : e.mList
  end
}

