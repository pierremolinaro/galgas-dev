

extern proc testsuite_hand_coded ()

list @myList {
  public let @string mValue
}

proc testsuite_list() {
  var strList = @myList []
  strList += !"a"
  strList += !"b"
  strList += !"c"
  strList += !"d"
  println ("*************************************** begin of list direct access")
  var @string s = strList.mValueAtIndex (0)
  log s
  s = strList.mValueAtIndex (1)
  log s
  s = strList.mValueAtIndex (2)
  log s
  s = strList.mValueAtIndex (3)
  log s
  !?strList.setMValueAtIndex ("z", !3)
  log strList
  println ("--- test .= operator on list")
  strList += strList
  log s
  println ("*************************************** begin of list compare")
  let aList = @myList [!"az"]
  let bList = @myList [!"az"]
  let @bool comp = aList == bList
  log comp
  println ("*************************************** begin of collection value")
  var s1 = @stringlist [!"a"]
  s1 += !"b"
  var s2 = @stringlist [!"c"]
  s2 += !"d"
  s2 += [!"e"]
  let str = s1 + s2
  log str
  let str2 = @stringlist ["a" : !"b" : !"c" : !"d" : !"e"]
  log str2
}

