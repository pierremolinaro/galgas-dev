

list @aList {
  public let @string mString
  public let @uint mInt
}

listmap @myListMap (@aList)

proc testsuite_listmap() {
  println ("*************************************** begin of listmap")
  var m = @myListMap []
  !?m.insert ("d", "g", 37)
  !?m.insert ("a", "b", 23)
  !?m.insert ("c", "f", 11)
  !?m.insert ("a", "c", 98)
  log m
  let @uint c = m.count
  log c
  let @stringset s = m.allKeys
  log s
  let @stringlist sl = m.keyList
  log sl
  let @aList aList = m.listForKey ("a")
  log aList
#  println ("--- test .= operator listmap") ;
#  var m2 = @myListMap []
#  m2 += !"b" !"z" !9 ;
#  m2 += !"a" !"q" !14 ;
#  m .= m2 ;
#  log m ;
#  println ("--- test += operator listmap")
#  !?m.insert ("b", "w", 7)
#  !?m.insert ("e", "r", 2)
#  !?m.insert ("b", "x", 19)
#  @myListMap mm := m .m2 ;
#  log mm ;
  println ("--- test foreach for listmap")
  for e in m do
    log "key: " : e.key
    log "list: " : e.mList
  end
}

