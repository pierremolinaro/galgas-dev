

abstract class @A_A {}

class @B_B : @A_A {}

abstract getter @A_A aReader ?@uint inA ??@string inB -> @string outResult

override getter @B_B aReader ?@uint inA ??@string inB -> @string outResult {
  inA ++
  outResult = inB + inA
}

getter @B_B otherReader ?@uint inA ??@string inB -> @string outResult {
  inA ++
  outResult = inB + inA + [self aReader !inA !inB] + [self aReader !inA !inB]
}

abstract class @C_C : @B_B {}

override abstract getter @C_C aReader ?@uint inA ??@string inB -> @string outResult

proc testsuite_category_readers {
  message "*************************************** begin of category reader test\n"
  @B_B b = .new
  @string s = [b otherReader !2 !"-"]
  log s
}

