Insertion Test Done
Delete Test Done
Insertion Test Done
Delete Test Done
*************************************** begin of foreach instruction test 1
  before
  do 'a'
  between
  do 'b'
  between
  do 'c'
  between
  do 'd'
  after
--- begin of foreach instruction test 2
--- begin of foreach instruction test 3
  before
  do 'a', n: 0
  between
  do 'b', n: 1
  after
--- begin of foreach instruction test 4
  before
  do 'a'
  between
  do 'b'
  after
--- begin of foreach instruction test 6
  do 'a' (idx: 0)
  do 'b' (idx: 1)
  do 'c' (idx: 2)
  do 'd' (idx: 3)
*************************************** begin of list direct access
LOGGING s: <@string:"a">
LOGGING s: <@string:"b">
LOGGING s: <@string:"c">
LOGGING s: <@string:"d">
--- test .= operator on list
LOGGING s: <@string:"d">
*************************************** begin of struct logging
LOGGING s: <struct @structTest:<@string:"az">, <@uint:34>>
*************************************** begin of map
LOGGING m: <map @aMap (1 object): 
|-at 0: key 'g' >
LOGGING m: <map @aMap (1 object): 
|-at 0: key 'g' >
LOGGING mm: <map @aMap (0 object): >
LOGGING v: <@uint:56>
LOGGING mm: <map @aMap (1 object): 
|-at 0: key 'g' >
LOGGING v: <@uint:11>
LOGGING m: <map @aMap (1 object): 
|-at 0: key 'g' >
*************************************** begin of function test
LOGGING r: <@uint:5>
LOGGING r: <@uint:5>
*************************************** begin of introspection test
--- Type list (41 types)
  @2stringlist
  @A
  @B
  @aList
  @aMap
  @application
  @binaryset
  @bool
  @char
  @data
  @double
  @filewrapper
  @function
  @functionlist
  @lbool
  @lchar
  @ldouble
  @location
  @lsint
  @lsint64
  @lstring
  @lstringlist
  @luint
  @luint64
  @luintlist
  @myList
  @myListMap
  @object
  @objectlist
  @sint
  @sint64
  @string
  @stringlist
  @stringset
  @structTest
  @type
  @typelist
  @uint
  @uint64
  @uint64list
  @uintlist
--- Function list (1 function)
LOGGING mValue: <@function:functionTest [?@uint ?@uint] -> @uint>
<@function:functionTest [?@uint ?@uint] -> @uint>  functionTest [?@uint ?@uint] -> @uint
Function 'foo' exists:false
Function 'functionTest' exists:true
LOGGING object: 
LOGGING y: <@uint:2>
LOGGING result: 
