semantics testsuite_map :

map @aMap {
  @uint value feature setter ;
  insert insertKey error message "the '%K' key is already inserted" ;
  search searchKey error message "the '%K' key is not inserted" ;
}

map @anOtherMap {
  insert insertKey error message "the '%K' key is already inserted" ;
  remove removeKey error message "the '%K' key is not inserted" ;
}

routine testsuite_map :
  message "*************************************** begin of map\n" ;
  @aMap m [emptyMap] ;
  [!?m insertKey ![@lstring new !"g" !here] !37] ;
  log m ;
  [!?m setValueForKey !56 !"g"] ;
  log m ;
  @aMap mm [mapWithMapToOverride !m] ;
  log mm ;
  @uint v ;
  [mm searchKey ![@lstring new !"g" !here] ?v] ;
  log v ; # Displays 56
  [!?mm insertKey ![@lstring new !"g" !here] !11] ;
  log mm ;
  [mm searchKey ![@lstring new !"g" !here] ?v] ;
  log v ; # Displays 11
  m := [mm overriddenMap] ;
  log m ;
  @location loc := [m locationForKey !"g"] ;
  log loc ;
#---
  @anOtherMap otherMap [emptyMap] ;
  [!?otherMap insertKey !["A" nowhere]] ;
  [!?otherMap insertKey !["B" nowhere]] ;
  [!?otherMap insertKey !["C" nowhere]] ;
  [!?otherMap insertKey !["D" nowhere]] ;
  [!?otherMap insertKey !["E" nowhere]] ;
  [!?otherMap insertKey !["F" nowhere]] ;
  [!?otherMap insertKey !["G" nowhere]] ;
  [!?otherMap insertKey !["H" nowhere]] ;
  [!?otherMap insertKey !["I" nowhere]] ;
  [!?otherMap insertKey !["K" nowhere]] ;
  [!?otherMap insertKey !["L" nowhere]] ;
  [!?otherMap insertKey !["M" nowhere]] ;
  [!?otherMap insertKey !["N" nowhere]] ;
  [!?otherMap insertKey !["O" nowhere]] ;
  [!?otherMap insertKey !["P" nowhere]] ;
  [!?otherMap insertKey !["R" nowhere]] ;
  [!?otherMap insertKey !["S" nowhere]] ;
  [!?otherMap insertKey !["T" nowhere]] ;
  [!?otherMap insertKey !["U" nowhere]] ;
  [!?otherMap insertKey !["V" nowhere]] ;
  [!?otherMap insertKey !["W" nowhere]] ;
  [!?otherMap insertKey !["X" nowhere]] ;
  [!?otherMap insertKey !["Y" nowhere]] ;
  [!?otherMap insertKey !["Z" nowhere]] ;
  foreach [otherMap allKeys] do
    [!?otherMap removeKey ![key nowhere]] ;
  end foreach ;
end routine ;

end semantics ;
