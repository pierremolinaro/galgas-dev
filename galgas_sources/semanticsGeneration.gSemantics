#---------------------------------------------------------------------------*
#                                                                           *
#  Generate headers of Builtin types                                        *
#                                                                           *
#  Copyright (C) 2010, ..., 2010 Pierre Molinaro.                           *
#                                                                           *
#  e-mail : molinaro@irccyn.ec-nantes.fr                                    *
#                                                                           *
#  This program is free software; you can redistribute it and/or modify it  *
#  under the terms of the GNU General Public License as published by the    *
#  Free Software Foundation.                                                *
#                                                                           *
#  This program is distributed in the hope it will be useful, but WITHOUT   *
#  ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or    *
#  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for *
#   more details.                                                           *
#                                                                           *
#---------------------------------------------------------------------------*

semantics semanticsGeneration :
  import "semanticsTypes.gSemantics" ;
  import "semanticsReadersEX.gSemantics" ;
  import "semanticsConstructorsEX.gSemantics" ;
  import "semanticsTypeFeatures.gSemantics" ;
  import "semanticsClassMethodsEX.gSemantics" ;
  import "semanticsInstanceMethodsEX.gSemantics" ;
  import "semanticsSemantics.gSemantics" ;
  import "semanticsDecoration.gSemantics" ;

  import semantics semanticsTypesEX in "semanticsTypesEX.gSemantics" ;
  import semantics semanticsReadersEX in "semanticsReadersEX.gSemantics" ;
  import semantics semanticsConstructorsEX in "semanticsConstructorsEX.gSemantics" ;
  import semantics semanticsTypeFeatures in "semanticsTypeFeatures.gSemantics" ;
  import semantics semanticsClassMethodsEX in "semanticsClassMethodsEX.gSemantics" ;
  import semantics semanticsInstanceMethodsEX in "semanticsInstanceMethodsEX.gSemantics" ;
  import semantics semanticsSemantics in "semanticsSemantics.gSemantics" ;
  import semantics semanticsDecoration in "semanticsDecoration.gSemantics" ;

#---------------------------------------------------------------------------*
#                                                                           *
#    P R E    D E C L A R A T I O N    G E N E R A T I O N                  *
#                                                                           *
#---------------------------------------------------------------------------*

method @semanticDeclarationForGeneration generatePredeclaration ?!@stringlist unused ioPredeclarationList :
end method ;

#---------------------------------------------------------------------------*

override method @mapDeclarationForGeneration generatePredeclaration ?!@stringlist ioPredeclarationList :
  ioPredeclarationList += ![mMapTypeName identifierRepresentation] ;
end method ;

#---------------------------------------------------------------------------*

override method @mapindexDeclarationForGeneration generatePredeclaration ?!@stringlist ioPredeclarationList :
  ioPredeclarationList += ![mMapIndexTypeName identifierRepresentation] ;
end method ;

#---------------------------------------------------------------------------*

override method @enumDeclarationForGeneration generatePredeclaration ?!@stringlist ioPredeclarationList :
  ioPredeclarationList += ![mEnumTypeName identifierRepresentation] ;
end method ;

#---------------------------------------------------------------------------*

override method @filewrapperDeclarationForGeneration generatePredeclaration ?!@stringlist unused  ioPredeclarationList :
end method ;

#---------------------------------------------------------------------------*

override method @sortedListDeclarationForGeneration generatePredeclaration ?!@stringlist ioPredeclarationList :
  ioPredeclarationList += ![mSortedListTypeName identifierRepresentation] ;
end method ;

#---------------------------------------------------------------------------*

override method @structDeclarationForGeneration generatePredeclaration ?!@stringlist ioPredeclarationList :
  ioPredeclarationList += ![mStructTypeName identifierRepresentation] ;
end method ;

#---------------------------------------------------------------------------*

override method @listDeclarationForGeneration generatePredeclaration ?!@stringlist ioPredeclarationList :
  ioPredeclarationList += ![mListTypeName identifierRepresentation] ;
end method ;

#---------------------------------------------------------------------------*

override method @classDeclarationForGeneration generatePredeclaration ?!@stringlist ioPredeclarationList :
  ioPredeclarationList += ![mClassTypeName identifierRepresentation] ;
end method ;

#---------------------------------------------------------------------------*

override method @listmapDeclarationForGeneration generatePredeclaration ?!@stringlist ioPredeclarationList :
  ioPredeclarationList += ![mListmapTypeName identifierRepresentation] ;
end method ;

#---------------------------------------------------------------------------*
#                                                                           *
#           G E N E R A T I O N    F I L E W R A P P E R S                  *
#                                                                           *
#---------------------------------------------------------------------------*

filewrapper typeGenerationTemplate in "../generation_templates/semantic_generation" {
} {
  template semanticFileHeader "semantic-file.h.gTemplate"
    ?@string COMPONENT_NAME
    ?@stringlist SEMANTIC_DECLARATION_LIST # For generating class predeclarations
  ;
  template semanticFileImplementation "semantic-file.cpp.gTemplate"
    ?@string COMPONENT_NAME
  ;
#--- List
  template listTypeHeader "GALGAS_list.h.gTemplate"
    ?@string TYPE_NAME
    ?@attributeList ATTRIBUTE_LIST
  ;
  template listTypeImplementation "GALGAS_list.cpp.gTemplate"
    ?@string TYPE_NAME
    ?@attributeList ATTRIBUTE_LIST
  ;
#--- Sorted List
  template sortedlistTypeHeader "GALGAS_sortedlist.h.gTemplate"
    ?@string TYPE_NAME
    ?@attributeList ATTRIBUTE_LIST
  ;
  template sortedlistTypeImplementation "GALGAS_sortedlist.cpp.gTemplate"
    ?@string TYPE_NAME
    ?@attributeList ATTRIBUTE_LIST
    ?@sortDescriptorList SORT_ATTRIBUTE_LIST
  ;

#--- enum
  template enumTypeHeader "GALGAS_enum.h.gTemplate"
    ?@string TYPE_NAME
    ?@lstringlist CONSTANT_LIST
    ?@enumMessageListAST ENUM_MESSAGE_LIST
  ;
  template enumTypeImplementation "GALGAS_enum.cpp.gTemplate"
    ?@string TYPE_NAME
    ?@lstringlist CONSTANT_LIST
    ?@enumMessageListAST ENUM_MESSAGE_LIST
  ;
#--- struct
  template structTypeHeader "GALGAS_struct.h.gTemplate"
    ?@string TYPE_NAME
    ?@attributeInCollectionListAST ATTRIBUTE_LIST
  ;
  template structTypeImplementation "GALGAS_struct.cpp.gTemplate"
    ?@string TYPE_NAME
    ?@attributeInCollectionListAST ATTRIBUTE_LIST
  ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    C O D E    G E N E R A T I O N                                         *
#                                                                           *
#---------------------------------------------------------------------------*

abstract method @semanticDeclarationAST generateCode
  ?!@semanticContextEX unused ioSemanticContext
  ?!@string unused ioHeaderString
  ?!@string unused ioImplementationString
;

#---------------------------------------------------------------------------*

override method @mapDeclarationAST generateCode
  ?!@semanticContextEX unused ioSemanticContext
  ?!@string unused ioHeaderString
  ?!@string unused ioImplementationString
:
  message "@mapDeclarationAST generateCode\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @mapindexDeclarationAST generateCode
  ?!@semanticContextEX unused ioSemanticContext
  ?!@string unused ioHeaderString
  ?!@string unused ioImplementationString
:
  message "@mapindexDeclarationAST generateCode\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @enumDeclarationAST generateCode
  ?!@semanticContextEX unused ioSemanticContext
  ?!@string ioHeaderString
  ?!@string ioImplementationString
:
  ioHeaderString .= [filewrapper typeGenerationTemplate.enumTypeHeader
    ![mEnumTypeName identifierRepresentation]
    !mConstantList
    !mEnumMessageList
 ] ;
  ioImplementationString .= [filewrapper typeGenerationTemplate.enumTypeImplementation
    ![mEnumTypeName identifierRepresentation]
    !mConstantList
    !mEnumMessageList
 ] ;
end method ;

#---------------------------------------------------------------------------*

override method @filewrapperDeclarationAST generateCode
  ?!@semanticContextEX unused ioSemanticContext
  ?!@string unused ioHeaderString
  ?!@string unused ioImplementationString
:
  message "@filewrapperDeclarationAST.semanticAnalysis [in semanticCompilation.gSemantics]\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @sortedListDeclarationAST generateCode
  ?!@semanticContextEX ioSemanticContext
  ?!@string ioHeaderString
  ?!@string ioImplementationString
:
  @attributeList attributeList [emptyList] ;
  @indexAttributeMap indexAttributeMap [emptyMap] ;
  foreach mAttributeList do
    @typeMapIndex attributeTypeIndex ;
    [@typeMapIndex makeRegularIndex !mAttributeTypeName !?ioSemanticContext.mTypeMap ?attributeTypeIndex] ;
    attributeList +=
      !attributeTypeIndex
      !mAttributeName
    ;
    [!?indexAttributeMap insertKey !mAttributeName ![indexAttributeMap count]] ;
  end foreach ;
  @sortDescriptorList sortAttributeList [emptyList] ;
  foreach mSortDescriptorList do
    @uint attributeIndex ;
    [indexAttributeMap searchKey !mSortedAttributeName ?attributeIndex] ;
    sortAttributeList += !attributeIndex !mAscending ;
  end foreach ;
  @sortedListDeclarationAST tt := self ; # Bug in GALGAS 1
  ioHeaderString .= [filewrapper typeGenerationTemplate.sortedlistTypeHeader
    ![[tt mSortedListTypeName] identifierRepresentation]
    !attributeList
 ] ;
  ioImplementationString .= [filewrapper typeGenerationTemplate.sortedlistTypeImplementation
    ![[tt mSortedListTypeName] identifierRepresentation]
    !attributeList
    !sortAttributeList
 ] ;
end method ;

#---------------------------------------------------------------------------*

override method @structDeclarationAST generateCode
  ?!@semanticContextEX unused ioSemanticContext
  ?!@string ioHeaderString
  ?!@string ioImplementationString
:
  ioHeaderString .= [filewrapper typeGenerationTemplate.structTypeHeader
    ![mStructTypeName identifierRepresentation]
    !mAttributeList
 ] ;
  ioImplementationString .= [filewrapper typeGenerationTemplate.structTypeImplementation
    ![mStructTypeName identifierRepresentation]
    !mAttributeList
] ;
end method ;

#---------------------------------------------------------------------------*

override method @listDeclarationAST generateCode
  ?!@semanticContextEX ioSemanticContext
  ?!@string ioHeaderString
  ?!@string ioImplementationString
:
  @attributeList attributeList [emptyList] ;
  foreach mAttributeList do
    @typeMapIndex attributeTypeIndex ;
    [@typeMapIndex makeRegularIndex !mAttributeTypeName !?ioSemanticContext.mTypeMap ?attributeTypeIndex] ;
    attributeList +=
      !attributeTypeIndex
      !mAttributeName
    ;
  end foreach ;
  @listDeclarationAST tt := self ; # Bug in GALGAS 1
  ioHeaderString .= [filewrapper typeGenerationTemplate.listTypeHeader
    ![[tt mListTypeName] identifierRepresentation]
    !attributeList
 ] ;
  ioImplementationString .= [filewrapper typeGenerationTemplate.listTypeImplementation
    ![[tt mListTypeName] identifierRepresentation]
    !attributeList
 ] ;
end method ;

#---------------------------------------------------------------------------*

override method @classDeclarationAST generateCode
  ?!@semanticContextEX unused ioSemanticContext
  ?!@string unused ioHeaderString
  ?!@string unused ioImplementationString
:
  message "@classDeclarationAST generateCode\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @externRoutineDeclarationAST generateCode
  ?!@semanticContextEX unused ioSemanticContext
  ?!@string unused ioHeaderString
  ?!@string unused ioImplementationString
:
  message "@externRoutineDeclarationAST generateCode\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @routineDeclarationAST generateCode
  ?!@semanticContextEX unused ioSemanticContext
  ?!@string unused ioHeaderString
  ?!@string unused ioImplementationString
:
  message "@routineDeclarationAST generateCode\n" ;
#  foreach mRoutineInstructionList do
#    [mInstruction instructionSemanticAnalysis !inSemanticContext] ;
#  end foreach ;
end method ;

#---------------------------------------------------------------------------*

override method @externFunctionDeclarationAST generateCode
  ?!@semanticContextEX unused ioSemanticContext
  ?!@string unused ioHeaderString
  ?!@string unused ioImplementationString
:
  message "@externFunctionDeclarationAST generateCode\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @functionDeclarationAST generateCode
  ?!@semanticContextEX unused ioSemanticContext
  ?!@string unused ioHeaderString
  ?!@string unused ioImplementationString
:
  message "@functionDeclarationAST generateCode\n" ;
#  foreach mFunctionInstructionList do
#    [mInstruction instructionSemanticAnalysis !inSemanticContext] ;
#  end foreach ;
end method ;

#---------------------------------------------------------------------------*

override method @lazyFunctionDeclarationAST generateCode
  ?!@semanticContextEX unused ioSemanticContext
  ?!@string unused ioHeaderString
  ?!@string unused ioImplementationString
:
  message "@lazyFunctionDeclarationAST generateCode\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @listmapDeclarationAST generateCode
  ?!@semanticContextEX unused ioSemanticContext
  ?!@string unused ioHeaderString
  ?!@string unused ioImplementationString
:
  message "@listmapDeclarationAST generateCode\n" ;
end method ;

#---------------------------------------------------------------------------*

end semantics ;