#---------------------------------------------------------------------------*
#                                                                           *
#  'gui' component parser, as model builder                                 *
#                                                                           *
#  Copyright (C) 2007, ..., 2007 Pierre Molinaro.                           *
#                                                                           *
#  e-mail : molinaro@irccyn.ec-nantes.fr                                    *
#                                                                           *
#  This program is free software; you can redistribute it and/or modify it  *
#  under the terms of the GNU General Public License as published by the    *
#  Free Software Foundation.                                                *
#                                                                           *
#  This program is distributed in the hope it will be useful, but WITHOUT   *
#  ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or    *
#  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for *
#   more details.                                                           *
#                                                                           *
#---------------------------------------------------------------------------*

syntax guiModelBuilder :

import lexique galgas_scanner in "galgas_scanner.gLexique" ;
import semantics guiMetamodel in "guiMetamodel.gSemantics" ;

#---------------------------------------------------------------------------*

nonterminal <gui_component_start_symbol> !@guiComponentRoot outGuiComponentRoot ;

#---------------------------------------------------------------------------*
#                                                                           *
#   G U I    C O M P O N E N T                                              *
#                                                                           *
#---------------------------------------------------------------------------*

rule <gui_component_start_symbol>
  !@guiComponentRoot outGuiComponentRoot
:
  $gui$ ;
  $identifier$ ?@lstring mGUIName ;
  $literal_string$ ?@lstring mGUIClass ;
  $:$ ;
#--- Loop on import declarations
  @lstringlist importedOptionList [emptyList] ;
  repeat
  while
    $import$ ;
    $literal_string$ ?@lstring optionReference ;
    importedOptionList += !optionReference ;
    $;$ ;
  while
    $import__$ ;
    warning here: "when source file extension is '.gGui', the 'import__' construct is obsolete and has no effect: you can delete it" ;
    $literal_string$ ? * ;
    $;$ ;
  while
    $import$ ;
    warning here: "when source file extension is '.gGui', the 'import' construct is obsolete and has no effect: you can delete it" ;
    select
      $semantics$ ;
    or
      $lexique$ ;
   or
      $grammar$ ;
    or
      $syntax$ ;
    or
      $option$ ;
    end select ;
    $identifier$ ?* ;
    $in$ ;
    $literal_string$ ? * ;
    $;$ ;
  end repeat ;
#--- Attributes and labels
  @guiSimpleAttributeList simpleGlobalAttributes [emptyList] ;
  @withLexiqueList withLexiqueList [emptyList] ;
  repeat
  while
    $identifier$ ?* ;
    warning here: "when source file extension is '.gGui', this construct outside a 'with lexique' is obsolete and has no effect: you can delete it" ;
    $literal_string$ ?* ;
    $:$ ;
    repeat
      $literal_string$ ?* ;
    while
    end repeat ;
    $;$ ;
  while
    $identifier$ ?@lstring mKey ;
    $:$ ;
    @lstring mValue [new !"" !here] ;
    repeat
      $literal_string$ ?@lstring value ;
      mValue := [@lstring new ![mValue string] . [value string] ![value location]] ;
    while
    end repeat ;
    $;$ ;
    simpleGlobalAttributes += !mKey !mValue ;
  while
    $label$ ;
    warning here: "when source file extension is '.gGui', the 'label' construct outside a 'with lexique' is obsolete and has no effect: you can delete it" ;
    $terminal$ ?* ;
    $,$ ;
    $terminal$ ?* ;
    $;$ ;
  while
    $with$ ;
    $lexique$ ;
    $literal_string$ ?@lstring lexiqueReference ;
    @guiLabelList labels [emptyList] ;
    @guiSimpleAttributeList simpleAttributes [emptyList] ;
    @guiCompoundAttributeList compoundAttributes [emptyList] ;
    ${$ ;
    repeat
    while
      $label$ ;
      @lstringlist terminalList [emptyList] ;
      repeat
        $terminal$ ? @lstring terminal ;
        terminalList += !terminal ;
      while
        $,$ ;
      end repeat ;
      $;$ ;
      labels += !terminalList ;
    while
      $identifier$ ?@lstring key ;
      $literal_string$ ?@lstring name ;
      $:$ ;
      @lstring value [new !"" !here] ;
      repeat
        $literal_string$ ?@lstring v ;
        value := [@lstring new ![value string] . [v string] ![v location]] ;
      while
      end repeat ;
      $;$ ;
      compoundAttributes += !key !name !value ;
    while
      $identifier$ ?@lstring name ;
      $:$ ;
      $literal_string$ ?@lstring value ;
      $;$ ;
      simpleAttributes += !name !value ;
    end repeat ;
    $}$ ;
    withLexiqueList += 
      !lexiqueReference
      !labels
      !simpleAttributes
      !compoundAttributes
    ;
  end repeat ;
#---
  $end$ ;
  $gui$ ;
  $;$ ;
  outGuiComponentRoot := [@guiComponentRoot new
    !mGUIName
    !mGUIClass
    !importedOptionList
    !simpleGlobalAttributes
    !withLexiqueList
  ] ;
end rule ;

#---------------------------------------------------------------------------*

end syntax ;