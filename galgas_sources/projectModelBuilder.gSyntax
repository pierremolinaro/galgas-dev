#---------------------------------------------------------------------------*
#                                                                           *
#  'project' model builder                                                  *
#                                                                           *
#  Copyright (C) 2007, ..., 2007 Pierre Molinaro.                           *
#                                                                           *
#  e-mail : molinaro@irccyn.ec-nantes.fr                                    *
#                                                                           *
#  This program is free software; you can redistribute it and/or modify it  *
#  under the terms of the GNU General Public License as published by the    *
#  Free Software Foundation.                                                *
#                                                                           *
#  This program is distributed in the hope it will be useful, but WITHOUT   *
#  ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or    *
#  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for *
#   more details.                                                           *
#                                                                           *
#---------------------------------------------------------------------------*

syntax projectModelBuilder :
with "galgas_scanner.gLexique" ;

import lexique galgas_scanner in "galgas_scanner.gLexique" ;
import semantics projectMetamodel in "projectMetamodel.gSemantics" ;

#---------------------------------------------------------------------------*

nonterminal <project_component_start_symbol>
  !@projectSourceList outProjectSourceList
  !@lstring outProjectName
  !@location outEndOfSourceFile
;

#---------------------------------------------------------------------------*

rule <project_component_start_symbol>
  !@projectSourceList outProjectSourceList
  !@lstring outProjectName
  !@location outEndOfSourceFile
:
  $project$ ;
  $identifier$ ? outProjectName ;
  $:$ ;
  outProjectSourceList := [@projectSourceList emptyList] ;
  repeat
  while
    @sourceFileKind sourceFileKind ;
    select
      $extern$ ;
      sourceFileKind := [@sourceFileKind externSourceFile] ;
    or
      $gui$ ;
      sourceFileKind := [@sourceFileKind guiSourceFile] ;
    or
      $lexique$ ;
      sourceFileKind := [@sourceFileKind lexiqueSourceFile] ;
    or
      $option$ ;
      sourceFileKind := [@sourceFileKind optionSourceFile] ;
    or
      $semantics$ ;
      sourceFileKind := [@sourceFileKind semanticsSourceFile] ;
    or
      $syntax$ ;
      sourceFileKind := [@sourceFileKind syntaxSourceFile] ;
    or
      $grammar$ ;
      sourceFileKind := [@sourceFileKind grammarSourceFile] ;
    or
      $program$ ;
      sourceFileKind := [@sourceFileKind programSourceFile] ;
    end select ;
    $literal_string$ ?@lstring filePath ;
  #--- Targets
    @lstringlist targetList [emptyList] ;
    select
    or
      $:$ ;
      repeat
        $identifier$ ? @lstring targetName ;
        targetList += !targetName ;
      while
        $,$ ;
      end repeat ;
    end select ;
    $;$ ;
    outProjectSourceList +=
      !sourceFileKind
      !filePath
      !targetList
    ;
  end repeat ;
  $end$ ;
  $project$ ;
  outEndOfSourceFile := here ;
  $;$ ;
end rule ;

#---------------------------------------------------------------------------*

end syntax ;