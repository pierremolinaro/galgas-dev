#---------------------------------------------------------------------------*
#                                                                           *
#  metamodel that defines expression                                        *
#                                                                           *
#  Copyright (C) 2007, ..., 2007 Pierre Molinaro.                           *
#                                                                           *
#  e-mail : molinaro@irccyn.ec-nantes.fr                                    *
#                                                                           *
#  This program is free software; you can redistribute it and/or modify it  *
#  under the terms of the GNU General Public License as published by the    *
#  Free Software Foundation.                                                *
#                                                                           *
#  This program is distributed in the hope it will be useful, but WITHOUT   *
#  ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or    *
#  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for *
#   more details.                                                           *
#                                                                           *
#---------------------------------------------------------------------------*

abstract metamodel parameterArgumentMetamodel extends expressionMetamodel :
import "commonSemantics.gSemantics" ;
import semantics commonSemantics in "commonSemantics.gSemantics" ;
import metamodel expressionMetamodel in "expressionMetamodel.gMetamodel" ;

#---------------------------------------------------------------------------*

entity @formalParameters {
  @formalParameter [] mFormalParameterList ;
}

#---------------------------------------------------------------------------*

entity @formalParameter {
  @formalArgumentPassingMode mFormalParameterPassingMode ;
  @lstring mFormalParameterTypeName ;
  @lstring mFormalParameterName ;
  @bool mIsUnused ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#  A C T U A L    P A R A M E T E R                                         *
#                                                                           *
#---------------------------------------------------------------------------*

abstract entity @actualParameter {
}

#---------------------------------------------------------------------------*

entity @outputActualParameter extends @actualParameter {
  @semanticExpression mOutputActualParameterExpression ;
}

#---------------------------------------------------------------------------*

entity @outputInputActualParameter extends @actualParameter {
  @lstring mOutputInputActualParameterName ;
}

#---------------------------------------------------------------------------*

entity @inputActualParameter extends @actualParameter {
  @lstring mInputActualParameterName ;
}

#---------------------------------------------------------------------------*

entity @inputJokerActualParameter extends @actualParameter {
}

#---------------------------------------------------------------------------*

entity @actualParameters {
  @actualParameter [] mActualParameter ;
}

#---------------------------------------------------------------------------*

end metamodel ;
