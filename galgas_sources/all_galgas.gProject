#---------------------------------------------------------------------------*
#                                                                           *
#  Compile all galgas sources                                               *
#                                                                           *
#  Copyright (C) 1997, ..., 2013 Pierre Molinaro.                           *
#                                                                           *
#  e-mail : molinaro@irccyn.ec-nantes.fr                                    *
#                                                                           *
#  This program is free software; you can redistribute it and/or modify it  *
#  under the terms of the GNU General Public License as published by the    *
#  Free Software Foundation.                                                *
#                                                                           *
#  This program is distributed in the hope it will be useful, but WITHOUT   *
#  ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or    *
#  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for *
#   more details.                                                           *
#                                                                           *
#---------------------------------------------------------------------------*

project all_galgas (2:5:4) -> "galgas" :
#  feature "multi-threading" ;
  feature libpmAtPath : "../libpm" ;
#--- Targets
  feature "makefile_macosx" ;                                                                     
  feature "makefile_unix" ;
  feature "makefile_i386_linux_on_macosx" ;
  feature "makefile_x86_64_linux_on_macosx" ;
  feature "makefile_mingw_on_macosx" ;
  feature "makefile_msys_on_win32" ;

#--- Command Line Options
  option "galgas_cli_options.gOption" ;

#--- Common Scanner
  lexique "galgas_scanner.gLexique" ; 

#--- Cocoa Interface
  gui      "cocoaGalgas.gGui" ;

#--- Project Creation
  semantics "projectCreation.gSemantics" ;

#--- Template
  lexique   "galgasTemplateScanner.gLexique" ;
  semantics "templateTypesForAST.gSemantics" ;
  syntax    "templateSyntax.gSyntax" ;
  grammar   "templateGrammar.gGrammar" ;
  semantics "templateDecoratedTypes.gSemantics" ;
  semantics "templateAnalysis.gSemantics" ;
  semantics "templateCodeGeneration.gSemantics" ;
 
#--- Lexique Component
  semantics "lexiqueTypesForAST.gSemantics" ;
  syntax    "lexiqueSyntax.gSyntax" ;
  grammar   "lexiqueLL1grammar.gGrammar" ;
  semantics "lexiqueSemantics.gSemantics" ;
  semantics "predefinedLexicalActions.gSemantics" ;
  semantics "lexiqueGeneration.gSemantics" ;
  semantics "lexiqueCocoaGeneration.gSemantics" ;
  semantics "lexiqueCompilation.gSemantics" ;

#--- Option Component
  semantics "optionTypesForAST.gSemantics" ;
  syntax    "optionSyntax.gSyntax" ;
  grammar   "optionLL1grammar.gGrammar" ;
  semantics "optionSemantics.gSemantics" ;
  semantics "optionCompilation.gSemantics" ;

#--- GUI component
  semantics "guiTypesForAST.gSemantics" ;
  syntax    "guiSyntax.gSyntax" ;
  grammar   "guiGrammar.gGrammar" ;
  semantics "guiCompilation.gSemantics" ;

#--- All AST types
  semantics "allASTTypes.gSemantics" ;

#--- Semantics Component
  semantics "semanticsTypesForAST.gSemantics" ;
  syntax    "expressionSyntax.gSyntax" ;
  syntax    "parameterArgumentSyntax.gSyntax" ;
  syntax    "semanticInstructionsSyntax.gSyntax" ;
  syntax    "semanticDeclarationsSyntax.gSyntax" ;
  syntax    "semanticsComponent.gSyntax" ;
  grammar   "semanticsSLRgrammar.gGrammar" ;
  semantics "semanticsTypes.gSemantics" ;
  semantics "semanticsTypeFeatures.gSemantics" ;
  semantics "semanticsConstructors.gSemantics" ;
  semantics "semanticsReaders.gSemantics" ;
  semantics "semanticsModifiers.gSemantics" ;
  semantics "semanticsInstanceMethods.gSemantics" ;
  semantics "semanticsClassMethods.gSemantics" ;
  semantics "semanticContext.gSemantics" ;
  semantics "semanticsDecoratedTypes.gSemantics" ;
  semantics "semanticExpressionAnalysis.gSemantics" ;
  semantics "semanticInstructionsAnalysis.gSemantics" ;
  semantics "semanticAnalysis.gSemantics" ;
  semantics "semanticExpressionGeneration.gSemantics" ;
  semantics "semanticInstructionGeneration.gSemantics" ;
  semantics "semanticGeneration.gSemantics" ;
  semantics "semanticsCompilation.gSemantics" ;
  semantics "predefinedTypes.gSemantics" ;

#--- Syntax Component
  semantics "syntaxMetamodel.gSemantics" ;
  syntax    "syntaxModelBuilder.gSyntax" ;
  grammar   "syntaxSLRgrammar.gGrammar" ;
  semantics "syntaxSignature.gSemantics" ;
  semantics "semanticAnalysisOfSyntaxComponent.gSemantics" ;
  semantics "syntaxCompilation.gSemantics" ;

#--- Grammar component
  semantics "grammarMetamodel.gSemantics" ;
  syntax    "grammarModelBuilder.gSyntax" ;
  grammar   "grammarLL1grammar.gGrammar" ;
  semantics "grammarSemantics.gSemantics" ;
  semantics "grammarCompilation.gSemantics" ;

#--- Program component
  semantics "programMetamodel.gSemantics" ;
  syntax    "programModelBuilder.gSyntax" ;
  grammar   "programSLRgrammar.gGrammar" ;
  semantics "programComponentCompilation.gSemantics" ;

#--- Main program
  program "galgas_prgm.gProgram" ;

#--- Project component
  semantics "targetGeneration.gSemantics" ;
  semantics "projectMetamodel.gSemantics" ;
  semantics "baseForXcodeProjectGeneration.gSemantics" ;
  semantics "XcodeProjectGeneration.gSemantics" ;
  syntax    "projectModelBuilder.gSyntax" ;
  grammar   "projectLL1grammar.gGrammar" ;
  semantics "projectGlobalCheckings.gSemantics" ;
  semantics "libpmHandling.gSemantics" ;

#--- Hand coded sources
  extern "cDecisionTableElement.cpp" ;
  extern "cVocabulary.cpp" ;
  extern "buildPureBNFgrammar.cpp" ;
  extern "empty_strings_computations.cpp" ;
  extern "follow_by_empty_computation.cpp" ;
  extern "grammarComputations.cpp" ;
  extern "printOriginalGrammar.cpp" ;
  extern "useful_symbols_computations.cpp" ;
  extern "FIRST_computations.cpp" ;
  extern "FOLLOW_computations.cpp" ;
  extern "LL1_computations.cpp" ;
  extern "LR1_computations.cpp" ;
  extern "SLR_computations.cpp" ;
end project ;

#---------------------------------------------------------------------------*
