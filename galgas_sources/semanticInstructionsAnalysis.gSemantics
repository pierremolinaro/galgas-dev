#---------------------------------------------------------------------------*
#                                                                           *
#  metamodel that defines expression                                        *
#                                                                           *
#  Copyright (C) 2007, ..., 2010 Pierre Molinaro.                           *
#                                                                           *
#  e-mail : molinaro@irccyn.ec-nantes.fr                                    *
#                                                                           *
#  This program is free software; you can redistribute it and/or modify it  *
#  under the terms of the GNU General Public License as published by the    *
#  Free Software Foundation.                                                *
#                                                                           *
#  This program is distributed in the hope it will be useful, but WITHOUT   *
#  ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or    *
#  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for *
#   more details.                                                           *
#                                                                           *
#---------------------------------------------------------------------------*

semantics semanticInstructionsAnalysis :
  import "semanticsDecoratedTypes.gSemantics" ;
  import semantics semanticsDecoratedTypes in "semanticsDecoratedTypes.gSemantics" ;

#---------------------------------------------------------------------------*
#                                                                           *
#    V A R I A B L E    M A P                                               *
#                                                                           *
#---------------------------------------------------------------------------*

map @variableMap {
  @unifiedTypeMapProxy mTypeProxy ;
  @string mNamePrefix ;

#--- Used local constant
  state usedLocalConstant {
    readAccess      -> usedLocalConstant
    writeAccess     -> usedLocalConstant error "a constant cannot be written"
    readWriteAccess -> usedLocalConstant error "a constant cannot be written"
    dropAccess      -> usedLocalConstant error "a constant cannot be drop"
  }

#--- Local constant
  state localConstant warning "unused local constant" {
    readAccess      -> usedLocalConstant
    writeAccess     -> usedLocalConstant error "a constant cannot be written"
    readWriteAccess -> usedLocalConstant error "a constant cannot be written"
    dropAccess      -> usedLocalConstant error "a constant cannot be drop"
  }

#--- Local variable
  state undefinedLocalVariable warning "unused local variable" {
    readAccess      -> undefinedLocalVariable error "an undefined local variable cannot be read"
    writeAccess     -> definedLocalVariable
    readWriteAccess -> undefinedLocalVariable error "an undefined local variable cannot be read"
    dropAccess      -> undefinedLocalVariable warning "the local variable has no value"
  }
  state definedLocalVariable warning "unused local variable value" {
    readAccess      -> usedLocalVariable
    writeAccess     -> definedLocalVariable warning "the value has been changed without any read"
    readWriteAccess -> usedLocalVariable
    dropAccess      -> droppedLocalVariable warning "the local variable has been dropped without any read"
  }
  state usedLocalVariable {
    readAccess      -> usedLocalVariable
    writeAccess     -> definedLocalVariable
    readWriteAccess -> definedLocalVariable
    dropAccess      -> droppedLocalVariable
  }
  state droppedLocalVariable {
    readAccess      -> droppedLocalVariable error "a dropped local variable cannot be read"
    writeAccess     -> definedLocalVariable
    readWriteAccess -> definedLocalVariable error "a dropped local variable cannot be read"
    dropAccess      -> droppedLocalVariable warning "the local variable is already dropped"
  }

#--- Output formal parameter
  state undefinedOutputFormalParameter error "undefined output formal parameter" {
    readAccess      -> undefinedOutputFormalParameter error "an undefined output formal parameter cannot be read"
    writeAccess     -> definedOutputFormalParameter
    readWriteAccess -> undefinedOutputFormalParameter error "an undefined output formal parameter cannot be read"
    dropAccess      -> undefinedOutputFormalParameter warning "the output formal parameter has no value"
  }
  state definedOutputFormalParameter {
    readAccess      -> definedOutputFormalParameter
    writeAccess     -> definedOutputFormalParameter
    readWriteAccess -> definedOutputFormalParameter
    dropAccess      -> undefinedOutputFormalParameter
  }

#--- Input/Output formal parameter
  state unusedInputOutputFormalParameter warning "the input/output formal parameter is unused" {
    readAccess      -> usedInputOutputFormalParameter
    writeAccess     -> usedInputOutputFormalParameter
    readWriteAccess -> usedInputOutputFormalParameter
    dropAccess      -> droppedInputOutputFormalParameter
  }
  state usedInputOutputFormalParameter {
    readAccess      -> usedInputOutputFormalParameter
    writeAccess     -> usedInputOutputFormalParameter
    readWriteAccess -> usedInputOutputFormalParameter
    dropAccess      -> droppedInputOutputFormalParameter
  }
  state droppedInputOutputFormalParameter error "the input/ouput formal argument should be valuated at the end of the routine" {
    readAccess      -> droppedInputOutputFormalParameter error "a dropped input/output formal argument cannot be read"
    writeAccess     -> usedInputOutputFormalParameter
    readWriteAccess -> droppedInputOutputFormalParameter error "a dropped input/output formal argument cannot be read"
    dropAccess      -> droppedInputOutputFormalParameter warning "the input/output formal argument is already dropped"
  }

#--- Input/Output formal parameter declared as unused
  state inputOutputFormalParameterDeclaredAsUnused {
    readAccess      -> usedInputOutputFormalParameter warning "the input/output formal parameter has been declared as unused"
    writeAccess     -> usedInputOutputFormalParameter warning "the input/output formal parameter has been declared as unused"
    readWriteAccess -> usedInputOutputFormalParameter warning "the input/output formal parameter has been declared as unused"
    dropAccess      -> droppedInputOutputFormalParameter warning "the input/output formal parameter has been declared as unused"
  }

#--- Constant input formal parameter
  state constantInputFormalParameter warning "the constant input formal parameter is not used and is not declared as unused" {
    readAccess      -> usedConstantInputFormalParameter
    writeAccess     -> usedConstantInputFormalParameter error "a constant input formal parameter cannot be written"
    readWriteAccess -> usedConstantInputFormalParameter error "a constant input formal parameter cannot be written"
    dropAccess      -> usedConstantInputFormalParameter error "a constant input formal parameter cannot be dropped"
  }
  state usedConstantInputFormalParameter {
    readAccess      -> usedConstantInputFormalParameter
    writeAccess     -> usedConstantInputFormalParameter error "a constant input formal parameter cannot be written"
    readWriteAccess -> usedConstantInputFormalParameter error "a constant input formal parameter cannot be written"
    dropAccess      -> usedConstantInputFormalParameter error "a constant input formal parameter cannot be dropped"
  }

#--- Constant input formal parameter declared as unused
  state constantInputFormalParameterDeclaredAsUnused {
    readAccess      -> usedConstantInputFormalParameter warning "the constant input formal parameter is declared as unused"
    writeAccess     -> usedConstantInputFormalParameter error "a constant input formal parameter cannot be written"
    readWriteAccess -> usedConstantInputFormalParameter error "a constant input formal parameter cannot be written"
    dropAccess      -> usedConstantInputFormalParameter error "a constant input formal parameter cannot be dropped"
  }

#--- Input formal parameter
  state inputFormalParameter warning "the input formal parameter is not used and is not declared as unused" {
    readAccess      -> usedInputFormalParameter
    writeAccess     -> usedInputFormalParameter
    readWriteAccess -> usedInputFormalParameter
    dropAccess      -> droppedInputFormalParameter
  }
  state usedInputFormalParameter {
    readAccess      -> usedInputFormalParameter
    writeAccess     -> usedInputFormalParameter
    readWriteAccess -> usedInputFormalParameter
    dropAccess      -> droppedInputFormalParameter
  }
  state droppedInputFormalParameter {
    readAccess      -> droppedInputFormalParameter error "a dropped input formal parameter cannot be read"
    writeAccess     -> usedInputFormalParameter
    readWriteAccess -> droppedInputFormalParameter error "a dropped input formal parameter cannot be read"
    dropAccess      -> droppedInputFormalParameter warning "the input formal parameter is already dropped"
  }

#--- Input formal parameter declared as unused
  state inputFormalParameterDeclaredAsUnused {
    readAccess      -> usedInputFormalParameter warning "the input formal parameter is declared as unused"
    writeAccess     -> usedInputFormalParameter warning "the input formal parameter is declared as unused"
    readWriteAccess -> usedInputFormalParameter warning "the input formal parameter is declared as unused"
    dropAccess      -> droppedInputFormalParameter warning "the input formal parameter is declared as unused"
  }

#--- Insert methods 
  insert insertLocalVariable state undefinedLocalVariable error message "redefinition of '%K' variable (previous declaration was in %L)" ;
  insert insertLocalConstant state localConstant error message "redefinition of '%K' variable (previous declaration was in %L)" ;
  insert insertUsedLocalConstant state usedLocalConstant error message "redefinition of '%K' variable (previous declaration was in %L)" ;
  insert insertInputFormalArgument state inputFormalParameter error message "redefinition of '%K' variable (previous declaration was in %L)" ;
  insert insertInputFormalArgumentDeclaredAsUnused state inputFormalParameterDeclaredAsUnused error message "redefinition of '%K' variable (previous declaration was in %L)" ;
  insert insertConstantInputFormalArgument state constantInputFormalParameter error message "redefinition of '%K' variable (previous declaration was in %L)" ;
  insert insertConstantInputFormalArgumentDeclaredAsUnused state constantInputFormalParameterDeclaredAsUnused error message "redefinition of '%K' variable (previous declaration was in %L)" ;
  insert insertOutputFormalArgument state undefinedOutputFormalParameter error message "redefinition of '%K' variable (previous declaration was in %L)" ;
  insert insertInputOutputFormalArgument state unusedInputOutputFormalParameter error message "redefinition of '%K' variable (previous declaration was in %L)" ;
  insert insertInputOutputFormalArgumentDeclaredAsUnused state inputOutputFormalParameterDeclaredAsUnused error message "redefinition of '%K' variable (previous declaration was in %L)" ;


#--- Search methods
  search searchForReadAccess action readAccess error message "the '%K' variable is not declared" ;
  search searchForWriteAccess action writeAccess error message "the '%K' variable is not declared" ;
  search searchForReadWriteAccess action readWriteAccess error message "the '%K' variable is not declared" ;
  search searchForDropAccess action dropAccess error message "the '%K' variable is not declared" ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    I N S T R U C T I O N    A N A L Y S I S                               *
#                                                                           *
#---------------------------------------------------------------------------*

abstract method @semanticInstructionAST analyzeSemanticInstruction
  ??@semanticContext inSemanticContext
  ?!@semanticInstructionListForGeneration ioInstructionListForGeneration
  ?!@variableMap ioVariableMap
;

#---------------------------------------------------------------------------*

override method @localVariableDeclarationWithInitializationAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@localVariableDeclarationWithInitializationAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @localVariableDeclarationWithAssignmentAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@localVariableDeclarationWithAssignmentAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @localConstantDeclarationWithSourceExpressionAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@localConstantDeclarationWithSourceExpressionASTanalyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @localVariableDeclarationAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@localVariableDeclarationAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @localConstantDeclarationWithConstructorCallAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@localConstantDeclarationWithConstructorCallAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @assignmentInstructionAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap ioVariableMap
:
#--- Check target variable
  @unifiedTypeMapProxy targetType ;
  @string targetPrefix ;
  [!?ioVariableMap searchForReadAccess !mTargetVariableName ?targetType ?targetPrefix] ;
  message "@assignmentInstructionAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @appendInstructionAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@appendInstructionAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @sendInstructionAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@sendInstructionAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @foreachInstructionAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@foreachInstructionAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @ifInstructionAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@ifInstructionAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @errorInstructionAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@errorInstructionAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @warningInstructionAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@warningInstructionAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @routineCallInstructionAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@routineCallInstructionAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @matchInstructionAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@matchInstructionAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @castInstructionAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@castInstructionAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @addInstructionAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@addInstructionAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @removeInstructionAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@removeInstructionAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @incrementInstructionAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@incrementInstructionAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @decrementInstructionAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@decrementInstructionAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @loopInstructionAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@loopInstructionAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @messageInstructionAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@messageInstructionAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @logInstructionAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@logInstructionAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @grammarInstructionAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@grammarInstructionAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @withInstructionAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@withInstructionAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @switchInstructionAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@switchInstructionAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @typeMethodCallInstructionAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@typeMethodCallInstructionAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @methodCallInstructionAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@methodCallInstructionAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

override method @modifierCallInstructionAST analyzeSemanticInstruction
  ??@semanticContext unused inSemanticContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap unused ioVariableMap
:
  message "@modifierCallInstructionAST analyzeSemanticInstruction\n" ;
end method ;

#---------------------------------------------------------------------------*

end semantics ;
