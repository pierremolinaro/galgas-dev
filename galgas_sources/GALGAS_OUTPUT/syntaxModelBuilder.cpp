//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'syntaxModelBuilder.cpp'                        *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                     august 30th, 2007, at 16h28'27"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "syntaxModelBuilder.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "syntaxModelBuilder.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//    Implementation of production rule 'syntax_component_start_symbol'      *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_syntaxComponentRoot syntaxModelBuilder::
syntaxModelBuilder::
pr_syntax_component_start_symbol_syntaxModelBuilder_54_4_ (galgas_scanner & _inLexique) {
  GGS_lstring  var_cas_mSyntaxComponentName ;
  GGS__list_nonterminalDeclaration  var_cas_mNonterminalDeclarations ;
  var_cas_mNonterminalDeclarations = GGS__list_nonterminalDeclaration::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS__list_syntaxRule  var_cas_mRules ;
  var_cas_mRules = GGS__list_syntaxRule::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS__list_semanticDeclaration  var_cas_mSemanticDeclarations ;
  var_cas_mSemanticDeclarations = GGS__list_semanticDeclaration::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_syntax) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mSyntaxComponentName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_syntaxModelBuilder_0 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_import) COMMA_HERE) ;
          switch (select_syntaxModelBuilder_1 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_lexique) COMMA_HERE) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
              } break ;
            case 5 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_option) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_syntaxModelBuilder_2 (_inLexique)) {
        case 2 : {
          var_cas_mNonterminalDeclarations._addAssign_operation (nt_nonterminal_declaration_ (_inLexique)) ;
          } break ;
        case 3 : {
          var_cas_mRules._addAssign_operation (nt_syntax_rule_declaration_ (_inLexique)) ;
          } break ;
        case 4 : {
          var_cas_mSemanticDeclarations._addAssign_operation (nt_semantic_declaration_ (_inLexique)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_syntax) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_syntaxComponentRoot _entityInstance = GGS_syntaxComponentRoot::constructor_new (_inLexique, var_cas_mSyntaxComponentName, var_cas_mNonterminalDeclarations, var_cas_mRules, var_cas_mSemanticDeclarations COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Implementation of production rule 'nonterminal_label_declaration'      *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_nonTerminalLabel syntaxModelBuilder::
syntaxModelBuilder::
pr_nonterminal_label_declaration_syntaxModelBuilder_96_4_ (galgas_scanner & _inLexique,
                                const GGS_lstring  var_cas_inLabelName) {
  GGS_lstring  var_cas_mLabelName ;
  GGS_formalParameters  var_cas_mFormalParameters ;
  GGS_lstring  var_cas_mReturnedEntityName ;
  var_cas_mLabelName = var_cas_inLabelName ;
  var_cas_mFormalParameters = nt_formal_parameter_list_ (_inLexique) ;
  switch (select_syntaxModelBuilder_3 (_inLexique)) {
    case 1 : {
      var_cas_mReturnedEntityName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mReturnedEntityName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_nonTerminalLabel _entityInstance = GGS_nonTerminalLabel::constructor_new (_inLexique, var_cas_mLabelName, var_cas_mFormalParameters, var_cas_mReturnedEntityName COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'nonterminal_declaration'         *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_nonterminalDeclaration syntaxModelBuilder::
syntaxModelBuilder::
pr_nonterminal_declaration_syntaxModelBuilder_109_4_ (galgas_scanner & _inLexique) {
  GGS_lstring  var_cas_mNonterminalName ;
  GGS__list_nonTerminalLabel  var_cas_mLabels ;
  var_cas_mLabels = GGS__list_nonTerminalLabel::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_bool var_cas_mHasParseLabel ;
  var_cas_mHasParseLabel = GGS_bool (true, false) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_nonterminal) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mNonterminalName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_non_5Fterminal_5Fsymbol) COMMA_HERE) ;
  var_cas_mLabels._addAssign_operation (nt_nonterminal_label_declaration_ (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE))) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_syntaxModelBuilder_4 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_label) COMMA_HERE) ;
          switch (select_syntaxModelBuilder_5 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_labelName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_labelName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_mLabels._addAssign_operation (nt_nonterminal_label_declaration_ (_inLexique, var_cas_labelName)) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_parse) COMMA_HERE) ;
              if ((var_cas_mHasParseLabel).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the 'parse' id already defined for this nonterminal") COMMA_SOURCE_FILE_AT_LINE (124)) ;
              }
              var_cas_mHasParseLabel = GGS_bool (true, true) ;
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_nonterminalDeclaration _entityInstance = GGS_nonterminalDeclaration::constructor_new (_inLexique, var_cas_mNonterminalName, var_cas_mLabels, var_cas_mHasParseLabel COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'syntax_rule_label'            *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_syntaxRuleLabel syntaxModelBuilder::
syntaxModelBuilder::
pr_syntax_rule_label_syntaxModelBuilder_134_4_ (galgas_scanner & _inLexique,
                                const GGS_lstring  var_cas_inLabelName) {
  GGS_lstring  var_cas_mLabelName ;
  GGS_formalParameters  var_cas_mFormalParameters ;
  GGS_lstring  var_cas_mReturnedEntityName ;
  GGS_lstring  var_cas_mReturnedVariableName ;
  GGS_syntaxInstructions  var_cas_mSyntaxInstructionList ;
  var_cas_mLabelName = var_cas_inLabelName ;
  var_cas_mFormalParameters = nt_formal_parameter_list_ (_inLexique) ;
  switch (select_syntaxModelBuilder_6 (_inLexique)) {
    case 1 : {
      var_cas_mReturnedEntityName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      var_cas_mReturnedVariableName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mReturnedEntityName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      switch (select_syntaxModelBuilder_7 (_inLexique)) {
        case 1 : {
          var_cas_mReturnedVariableName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
          } break ;
        case 2 : {
          _inLexique._assignFromAttribute_tokenString (var_cas_mReturnedVariableName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          } break ;
        default :
          break ;
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  var_cas_mSyntaxInstructionList = nt_syntax_instruction_list_ (_inLexique) ;
  GGS_syntaxRuleLabel _entityInstance = GGS_syntaxRuleLabel::constructor_new (_inLexique, var_cas_mLabelName, var_cas_mFormalParameters, var_cas_mReturnedEntityName, var_cas_mReturnedVariableName, var_cas_mSyntaxInstructionList COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'syntax_rule_declaration'         *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_syntaxRule syntaxModelBuilder::
syntaxModelBuilder::
pr_syntax_rule_declaration_syntaxModelBuilder_155_4_ (galgas_scanner & _inLexique) {
  GGS_lstring  var_cas_mNonterminalName ;
  GGS__list_syntaxRuleLabel  var_cas_mLabelList ;
  var_cas_mLabelList = GGS__list_syntaxRuleLabel::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_rule) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mNonterminalName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_non_5Fterminal_5Fsymbol) COMMA_HERE) ;
  GGS_lstring  var_cas_labelName ;
  var_cas_labelName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        var_cas_mLabelList._addAssign_operation (nt_syntax_rule_label_ (_inLexique, var_cas_labelName)) ;
      switch (select_repeat_syntaxModelBuilder_8 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_label) COMMA_HERE) ;
          _inLexique._assignFromAttribute_tokenString (var_cas_labelName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_rule) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_syntaxRule _entityInstance = GGS_syntaxRule::constructor_new (_inLexique, var_cas_mNonterminalName, var_cas_mLabelList COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'syntax_instruction_list'         *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_syntaxInstructions syntaxModelBuilder::
syntaxModelBuilder::
pr_syntax_instruction_list_syntaxModelBuilder_172_4_ (galgas_scanner & _inLexique) {
  GGS__list_syntaxInstruction  var_cas_mInstruction ;
  var_cas_mInstruction = GGS__list_syntaxInstruction::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_syntaxModelBuilder_9 (_inLexique)) {
        case 2 : {
          var_cas_mInstruction._addAssign_operation (nt_semantic_instruction_ (_inLexique)) ;
          } break ;
        case 3 : {
          var_cas_mInstruction._addAssign_operation (nt_syntax_instruction_ (_inLexique)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_syntaxInstructions _entityInstance = GGS_syntaxInstructions::constructor_new (_inLexique, var_cas_mInstruction COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'syntax_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_nonterminalCallInstruction syntaxModelBuilder::
syntaxModelBuilder::
pr_syntax_instruction_syntaxModelBuilder_187_4_ (galgas_scanner & _inLexique) {
  GGS_lstring  var_cas_mNonterminalName ;
  GGS_lstring  var_cas_mLabelName ;
  GGS_actualParameters  var_cas_mActualParameterList ;
  GGS_lstring  var_cas_mReturnedValueTargetVariableName ;
  GGS_bool var_cas_mReturnedValueIsAssigned ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mNonterminalName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_non_5Fterminal_5Fsymbol) COMMA_HERE) ;
  switch (select_syntaxModelBuilder_10 (_inLexique)) {
    case 1 : {
      var_cas_mLabelName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_parse) COMMA_HERE) ;
      var_cas_mLabelName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, "parse"), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 3 : {
      _inLexique._assignFromAttribute_tokenString (var_cas_mLabelName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  var_cas_mActualParameterList = nt_actual_parameter_list_ (_inLexique) ;
  switch (select_syntaxModelBuilder_11 (_inLexique)) {
    case 1 : {
      var_cas_mReturnedValueTargetVariableName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      var_cas_mReturnedValueIsAssigned = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mReturnedValueTargetVariableName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      var_cas_mReturnedValueIsAssigned = GGS_bool (true, true) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B_3E) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mReturnedValueTargetVariableName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      var_cas_mReturnedValueIsAssigned = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_nonterminalCallInstruction _entityInstance = GGS_nonterminalCallInstruction::constructor_new (_inLexique, var_cas_mNonterminalName, var_cas_mLabelName, var_cas_mActualParameterList, var_cas_mReturnedValueTargetVariableName, var_cas_mReturnedValueIsAssigned COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'syntax_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_terminalCheckInstruction syntaxModelBuilder::
syntaxModelBuilder::
pr_syntax_instruction_syntaxModelBuilder_219_4_ (galgas_scanner & _inLexique) {
  GGS_lstring  var_cas_mTerminalName ;
  GGS_lstringlist  var_cas_mReturnedValueTargetVariableNames ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mTerminalName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_terminal) COMMA_HERE) ;
  var_cas_mReturnedValueTargetVariableNames = GGS_lstringlist::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_syntaxModelBuilder_12 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
          switch (select_syntaxModelBuilder_13 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
              var_cas_mReturnedValueTargetVariableNames._addAssign_operation (GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE)) ;
              } break ;
            case 2 : {
              GGS_lstring  var_cas_returnedValueTargetVariableName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_returnedValueTargetVariableName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_mReturnedValueTargetVariableNames._addAssign_operation (var_cas_returnedValueTargetVariableName) ;
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_terminalCheckInstruction _entityInstance = GGS_terminalCheckInstruction::constructor_new (_inLexique, var_cas_mTerminalName, var_cas_mReturnedValueTargetVariableNames COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'syntax_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_repeatInstruction syntaxModelBuilder::
syntaxModelBuilder::
pr_syntax_instruction_syntaxModelBuilder_243_4_ (galgas_scanner & _inLexique) {
  GGS_syntaxInstructions  var_cas_mRepeatedInstructionList ;
  GGS__list_syntaxInstructions  var_cas_mRepeatBranchList ;
  var_cas_mRepeatBranchList = GGS__list_syntaxInstructions::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_repeat) COMMA_HERE) ;
  var_cas_mRepeatedInstructionList = nt_syntax_instruction_list_ (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
        var_cas_mRepeatBranchList._addAssign_operation (nt_syntax_instruction_list_ (_inLexique)) ;
      switch (select_repeat_syntaxModelBuilder_14 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_repeat) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_repeatInstruction _entityInstance = GGS_repeatInstruction::constructor_new (_inLexique, var_cas_mRepeatedInstructionList, var_cas_mRepeatBranchList COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'syntax_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_selectInstruction syntaxModelBuilder::
syntaxModelBuilder::
pr_syntax_instruction_syntaxModelBuilder_262_4_ (galgas_scanner & _inLexique) {
  GGS__list_syntaxInstructions  var_cas_mSelectBranchList ;
  var_cas_mSelectBranchList = GGS__list_syntaxInstructions::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_select) COMMA_HERE) ;
  var_cas_mSelectBranchList._addAssign_operation (nt_syntax_instruction_list_ (_inLexique)) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_or) COMMA_HERE) ;
        var_cas_mSelectBranchList._addAssign_operation (nt_syntax_instruction_list_ (_inLexique)) ;
      switch (select_repeat_syntaxModelBuilder_15 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_select) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_selectInstruction _entityInstance = GGS_selectInstruction::constructor_new (_inLexique, var_cas_mSelectBranchList COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'syntax_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_parseDoInstruction syntaxModelBuilder::
syntaxModelBuilder::
pr_syntax_instruction_syntaxModelBuilder_281_4_ (galgas_scanner & _inLexique) {
  GGS__list_syntaxInstructions  var_cas_mParseDoBranchList ;
  var_cas_mParseDoBranchList = GGS__list_syntaxInstructions::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_parse) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
  var_cas_mParseDoBranchList._addAssign_operation (nt_syntax_instruction_list_ (_inLexique)) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_rewind) COMMA_HERE) ;
        var_cas_mParseDoBranchList._addAssign_operation (nt_syntax_instruction_list_ (_inLexique)) ;
      switch (select_repeat_syntaxModelBuilder_16 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_parse) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_parseDoInstruction _entityInstance = GGS_parseDoInstruction::constructor_new (_inLexique, var_cas_mParseDoBranchList COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'syntax_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_blockInstruction syntaxModelBuilder::
syntaxModelBuilder::
pr_syntax_instruction_syntaxModelBuilder_301_4_ (galgas_scanner & _inLexique) {
  GGS_lstring  var_cas_mReceiverVariable ;
  GGS_lstring  var_cas_mBlockMethodName ;
  GGS_actualParameters  var_cas_mPrologActualParameterList ;
  GGS_syntaxInstructions  var_cas_mInstructionList ;
  GGS_actualParameters  var_cas_mEpilogActualParameterList ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_block) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mReceiverVariable) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mBlockMethodName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
  var_cas_mPrologActualParameterList = nt_actual_parameter_list_ (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  var_cas_mInstructionList = nt_syntax_instruction_list_ (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_block) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
  var_cas_mEpilogActualParameterList = nt_actual_parameter_list_ (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_blockInstruction _entityInstance = GGS_blockInstruction::constructor_new (_inLexique, var_cas_mReceiverVariable, var_cas_mBlockMethodName, var_cas_mPrologActualParameterList, var_cas_mInstructionList, var_cas_mEpilogActualParameterList COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*

