//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'syntaxModelBuilder.cpp'                        *
//             Generated by version version GALGAS_BETA_VERSION              *
//                     november 14th, 2010, at 21h30'1"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "syntaxModelBuilder.h"
#include "galgas2/C_galgas_CLI_Options.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "syntaxModelBuilder.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

void cParser_syntaxModelBuilder::rule_syntaxModelBuilder_syntax_5F_component_5F_start_5F_symbol_i0_ (GALGAS_syntaxComponentAST & outArgument_outSyntaxComponentRoot,
                                                                                                     C_Lexique_galgas_5F_scanner * inCompiler) {
  outArgument_outSyntaxComponentRoot.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_syntax) COMMA_SOURCE_FILE_AT_LINE (65)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_mSyntaxComponentName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (67)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (69)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_importedLexiqueReference = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (70)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (71)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (72)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_lstringlist var_importedComponentPathList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (74)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_syntaxModelBuilder_0 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_import) COMMA_SOURCE_FILE_AT_LINE (77)) ;
      //-------- @selectInstructionForGeneration
      switch (select_syntaxModelBuilder_1 (inCompiler)) {
      case 1: {
        //-------- @terminalCheckInstructionForGeneration
        GALGAS_lstring var_path = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (79)) ;
        //-------- @addAssignInstructionForGeneration
        var_importedComponentPathList.addAssign_operation (var_path COMMA_SOURCE_FILE_AT_LINE (80)) ;
      } break ;
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_SOURCE_FILE_AT_LINE (82)) ;
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (83)) ;
        //-------- @warningInstructionForGeneration
        inCompiler->emitSemanticWarning (inCompiler->here (), GALGAS_string ("obsolete GALGAS 1 'import' declaration: useless in GALGAS 2") COMMA_SOURCE_FILE_AT_LINE (84)) ;
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_SOURCE_FILE_AT_LINE (85)) ;
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (86)) ;
      } break ;
      case 3: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_lexique) COMMA_SOURCE_FILE_AT_LINE (88)) ;
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (89)) ;
        //-------- @warningInstructionForGeneration
        inCompiler->emitSemanticWarning (inCompiler->here (), GALGAS_string ("obsolete GALGAS 1 'import' declaration: useless in GALGAS 2") COMMA_SOURCE_FILE_AT_LINE (90)) ;
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_SOURCE_FILE_AT_LINE (91)) ;
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (92)) ;
      } break ;
      case 4: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_grammar) COMMA_SOURCE_FILE_AT_LINE (94)) ;
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (95)) ;
        //-------- @warningInstructionForGeneration
        inCompiler->emitSemanticWarning (inCompiler->here (), GALGAS_string ("obsolete GALGAS 1 'import' declaration: useless in GALGAS 2") COMMA_SOURCE_FILE_AT_LINE (96)) ;
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_SOURCE_FILE_AT_LINE (97)) ;
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (98)) ;
      } break ;
      case 5: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_option) COMMA_SOURCE_FILE_AT_LINE (100)) ;
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (101)) ;
        //-------- @warningInstructionForGeneration
        inCompiler->emitSemanticWarning (inCompiler->here (), GALGAS_string ("obsolete GALGAS 1 'import' declaration: useless in GALGAS 2") COMMA_SOURCE_FILE_AT_LINE (102)) ;
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_SOURCE_FILE_AT_LINE (103)) ;
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (104)) ;
      } break ;
      default:
        break ;
      }
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (106)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_nonterminalDeclarationListAST var_mNonterminalDeclarationList = GALGAS_nonterminalDeclarationListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (109)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_syntaxRuleListAST var_mRuleList = GALGAS_syntaxRuleListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (110)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_semanticDeclarationListAST var_mSemanticDeclarations = GALGAS_semanticDeclarationListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (111)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_1 = true ;
  while (repeatFlag_1) {
    switch (select_syntaxModelBuilder_2 (inCompiler)) {
    case 2: {
      //-------- @nonterminalInstructionForGeneration
      nt_nonterminal_5F_declaration_ (var_mNonterminalDeclarationList, inCompiler) ;
    } break ;
    case 3: {
      //-------- @nonterminalInstructionForGeneration
      nt_syntax_5F_rule_5F_declaration_ (var_mRuleList, inCompiler) ;
    } break ;
    case 4: {
      //-------- @nonterminalInstructionForGeneration
      nt_semantic_5F_declaration_ (var_mSemanticDeclarations, inCompiler) ;
    } break ;
    case 5: {
      //-------- @nonterminalInstructionForGeneration
      nt_obsolete_5F_declaration_ (inCompiler) ;
    } break ;
    default:
      repeatFlag_1 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (123)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_endOfSource = inCompiler->here () ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_syntax) COMMA_SOURCE_FILE_AT_LINE (125)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (126)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outSyntaxComponentRoot = GALGAS_syntaxComponentAST::constructor_new (var_mSyntaxComponentName, var_importedLexiqueReference, var_importedComponentPathList, var_mNonterminalDeclarationList, var_mRuleList, var_mSemanticDeclarations, var_endOfSource COMMA_SOURCE_FILE_AT_LINE (127)) ;
}

void cParser_syntaxModelBuilder::rule_syntaxModelBuilder_nonterminal_5F_label_5F_declaration_i1_ (const GALGAS_lstring constinArgument_inLabelName,
                                                                                                  GALGAS_nonTerminalLabelListAST & ioArgument_ioNonTerminalLabelList,
                                                                                                  C_Lexique_galgas_5F_scanner * inCompiler) {
  //-------- @localVariableDeclarationForGeneration
  GALGAS_formalParameterListAST var_mFormalParameters ;
  //-------- @nonterminalInstructionForGeneration
  nt_formal_5F_parameter_5F_list_ (var_mFormalParameters, inCompiler) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioNonTerminalLabelList.addAssign_operation (constinArgument_inLabelName, var_mFormalParameters, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (151)) ;
}

void cParser_syntaxModelBuilder::rule_syntaxModelBuilder_nonterminal_5F_declaration_i2_ (GALGAS_nonterminalDeclarationListAST & ioArgument_ioNonterminalDeclarationList,
                                                                                         C_Lexique_galgas_5F_scanner * inCompiler) {
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_mHasParseLabel = GALGAS_bool (false) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_nonterminal) COMMA_SOURCE_FILE_AT_LINE (162)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_mNonterminalName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_non_5F_terminal_5F_symbol) COMMA_SOURCE_FILE_AT_LINE (163)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_nonTerminalLabelListAST var_mLabels = GALGAS_nonTerminalLabelListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (164)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_nonterminal_5F_label_5F_declaration_ (GALGAS_lstring::constructor_new (GALGAS_string (""), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (165)), var_mLabels, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_syntaxModelBuilder_3 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_label) COMMA_SOURCE_FILE_AT_LINE (168)) ;
      //-------- @selectInstructionForGeneration
      switch (select_syntaxModelBuilder_4 (inCompiler)) {
      case 1: {
        //-------- @localVariableDeclarationForGeneration
        GALGAS_lstring var_labelName ;
        //-------- @terminalCheckInstructionForGeneration
        var_labelName = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (171)) ;
        //-------- @nonterminalInstructionForGeneration
        nt_nonterminal_5F_label_5F_declaration_ (var_labelName, var_mLabels, inCompiler) ;
      } break ;
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_parse) COMMA_SOURCE_FILE_AT_LINE (174)) ;
        //-------- @ifInstructionForGeneration
        if (var_mHasParseLabel.isValidAndTrue ()) {
          //-------- @errorInstructionForGeneration
          inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("the 'parse' id already defined for this nonterminal") COMMA_SOURCE_FILE_AT_LINE (176)) ;
        }
        //-------- @assignmentInstructionForGeneration
        var_mHasParseLabel = GALGAS_bool (true) ;
      } break ;
      default:
        break ;
      }
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (181)) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioNonterminalDeclarationList.addAssign_operation (var_mNonterminalName, var_mLabels, var_mHasParseLabel COMMA_SOURCE_FILE_AT_LINE (182)) ;
}

void cParser_syntaxModelBuilder::rule_syntaxModelBuilder_syntax_5F_rule_5F_label_i3_ (const GALGAS_lstring constinArgument_inLabelName,
                                                                                      GALGAS_syntaxRuleLabelListAST & ioArgument_ioLabelList,
                                                                                      C_Lexique_galgas_5F_scanner * inCompiler) {
  //-------- @localVariableDeclarationForGeneration
  GALGAS_formalParameterListAST var_mFormalParameters ;
  //-------- @nonterminalInstructionForGeneration
  nt_formal_5F_parameter_5F_list_ (var_mFormalParameters, inCompiler) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_endOfArguments = inCompiler->here () ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (209)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_syntaxInstructionList var_mSyntaxInstructionList ;
  //-------- @nonterminalInstructionForGeneration
  nt_syntax_5F_instruction_5F_list_ (var_mSyntaxInstructionList, inCompiler) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioLabelList.addAssign_operation (constinArgument_inLabelName, var_mFormalParameters, var_endOfArguments, var_mSyntaxInstructionList, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (212)) ;
}

void cParser_syntaxModelBuilder::rule_syntaxModelBuilder_syntax_5F_rule_5F_declaration_i4_ (GALGAS_syntaxRuleListAST & ioArgument_ioRuleList,
                                                                                            C_Lexique_galgas_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_rule) COMMA_SOURCE_FILE_AT_LINE (224)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_mNonterminalName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_non_5F_terminal_5F_symbol) COMMA_SOURCE_FILE_AT_LINE (225)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_lstring var_labelName = GALGAS_lstring::constructor_new (GALGAS_string (""), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (226)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_syntaxRuleLabelListAST var_mLabelList = GALGAS_syntaxRuleLabelListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (227)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    //-------- @nonterminalInstructionForGeneration
    nt_syntax_5F_rule_5F_label_ (var_labelName, var_mLabelList, inCompiler) ;
    switch (select_syntaxModelBuilder_5 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_label) COMMA_SOURCE_FILE_AT_LINE (231)) ;
      //-------- @terminalCheckInstructionForGeneration
      var_labelName = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (232)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (234)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_rule) COMMA_SOURCE_FILE_AT_LINE (235)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (236)) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioRuleList.addAssign_operation (var_mNonterminalName, var_mLabelList COMMA_SOURCE_FILE_AT_LINE (237)) ;
}

void cParser_syntaxModelBuilder::rule_syntaxModelBuilder_syntax_5F_instruction_5F_list_i5_ (GALGAS_syntaxInstructionList & outArgument_outSyntaxInstructionList,
                                                                                            C_Lexique_galgas_5F_scanner * inCompiler) {
  outArgument_outSyntaxInstructionList.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outSyntaxInstructionList = GALGAS_syntaxInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (250)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_syntaxModelBuilder_6 (inCompiler)) {
    case 2: {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_semanticInstructionAST var_instruction ;
      //-------- @nonterminalInstructionForGeneration
      nt_semantic_5F_instruction_ (var_instruction, inCompiler) ;
      //-------- @addAssignInstructionForGeneration
      outArgument_outSyntaxInstructionList.addAssign_operation (var_instruction COMMA_SOURCE_FILE_AT_LINE (255)) ;
    } break ;
    case 3: {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_syntaxInstructionAST var_instruction ;
      //-------- @nonterminalInstructionForGeneration
      nt_syntax_5F_instruction_ (var_instruction, inCompiler) ;
      //-------- @addAssignInstructionForGeneration
      outArgument_outSyntaxInstructionList.addAssign_operation (var_instruction COMMA_SOURCE_FILE_AT_LINE (259)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

void cParser_syntaxModelBuilder::rule_syntaxModelBuilder_syntax_5F_instruction_i6_ (GALGAS_syntaxInstructionAST & outArgument_outInstruction,
                                                                                    C_Lexique_galgas_5F_scanner * inCompiler) {
  outArgument_outInstruction.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_mNonterminalName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_non_5F_terminal_5F_symbol) COMMA_SOURCE_FILE_AT_LINE (270)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_lstring var_mLabelName ;
  //-------- @selectInstructionForGeneration
  switch (select_syntaxModelBuilder_7 (inCompiler)) {
  case 1: {
    //-------- @assignmentInstructionForGeneration
    var_mLabelName = GALGAS_lstring::constructor_new (GALGAS_string (""), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (273)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_parse) COMMA_SOURCE_FILE_AT_LINE (275)) ;
    //-------- @assignmentInstructionForGeneration
    var_mLabelName = GALGAS_lstring::constructor_new (GALGAS_string ("parse"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (276)) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    var_mLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (278)) ;
  } break ;
  default:
    break ;
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS_actualParameterListAST var_mActualParameterList ;
  //-------- @nonterminalInstructionForGeneration
  nt_actual_5F_parameter_5F_list_ (var_mActualParameterList, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (282)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outInstruction = GALGAS_nonterminalCallInstruction::constructor_new (var_mNonterminalName.reader_location (SOURCE_FILE_AT_LINE (284)), var_mNonterminalName, var_mLabelName, var_mActualParameterList COMMA_SOURCE_FILE_AT_LINE (283)) ;
}

void cParser_syntaxModelBuilder::rule_syntaxModelBuilder_syntax_5F_instruction_i7_ (GALGAS_syntaxInstructionAST & outArgument_outInstruction,
                                                                                    C_Lexique_galgas_5F_scanner * inCompiler) {
  outArgument_outInstruction.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_mTerminalName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_terminal) COMMA_SOURCE_FILE_AT_LINE (298)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_actualInputParameterListAST var_mActualInputParameterList ;
  //-------- @nonterminalInstructionForGeneration
  nt_actual_5F_input_5F_parameter_5F_list_ (var_mActualInputParameterList, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (301)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outInstruction = GALGAS_terminalCheckInstruction::constructor_new (var_mTerminalName.reader_location (SOURCE_FILE_AT_LINE (303)), var_mTerminalName, var_mActualInputParameterList COMMA_SOURCE_FILE_AT_LINE (302)) ;
}

void cParser_syntaxModelBuilder::rule_syntaxModelBuilder_syntax_5F_instruction_i8_ (GALGAS_syntaxInstructionAST & outArgument_outInstruction,
                                                                                    C_Lexique_galgas_5F_scanner * inCompiler) {
  outArgument_outInstruction.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_repeat) COMMA_SOURCE_FILE_AT_LINE (316)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_mRepeatInstructionLocation = inCompiler->here () ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_syntaxInstructionList var_mRepeatedInstructionList ;
  //-------- @nonterminalInstructionForGeneration
  nt_syntax_5F_instruction_5F_list_ (var_mRepeatedInstructionList, inCompiler) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_endOf_5F_repeated_5F_instructions = inCompiler->here () ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_listOfSyntaxInstructionList var_mRepeatBranchList = GALGAS_listOfSyntaxInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (321)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_while) COMMA_SOURCE_FILE_AT_LINE (323)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_syntaxInstructionList var_mInstructionList ;
    //-------- @nonterminalInstructionForGeneration
    nt_syntax_5F_instruction_5F_list_ (var_mInstructionList, inCompiler) ;
    //-------- @addAssignInstructionForGeneration
    var_mRepeatBranchList.addAssign_operation (var_mInstructionList, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (326)) ;
    switch (select_syntaxModelBuilder_8 (inCompiler)) {
    case 2: {
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (329)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_endOf_5F_repeat_5F_instruction = inCompiler->here () ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_repeat) COMMA_SOURCE_FILE_AT_LINE (331)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (332)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outInstruction = GALGAS_repeatInstruction::constructor_new (var_mRepeatInstructionLocation, var_mRepeatedInstructionList, var_endOf_5F_repeated_5F_instructions, var_mRepeatBranchList, var_endOf_5F_repeat_5F_instruction COMMA_SOURCE_FILE_AT_LINE (333)) ;
}

void cParser_syntaxModelBuilder::rule_syntaxModelBuilder_syntax_5F_instruction_i9_ (GALGAS_syntaxInstructionAST & outArgument_outInstruction,
                                                                                    C_Lexique_galgas_5F_scanner * inCompiler) {
  outArgument_outInstruction.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_select) COMMA_SOURCE_FILE_AT_LINE (349)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_mSelectInstructionLocation = inCompiler->here () ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_listOfSyntaxInstructionList var_mSelectBranchList = GALGAS_listOfSyntaxInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (351)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_syntaxInstructionList var_instructionList ;
  //-------- @nonterminalInstructionForGeneration
  nt_syntax_5F_instruction_5F_list_ (var_instructionList, inCompiler) ;
  //-------- @addAssignInstructionForGeneration
  var_mSelectBranchList.addAssign_operation (var_instructionList, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (354)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_or) COMMA_SOURCE_FILE_AT_LINE (356)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_syntax_5F_instruction_5F_list_ (var_instructionList, inCompiler) ;
    //-------- @addAssignInstructionForGeneration
    var_mSelectBranchList.addAssign_operation (var_instructionList, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (358)) ;
    switch (select_syntaxModelBuilder_9 (inCompiler)) {
    case 2: {
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (361)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_endOf_5F_select_5F_instruction = inCompiler->here () ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_select) COMMA_SOURCE_FILE_AT_LINE (363)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (364)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outInstruction = GALGAS_selectInstruction::constructor_new (var_mSelectInstructionLocation, var_mSelectBranchList, var_endOf_5F_select_5F_instruction COMMA_SOURCE_FILE_AT_LINE (365)) ;
}

void cParser_syntaxModelBuilder::rule_syntaxModelBuilder_syntax_5F_instruction_i10_ (GALGAS_syntaxInstructionAST & outArgument_outInstruction,
                                                                                     C_Lexique_galgas_5F_scanner * inCompiler) {
  outArgument_outInstruction.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_parse) COMMA_SOURCE_FILE_AT_LINE (379)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_instructionLocation = inCompiler->here () ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_do) COMMA_SOURCE_FILE_AT_LINE (381)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_listOfSyntaxInstructionList var_mParseDoBranchList = GALGAS_listOfSyntaxInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (382)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_syntaxInstructionList var_instructionList ;
  //-------- @nonterminalInstructionForGeneration
  nt_syntax_5F_instruction_5F_list_ (var_instructionList, inCompiler) ;
  //-------- @addAssignInstructionForGeneration
  var_mParseDoBranchList.addAssign_operation (var_instructionList, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (385)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_rewind) COMMA_SOURCE_FILE_AT_LINE (387)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_syntax_5F_instruction_5F_list_ (var_instructionList, inCompiler) ;
    //-------- @addAssignInstructionForGeneration
    var_mParseDoBranchList.addAssign_operation (var_instructionList, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (389)) ;
    switch (select_syntaxModelBuilder_10 (inCompiler)) {
    case 2: {
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (392)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_endOfInstruction = inCompiler->here () ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_parse) COMMA_SOURCE_FILE_AT_LINE (394)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (395)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outInstruction = GALGAS_parseRewindInstruction::constructor_new (var_instructionLocation, var_mParseDoBranchList, var_endOfInstruction COMMA_SOURCE_FILE_AT_LINE (396)) ;
}

void cParser_syntaxModelBuilder::rule_syntaxModelBuilder_branchOfParseWhenInstruction_i11_ (GALGAS_syntaxInstructionList & outArgument_outElseInstructionList,
                                                                                            C_Lexique_galgas_5F_scanner * inCompiler) {
  outArgument_outElseInstructionList.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_else) COMMA_SOURCE_FILE_AT_LINE (414)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_syntax_5F_instruction_5F_list_ (outArgument_outElseInstructionList, inCompiler) ;
}

void cParser_syntaxModelBuilder::rule_syntaxModelBuilder_branchOfParseWhenInstruction_i12_ (GALGAS_syntaxInstructionList & outArgument_outElseInstructionList,
                                                                                            C_Lexique_galgas_5F_scanner * inCompiler) {
  outArgument_outElseInstructionList.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_SOURCE_FILE_AT_LINE (421)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_instructionLocation = inCompiler->here () ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionAST var_whenExpression ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_ (var_whenExpression, inCompiler) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_endOfWhenExpression = inCompiler->here () ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (426)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_syntaxInstructionList var_whenInstructionList ;
  //-------- @nonterminalInstructionForGeneration
  nt_syntax_5F_instruction_5F_list_ (var_whenInstructionList, inCompiler) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_endOfWhenInstructions = inCompiler->here () ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_syntaxInstructionList var_elseInstructionList ;
  //-------- @nonterminalInstructionForGeneration
  nt_branchOfParseWhenInstruction_ (var_elseInstructionList, inCompiler) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_endOfElseInstructions = inCompiler->here () ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outElseInstructionList = GALGAS_syntaxInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (434)) ;
  //-------- @addAssignInstructionForGeneration
  outArgument_outElseInstructionList.addAssign_operation (GALGAS_parseWhenInstruction::constructor_new (var_instructionLocation, var_whenExpression, var_endOfWhenExpression, var_whenInstructionList, var_endOfWhenInstructions, var_elseInstructionList, var_endOfElseInstructions COMMA_SOURCE_FILE_AT_LINE (435)) COMMA_SOURCE_FILE_AT_LINE (435)) ;
}

void cParser_syntaxModelBuilder::rule_syntaxModelBuilder_syntax_5F_instruction_i13_ (GALGAS_syntaxInstructionAST & outArgument_outInstruction,
                                                                                     C_Lexique_galgas_5F_scanner * inCompiler) {
  outArgument_outInstruction.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_parse) COMMA_SOURCE_FILE_AT_LINE (449)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_instructionLocation = inCompiler->here () ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_when) COMMA_SOURCE_FILE_AT_LINE (451)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionAST var_whenExpression ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_ (var_whenExpression, inCompiler) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_endOfWhenExpression = inCompiler->here () ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (455)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_syntaxInstructionList var_whenInstructionList ;
  //-------- @nonterminalInstructionForGeneration
  nt_syntax_5F_instruction_5F_list_ (var_whenInstructionList, inCompiler) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_endOfWhenInstructions = inCompiler->here () ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_syntaxInstructionList var_elseInstructionList ;
  //-------- @nonterminalInstructionForGeneration
  nt_branchOfParseWhenInstruction_ (var_elseInstructionList, inCompiler) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_endOfElseInstructions = inCompiler->here () ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (463)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_parse) COMMA_SOURCE_FILE_AT_LINE (464)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (465)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outInstruction = GALGAS_parseWhenInstruction::constructor_new (var_instructionLocation, var_whenExpression, var_endOfWhenExpression, var_whenInstructionList, var_endOfWhenInstructions, var_elseInstructionList, var_endOfElseInstructions COMMA_SOURCE_FILE_AT_LINE (466)) ;
}

void cParser_syntaxModelBuilder::rule_syntaxModelBuilder_syntax_5F_instruction_i14_ (GALGAS_syntaxInstructionAST & outArgument_outInstruction,
                                                                                     C_Lexique_galgas_5F_scanner * inCompiler) {
  outArgument_outInstruction.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_parse) COMMA_SOURCE_FILE_AT_LINE (484)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_instructionLocation = inCompiler->here () ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_loop) COMMA_SOURCE_FILE_AT_LINE (486)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionAST var_variantExpression ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_ (var_variantExpression, inCompiler) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_endOfVariantExpression = inCompiler->here () ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_while) COMMA_SOURCE_FILE_AT_LINE (490)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionAST var_whileExpression ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_ (var_whileExpression, inCompiler) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_endOfWhileExpression = inCompiler->here () ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_do) COMMA_SOURCE_FILE_AT_LINE (494)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_syntaxInstructionList var_instructionList ;
  //-------- @nonterminalInstructionForGeneration
  nt_syntax_5F_instruction_5F_list_ (var_instructionList, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (497)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_endOfInstructionList = inCompiler->here () ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_parse) COMMA_SOURCE_FILE_AT_LINE (499)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (500)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outInstruction = GALGAS_parseLoopInstruction::constructor_new (var_instructionLocation, var_variantExpression, var_endOfVariantExpression, var_whileExpression, var_endOfWhileExpression, var_instructionList, var_endOfInstructionList COMMA_SOURCE_FILE_AT_LINE (501)) ;
}

void cParser_syntaxModelBuilder::rule_syntaxModelBuilder_syntax_5F_instruction_i15_ (GALGAS_syntaxInstructionAST & outArgument_outInstruction,
                                                                                     C_Lexique_galgas_5F_scanner * inCompiler) {
  outArgument_outInstruction.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_block) COMMA_SOURCE_FILE_AT_LINE (519)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_instructionLocation = inCompiler->here () ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_mReceiverVariable = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (521)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (522)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_mBlockMethodName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (523)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (524)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_actualParameterListAST var_mPrologActualParameterList ;
  //-------- @nonterminalInstructionForGeneration
  nt_actual_5F_parameter_5F_list_ (var_mPrologActualParameterList, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (527)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (528)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_syntaxInstructionList var_mInstructionList ;
  //-------- @nonterminalInstructionForGeneration
  nt_syntax_5F_instruction_5F_list_ (var_mInstructionList, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (531)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_block) COMMA_SOURCE_FILE_AT_LINE (532)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (533)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_actualParameterListAST var_mEpilogActualParameterList ;
  //-------- @nonterminalInstructionForGeneration
  nt_actual_5F_parameter_5F_list_ (var_mEpilogActualParameterList, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (536)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (537)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outInstruction = GALGAS_blockInstruction::constructor_new (var_instructionLocation, var_mReceiverVariable, var_mBlockMethodName, var_mPrologActualParameterList, var_mInstructionList, var_mEpilogActualParameterList COMMA_SOURCE_FILE_AT_LINE (538)) ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


