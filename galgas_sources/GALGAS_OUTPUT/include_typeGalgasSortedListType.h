//---------------------------------------------------------------------------*
//                                                                           *
//                File 'include_typeGalgasSortedListType.h'                  *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                    november 12th, 2009, at 19h48'14"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_typeGalgasSortedListType'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_typeGalgasSortedListType : public cPtr_typeGalgasUndefinedSortedListType {
  private : typedef cPtr_typeGalgasUndefinedSortedListType inherited ;
//--- START OF USER ZONE 2

 public : virtual void
  generateCppClassName (AC_OutputStream & fichier) const ;

//--- END OF USER ZONE 2

//--- Constructor
  public : cPtr_typeGalgasSortedListType (const GGS_lstring & ,
                                const GGS_typeListeAttributsSemantiques & ,
                                const GGS_L_EXsignature & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_typeGalgasSortedListType (void) {}
  #endif

//--- Attributes
  public : GGS_typeListeAttributsSemantiques  mAttributeList ;
  public : GGS_L_EXsignature  mExtractSignature ;
//--- Method 'acceptForeachInstruction'
  public : virtual void method_acceptForeachInstruction (C_Compiler &,
                                GGS_M_semanticsEntitiesForUse  ,
                                GGS_location  ,
                                GGS_typeListeAttributsSemantiques & ,
                                GGS_localConstantBuildStyleEnum& ,
                                GGS_bool& 
                                COMMA_LOCATION_ARGS) const ;

//--- Method 'handleModifierCall'
  public : virtual void method_handleModifierCall (C_Compiler &,
                                GGS_lstring  ,
                                GGS_L_EXsignature & 
                                COMMA_LOCATION_ARGS) const ;

//--- Method 'handleMethodInstructionCall'
  public : virtual void method_handleMethodInstructionCall (C_Compiler &,
                                GGS_lstring  ,
                                GGS_EXcategoryMethodMap  ,
                                GGS_L_EXsignature & ,
                                GGS_string& 
                                COMMA_LOCATION_ARGS) const ;

//--- Method 'handleAddAssignOperatorCall'
  public : virtual void method_handleAddAssignOperatorCall (C_Compiler &,
                                GGS_location  ,
                                GGS_typeListeAttributsSemantiques & 
                                COMMA_LOCATION_ARGS) const ;

//--- Method 'handleConstructorInvocation'
  public : virtual void method_handleConstructorInvocation (C_Compiler &,
                                GGS_lstring  ,
                                GGS_typeListeAttributsSemantiques & ,
                                GGS_bool& ,
                                GGS_AC_galgasType & 
                                COMMA_LOCATION_ARGS) const ;

  public : virtual const char * message_messageGalgasType (void) const ;
  public : static const char * static_string_message_messageGalgasType (void) ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & inLexique,
                        C_String & ioString,
                        const PMSInt32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*

