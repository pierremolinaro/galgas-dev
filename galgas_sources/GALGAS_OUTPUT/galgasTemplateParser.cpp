//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'galgasTemplateParser.cpp'                       *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                    november 14th, 2009, at 16h23'55"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "galgasTemplateParser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "galgasTemplateParser.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "enterTemplateString"               *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterTemplateString (C_Compiler & inLexique,
                                GGS_templateInstructionList  & var_cas_outResultingInstructionList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterTemplateString at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_lstring  var_cas_s = GGS_lstring ::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
  const GGS_bool cond_2854 = (var_cas_s.ggs_string ().reader_length ()).operator_strictSup (GGS_uint (0U)) ;
  if (cond_2854.isBuiltAndTrue ()) {
    var_cas_outResultingInstructionList.addAssign_operation (GGS_templateInstructionString ::constructor_new (inLexique, var_cas_s.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (59)) COMMA_HERE)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterTemplateString\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'template_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void galgasTemplateParser::
pr_template_instruction_galgasTemplateParser_65_27_ (galgasTemplateScanner & inLexique,
                                GGS_typeVariablesMap  &var_cas_ioTemplateVariableMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_templateInstructionList  &var_cas_ioResultingInstructionList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1__21_) COMMA_HERE) ;
  GGS_typeExpression  var_cas_expression ;
  GGS_AC_galgasType  var_cas_resultType ;
  nt_expression_ (inLexique, var_cas_inComponentSemanticsEntitiesMap, var_cas_inSemanticContext, var_cas_inOptionsComponentsMapForUse, var_cas_ioTemplateVariableMap, var_cas_expression, var_cas_resultType) ;
  GGS_typeGalgas_string  var_cas_x = GGS_typeGalgas_string::castFrom (inLexique, var_cas_resultType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (83)) ;
  var_cas_ioResultingInstructionList.addAssign_operation (GGS_templateInstructionExpression ::constructor_new (inLexique, var_cas_expression COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'template_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void galgasTemplateParser::
pr_template_instruction_galgasTemplateParser_89_27_ (galgasTemplateScanner & inLexique,
                                GGS_typeVariablesMap  &var_cas_ioTemplateVariableMap,
                                const GGS_EXsemanticContext /* var_cas_inSemanticContext */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_inComponentSemanticsEntitiesMap */,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_templateInstructionList  &var_cas_ioResultingInstructionList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1__3F_) COMMA_HERE) ;
  GGS_lstring  var_cas_columnConstantName ;
  inLexique.assignFromAttribute_tokenString (var_cas_columnConstantName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_identifier) COMMA_HERE) ;
  GGS_typeCplusPlusName  var_cas_cppName = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_columnConstantName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (99)), var_cas_columnConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (99)) COMMA_HERE) ;
  var_cas_ioTemplateVariableMap.modifier_insertConstInArgument (inLexique, var_cas_columnConstantName, GGS_typeGalgas_string ::constructor_new (inLexique COMMA_HERE), var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (100)) ;
  var_cas_ioResultingInstructionList.addAssign_operation (GGS_templateInstructionColumnString ::constructor_new (inLexique, var_cas_cppName COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'template_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void galgasTemplateParser::
pr_template_instruction_galgasTemplateParser_110_27_ (galgasTemplateScanner & inLexique,
                                GGS_typeVariablesMap  &var_cas_ioTemplateVariableMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_templateInstructionList  &var_cas_ioResultingInstructionList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_block) COMMA_HERE) ;
  GGS_typeExpression  var_cas_expression ;
  GGS_AC_galgasType  var_cas_resultType ;
  nt_expression_ (inLexique, var_cas_inComponentSemanticsEntitiesMap, var_cas_inSemanticContext, var_cas_inOptionsComponentsMapForUse, var_cas_ioTemplateVariableMap, var_cas_expression, var_cas_resultType) ;
  GGS_typeGalgas_uint  var_cas_x = GGS_typeGalgas_uint::castFrom (inLexique, var_cas_resultType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (128)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1__3A_) COMMA_HERE) ;
  GGS_templateInstructionList  var_cas_blockInstructionList = GGS_templateInstructionList ::constructor_emptyList () ;
  ::routine_enterTemplateString (inLexique,  var_cas_blockInstructionList COMMA_SOURCE_FILE_AT_LINE (132)) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_galgasTemplateParser_0 (inLexique)) {
        case 2 : {
          nt_template_instruction_ (inLexique, var_cas_ioTemplateVariableMap, var_cas_inSemanticContext, var_cas_inComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_blockInstructionList) ;
          ::routine_enterTemplateString (inLexique,  var_cas_blockInstructionList COMMA_SOURCE_FILE_AT_LINE (142)) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_block) COMMA_HERE) ;
  var_cas_ioResultingInstructionList.addAssign_operation (GGS_templateBlockInstruction ::constructor_new (inLexique, var_cas_expression, GGS_location (inLexique), var_cas_blockInstructionList COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'template_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void galgasTemplateParser::
pr_template_instruction_galgasTemplateParser_156_27_ (galgasTemplateScanner & inLexique,
                                GGS_typeVariablesMap  &var_cas_ioTemplateVariableMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_templateInstructionList  &var_cas_ioResultingInstructionList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_foreach) COMMA_HERE) ;
  GGS_bool var_cas_ascending ;
  switch (select_galgasTemplateParser_1 (inLexique)) {
    case 1 : {
      var_cas_ascending = GGS_bool (true) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1__3C_) COMMA_HERE) ;
      var_cas_ascending = GGS_bool (true) ;
      } break ;
    case 3 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1__3E_) COMMA_HERE) ;
      var_cas_ascending = GGS_bool (false) ;
      } break ;
    default :
      break ;
  }
  GGS_typeExpression  var_cas_expression ;
  GGS_AC_galgasType  var_cas_expressionType ;
  nt_expression_ (inLexique, var_cas_inComponentSemanticsEntitiesMap, var_cas_inSemanticContext, var_cas_inOptionsComponentsMapForUse, var_cas_ioTemplateVariableMap, var_cas_expression, var_cas_expressionType) ;
  GGS_string var_cas_foreachPrefix ;
  switch (select_galgasTemplateParser_2 (inLexique)) {
    case 1 : {
      var_cas_foreachPrefix = GGS_string ("") ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_prefixedby) COMMA_HERE) ;
      GGS_lstring  var_cas_prefixString ;
      inLexique.assignFromAttribute_tokenString (var_cas_prefixString) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_identifier) COMMA_HERE) ;
      var_cas_foreachPrefix = var_cas_prefixString.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (190)) ;
      } break ;
    default :
      break ;
  }
  GGS_string var_cas_cppExpressionTypeName ;
  const GGS_AC_galgasType  temp_6758 = var_cas_expressionType ;
  if (temp_6758.isBuilt ()) {
    temp_6758 (HERE)->method_getTypeName (inLexique, var_cas_cppExpressionTypeName COMMA_SOURCE_FILE_AT_LINE (194)) ;
  }
  GGS_location  var_cas_instructionLocation = GGS_location (inLexique) ;
  GGS_typeListeAttributsSemantiques  var_cas_formalEnumerationList ;
  GGS_localConstantBuildStyleEnum var_cas_localConstantBuildStyleEnum ;
  GGS_bool var_cas_iteratorNewStyle ;
  const GGS_AC_galgasType  temp_7057 = var_cas_expressionType ;
  if (temp_7057.isBuilt ()) {
    temp_7057 (HERE)->method_acceptForeachInstruction (inLexique, var_cas_inComponentSemanticsEntitiesMap, var_cas_instructionLocation, var_cas_formalEnumerationList, var_cas_localConstantBuildStyleEnum, var_cas_iteratorNewStyle COMMA_SOURCE_FILE_AT_LINE (200)) ;
  }
  GGS_templateInstructionList  var_cas_beforeInstructionList = GGS_templateInstructionList ::constructor_emptyList () ;
  switch (select_galgasTemplateParser_3 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_before) COMMA_HERE) ;
      ::routine_enterTemplateString (inLexique,  var_cas_beforeInstructionList COMMA_SOURCE_FILE_AT_LINE (212)) ;
      { bool syntaxRepeat_4 = true ;
        while (syntaxRepeat_4) {
          switch (select_galgasTemplateParser_4 (inLexique)) {
            case 2 : {
              nt_template_instruction_ (inLexique, var_cas_ioTemplateVariableMap, var_cas_inSemanticContext, var_cas_inComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_beforeInstructionList) ;
              ::routine_enterTemplateString (inLexique,  var_cas_beforeInstructionList COMMA_SOURCE_FILE_AT_LINE (222)) ;
              } break ;
            default :
              syntaxRepeat_4 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  var_cas_ioTemplateVariableMap.prologue_repeatBlock (inLexique COMMA_SOURCE_FILE_AT_LINE (226)) ;
  var_cas_ioTemplateVariableMap.prologue_repeatPart (inLexique COMMA_SOURCE_FILE_AT_LINE (227)) ;
  GGS_bool var_cas_mapStyle = (var_cas_localConstantBuildStyleEnum).operator_isNotEqual (GGS_localConstantBuildStyleEnum::constructor_listStyle (inLexique COMMA_HERE)) ;
  GGS_bool var_cas_firstOne = GGS_bool (true) ;
  {
    GGS_typeListeAttributsSemantiques::cEnumerator enumerator_7992 (var_cas_formalEnumerationList, true) ;
    const GGS_typeListeAttributsSemantiques::cElement * operand_7992 = NULL ;
    while (((operand_7992 = enumerator_7992.nextObject ()))) {
      macroValidPointer (operand_7992) ;
      GGS_typeCplusPlusName  var_cas_cppName ;
      const GGS_bool cond_8241 = ((var_cas_localConstantBuildStyleEnum).operator_isEqual (GGS_localConstantBuildStyleEnum::constructor_firstIsKeyOtherMapStyle (inLexique COMMA_HERE))).operator_and (var_cas_firstOne) ;
      if (cond_8241.isBuiltAndTrue ()) {
        var_cas_cppName = GGS_typeKeyName ::constructor_new (inLexique, var_cas_instructionLocation, var_cas_iteratorNewStyle COMMA_HERE) ;
      }else if (cond_8241.isBuiltAndFalse ()) {
        var_cas_cppName = GGS_typeOperandName ::constructor_new (inLexique, var_cas_instructionLocation, operand_7992->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (236)), var_cas_mapStyle, var_cas_iteratorNewStyle COMMA_HERE) ;
      }
      GGS_lstring  var_cas_implicitVariableName = GGS_lstring ::constructor_new (inLexique, (var_cas_foreachPrefix).operator_concat (operand_7992->mAttributeName), operand_7992->mAttributeName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (238)) COMMA_HERE) ;
      var_cas_ioTemplateVariableMap.modifier_insertUsedConstInArgument (inLexique, var_cas_implicitVariableName, operand_7992->mAttributType, var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (239)) ;
      var_cas_firstOne = GGS_bool (false) ;
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_do) COMMA_HERE) ;
  GGS_lstring  var_cas_indexIdentifier ;
  switch (select_galgasTemplateParser_5 (inLexique)) {
    case 1 : {
      var_cas_indexIdentifier = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_index) COMMA_HERE) ;
      inLexique.assignFromAttribute_tokenString (var_cas_indexIdentifier) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_identifier) COMMA_HERE) ;
      GGS_typeCplusPlusName  var_cas_cppName = GGS_typeAutomaticName ::constructor_new (inLexique, var_cas_indexIdentifier.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (249)), var_cas_indexIdentifier.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (249)) COMMA_HERE) ;
      var_cas_ioTemplateVariableMap.modifier_insertConstInArgument (inLexique, var_cas_indexIdentifier, GGS_typeGalgas_uint ::constructor_new (inLexique COMMA_HERE), var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (250)) ;
      } break ;
    default :
      break ;
  }
  GGS_templateInstructionList  var_cas_doInstructionList = GGS_templateInstructionList ::constructor_emptyList () ;
  ::routine_enterTemplateString (inLexique,  var_cas_doInstructionList COMMA_SOURCE_FILE_AT_LINE (253)) ;
  { bool syntaxRepeat_6 = true ;
    while (syntaxRepeat_6) {
      switch (select_galgasTemplateParser_6 (inLexique)) {
        case 2 : {
          nt_template_instruction_ (inLexique, var_cas_ioTemplateVariableMap, var_cas_inSemanticContext, var_cas_inComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_doInstructionList) ;
          ::routine_enterTemplateString (inLexique,  var_cas_doInstructionList COMMA_SOURCE_FILE_AT_LINE (263)) ;
          } break ;
        default :
          syntaxRepeat_6 = false ;
          break ;
      }
    }
  }
  var_cas_ioTemplateVariableMap.epilogue_repeatPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (227)) ;
  var_cas_ioTemplateVariableMap.epilogue_repeatBlock (inLexique COMMA_SOURCE_FILE_AT_LINE (226)) ;
  GGS_templateInstructionList  var_cas_betweenInstructionList = GGS_templateInstructionList ::constructor_emptyList () ;
  switch (select_galgasTemplateParser_7 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_between) COMMA_HERE) ;
      ::routine_enterTemplateString (inLexique,  var_cas_betweenInstructionList COMMA_SOURCE_FILE_AT_LINE (272)) ;
      { bool syntaxRepeat_8 = true ;
        while (syntaxRepeat_8) {
          switch (select_galgasTemplateParser_8 (inLexique)) {
            case 2 : {
              nt_template_instruction_ (inLexique, var_cas_ioTemplateVariableMap, var_cas_inSemanticContext, var_cas_inComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_betweenInstructionList) ;
              ::routine_enterTemplateString (inLexique,  var_cas_betweenInstructionList COMMA_SOURCE_FILE_AT_LINE (282)) ;
              } break ;
            default :
              syntaxRepeat_8 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  GGS_templateInstructionList  var_cas_afterInstructionList = GGS_templateInstructionList ::constructor_emptyList () ;
  switch (select_galgasTemplateParser_9 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_after) COMMA_HERE) ;
      ::routine_enterTemplateString (inLexique,  var_cas_afterInstructionList COMMA_SOURCE_FILE_AT_LINE (290)) ;
      { bool syntaxRepeat_10 = true ;
        while (syntaxRepeat_10) {
          switch (select_galgasTemplateParser_10 (inLexique)) {
            case 2 : {
              nt_template_instruction_ (inLexique, var_cas_ioTemplateVariableMap, var_cas_inSemanticContext, var_cas_inComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_beforeInstructionList) ;
              ::routine_enterTemplateString (inLexique,  var_cas_afterInstructionList COMMA_SOURCE_FILE_AT_LINE (300)) ;
              } break ;
            default :
              syntaxRepeat_10 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_foreach) COMMA_HERE) ;
  var_cas_ioResultingInstructionList.addAssign_operation (GGS_templateInstructionForeach ::constructor_new (inLexique, var_cas_ascending, var_cas_cppExpressionTypeName, var_cas_iteratorNewStyle, var_cas_expression, var_cas_instructionLocation, var_cas_beforeInstructionList, var_cas_doInstructionList, var_cas_indexIdentifier, var_cas_betweenInstructionList, var_cas_afterInstructionList COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'template_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void galgasTemplateParser::
pr_template_instruction_galgasTemplateParser_322_27_ (galgasTemplateScanner & inLexique,
                                GGS_typeVariablesMap  &var_cas_ioTemplateVariableMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_templateInstructionList  &var_cas_ioResultingInstructionList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_if) COMMA_HERE) ;
  GGS_templateInstructionIfBranchList  var_cas_templateInstructionIfBranchList = GGS_templateInstructionIfBranchList ::constructor_emptyList () ;
  { bool syntaxRepeat_11 = true ;
    while (syntaxRepeat_11) {
        GGS_typeExpression  var_cas_expression ;
        GGS_AC_galgasType  var_cas_expressionType ;
        nt_expression_ (inLexique, var_cas_inComponentSemanticsEntitiesMap, var_cas_inSemanticContext, var_cas_inOptionsComponentsMapForUse, var_cas_ioTemplateVariableMap, var_cas_expression, var_cas_expressionType) ;
        GGS_typeGalgas_bool  var_cas_x = GGS_typeGalgas_bool::castFrom (inLexique, var_cas_expressionType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (342)) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_then) COMMA_HERE) ;
        GGS_templateInstructionList  var_cas_instructionList = GGS_templateInstructionList ::constructor_emptyList () ;
        ::routine_enterTemplateString (inLexique,  var_cas_instructionList COMMA_SOURCE_FILE_AT_LINE (345)) ;
        { bool syntaxRepeat_12 = true ;
          while (syntaxRepeat_12) {
            switch (select_galgasTemplateParser_12 (inLexique)) {
              case 2 : {
                nt_template_instruction_ (inLexique, var_cas_ioTemplateVariableMap, var_cas_inSemanticContext, var_cas_inComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_instructionList) ;
                ::routine_enterTemplateString (inLexique,  var_cas_instructionList COMMA_SOURCE_FILE_AT_LINE (355)) ;
                } break ;
              default :
                syntaxRepeat_12 = false ;
                break ;
            }
          }
        }
        var_cas_templateInstructionIfBranchList.addAssign_operation (var_cas_expression, var_cas_instructionList) ;
      switch (select_galgasTemplateParser_11 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_elsif) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_11 = false ;
          break ;
      }
    }
  }
  GGS_templateInstructionList  var_cas_elseInstructionList = GGS_templateInstructionList ::constructor_emptyList () ;
  switch (select_galgasTemplateParser_13 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_else) COMMA_HERE) ;
      ::routine_enterTemplateString (inLexique,  var_cas_elseInstructionList COMMA_SOURCE_FILE_AT_LINE (366)) ;
      { bool syntaxRepeat_14 = true ;
        while (syntaxRepeat_14) {
          switch (select_galgasTemplateParser_14 (inLexique)) {
            case 2 : {
              nt_template_instruction_ (inLexique, var_cas_ioTemplateVariableMap, var_cas_inSemanticContext, var_cas_inComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_elseInstructionList) ;
              ::routine_enterTemplateString (inLexique,  var_cas_elseInstructionList COMMA_SOURCE_FILE_AT_LINE (376)) ;
              } break ;
            default :
              syntaxRepeat_14 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_if) COMMA_HERE) ;
  var_cas_ioResultingInstructionList.addAssign_operation (GGS_templateInstructionIf ::constructor_new (inLexique, var_cas_templateInstructionIfBranchList, var_cas_elseInstructionList COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Implementation of production rule 'lexique_component_start_symbol'     *
//                                                                           *
//---------------------------------------------------------------------------*

void galgasTemplateParser::
pr_lexique_component_start_symbol_galgasTemplateParser_390_37_ (galgasTemplateScanner & inLexique,
                                GGS_typeVariablesMap  &var_cas_ioTemplateVariableMap,
                                const GGS_EXsemanticContext var_cas_inSemanticContext,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_templateInstructionList  &var_cas_outResultingInstructionList) {
  var_cas_outResultingInstructionList = GGS_templateInstructionList ::constructor_emptyList () ;
  var_cas_ioTemplateVariableMap.prologue_verifyVariableUsing (inLexique COMMA_SOURCE_FILE_AT_LINE (398)) ;
  ::routine_enterTemplateString (inLexique,  var_cas_outResultingInstructionList COMMA_SOURCE_FILE_AT_LINE (399)) ;
  { bool syntaxRepeat_15 = true ;
    while (syntaxRepeat_15) {
      switch (select_galgasTemplateParser_15 (inLexique)) {
        case 2 : {
          nt_template_instruction_ (inLexique, var_cas_ioTemplateVariableMap, var_cas_inSemanticContext, var_cas_inComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_outResultingInstructionList) ;
          ::routine_enterTemplateString (inLexique,  var_cas_outResultingInstructionList COMMA_SOURCE_FILE_AT_LINE (409)) ;
          } break ;
        default :
          syntaxRepeat_15 = false ;
          break ;
      }
    }
  }
  var_cas_ioTemplateVariableMap.epilogue_verifyVariableUsing (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (398)) ;
}

//---------------------------------------------------------------------------*

