//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'galgasTemplateParser.cpp'                       *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                      march 29th, 2008, at 9h31'28"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgasTemplateParser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "galgasTemplateParser.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//    Implementation of production rule 'lexique_component_start_symbol'     *
//                                                                           *
//---------------------------------------------------------------------------*

void galgasTemplateParser::
galgasTemplateParser::
pr_lexique_component_start_symbol_galgasTemplateParser_27_4_ (galgasTemplateScanner & _inLexique) {
  _inLexique.appendToSentString (GGS_string::constructor_retrieveAndResetTemplateString (_inLexique COMMA_HERE)) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_repeat_galgasTemplateParser_0 (_inLexique)) {
        case 2 : {
          GGS_lstring  var_cas_parameterName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_parameterName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_identifier) COMMA_HERE) ;
          _inLexique.printMessage (C_String ("LOGGING parameterName: ") + var_cas_parameterName.reader_description (_inLexique COMMA_HERE) + "\n" COMMA_SOURCE_FILE_AT_LINE (33)) ;
          _inLexique.appendToSentString (GGS_string::constructor_retrieveAndResetTemplateString (_inLexique COMMA_HERE)) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

