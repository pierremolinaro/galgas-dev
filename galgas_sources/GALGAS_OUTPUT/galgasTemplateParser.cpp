//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'galgasTemplateParser.cpp'                       *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      june 11th, 2009, at 20h52'23"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgasTemplateParser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "galgasTemplateParser.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "enterTemplateString"               *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterTemplateString (C_Compiler & inLexique,
                                GGS_templateInstructionList  & var_cas_outResultingInstructionList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterTemplateString at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_lstring  var_cas_s ;
  var_cas_s = GGS_lstring ::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
  if (((var_cas_s.ggs_string ().reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (53))).operator_strictSup (GGS_uint (0U))).isBuiltAndTrue ()) {
    var_cas_outResultingInstructionList._addAssign_operation (GGS_templateInstructionString ::constructor_new (inLexique, var_cas_s.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (54)) COMMA_HERE)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterTemplateString\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'template_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void galgasTemplateParser::
pr_template_instruction_galgasTemplateParser_60_27_ (galgasTemplateScanner & inLexique,
                                GGS_typeVariablesMap  &var_cas_ioTemplateVariableMap,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_templateInstructionList  &var_cas_ioResultingInstructionList) {
  GGS_typeExpression  var_cas_expression ;
  GGS_AC_galgasType  var_cas_resultType ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1__28_) COMMA_HERE) ;
  nt_expression_ (inLexique, var_cas_inComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioTemplateVariableMap, var_cas_expression, var_cas_resultType) ;
  GGS_typeGalgas_string  var_cas_x ;
  var_cas_x = GGS_typeGalgas_string::castFrom (inLexique, var_cas_resultType.getPtr (), true, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (76)) ;
  var_cas_ioResultingInstructionList._addAssign_operation (GGS_templateInstructionExpression ::constructor_new (inLexique, var_cas_expression COMMA_HERE)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1__29_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'template_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void galgasTemplateParser::
pr_template_instruction_galgasTemplateParser_83_27_ (galgasTemplateScanner & inLexique,
                                GGS_typeVariablesMap  &var_cas_ioTemplateVariableMap,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_inComponentSemanticsEntitiesMap */,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_templateInstructionList  &var_cas_ioResultingInstructionList) {
  GGS_lstring  var_cas_parameterName ;
  inLexique.assignFromAttribute_tokenString (var_cas_parameterName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_identifier) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_type ;
  GGS_typeCplusPlusName  var_cas_cppName ;
  var_cas_ioTemplateVariableMap.modifier_searchForReadOnlyAccess (inLexique, var_cas_parameterName, var_cas_type, var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (93)) ;
  GGS_typeGalgas_string  var_cas_x ;
  var_cas_x = GGS_typeGalgas_string::castFrom (inLexique, var_cas_type.getPtr (), true, var_cas_parameterName COMMA_SOURCE_FILE_AT_LINE (94)) ;
  var_cas_ioResultingInstructionList._addAssign_operation (GGS_templateInstructionConstant ::constructor_new (inLexique, var_cas_cppName COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'template_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void galgasTemplateParser::
pr_template_instruction_galgasTemplateParser_100_27_ (galgasTemplateScanner & inLexique,
                                GGS_typeVariablesMap  &var_cas_ioTemplateVariableMap,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_templateInstructionList  &var_cas_ioResultingInstructionList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_foreach) COMMA_HERE) ;
  GGS_bool var_cas_ascending ;
  switch (select_galgasTemplateParser_0 (inLexique)) {
    case 1 : {
      var_cas_ascending = GGS_bool (true) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1__3C_) COMMA_HERE) ;
      var_cas_ascending = GGS_bool (true) ;
      } break ;
    case 3 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1__3E_) COMMA_HERE) ;
      var_cas_ascending = GGS_bool (false) ;
      } break ;
    default :
      break ;
  }
  GGS_typeExpression  var_cas_expression ;
  GGS_AC_galgasType  var_cas_expressionType ;
  nt_expression_ (inLexique, var_cas_inComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_ioTemplateVariableMap, var_cas_expression, var_cas_expressionType) ;
  GGS_string var_cas_cppExpressionTypeName ;
  const GGS_AC_galgasType  _temp_4945 = var_cas_expressionType ;
  if (_temp_4945.isBuilt ()) {
    _temp_4945 (HERE)->method_getTypeName (inLexique, var_cas_cppExpressionTypeName COMMA_SOURCE_FILE_AT_LINE (128)) ;
  }
  GGS_location  var_cas_instructionLocation ;
  var_cas_instructionLocation = GGS_location (inLexique) ;
  GGS_typeListeAttributsSemantiques  var_cas_formalEnumerationList ;
  GGS_localConstantBuildStyleEnum var_cas_localConstantBuildStyleEnum ;
  GGS_bool var_cas_iteratorNewStyle ;
  const GGS_AC_galgasType  _temp_5244 = var_cas_expressionType ;
  if (_temp_5244.isBuilt ()) {
    _temp_5244 (HERE)->method_acceptForeachInstruction (inLexique, var_cas_inComponentSemanticsEntitiesMap, var_cas_instructionLocation, var_cas_formalEnumerationList, var_cas_localConstantBuildStyleEnum, var_cas_iteratorNewStyle COMMA_SOURCE_FILE_AT_LINE (134)) ;
  }
  var_cas_ioTemplateVariableMap.prologue_repeatBlock (inLexique COMMA_SOURCE_FILE_AT_LINE (141)) ;
  var_cas_ioTemplateVariableMap.prologue_repeatPart (inLexique COMMA_SOURCE_FILE_AT_LINE (142)) ;
  GGS_bool var_cas_mapStyle ;
  var_cas_mapStyle = (var_cas_localConstantBuildStyleEnum).operator_isNotEqual (GGS_localConstantBuildStyleEnum::constructor_listStyle (inLexique COMMA_HERE)) ;
  GGS_bool var_cas_firstOne ;
  var_cas_firstOne = GGS_bool (true) ;
  {
    GGS_typeListeAttributsSemantiques::cEnumerator enumerator_5691 (var_cas_formalEnumerationList, true) ;
    const GGS_typeListeAttributsSemantiques::cElement * operand_5691 = NULL ;
    while (((operand_5691 = enumerator_5691.nextObject ()))) {
      macroValidPointer (operand_5691) ;
      GGS_typeCplusPlusName  var_cas_cppName ;
      if ((((var_cas_localConstantBuildStyleEnum).operator_isEqual (GGS_localConstantBuildStyleEnum::constructor_firstIsKeyOtherMapStyle (inLexique COMMA_HERE))).operator_and (var_cas_firstOne)).isBuiltAndTrue ()) {
        var_cas_cppName = GGS_typeKeyName ::constructor_new (inLexique, var_cas_instructionLocation, var_cas_iteratorNewStyle COMMA_HERE) ;
      }else{
        var_cas_cppName = GGS_typeOperandName ::constructor_new (inLexique, var_cas_instructionLocation, operand_5691->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (151)), var_cas_mapStyle, var_cas_iteratorNewStyle COMMA_HERE) ;
      }
      var_cas_ioTemplateVariableMap.modifier_insertUsedConstInArgument (inLexique, operand_5691->mAttributeName, operand_5691->mAttributType, var_cas_cppName COMMA_SOURCE_FILE_AT_LINE (153)) ;
      var_cas_firstOne = GGS_bool (false) ;
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_do) COMMA_HERE) ;
  GGS_templateInstructionList  var_cas_doInstructionList ;
  var_cas_doInstructionList = GGS_templateInstructionList ::constructor_emptyList () ;
  ::routine_enterTemplateString (inLexique,  var_cas_doInstructionList COMMA_SOURCE_FILE_AT_LINE (158)) ;
  { bool syntaxRepeat_1 = true ;
    while (syntaxRepeat_1) {
      switch (select_repeat_galgasTemplateParser_1 (inLexique)) {
        case 2 : {
          nt_template_instruction_ (inLexique, var_cas_ioTemplateVariableMap, var_cas_inComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_doInstructionList) ;
          ::routine_enterTemplateString (inLexique,  var_cas_doInstructionList COMMA_SOURCE_FILE_AT_LINE (167)) ;
          } break ;
        default :
          syntaxRepeat_1 = false ;
          break ;
      }
    }
  }
  var_cas_ioTemplateVariableMap.epilogue_repeatPart (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (142)) ;
  var_cas_ioTemplateVariableMap.epilogue_repeatBlock (inLexique COMMA_SOURCE_FILE_AT_LINE (141)) ;
  GGS_templateInstructionList  var_cas_betweenInstructionList ;
  var_cas_betweenInstructionList = GGS_templateInstructionList ::constructor_emptyList () ;
  switch (select_galgasTemplateParser_2 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_between) COMMA_HERE) ;
      ::routine_enterTemplateString (inLexique,  var_cas_betweenInstructionList COMMA_SOURCE_FILE_AT_LINE (176)) ;
      { bool syntaxRepeat_3 = true ;
        while (syntaxRepeat_3) {
          switch (select_repeat_galgasTemplateParser_3 (inLexique)) {
            case 2 : {
              nt_template_instruction_ (inLexique, var_cas_ioTemplateVariableMap, var_cas_inComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_betweenInstructionList) ;
              ::routine_enterTemplateString (inLexique,  var_cas_betweenInstructionList COMMA_SOURCE_FILE_AT_LINE (185)) ;
              } break ;
            default :
              syntaxRepeat_3 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgasTemplateScanner::galgasTemplateScanner_1_foreach) COMMA_HERE) ;
  var_cas_ioResultingInstructionList._addAssign_operation (GGS_templateInstructionForeach ::constructor_new (inLexique, var_cas_ascending, var_cas_cppExpressionTypeName, var_cas_iteratorNewStyle, var_cas_expression, var_cas_instructionLocation, var_cas_doInstructionList, var_cas_betweenInstructionList COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Implementation of production rule 'lexique_component_start_symbol'     *
//                                                                           *
//---------------------------------------------------------------------------*

void galgasTemplateParser::
pr_lexique_component_start_symbol_galgasTemplateParser_203_37_ (galgasTemplateScanner & inLexique,
                                GGS_typeVariablesMap  &var_cas_ioTemplateVariableMap,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inComponentSemanticsEntitiesMap,
                                const GGS_M_optionComponents  var_cas_inOptionsComponentsMapForUse,
                                GGS_templateInstructionList  &var_cas_outResultingInstructionList) {
  var_cas_outResultingInstructionList = GGS_templateInstructionList ::constructor_emptyList () ;
  var_cas_ioTemplateVariableMap.prologue_verifyVariableUsing (inLexique COMMA_SOURCE_FILE_AT_LINE (210)) ;
  ::routine_enterTemplateString (inLexique,  var_cas_outResultingInstructionList COMMA_SOURCE_FILE_AT_LINE (211)) ;
  { bool syntaxRepeat_4 = true ;
    while (syntaxRepeat_4) {
      switch (select_repeat_galgasTemplateParser_4 (inLexique)) {
        case 2 : {
          nt_template_instruction_ (inLexique, var_cas_ioTemplateVariableMap, var_cas_inComponentSemanticsEntitiesMap, var_cas_inOptionsComponentsMapForUse, var_cas_outResultingInstructionList) ;
          ::routine_enterTemplateString (inLexique,  var_cas_outResultingInstructionList COMMA_SOURCE_FILE_AT_LINE (220)) ;
          } break ;
        default :
          syntaxRepeat_4 = false ;
          break ;
      }
    }
  }
  var_cas_ioTemplateVariableMap.epilogue_verifyVariableUsing (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (210)) ;
}

//---------------------------------------------------------------------------*

