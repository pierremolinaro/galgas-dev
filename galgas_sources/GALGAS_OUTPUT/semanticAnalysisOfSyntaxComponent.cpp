//---------------------------------------------------------------------------*
//                                                                           *
//               File 'semanticAnalysisOfSyntaxComponent.cpp'                *
//             Generated by version version GALGAS_BETA_VERSION              *
//                      april 26th, 2012, at 13h43'11"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "semanticAnalysisOfSyntaxComponent.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "templateGrammar.h"
#include "galgas_cli_options.h"
#include "grammarLL1grammar.h"
#include "syntaxSLRgrammar.h"
#include "lexiqueLL1grammar.h"
#include "semanticsSLRgrammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticAnalysisOfSyntaxComponent.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//            Routine 'enterNonterminalNonTerminalInMapAndCheck'             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterNonterminalNonTerminalInMapAndCheck (const GALGAS_lstring constinArgument0,
                                                       const GALGAS_nonterminalLabelMap constinArgument1,
                                                       GALGAS_nonterminalMap & ioArgument2,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'buildNonterminalDeclarationsMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildNonterminalDeclarationsMap (const GALGAS_nonterminalDeclarationListAST constinArgument0,
                                              const GALGAS_semanticContext constinArgument1,
                                              GALGAS_nonterminalMap & outArgument2,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

cMapElement_nonterminalLabelMap::cMapElement_nonterminalLabelMap (const GALGAS_lstring & inKey,
                                                                  const GALGAS_formalParameterListForGeneration & in_mSignatureForGeneration,
                                                                  const GALGAS_formalParameterSignature & in_mSignature,
                                                                  const GALGAS_location & in_mEndOfArgumentLocation
                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mSignatureForGeneration (in_mSignatureForGeneration),
mAttribute_mSignature (in_mSignature),
mAttribute_mEndOfArgumentLocation (in_mEndOfArgumentLocation) {
}

//---------------------------------------------------------------------------*

bool cMapElement_nonterminalLabelMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mSignatureForGeneration.isValid () && mAttribute_mSignature.isValid () && mAttribute_mEndOfArgumentLocation.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_nonterminalLabelMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_nonterminalLabelMap (mAttribute_lkey, mAttribute_mSignatureForGeneration, mAttribute_mSignature, mAttribute_mEndOfArgumentLocation COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_nonterminalLabelMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSignatureForGeneration" ":" ;
  mAttribute_mSignatureForGeneration.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSignature" ":" ;
  mAttribute_mSignature.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEndOfArgumentLocation" ":" ;
  mAttribute_mEndOfArgumentLocation.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_nonterminalLabelMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_nonterminalLabelMap * operand = (cMapElement_nonterminalLabelMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mSignatureForGeneration.objectCompare (operand->mAttribute_mSignatureForGeneration) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSignature.objectCompare (operand->mAttribute_mSignature) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mEndOfArgumentLocation.objectCompare (operand->mAttribute_mEndOfArgumentLocation) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap::GALGAS_nonterminalLabelMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap::GALGAS_nonterminalLabelMap (const GALGAS_nonterminalLabelMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap & GALGAS_nonterminalLabelMap::operator = (const GALGAS_nonterminalLabelMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap GALGAS_nonterminalLabelMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_nonterminalLabelMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap GALGAS_nonterminalLabelMap::constructor_mapWithMapToOverride (const GALGAS_nonterminalLabelMap & inMapToOverride
                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_nonterminalLabelMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap GALGAS_nonterminalLabelMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_nonterminalLabelMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_nonterminalLabelMap::modifier_insertKey (GALGAS_lstring inKey,
                                                     GALGAS_formalParameterListForGeneration inArgument0,
                                                     GALGAS_formalParameterSignature inArgument1,
                                                     GALGAS_location inArgument2,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cMapElement_nonterminalLabelMap * p = NULL ;
  macroMyNew (p, cMapElement_nonterminalLabelMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' nonterminal label has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_nonterminalLabelMap_searchKey = "the '%K' nonterminal label is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_nonterminalLabelMap::method_searchKey (GALGAS_lstring inKey,
                                                   GALGAS_formalParameterListForGeneration & outArgument0,
                                                   GALGAS_formalParameterSignature & outArgument1,
                                                   GALGAS_location & outArgument2,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const {
  const cMapElement_nonterminalLabelMap * p = (const cMapElement_nonterminalLabelMap *) performSearch (inKey,
                                                                                                         inCompiler,
                                                                                                         kSearchErrorMessage_nonterminalLabelMap_searchKey
                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_nonterminalLabelMap) ;
    outArgument0 = p->mAttribute_mSignatureForGeneration ;
    outArgument1 = p->mAttribute_mSignature ;
    outArgument2 = p->mAttribute_mEndOfArgumentLocation ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterListForGeneration GALGAS_nonterminalLabelMap::reader_mSignatureForGenerationForKey (const GALGAS_string & inKey,
                                                                                                          C_Compiler * inCompiler
                                                                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nonterminalLabelMap * p = (const cMapElement_nonterminalLabelMap *) attributes ;
  GALGAS_formalParameterListForGeneration result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_nonterminalLabelMap) ;
    result = p->mAttribute_mSignatureForGeneration ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterSignature GALGAS_nonterminalLabelMap::reader_mSignatureForKey (const GALGAS_string & inKey,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nonterminalLabelMap * p = (const cMapElement_nonterminalLabelMap *) attributes ;
  GALGAS_formalParameterSignature result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_nonterminalLabelMap) ;
    result = p->mAttribute_mSignature ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_location GALGAS_nonterminalLabelMap::reader_mEndOfArgumentLocationForKey (const GALGAS_string & inKey,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nonterminalLabelMap * p = (const cMapElement_nonterminalLabelMap *) attributes ;
  GALGAS_location result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_nonterminalLabelMap) ;
    result = p->mAttribute_mEndOfArgumentLocation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_nonterminalLabelMap::modifier_setMSignatureForGenerationForKey (GALGAS_formalParameterListForGeneration inAttributeValue,
                                                                            GALGAS_string inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nonterminalLabelMap * p = (cMapElement_nonterminalLabelMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nonterminalLabelMap) ;
    p->mAttribute_mSignatureForGeneration = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_nonterminalLabelMap::modifier_setMSignatureForKey (GALGAS_formalParameterSignature inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nonterminalLabelMap * p = (cMapElement_nonterminalLabelMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nonterminalLabelMap) ;
    p->mAttribute_mSignature = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_nonterminalLabelMap::modifier_setMEndOfArgumentLocationForKey (GALGAS_location inAttributeValue,
                                                                           GALGAS_string inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nonterminalLabelMap * p = (cMapElement_nonterminalLabelMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nonterminalLabelMap) ;
    p->mAttribute_mEndOfArgumentLocation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_nonterminalLabelMap * GALGAS_nonterminalLabelMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                        const GALGAS_string & inKey
                                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nonterminalLabelMap * result = (cMapElement_nonterminalLabelMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_nonterminalLabelMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_nonterminalLabelMap * GALGAS_nonterminalLabelMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                           const GALGAS_lstring & inKey
                                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_nonterminalLabelMap_searchKey COMMA_THERE) ;
  cMapElement_nonterminalLabelMap * result = (cMapElement_nonterminalLabelMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_nonterminalLabelMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_nonterminalLabelMap::cEnumerator_nonterminalLabelMap (const GALGAS_nonterminalLabelMap & inEnumeratedObject,
                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap_2E_element cEnumerator_nonterminalLabelMap::current (LOCATION_ARGS) const {
  const cMapElement_nonterminalLabelMap * p = (const cMapElement_nonterminalLabelMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_nonterminalLabelMap) ;
  return GALGAS_nonterminalLabelMap_2E_element (p->mAttribute_lkey, p->mAttribute_mSignatureForGeneration, p->mAttribute_mSignature, p->mAttribute_mEndOfArgumentLocation) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_nonterminalLabelMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterListForGeneration cEnumerator_nonterminalLabelMap::current_mSignatureForGeneration (LOCATION_ARGS) const {
  const cMapElement_nonterminalLabelMap * p = (const cMapElement_nonterminalLabelMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_nonterminalLabelMap) ;
  return p->mAttribute_mSignatureForGeneration ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterSignature cEnumerator_nonterminalLabelMap::current_mSignature (LOCATION_ARGS) const {
  const cMapElement_nonterminalLabelMap * p = (const cMapElement_nonterminalLabelMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_nonterminalLabelMap) ;
  return p->mAttribute_mSignature ;
}

//---------------------------------------------------------------------------*

GALGAS_location cEnumerator_nonterminalLabelMap::current_mEndOfArgumentLocation (LOCATION_ARGS) const {
  const cMapElement_nonterminalLabelMap * p = (const cMapElement_nonterminalLabelMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_nonterminalLabelMap) ;
  return p->mAttribute_mEndOfArgumentLocation ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @nonterminalLabelMap type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_nonterminalLabelMap ("nonterminalLabelMap",
                                            NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_nonterminalLabelMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_nonterminalLabelMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_nonterminalLabelMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_nonterminalLabelMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap GALGAS_nonterminalLabelMap::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler,
                                                                      const GALGAS_location & inErrorLocation
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_nonterminalLabelMap result ;
  const GALGAS_nonterminalLabelMap * p = (const GALGAS_nonterminalLabelMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_nonterminalLabelMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "nonterminalLabelMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_nonterminalMap::cMapElement_nonterminalMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_nonterminalLabelMap & in_mLabelMap
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mLabelMap (in_mLabelMap) {
}

//---------------------------------------------------------------------------*

bool cMapElement_nonterminalMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mLabelMap.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_nonterminalMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_nonterminalMap (mAttribute_lkey, mAttribute_mLabelMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_nonterminalMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mLabelMap" ":" ;
  mAttribute_mLabelMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_nonterminalMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_nonterminalMap * operand = (cMapElement_nonterminalMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mLabelMap.objectCompare (operand->mAttribute_mLabelMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalMap::GALGAS_nonterminalMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalMap::GALGAS_nonterminalMap (const GALGAS_nonterminalMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalMap & GALGAS_nonterminalMap::operator = (const GALGAS_nonterminalMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalMap GALGAS_nonterminalMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_nonterminalMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalMap GALGAS_nonterminalMap::constructor_mapWithMapToOverride (const GALGAS_nonterminalMap & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_nonterminalMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalMap GALGAS_nonterminalMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_nonterminalMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_nonterminalMap::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_nonterminalLabelMap inArgument0,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_nonterminalMap * p = NULL ;
  macroMyNew (p, cMapElement_nonterminalMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' nonterminal has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_nonterminalMap_searchKey = "the '%K' nonterminal is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_nonterminalMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_nonterminalLabelMap & outArgument0,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_nonterminalMap * p = (const cMapElement_nonterminalMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_nonterminalMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_nonterminalMap) ;
    outArgument0 = p->mAttribute_mLabelMap ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap GALGAS_nonterminalMap::reader_mLabelMapForKey (const GALGAS_string & inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nonterminalMap * p = (const cMapElement_nonterminalMap *) attributes ;
  GALGAS_nonterminalLabelMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_nonterminalMap) ;
    result = p->mAttribute_mLabelMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_nonterminalMap::modifier_setMLabelMapForKey (GALGAS_nonterminalLabelMap inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nonterminalMap * p = (cMapElement_nonterminalMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nonterminalMap) ;
    p->mAttribute_mLabelMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_nonterminalMap * GALGAS_nonterminalMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                              const GALGAS_string & inKey
                                                                                              COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nonterminalMap * result = (cMapElement_nonterminalMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_nonterminalMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_nonterminalMap * GALGAS_nonterminalMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                 const GALGAS_lstring & inKey
                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_nonterminalMap_searchKey COMMA_THERE) ;
  cMapElement_nonterminalMap * result = (cMapElement_nonterminalMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_nonterminalMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_nonterminalMap::cEnumerator_nonterminalMap (const GALGAS_nonterminalMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalMap_2E_element cEnumerator_nonterminalMap::current (LOCATION_ARGS) const {
  const cMapElement_nonterminalMap * p = (const cMapElement_nonterminalMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_nonterminalMap) ;
  return GALGAS_nonterminalMap_2E_element (p->mAttribute_lkey, p->mAttribute_mLabelMap) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_nonterminalMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap cEnumerator_nonterminalMap::current_mLabelMap (LOCATION_ARGS) const {
  const cMapElement_nonterminalMap * p = (const cMapElement_nonterminalMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_nonterminalMap) ;
  return p->mAttribute_mLabelMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @nonterminalMap type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_nonterminalMap ("nonterminalMap",
                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_nonterminalMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_nonterminalMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_nonterminalMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_nonterminalMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalMap GALGAS_nonterminalMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler,
                                                            const GALGAS_location & inErrorLocation
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_nonterminalMap result ;
  const GALGAS_nonterminalMap * p = (const GALGAS_nonterminalMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_nonterminalMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "nonterminalMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Class for element of '@ruleLabelImplementationList' list          *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_ruleLabelImplementationList : public cCollectionElement {
  public : GALGAS_ruleLabelImplementationList_2E_element mObject ;

//--- Constructor
  public : cCollectionElement_ruleLabelImplementationList (const GALGAS_lstring & in_mLabelName,
                                                           const GALGAS_formalParameterListForGeneration & in_mSignatureForGeneration,
                                                           const GALGAS_formalParameterSignature & in_mSignature,
                                                           const GALGAS_location & in_mEndOfArgumentLocation,
                                                           const GALGAS_semanticInstructionListForGeneration & in_mInstructionListForGeneration
                                                           COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_ruleLabelImplementationList::cCollectionElement_ruleLabelImplementationList (const GALGAS_lstring & in_mLabelName,
                                                                                                const GALGAS_formalParameterListForGeneration & in_mSignatureForGeneration,
                                                                                                const GALGAS_formalParameterSignature & in_mSignature,
                                                                                                const GALGAS_location & in_mEndOfArgumentLocation,
                                                                                                const GALGAS_semanticInstructionListForGeneration & in_mInstructionListForGeneration
                                                                                                COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mLabelName, in_mSignatureForGeneration, in_mSignature, in_mEndOfArgumentLocation, in_mInstructionListForGeneration) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_ruleLabelImplementationList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_ruleLabelImplementationList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_ruleLabelImplementationList (mObject.mAttribute_mLabelName, mObject.mAttribute_mSignatureForGeneration, mObject.mAttribute_mSignature, mObject.mAttribute_mEndOfArgumentLocation, mObject.mAttribute_mInstructionListForGeneration COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_ruleLabelImplementationList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mLabelName" ":" ;
  mObject.mAttribute_mLabelName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSignatureForGeneration" ":" ;
  mObject.mAttribute_mSignatureForGeneration.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSignature" ":" ;
  mObject.mAttribute_mSignature.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEndOfArgumentLocation" ":" ;
  mObject.mAttribute_mEndOfArgumentLocation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstructionListForGeneration" ":" ;
  mObject.mAttribute_mInstructionListForGeneration.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_ruleLabelImplementationList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_ruleLabelImplementationList * operand = (cCollectionElement_ruleLabelImplementationList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_ruleLabelImplementationList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList::GALGAS_ruleLabelImplementationList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList::GALGAS_ruleLabelImplementationList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList GALGAS_ruleLabelImplementationList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_ruleLabelImplementationList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList GALGAS_ruleLabelImplementationList::constructor_listWithValue (const GALGAS_lstring & inOperand0,
                                                                                                  const GALGAS_formalParameterListForGeneration & inOperand1,
                                                                                                  const GALGAS_formalParameterSignature & inOperand2,
                                                                                                  const GALGAS_location & inOperand3,
                                                                                                  const GALGAS_semanticInstructionListForGeneration & inOperand4
                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_ruleLabelImplementationList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_ruleLabelImplementationList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3, inOperand4 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_ruleLabelImplementationList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                    const GALGAS_lstring & in_mLabelName,
                                                                    const GALGAS_formalParameterListForGeneration & in_mSignatureForGeneration,
                                                                    const GALGAS_formalParameterSignature & in_mSignature,
                                                                    const GALGAS_location & in_mEndOfArgumentLocation,
                                                                    const GALGAS_semanticInstructionListForGeneration & in_mInstructionListForGeneration
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement_ruleLabelImplementationList * p = NULL ;
  macroMyNew (p, cCollectionElement_ruleLabelImplementationList (in_mLabelName,
                                                                 in_mSignatureForGeneration,
                                                                 in_mSignature,
                                                                 in_mEndOfArgumentLocation,
                                                                 in_mInstructionListForGeneration COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_ruleLabelImplementationList::addAssign_operation (const GALGAS_lstring & inOperand0,
                                                              const GALGAS_formalParameterListForGeneration & inOperand1,
                                                              const GALGAS_formalParameterSignature & inOperand2,
                                                              const GALGAS_location & inOperand3,
                                                              const GALGAS_semanticInstructionListForGeneration & inOperand4
                                                              COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_ruleLabelImplementationList (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleLabelImplementationList::modifier_prependValue (GALGAS_lstring inOperand0,
                                                                GALGAS_formalParameterListForGeneration inOperand1,
                                                                GALGAS_formalParameterSignature inOperand2,
                                                                GALGAS_location inOperand3,
                                                                GALGAS_semanticInstructionListForGeneration inOperand4
                                                                COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_ruleLabelImplementationList (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleLabelImplementationList::modifier_popFirst (GALGAS_lstring & outOperand0,
                                                            GALGAS_formalParameterListForGeneration & outOperand1,
                                                            GALGAS_formalParameterSignature & outOperand2,
                                                            GALGAS_location & outOperand3,
                                                            GALGAS_semanticInstructionListForGeneration & outOperand4,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleLabelImplementationList * p = (cCollectionElement_ruleLabelImplementationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ruleLabelImplementationList) ;
    outOperand0 = p->mObject.mAttribute_mLabelName ;
    outOperand1 = p->mObject.mAttribute_mSignatureForGeneration ;
    outOperand2 = p->mObject.mAttribute_mSignature ;
    outOperand3 = p->mObject.mAttribute_mEndOfArgumentLocation ;
    outOperand4 = p->mObject.mAttribute_mInstructionListForGeneration ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleLabelImplementationList::modifier_popLast (GALGAS_lstring & outOperand0,
                                                           GALGAS_formalParameterListForGeneration & outOperand1,
                                                           GALGAS_formalParameterSignature & outOperand2,
                                                           GALGAS_location & outOperand3,
                                                           GALGAS_semanticInstructionListForGeneration & outOperand4,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleLabelImplementationList * p = (cCollectionElement_ruleLabelImplementationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ruleLabelImplementationList) ;
    outOperand0 = p->mObject.mAttribute_mLabelName ;
    outOperand1 = p->mObject.mAttribute_mSignatureForGeneration ;
    outOperand2 = p->mObject.mAttribute_mSignature ;
    outOperand3 = p->mObject.mAttribute_mEndOfArgumentLocation ;
    outOperand4 = p->mObject.mAttribute_mInstructionListForGeneration ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleLabelImplementationList::method_first (GALGAS_lstring & outOperand0,
                                                       GALGAS_formalParameterListForGeneration & outOperand1,
                                                       GALGAS_formalParameterSignature & outOperand2,
                                                       GALGAS_location & outOperand3,
                                                       GALGAS_semanticInstructionListForGeneration & outOperand4,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleLabelImplementationList * p = (cCollectionElement_ruleLabelImplementationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ruleLabelImplementationList) ;
    outOperand0 = p->mObject.mAttribute_mLabelName ;
    outOperand1 = p->mObject.mAttribute_mSignatureForGeneration ;
    outOperand2 = p->mObject.mAttribute_mSignature ;
    outOperand3 = p->mObject.mAttribute_mEndOfArgumentLocation ;
    outOperand4 = p->mObject.mAttribute_mInstructionListForGeneration ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleLabelImplementationList::method_last (GALGAS_lstring & outOperand0,
                                                      GALGAS_formalParameterListForGeneration & outOperand1,
                                                      GALGAS_formalParameterSignature & outOperand2,
                                                      GALGAS_location & outOperand3,
                                                      GALGAS_semanticInstructionListForGeneration & outOperand4,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleLabelImplementationList * p = (cCollectionElement_ruleLabelImplementationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ruleLabelImplementationList) ;
    outOperand0 = p->mObject.mAttribute_mLabelName ;
    outOperand1 = p->mObject.mAttribute_mSignatureForGeneration ;
    outOperand2 = p->mObject.mAttribute_mSignature ;
    outOperand3 = p->mObject.mAttribute_mEndOfArgumentLocation ;
    outOperand4 = p->mObject.mAttribute_mInstructionListForGeneration ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList GALGAS_ruleLabelImplementationList::operator_concat (const GALGAS_ruleLabelImplementationList & inOperand
                                                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_ruleLabelImplementationList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList GALGAS_ruleLabelImplementationList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_ruleLabelImplementationList result = GALGAS_ruleLabelImplementationList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList GALGAS_ruleLabelImplementationList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_ruleLabelImplementationList result = GALGAS_ruleLabelImplementationList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_ruleLabelImplementationList::dotAssign_operation (const GALGAS_ruleLabelImplementationList inOperand
                                                              COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_ruleLabelImplementationList::reader_mLabelNameAtIndex (const GALGAS_uint & inIndex,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleLabelImplementationList * p = (cCollectionElement_ruleLabelImplementationList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleLabelImplementationList) ;
    result = p->mObject.mAttribute_mLabelName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterListForGeneration GALGAS_ruleLabelImplementationList::reader_mSignatureForGenerationAtIndex (const GALGAS_uint & inIndex,
                                                                                                                   C_Compiler * inCompiler
                                                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleLabelImplementationList * p = (cCollectionElement_ruleLabelImplementationList *) attributes.ptr () ;
  GALGAS_formalParameterListForGeneration result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleLabelImplementationList) ;
    result = p->mObject.mAttribute_mSignatureForGeneration ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterSignature GALGAS_ruleLabelImplementationList::reader_mSignatureAtIndex (const GALGAS_uint & inIndex,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleLabelImplementationList * p = (cCollectionElement_ruleLabelImplementationList *) attributes.ptr () ;
  GALGAS_formalParameterSignature result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleLabelImplementationList) ;
    result = p->mObject.mAttribute_mSignature ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_location GALGAS_ruleLabelImplementationList::reader_mEndOfArgumentLocationAtIndex (const GALGAS_uint & inIndex,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleLabelImplementationList * p = (cCollectionElement_ruleLabelImplementationList *) attributes.ptr () ;
  GALGAS_location result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleLabelImplementationList) ;
    result = p->mObject.mAttribute_mEndOfArgumentLocation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_semanticInstructionListForGeneration GALGAS_ruleLabelImplementationList::reader_mInstructionListForGenerationAtIndex (const GALGAS_uint & inIndex,
                                                                                                                             C_Compiler * inCompiler
                                                                                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleLabelImplementationList * p = (cCollectionElement_ruleLabelImplementationList *) attributes.ptr () ;
  GALGAS_semanticInstructionListForGeneration result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleLabelImplementationList) ;
    result = p->mObject.mAttribute_mInstructionListForGeneration ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_ruleLabelImplementationList::cEnumerator_ruleLabelImplementationList (const GALGAS_ruleLabelImplementationList & inEnumeratedObject,
                                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList_2E_element cEnumerator_ruleLabelImplementationList::current (LOCATION_ARGS) const {
  const cCollectionElement_ruleLabelImplementationList * p = (const cCollectionElement_ruleLabelImplementationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_ruleLabelImplementationList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_ruleLabelImplementationList::current_mLabelName (LOCATION_ARGS) const {
  const cCollectionElement_ruleLabelImplementationList * p = (const cCollectionElement_ruleLabelImplementationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_ruleLabelImplementationList) ;
  return p->mObject.mAttribute_mLabelName ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterListForGeneration cEnumerator_ruleLabelImplementationList::current_mSignatureForGeneration (LOCATION_ARGS) const {
  const cCollectionElement_ruleLabelImplementationList * p = (const cCollectionElement_ruleLabelImplementationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_ruleLabelImplementationList) ;
  return p->mObject.mAttribute_mSignatureForGeneration ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterSignature cEnumerator_ruleLabelImplementationList::current_mSignature (LOCATION_ARGS) const {
  const cCollectionElement_ruleLabelImplementationList * p = (const cCollectionElement_ruleLabelImplementationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_ruleLabelImplementationList) ;
  return p->mObject.mAttribute_mSignature ;
}

//---------------------------------------------------------------------------*

GALGAS_location cEnumerator_ruleLabelImplementationList::current_mEndOfArgumentLocation (LOCATION_ARGS) const {
  const cCollectionElement_ruleLabelImplementationList * p = (const cCollectionElement_ruleLabelImplementationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_ruleLabelImplementationList) ;
  return p->mObject.mAttribute_mEndOfArgumentLocation ;
}

//---------------------------------------------------------------------------*

GALGAS_semanticInstructionListForGeneration cEnumerator_ruleLabelImplementationList::current_mInstructionListForGeneration (LOCATION_ARGS) const {
  const cCollectionElement_ruleLabelImplementationList * p = (const cCollectionElement_ruleLabelImplementationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_ruleLabelImplementationList) ;
  return p->mObject.mAttribute_mInstructionListForGeneration ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                     @ruleLabelImplementationList type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_ruleLabelImplementationList ("ruleLabelImplementationList",
                                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_ruleLabelImplementationList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_ruleLabelImplementationList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_ruleLabelImplementationList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_ruleLabelImplementationList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList GALGAS_ruleLabelImplementationList::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler,
                                                                                      const GALGAS_location & inErrorLocation
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_ruleLabelImplementationList result ;
  const GALGAS_ruleLabelImplementationList * p = (const GALGAS_ruleLabelImplementationList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_ruleLabelImplementationList *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "ruleLabelImplementationList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Class for element of '@ruleDeclarationList' list              *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_ruleDeclarationList : public cCollectionElement {
  public : GALGAS_ruleDeclarationList_2E_element mObject ;

//--- Constructor
  public : cCollectionElement_ruleDeclarationList (const GALGAS_string & in_mNonterminalName,
                                                   const GALGAS_uint & in_mRuleIndex,
                                                   const GALGAS_ruleLabelImplementationList & in_mLabelImplementationList
                                                   COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_ruleDeclarationList::cCollectionElement_ruleDeclarationList (const GALGAS_string & in_mNonterminalName,
                                                                                const GALGAS_uint & in_mRuleIndex,
                                                                                const GALGAS_ruleLabelImplementationList & in_mLabelImplementationList
                                                                                COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mNonterminalName, in_mRuleIndex, in_mLabelImplementationList) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_ruleDeclarationList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_ruleDeclarationList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_ruleDeclarationList (mObject.mAttribute_mNonterminalName, mObject.mAttribute_mRuleIndex, mObject.mAttribute_mLabelImplementationList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_ruleDeclarationList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mNonterminalName" ":" ;
  mObject.mAttribute_mNonterminalName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRuleIndex" ":" ;
  mObject.mAttribute_mRuleIndex.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mLabelImplementationList" ":" ;
  mObject.mAttribute_mLabelImplementationList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_ruleDeclarationList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_ruleDeclarationList * operand = (cCollectionElement_ruleDeclarationList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_ruleDeclarationList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList::GALGAS_ruleDeclarationList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList::GALGAS_ruleDeclarationList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList GALGAS_ruleDeclarationList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_ruleDeclarationList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList GALGAS_ruleDeclarationList::constructor_listWithValue (const GALGAS_string & inOperand0,
                                                                                  const GALGAS_uint & inOperand1,
                                                                                  const GALGAS_ruleLabelImplementationList & inOperand2
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_ruleDeclarationList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_ruleDeclarationList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_ruleDeclarationList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                            const GALGAS_string & in_mNonterminalName,
                                                            const GALGAS_uint & in_mRuleIndex,
                                                            const GALGAS_ruleLabelImplementationList & in_mLabelImplementationList
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement_ruleDeclarationList * p = NULL ;
  macroMyNew (p, cCollectionElement_ruleDeclarationList (in_mNonterminalName,
                                                         in_mRuleIndex,
                                                         in_mLabelImplementationList COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_ruleDeclarationList::addAssign_operation (const GALGAS_string & inOperand0,
                                                      const GALGAS_uint & inOperand1,
                                                      const GALGAS_ruleLabelImplementationList & inOperand2
                                                      COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_ruleDeclarationList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleDeclarationList::modifier_prependValue (GALGAS_string inOperand0,
                                                        GALGAS_uint inOperand1,
                                                        GALGAS_ruleLabelImplementationList inOperand2
                                                        COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_ruleDeclarationList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleDeclarationList::modifier_popFirst (GALGAS_string & outOperand0,
                                                    GALGAS_uint & outOperand1,
                                                    GALGAS_ruleLabelImplementationList & outOperand2,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleDeclarationList * p = (cCollectionElement_ruleDeclarationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ruleDeclarationList) ;
    outOperand0 = p->mObject.mAttribute_mNonterminalName ;
    outOperand1 = p->mObject.mAttribute_mRuleIndex ;
    outOperand2 = p->mObject.mAttribute_mLabelImplementationList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleDeclarationList::modifier_popLast (GALGAS_string & outOperand0,
                                                   GALGAS_uint & outOperand1,
                                                   GALGAS_ruleLabelImplementationList & outOperand2,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleDeclarationList * p = (cCollectionElement_ruleDeclarationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ruleDeclarationList) ;
    outOperand0 = p->mObject.mAttribute_mNonterminalName ;
    outOperand1 = p->mObject.mAttribute_mRuleIndex ;
    outOperand2 = p->mObject.mAttribute_mLabelImplementationList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleDeclarationList::method_first (GALGAS_string & outOperand0,
                                               GALGAS_uint & outOperand1,
                                               GALGAS_ruleLabelImplementationList & outOperand2,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleDeclarationList * p = (cCollectionElement_ruleDeclarationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ruleDeclarationList) ;
    outOperand0 = p->mObject.mAttribute_mNonterminalName ;
    outOperand1 = p->mObject.mAttribute_mRuleIndex ;
    outOperand2 = p->mObject.mAttribute_mLabelImplementationList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleDeclarationList::method_last (GALGAS_string & outOperand0,
                                              GALGAS_uint & outOperand1,
                                              GALGAS_ruleLabelImplementationList & outOperand2,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleDeclarationList * p = (cCollectionElement_ruleDeclarationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ruleDeclarationList) ;
    outOperand0 = p->mObject.mAttribute_mNonterminalName ;
    outOperand1 = p->mObject.mAttribute_mRuleIndex ;
    outOperand2 = p->mObject.mAttribute_mLabelImplementationList ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList GALGAS_ruleDeclarationList::operator_concat (const GALGAS_ruleDeclarationList & inOperand
                                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_ruleDeclarationList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList GALGAS_ruleDeclarationList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_ruleDeclarationList result = GALGAS_ruleDeclarationList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList GALGAS_ruleDeclarationList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_ruleDeclarationList result = GALGAS_ruleDeclarationList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_ruleDeclarationList::dotAssign_operation (const GALGAS_ruleDeclarationList inOperand
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_ruleDeclarationList::reader_mNonterminalNameAtIndex (const GALGAS_uint & inIndex,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleDeclarationList * p = (cCollectionElement_ruleDeclarationList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleDeclarationList) ;
    result = p->mObject.mAttribute_mNonterminalName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_ruleDeclarationList::reader_mRuleIndexAtIndex (const GALGAS_uint & inIndex,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleDeclarationList * p = (cCollectionElement_ruleDeclarationList *) attributes.ptr () ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleDeclarationList) ;
    result = p->mObject.mAttribute_mRuleIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList GALGAS_ruleDeclarationList::reader_mLabelImplementationListAtIndex (const GALGAS_uint & inIndex,
                                                                                                       C_Compiler * inCompiler
                                                                                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleDeclarationList * p = (cCollectionElement_ruleDeclarationList *) attributes.ptr () ;
  GALGAS_ruleLabelImplementationList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleDeclarationList) ;
    result = p->mObject.mAttribute_mLabelImplementationList ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_ruleDeclarationList::cEnumerator_ruleDeclarationList (const GALGAS_ruleDeclarationList & inEnumeratedObject,
                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList_2E_element cEnumerator_ruleDeclarationList::current (LOCATION_ARGS) const {
  const cCollectionElement_ruleDeclarationList * p = (const cCollectionElement_ruleDeclarationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_ruleDeclarationList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_ruleDeclarationList::current_mNonterminalName (LOCATION_ARGS) const {
  const cCollectionElement_ruleDeclarationList * p = (const cCollectionElement_ruleDeclarationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_ruleDeclarationList) ;
  return p->mObject.mAttribute_mNonterminalName ;
}

//---------------------------------------------------------------------------*

GALGAS_uint cEnumerator_ruleDeclarationList::current_mRuleIndex (LOCATION_ARGS) const {
  const cCollectionElement_ruleDeclarationList * p = (const cCollectionElement_ruleDeclarationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_ruleDeclarationList) ;
  return p->mObject.mAttribute_mRuleIndex ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList cEnumerator_ruleDeclarationList::current_mLabelImplementationList (LOCATION_ARGS) const {
  const cCollectionElement_ruleDeclarationList * p = (const cCollectionElement_ruleDeclarationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_ruleDeclarationList) ;
  return p->mObject.mAttribute_mLabelImplementationList ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                         @ruleDeclarationList type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_ruleDeclarationList ("ruleDeclarationList",
                                            NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_ruleDeclarationList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_ruleDeclarationList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_ruleDeclarationList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_ruleDeclarationList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList GALGAS_ruleDeclarationList::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler,
                                                                      const GALGAS_location & inErrorLocation
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_ruleDeclarationList result ;
  const GALGAS_ruleDeclarationList * p = (const GALGAS_ruleDeclarationList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_ruleDeclarationList *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "ruleDeclarationList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Filewrapper 'syntaxFileGenerationTemplate'                 *
//                                                                           *
//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_syntaxFileGenerationTemplate_0 [1] = {
  NULL
} ;

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_syntaxFileGenerationTemplate_0 [1] = {
  NULL
} ;

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_syntaxFileGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_syntaxFileGenerationTemplate_0,
  0,
  gWrapperAllDirectories_syntaxFileGenerationTemplate_0
) ;


//---------------------------------------------------------------------------*
//                                                                           *
//   Filewrapper template 'syntaxFileGenerationTemplate syntaxFileHeader'    *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_syntaxFileGenerationTemplate_syntaxFileHeader (C_Compiler * /* inCompiler */,
                                                                                 const GALGAS_string & in_COMPONENT_5F_NAME,
                                                                                 const GALGAS_string & in_LEXIQUE_5F_NAME,
                                                                                 const GALGAS_stringlist & in_IMPORTED_5F_COMPONENT_5F_LIST,
                                                                                 const GALGAS_lstringlist & in_TYPE_5F_PREDECLARATION_5F_LIST
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  result << "#ifndef " ;
  result << in_COMPONENT_5F_NAME.stringValue () ;
  result << "_ENTITIES_DEFINED\n"
    "#define " ;
  result << in_COMPONENT_5F_NAME.stringValue () ;
  result << "_ENTITIES_DEFINED\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "#include \"galgas2/predefined-types.h\"\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "#include \"" ;
  result << in_LEXIQUE_5F_NAME.stringValue () ;
  result << ".h\"\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n" ;
  GALGAS_uint index_449_ (0) ;
  if (in_IMPORTED_5F_COMPONENT_5F_LIST.isValid ()) {
    cEnumerator_stringlist enumerator_449 (in_IMPORTED_5F_COMPONENT_5F_LIST, kEnumeration_up) ;
    while (enumerator_449.hasCurrentObject ()) {
      result << "#include \"" ;
      result << enumerator_449.current_mValue (HERE).stringValue () ;
      result << ".h\"\n" ;
      index_449_.increment () ;
      enumerator_449.gotoNextObject () ;
    }
  }
  result << "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n" ;
  GALGAS_uint index_614_ (0) ;
  if (in_TYPE_5F_PREDECLARATION_5F_LIST.isValid ()) {
    cEnumerator_lstringlist enumerator_614 (in_TYPE_5F_PREDECLARATION_5F_LIST, kEnumeration_up) ;
    while (enumerator_614.hasCurrentObject ()) {
      result << "class GALGAS_" ;
      result << enumerator_614.current_mValue (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (21)).stringValue () ;
      result << " ;\n" ;
      index_614_.increment () ;
      enumerator_614.gotoNextObject () ;
    }
  }
  result << "\n" ;
  return GALGAS_string (result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Filewrapper template 'syntaxFileGenerationTemplate syntaxFileImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_syntaxFileGenerationTemplate_syntaxFileImplementation (C_Compiler * /* inCompiler */,
                                                                                         const GALGAS_string & in_COMPONENT_5F_NAME,
                                                                                         const GALGAS_stringlist & in_IMPORTED_5F_COMPONENT_5F_LIST
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  result << "#include \"" ;
  result << in_COMPONENT_5F_NAME.stringValue () ;
  result << ".h\"\n"
    "#include \"galgas2/C_galgas_CLI_Options.h\"\n"
    "#include \"utilities/C_PrologueEpilogue.h\"\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n" ;
  GALGAS_uint index_249_ (0) ;
  if (in_IMPORTED_5F_COMPONENT_5F_LIST.isValid ()) {
    cEnumerator_stringlist enumerator_249 (in_IMPORTED_5F_COMPONENT_5F_LIST, kEnumeration_up) ;
    while (enumerator_249.hasCurrentObject ()) {
      result << "#include \"" ;
      result << enumerator_249.current_mValue (HERE).stringValue () ;
      result << ".h\"\n" ;
      index_249_.increment () ;
      enumerator_249.gotoNextObject () ;
    }
  }
  result << "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "  #define SOURCE_FILE_AT_LINE(line) \"" ;
  result << in_COMPONENT_5F_NAME.stringValue () ;
  result << ".gSyntax\", line\n"
    "  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)\n"
    "#else\n"
    "  #define SOURCE_FILE_AT_LINE(line) \n"
    "  #define COMMA_SOURCE_FILE_AT_LINE(line) \n"
    "#endif\n"
    "\n" ;
  return GALGAS_string (result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Filewrapper template 'syntaxFileGenerationTemplate syntaxAnalyserClassDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_syntaxFileGenerationTemplate_syntaxAnalyserClassDeclaration (C_Compiler * inCompiler,
                                                                                               const GALGAS_string & in_COMPONENT_5F_NAME,
                                                                                               const GALGAS_string & in_LEXIQUE_5F_NAME,
                                                                                               const GALGAS_nonterminalMap & in_NONTERMINAL_5F_MAP,
                                                                                               const GALGAS_ruleDeclarationList & in_RULE_5F_DECLARATION_5F_LIST,
                                                                                               const GALGAS_uintlist & in_SELECT_5F_METHOD_5F_LIST,
                                                                                               const GALGAS_bool & in_HAS_5F_INDEXING
                                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GALGAS_string ("Parser class '").operator_concat (in_COMPONENT_5F_NAME COMMA_SOURCE_FILE_AT_LINE (3)).operator_concat (GALGAS_string ("' declaration") COMMA_SOURCE_FILE_AT_LINE (3)).reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 75U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (3)).stringValue () ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class cParser_" ;
  result << in_COMPONENT_5F_NAME.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (7)).stringValue () ;
  result << " {\n"
    "//--- Virtual destructor\n"
    "  public : virtual ~ cParser_" ;
  result << in_COMPONENT_5F_NAME.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (9)).stringValue () ;
  result << " (void) {}\n"
    "\n"
    "//--- Non terminal declarations\n" ;
  GALGAS_uint index_653_ (0) ;
  if (in_NONTERMINAL_5F_MAP.isValid ()) {
    cEnumerator_nonterminalMap enumerator_653 (in_NONTERMINAL_5F_MAP, kEnumeration_up) ;
    while (enumerator_653.hasCurrentObject ()) {
      GALGAS_uint index_720_ (0) ;
      if (enumerator_653.current_mLabelMap (HERE).isValid ()) {
        cEnumerator_nonterminalLabelMap enumerator_720 (enumerator_653.current_mLabelMap (HERE), kEnumeration_up) ;
        while (enumerator_720.hasCurrentObject ()) {
          result << "  protected : virtual void nt_" ;
          result << enumerator_653.current_lkey (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (14)).stringValue () ;
          result << "_" ;
          result << enumerator_720.current_lkey (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (14)).stringValue () ;
          result << " (" ;
          columnMarker = result.currentColumn () ;
          GALGAS_uint index_840_IDX (0) ;
          if (enumerator_720.current_mSignature (HERE).isValid ()) {
            cEnumerator_formalParameterSignature enumerator_840 (enumerator_720.current_mSignature (HERE), kEnumeration_up) ;
            while (enumerator_840.hasCurrentObject ()) {
              const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, enumerator_840.current_mFormalArgumentPassingMode (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (16)))).boolEnum () ;
              if (kBoolTrue == test_0) {
                result << "const GALGAS_" ;
                result << enumerator_840.current_mFormalArgumentType (HERE).reader_identifierRepresentation (inCompiler COMMA_SOURCE_FILE_AT_LINE (17)).stringValue () ;
                result << " constinArgument" ;
                result << index_840_IDX.reader_string (SOURCE_FILE_AT_LINE (17)).stringValue () ;
              }else if (kBoolFalse == test_0) {
                const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, enumerator_840.current_mFormalArgumentPassingMode (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentInOut (SOURCE_FILE_AT_LINE (18)))).boolEnum () ;
                if (kBoolTrue == test_1) {
                  result << "GALGAS_" ;
                  result << enumerator_840.current_mFormalArgumentType (HERE).reader_identifierRepresentation (inCompiler COMMA_SOURCE_FILE_AT_LINE (19)).stringValue () ;
                  result << " & ioArgument" ;
                  result << index_840_IDX.reader_string (SOURCE_FILE_AT_LINE (19)).stringValue () ;
                }else if (kBoolFalse == test_1) {
                  const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, enumerator_840.current_mFormalArgumentPassingMode (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (20)))).boolEnum () ;
                  if (kBoolTrue == test_2) {
                    result << "GALGAS_" ;
                    result << enumerator_840.current_mFormalArgumentType (HERE).reader_identifierRepresentation (inCompiler COMMA_SOURCE_FILE_AT_LINE (21)).stringValue () ;
                    result << " & outArgument" ;
                    result << index_840_IDX.reader_string (SOURCE_FILE_AT_LINE (21)).stringValue () ;
                  }else if (kBoolFalse == test_2) {
                    result << "GALGAS_" ;
                    result << enumerator_840.current_mFormalArgumentType (HERE).reader_identifierRepresentation (inCompiler COMMA_SOURCE_FILE_AT_LINE (23)).stringValue () ;
                    result << " inArgument" ;
                    result << index_840_IDX.reader_string (SOURCE_FILE_AT_LINE (23)).stringValue () ;
                  }
                }
              }
              result << ",\n" ;
              result.appendSpacesUntilColumn (columnMarker) ;
              index_840_IDX.increment () ;
              enumerator_840.gotoNextObject () ;
            }
          }
          result << "C_Lexique_" ;
          result << in_LEXIQUE_5F_NAME.stringValue () ;
          result << " * inLexique) = 0 ;\n"
            "\n" ;
          index_720_.increment () ;
          enumerator_720.gotoNextObject () ;
        }
      }
      result << "  protected : virtual void nt_" ;
      result << enumerator_653.current_lkey (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (30)).stringValue () ;
      result << "_parse (C_Lexique_" ;
      result << in_LEXIQUE_5F_NAME.stringValue () ;
      result << " * inLexique) = 0 ;\n"
        "\n" ;
      const enumGalgasBool test_3 = in_HAS_5F_INDEXING.boolEnum () ;
      if (kBoolTrue == test_3) {
        result << "  protected : virtual void nt_" ;
        result << enumerator_653.current_lkey (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (33)).stringValue () ;
        result << "_indexing (C_Lexique_" ;
        result << in_LEXIQUE_5F_NAME.stringValue () ;
        result << " * inLexique) = 0 ;\n"
          "\n" ;
      }else if (kBoolFalse == test_3) {
      }
      index_653_.increment () ;
      enumerator_653.gotoNextObject () ;
    }
  }
  result << "\n"
    "//--- Rule declarations\n" ;
  GALGAS_uint index_2018_ (0) ;
  if (in_RULE_5F_DECLARATION_5F_LIST.isValid ()) {
    cEnumerator_ruleDeclarationList enumerator_2018 (in_RULE_5F_DECLARATION_5F_LIST, kEnumeration_up) ;
    while (enumerator_2018.hasCurrentObject ()) {
      GALGAS_uint index_2078_ (0) ;
      if (enumerator_2018.current_mLabelImplementationList (HERE).isValid ()) {
        cEnumerator_ruleLabelImplementationList enumerator_2078 (enumerator_2018.current_mLabelImplementationList (HERE), kEnumeration_up) ;
        while (enumerator_2078.hasCurrentObject ()) {
          result << "  protected : void rule_" ;
          result << in_COMPONENT_5F_NAME.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (39)).stringValue () ;
          result << "_" ;
          result << enumerator_2018.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (39)).stringValue () ;
          result << "_i" ;
          result << enumerator_2018.current_mRuleIndex (HERE).reader_string (SOURCE_FILE_AT_LINE (39)).stringValue () ;
          result << "_" ;
          result << enumerator_2078.current_mLabelName (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (39)).stringValue () ;
          result << " (" ;
          columnMarker = result.currentColumn () ;
          GALGAS_uint index_2273_IDX (0) ;
          if (enumerator_2078.current_mSignature (HERE).isValid ()) {
            cEnumerator_formalParameterSignature enumerator_2273 (enumerator_2078.current_mSignature (HERE), kEnumeration_up) ;
            while (enumerator_2273.hasCurrentObject ()) {
              const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, enumerator_2273.current_mFormalArgumentPassingMode (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (41)))).boolEnum () ;
              if (kBoolTrue == test_4) {
                result << "const GALGAS_" ;
                result << enumerator_2273.current_mFormalArgumentType (HERE).reader_identifierRepresentation (inCompiler COMMA_SOURCE_FILE_AT_LINE (42)).stringValue () ;
                result << " constinArgument" ;
                result << index_2273_IDX.reader_string (SOURCE_FILE_AT_LINE (42)).stringValue () ;
              }else if (kBoolFalse == test_4) {
                const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, enumerator_2273.current_mFormalArgumentPassingMode (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentInOut (SOURCE_FILE_AT_LINE (43)))).boolEnum () ;
                if (kBoolTrue == test_5) {
                  result << "GALGAS_" ;
                  result << enumerator_2273.current_mFormalArgumentType (HERE).reader_identifierRepresentation (inCompiler COMMA_SOURCE_FILE_AT_LINE (44)).stringValue () ;
                  result << " & ioArgument" ;
                  result << index_2273_IDX.reader_string (SOURCE_FILE_AT_LINE (44)).stringValue () ;
                }else if (kBoolFalse == test_5) {
                  const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, enumerator_2273.current_mFormalArgumentPassingMode (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (45)))).boolEnum () ;
                  if (kBoolTrue == test_6) {
                    result << "GALGAS_" ;
                    result << enumerator_2273.current_mFormalArgumentType (HERE).reader_identifierRepresentation (inCompiler COMMA_SOURCE_FILE_AT_LINE (46)).stringValue () ;
                    result << " & outArgument" ;
                    result << index_2273_IDX.reader_string (SOURCE_FILE_AT_LINE (46)).stringValue () ;
                  }else if (kBoolFalse == test_6) {
                    result << "GALGAS_" ;
                    result << enumerator_2273.current_mFormalArgumentType (HERE).reader_identifierRepresentation (inCompiler COMMA_SOURCE_FILE_AT_LINE (48)).stringValue () ;
                    result << " inArgument" ;
                    result << index_2273_IDX.reader_string (SOURCE_FILE_AT_LINE (48)).stringValue () ;
                  }
                }
              }
              result << ",\n" ;
              result.appendSpacesUntilColumn (columnMarker) ;
              index_2273_IDX.increment () ;
              enumerator_2273.gotoNextObject () ;
            }
          }
          result << "C_Lexique_" ;
          result << in_LEXIQUE_5F_NAME.stringValue () ;
          result << " * inLexique) ;\n"
            "\n" ;
          index_2078_.increment () ;
          enumerator_2078.gotoNextObject () ;
        }
      }
      result << "  protected : void rule_" ;
      result << in_COMPONENT_5F_NAME.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (54)).stringValue () ;
      result << "_" ;
      result << enumerator_2018.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (54)).stringValue () ;
      result << "_i" ;
      result << enumerator_2018.current_mRuleIndex (HERE).reader_string (SOURCE_FILE_AT_LINE (54)).stringValue () ;
      result << "_parse (C_Lexique_" ;
      result << in_LEXIQUE_5F_NAME.stringValue () ;
      result << " * inLexique) ;\n"
        "\n" ;
      const enumGalgasBool test_7 = in_HAS_5F_INDEXING.boolEnum () ;
      if (kBoolTrue == test_7) {
        result << "  protected : void rule_" ;
        result << in_COMPONENT_5F_NAME.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (56)).stringValue () ;
        result << "_" ;
        result << enumerator_2018.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (56)).stringValue () ;
        result << "_i" ;
        result << enumerator_2018.current_mRuleIndex (HERE).reader_string (SOURCE_FILE_AT_LINE (56)).stringValue () ;
        result << "_indexing (C_Lexique_" ;
        result << in_LEXIQUE_5F_NAME.stringValue () ;
        result << " * inLexique) ;\n"
          "\n" ;
      }else if (kBoolFalse == test_7) {
      }
      index_2018_.increment () ;
      enumerator_2018.gotoNextObject () ;
    }
  }
  result << "\n"
    "\n"
    "//--- Select methods\n" ;
  GALGAS_uint index_3615_ (0) ;
  if (in_SELECT_5F_METHOD_5F_LIST.isValid ()) {
    cEnumerator_uintlist enumerator_3615 (in_SELECT_5F_METHOD_5F_LIST, kEnumeration_up) ;
    while (enumerator_3615.hasCurrentObject ()) {
      result << "  protected : virtual PMSInt32 select_" ;
      result << in_COMPONENT_5F_NAME.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (62)).stringValue () ;
      result << "_" ;
      result << enumerator_3615.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (62)).stringValue () ;
      result << " (C_Lexique_" ;
      result << in_LEXIQUE_5F_NAME.stringValue () ;
      result << " *) = 0 ;\n"
        "\n" ;
      index_3615_.increment () ;
      enumerator_3615.gotoNextObject () ;
    }
  }
  result << "\n"
    "} ;\n"
    "\n" ;
  return GALGAS_string (result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Routine 'enterNonterminalNonTerminalInMapAndCheck'             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterNonterminalNonTerminalInMapAndCheck (const GALGAS_lstring constinArgument_inNonTerminalName,
                                                       const GALGAS_nonterminalLabelMap constinArgument_inNonterminalLabelMap,
                                                       GALGAS_nonterminalMap & ioArgument_ioNonterminalDeclarationMap,
                                                       C_Compiler * inCompiler
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @readOnlyWithInstructionForGeneration
  const cMapElement_nonterminalMap * objectArray_5714 = (const cMapElement_nonterminalMap *) ioArgument_ioNonterminalDeclarationMap.readAccessForWithInstruction_hasKey (constinArgument_inNonTerminalName.reader_string (SOURCE_FILE_AT_LINE (137))) ;
  if (NULL != objectArray_5714) {
      macroValidSharedObject (objectArray_5714, const cMapElement_nonterminalMap) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_stringset var_firstDeclarationLabelSet = objectArray_5714->mAttribute_mLabelMap.reader_allKeys (SOURCE_FILE_AT_LINE (138)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_stringset var_reDeclarationLabelSet = constinArgument_inNonterminalLabelMap.reader_allKeys (SOURCE_FILE_AT_LINE (139)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_stringset var_missingLabelSet = var_firstDeclarationLabelSet.substract_operation (var_reDeclarationLabelSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (140)) ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, var_missingLabelSet.reader_count (SOURCE_FILE_AT_LINE (141)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_0) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_stringset enumerator_6091 (var_missingLabelSet, kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_6091.hasCurrentObject ()) {
        //-------- @concatInstructionForGeneration
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "-  ").operator_concat (enumerator_6091.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (144)) COMMA_SOURCE_FILE_AT_LINE (144)) ;
        enumerator_6091.gotoNextObject () ;
      }
      //-------- @errorInstructionForGeneration
      GALGAS_location location_1 (constinArgument_inNonTerminalName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (constinArgument_inNonTerminalName.reader_string (SOURCE_FILE_AT_LINE (147)) COMMA_SOURCE_FILE_AT_LINE (147)).operator_concat (GALGAS_string ("' nonterminal is redeclared without the following label(s):") COMMA_SOURCE_FILE_AT_LINE (147)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (147)) COMMA_SOURCE_FILE_AT_LINE (146)) ;
    }
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_stringset var_newLabelSet = var_reDeclarationLabelSet.substract_operation (var_firstDeclarationLabelSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (150)) ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, var_newLabelSet.reader_count (SOURCE_FILE_AT_LINE (151)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_2) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_stringset enumerator_6471 (var_newLabelSet, kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_6471.hasCurrentObject ()) {
        //-------- @concatInstructionForGeneration
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "-  ").operator_concat (enumerator_6471.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (154)) COMMA_SOURCE_FILE_AT_LINE (154)) ;
        enumerator_6471.gotoNextObject () ;
      }
      //-------- @errorInstructionForGeneration
      GALGAS_location location_3 (constinArgument_inNonTerminalName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("the '").operator_concat (constinArgument_inNonTerminalName.reader_string (SOURCE_FILE_AT_LINE (157)) COMMA_SOURCE_FILE_AT_LINE (157)).operator_concat (GALGAS_string ("' nonterminal is redeclared with the new label(s):") COMMA_SOURCE_FILE_AT_LINE (157)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (157)) COMMA_SOURCE_FILE_AT_LINE (156)) ;
    }
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, var_missingLabelSet.reader_count (SOURCE_FILE_AT_LINE (160)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (GALGAS_bool (kIsEqual, var_newLabelSet.reader_count (SOURCE_FILE_AT_LINE (160)).objectCompare (GALGAS_uint ((PMUInt32) 0U))) COMMA_SOURCE_FILE_AT_LINE (160)).boolEnum () ;
    if (kBoolTrue == test_4) {
      //-------- @foreachInstructionForGeneration
      cEnumerator_nonterminalLabelMap enumerator_6763 (objectArray_5714->mAttribute_mLabelMap, kEnumeration_up) ;
      cEnumerator_nonterminalLabelMap enumerator_6796 (constinArgument_inNonterminalLabelMap, kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_6763.hasCurrentObject () && enumerator_6796.hasCurrentObject ()) {
        //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
        GALGAS_formalParameterSignature var_newSignature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (162)) ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_formalParameterSignature enumerator_6899 (enumerator_6796.current_mSignature (HERE), kEnumeration_up) ;
        //--- simple foreach instruction
        while (enumerator_6899.hasCurrentObject ()) {
          //-------- @plusEqualnstructionForGeneration
          var_newSignature.addAssign_operation (enumerator_6899.current_mFormalArgumentType (HERE), enumerator_6899.current_mFormalArgumentPassingMode (HERE) COMMA_SOURCE_FILE_AT_LINE (164)) ;
          enumerator_6899.gotoNextObject () ;
        }
        { //-------- @routineCallInstructionForGeneration
        routine_checkMethodSignatures (enumerator_6763.current_mSignatureForGeneration (HERE), enumerator_6763.current_mEndOfArgumentLocation (HERE), var_newSignature, enumerator_6796.current_mEndOfArgumentLocation (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (166)) ;
        } //-------- @routineCallInstructionForGeneration
        enumerator_6763.gotoNextObject () ;
        enumerator_6796.gotoNextObject () ;
      }
    }
  }else{
    { //-------- @modifierCallInstructionForGeneration
    ioArgument_ioNonterminalDeclarationMap.modifier_insertKey (constinArgument_inNonTerminalName, constinArgument_inNonterminalLabelMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (175)) ;
    } //-------- END @typeMethodInstructionForGeneration
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'buildNonterminalDeclarationsMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildNonterminalDeclarationsMap (const GALGAS_nonterminalDeclarationListAST constinArgument_inNonterminalDeclarationList,
                                              const GALGAS_semanticContext constinArgument_inSemanticContext,
                                              GALGAS_nonterminalMap & outArgument_outNonterminalDeclarationMap,
                                              C_Compiler * inCompiler
                                              COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outNonterminalDeclarationMap.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outNonterminalDeclarationMap = GALGAS_nonterminalMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (186)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_nonterminalDeclarationListAST enumerator_7744 (constinArgument_inNonterminalDeclarationList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_7744.hasCurrentObject ()) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_nonterminalLabelMap var_nonterminalLabelMap = GALGAS_nonterminalLabelMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (189)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_nonTerminalLabelListAST enumerator_7825 (enumerator_7744.current_mLabels (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_7825.hasCurrentObject ()) {
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_formalParameterListForGeneration var_signatureForGeneration = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (191)) ;
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_formalParameterSignature var_signature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (192)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_formalParameterListAST enumerator_7995 (enumerator_7825.current_mFormalArgumentList (HERE), kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_7995.hasCurrentObject ()) {
        //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
        GALGAS_unifiedTypeMapProxy var_t = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_7995.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (194)) ;
        //-------- @plusEqualnstructionForGeneration
        var_signatureForGeneration.addAssign_operation (enumerator_7995.current_mFormalArgumentPassingMode (HERE), var_t, enumerator_7995.current_mFormalArgumentName (HERE), enumerator_7995.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (195)) COMMA_SOURCE_FILE_AT_LINE (195)) ;
        //-------- @plusEqualnstructionForGeneration
        var_signature.addAssign_operation (var_t, enumerator_7995.current_mFormalArgumentPassingMode (HERE) COMMA_SOURCE_FILE_AT_LINE (196)) ;
        enumerator_7995.gotoNextObject () ;
      }
      { //-------- @modifierCallInstructionForGeneration
      var_nonterminalLabelMap.modifier_insertKey (enumerator_7825.current_mLabelName (HERE), var_signatureForGeneration, var_signature, enumerator_7825.current_mEndOfArgumentLocation (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (198)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_7825.gotoNextObject () ;
    }
    { //-------- @routineCallInstructionForGeneration
    routine_enterNonterminalNonTerminalInMapAndCheck (enumerator_7744.current_mNonterminalName (HERE), var_nonterminalLabelMap, outArgument_outNonterminalDeclarationMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (200)) ;
    } //-------- @routineCallInstructionForGeneration
    enumerator_7744.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                  Routine 'analyzeSyntaxInstructionList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeSyntaxInstructionList (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                           const GALGAS_terminalMap constinArgument_inTerminalMap,
                                           const GALGAS_string constinArgument_inLexiqueName,
                                           const GALGAS_nonterminalMap constinArgument_inNonterminalMap,
                                           const GALGAS_string constinArgument_inComponentName,
                                           const GALGAS_syntaxInstructionList constinArgument_inSyntaxInstructionListAST,
                                           const GALGAS_location constinArgument_inEndOfBranchLocation,
                                           const GALGAS_stringset constinArgument_inIndexNameSet,
                                           GALGAS_variableMap & ioArgument_ioVariableMap,
                                           GALGAS_uint & ioArgument_ioSelectMethodCount,
                                           GALGAS_semanticInstructionListForGeneration & outArgument_outInstructionListForGeneration,
                                           C_Compiler * inCompiler
                                           COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outInstructionListForGeneration.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outInstructionListForGeneration = GALGAS_semanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (457)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioVariableMap.modifier_openBranch (inCompiler COMMA_SOURCE_FILE_AT_LINE (459)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @foreachInstructionForGeneration
  cEnumerator_syntaxInstructionList enumerator_19191 (constinArgument_inSyntaxInstructionListAST, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_19191.hasCurrentObject ()) {
    //-------- @methodCallInstructionForGeneration
    callCategoryMethod_analyzeSyntaxInstruction ((const cPtr_syntaxInstructionAST *) enumerator_19191.current_mInstruction (HERE).ptr (), constinArgument_inAnalysisContext, constinArgument_inTerminalMap, constinArgument_inLexiqueName, constinArgument_inNonterminalMap, constinArgument_inComponentName, constinArgument_inIndexNameSet, outArgument_outInstructionListForGeneration, ioArgument_ioVariableMap, ioArgument_ioSelectMethodCount, inCompiler COMMA_SOURCE_FILE_AT_LINE (462)) ;
    //-------- END @methodCallInstructionForGeneration
    enumerator_19191.gotoNextObject () ;
  }
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioVariableMap.modifier_closeBranch (constinArgument_inEndOfBranchLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (475)) ;
  } //-------- END @typeMethodInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'semanticAnalysisOfRuleLabel'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_semanticAnalysisOfRuleLabel (const GALGAS_formalParameterListAST constinArgument_inFormalArguments,
                                          const GALGAS_syntaxInstructionList constinArgument_inSyntaxInstructionList,
                                          const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                          const GALGAS_terminalMap constinArgument_inTerminalMap,
                                          const GALGAS_string constinArgument_inLexiqueName,
                                          const GALGAS_nonterminalMap constinArgument_inNonterminalMap,
                                          const GALGAS_string constinArgument_inComponentName,
                                          const GALGAS_location constinArgument_inEndOfInstructionList,
                                          const GALGAS_stringset constinArgument_inIndexNameSet,
                                          GALGAS_uint & ioArgument_ioSelectMethodCount,
                                          GALGAS_formalParameterListForGeneration & outArgument_outSignatureForGeneration,
                                          GALGAS_formalParameterSignature & outArgument_outSignature,
                                          GALGAS_semanticInstructionListForGeneration & outArgument_outInstructionListForGeneration,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSignatureForGeneration.drop () ; // Release 'out' argument
  outArgument_outSignature.drop () ; // Release 'out' argument
  outArgument_outInstructionListForGeneration.drop () ; // Release 'out' argument
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_variableMap var_variableMap = GALGAS_variableMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (985)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_buildLocalVariableMapAndSignature (constinArgument_inAnalysisContext.mAttribute_mSemanticContext, constinArgument_inFormalArguments, var_variableMap, outArgument_outSignatureForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (986)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outSignature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (993)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_formalParameterListForGeneration enumerator_38335 (outArgument_outSignatureForGeneration, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_38335.hasCurrentObject ()) {
    //-------- @plusEqualnstructionForGeneration
    outArgument_outSignature.addAssign_operation (enumerator_38335.current_mFormalArgumentType (HERE), enumerator_38335.current_mFormalArgumentPassingMode (HERE) COMMA_SOURCE_FILE_AT_LINE (995)) ;
    enumerator_38335.gotoNextObject () ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outInstructionListForGeneration = GALGAS_semanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (998)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_stringlist var_localVariableCppNameList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (999)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_syntaxInstructionList enumerator_38644 (constinArgument_inSyntaxInstructionList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_38644.hasCurrentObject ()) {
    //-------- @methodCallInstructionForGeneration
    callCategoryMethod_analyzeSyntaxInstruction ((const cPtr_syntaxInstructionAST *) enumerator_38644.current_mInstruction (HERE).ptr (), constinArgument_inAnalysisContext, constinArgument_inTerminalMap, constinArgument_inLexiqueName, constinArgument_inNonterminalMap, constinArgument_inComponentName, constinArgument_inIndexNameSet, outArgument_outInstructionListForGeneration, var_variableMap, ioArgument_ioSelectMethodCount, inCompiler COMMA_SOURCE_FILE_AT_LINE (1001)) ;
    //-------- END @methodCallInstructionForGeneration
    enumerator_38644.gotoNextObject () ;
  }
  //-------- @methodCallInstructionForGeneration
  var_variableMap.method_checkAutomatonStates (constinArgument_inEndOfInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1014)) ;
  //-------- END @methodCallInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                Routine 'semanticAnalysisOfSyntaxComponent'                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_semanticAnalysisOfSyntaxComponent (const GALGAS_nonterminalDeclarationListAST constinArgument_inNonterminalDeclarationList,
                                                const GALGAS_syntaxRuleListAST constinArgument_inRuleList,
                                                const GALGAS_string constinArgument_inComponentName,
                                                const GALGAS_string constinArgument_inLexiqueName,
                                                const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                const GALGAS_terminalMap constinArgument_inTerminalMap,
                                                const GALGAS_stringset constinArgument_inIndexNameSet,
                                                const GALGAS_bool constinArgument_inHasIndexing,
                                                GALGAS_syntaxDeclarationForGeneration & outArgument_outSyntaxDeclarationForGeneration,
                                                C_Compiler * inCompiler
                                                COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSyntaxDeclarationForGeneration.drop () ; // Release 'out' argument
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_nonterminalMap var_nonterminalMap = GALGAS_nonterminalMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1036)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_buildNonterminalDeclarationsMap (constinArgument_inNonterminalDeclarationList, constinArgument_inSemanticContext, var_nonterminalMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1037)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @foreachInstructionForGeneration
  cEnumerator_syntaxRuleListAST enumerator_40112 (constinArgument_inRuleList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_40112.hasCurrentObject ()) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_nonterminalLabelMap var_nonterminalLabelMap = GALGAS_nonterminalLabelMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1044)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_syntaxRuleLabelListAST enumerator_40196 (enumerator_40112.current_mLabelList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_40196.hasCurrentObject ()) {
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_formalParameterListForGeneration var_signatureForGeneration = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1046)) ;
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_formalParameterSignature var_signature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1047)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_formalParameterListAST enumerator_40363 (enumerator_40196.current_mFormalArguments (HERE), kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_40363.hasCurrentObject ()) {
        //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
        GALGAS_unifiedTypeMapProxy var_type = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_40363.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1049)) ;
        //-------- @plusEqualnstructionForGeneration
        var_signatureForGeneration.addAssign_operation (enumerator_40363.current_mFormalArgumentPassingMode (HERE), var_type, enumerator_40363.current_mFormalArgumentName (HERE), GALGAS_string ("argument_").operator_concat (enumerator_40363.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (1050)) COMMA_SOURCE_FILE_AT_LINE (1050)) COMMA_SOURCE_FILE_AT_LINE (1050)) ;
        //-------- @plusEqualnstructionForGeneration
        var_signature.addAssign_operation (var_type, enumerator_40363.current_mFormalArgumentPassingMode (HERE) COMMA_SOURCE_FILE_AT_LINE (1051)) ;
        enumerator_40363.gotoNextObject () ;
      }
      { //-------- @modifierCallInstructionForGeneration
      var_nonterminalLabelMap.modifier_insertKey (enumerator_40196.current_mLabelName (HERE), var_signatureForGeneration, var_signature, enumerator_40196.current_mEndOfArgumentLocation (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1053)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_40196.gotoNextObject () ;
    }
    { //-------- @routineCallInstructionForGeneration
    routine_enterNonterminalNonTerminalInMapAndCheck (enumerator_40112.current_mNonterminalName (HERE), var_nonterminalLabelMap, var_nonterminalMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1056)) ;
    } //-------- @routineCallInstructionForGeneration
    enumerator_40112.gotoNextObject () ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1065)), GALGAS_string::makeEmptyString (), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1067)) COMMA_SOURCE_FILE_AT_LINE (1062)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_uint var_selectMethodCount = GALGAS_uint ((PMUInt32) 0U) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_ruleDeclarationList var_ruleDeclarationList = GALGAS_ruleDeclarationList::constructor_emptyList (SOURCE_FILE_AT_LINE (1071)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_uint var_newRuleIndex = GALGAS_uint ((PMUInt32) 0U) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_syntaxRuleListAST enumerator_41471 (constinArgument_inRuleList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_41471.hasCurrentObject ()) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_ruleLabelImplementationList var_ruleLabelImplementationList = GALGAS_ruleLabelImplementationList::constructor_emptyList (SOURCE_FILE_AT_LINE (1074)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_uint var_localSelectMethodCount = var_selectMethodCount ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_nonterminalLabelMap joker_41653_0 ; // Joker input parameter
    var_nonterminalMap.method_searchKey (enumerator_41471.current_mNonterminalName (HERE), joker_41653_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1076)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @foreachInstructionForGeneration
    cEnumerator_syntaxRuleLabelListAST enumerator_41682 (enumerator_41471.current_mLabelList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_41682.hasCurrentObject ()) {
      //-------- @assignmentInstructionForGeneration
      var_localSelectMethodCount = var_selectMethodCount ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_formalParameterListForGeneration var_signatureForGeneration ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_formalParameterSignature var_signature ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_semanticInstructionListForGeneration var_instructionListForGeneration ;
      { //-------- @routineCallInstructionForGeneration
      routine_semanticAnalysisOfRuleLabel (enumerator_41682.current_mFormalArguments (HERE), enumerator_41682.current_mSyntaxInstructionList (HERE), var_analysisContext, constinArgument_inTerminalMap, constinArgument_inLexiqueName, var_nonterminalMap, constinArgument_inComponentName, enumerator_41682.current_mEndOfInstructionList (HERE), constinArgument_inIndexNameSet, var_localSelectMethodCount, var_signatureForGeneration, var_signature, var_instructionListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1082)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @plusEqualnstructionForGeneration
      var_ruleLabelImplementationList.addAssign_operation (enumerator_41682.current_mLabelName (HERE), var_signatureForGeneration, var_signature, enumerator_41682.current_mEndOfArgumentLocation (HERE), var_instructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1097)) ;
      enumerator_41682.gotoNextObject () ;
    }
    //-------- @assignmentInstructionForGeneration
    var_selectMethodCount = var_localSelectMethodCount ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_nonterminalLabelMap joker_42620_0 ; // Joker input parameter
    var_nonterminalMap.method_searchKey (enumerator_41471.current_mNonterminalName (HERE), joker_42620_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1106)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @plusEqualnstructionForGeneration
    var_ruleDeclarationList.addAssign_operation (enumerator_41471.current_mNonterminalName (HERE).reader_string (SOURCE_FILE_AT_LINE (1108)), var_newRuleIndex, var_ruleLabelImplementationList COMMA_SOURCE_FILE_AT_LINE (1107)) ;
    //-------- @incrementInstructionForGeneration
    var_newRuleIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1112)) ;
    enumerator_41471.gotoNextObject () ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outSyntaxDeclarationForGeneration = GALGAS_syntaxDeclarationForGeneration::constructor_new (GALGAS_bool (true), constinArgument_inComponentName, constinArgument_inLexiqueName, var_nonterminalMap, var_ruleDeclarationList, var_selectMethodCount, constinArgument_inHasIndexing COMMA_SOURCE_FILE_AT_LINE (1115)) ;
}


//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_syntaxDeclarationForGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_syntaxDeclarationForGeneration * p = (const cPtr_syntaxDeclarationForGeneration *) inOperandPtr ;
  macroValidSharedObject (p, const cPtr_syntaxDeclarationForGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mIsGlobal.objectCompare (p->mAttribute_mIsGlobal) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mComponentName.objectCompare (p->mAttribute_mComponentName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mLexiqueName.objectCompare (p->mAttribute_mLexiqueName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mNonterminalDeclarationMap.objectCompare (p->mAttribute_mNonterminalDeclarationMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRuleDeclarationList.objectCompare (p->mAttribute_mRuleDeclarationList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSelectMethodCount.objectCompare (p->mAttribute_mSelectMethodCount) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mHasIndexing.objectCompare (p->mAttribute_mHasIndexing) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_syntaxDeclarationForGeneration::objectCompare (const GALGAS_syntaxDeclarationForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_syntaxDeclarationForGeneration::GALGAS_syntaxDeclarationForGeneration (void) :
GALGAS_semanticDeclarationForGeneration () {
}

//---------------------------------------------------------------------------*

GALGAS_syntaxDeclarationForGeneration::GALGAS_syntaxDeclarationForGeneration (const cPtr_syntaxDeclarationForGeneration * inSourcePtr) :
GALGAS_semanticDeclarationForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_syntaxDeclarationForGeneration) ;
}

//---------------------------------------------------------------------------*

GALGAS_syntaxDeclarationForGeneration GALGAS_syntaxDeclarationForGeneration::constructor_new (const GALGAS_bool & inAttribute_mIsGlobal,
                                                                                              const GALGAS_string & inAttribute_mComponentName,
                                                                                              const GALGAS_string & inAttribute_mLexiqueName,
                                                                                              const GALGAS_nonterminalMap & inAttribute_mNonterminalDeclarationMap,
                                                                                              const GALGAS_ruleDeclarationList & inAttribute_mRuleDeclarationList,
                                                                                              const GALGAS_uint & inAttribute_mSelectMethodCount,
                                                                                              const GALGAS_bool & inAttribute_mHasIndexing
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_syntaxDeclarationForGeneration result ;
  if (inAttribute_mIsGlobal.isValid () && inAttribute_mComponentName.isValid () && inAttribute_mLexiqueName.isValid () && inAttribute_mNonterminalDeclarationMap.isValid () && inAttribute_mRuleDeclarationList.isValid () && inAttribute_mSelectMethodCount.isValid () && inAttribute_mHasIndexing.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_syntaxDeclarationForGeneration (inAttribute_mIsGlobal, inAttribute_mComponentName, inAttribute_mLexiqueName, inAttribute_mNonterminalDeclarationMap, inAttribute_mRuleDeclarationList, inAttribute_mSelectMethodCount, inAttribute_mHasIndexing COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_syntaxDeclarationForGeneration::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_syntaxDeclarationForGeneration * p = (cPtr_syntaxDeclarationForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_syntaxDeclarationForGeneration) ;
    cPtr_syntaxDeclarationForGeneration * r = NULL ;
    macroMyNew (r, cPtr_syntaxDeclarationForGeneration (p->mAttribute_mIsGlobal, p->mAttribute_mComponentName, p->mAttribute_mLexiqueName, p->mAttribute_mNonterminalDeclarationMap, p->mAttribute_mRuleDeclarationList, p->mAttribute_mSelectMethodCount, p->mAttribute_mHasIndexing COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_syntaxDeclarationForGeneration::reader_mComponentName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_syntaxDeclarationForGeneration * p = (const cPtr_syntaxDeclarationForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_syntaxDeclarationForGeneration) ;
    result = p->mAttribute_mComponentName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_syntaxDeclarationForGeneration::reader_mComponentName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mComponentName ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_syntaxDeclarationForGeneration::reader_mLexiqueName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_syntaxDeclarationForGeneration * p = (const cPtr_syntaxDeclarationForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_syntaxDeclarationForGeneration) ;
    result = p->mAttribute_mLexiqueName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_syntaxDeclarationForGeneration::reader_mLexiqueName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLexiqueName ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalMap GALGAS_syntaxDeclarationForGeneration::reader_mNonterminalDeclarationMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_nonterminalMap result ;
  if (NULL != mObjectPtr) {
    const cPtr_syntaxDeclarationForGeneration * p = (const cPtr_syntaxDeclarationForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_syntaxDeclarationForGeneration) ;
    result = p->mAttribute_mNonterminalDeclarationMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalMap cPtr_syntaxDeclarationForGeneration::reader_mNonterminalDeclarationMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mNonterminalDeclarationMap ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList GALGAS_syntaxDeclarationForGeneration::reader_mRuleDeclarationList (UNUSED_LOCATION_ARGS) const {
  GALGAS_ruleDeclarationList result ;
  if (NULL != mObjectPtr) {
    const cPtr_syntaxDeclarationForGeneration * p = (const cPtr_syntaxDeclarationForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_syntaxDeclarationForGeneration) ;
    result = p->mAttribute_mRuleDeclarationList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList cPtr_syntaxDeclarationForGeneration::reader_mRuleDeclarationList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRuleDeclarationList ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_syntaxDeclarationForGeneration::reader_mSelectMethodCount (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_syntaxDeclarationForGeneration * p = (const cPtr_syntaxDeclarationForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_syntaxDeclarationForGeneration) ;
    result = p->mAttribute_mSelectMethodCount ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint cPtr_syntaxDeclarationForGeneration::reader_mSelectMethodCount (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSelectMethodCount ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_syntaxDeclarationForGeneration::reader_mHasIndexing (UNUSED_LOCATION_ARGS) const {
  GALGAS_bool result ;
  if (NULL != mObjectPtr) {
    const cPtr_syntaxDeclarationForGeneration * p = (const cPtr_syntaxDeclarationForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_syntaxDeclarationForGeneration) ;
    result = p->mAttribute_mHasIndexing ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cPtr_syntaxDeclarationForGeneration::reader_mHasIndexing (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHasIndexing ;
}

//---------------------------------------------------------------------------*
//          Pointer class for @syntaxDeclarationForGeneration class          *
//---------------------------------------------------------------------------*

cPtr_syntaxDeclarationForGeneration::cPtr_syntaxDeclarationForGeneration (const GALGAS_bool & in_mIsGlobal,
                                                                          const GALGAS_string & in_mComponentName,
                                                                          const GALGAS_string & in_mLexiqueName,
                                                                          const GALGAS_nonterminalMap & in_mNonterminalDeclarationMap,
                                                                          const GALGAS_ruleDeclarationList & in_mRuleDeclarationList,
                                                                          const GALGAS_uint & in_mSelectMethodCount,
                                                                          const GALGAS_bool & in_mHasIndexing
                                                                          COMMA_LOCATION_ARGS) :
cPtr_semanticDeclarationForGeneration (in_mIsGlobal COMMA_THERE),
mAttribute_mComponentName (in_mComponentName),
mAttribute_mLexiqueName (in_mLexiqueName),
mAttribute_mNonterminalDeclarationMap (in_mNonterminalDeclarationMap),
mAttribute_mRuleDeclarationList (in_mRuleDeclarationList),
mAttribute_mSelectMethodCount (in_mSelectMethodCount),
mAttribute_mHasIndexing (in_mHasIndexing) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_syntaxDeclarationForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_syntaxDeclarationForGeneration ;
}

void cPtr_syntaxDeclarationForGeneration::description (C_String & ioString,
                                                       const PMSInt32 inIndentation) const {
  ioString << "[@syntaxDeclarationForGeneration:" ;
  mAttribute_mIsGlobal.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mComponentName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mLexiqueName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mNonterminalDeclarationMap.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mRuleDeclarationList.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mSelectMethodCount.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mHasIndexing.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                   @syntaxDeclarationForGeneration type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_syntaxDeclarationForGeneration ("syntaxDeclarationForGeneration",
                                                       & kTypeDescriptor_GALGAS_semanticDeclarationForGeneration) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_syntaxDeclarationForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_syntaxDeclarationForGeneration ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_syntaxDeclarationForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_syntaxDeclarationForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_syntaxDeclarationForGeneration GALGAS_syntaxDeclarationForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler,
                                                                                            const GALGAS_location & inErrorLocation
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_syntaxDeclarationForGeneration result ;
  const GALGAS_syntaxDeclarationForGeneration * p = (const GALGAS_syntaxDeclarationForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_syntaxDeclarationForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "syntaxDeclarationForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@syntaxDeclarationForGeneration appendDeclaration1'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_syntaxDeclarationForGeneration_appendDeclaration_31_ (const cPtr_semanticDeclarationForGeneration * inObject,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outHeader ; // Returned variable
  const cPtr_syntaxDeclarationForGeneration * object = (const cPtr_syntaxDeclarationForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_syntaxDeclarationForGeneration) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_uintlist var_selectMethodList = GALGAS_uintlist::constructor_emptyList (SOURCE_FILE_AT_LINE (109)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_uint var_idx = GALGAS_uint ((PMUInt32) 0U) ;
  //-------- @loopInstructionForGeneration
  if (object->mAttribute_mSelectMethodCount.add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (111)).isValid ()) {
    PMUInt32 variant_4762 = object->mAttribute_mSelectMethodCount.add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (111)).uintValue () ;
    bool loop_4762 = true ;
    while (loop_4762) {
      loop_4762 = GALGAS_bool (kIsStrictInf, var_idx.objectCompare (object->mAttribute_mSelectMethodCount)).isValid () ;
      if (loop_4762) {
        loop_4762 = GALGAS_bool (kIsStrictInf, var_idx.objectCompare (object->mAttribute_mSelectMethodCount)).boolValue () ;
      }
      if (loop_4762 && (0 == variant_4762)) {
        loop_4762 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (111)) ;
      }
      if (loop_4762) {
        variant_4762 -- ;
        //-------- @plusEqualnstructionForGeneration
        var_selectMethodList.addAssign_operation (var_idx COMMA_SOURCE_FILE_AT_LINE (113)) ;
        //-------- @incrementInstructionForGeneration
        var_idx.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (114)) ;
      }
    }
  }
  //-------- @assignmentInstructionForGeneration
  result_outHeader = GALGAS_string (filewrapperTemplate_syntaxFileGenerationTemplate_syntaxAnalyserClassDeclaration (inCompiler, object->mAttribute_mComponentName, object->mAttribute_mLexiqueName, object->mAttribute_mNonterminalDeclarationMap, object->mAttribute_mRuleDeclarationList, var_selectMethodList, object->mAttribute_mHasIndexing COMMA_SOURCE_FILE_AT_LINE (116))) ;
//---
  return result_outHeader ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_syntaxDeclarationForGeneration_appendDeclaration_31_ (void) {
  enterCategoryReader_appendDeclaration_31_ (kTypeDescriptor_GALGAS_syntaxDeclarationForGeneration.mSlotID,
                                             categoryReader_syntaxDeclarationForGeneration_appendDeclaration_31_) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_syntaxDeclarationForGeneration_appendDeclaration_31_ (defineCategoryReader_syntaxDeclarationForGeneration_appendDeclaration_31_, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Abstract category method '@syntaxInstructionAST analyzeSyntaxInstruction' *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_syntaxInstructionAST_analyzeSyntaxInstruction> gCategoryMethodTable_syntaxInstructionAST_analyzeSyntaxInstruction ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyzeSyntaxInstruction (const PMSInt32 inClassIndex,
                                                   categoryMethodSignature_syntaxInstructionAST_analyzeSyntaxInstruction inMethod) {
  gCategoryMethodTable_syntaxInstructionAST_analyzeSyntaxInstruction.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_syntaxInstructionAST_analyzeSyntaxInstruction (void) {
  gCategoryMethodTable_syntaxInstructionAST_analyzeSyntaxInstruction.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_syntaxInstructionAST_analyzeSyntaxInstruction (NULL,
                                                                          freeCategoryMethod_syntaxInstructionAST_analyzeSyntaxInstruction) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_analyzeSyntaxInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                  const GALGAS_analysisContext constin_inAnalysisContext,
                                                  const GALGAS_terminalMap constin_inTerminalMap,
                                                  const GALGAS_string constin_inLexiqueName,
                                                  const GALGAS_nonterminalMap constin_inNonterminalMap,
                                                  const GALGAS_string constin_inComponentName,
                                                  const GALGAS_stringset constin_inIndexNameSet,
                                                  GALGAS_semanticInstructionListForGeneration & io_ioInstructionListForGeneration,
                                                  GALGAS_variableMap & io_ioVariableMap,
                                                  GALGAS_uint & io_ioSelectMethodCount,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_syntaxInstructionAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_syntaxInstructionAST_analyzeSyntaxInstruction f = NULL ;
    if (classIndex < gCategoryMethodTable_syntaxInstructionAST_analyzeSyntaxInstruction.count ()) {
      f = gCategoryMethodTable_syntaxInstructionAST_analyzeSyntaxInstruction (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_syntaxInstructionAST_analyzeSyntaxInstruction.count ()) {
           f = gCategoryMethodTable_syntaxInstructionAST_analyzeSyntaxInstruction (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_syntaxInstructionAST_analyzeSyntaxInstruction.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inAnalysisContext, constin_inTerminalMap, constin_inLexiqueName, constin_inNonterminalMap, constin_inComponentName, constin_inIndexNameSet, io_ioInstructionListForGeneration, io_ioVariableMap, io_ioSelectMethodCount, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@semanticInstructionAST analyzeSyntaxInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_semanticInstructionAST_analyzeSyntaxInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                                            const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                            const GALGAS_terminalMap /* constinArgument_inTerminalMap */,
                                                                            const GALGAS_string /* constinArgument_inLexiqueName */,
                                                                            const GALGAS_nonterminalMap /* constinArgument_inNonterminalMap */,
                                                                            const GALGAS_string /* constinArgument_inComponentName */,
                                                                            const GALGAS_stringset /* constinArgument_inIndexNameSet */,
                                                                            GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                            GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                            GALGAS_uint & /* ioArgument_ioSelectMethodCount */,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_semanticInstructionAST * object = (const cPtr_semanticInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_semanticInstructionAST) ;
  //-------- @methodCallInstructionForGeneration
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_semanticInstructionAST temp_0 = object ;
  callCategoryMethod_analyzeSemanticInstruction ((const cPtr_semanticInstructionAST *) temp_0.ptr (), constinArgument_inAnalysisContext, ioArgument_ioInstructionListForGeneration, ioArgument_ioVariableMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (235)) ;
  //-------- END @methodCallInstructionForGeneration
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_semanticInstructionAST_analyzeSyntaxInstruction (void) {
  enterCategoryMethod_analyzeSyntaxInstruction (kTypeDescriptor_GALGAS_semanticInstructionAST.mSlotID,
                                                categoryMethod_semanticInstructionAST_analyzeSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_semanticInstructionAST_analyzeSyntaxInstruction (defineCategoryMethod_semanticInstructionAST_analyzeSyntaxInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@nonterminalCallInstruction analyzeSyntaxInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_nonterminalCallInstruction_analyzeSyntaxInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                                                const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                const GALGAS_terminalMap /* constinArgument_inTerminalMap */,
                                                                                const GALGAS_string /* constinArgument_inLexiqueName */,
                                                                                const GALGAS_nonterminalMap constinArgument_inNonterminalMap,
                                                                                const GALGAS_string /* constinArgument_inComponentName */,
                                                                                const GALGAS_stringset /* constinArgument_inIndexNameSet */,
                                                                                GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                GALGAS_uint & /* ioArgument_ioSelectMethodCount */,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_nonterminalCallInstruction * object = (const cPtr_nonterminalCallInstruction *) inObject ;
  macroValidSharedObject (object, const cPtr_nonterminalCallInstruction) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_nonterminalLabelMap var_labelMap ;
  //-------- @methodCallInstructionForGeneration
  constinArgument_inNonterminalMap.method_searchKey (object->mAttribute_mNonterminalName, var_labelMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (257)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_formalParameterSignature var_signature ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mLabelName.reader_string (SOURCE_FILE_AT_LINE (259)).objectCompare (GALGAS_string ("parse"))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @assignmentInstructionForGeneration
    var_signature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (260)) ;
  }else if (kBoolFalse == test_0) {
    //-------- @methodCallInstructionForGeneration
    GALGAS_formalParameterListForGeneration joker_10865_0 ; // Joker input parameter
    GALGAS_location joker_10879_0 ; // Joker input parameter
    var_labelMap.method_searchKey (object->mAttribute_mLabelName, joker_10865_0, var_signature, joker_10879_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (262)) ;
    //-------- END @methodCallInstructionForGeneration
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS_actualParameterListForGeneration var_actualParameterListForGeneration ;
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeRoutineArguments (constinArgument_inAnalysisContext, object->mAttribute_mNonterminalName, GALGAS_string ("'<").operator_concat (object->mAttribute_mNonterminalName.reader_string (SOURCE_FILE_AT_LINE (269)) COMMA_SOURCE_FILE_AT_LINE (269)).operator_concat (GALGAS_string (">' nonterminal declaration") COMMA_SOURCE_FILE_AT_LINE (269)), var_signature, object->mAttribute_mActualParameterList, ioArgument_ioVariableMap, var_actualParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (266)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @plusEqualnstructionForGeneration
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_nonterminalInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mNonterminalName.reader_string (SOURCE_FILE_AT_LINE (278)), object->mAttribute_mLabelName.reader_string (SOURCE_FILE_AT_LINE (279)), var_actualParameterListForGeneration COMMA_SOURCE_FILE_AT_LINE (276)) COMMA_SOURCE_FILE_AT_LINE (276)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_nonterminalCallInstruction_analyzeSyntaxInstruction (void) {
  enterCategoryMethod_analyzeSyntaxInstruction (kTypeDescriptor_GALGAS_nonterminalCallInstruction.mSlotID,
                                                categoryMethod_nonterminalCallInstruction_analyzeSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_nonterminalCallInstruction_analyzeSyntaxInstruction (defineCategoryMethod_nonterminalCallInstruction_analyzeSyntaxInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@nonterminalInstructionForGeneration generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_nonterminalInstructionForGeneration_generateInstruction (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                    const GALGAS_bool constinArgument_inGenerateCheckValid,
                                                                                    GALGAS_uint & ioArgument_ioTemporaryVariableIndex,
                                                                                    GALGAS_stringset & ioArgument_ioUnusedVariableCppNameSet,
                                                                                    GALGAS_string & ioArgument_ioGeneratedCode,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_nonterminalInstructionForGeneration * object = (const cPtr_nonterminalInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_nonterminalInstructionForGeneration) ;
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("//-------- @nonterminalInstructionForGeneration\n") COMMA_SOURCE_FILE_AT_LINE (292)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_stringlist var_parameterCppNameList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (294)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_stringlist var_jokerParametersToReleaseList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (295)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_stringlist var_inputVariableList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (296)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_actualParameterListForGeneration enumerator_12009 (object->mAttribute_mActualParameterList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_12009.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_string var_parameterCppName ;
    //-------- @methodCallInstructionForGeneration
    callCategoryMethod_generateActualParameter ((const cPtr_actualParameterForGeneration *) enumerator_12009.current_mActualParameter (HERE).ptr (), ioArgument_ioTemporaryVariableIndex, ioArgument_ioGeneratedCode, var_jokerParametersToReleaseList, var_inputVariableList, ioArgument_ioUnusedVariableCppNameSet, var_parameterCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (299)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @plusEqualnstructionForGeneration
    var_parameterCppNameList.addAssign_operation (var_parameterCppName COMMA_SOURCE_FILE_AT_LINE (300)) ;
    enumerator_12009.gotoNextObject () ;
  }
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("nt_").operator_concat (object->mAttribute_mNonterminalName.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (303)) COMMA_SOURCE_FILE_AT_LINE (303)).operator_concat (GALGAS_string ("_") COMMA_SOURCE_FILE_AT_LINE (303)).operator_concat (object->mAttribute_mLabelName.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (303)) COMMA_SOURCE_FILE_AT_LINE (303)).operator_concat (GALGAS_string (" (") COMMA_SOURCE_FILE_AT_LINE (303)) COMMA_SOURCE_FILE_AT_LINE (303)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_stringlist enumerator_12484 (var_parameterCppNameList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_12484.hasCurrentObject ()) {
    //-------- @concatInstructionForGeneration
    ioArgument_ioGeneratedCode.dotAssign_operation (enumerator_12484.current_mValue (HERE).operator_concat (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (305)) COMMA_SOURCE_FILE_AT_LINE (305)) ;
    enumerator_12484.gotoNextObject () ;
  }
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioUnusedVariableCppNameSet.modifier_removeKey (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (307)) COMMA_SOURCE_FILE_AT_LINE (307)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (308)).operator_concat (GALGAS_string (") ;\n") COMMA_SOURCE_FILE_AT_LINE (308)) COMMA_SOURCE_FILE_AT_LINE (308)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = constinArgument_inGenerateCheckValid.boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @concatInstructionForGeneration
    ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("#ifndef DO_NOT_GENERATE_CHECKINGS\n") COMMA_SOURCE_FILE_AT_LINE (311)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_stringlist enumerator_12789 (var_inputVariableList, kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_12789.hasCurrentObject ()) {
      //-------- @concatInstructionForGeneration
      ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("  ").operator_concat (enumerator_12789.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (313)).operator_concat (GALGAS_string (".checkIsValid (HERE) ;\n") COMMA_SOURCE_FILE_AT_LINE (313)) COMMA_SOURCE_FILE_AT_LINE (313)) ;
      enumerator_12789.gotoNextObject () ;
    }
    //-------- @concatInstructionForGeneration
    ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("#endif\n") COMMA_SOURCE_FILE_AT_LINE (315)) ;
  }
  //-------- @foreachInstructionForGeneration
  cEnumerator_stringlist enumerator_12999 (var_jokerParametersToReleaseList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_12999.hasCurrentObject ()) {
    //-------- @concatInstructionForGeneration
    ioArgument_ioGeneratedCode.dotAssign_operation (enumerator_12999.current_mValue (HERE).operator_concat (GALGAS_string (".drop () ; // Release temporary input variables (joker in source)\n") COMMA_SOURCE_FILE_AT_LINE (319)) COMMA_SOURCE_FILE_AT_LINE (319)) ;
    enumerator_12999.gotoNextObject () ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_nonterminalInstructionForGeneration_generateInstruction (void) {
  enterCategoryMethod_generateInstruction (kTypeDescriptor_GALGAS_nonterminalInstructionForGeneration.mSlotID,
                                           categoryMethod_nonterminalInstructionForGeneration_generateInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_nonterminalInstructionForGeneration_generateInstruction (defineCategoryMethod_nonterminalInstructionForGeneration_generateInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@terminalCheckInstruction analyzeSyntaxInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_terminalCheckInstruction_analyzeSyntaxInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                                              const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                              const GALGAS_terminalMap constinArgument_inTerminalMap,
                                                                              const GALGAS_string constinArgument_inLexiqueName,
                                                                              const GALGAS_nonterminalMap /* constinArgument_inNonterminalMap */,
                                                                              const GALGAS_string /* constinArgument_inComponentName */,
                                                                              const GALGAS_stringset constinArgument_inIndexNameSet,
                                                                              GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                              GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                              GALGAS_uint & /* ioArgument_ioSelectMethodCount */,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_terminalCheckInstruction * object = (const cPtr_terminalCheckInstruction *) inObject ;
  macroValidSharedObject (object, const cPtr_terminalCheckInstruction) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_lexicalSentValueList var_sentAttributeList ;
  //-------- @methodCallInstructionForGeneration
  constinArgument_inTerminalMap.method_searchKey (object->mAttribute_mTerminalName, var_sentAttributeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (337)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, object->mAttribute_mActualInputParameterList.reader_length (SOURCE_FILE_AT_LINE (339)).objectCompare (var_sentAttributeList.reader_length (SOURCE_FILE_AT_LINE (339)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    //--- @ifExpressionForGeneration
    GALGAS_string temp_1 ;
    const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, var_sentAttributeList.reader_length (SOURCE_FILE_AT_LINE (342)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_2) {
      temp_1 = GALGAS_string ("s") ;
    }else if (kBoolFalse == test_2) {
      temp_1 = GALGAS_string::makeEmptyString () ;
    }
    //--- @ifExpressionForGeneration
    GALGAS_string temp_3 ;
    const enumGalgasBool test_4 = GALGAS_bool (kIsStrictSup, object->mAttribute_mActualInputParameterList.reader_length (SOURCE_FILE_AT_LINE (345)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_4) {
      temp_3 = GALGAS_string ("s") ;
    }else if (kBoolFalse == test_4) {
      temp_3 = GALGAS_string::makeEmptyString () ;
    }
    GALGAS_location location_5 (object->mAttribute_mTerminalName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_5, GALGAS_string ("naming the '$").operator_concat (object->mAttribute_mTerminalName.reader_string (SOURCE_FILE_AT_LINE (341)) COMMA_SOURCE_FILE_AT_LINE (341)).operator_concat (GALGAS_string ("$' requires ") COMMA_SOURCE_FILE_AT_LINE (341)).operator_concat (var_sentAttributeList.reader_length (SOURCE_FILE_AT_LINE (341)).reader_string (SOURCE_FILE_AT_LINE (341)) COMMA_SOURCE_FILE_AT_LINE (341)).operator_concat (GALGAS_string ("parameter") COMMA_SOURCE_FILE_AT_LINE (342)).operator_concat (temp_1 COMMA_SOURCE_FILE_AT_LINE (342)).operator_concat (GALGAS_string (", but this instruction names ") COMMA_SOURCE_FILE_AT_LINE (343)).operator_concat (object->mAttribute_mActualInputParameterList.reader_length (SOURCE_FILE_AT_LINE (344)).reader_string (SOURCE_FILE_AT_LINE (344)) COMMA_SOURCE_FILE_AT_LINE (344)).operator_concat (GALGAS_string (" parameter") COMMA_SOURCE_FILE_AT_LINE (344)).operator_concat (temp_3 COMMA_SOURCE_FILE_AT_LINE (345)) COMMA_SOURCE_FILE_AT_LINE (340)) ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_terminalCheckAssignementList var_terminalCheckAssignementList = GALGAS_terminalCheckAssignementList::constructor_emptyList (SOURCE_FILE_AT_LINE (349)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_actualInputParameterListAST enumerator_14314 (object->mAttribute_mActualInputParameterList, kEnumeration_up) ;
  cEnumerator_lexicalSentValueList enumerator_14335 (var_sentAttributeList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_14314.hasCurrentObject () && enumerator_14335.hasCurrentObject ()) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_6 = GALGAS_bool (kIsStrictSup, enumerator_14314.current_mActualParameterName (HERE).mAttribute_string.reader_length (SOURCE_FILE_AT_LINE (351)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_6) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_unifiedTypeMapProxy var_type ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_string var_cppName ;
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_7 = GALGAS_bool (kIsStrictSup, enumerator_14314.current_mActualParameterTypeName (HERE).mAttribute_string.reader_length (SOURCE_FILE_AT_LINE (354)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
      if (kBoolTrue == test_7) {
        //-------- @assignmentInstructionForGeneration
        var_cppName = GALGAS_string ("var_").operator_concat (enumerator_14314.current_mActualParameterName (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (355)) COMMA_SOURCE_FILE_AT_LINE (355)) ;
        //-------- @assignmentInstructionForGeneration
        var_type = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, enumerator_14314.current_mActualParameterTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (356)) ;
        { //-------- @modifierCallInstructionForGeneration
        ioArgument_ioVariableMap.modifier_insertDefinedLocalVariable (enumerator_14314.current_mActualParameterName (HERE), var_type, var_cppName, var_cppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (357)) ;
        } //-------- END @typeMethodInstructionForGeneration
      }else if (kBoolFalse == test_7) {
        { //-------- @modifierCallInstructionForGeneration
        GALGAS_string joker_14915_0 ; // Joker input parameter
        ioArgument_ioVariableMap.modifier_searchForWriteAccess (enumerator_14314.current_mActualParameterName (HERE), var_type, var_cppName, joker_14915_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (359)) ;
        } //-------- END @typeMethodInstructionForGeneration
      }
      //-------- @localVariableDeclarationForGeneration
      GALGAS_unifiedTypeMapProxy var_expectedType ;
      //------- @switchInstructionForGeneration
      if (enumerator_14335.current_mLexicalType (HERE).isValid ()) {
        switch (enumerator_14335.current_mLexicalType (HERE).enumValue ()) {
        case GALGAS_lexicalTypeEnum::kNotBuilt:
          break ;
        case GALGAS_lexicalTypeEnum::kEnum_lexicalType_5F_string: {
          //-------- @assignmentInstructionForGeneration
          var_expectedType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLStringType ;
          } break ;
        case GALGAS_lexicalTypeEnum::kEnum_lexicalType_5F_char: {
          //-------- @assignmentInstructionForGeneration
          var_expectedType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLCharType ;
          } break ;
        case GALGAS_lexicalTypeEnum::kEnum_lexicalType_5F_uint: {
          //-------- @assignmentInstructionForGeneration
          var_expectedType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLUIntType ;
          } break ;
        case GALGAS_lexicalTypeEnum::kEnum_lexicalType_5F_uint_36__34_: {
          //-------- @assignmentInstructionForGeneration
          var_expectedType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLUInt_36__34_Type ;
          } break ;
        case GALGAS_lexicalTypeEnum::kEnum_lexicalType_5F_sint: {
          //-------- @assignmentInstructionForGeneration
          var_expectedType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLSIntType ;
          } break ;
        case GALGAS_lexicalTypeEnum::kEnum_lexicalType_5F_sint_36__34_: {
          //-------- @assignmentInstructionForGeneration
          var_expectedType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLSInt_36__34_Type ;
          } break ;
        case GALGAS_lexicalTypeEnum::kEnum_lexicalType_5F_double: {
          //-------- @assignmentInstructionForGeneration
          var_expectedType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLDoubleType ;
          } break ;
        }
      }
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_8 = GALGAS_bool (kIsNotEqual, var_expectedType.objectCompare (var_type)).boolEnum () ;
      if (kBoolTrue == test_8) {
        //-------- @errorInstructionForGeneration
        GALGAS_location location_9 (enumerator_14314.current_mActualParameterName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_9, GALGAS_string ("the '").operator_concat (enumerator_14314.current_mActualParameterName (HERE).reader_string (SOURCE_FILE_AT_LINE (373)) COMMA_SOURCE_FILE_AT_LINE (373)).operator_concat (GALGAS_string ("' parameter has the '@") COMMA_SOURCE_FILE_AT_LINE (373)).operator_concat (var_type.reader_identifierRepresentation (inCompiler COMMA_SOURCE_FILE_AT_LINE (373)) COMMA_SOURCE_FILE_AT_LINE (373)).operator_concat (GALGAS_string (", bit an '@") COMMA_SOURCE_FILE_AT_LINE (374)).operator_concat (var_expectedType.reader_identifierRepresentation (inCompiler COMMA_SOURCE_FILE_AT_LINE (374)) COMMA_SOURCE_FILE_AT_LINE (374)).operator_concat (GALGAS_string ("' parameter is required here") COMMA_SOURCE_FILE_AT_LINE (374)) COMMA_SOURCE_FILE_AT_LINE (372)) ;
      }
      //-------- @plusEqualnstructionForGeneration
      var_terminalCheckAssignementList.addAssign_operation (enumerator_14314.current_mActualParameterTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (378)), var_cppName, enumerator_14335.current_mLexicalAttributeName (HERE) COMMA_SOURCE_FILE_AT_LINE (377)) ;
    }
    enumerator_14314.gotoNextObject () ;
    enumerator_14335.gotoNextObject () ;
  }
  //-------- @foreachInstructionForGeneration
  cEnumerator_lstringlist enumerator_16205 (object->mAttribute_mIndexingKeyList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_16205.hasCurrentObject ()) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_10 = constinArgument_inIndexNameSet.reader_hasKey (enumerator_16205.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (386)) COMMA_SOURCE_FILE_AT_LINE (386)).operator_not (SOURCE_FILE_AT_LINE (386)).boolEnum () ;
    if (kBoolTrue == test_10) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_stringset enumerator_16318 (constinArgument_inIndexNameSet, kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_16318.hasCurrentObject ()) {
        //-------- @concatInstructionForGeneration
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "  - ").operator_concat (enumerator_16318.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (389)) COMMA_SOURCE_FILE_AT_LINE (389)) ;
        enumerator_16318.gotoNextObject () ;
      }
      //-------- @errorInstructionForGeneration
      GALGAS_location location_11 (enumerator_16205.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_11, GALGAS_string ("the '").operator_concat (enumerator_16205.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (391)) COMMA_SOURCE_FILE_AT_LINE (391)).operator_concat (GALGAS_string ("' indexing name is not declared by the lexique; available names are:") COMMA_SOURCE_FILE_AT_LINE (391)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (391)) COMMA_SOURCE_FILE_AT_LINE (391)) ;
    }
    enumerator_16205.gotoNextObject () ;
  }
  //-------- @plusEqualnstructionForGeneration
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_terminalCheckInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mTerminalName, constinArgument_inLexiqueName, var_terminalCheckAssignementList, object->mAttribute_mIndexingKeyList COMMA_SOURCE_FILE_AT_LINE (395)) COMMA_SOURCE_FILE_AT_LINE (395)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_terminalCheckInstruction_analyzeSyntaxInstruction (void) {
  enterCategoryMethod_analyzeSyntaxInstruction (kTypeDescriptor_GALGAS_terminalCheckInstruction.mSlotID,
                                                categoryMethod_terminalCheckInstruction_analyzeSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_terminalCheckInstruction_analyzeSyntaxInstruction (defineCategoryMethod_terminalCheckInstruction_analyzeSyntaxInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@terminalCheckInstructionForGeneration generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_terminalCheckInstructionForGeneration_generateInstruction (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                      const GALGAS_bool constinArgument_inGenerateCheckValid,
                                                                                      GALGAS_uint & /* ioArgument_ioTemporaryVariableIndex */,
                                                                                      GALGAS_stringset & ioArgument_ioUnusedVariableCppNameSet,
                                                                                      GALGAS_string & ioArgument_ioGeneratedCode,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_terminalCheckInstructionForGeneration * object = (const cPtr_terminalCheckInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_terminalCheckInstructionForGeneration) ;
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("//-------- @terminalCheckInstructionForGeneration\n") COMMA_SOURCE_FILE_AT_LINE (412)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_terminalCheckAssignementList enumerator_17192 (object->mAttribute_mTerminalCheckAssignementList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_17192.hasCurrentObject ()) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, enumerator_17192.current_mTypeName (HERE).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
    if (kBoolTrue == test_0) {
      //-------- @concatInstructionForGeneration
      ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("GALGAS_").operator_concat (enumerator_17192.current_mTypeName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (416)) COMMA_SOURCE_FILE_AT_LINE (416)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (416)) COMMA_SOURCE_FILE_AT_LINE (416)) ;
    }
    //-------- @concatInstructionForGeneration
    ioArgument_ioGeneratedCode.dotAssign_operation (enumerator_17192.current_mTargetVarCppName (HERE).operator_concat (GALGAS_string (" = ") COMMA_SOURCE_FILE_AT_LINE (419)).operator_concat (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (419)) COMMA_SOURCE_FILE_AT_LINE (419)).operator_concat (GALGAS_string ("->synthetizedAttribute_") COMMA_SOURCE_FILE_AT_LINE (419)).operator_concat (enumerator_17192.current_mSourceLexicalAttributeName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (420)) COMMA_SOURCE_FILE_AT_LINE (420)).operator_concat (GALGAS_string (" () ;\n") COMMA_SOURCE_FILE_AT_LINE (421)) COMMA_SOURCE_FILE_AT_LINE (419)) ;
    enumerator_17192.gotoNextObject () ;
  }
  //-------- @foreachInstructionForGeneration
  cEnumerator_lstringlist enumerator_17593 (object->mAttribute_mIndexingKeyList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_17593.hasCurrentObject ()) {
    //-------- @concatInstructionForGeneration
    ioArgument_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (425)).operator_concat (GALGAS_string ("->enterIndexing (C_Lexique_") COMMA_SOURCE_FILE_AT_LINE (425)).operator_concat (object->mAttribute_mLexiqueIdentifier COMMA_SOURCE_FILE_AT_LINE (425)).operator_concat (GALGAS_string ("::kIndexing_") COMMA_SOURCE_FILE_AT_LINE (425)).operator_concat (enumerator_17593.current_mValue (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (425)) COMMA_SOURCE_FILE_AT_LINE (425)).operator_concat (GALGAS_string (") ;\n") COMMA_SOURCE_FILE_AT_LINE (425)) COMMA_SOURCE_FILE_AT_LINE (425)) ;
    enumerator_17593.gotoNextObject () ;
  }
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioUnusedVariableCppNameSet.modifier_removeKey (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (428)) COMMA_SOURCE_FILE_AT_LINE (428)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (429)).operator_concat (GALGAS_string ("->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_") COMMA_SOURCE_FILE_AT_LINE (429)).operator_concat (object->mAttribute_mLexiqueIdentifier COMMA_SOURCE_FILE_AT_LINE (430)).operator_concat (GALGAS_string ("::kToken_") COMMA_SOURCE_FILE_AT_LINE (430)).operator_concat (object->mAttribute_mTerminalName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (430)) COMMA_SOURCE_FILE_AT_LINE (430)).operator_concat (GALGAS_string (") COMMA_SOURCE_FILE_AT_LINE (") COMMA_SOURCE_FILE_AT_LINE (431)).operator_concat (object->mAttribute_mInstructionLocation.reader_line (inCompiler COMMA_SOURCE_FILE_AT_LINE (431)).reader_string (SOURCE_FILE_AT_LINE (431)) COMMA_SOURCE_FILE_AT_LINE (431)).operator_concat (GALGAS_string (")) ;\n") COMMA_SOURCE_FILE_AT_LINE (431)) COMMA_SOURCE_FILE_AT_LINE (429)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_1 = constinArgument_inGenerateCheckValid.boolEnum () ;
  if (kBoolTrue == test_1) {
    //-------- @concatInstructionForGeneration
    ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("#ifndef DO_NOT_GENERATE_CHECKINGS\n") COMMA_SOURCE_FILE_AT_LINE (434)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_terminalCheckAssignementList enumerator_18295 (object->mAttribute_mTerminalCheckAssignementList, kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_18295.hasCurrentObject ()) {
      //-------- @concatInstructionForGeneration
      ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("  ").operator_concat (enumerator_18295.current_mTargetVarCppName (HERE) COMMA_SOURCE_FILE_AT_LINE (436)).operator_concat (GALGAS_string (".checkIsValid (HERE) ;\n") COMMA_SOURCE_FILE_AT_LINE (436)) COMMA_SOURCE_FILE_AT_LINE (436)) ;
      enumerator_18295.gotoNextObject () ;
    }
    //-------- @concatInstructionForGeneration
    ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("#endif\n") COMMA_SOURCE_FILE_AT_LINE (438)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_terminalCheckInstructionForGeneration_generateInstruction (void) {
  enterCategoryMethod_generateInstruction (kTypeDescriptor_GALGAS_terminalCheckInstructionForGeneration.mSlotID,
                                           categoryMethod_terminalCheckInstructionForGeneration_generateInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_terminalCheckInstructionForGeneration_generateInstruction (defineCategoryMethod_terminalCheckInstructionForGeneration_generateInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@repeatInstruction analyzeSyntaxInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_repeatInstruction_analyzeSyntaxInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                                       const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                       const GALGAS_terminalMap constinArgument_inTerminalMap,
                                                                       const GALGAS_string constinArgument_inLexiqueName,
                                                                       const GALGAS_nonterminalMap constinArgument_inNonterminalMap,
                                                                       const GALGAS_string constinArgument_inComponentName,
                                                                       const GALGAS_stringset constinArgument_inIndexNameSet,
                                                                       GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                       GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                       GALGAS_uint & ioArgument_ioSelectMethodCount,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_repeatInstruction * object = (const cPtr_repeatInstruction *) inObject ;
  macroValidSharedObject (object, const cPtr_repeatInstruction) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_uint var_choiceIndex = ioArgument_ioSelectMethodCount ;
  //-------- @incrementInstructionForGeneration
  ioArgument_ioSelectMethodCount.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (492)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (494)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticInstructionListForGeneration var_repeated_5F_instructionList ;
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeSyntaxInstructionList (constinArgument_inAnalysisContext, constinArgument_inTerminalMap, constinArgument_inLexiqueName, constinArgument_inNonterminalMap, constinArgument_inComponentName, object->mAttribute_mRepeatedInstructionList, object->mAttribute_mEndOf_5F_repeated_5F_instructions_5F_branch, constinArgument_inIndexNameSet, ioArgument_ioVariableMap, ioArgument_ioSelectMethodCount, var_repeated_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (497)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_listOfSemanticInstructionListForGeneration var_listOfSemanticInstructionListForGeneration = GALGAS_listOfSemanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (511)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_listOfSyntaxInstructionList enumerator_20736 (object->mAttribute_mRepeatBranchList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_20736.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_semanticInstructionListForGeneration var_instructionList ;
    { //-------- @routineCallInstructionForGeneration
    routine_analyzeSyntaxInstructionList (constinArgument_inAnalysisContext, constinArgument_inTerminalMap, constinArgument_inLexiqueName, constinArgument_inNonterminalMap, constinArgument_inComponentName, enumerator_20736.current_mSyntaxInstructionList (HERE), enumerator_20736.current_mEndOf_5F_instructions (HERE), constinArgument_inIndexNameSet, ioArgument_ioVariableMap, ioArgument_ioSelectMethodCount, var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (514)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @plusEqualnstructionForGeneration
    var_listOfSemanticInstructionListForGeneration.addAssign_operation (var_instructionList, enumerator_20736.current_mEndOf_5F_instructions (HERE) COMMA_SOURCE_FILE_AT_LINE (527)) ;
    enumerator_20736.gotoNextObject () ;
  }
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_repeat_5F_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (530)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @plusEqualnstructionForGeneration
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_repeatInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, constinArgument_inComponentName, var_choiceIndex, var_repeated_5F_instructionList, object->mAttribute_mEndOf_5F_repeat_5F_instruction, var_listOfSemanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (532)) COMMA_SOURCE_FILE_AT_LINE (532)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_repeatInstruction_analyzeSyntaxInstruction (void) {
  enterCategoryMethod_analyzeSyntaxInstruction (kTypeDescriptor_GALGAS_repeatInstruction.mSlotID,
                                                categoryMethod_repeatInstruction_analyzeSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_repeatInstruction_analyzeSyntaxInstruction (defineCategoryMethod_repeatInstruction_analyzeSyntaxInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@repeatInstructionForGeneration generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_repeatInstructionForGeneration_generateInstruction (const cPtr_semanticInstructionForGeneration * inObject,
                                                                               const GALGAS_bool constinArgument_inGenerateCheckValid,
                                                                               GALGAS_uint & ioArgument_ioTemporaryVariableIndex,
                                                                               GALGAS_stringset & ioArgument_ioUnusedVariableCppNameSet,
                                                                               GALGAS_string & ioArgument_ioGeneratedCode,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_repeatInstructionForGeneration * object = (const cPtr_repeatInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_repeatInstructionForGeneration) ;
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("//-------- @repeatInstructionForGeneration\n") COMMA_SOURCE_FILE_AT_LINE (550)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_repeatFlagCppName = GALGAS_string ("repeatFlag_").operator_concat (ioArgument_ioTemporaryVariableIndex.reader_string (SOURCE_FILE_AT_LINE (551)) COMMA_SOURCE_FILE_AT_LINE (551)) ;
  //-------- @incrementInstructionForGeneration
  ioArgument_ioTemporaryVariableIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (551)) ;
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("bool ").operator_concat (var_repeatFlagCppName COMMA_SOURCE_FILE_AT_LINE (552)).operator_concat (GALGAS_string (" = true ;\n") COMMA_SOURCE_FILE_AT_LINE (552)) COMMA_SOURCE_FILE_AT_LINE (552)) ;
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("while (").operator_concat (var_repeatFlagCppName COMMA_SOURCE_FILE_AT_LINE (553)).operator_concat (GALGAS_string (") {\n") COMMA_SOURCE_FILE_AT_LINE (553)) COMMA_SOURCE_FILE_AT_LINE (553)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_generateInstructionList (constinArgument_inGenerateCheckValid, object->mAttribute_m_5F_repeated_5F_instructionList, ioArgument_ioTemporaryVariableIndex, ioArgument_ioUnusedVariableCppNameSet, ioArgument_ioGeneratedCode, inCompiler COMMA_SOURCE_FILE_AT_LINE (554)) ;
  } //-------- @routineCallInstructionForGeneration
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioGeneratedCode.modifier_incIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (561)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("switch (select_").operator_concat (object->mAttribute_mSyntaxComponentName.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (562)) COMMA_SOURCE_FILE_AT_LINE (562)).operator_concat (GALGAS_string ("_") COMMA_SOURCE_FILE_AT_LINE (562)).operator_concat (object->mAttribute_mChoiceIndex.reader_string (SOURCE_FILE_AT_LINE (562)) COMMA_SOURCE_FILE_AT_LINE (562)).operator_concat (GALGAS_string (" (") COMMA_SOURCE_FILE_AT_LINE (562)).operator_concat (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (562)) COMMA_SOURCE_FILE_AT_LINE (562)).operator_concat (GALGAS_string (")) {\n") COMMA_SOURCE_FILE_AT_LINE (562)) COMMA_SOURCE_FILE_AT_LINE (562)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_listOfSemanticInstructionListForGeneration enumerator_22597 (object->mAttribute_mListOfSemanticInstructionListForGeneration, kEnumeration_up) ;
  //--- simple foreach instruction
  GALGAS_uint index_22591 ((PMUInt32) 0) ;
  while (enumerator_22597.hasCurrentObject ()) {
    //-------- @concatInstructionForGeneration
    ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("case ").operator_concat (index_22591.add_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (564)).reader_string (SOURCE_FILE_AT_LINE (564)) COMMA_SOURCE_FILE_AT_LINE (564)).operator_concat (GALGAS_string (": {\n") COMMA_SOURCE_FILE_AT_LINE (564)) COMMA_SOURCE_FILE_AT_LINE (564)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_generateInstructionList (constinArgument_inGenerateCheckValid, enumerator_22597.current_mInstructionList (HERE), ioArgument_ioTemporaryVariableIndex, ioArgument_ioUnusedVariableCppNameSet, ioArgument_ioGeneratedCode, inCompiler COMMA_SOURCE_FILE_AT_LINE (565)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @concatInstructionForGeneration
    ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("} break ;\n") COMMA_SOURCE_FILE_AT_LINE (572)) ;
    enumerator_22597.gotoNextObject () ;
    index_22591.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (563)) ;
  }
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("default:\n") COMMA_SOURCE_FILE_AT_LINE (574)) ;
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("  ").operator_concat (var_repeatFlagCppName COMMA_SOURCE_FILE_AT_LINE (575)).operator_concat (GALGAS_string (" = false ;\n") COMMA_SOURCE_FILE_AT_LINE (575)) COMMA_SOURCE_FILE_AT_LINE (575)) ;
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("  break ;\n") COMMA_SOURCE_FILE_AT_LINE (576)) ;
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("}\n") COMMA_SOURCE_FILE_AT_LINE (577)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioGeneratedCode.modifier_decIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (578)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("}\n") COMMA_SOURCE_FILE_AT_LINE (579)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_repeatInstructionForGeneration_generateInstruction (void) {
  enterCategoryMethod_generateInstruction (kTypeDescriptor_GALGAS_repeatInstructionForGeneration.mSlotID,
                                           categoryMethod_repeatInstructionForGeneration_generateInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_repeatInstructionForGeneration_generateInstruction (defineCategoryMethod_repeatInstructionForGeneration_generateInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@selectInstruction analyzeSyntaxInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_selectInstruction_analyzeSyntaxInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                                       const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                       const GALGAS_terminalMap constinArgument_inTerminalMap,
                                                                       const GALGAS_string constinArgument_inLexiqueName,
                                                                       const GALGAS_nonterminalMap constinArgument_inNonterminalMap,
                                                                       const GALGAS_string constinArgument_inComponentName,
                                                                       const GALGAS_stringset constinArgument_inIndexNameSet,
                                                                       GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                       GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                       GALGAS_uint & ioArgument_ioSelectMethodCount,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_selectInstruction * object = (const cPtr_selectInstruction *) inObject ;
  macroValidSharedObject (object, const cPtr_selectInstruction) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_uint var_choiceIndex = ioArgument_ioSelectMethodCount ;
  //-------- @incrementInstructionForGeneration
  ioArgument_ioSelectMethodCount.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (596)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioVariableMap.modifier_openOverrideForSelectBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (598)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_listOfSemanticInstructionListForGeneration var_listOfSemanticInstructionListForGeneration = GALGAS_listOfSemanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (600)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_listOfSyntaxInstructionList enumerator_23913 (object->mAttribute_mSelectBranchList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_23913.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_semanticInstructionListForGeneration var_instructionList ;
    { //-------- @routineCallInstructionForGeneration
    routine_analyzeSyntaxInstructionList (constinArgument_inAnalysisContext, constinArgument_inTerminalMap, constinArgument_inLexiqueName, constinArgument_inNonterminalMap, constinArgument_inComponentName, enumerator_23913.current_mSyntaxInstructionList (HERE), enumerator_23913.current_mEndOf_5F_instructions (HERE), constinArgument_inIndexNameSet, ioArgument_ioVariableMap, ioArgument_ioSelectMethodCount, var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (603)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @plusEqualnstructionForGeneration
    var_listOfSemanticInstructionListForGeneration.addAssign_operation (var_instructionList, enumerator_23913.current_mEndOf_5F_instructions (HERE) COMMA_SOURCE_FILE_AT_LINE (616)) ;
    enumerator_23913.gotoNextObject () ;
  }
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_select_5F_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (619)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @plusEqualnstructionForGeneration
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_selectInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, constinArgument_inComponentName, var_choiceIndex, var_listOfSemanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (620)) COMMA_SOURCE_FILE_AT_LINE (620)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_selectInstruction_analyzeSyntaxInstruction (void) {
  enterCategoryMethod_analyzeSyntaxInstruction (kTypeDescriptor_GALGAS_selectInstruction.mSlotID,
                                                categoryMethod_selectInstruction_analyzeSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_selectInstruction_analyzeSyntaxInstruction (defineCategoryMethod_selectInstruction_analyzeSyntaxInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@selectInstructionForGeneration generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_selectInstructionForGeneration_generateInstruction (const cPtr_semanticInstructionForGeneration * inObject,
                                                                               const GALGAS_bool constinArgument_inGenerateCheckValid,
                                                                               GALGAS_uint & ioArgument_ioTemporaryVariableIndex,
                                                                               GALGAS_stringset & ioArgument_ioUnusedVariableCppNameSet,
                                                                               GALGAS_string & ioArgument_ioGeneratedCode,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_selectInstructionForGeneration * object = (const cPtr_selectInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_selectInstructionForGeneration) ;
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("//-------- @selectInstructionForGeneration\n") COMMA_SOURCE_FILE_AT_LINE (636)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioUnusedVariableCppNameSet.modifier_removeKey (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (637)) COMMA_SOURCE_FILE_AT_LINE (637)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("switch (select_").operator_concat (object->mAttribute_mSyntaxComponentName.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (638)) COMMA_SOURCE_FILE_AT_LINE (638)).operator_concat (GALGAS_string ("_") COMMA_SOURCE_FILE_AT_LINE (638)).operator_concat (object->mAttribute_mChoiceIndex.reader_string (SOURCE_FILE_AT_LINE (638)) COMMA_SOURCE_FILE_AT_LINE (638)).operator_concat (GALGAS_string (" (") COMMA_SOURCE_FILE_AT_LINE (638)).operator_concat (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (638)) COMMA_SOURCE_FILE_AT_LINE (638)).operator_concat (GALGAS_string (")) {\n") COMMA_SOURCE_FILE_AT_LINE (638)) COMMA_SOURCE_FILE_AT_LINE (638)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_listOfSemanticInstructionListForGeneration enumerator_25307 (object->mAttribute_mListOfSemanticInstructionListForGeneration, kEnumeration_up) ;
  //--- simple foreach instruction
  GALGAS_uint index_25301 ((PMUInt32) 0) ;
  while (enumerator_25307.hasCurrentObject ()) {
    //-------- @concatInstructionForGeneration
    ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("case ").operator_concat (index_25301.add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (640)).reader_string (SOURCE_FILE_AT_LINE (640)) COMMA_SOURCE_FILE_AT_LINE (640)).operator_concat (GALGAS_string (": {\n") COMMA_SOURCE_FILE_AT_LINE (640)) COMMA_SOURCE_FILE_AT_LINE (640)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_generateInstructionList (constinArgument_inGenerateCheckValid, enumerator_25307.current_mInstructionList (HERE), ioArgument_ioTemporaryVariableIndex, ioArgument_ioUnusedVariableCppNameSet, ioArgument_ioGeneratedCode, inCompiler COMMA_SOURCE_FILE_AT_LINE (641)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @concatInstructionForGeneration
    ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("} break ;\n") COMMA_SOURCE_FILE_AT_LINE (648)) ;
    enumerator_25307.gotoNextObject () ;
    index_25301.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (639)) ;
  }
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("default:\n") COMMA_SOURCE_FILE_AT_LINE (650)) ;
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("  break ;\n") COMMA_SOURCE_FILE_AT_LINE (651)) ;
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("}\n") COMMA_SOURCE_FILE_AT_LINE (652)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_selectInstructionForGeneration_generateInstruction (void) {
  enterCategoryMethod_generateInstruction (kTypeDescriptor_GALGAS_selectInstructionForGeneration.mSlotID,
                                           categoryMethod_selectInstructionForGeneration_generateInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_selectInstructionForGeneration_generateInstruction (defineCategoryMethod_selectInstructionForGeneration_generateInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@parseRewindInstruction analyzeSyntaxInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_parseRewindInstruction_analyzeSyntaxInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                                            const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                            const GALGAS_terminalMap constinArgument_inTerminalMap,
                                                                            const GALGAS_string constinArgument_inLexiqueName,
                                                                            const GALGAS_nonterminalMap constinArgument_inNonterminalMap,
                                                                            const GALGAS_string constinArgument_inComponentName,
                                                                            const GALGAS_stringset constinArgument_inIndexNameSet,
                                                                            GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                            GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                            GALGAS_uint & ioArgument_ioSelectMethodCount,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_parseRewindInstruction * object = (const cPtr_parseRewindInstruction *) inObject ;
  macroValidSharedObject (object, const cPtr_parseRewindInstruction) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_listOfSemanticInstructionListForGeneration var_listOfSemanticInstructionListForGeneration = GALGAS_listOfSemanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (669)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_uint var_referenceSelectMethodCount = ioArgument_ioSelectMethodCount ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_listOfSyntaxInstructionList enumerator_26423 (object->mAttribute_mParseRewindBranchList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_26423.hasCurrentObject ()) {
    //-------- @assignmentInstructionForGeneration
    ioArgument_ioSelectMethodCount = var_referenceSelectMethodCount ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_semanticInstructionListForGeneration var_instructionList = GALGAS_semanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (673)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_syntaxInstructionList enumerator_26589 (enumerator_26423.current_mSyntaxInstructionList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_26589.hasCurrentObject ()) {
      //-------- @methodCallInstructionForGeneration
      callCategoryMethod_analyzeSyntaxInstruction ((const cPtr_syntaxInstructionAST *) enumerator_26589.current_mInstruction (HERE).ptr (), constinArgument_inAnalysisContext, constinArgument_inTerminalMap, constinArgument_inLexiqueName, constinArgument_inNonterminalMap, constinArgument_inComponentName, constinArgument_inIndexNameSet, var_instructionList, ioArgument_ioVariableMap, ioArgument_ioSelectMethodCount, inCompiler COMMA_SOURCE_FILE_AT_LINE (675)) ;
      //-------- END @methodCallInstructionForGeneration
      enumerator_26589.gotoNextObject () ;
    }
    //-------- @plusEqualnstructionForGeneration
    var_listOfSemanticInstructionListForGeneration.addAssign_operation (var_instructionList, enumerator_26423.current_mEndOf_5F_instructions (HERE) COMMA_SOURCE_FILE_AT_LINE (687)) ;
    enumerator_26423.gotoNextObject () ;
  }
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_listOfSemanticInstructionListForGeneration var_tempListOfBranches = var_listOfSemanticInstructionListForGeneration ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticInstructionListForGeneration var_instructionList ;
  { //-------- @modifierCallInstructionForGeneration
  GALGAS_location joker_27260_0 ; // Joker input parameter
  var_tempListOfBranches.modifier_popFirst (var_instructionList, joker_27260_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (692)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_semanticInstructionListForGeneration var_referenceSignature = function_syntaxSignatureOfInstructionList (GALGAS_string ("parse"), var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (693)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_ok = GALGAS_bool (true) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_listOfSemanticInstructionListForGeneration enumerator_27450 (var_tempListOfBranches, kEnumeration_up) ;
  //--- complex foreach instruction
  bool bool_0 = var_ok.isValidAndTrue () ;
  if (enumerator_27450.hasCurrentObject () && bool_0) {
    while (enumerator_27450.hasCurrentObject () && bool_0) {
      //-------- @assignmentInstructionForGeneration
      var_ok = function_compareSyntaxSignature (var_referenceSignature, function_syntaxSignatureOfInstructionList (GALGAS_string ("parse"), enumerator_27450.current_mInstructionList (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (698)), enumerator_27450.current_mEndOfInstructionList (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (696)) ;
      enumerator_27450.gotoNextObject () ;
      if (enumerator_27450.hasCurrentObject ()) {
        bool_0 = var_ok.isValidAndTrue () ;
      }
    }
  }
  //-------- @plusEqualnstructionForGeneration
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_parseRewindInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_listOfSemanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (703)) COMMA_SOURCE_FILE_AT_LINE (703)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_parseRewindInstruction_analyzeSyntaxInstruction (void) {
  enterCategoryMethod_analyzeSyntaxInstruction (kTypeDescriptor_GALGAS_parseRewindInstruction.mSlotID,
                                                categoryMethod_parseRewindInstruction_analyzeSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_parseRewindInstruction_analyzeSyntaxInstruction (defineCategoryMethod_parseRewindInstruction_analyzeSyntaxInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@parseRewindInstructionForGeneration generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_parseRewindInstructionForGeneration_generateInstruction (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                    const GALGAS_bool constinArgument_inGenerateCheckValid,
                                                                                    GALGAS_uint & ioArgument_ioTemporaryVariableIndex,
                                                                                    GALGAS_stringset & ioArgument_ioUnusedVariableCppNameSet,
                                                                                    GALGAS_string & ioArgument_ioGeneratedCode,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_parseRewindInstructionForGeneration * object = (const cPtr_parseRewindInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_parseRewindInstructionForGeneration) ;
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("//-------- @parseRewindInstructionForGeneration\n") COMMA_SOURCE_FILE_AT_LINE (717)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioUnusedVariableCppNameSet.modifier_removeKey (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (718)) COMMA_SOURCE_FILE_AT_LINE (718)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_parsingContextVar = GALGAS_string ("parsingContext_").operator_concat (ioArgument_ioTemporaryVariableIndex.reader_string (SOURCE_FILE_AT_LINE (719)) COMMA_SOURCE_FILE_AT_LINE (719)) ;
  //-------- @incrementInstructionForGeneration
  ioArgument_ioTemporaryVariableIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (719)) ;
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("const C_parsingContext ").operator_concat (var_parsingContextVar COMMA_SOURCE_FILE_AT_LINE (720)).operator_concat (GALGAS_string (" = ") COMMA_SOURCE_FILE_AT_LINE (720)).operator_concat (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (720)) COMMA_SOURCE_FILE_AT_LINE (720)).operator_concat (GALGAS_string ("->parsingContext () ;\n") COMMA_SOURCE_FILE_AT_LINE (720)) COMMA_SOURCE_FILE_AT_LINE (720)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_listOfSemanticInstructionListForGeneration enumerator_28576 (object->mAttribute_mListOfSemanticInstructionListForGeneration, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_28576.hasCurrentObject ()) {
    { //-------- @routineCallInstructionForGeneration
    routine_generateInstructionList (constinArgument_inGenerateCheckValid, enumerator_28576.current_mInstructionList (HERE), ioArgument_ioTemporaryVariableIndex, ioArgument_ioUnusedVariableCppNameSet, ioArgument_ioGeneratedCode, inCompiler COMMA_SOURCE_FILE_AT_LINE (723)) ;
    } //-------- @routineCallInstructionForGeneration
    if (enumerator_28576.hasNextObject ()) {
      //-------- @concatInstructionForGeneration
      ioArgument_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (731)).operator_concat (GALGAS_string ("->setParsingContext (") COMMA_SOURCE_FILE_AT_LINE (731)).operator_concat (var_parsingContextVar COMMA_SOURCE_FILE_AT_LINE (731)).operator_concat (GALGAS_string (") ; // rewind\n") COMMA_SOURCE_FILE_AT_LINE (731)) COMMA_SOURCE_FILE_AT_LINE (731)) ;
    }
    enumerator_28576.gotoNextObject () ;
  }
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("//-------- END OF @parseRewindInstructionForGeneration\n") COMMA_SOURCE_FILE_AT_LINE (733)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_parseRewindInstructionForGeneration_generateInstruction (void) {
  enterCategoryMethod_generateInstruction (kTypeDescriptor_GALGAS_parseRewindInstructionForGeneration.mSlotID,
                                           categoryMethod_parseRewindInstructionForGeneration_generateInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_parseRewindInstructionForGeneration_generateInstruction (defineCategoryMethod_parseRewindInstructionForGeneration_generateInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@parseLoopInstruction analyzeSyntaxInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_parseLoopInstruction_analyzeSyntaxInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                                          const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                          const GALGAS_terminalMap constinArgument_inTerminalMap,
                                                                          const GALGAS_string constinArgument_inLexiqueName,
                                                                          const GALGAS_nonterminalMap constinArgument_inNonterminalMap,
                                                                          const GALGAS_string constinArgument_inComponentName,
                                                                          const GALGAS_stringset constinArgument_inIndexNameSet,
                                                                          GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                          GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                          GALGAS_uint & ioArgument_ioSelectMethodCount,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_parseLoopInstruction * object = (const cPtr_parseLoopInstruction *) inObject ;
  macroValidSharedObject (object, const cPtr_parseLoopInstruction) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_variant_5F_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mVariantExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_variant_5F_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (751)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_variant_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (756)).objectCompare (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mUIntType)).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mEndOfVariantExpression, GALGAS_string ("the variant expression type is '@").operator_concat (var_variant_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (758)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (758)) COMMA_SOURCE_FILE_AT_LINE (758)).operator_concat (GALGAS_string ("', but it should be '@") COMMA_SOURCE_FILE_AT_LINE (759)).operator_concat (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mUIntType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (759)) COMMA_SOURCE_FILE_AT_LINE (759)).operator_concat (GALGAS_string ("' type") COMMA_SOURCE_FILE_AT_LINE (759)) COMMA_SOURCE_FILE_AT_LINE (757)) ;
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_while_5F_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mWhileExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_while_5F_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (764)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_while_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (769)).objectCompare (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType)).boolEnum () ;
  if (kBoolTrue == test_1) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mEndOfWhileExpression, GALGAS_string ("the variant expression type is '@").operator_concat (var_variant_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (771)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (771)) COMMA_SOURCE_FILE_AT_LINE (771)).operator_concat (GALGAS_string ("', but it should be '@") COMMA_SOURCE_FILE_AT_LINE (772)).operator_concat (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (772)) COMMA_SOURCE_FILE_AT_LINE (772)).operator_concat (GALGAS_string ("' type") COMMA_SOURCE_FILE_AT_LINE (772)) COMMA_SOURCE_FILE_AT_LINE (770)) ;
  }
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (777)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticInstructionListForGeneration var_instructionList ;
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeSyntaxInstructionList (constinArgument_inAnalysisContext, constinArgument_inTerminalMap, constinArgument_inLexiqueName, constinArgument_inNonterminalMap, constinArgument_inComponentName, object->mAttribute_mDoInstructionList, object->mAttribute_mEndOfInstructionList, constinArgument_inIndexNameSet, ioArgument_ioVariableMap, ioArgument_ioSelectMethodCount, var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (780)) ;
  } //-------- @routineCallInstructionForGeneration
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOfInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (794)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @plusEqualnstructionForGeneration
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_parseLoopInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_variant_5F_expression, var_while_5F_expression, var_instructionList COMMA_SOURCE_FILE_AT_LINE (796)) COMMA_SOURCE_FILE_AT_LINE (796)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_parseLoopInstruction_analyzeSyntaxInstruction (void) {
  enterCategoryMethod_analyzeSyntaxInstruction (kTypeDescriptor_GALGAS_parseLoopInstruction.mSlotID,
                                                categoryMethod_parseLoopInstruction_analyzeSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_parseLoopInstruction_analyzeSyntaxInstruction (defineCategoryMethod_parseLoopInstruction_analyzeSyntaxInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@parseLoopInstructionForGeneration generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_parseLoopInstructionForGeneration_generateInstruction (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                  const GALGAS_bool constinArgument_inGenerateCheckValid,
                                                                                  GALGAS_uint & ioArgument_ioTemporaryVariableIndex,
                                                                                  GALGAS_stringset & ioArgument_ioUnusedVariableCppNameSet,
                                                                                  GALGAS_string & ioArgument_ioGeneratedCode,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_parseLoopInstructionForGeneration * object = (const cPtr_parseLoopInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_parseLoopInstructionForGeneration) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioUnusedVariableCppNameSet.modifier_removeKey (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (812)) COMMA_SOURCE_FILE_AT_LINE (812)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("//-------- @parseLoopInstructionForGeneration\n") COMMA_SOURCE_FILE_AT_LINE (813)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_variantVarCppName ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_generateExpression ((const cPtr_semanticExpressionForGeneration *) object->mAttribute_mVariantExpression.ptr (), ioArgument_ioGeneratedCode, ioArgument_ioTemporaryVariableIndex, ioArgument_ioUnusedVariableCppNameSet, var_variantVarCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (816)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("if (").operator_concat (var_variantVarCppName COMMA_SOURCE_FILE_AT_LINE (818)).operator_concat (GALGAS_string (".isValid ()) {\n") COMMA_SOURCE_FILE_AT_LINE (818)) COMMA_SOURCE_FILE_AT_LINE (818)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioGeneratedCode.modifier_incIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (819)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_variantVar = GALGAS_string ("variant_").operator_concat (ioArgument_ioTemporaryVariableIndex.reader_string (SOURCE_FILE_AT_LINE (820)) COMMA_SOURCE_FILE_AT_LINE (820)) ;
  //-------- @incrementInstructionForGeneration
  ioArgument_ioTemporaryVariableIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (820)) ;
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("PMUInt32 ").operator_concat (var_variantVar COMMA_SOURCE_FILE_AT_LINE (821)).operator_concat (GALGAS_string (" = ") COMMA_SOURCE_FILE_AT_LINE (821)).operator_concat (var_variantVarCppName COMMA_SOURCE_FILE_AT_LINE (821)).operator_concat (GALGAS_string (".uintValue () ;\n") COMMA_SOURCE_FILE_AT_LINE (821)) COMMA_SOURCE_FILE_AT_LINE (821)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_loopVar = GALGAS_string ("loop_").operator_concat (ioArgument_ioTemporaryVariableIndex.reader_string (SOURCE_FILE_AT_LINE (823)) COMMA_SOURCE_FILE_AT_LINE (823)) ;
  //-------- @incrementInstructionForGeneration
  ioArgument_ioTemporaryVariableIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (823)) ;
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("bool ").operator_concat (var_loopVar COMMA_SOURCE_FILE_AT_LINE (824)).operator_concat (GALGAS_string (" = true ;\n") COMMA_SOURCE_FILE_AT_LINE (824)) COMMA_SOURCE_FILE_AT_LINE (824)) ;
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("while (").operator_concat (var_loopVar COMMA_SOURCE_FILE_AT_LINE (825)).operator_concat (GALGAS_string (") {\n") COMMA_SOURCE_FILE_AT_LINE (825)) COMMA_SOURCE_FILE_AT_LINE (825)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioGeneratedCode.modifier_incIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (826)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (var_loopVar.operator_concat (GALGAS_string (" = false ;\n") COMMA_SOURCE_FILE_AT_LINE (827)) COMMA_SOURCE_FILE_AT_LINE (827)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_whileVarCppName ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_generateExpression ((const cPtr_semanticExpressionForGeneration *) object->mAttribute_mWhileExpression.ptr (), ioArgument_ioGeneratedCode, ioArgument_ioTemporaryVariableIndex, ioArgument_ioUnusedVariableCppNameSet, var_whileVarCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (829)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("if (").operator_concat (var_whileVarCppName COMMA_SOURCE_FILE_AT_LINE (830)).operator_concat (GALGAS_string (".isValidAndTrue ()) {\n") COMMA_SOURCE_FILE_AT_LINE (830)) COMMA_SOURCE_FILE_AT_LINE (830)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioGeneratedCode.modifier_incIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (831)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (var_loopVar.operator_concat (GALGAS_string (" = true ;\n") COMMA_SOURCE_FILE_AT_LINE (832)) COMMA_SOURCE_FILE_AT_LINE (832)) ;
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (var_variantVar.operator_concat (GALGAS_string (" -- ; // Decrement variant\n") COMMA_SOURCE_FILE_AT_LINE (833)) COMMA_SOURCE_FILE_AT_LINE (833)) ;
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("const C_parsingContext parsingContext = ").operator_concat (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (834)) COMMA_SOURCE_FILE_AT_LINE (834)).operator_concat (GALGAS_string ("->parsingContext () ;\n") COMMA_SOURCE_FILE_AT_LINE (834)) COMMA_SOURCE_FILE_AT_LINE (834)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_generateInstructionList (constinArgument_inGenerateCheckValid, object->mAttribute_mInstructionList, ioArgument_ioTemporaryVariableIndex, ioArgument_ioUnusedVariableCppNameSet, ioArgument_ioGeneratedCode, inCompiler COMMA_SOURCE_FILE_AT_LINE (835)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (842)).operator_concat (GALGAS_string ("->setParsingContext (parsingContext) ;\n") COMMA_SOURCE_FILE_AT_LINE (842)) COMMA_SOURCE_FILE_AT_LINE (842)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioGeneratedCode.modifier_decIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (843)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("}\n") COMMA_SOURCE_FILE_AT_LINE (844)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioGeneratedCode.modifier_decIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (845)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("}\n") COMMA_SOURCE_FILE_AT_LINE (846)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioGeneratedCode.modifier_decIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (847)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("}\n") COMMA_SOURCE_FILE_AT_LINE (848)) ;
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("//--- 'parse'\n") COMMA_SOURCE_FILE_AT_LINE (850)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_generateInstructionList (constinArgument_inGenerateCheckValid, function_syntaxSignatureOfInstructionList (GALGAS_string ("parse"), object->mAttribute_mInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (853)), ioArgument_ioTemporaryVariableIndex, ioArgument_ioUnusedVariableCppNameSet, ioArgument_ioGeneratedCode, inCompiler COMMA_SOURCE_FILE_AT_LINE (851)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (858)).operator_concat (GALGAS_string ("->resetTemplateString () ;\n") COMMA_SOURCE_FILE_AT_LINE (858)) COMMA_SOURCE_FILE_AT_LINE (858)) ;
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("//-------- END OF @parseLoopInstructionForGeneration\n") COMMA_SOURCE_FILE_AT_LINE (859)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_parseLoopInstructionForGeneration_generateInstruction (void) {
  enterCategoryMethod_generateInstruction (kTypeDescriptor_GALGAS_parseLoopInstructionForGeneration.mSlotID,
                                           categoryMethod_parseLoopInstructionForGeneration_generateInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_parseLoopInstructionForGeneration_generateInstruction (defineCategoryMethod_parseLoopInstructionForGeneration_generateInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@parseWhenInstruction analyzeSyntaxInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_parseWhenInstruction_analyzeSyntaxInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                                          const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                          const GALGAS_terminalMap constinArgument_inTerminalMap,
                                                                          const GALGAS_string constinArgument_inLexiqueName,
                                                                          const GALGAS_nonterminalMap constinArgument_inNonterminalMap,
                                                                          const GALGAS_string constinArgument_inComponentName,
                                                                          const GALGAS_stringset constinArgument_inIndexNameSet,
                                                                          GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                          GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                          GALGAS_uint & ioArgument_ioSelectMethodCount,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_parseWhenInstruction * object = (const cPtr_parseWhenInstruction *) inObject ;
  macroValidSharedObject (object, const cPtr_parseWhenInstruction) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_when_5F_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mWhenExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_when_5F_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (877)) ;
  //-------- END @methodCallInstructionForGeneration
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (883)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_uint var_localSelectMethodCount = ioArgument_ioSelectMethodCount ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticInstructionListForGeneration var_when_5F_instructionListForGeneration ;
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeSyntaxInstructionList (constinArgument_inAnalysisContext, constinArgument_inTerminalMap, constinArgument_inLexiqueName, constinArgument_inNonterminalMap, constinArgument_inComponentName, object->mAttribute_mWhenInstructionList, object->mAttribute_mEndOfWhenInstructionList, constinArgument_inIndexNameSet, ioArgument_ioVariableMap, var_localSelectMethodCount, var_when_5F_instructionListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (887)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticInstructionListForGeneration var_else_5F_instructionListForGeneration ;
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeSyntaxInstructionList (constinArgument_inAnalysisContext, constinArgument_inTerminalMap, constinArgument_inLexiqueName, constinArgument_inNonterminalMap, constinArgument_inComponentName, object->mAttribute_mElseInstructionList, object->mAttribute_mEndOfElseInstructionList, constinArgument_inIndexNameSet, ioArgument_ioVariableMap, ioArgument_ioSelectMethodCount, var_else_5F_instructionListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (902)) ;
  } //-------- @routineCallInstructionForGeneration
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOfElseInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (916)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_ok = function_compareSyntaxSignature (function_syntaxSignatureOfInstructionList (GALGAS_string ("parse"), var_when_5F_instructionListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (919)), function_syntaxSignatureOfInstructionList (GALGAS_string ("parse"), var_else_5F_instructionListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (920)), object->mAttribute_mEndOfElseInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (918)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = var_ok.boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @plusEqualnstructionForGeneration
    ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_parseWhenInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_when_5F_expression, var_when_5F_instructionListForGeneration, var_else_5F_instructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (925)) COMMA_SOURCE_FILE_AT_LINE (925)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_parseWhenInstruction_analyzeSyntaxInstruction (void) {
  enterCategoryMethod_analyzeSyntaxInstruction (kTypeDescriptor_GALGAS_parseWhenInstruction.mSlotID,
                                                categoryMethod_parseWhenInstruction_analyzeSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_parseWhenInstruction_analyzeSyntaxInstruction (defineCategoryMethod_parseWhenInstruction_analyzeSyntaxInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@parseWhenInstructionForGeneration generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_parseWhenInstructionForGeneration_generateInstruction (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                  const GALGAS_bool constinArgument_inGenerateCheckValid,
                                                                                  GALGAS_uint & ioArgument_ioTemporaryVariableIndex,
                                                                                  GALGAS_stringset & ioArgument_ioUnusedVariableCppNameSet,
                                                                                  GALGAS_string & ioArgument_ioGeneratedCode,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_parseWhenInstructionForGeneration * object = (const cPtr_parseWhenInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_parseWhenInstructionForGeneration) ;
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("//--------- @parseWhenInstructionForGeneration\n") COMMA_SOURCE_FILE_AT_LINE (942)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_sourceVar ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_generateExpression ((const cPtr_semanticExpressionForGeneration *) object->mAttribute_mWhenExpression.ptr (), ioArgument_ioGeneratedCode, ioArgument_ioTemporaryVariableIndex, ioArgument_ioUnusedVariableCppNameSet, var_sourceVar, inCompiler COMMA_SOURCE_FILE_AT_LINE (944)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("if (").operator_concat (var_sourceVar COMMA_SOURCE_FILE_AT_LINE (945)).operator_concat (GALGAS_string (".isValidAndTrue ()) {\n") COMMA_SOURCE_FILE_AT_LINE (945)) COMMA_SOURCE_FILE_AT_LINE (945)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_generateInstructionList (constinArgument_inGenerateCheckValid, object->mAttribute_mInstructionList, ioArgument_ioTemporaryVariableIndex, ioArgument_ioUnusedVariableCppNameSet, ioArgument_ioGeneratedCode, inCompiler COMMA_SOURCE_FILE_AT_LINE (946)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("}else{\n") COMMA_SOURCE_FILE_AT_LINE (953)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_generateInstructionList (constinArgument_inGenerateCheckValid, object->mAttribute_mElseInstructionList, ioArgument_ioTemporaryVariableIndex, ioArgument_ioUnusedVariableCppNameSet, ioArgument_ioGeneratedCode, inCompiler COMMA_SOURCE_FILE_AT_LINE (954)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @concatInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("}\n") COMMA_SOURCE_FILE_AT_LINE (961)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_parseWhenInstructionForGeneration_generateInstruction (void) {
  enterCategoryMethod_generateInstruction (kTypeDescriptor_GALGAS_parseWhenInstructionForGeneration.mSlotID,
                                           categoryMethod_parseWhenInstructionForGeneration_generateInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_parseWhenInstructionForGeneration_generateInstruction (defineCategoryMethod_parseWhenInstructionForGeneration_generateInstruction, NULL) ;

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap_2E_element::GALGAS_nonterminalLabelMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mSignatureForGeneration (),
mAttribute_mSignature (),
mAttribute_mEndOfArgumentLocation () {
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap_2E_element::~ GALGAS_nonterminalLabelMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap_2E_element::GALGAS_nonterminalLabelMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                              const GALGAS_formalParameterListForGeneration & inOperand1,
                                                                              const GALGAS_formalParameterSignature & inOperand2,
                                                                              const GALGAS_location & inOperand3) :
mAttribute_lkey (inOperand0),
mAttribute_mSignatureForGeneration (inOperand1),
mAttribute_mSignature (inOperand2),
mAttribute_mEndOfArgumentLocation (inOperand3) {
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap_2E_element GALGAS_nonterminalLabelMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                              const GALGAS_formalParameterListForGeneration & inOperand1,
                                                                                              const GALGAS_formalParameterSignature & inOperand2,
                                                                                              const GALGAS_location & inOperand3 
                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_nonterminalLabelMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_nonterminalLabelMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_nonterminalLabelMap_2E_element::objectCompare (const GALGAS_nonterminalLabelMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSignatureForGeneration.objectCompare (inOperand.mAttribute_mSignatureForGeneration) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSignature.objectCompare (inOperand.mAttribute_mSignature) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mEndOfArgumentLocation.objectCompare (inOperand.mAttribute_mEndOfArgumentLocation) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_nonterminalLabelMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mSignatureForGeneration.isValid () && mAttribute_mSignature.isValid () && mAttribute_mEndOfArgumentLocation.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_nonterminalLabelMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mSignatureForGeneration.drop () ;
  mAttribute_mSignature.drop () ;
  mAttribute_mEndOfArgumentLocation.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_nonterminalLabelMap_2E_element::description (C_String & ioString,
                                                         const PMSInt32 inIndentation) const {
  ioString << "<struct @nonterminalLabelMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSignatureForGeneration.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSignature.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mEndOfArgumentLocation.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_nonterminalLabelMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterListForGeneration GALGAS_nonterminalLabelMap_2E_element::reader_mSignatureForGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSignatureForGeneration ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterSignature GALGAS_nonterminalLabelMap_2E_element::reader_mSignature (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSignature ;
}

//---------------------------------------------------------------------------*

GALGAS_location GALGAS_nonterminalLabelMap_2E_element::reader_mEndOfArgumentLocation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEndOfArgumentLocation ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                     @nonterminalLabelMap.element type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_nonterminalLabelMap_2E_element ("nonterminalLabelMap.element",
                                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_nonterminalLabelMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_nonterminalLabelMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_nonterminalLabelMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_nonterminalLabelMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap_2E_element GALGAS_nonterminalLabelMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler,
                                                                                            const GALGAS_location & inErrorLocation
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_nonterminalLabelMap_2E_element result ;
  const GALGAS_nonterminalLabelMap_2E_element * p = (const GALGAS_nonterminalLabelMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_nonterminalLabelMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "nonterminalLabelMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalMap_2E_element::GALGAS_nonterminalMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mLabelMap () {
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalMap_2E_element::~ GALGAS_nonterminalMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalMap_2E_element::GALGAS_nonterminalMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                    const GALGAS_nonterminalLabelMap & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mLabelMap (inOperand1) {
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalMap_2E_element GALGAS_nonterminalMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                    const GALGAS_nonterminalLabelMap & inOperand1 
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_nonterminalMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_nonterminalMap_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_nonterminalMap_2E_element::objectCompare (const GALGAS_nonterminalMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLabelMap.objectCompare (inOperand.mAttribute_mLabelMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_nonterminalMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mLabelMap.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_nonterminalMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mLabelMap.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_nonterminalMap_2E_element::description (C_String & ioString,
                                                    const PMSInt32 inIndentation) const {
  ioString << "<struct @nonterminalMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLabelMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_nonterminalMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap GALGAS_nonterminalMap_2E_element::reader_mLabelMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLabelMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @nonterminalMap.element type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_nonterminalMap_2E_element ("nonterminalMap.element",
                                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_nonterminalMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_nonterminalMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_nonterminalMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_nonterminalMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalMap_2E_element GALGAS_nonterminalMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler,
                                                                                  const GALGAS_location & inErrorLocation
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_nonterminalMap_2E_element result ;
  const GALGAS_nonterminalMap_2E_element * p = (const GALGAS_nonterminalMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_nonterminalMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "nonterminalMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList_2E_element::GALGAS_ruleLabelImplementationList_2E_element (void) :
mAttribute_mLabelName (),
mAttribute_mSignatureForGeneration (),
mAttribute_mSignature (),
mAttribute_mEndOfArgumentLocation (),
mAttribute_mInstructionListForGeneration () {
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList_2E_element::~ GALGAS_ruleLabelImplementationList_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList_2E_element::GALGAS_ruleLabelImplementationList_2E_element (const GALGAS_lstring & inOperand0,
                                                                                              const GALGAS_formalParameterListForGeneration & inOperand1,
                                                                                              const GALGAS_formalParameterSignature & inOperand2,
                                                                                              const GALGAS_location & inOperand3,
                                                                                              const GALGAS_semanticInstructionListForGeneration & inOperand4) :
mAttribute_mLabelName (inOperand0),
mAttribute_mSignatureForGeneration (inOperand1),
mAttribute_mSignature (inOperand2),
mAttribute_mEndOfArgumentLocation (inOperand3),
mAttribute_mInstructionListForGeneration (inOperand4) {
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList_2E_element GALGAS_ruleLabelImplementationList_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                              const GALGAS_formalParameterListForGeneration & inOperand1,
                                                                                                              const GALGAS_formalParameterSignature & inOperand2,
                                                                                                              const GALGAS_location & inOperand3,
                                                                                                              const GALGAS_semanticInstructionListForGeneration & inOperand4 
                                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_ruleLabelImplementationList_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result = GALGAS_ruleLabelImplementationList_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_ruleLabelImplementationList_2E_element::objectCompare (const GALGAS_ruleLabelImplementationList_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mLabelName.objectCompare (inOperand.mAttribute_mLabelName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSignatureForGeneration.objectCompare (inOperand.mAttribute_mSignatureForGeneration) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSignature.objectCompare (inOperand.mAttribute_mSignature) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mEndOfArgumentLocation.objectCompare (inOperand.mAttribute_mEndOfArgumentLocation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInstructionListForGeneration.objectCompare (inOperand.mAttribute_mInstructionListForGeneration) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_ruleLabelImplementationList_2E_element::isValid (void) const {
  return mAttribute_mLabelName.isValid () && mAttribute_mSignatureForGeneration.isValid () && mAttribute_mSignature.isValid () && mAttribute_mEndOfArgumentLocation.isValid () && mAttribute_mInstructionListForGeneration.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_ruleLabelImplementationList_2E_element::drop (void) {
  mAttribute_mLabelName.drop () ;
  mAttribute_mSignatureForGeneration.drop () ;
  mAttribute_mSignature.drop () ;
  mAttribute_mEndOfArgumentLocation.drop () ;
  mAttribute_mInstructionListForGeneration.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_ruleLabelImplementationList_2E_element::description (C_String & ioString,
                                                                 const PMSInt32 inIndentation) const {
  ioString << "<struct @ruleLabelImplementationList.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mLabelName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSignatureForGeneration.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSignature.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mEndOfArgumentLocation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInstructionListForGeneration.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_ruleLabelImplementationList_2E_element::reader_mLabelName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLabelName ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterListForGeneration GALGAS_ruleLabelImplementationList_2E_element::reader_mSignatureForGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSignatureForGeneration ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterSignature GALGAS_ruleLabelImplementationList_2E_element::reader_mSignature (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSignature ;
}

//---------------------------------------------------------------------------*

GALGAS_location GALGAS_ruleLabelImplementationList_2E_element::reader_mEndOfArgumentLocation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEndOfArgumentLocation ;
}

//---------------------------------------------------------------------------*

GALGAS_semanticInstructionListForGeneration GALGAS_ruleLabelImplementationList_2E_element::reader_mInstructionListForGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInstructionListForGeneration ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                 @ruleLabelImplementationList.element type                 *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_ruleLabelImplementationList_2E_element ("ruleLabelImplementationList.element",
                                                               NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_ruleLabelImplementationList_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_ruleLabelImplementationList_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_ruleLabelImplementationList_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_ruleLabelImplementationList_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList_2E_element GALGAS_ruleLabelImplementationList_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                            C_Compiler * inCompiler,
                                                                                                            const GALGAS_location & inErrorLocation
                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_ruleLabelImplementationList_2E_element result ;
  const GALGAS_ruleLabelImplementationList_2E_element * p = (const GALGAS_ruleLabelImplementationList_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_ruleLabelImplementationList_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "ruleLabelImplementationList.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList_2E_element::GALGAS_ruleDeclarationList_2E_element (void) :
mAttribute_mNonterminalName (),
mAttribute_mRuleIndex (),
mAttribute_mLabelImplementationList () {
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList_2E_element::~ GALGAS_ruleDeclarationList_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList_2E_element::GALGAS_ruleDeclarationList_2E_element (const GALGAS_string & inOperand0,
                                                                              const GALGAS_uint & inOperand1,
                                                                              const GALGAS_ruleLabelImplementationList & inOperand2) :
mAttribute_mNonterminalName (inOperand0),
mAttribute_mRuleIndex (inOperand1),
mAttribute_mLabelImplementationList (inOperand2) {
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList_2E_element GALGAS_ruleDeclarationList_2E_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                              const GALGAS_uint & inOperand1,
                                                                                              const GALGAS_ruleLabelImplementationList & inOperand2 
                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_ruleDeclarationList_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_ruleDeclarationList_2E_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_ruleDeclarationList_2E_element::objectCompare (const GALGAS_ruleDeclarationList_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mNonterminalName.objectCompare (inOperand.mAttribute_mNonterminalName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mRuleIndex.objectCompare (inOperand.mAttribute_mRuleIndex) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLabelImplementationList.objectCompare (inOperand.mAttribute_mLabelImplementationList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_ruleDeclarationList_2E_element::isValid (void) const {
  return mAttribute_mNonterminalName.isValid () && mAttribute_mRuleIndex.isValid () && mAttribute_mLabelImplementationList.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_ruleDeclarationList_2E_element::drop (void) {
  mAttribute_mNonterminalName.drop () ;
  mAttribute_mRuleIndex.drop () ;
  mAttribute_mLabelImplementationList.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_ruleDeclarationList_2E_element::description (C_String & ioString,
                                                         const PMSInt32 inIndentation) const {
  ioString << "<struct @ruleDeclarationList.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mNonterminalName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mRuleIndex.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLabelImplementationList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_ruleDeclarationList_2E_element::reader_mNonterminalName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mNonterminalName ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_ruleDeclarationList_2E_element::reader_mRuleIndex (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRuleIndex ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList GALGAS_ruleDeclarationList_2E_element::reader_mLabelImplementationList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLabelImplementationList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                     @ruleDeclarationList.element type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_ruleDeclarationList_2E_element ("ruleDeclarationList.element",
                                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_ruleDeclarationList_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_ruleDeclarationList_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_ruleDeclarationList_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_ruleDeclarationList_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList_2E_element GALGAS_ruleDeclarationList_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler,
                                                                                            const GALGAS_location & inErrorLocation
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_ruleDeclarationList_2E_element result ;
  const GALGAS_ruleDeclarationList_2E_element * p = (const GALGAS_ruleDeclarationList_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_ruleDeclarationList_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "ruleDeclarationList.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


