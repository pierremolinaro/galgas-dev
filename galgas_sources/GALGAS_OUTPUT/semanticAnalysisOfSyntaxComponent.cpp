//---------------------------------------------------------------------------*
//                                                                           *
//               File 'semanticAnalysisOfSyntaxComponent.cpp'                *
//             Generated by version version GALGAS_BETA_VERSION              *
//                    november 26th, 2010, at 11h48'38"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "semanticAnalysisOfSyntaxComponent.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_CLI_Options.h"

//---------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "templateGrammar.h"
#include "galgas_cli_options.h"
#include "grammarLL1grammar.h"
#include "syntaxSLRgrammar.h"
#include "semanticsSLRgrammar.h"
#include "lexiqueLL1grammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticAnalysisOfSyntaxComponent.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//            Routine 'enterNonterminalNonTerminalInMapAndCheck'             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterNonterminalNonTerminalInMapAndCheck (const GALGAS_lstring constinArgument0,
                                                       const GALGAS_nonterminalLabelMap constinArgument1,
                                                       const GALGAS_bool constinArgument2,
                                                       GALGAS_nonterminalMap & ioArgument3,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'buildNonterminalDeclarationsMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildNonterminalDeclarationsMap (const GALGAS_nonterminalDeclarationListAST constinArgument0,
                                              const GALGAS_semanticContext constinArgument1,
                                              GALGAS_nonterminalMap & outArgument2,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

cMapElement_nonterminalLabelMap::cMapElement_nonterminalLabelMap (const GALGAS_lstring & inKey,
                                                                  const GALGAS_formalParameterListForGeneration & in_mSignatureForGeneration,
                                                                  const GALGAS_formalParameterSignature & in_mSignature,
                                                                  const GALGAS_location & in_mEndOfArgumentLocation
                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mSignatureForGeneration (in_mSignatureForGeneration),
mAttribute_mSignature (in_mSignature),
mAttribute_mEndOfArgumentLocation (in_mEndOfArgumentLocation) {
}

//---------------------------------------------------------------------------*

bool cMapElement_nonterminalLabelMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mSignatureForGeneration.isValid () && mAttribute_mSignature.isValid () && mAttribute_mEndOfArgumentLocation.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_nonterminalLabelMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_nonterminalLabelMap (mAttribute_lkey, mAttribute_mSignatureForGeneration, mAttribute_mSignature, mAttribute_mEndOfArgumentLocation COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_nonterminalLabelMap::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
// mAttribute_mSignatureForGeneration.description (ioString, inIndentation) ;
// mAttribute_mSignature.description (ioString, inIndentation) ;
// mAttribute_mEndOfArgumentLocation.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

enumComparisonResult cMapElement_nonterminalLabelMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_nonterminalLabelMap * operand = (cMapElement_nonterminalLabelMap *) inOperand ;
  enumComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mSignatureForGeneration.objectCompare (operand->mAttribute_mSignatureForGeneration) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSignature.objectCompare (operand->mAttribute_mSignature) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mEndOfArgumentLocation.objectCompare (operand->mAttribute_mEndOfArgumentLocation) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap::GALGAS_nonterminalLabelMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap::GALGAS_nonterminalLabelMap (const GALGAS_nonterminalLabelMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap & GALGAS_nonterminalLabelMap::operator = (const GALGAS_nonterminalLabelMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap GALGAS_nonterminalLabelMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_nonterminalLabelMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap GALGAS_nonterminalLabelMap::constructor_mapWithMapToOverride (const GALGAS_nonterminalLabelMap & inMapToOverride
                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_nonterminalLabelMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap GALGAS_nonterminalLabelMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_nonterminalLabelMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_nonterminalLabelMap::modifier_insertKey (GALGAS_lstring inKey,
                                                     GALGAS_formalParameterListForGeneration inArgument0,
                                                     GALGAS_formalParameterSignature inArgument1,
                                                     GALGAS_location inArgument2,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cMapElement_nonterminalLabelMap * p = NULL ;
  macroMyNew (p, cMapElement_nonterminalLabelMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' nonterminal label has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_nonterminalLabelMap_searchKey = "the '%K' nonterminal label is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_nonterminalLabelMap::method_searchKey (GALGAS_lstring inKey,
                                                   GALGAS_formalParameterListForGeneration & outArgument0,
                                                   GALGAS_formalParameterSignature & outArgument1,
                                                   GALGAS_location & outArgument2,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const {
  const cMapElement_nonterminalLabelMap * p = (const cMapElement_nonterminalLabelMap *) performSearch (inKey,
                                                                                                         inCompiler,
                                                                                                         kSearchErrorMessage_nonterminalLabelMap_searchKey
                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_nonterminalLabelMap) ;
    outArgument0 = p->mAttribute_mSignatureForGeneration ;
    outArgument1 = p->mAttribute_mSignature ;
    outArgument2 = p->mAttribute_mEndOfArgumentLocation ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterListForGeneration GALGAS_nonterminalLabelMap::reader_mSignatureForGenerationForKey (const GALGAS_string & inKey,
                                                                                                          C_Compiler * inCompiler
                                                                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nonterminalLabelMap * p = (const cMapElement_nonterminalLabelMap *) attributes ;
  GALGAS_formalParameterListForGeneration result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_nonterminalLabelMap) ;
    result = p->mAttribute_mSignatureForGeneration ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterSignature GALGAS_nonterminalLabelMap::reader_mSignatureForKey (const GALGAS_string & inKey,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nonterminalLabelMap * p = (const cMapElement_nonterminalLabelMap *) attributes ;
  GALGAS_formalParameterSignature result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_nonterminalLabelMap) ;
    result = p->mAttribute_mSignature ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_location GALGAS_nonterminalLabelMap::reader_mEndOfArgumentLocationForKey (const GALGAS_string & inKey,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nonterminalLabelMap * p = (const cMapElement_nonterminalLabelMap *) attributes ;
  GALGAS_location result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_nonterminalLabelMap) ;
    result = p->mAttribute_mEndOfArgumentLocation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_nonterminalLabelMap::modifier_setMSignatureForGenerationForKey (GALGAS_formalParameterListForGeneration inAttributeValue,
                                                                            GALGAS_string inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nonterminalLabelMap * p = (cMapElement_nonterminalLabelMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nonterminalLabelMap) ;
    p->mAttribute_mSignatureForGeneration = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_nonterminalLabelMap::modifier_setMSignatureForKey (GALGAS_formalParameterSignature inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nonterminalLabelMap * p = (cMapElement_nonterminalLabelMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nonterminalLabelMap) ;
    p->mAttribute_mSignature = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_nonterminalLabelMap::modifier_setMEndOfArgumentLocationForKey (GALGAS_location inAttributeValue,
                                                                           GALGAS_string inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nonterminalLabelMap * p = (cMapElement_nonterminalLabelMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nonterminalLabelMap) ;
    p->mAttribute_mEndOfArgumentLocation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_nonterminalLabelMap * GALGAS_nonterminalLabelMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                        const GALGAS_string & inKey
                                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nonterminalLabelMap * result = (cMapElement_nonterminalLabelMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_nonterminalLabelMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_nonterminalLabelMap * GALGAS_nonterminalLabelMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                           const GALGAS_lstring & inKey
                                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_nonterminalLabelMap_searchKey COMMA_THERE) ;
  cMapElement_nonterminalLabelMap * result = (cMapElement_nonterminalLabelMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_nonterminalLabelMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_nonterminalLabelMap::cEnumerator_nonterminalLabelMap (const GALGAS_nonterminalLabelMap & inEnumeratedObject,
                                                                  const bool inAscending) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inAscending) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_nonterminalLabelMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterListForGeneration cEnumerator_nonterminalLabelMap::current_mSignatureForGeneration (LOCATION_ARGS) const {
  const cMapElement_nonterminalLabelMap * p = (const cMapElement_nonterminalLabelMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_nonterminalLabelMap) ;
  return p->mAttribute_mSignatureForGeneration ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterSignature cEnumerator_nonterminalLabelMap::current_mSignature (LOCATION_ARGS) const {
  const cMapElement_nonterminalLabelMap * p = (const cMapElement_nonterminalLabelMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_nonterminalLabelMap) ;
  return p->mAttribute_mSignature ;
}

//---------------------------------------------------------------------------*

GALGAS_location cEnumerator_nonterminalLabelMap::current_mEndOfArgumentLocation (LOCATION_ARGS) const {
  const cMapElement_nonterminalLabelMap * p = (const cMapElement_nonterminalLabelMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_nonterminalLabelMap) ;
  return p->mAttribute_mEndOfArgumentLocation ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @nonterminalLabelMap type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_nonterminalLabelMap ("nonterminalLabelMap",
                                            NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_nonterminalLabelMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_nonterminalLabelMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_nonterminalLabelMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_nonterminalLabelMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap GALGAS_nonterminalLabelMap::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler,
                                                                      const GALGAS_location & inErrorLocation
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_nonterminalLabelMap result ;
  const GALGAS_nonterminalLabelMap * p = (const GALGAS_nonterminalLabelMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_nonterminalLabelMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "nonterminalLabelMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_nonterminalMap::cMapElement_nonterminalMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_nonterminalLabelMap & in_mLabelMap,
                                                        const GALGAS_bool & in_mHasParseLabel
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mLabelMap (in_mLabelMap),
mAttribute_mHasParseLabel (in_mHasParseLabel) {
}

//---------------------------------------------------------------------------*

bool cMapElement_nonterminalMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mLabelMap.isValid () && mAttribute_mHasParseLabel.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_nonterminalMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_nonterminalMap (mAttribute_lkey, mAttribute_mLabelMap, mAttribute_mHasParseLabel COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_nonterminalMap::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
// mAttribute_mLabelMap.description (ioString, inIndentation) ;
// mAttribute_mHasParseLabel.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

enumComparisonResult cMapElement_nonterminalMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_nonterminalMap * operand = (cMapElement_nonterminalMap *) inOperand ;
  enumComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mLabelMap.objectCompare (operand->mAttribute_mLabelMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mHasParseLabel.objectCompare (operand->mAttribute_mHasParseLabel) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalMap::GALGAS_nonterminalMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalMap::GALGAS_nonterminalMap (const GALGAS_nonterminalMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalMap & GALGAS_nonterminalMap::operator = (const GALGAS_nonterminalMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalMap GALGAS_nonterminalMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_nonterminalMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalMap GALGAS_nonterminalMap::constructor_mapWithMapToOverride (const GALGAS_nonterminalMap & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_nonterminalMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalMap GALGAS_nonterminalMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_nonterminalMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_nonterminalMap::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_nonterminalLabelMap inArgument0,
                                                GALGAS_bool inArgument1,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_nonterminalMap * p = NULL ;
  macroMyNew (p, cMapElement_nonterminalMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' nonterminal has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_nonterminalMap_searchKey = "the '%K' nonterminal is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_nonterminalMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_nonterminalLabelMap & outArgument0,
                                              GALGAS_bool & outArgument1,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_nonterminalMap * p = (const cMapElement_nonterminalMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_nonterminalMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_nonterminalMap) ;
    outArgument0 = p->mAttribute_mLabelMap ;
    outArgument1 = p->mAttribute_mHasParseLabel ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap GALGAS_nonterminalMap::reader_mLabelMapForKey (const GALGAS_string & inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nonterminalMap * p = (const cMapElement_nonterminalMap *) attributes ;
  GALGAS_nonterminalLabelMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_nonterminalMap) ;
    result = p->mAttribute_mLabelMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_nonterminalMap::reader_mHasParseLabelForKey (const GALGAS_string & inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nonterminalMap * p = (const cMapElement_nonterminalMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_nonterminalMap) ;
    result = p->mAttribute_mHasParseLabel ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_nonterminalMap::modifier_setMLabelMapForKey (GALGAS_nonterminalLabelMap inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nonterminalMap * p = (cMapElement_nonterminalMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nonterminalMap) ;
    p->mAttribute_mLabelMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_nonterminalMap::modifier_setMHasParseLabelForKey (GALGAS_bool inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nonterminalMap * p = (cMapElement_nonterminalMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nonterminalMap) ;
    p->mAttribute_mHasParseLabel = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_nonterminalMap * GALGAS_nonterminalMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                              const GALGAS_string & inKey
                                                                                              COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nonterminalMap * result = (cMapElement_nonterminalMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_nonterminalMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_nonterminalMap * GALGAS_nonterminalMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                 const GALGAS_lstring & inKey
                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_nonterminalMap_searchKey COMMA_THERE) ;
  cMapElement_nonterminalMap * result = (cMapElement_nonterminalMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_nonterminalMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_nonterminalMap::cEnumerator_nonterminalMap (const GALGAS_nonterminalMap & inEnumeratedObject,
                                                        const bool inAscending) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inAscending) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_nonterminalMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalLabelMap cEnumerator_nonterminalMap::current_mLabelMap (LOCATION_ARGS) const {
  const cMapElement_nonterminalMap * p = (const cMapElement_nonterminalMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_nonterminalMap) ;
  return p->mAttribute_mLabelMap ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cEnumerator_nonterminalMap::current_mHasParseLabel (LOCATION_ARGS) const {
  const cMapElement_nonterminalMap * p = (const cMapElement_nonterminalMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_nonterminalMap) ;
  return p->mAttribute_mHasParseLabel ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @nonterminalMap type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_nonterminalMap ("nonterminalMap",
                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_nonterminalMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_nonterminalMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_nonterminalMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_nonterminalMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalMap GALGAS_nonterminalMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler,
                                                            const GALGAS_location & inErrorLocation
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_nonterminalMap result ;
  const GALGAS_nonterminalMap * p = (const GALGAS_nonterminalMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_nonterminalMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "nonterminalMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Class for element of '@ruleLabelImplementationList' list          *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_ruleLabelImplementationList : public cCollectionElement {
//--- List attributes
  public : GALGAS_lstring mAttribute_mLabelName ;
  public : GALGAS_formalParameterListForGeneration mAttribute_mSignatureForGeneration ;
  public : GALGAS_formalParameterSignature mAttribute_mSignature ;
  public : GALGAS_location mAttribute_mEndOfArgumentLocation ;
  public : GALGAS_semanticInstructionListForGeneration mAttribute_mInstructionListForGeneration ;

//--- Constructor
  public : cCollectionElement_ruleLabelImplementationList (const GALGAS_lstring & in_mLabelName,
                                                           const GALGAS_formalParameterListForGeneration & in_mSignatureForGeneration,
                                                           const GALGAS_formalParameterSignature & in_mSignature,
                                                           const GALGAS_location & in_mEndOfArgumentLocation,
                                                           const GALGAS_semanticInstructionListForGeneration & in_mInstructionListForGeneration
                                                           COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_ruleLabelImplementationList::cCollectionElement_ruleLabelImplementationList (const GALGAS_lstring & in_mLabelName,
                                                                                                const GALGAS_formalParameterListForGeneration & in_mSignatureForGeneration,
                                                                                                const GALGAS_formalParameterSignature & in_mSignature,
                                                                                                const GALGAS_location & in_mEndOfArgumentLocation,
                                                                                                const GALGAS_semanticInstructionListForGeneration & in_mInstructionListForGeneration
                                                                                                COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mLabelName (in_mLabelName),
mAttribute_mSignatureForGeneration (in_mSignatureForGeneration),
mAttribute_mSignature (in_mSignature),
mAttribute_mEndOfArgumentLocation (in_mEndOfArgumentLocation),
mAttribute_mInstructionListForGeneration (in_mInstructionListForGeneration) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_ruleLabelImplementationList::isValid (void) const {
  return mAttribute_mLabelName.isValid () && mAttribute_mSignatureForGeneration.isValid () && mAttribute_mSignature.isValid () && mAttribute_mEndOfArgumentLocation.isValid () && mAttribute_mInstructionListForGeneration.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_ruleLabelImplementationList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_ruleLabelImplementationList (mAttribute_mLabelName, mAttribute_mSignatureForGeneration, mAttribute_mSignature, mAttribute_mEndOfArgumentLocation, mAttribute_mInstructionListForGeneration COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_ruleLabelImplementationList::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
// mAttribute_mLabelName.description (ioString, inIndentation) ;
// mAttribute_mSignatureForGeneration.description (ioString, inIndentation) ;
// mAttribute_mSignature.description (ioString, inIndentation) ;
// mAttribute_mEndOfArgumentLocation.description (ioString, inIndentation) ;
// mAttribute_mInstructionListForGeneration.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

enumComparisonResult cCollectionElement_ruleLabelImplementationList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_ruleLabelImplementationList * operand = (cCollectionElement_ruleLabelImplementationList *) inOperand ;
  enumComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mLabelName.objectCompare (operand->mAttribute_mLabelName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSignatureForGeneration.objectCompare (operand->mAttribute_mSignatureForGeneration) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSignature.objectCompare (operand->mAttribute_mSignature) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mEndOfArgumentLocation.objectCompare (operand->mAttribute_mEndOfArgumentLocation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInstructionListForGeneration.objectCompare (operand->mAttribute_mInstructionListForGeneration) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList::GALGAS_ruleLabelImplementationList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList::GALGAS_ruleLabelImplementationList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList GALGAS_ruleLabelImplementationList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_ruleLabelImplementationList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList GALGAS_ruleLabelImplementationList::constructor_listWithValue (const GALGAS_lstring & inOperand0,
                                                                                                  const GALGAS_formalParameterListForGeneration & inOperand1,
                                                                                                  const GALGAS_formalParameterSignature & inOperand2,
                                                                                                  const GALGAS_location & inOperand3,
                                                                                                  const GALGAS_semanticInstructionListForGeneration & inOperand4
                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_ruleLabelImplementationList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_ruleLabelImplementationList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3, inOperand4 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_ruleLabelImplementationList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                    const GALGAS_lstring & in_mLabelName,
                                                                    const GALGAS_formalParameterListForGeneration & in_mSignatureForGeneration,
                                                                    const GALGAS_formalParameterSignature & in_mSignature,
                                                                    const GALGAS_location & in_mEndOfArgumentLocation,
                                                                    const GALGAS_semanticInstructionListForGeneration & in_mInstructionListForGeneration
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement_ruleLabelImplementationList * p = NULL ;
  macroMyNew (p, cCollectionElement_ruleLabelImplementationList (in_mLabelName,
                                                                    in_mSignatureForGeneration,
                                                                    in_mSignature,
                                                                    in_mEndOfArgumentLocation,
                                                                    in_mInstructionListForGeneration COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_ruleLabelImplementationList::addAssign_operation (const GALGAS_lstring & inOperand0,
                                                              const GALGAS_formalParameterListForGeneration & inOperand1,
                                                              const GALGAS_formalParameterSignature & inOperand2,
                                                              const GALGAS_location & inOperand3,
                                                              const GALGAS_semanticInstructionListForGeneration & inOperand4
                                                              COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_ruleLabelImplementationList (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleLabelImplementationList::modifier_prependValue (GALGAS_lstring inOperand0,
                                                                GALGAS_formalParameterListForGeneration inOperand1,
                                                                GALGAS_formalParameterSignature inOperand2,
                                                                GALGAS_location inOperand3,
                                                                GALGAS_semanticInstructionListForGeneration inOperand4
                                                                COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_ruleLabelImplementationList (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleLabelImplementationList::modifier_popFirst (GALGAS_lstring & outOperand0,
                                                            GALGAS_formalParameterListForGeneration & outOperand1,
                                                            GALGAS_formalParameterSignature & outOperand2,
                                                            GALGAS_location & outOperand3,
                                                            GALGAS_semanticInstructionListForGeneration & outOperand4,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleLabelImplementationList * p = (cCollectionElement_ruleLabelImplementationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ruleLabelImplementationList) ;
    outOperand0 = p->mAttribute_mLabelName ;
    outOperand1 = p->mAttribute_mSignatureForGeneration ;
    outOperand2 = p->mAttribute_mSignature ;
    outOperand3 = p->mAttribute_mEndOfArgumentLocation ;
    outOperand4 = p->mAttribute_mInstructionListForGeneration ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleLabelImplementationList::modifier_popLast (GALGAS_lstring & outOperand0,
                                                           GALGAS_formalParameterListForGeneration & outOperand1,
                                                           GALGAS_formalParameterSignature & outOperand2,
                                                           GALGAS_location & outOperand3,
                                                           GALGAS_semanticInstructionListForGeneration & outOperand4,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleLabelImplementationList * p = (cCollectionElement_ruleLabelImplementationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ruleLabelImplementationList) ;
    outOperand0 = p->mAttribute_mLabelName ;
    outOperand1 = p->mAttribute_mSignatureForGeneration ;
    outOperand2 = p->mAttribute_mSignature ;
    outOperand3 = p->mAttribute_mEndOfArgumentLocation ;
    outOperand4 = p->mAttribute_mInstructionListForGeneration ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleLabelImplementationList::method_first (GALGAS_lstring & outOperand0,
                                                       GALGAS_formalParameterListForGeneration & outOperand1,
                                                       GALGAS_formalParameterSignature & outOperand2,
                                                       GALGAS_location & outOperand3,
                                                       GALGAS_semanticInstructionListForGeneration & outOperand4,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleLabelImplementationList * p = (cCollectionElement_ruleLabelImplementationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ruleLabelImplementationList) ;
    outOperand0 = p->mAttribute_mLabelName ;
    outOperand1 = p->mAttribute_mSignatureForGeneration ;
    outOperand2 = p->mAttribute_mSignature ;
    outOperand3 = p->mAttribute_mEndOfArgumentLocation ;
    outOperand4 = p->mAttribute_mInstructionListForGeneration ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleLabelImplementationList::method_last (GALGAS_lstring & outOperand0,
                                                      GALGAS_formalParameterListForGeneration & outOperand1,
                                                      GALGAS_formalParameterSignature & outOperand2,
                                                      GALGAS_location & outOperand3,
                                                      GALGAS_semanticInstructionListForGeneration & outOperand4,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleLabelImplementationList * p = (cCollectionElement_ruleLabelImplementationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ruleLabelImplementationList) ;
    outOperand0 = p->mAttribute_mLabelName ;
    outOperand1 = p->mAttribute_mSignatureForGeneration ;
    outOperand2 = p->mAttribute_mSignature ;
    outOperand3 = p->mAttribute_mEndOfArgumentLocation ;
    outOperand4 = p->mAttribute_mInstructionListForGeneration ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList GALGAS_ruleLabelImplementationList::operator_concat (const GALGAS_ruleLabelImplementationList & inOperand
                                                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_ruleLabelImplementationList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList GALGAS_ruleLabelImplementationList::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                                                const GALGAS_uint & inLength,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_ruleLabelImplementationList result = GALGAS_ruleLabelImplementationList::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList GALGAS_ruleLabelImplementationList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_ruleLabelImplementationList result = GALGAS_ruleLabelImplementationList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_ruleLabelImplementationList::dotAssign_operation (const GALGAS_ruleLabelImplementationList inOperand
                                                              COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

void GALGAS_ruleLabelImplementationList::modifier_setMLabelNameAtIndex (GALGAS_lstring inOperand,
                                                                        GALGAS_uint inIndex,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement_ruleLabelImplementationList * p = (cCollectionElement_ruleLabelImplementationList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleLabelImplementationList) ;
    p->mAttribute_mLabelName = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleLabelImplementationList::modifier_setMSignatureForGenerationAtIndex (GALGAS_formalParameterListForGeneration inOperand,
                                                                                     GALGAS_uint inIndex,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement_ruleLabelImplementationList * p = (cCollectionElement_ruleLabelImplementationList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleLabelImplementationList) ;
    p->mAttribute_mSignatureForGeneration = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleLabelImplementationList::modifier_setMSignatureAtIndex (GALGAS_formalParameterSignature inOperand,
                                                                        GALGAS_uint inIndex,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement_ruleLabelImplementationList * p = (cCollectionElement_ruleLabelImplementationList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleLabelImplementationList) ;
    p->mAttribute_mSignature = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleLabelImplementationList::modifier_setMEndOfArgumentLocationAtIndex (GALGAS_location inOperand,
                                                                                    GALGAS_uint inIndex,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement_ruleLabelImplementationList * p = (cCollectionElement_ruleLabelImplementationList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleLabelImplementationList) ;
    p->mAttribute_mEndOfArgumentLocation = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleLabelImplementationList::modifier_setMInstructionListForGenerationAtIndex (GALGAS_semanticInstructionListForGeneration inOperand,
                                                                                           GALGAS_uint inIndex,
                                                                                           C_Compiler * inCompiler
                                                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement_ruleLabelImplementationList * p = (cCollectionElement_ruleLabelImplementationList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleLabelImplementationList) ;
    p->mAttribute_mInstructionListForGeneration = inOperand ;
  }
}


//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_ruleLabelImplementationList::reader_mLabelNameAtIndex (const GALGAS_uint & inIndex,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleLabelImplementationList * p = (cCollectionElement_ruleLabelImplementationList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleLabelImplementationList) ;
    result = p->mAttribute_mLabelName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterListForGeneration GALGAS_ruleLabelImplementationList::reader_mSignatureForGenerationAtIndex (const GALGAS_uint & inIndex,
                                                                                                                   C_Compiler * inCompiler
                                                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleLabelImplementationList * p = (cCollectionElement_ruleLabelImplementationList *) attributes.ptr () ;
  GALGAS_formalParameterListForGeneration result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleLabelImplementationList) ;
    result = p->mAttribute_mSignatureForGeneration ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterSignature GALGAS_ruleLabelImplementationList::reader_mSignatureAtIndex (const GALGAS_uint & inIndex,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleLabelImplementationList * p = (cCollectionElement_ruleLabelImplementationList *) attributes.ptr () ;
  GALGAS_formalParameterSignature result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleLabelImplementationList) ;
    result = p->mAttribute_mSignature ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_location GALGAS_ruleLabelImplementationList::reader_mEndOfArgumentLocationAtIndex (const GALGAS_uint & inIndex,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleLabelImplementationList * p = (cCollectionElement_ruleLabelImplementationList *) attributes.ptr () ;
  GALGAS_location result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleLabelImplementationList) ;
    result = p->mAttribute_mEndOfArgumentLocation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_semanticInstructionListForGeneration GALGAS_ruleLabelImplementationList::reader_mInstructionListForGenerationAtIndex (const GALGAS_uint & inIndex,
                                                                                                                             C_Compiler * inCompiler
                                                                                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleLabelImplementationList * p = (cCollectionElement_ruleLabelImplementationList *) attributes.ptr () ;
  GALGAS_semanticInstructionListForGeneration result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleLabelImplementationList) ;
    result = p->mAttribute_mInstructionListForGeneration ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_ruleLabelImplementationList::cEnumerator_ruleLabelImplementationList (const GALGAS_ruleLabelImplementationList & inEnumeratedObject,
                                                                                  const bool inAscending) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inAscending) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_ruleLabelImplementationList::current_mLabelName (LOCATION_ARGS) const {
  const cCollectionElement_ruleLabelImplementationList * p = (const cCollectionElement_ruleLabelImplementationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_ruleLabelImplementationList) ;
  return p->mAttribute_mLabelName ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterListForGeneration cEnumerator_ruleLabelImplementationList::current_mSignatureForGeneration (LOCATION_ARGS) const {
  const cCollectionElement_ruleLabelImplementationList * p = (const cCollectionElement_ruleLabelImplementationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_ruleLabelImplementationList) ;
  return p->mAttribute_mSignatureForGeneration ;
}

//---------------------------------------------------------------------------*

GALGAS_formalParameterSignature cEnumerator_ruleLabelImplementationList::current_mSignature (LOCATION_ARGS) const {
  const cCollectionElement_ruleLabelImplementationList * p = (const cCollectionElement_ruleLabelImplementationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_ruleLabelImplementationList) ;
  return p->mAttribute_mSignature ;
}

//---------------------------------------------------------------------------*

GALGAS_location cEnumerator_ruleLabelImplementationList::current_mEndOfArgumentLocation (LOCATION_ARGS) const {
  const cCollectionElement_ruleLabelImplementationList * p = (const cCollectionElement_ruleLabelImplementationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_ruleLabelImplementationList) ;
  return p->mAttribute_mEndOfArgumentLocation ;
}

//---------------------------------------------------------------------------*

GALGAS_semanticInstructionListForGeneration cEnumerator_ruleLabelImplementationList::current_mInstructionListForGeneration (LOCATION_ARGS) const {
  const cCollectionElement_ruleLabelImplementationList * p = (const cCollectionElement_ruleLabelImplementationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_ruleLabelImplementationList) ;
  return p->mAttribute_mInstructionListForGeneration ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                     @ruleLabelImplementationList type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_ruleLabelImplementationList ("ruleLabelImplementationList",
                                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_ruleLabelImplementationList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_ruleLabelImplementationList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_ruleLabelImplementationList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_ruleLabelImplementationList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList GALGAS_ruleLabelImplementationList::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler,
                                                                                      const GALGAS_location & inErrorLocation
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_ruleLabelImplementationList result ;
  const GALGAS_ruleLabelImplementationList * p = (const GALGAS_ruleLabelImplementationList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_ruleLabelImplementationList *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "ruleLabelImplementationList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Class for element of '@ruleDeclarationList' list              *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_ruleDeclarationList : public cCollectionElement {
//--- List attributes
  public : GALGAS_string mAttribute_mNonterminalName ;
  public : GALGAS_uint mAttribute_mRuleIndex ;
  public : GALGAS_ruleLabelImplementationList mAttribute_mLabelImplementationList ;
  public : GALGAS_bool mAttribute_mHasParseLabel ;

//--- Constructor
  public : cCollectionElement_ruleDeclarationList (const GALGAS_string & in_mNonterminalName,
                                                   const GALGAS_uint & in_mRuleIndex,
                                                   const GALGAS_ruleLabelImplementationList & in_mLabelImplementationList,
                                                   const GALGAS_bool & in_mHasParseLabel
                                                   COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_ruleDeclarationList::cCollectionElement_ruleDeclarationList (const GALGAS_string & in_mNonterminalName,
                                                                                const GALGAS_uint & in_mRuleIndex,
                                                                                const GALGAS_ruleLabelImplementationList & in_mLabelImplementationList,
                                                                                const GALGAS_bool & in_mHasParseLabel
                                                                                COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mNonterminalName (in_mNonterminalName),
mAttribute_mRuleIndex (in_mRuleIndex),
mAttribute_mLabelImplementationList (in_mLabelImplementationList),
mAttribute_mHasParseLabel (in_mHasParseLabel) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_ruleDeclarationList::isValid (void) const {
  return mAttribute_mNonterminalName.isValid () && mAttribute_mRuleIndex.isValid () && mAttribute_mLabelImplementationList.isValid () && mAttribute_mHasParseLabel.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_ruleDeclarationList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_ruleDeclarationList (mAttribute_mNonterminalName, mAttribute_mRuleIndex, mAttribute_mLabelImplementationList, mAttribute_mHasParseLabel COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_ruleDeclarationList::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
// mAttribute_mNonterminalName.description (ioString, inIndentation) ;
// mAttribute_mRuleIndex.description (ioString, inIndentation) ;
// mAttribute_mLabelImplementationList.description (ioString, inIndentation) ;
// mAttribute_mHasParseLabel.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

enumComparisonResult cCollectionElement_ruleDeclarationList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_ruleDeclarationList * operand = (cCollectionElement_ruleDeclarationList *) inOperand ;
  enumComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mNonterminalName.objectCompare (operand->mAttribute_mNonterminalName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRuleIndex.objectCompare (operand->mAttribute_mRuleIndex) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mLabelImplementationList.objectCompare (operand->mAttribute_mLabelImplementationList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mHasParseLabel.objectCompare (operand->mAttribute_mHasParseLabel) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList::GALGAS_ruleDeclarationList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList::GALGAS_ruleDeclarationList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList GALGAS_ruleDeclarationList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_ruleDeclarationList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList GALGAS_ruleDeclarationList::constructor_listWithValue (const GALGAS_string & inOperand0,
                                                                                  const GALGAS_uint & inOperand1,
                                                                                  const GALGAS_ruleLabelImplementationList & inOperand2,
                                                                                  const GALGAS_bool & inOperand3
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_ruleDeclarationList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_ruleDeclarationList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_ruleDeclarationList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                            const GALGAS_string & in_mNonterminalName,
                                                            const GALGAS_uint & in_mRuleIndex,
                                                            const GALGAS_ruleLabelImplementationList & in_mLabelImplementationList,
                                                            const GALGAS_bool & in_mHasParseLabel
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement_ruleDeclarationList * p = NULL ;
  macroMyNew (p, cCollectionElement_ruleDeclarationList (in_mNonterminalName,
                                                            in_mRuleIndex,
                                                            in_mLabelImplementationList,
                                                            in_mHasParseLabel COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_ruleDeclarationList::addAssign_operation (const GALGAS_string & inOperand0,
                                                      const GALGAS_uint & inOperand1,
                                                      const GALGAS_ruleLabelImplementationList & inOperand2,
                                                      const GALGAS_bool & inOperand3
                                                      COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_ruleDeclarationList (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleDeclarationList::modifier_prependValue (GALGAS_string inOperand0,
                                                        GALGAS_uint inOperand1,
                                                        GALGAS_ruleLabelImplementationList inOperand2,
                                                        GALGAS_bool inOperand3
                                                        COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_ruleDeclarationList (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleDeclarationList::modifier_popFirst (GALGAS_string & outOperand0,
                                                    GALGAS_uint & outOperand1,
                                                    GALGAS_ruleLabelImplementationList & outOperand2,
                                                    GALGAS_bool & outOperand3,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleDeclarationList * p = (cCollectionElement_ruleDeclarationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ruleDeclarationList) ;
    outOperand0 = p->mAttribute_mNonterminalName ;
    outOperand1 = p->mAttribute_mRuleIndex ;
    outOperand2 = p->mAttribute_mLabelImplementationList ;
    outOperand3 = p->mAttribute_mHasParseLabel ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleDeclarationList::modifier_popLast (GALGAS_string & outOperand0,
                                                   GALGAS_uint & outOperand1,
                                                   GALGAS_ruleLabelImplementationList & outOperand2,
                                                   GALGAS_bool & outOperand3,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleDeclarationList * p = (cCollectionElement_ruleDeclarationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ruleDeclarationList) ;
    outOperand0 = p->mAttribute_mNonterminalName ;
    outOperand1 = p->mAttribute_mRuleIndex ;
    outOperand2 = p->mAttribute_mLabelImplementationList ;
    outOperand3 = p->mAttribute_mHasParseLabel ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleDeclarationList::method_first (GALGAS_string & outOperand0,
                                               GALGAS_uint & outOperand1,
                                               GALGAS_ruleLabelImplementationList & outOperand2,
                                               GALGAS_bool & outOperand3,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleDeclarationList * p = (cCollectionElement_ruleDeclarationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ruleDeclarationList) ;
    outOperand0 = p->mAttribute_mNonterminalName ;
    outOperand1 = p->mAttribute_mRuleIndex ;
    outOperand2 = p->mAttribute_mLabelImplementationList ;
    outOperand3 = p->mAttribute_mHasParseLabel ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleDeclarationList::method_last (GALGAS_string & outOperand0,
                                              GALGAS_uint & outOperand1,
                                              GALGAS_ruleLabelImplementationList & outOperand2,
                                              GALGAS_bool & outOperand3,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleDeclarationList * p = (cCollectionElement_ruleDeclarationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ruleDeclarationList) ;
    outOperand0 = p->mAttribute_mNonterminalName ;
    outOperand1 = p->mAttribute_mRuleIndex ;
    outOperand2 = p->mAttribute_mLabelImplementationList ;
    outOperand3 = p->mAttribute_mHasParseLabel ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList GALGAS_ruleDeclarationList::operator_concat (const GALGAS_ruleDeclarationList & inOperand
                                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_ruleDeclarationList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList GALGAS_ruleDeclarationList::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                                const GALGAS_uint & inLength,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_ruleDeclarationList result = GALGAS_ruleDeclarationList::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList GALGAS_ruleDeclarationList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_ruleDeclarationList result = GALGAS_ruleDeclarationList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_ruleDeclarationList::dotAssign_operation (const GALGAS_ruleDeclarationList inOperand
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

void GALGAS_ruleDeclarationList::modifier_setMNonterminalNameAtIndex (GALGAS_string inOperand,
                                                                      GALGAS_uint inIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement_ruleDeclarationList * p = (cCollectionElement_ruleDeclarationList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleDeclarationList) ;
    p->mAttribute_mNonterminalName = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleDeclarationList::modifier_setMRuleIndexAtIndex (GALGAS_uint inOperand,
                                                                GALGAS_uint inIndex,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement_ruleDeclarationList * p = (cCollectionElement_ruleDeclarationList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleDeclarationList) ;
    p->mAttribute_mRuleIndex = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleDeclarationList::modifier_setMLabelImplementationListAtIndex (GALGAS_ruleLabelImplementationList inOperand,
                                                                              GALGAS_uint inIndex,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement_ruleDeclarationList * p = (cCollectionElement_ruleDeclarationList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleDeclarationList) ;
    p->mAttribute_mLabelImplementationList = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ruleDeclarationList::modifier_setMHasParseLabelAtIndex (GALGAS_bool inOperand,
                                                                    GALGAS_uint inIndex,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement_ruleDeclarationList * p = (cCollectionElement_ruleDeclarationList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleDeclarationList) ;
    p->mAttribute_mHasParseLabel = inOperand ;
  }
}


//---------------------------------------------------------------------------*

GALGAS_string GALGAS_ruleDeclarationList::reader_mNonterminalNameAtIndex (const GALGAS_uint & inIndex,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleDeclarationList * p = (cCollectionElement_ruleDeclarationList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleDeclarationList) ;
    result = p->mAttribute_mNonterminalName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_ruleDeclarationList::reader_mRuleIndexAtIndex (const GALGAS_uint & inIndex,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleDeclarationList * p = (cCollectionElement_ruleDeclarationList *) attributes.ptr () ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleDeclarationList) ;
    result = p->mAttribute_mRuleIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList GALGAS_ruleDeclarationList::reader_mLabelImplementationListAtIndex (const GALGAS_uint & inIndex,
                                                                                                       C_Compiler * inCompiler
                                                                                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleDeclarationList * p = (cCollectionElement_ruleDeclarationList *) attributes.ptr () ;
  GALGAS_ruleLabelImplementationList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleDeclarationList) ;
    result = p->mAttribute_mLabelImplementationList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_ruleDeclarationList::reader_mHasParseLabelAtIndex (const GALGAS_uint & inIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ruleDeclarationList * p = (cCollectionElement_ruleDeclarationList *) attributes.ptr () ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ruleDeclarationList) ;
    result = p->mAttribute_mHasParseLabel ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_ruleDeclarationList::cEnumerator_ruleDeclarationList (const GALGAS_ruleDeclarationList & inEnumeratedObject,
                                                                  const bool inAscending) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inAscending) ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_ruleDeclarationList::current_mNonterminalName (LOCATION_ARGS) const {
  const cCollectionElement_ruleDeclarationList * p = (const cCollectionElement_ruleDeclarationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_ruleDeclarationList) ;
  return p->mAttribute_mNonterminalName ;
}

//---------------------------------------------------------------------------*

GALGAS_uint cEnumerator_ruleDeclarationList::current_mRuleIndex (LOCATION_ARGS) const {
  const cCollectionElement_ruleDeclarationList * p = (const cCollectionElement_ruleDeclarationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_ruleDeclarationList) ;
  return p->mAttribute_mRuleIndex ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleLabelImplementationList cEnumerator_ruleDeclarationList::current_mLabelImplementationList (LOCATION_ARGS) const {
  const cCollectionElement_ruleDeclarationList * p = (const cCollectionElement_ruleDeclarationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_ruleDeclarationList) ;
  return p->mAttribute_mLabelImplementationList ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cEnumerator_ruleDeclarationList::current_mHasParseLabel (LOCATION_ARGS) const {
  const cCollectionElement_ruleDeclarationList * p = (const cCollectionElement_ruleDeclarationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_ruleDeclarationList) ;
  return p->mAttribute_mHasParseLabel ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                         @ruleDeclarationList type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_ruleDeclarationList ("ruleDeclarationList",
                                            NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_ruleDeclarationList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_ruleDeclarationList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_ruleDeclarationList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_ruleDeclarationList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList GALGAS_ruleDeclarationList::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler,
                                                                      const GALGAS_location & inErrorLocation
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_ruleDeclarationList result ;
  const GALGAS_ruleDeclarationList * p = (const GALGAS_ruleDeclarationList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_ruleDeclarationList *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "ruleDeclarationList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Filewrapper 'syntaxFileGenerationTemplate'                 *
//                                                                           *
//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_syntaxFileGenerationTemplate_0 [1] = {
  NULL
} ;

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_syntaxFileGenerationTemplate_0 [1] = {
  NULL
} ;

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_syntaxFileGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_syntaxFileGenerationTemplate_0,
  0,
  gWrapperAllDirectories_syntaxFileGenerationTemplate_0
) ;


//---------------------------------------------------------------------------*
//                                                                           *
//   Filewrapper template 'syntaxFileGenerationTemplate syntaxFileHeader'    *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_syntaxFileGenerationTemplate_syntaxFileHeader (C_Compiler * /* inCompiler */,
                                                                                 const GALGAS_string & in_COMPONENT_5F_NAME,
                                                                                 const GALGAS_string & in_LEXIQUE_5F_NAME,
                                                                                 const GALGAS_stringlist & in_IMPORTED_5F_COMPONENT_5F_LIST,
                                                                                 const GALGAS_lstringlist & in_TYPE_5F_PREDECLARATION_5F_LIST
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  result << "#ifndef " ;
  result << in_COMPONENT_5F_NAME.stringValue () ;
  result << "_ENTITIES_DEFINED\n"
    "#define " ;
  result << in_COMPONENT_5F_NAME.stringValue () ;
  result << "_ENTITIES_DEFINED\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "#include \"galgas2/predefined-types.h\"\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "#include \"" ;
  result << in_LEXIQUE_5F_NAME.stringValue () ;
  result << ".h\"\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n" ;
  GALGAS_uint index_449_ (0) ;
  if (in_IMPORTED_5F_COMPONENT_5F_LIST.isValid ()) {
    cEnumerator_stringlist enumerator_449 (in_IMPORTED_5F_COMPONENT_5F_LIST, true) ;
    while (enumerator_449.hasCurrentObject ()) {
      result << "#include \"" ;
      result << enumerator_449.current_mValue (HERE).stringValue () ;
      result << ".h\"\n" ;
      index_449_.increment () ;
      enumerator_449.gotoNextObject () ;
    }
  }
  result << "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n" ;
  GALGAS_uint index_614_ (0) ;
  if (in_TYPE_5F_PREDECLARATION_5F_LIST.isValid ()) {
    cEnumerator_lstringlist enumerator_614 (in_TYPE_5F_PREDECLARATION_5F_LIST, true) ;
    while (enumerator_614.hasCurrentObject ()) {
      result << "class GALGAS_" ;
      result << enumerator_614.current_mValue (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (21)).stringValue () ;
      result << " ;\n" ;
      index_614_.increment () ;
      enumerator_614.gotoNextObject () ;
    }
  }
  result << "\n" ;
  return GALGAS_string (result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Filewrapper template 'syntaxFileGenerationTemplate syntaxFileImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_syntaxFileGenerationTemplate_syntaxFileImplementation (C_Compiler * /* inCompiler */,
                                                                                         const GALGAS_string & in_COMPONENT_5F_NAME,
                                                                                         const GALGAS_stringlist & in_IMPORTED_5F_COMPONENT_5F_LIST
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  result << "#include \"version_libpm.h\"\n"
    "#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER\n"
    "  #error \"This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the cu"
    "rrent version (CURRENT_LIBPM_VERSION) of libpm\"\n"
    "#endif\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "#include \"" ;
  result << in_COMPONENT_5F_NAME.stringValue () ;
  result << ".h\"\n"
    "#include \"galgas2/C_galgas_CLI_Options.h\"\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n" ;
  GALGAS_uint index_590_ (0) ;
  if (in_IMPORTED_5F_COMPONENT_5F_LIST.isValid ()) {
    cEnumerator_stringlist enumerator_590 (in_IMPORTED_5F_COMPONENT_5F_LIST, true) ;
    while (enumerator_590.hasCurrentObject ()) {
      result << "#include \"" ;
      result << enumerator_590.current_mValue (HERE).stringValue () ;
      result << ".h\"\n" ;
      index_590_.increment () ;
      enumerator_590.gotoNextObject () ;
    }
  }
  result << "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "  #define SOURCE_FILE_AT_LINE(line) \"" ;
  result << in_COMPONENT_5F_NAME.stringValue () ;
  result << ".gSyntax\", line\n"
    "  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)\n"
    "#else\n"
    "  #define SOURCE_FILE_AT_LINE(line) \n"
    "  #define COMMA_SOURCE_FILE_AT_LINE(line) \n"
    "#endif\n"
    "\n" ;
  return GALGAS_string (result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Filewrapper template 'syntaxFileGenerationTemplate syntaxAnalyserClassDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_syntaxFileGenerationTemplate_syntaxAnalyserClassDeclaration (C_Compiler * inCompiler,
                                                                                               const GALGAS_string & in_COMPONENT_5F_NAME,
                                                                                               const GALGAS_string & in_LEXIQUE_5F_NAME,
                                                                                               const GALGAS_nonterminalMap & in_NONTERMINAL_5F_MAP,
                                                                                               const GALGAS_ruleDeclarationList & in_RULE_5F_DECLARATION_5F_LIST,
                                                                                               const GALGAS_uintlist & in_SELECT_5F_METHOD_5F_LIST
                                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GALGAS_string ("Parser class '").operator_concat (in_COMPONENT_5F_NAME COMMA_SOURCE_FILE_AT_LINE (3)).operator_concat (GALGAS_string ("' declaration") COMMA_SOURCE_FILE_AT_LINE (3)).reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 75U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (3)).stringValue () ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class cParser_" ;
  result << in_COMPONENT_5F_NAME.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (7)).stringValue () ;
  result << " {\n"
    "//--- Virtual destructor\n"
    "  public : virtual ~ cParser_" ;
  result << in_COMPONENT_5F_NAME.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (9)).stringValue () ;
  result << " (void) {}\n"
    "\n"
    "//--- Non terminal declarations\n" ;
  GALGAS_uint index_653_ (0) ;
  if (in_NONTERMINAL_5F_MAP.isValid ()) {
    cEnumerator_nonterminalMap enumerator_653 (in_NONTERMINAL_5F_MAP, true) ;
    while (enumerator_653.hasCurrentObject ()) {
      GALGAS_uint index_720_ (0) ;
      if (enumerator_653.current_mLabelMap (HERE).isValid ()) {
        cEnumerator_nonterminalLabelMap enumerator_720 (enumerator_653.current_mLabelMap (HERE), true) ;
        while (enumerator_720.hasCurrentObject ()) {
          result << "  protected : virtual void nt_" ;
          result << enumerator_653.current_lkey (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (14)).stringValue () ;
          result << "_" ;
          result << enumerator_720.current_lkey (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (14)).stringValue () ;
          result << " (" ;
          columnMarker = result.currentColumn () ;
          GALGAS_uint index_840_IDX (0) ;
          if (enumerator_720.current_mSignature (HERE).isValid ()) {
            cEnumerator_formalParameterSignature enumerator_840 (enumerator_720.current_mSignature (HERE), true) ;
            while (enumerator_840.hasCurrentObject ()) {
              if (GALGAS_bool (kIsEqual, enumerator_840.current_mFormalArgumentPassingMode (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (16)))).isValidAndTrue ()) {
                result << "const GALGAS_" ;
                result << enumerator_840.current_mFormalArgumentType (HERE).reader_identifierRepresentation (inCompiler COMMA_SOURCE_FILE_AT_LINE (17)).stringValue () ;
                result << " constinArgument" ;
                result << index_840_IDX.reader_string (SOURCE_FILE_AT_LINE (17)).stringValue () ;
              }else{
                if (GALGAS_bool (kIsEqual, enumerator_840.current_mFormalArgumentPassingMode (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentInOut (SOURCE_FILE_AT_LINE (18)))).isValidAndTrue ()) {
                  result << "GALGAS_" ;
                  result << enumerator_840.current_mFormalArgumentType (HERE).reader_identifierRepresentation (inCompiler COMMA_SOURCE_FILE_AT_LINE (19)).stringValue () ;
                  result << " & ioArgument" ;
                  result << index_840_IDX.reader_string (SOURCE_FILE_AT_LINE (19)).stringValue () ;
                }else{
                  if (GALGAS_bool (kIsEqual, enumerator_840.current_mFormalArgumentPassingMode (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (20)))).isValidAndTrue ()) {
                    result << "GALGAS_" ;
                    result << enumerator_840.current_mFormalArgumentType (HERE).reader_identifierRepresentation (inCompiler COMMA_SOURCE_FILE_AT_LINE (21)).stringValue () ;
                    result << " & outArgument" ;
                    result << index_840_IDX.reader_string (SOURCE_FILE_AT_LINE (21)).stringValue () ;
                  }else{
                    result << "GALGAS_" ;
                    result << enumerator_840.current_mFormalArgumentType (HERE).reader_identifierRepresentation (inCompiler COMMA_SOURCE_FILE_AT_LINE (23)).stringValue () ;
                    result << " inArgument" ;
                    result << index_840_IDX.reader_string (SOURCE_FILE_AT_LINE (23)).stringValue () ;
                  }
                }
              }
              result << ",\n" ;
              result.appendSpacesUntilColumn (columnMarker) ;
              index_840_IDX.increment () ;
              enumerator_840.gotoNextObject () ;
            }
          }
          result << "C_Lexique_" ;
          result << in_LEXIQUE_5F_NAME.stringValue () ;
          result << " * inLexique) = 0 ;\n"
            "\n" ;
          index_720_.increment () ;
          enumerator_720.gotoNextObject () ;
        }
      }
      if (enumerator_653.current_mHasParseLabel (HERE).isValidAndTrue ()) {
        result << "  protected : virtual void nt_" ;
        result << enumerator_653.current_lkey (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (31)).stringValue () ;
        result << "_parse (" ;
        columnMarker = result.currentColumn () ;
        result << "C_Lexique_" ;
        result << in_LEXIQUE_5F_NAME.stringValue () ;
        result << " * inLexique) = 0 ;\n"
          "\n" ;
      }else{
      }
      index_653_.increment () ;
      enumerator_653.gotoNextObject () ;
    }
  }
  result << "\n"
    "//--- Rule declarations\n" ;
  GALGAS_uint index_1895_ (0) ;
  if (in_RULE_5F_DECLARATION_5F_LIST.isValid ()) {
    cEnumerator_ruleDeclarationList enumerator_1895 (in_RULE_5F_DECLARATION_5F_LIST, true) ;
    while (enumerator_1895.hasCurrentObject ()) {
      GALGAS_uint index_1955_ (0) ;
      if (enumerator_1895.current_mLabelImplementationList (HERE).isValid ()) {
        cEnumerator_ruleLabelImplementationList enumerator_1955 (enumerator_1895.current_mLabelImplementationList (HERE), true) ;
        while (enumerator_1955.hasCurrentObject ()) {
          result << "  protected : void rule_" ;
          result << in_COMPONENT_5F_NAME.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (37)).stringValue () ;
          result << "_" ;
          result << enumerator_1895.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (37)).stringValue () ;
          result << "_i" ;
          result << enumerator_1895.current_mRuleIndex (HERE).reader_string (SOURCE_FILE_AT_LINE (37)).stringValue () ;
          result << "_" ;
          result << enumerator_1955.current_mLabelName (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (37)).stringValue () ;
          result << " (" ;
          columnMarker = result.currentColumn () ;
          GALGAS_uint index_2150_IDX (0) ;
          if (enumerator_1955.current_mSignature (HERE).isValid ()) {
            cEnumerator_formalParameterSignature enumerator_2150 (enumerator_1955.current_mSignature (HERE), true) ;
            while (enumerator_2150.hasCurrentObject ()) {
              if (GALGAS_bool (kIsEqual, enumerator_2150.current_mFormalArgumentPassingMode (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (39)))).isValidAndTrue ()) {
                result << "const GALGAS_" ;
                result << enumerator_2150.current_mFormalArgumentType (HERE).reader_identifierRepresentation (inCompiler COMMA_SOURCE_FILE_AT_LINE (40)).stringValue () ;
                result << " constinArgument" ;
                result << index_2150_IDX.reader_string (SOURCE_FILE_AT_LINE (40)).stringValue () ;
              }else{
                if (GALGAS_bool (kIsEqual, enumerator_2150.current_mFormalArgumentPassingMode (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentInOut (SOURCE_FILE_AT_LINE (41)))).isValidAndTrue ()) {
                  result << "GALGAS_" ;
                  result << enumerator_2150.current_mFormalArgumentType (HERE).reader_identifierRepresentation (inCompiler COMMA_SOURCE_FILE_AT_LINE (42)).stringValue () ;
                  result << " & ioArgument" ;
                  result << index_2150_IDX.reader_string (SOURCE_FILE_AT_LINE (42)).stringValue () ;
                }else{
                  if (GALGAS_bool (kIsEqual, enumerator_2150.current_mFormalArgumentPassingMode (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (43)))).isValidAndTrue ()) {
                    result << "GALGAS_" ;
                    result << enumerator_2150.current_mFormalArgumentType (HERE).reader_identifierRepresentation (inCompiler COMMA_SOURCE_FILE_AT_LINE (44)).stringValue () ;
                    result << " & outArgument" ;
                    result << index_2150_IDX.reader_string (SOURCE_FILE_AT_LINE (44)).stringValue () ;
                  }else{
                    result << "GALGAS_" ;
                    result << enumerator_2150.current_mFormalArgumentType (HERE).reader_identifierRepresentation (inCompiler COMMA_SOURCE_FILE_AT_LINE (46)).stringValue () ;
                    result << " inArgument" ;
                    result << index_2150_IDX.reader_string (SOURCE_FILE_AT_LINE (46)).stringValue () ;
                  }
                }
              }
              result << ",\n" ;
              result.appendSpacesUntilColumn (columnMarker) ;
              index_2150_IDX.increment () ;
              enumerator_2150.gotoNextObject () ;
            }
          }
          result << "C_Lexique_" ;
          result << in_LEXIQUE_5F_NAME.stringValue () ;
          result << " * inLexique) ;\n"
            "\n" ;
          index_1955_.increment () ;
          enumerator_1955.gotoNextObject () ;
        }
      }
      if (enumerator_1895.current_mHasParseLabel (HERE).isValidAndTrue ()) {
        result << "  protected : void rule_" ;
        result << in_COMPONENT_5F_NAME.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (53)).stringValue () ;
        result << "_" ;
        result << enumerator_1895.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (53)).stringValue () ;
        result << "_i" ;
        result << enumerator_1895.current_mRuleIndex (HERE).reader_string (SOURCE_FILE_AT_LINE (53)).stringValue () ;
        result << "_parse (" ;
        columnMarker = result.currentColumn () ;
        result << "C_Lexique_" ;
        result << in_LEXIQUE_5F_NAME.stringValue () ;
        result << " * inLexique) ;\n"
          "\n" ;
      }else{
      }
      index_1895_.increment () ;
      enumerator_1895.gotoNextObject () ;
    }
  }
  result << "\n"
    "\n"
    "//--- Select methods\n" ;
  GALGAS_uint index_3299_ (0) ;
  if (in_SELECT_5F_METHOD_5F_LIST.isValid ()) {
    cEnumerator_uintlist enumerator_3299 (in_SELECT_5F_METHOD_5F_LIST, true) ;
    while (enumerator_3299.hasCurrentObject ()) {
      result << "  protected : virtual PMSInt32 select_" ;
      result << in_COMPONENT_5F_NAME.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (59)).stringValue () ;
      result << "_" ;
      result << enumerator_3299.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (59)).stringValue () ;
      result << " (C_Lexique_" ;
      result << in_LEXIQUE_5F_NAME.stringValue () ;
      result << " *) = 0 ;\n"
        "\n" ;
      index_3299_.increment () ;
      enumerator_3299.gotoNextObject () ;
    }
  }
  result << "\n"
    "} ;\n"
    "\n" ;
  return GALGAS_string (result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Routine 'enterNonterminalNonTerminalInMapAndCheck'             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterNonterminalNonTerminalInMapAndCheck (const GALGAS_lstring constinArgument_inNonTerminalName,
                                                       const GALGAS_nonterminalLabelMap constinArgument_inNonterminalLabelMap,
                                                       const GALGAS_bool constinArgument_inHasParseLabel,
                                                       GALGAS_nonterminalMap & ioArgument_ioNonterminalDeclarationMap,
                                                       C_Compiler * inCompiler
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @readOnlyWithInstructionForGeneration
  const cMapElement_nonterminalMap * objectArray_5725 = (const cMapElement_nonterminalMap *) ioArgument_ioNonterminalDeclarationMap.readAccessForWithInstruction_hasKey (constinArgument_inNonTerminalName.reader_string (SOURCE_FILE_AT_LINE (135))) ;
  if (NULL != objectArray_5725) {
      macroValidSharedObject (objectArray_5725, const cMapElement_nonterminalMap) ;
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_0 (GALGAS_bool (kIsNotEqual, objectArray_5725->mAttribute_mHasParseLabel.objectCompare (constinArgument_inHasParseLabel))) ;
    if (test_0.isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      //--- @ifExpressionForGeneration
      GALGAS_string temp_1 ;
      if (objectArray_5725->mAttribute_mHasParseLabel.isValidAndTrue ()) {
        temp_1 = GALGAS_string ("with") ;
      }else{
        temp_1 = GALGAS_string ("without") ;
      }
      //--- @ifExpressionForGeneration
      GALGAS_string temp_2 ;
      if (constinArgument_inHasParseLabel.isValidAndTrue ()) {
        temp_2 = GALGAS_string ("with") ;
      }else{
        temp_2 = GALGAS_string ("without") ;
      }
      GALGAS_location location_3 (constinArgument_inNonTerminalName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("the '").operator_concat (constinArgument_inNonTerminalName.reader_string (SOURCE_FILE_AT_LINE (138)) COMMA_SOURCE_FILE_AT_LINE (138)).operator_concat (GALGAS_string ("' is redeclared ") COMMA_SOURCE_FILE_AT_LINE (138)).operator_concat (temp_1 COMMA_SOURCE_FILE_AT_LINE (139)).operator_concat (GALGAS_string (" 'parse' label, but first declaration declares it ") COMMA_SOURCE_FILE_AT_LINE (140)).operator_concat (temp_2 COMMA_SOURCE_FILE_AT_LINE (141)).operator_concat (GALGAS_string (" 'parse' label") COMMA_SOURCE_FILE_AT_LINE (142)) COMMA_SOURCE_FILE_AT_LINE (137)) ;
    }
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_stringset var_firstDeclarationLabelSet = objectArray_5725->mAttribute_mLabelMap.reader_allKeys (SOURCE_FILE_AT_LINE (145)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_stringset var_reDeclarationLabelSet = constinArgument_inNonterminalLabelMap.reader_allKeys (SOURCE_FILE_AT_LINE (146)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_stringset var_missingLabelSet = var_firstDeclarationLabelSet.substract_operation (var_reDeclarationLabelSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (147)) ;
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_4 (GALGAS_bool (kIsStrictSup, var_missingLabelSet.reader_count (SOURCE_FILE_AT_LINE (148)).objectCompare (GALGAS_uint ((PMUInt32) 0U)))) ;
    if (test_4.isValidAndTrue ()) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_stringset enumerator_6457 (var_missingLabelSet, true) ;
      //--- simple foreach instruction
      while (enumerator_6457.hasCurrentObject ()) {
        //-------- @appendInstructionForGeneration
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "-  ").operator_concat (enumerator_6457.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (151)) COMMA_SOURCE_FILE_AT_LINE (151)) ;
        enumerator_6457.gotoNextObject () ;
      }
      //-------- @errorInstructionForGeneration
      GALGAS_location location_5 (constinArgument_inNonTerminalName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_5, GALGAS_string ("the '").operator_concat (constinArgument_inNonTerminalName.reader_string (SOURCE_FILE_AT_LINE (154)) COMMA_SOURCE_FILE_AT_LINE (154)).operator_concat (GALGAS_string ("' nonterminal is redeclared without the following label(s):") COMMA_SOURCE_FILE_AT_LINE (154)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (154)) COMMA_SOURCE_FILE_AT_LINE (153)) ;
    }
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_stringset var_newLabelSet = var_reDeclarationLabelSet.substract_operation (var_firstDeclarationLabelSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (157)) ;
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_6 (GALGAS_bool (kIsStrictSup, var_newLabelSet.reader_count (SOURCE_FILE_AT_LINE (158)).objectCompare (GALGAS_uint ((PMUInt32) 0U)))) ;
    if (test_6.isValidAndTrue ()) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_stringset enumerator_6837 (var_newLabelSet, true) ;
      //--- simple foreach instruction
      while (enumerator_6837.hasCurrentObject ()) {
        //-------- @appendInstructionForGeneration
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "-  ").operator_concat (enumerator_6837.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (161)) COMMA_SOURCE_FILE_AT_LINE (161)) ;
        enumerator_6837.gotoNextObject () ;
      }
      //-------- @errorInstructionForGeneration
      GALGAS_location location_7 (constinArgument_inNonTerminalName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_7, GALGAS_string ("the '").operator_concat (constinArgument_inNonTerminalName.reader_string (SOURCE_FILE_AT_LINE (164)) COMMA_SOURCE_FILE_AT_LINE (164)).operator_concat (GALGAS_string ("' nonterminal is redeclared with the new label(s):") COMMA_SOURCE_FILE_AT_LINE (164)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (164)) COMMA_SOURCE_FILE_AT_LINE (163)) ;
    }
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_8 (GALGAS_bool (kIsEqual, var_missingLabelSet.reader_count (SOURCE_FILE_AT_LINE (167)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (GALGAS_bool (kIsEqual, var_newLabelSet.reader_count (SOURCE_FILE_AT_LINE (167)).objectCompare (GALGAS_uint ((PMUInt32) 0U))) COMMA_SOURCE_FILE_AT_LINE (167))) ;
    if (test_8.isValidAndTrue ()) {
      //-------- @foreachInstructionForGeneration
      cEnumerator_nonterminalLabelMap enumerator_7129 (objectArray_5725->mAttribute_mLabelMap, true) ;
      cEnumerator_nonterminalLabelMap enumerator_7162 (constinArgument_inNonterminalLabelMap, true) ;
      //--- simple foreach instruction
      while (enumerator_7129.hasCurrentObject () && enumerator_7162.hasCurrentObject ()) {
        //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
        GALGAS_formalParameterSignature var_newSignature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (169)) ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_formalParameterSignature enumerator_7265 (enumerator_7162.current_mSignature (HERE), true) ;
        //--- simple foreach instruction
        while (enumerator_7265.hasCurrentObject ()) {
          //-------- @addAssignInstructionForGeneration
          var_newSignature.addAssign_operation (enumerator_7265.current_mFormalArgumentType (HERE), enumerator_7265.current_mFormalArgumentPassingMode (HERE) COMMA_SOURCE_FILE_AT_LINE (171)) ;
          enumerator_7265.gotoNextObject () ;
        }
        { //-------- @routineCallInstructionForGeneration
        routine_checkMethodSignatures (enumerator_7129.current_mSignatureForGeneration (HERE), enumerator_7129.current_mEndOfArgumentLocation (HERE), var_newSignature, enumerator_7162.current_mEndOfArgumentLocation (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (173)) ;
        } //-------- @routineCallInstructionForGeneration
        enumerator_7129.gotoNextObject () ;
        enumerator_7162.gotoNextObject () ;
      }
    }
  }else{
    { //-------- @modifierCallInstructionForGeneration
    ioArgument_ioNonterminalDeclarationMap.modifier_insertKey (constinArgument_inNonTerminalName, constinArgument_inNonterminalLabelMap, constinArgument_inHasParseLabel, inCompiler COMMA_SOURCE_FILE_AT_LINE (182)) ;
    } //-------- END @typeMethodInstructionForGeneration
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'buildNonterminalDeclarationsMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildNonterminalDeclarationsMap (const GALGAS_nonterminalDeclarationListAST constinArgument_inNonterminalDeclarationList,
                                              const GALGAS_semanticContext constinArgument_inSemanticContext,
                                              GALGAS_nonterminalMap & outArgument_outNonterminalDeclarationMap,
                                              C_Compiler * inCompiler
                                              COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outNonterminalDeclarationMap.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outNonterminalDeclarationMap = GALGAS_nonterminalMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (193)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_nonterminalDeclarationListAST enumerator_8127 (constinArgument_inNonterminalDeclarationList, true) ;
  //--- simple foreach instruction
  while (enumerator_8127.hasCurrentObject ()) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_nonterminalLabelMap var_nonterminalLabelMap = GALGAS_nonterminalLabelMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (196)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_nonTerminalLabelListAST enumerator_8208 (enumerator_8127.current_mLabels (HERE), true) ;
    //--- simple foreach instruction
    while (enumerator_8208.hasCurrentObject ()) {
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_formalParameterListForGeneration var_signatureForGeneration = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (198)) ;
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_formalParameterSignature var_signature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (199)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_formalParameterListAST enumerator_8378 (enumerator_8208.current_mFormalArgumentList (HERE), true) ;
      //--- simple foreach instruction
      while (enumerator_8378.hasCurrentObject ()) {
        //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
        GALGAS_unifiedTypeMapProxy var_t = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_8378.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (201)) ;
        //-------- @addAssignInstructionForGeneration
        var_signatureForGeneration.addAssign_operation (enumerator_8378.current_mFormalArgumentPassingMode (HERE), var_t, enumerator_8378.current_mFormalArgumentName (HERE), enumerator_8378.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (202)) COMMA_SOURCE_FILE_AT_LINE (202)) ;
        //-------- @addAssignInstructionForGeneration
        var_signature.addAssign_operation (var_t, enumerator_8378.current_mFormalArgumentPassingMode (HERE) COMMA_SOURCE_FILE_AT_LINE (203)) ;
        enumerator_8378.gotoNextObject () ;
      }
      { //-------- @modifierCallInstructionForGeneration
      var_nonterminalLabelMap.modifier_insertKey (enumerator_8208.current_mLabelName (HERE), var_signatureForGeneration, var_signature, enumerator_8208.current_mEndOfArgumentLocation (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (205)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_8208.gotoNextObject () ;
    }
    { //-------- @routineCallInstructionForGeneration
    routine_enterNonterminalNonTerminalInMapAndCheck (enumerator_8127.current_mNonterminalName (HERE), var_nonterminalLabelMap, enumerator_8127.current_mHasParseLabel (HERE), outArgument_outNonterminalDeclarationMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (207)) ;
    } //-------- @routineCallInstructionForGeneration
    enumerator_8127.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                  Routine 'analyzeSyntaxInstructionList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeSyntaxInstructionList (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                           const GALGAS_terminalMap constinArgument_inTerminalMap,
                                           const GALGAS_string constinArgument_inLexiqueName,
                                           const GALGAS_nonterminalMap constinArgument_inNonterminalMap,
                                           const GALGAS_string constinArgument_inComponentName,
                                           const GALGAS_syntaxInstructionList constinArgument_inSyntaxInstructionListAST,
                                           const GALGAS_location constinArgument_inEndOfBranchLocation,
                                           GALGAS_variableMap & ioArgument_ioVariableMap,
                                           GALGAS_uint & ioArgument_ioSelectMethodCount,
                                           GALGAS_semanticInstructionListForGeneration & outArgument_outInstructionListForGeneration,
                                           C_Compiler * inCompiler
                                           COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outInstructionListForGeneration.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outInstructionListForGeneration = GALGAS_semanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (453)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioVariableMap.modifier_openBranch (inCompiler COMMA_SOURCE_FILE_AT_LINE (455)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @foreachInstructionForGeneration
  cEnumerator_syntaxInstructionList enumerator_19124 (constinArgument_inSyntaxInstructionListAST, true) ;
  //--- simple foreach instruction
  while (enumerator_19124.hasCurrentObject ()) {
    //-------- @methodCallInstructionForGeneration
    callCategoryMethod_analyzeSyntaxInstruction ((const cPtr_syntaxInstructionAST *) enumerator_19124.current_mInstruction (HERE).ptr (), constinArgument_inAnalysisContext, constinArgument_inTerminalMap, constinArgument_inLexiqueName, constinArgument_inNonterminalMap, constinArgument_inComponentName, outArgument_outInstructionListForGeneration, ioArgument_ioVariableMap, ioArgument_ioSelectMethodCount, inCompiler COMMA_SOURCE_FILE_AT_LINE (458)) ;
    //-------- END @methodCallInstructionForGeneration
    enumerator_19124.gotoNextObject () ;
  }
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioVariableMap.modifier_closeBranch (constinArgument_inEndOfBranchLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (470)) ;
  } //-------- END @typeMethodInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'semanticAnalysisOfRuleLabel'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_semanticAnalysisOfRuleLabel (const GALGAS_formalParameterListAST constinArgument_inFormalArguments,
                                          const GALGAS_syntaxInstructionList constinArgument_inSyntaxInstructionList,
                                          const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                          const GALGAS_terminalMap constinArgument_inTerminalMap,
                                          const GALGAS_string constinArgument_inLexiqueName,
                                          const GALGAS_nonterminalMap constinArgument_inNonterminalMap,
                                          const GALGAS_string constinArgument_inComponentName,
                                          const GALGAS_location constinArgument_inEndOfInstructionList,
                                          GALGAS_uint & ioArgument_ioSelectMethodCount,
                                          GALGAS_formalParameterListForGeneration & outArgument_outSignatureForGeneration,
                                          GALGAS_formalParameterSignature & outArgument_outSignature,
                                          GALGAS_semanticInstructionListForGeneration & outArgument_outInstructionListForGeneration,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSignatureForGeneration.drop () ; // Release 'out' argument
  outArgument_outSignature.drop () ; // Release 'out' argument
  outArgument_outInstructionListForGeneration.drop () ; // Release 'out' argument
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_variableMap var_variableMap = GALGAS_variableMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (983)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_buildLocalVariableMapAndSignature (constinArgument_inAnalysisContext.mAttribute_mSemanticContext, constinArgument_inFormalArguments, var_variableMap, outArgument_outSignatureForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (984)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outSignature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (991)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_formalParameterListForGeneration enumerator_38460 (outArgument_outSignatureForGeneration, true) ;
  //--- simple foreach instruction
  while (enumerator_38460.hasCurrentObject ()) {
    //-------- @addAssignInstructionForGeneration
    outArgument_outSignature.addAssign_operation (enumerator_38460.current_mFormalArgumentType (HERE), enumerator_38460.current_mFormalArgumentPassingMode (HERE) COMMA_SOURCE_FILE_AT_LINE (993)) ;
    enumerator_38460.gotoNextObject () ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outInstructionListForGeneration = GALGAS_semanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (996)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_stringlist var_localVariableCppNameList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (997)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_syntaxInstructionList enumerator_38769 (constinArgument_inSyntaxInstructionList, true) ;
  //--- simple foreach instruction
  while (enumerator_38769.hasCurrentObject ()) {
    //-------- @methodCallInstructionForGeneration
    callCategoryMethod_analyzeSyntaxInstruction ((const cPtr_syntaxInstructionAST *) enumerator_38769.current_mInstruction (HERE).ptr (), constinArgument_inAnalysisContext, constinArgument_inTerminalMap, constinArgument_inLexiqueName, constinArgument_inNonterminalMap, constinArgument_inComponentName, outArgument_outInstructionListForGeneration, var_variableMap, ioArgument_ioSelectMethodCount, inCompiler COMMA_SOURCE_FILE_AT_LINE (999)) ;
    //-------- END @methodCallInstructionForGeneration
    enumerator_38769.gotoNextObject () ;
  }
  //-------- @methodCallInstructionForGeneration
  var_variableMap.method_checkAutomatonStates (constinArgument_inEndOfInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1011)) ;
  //-------- END @methodCallInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                Routine 'semanticAnalysisOfSyntaxComponent'                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_semanticAnalysisOfSyntaxComponent (const GALGAS_nonterminalDeclarationListAST constinArgument_inNonterminalDeclarationList,
                                                const GALGAS_syntaxRuleListAST constinArgument_inRuleList,
                                                const GALGAS_string constinArgument_inComponentName,
                                                const GALGAS_string constinArgument_inLexiqueName,
                                                const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                const GALGAS_terminalMap constinArgument_inTerminalMap,
                                                GALGAS_syntaxDeclarationForGeneration & outArgument_outSyntaxDeclarationForGeneration,
                                                C_Compiler * inCompiler
                                                COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSyntaxDeclarationForGeneration.drop () ; // Release 'out' argument
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_nonterminalMap var_nonterminalMap = GALGAS_nonterminalMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1031)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_buildNonterminalDeclarationsMap (constinArgument_inNonterminalDeclarationList, constinArgument_inSemanticContext, var_nonterminalMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1032)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @foreachInstructionForGeneration
  cEnumerator_syntaxRuleListAST enumerator_40161 (constinArgument_inRuleList, true) ;
  //--- simple foreach instruction
  while (enumerator_40161.hasCurrentObject ()) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_nonterminalLabelMap var_nonterminalLabelMap = GALGAS_nonterminalLabelMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1039)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_syntaxRuleLabelListAST enumerator_40245 (enumerator_40161.current_mLabelList (HERE), true) ;
    //--- simple foreach instruction
    while (enumerator_40245.hasCurrentObject ()) {
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_formalParameterListForGeneration var_signatureForGeneration = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1041)) ;
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_formalParameterSignature var_signature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1042)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_formalParameterListAST enumerator_40412 (enumerator_40245.current_mFormalArguments (HERE), true) ;
      //--- simple foreach instruction
      while (enumerator_40412.hasCurrentObject ()) {
        //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
        GALGAS_unifiedTypeMapProxy var_type = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_40412.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1044)) ;
        //-------- @addAssignInstructionForGeneration
        var_signatureForGeneration.addAssign_operation (enumerator_40412.current_mFormalArgumentPassingMode (HERE), var_type, enumerator_40412.current_mFormalArgumentName (HERE), GALGAS_string ("argument_").operator_concat (enumerator_40412.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (1045)) COMMA_SOURCE_FILE_AT_LINE (1045)) COMMA_SOURCE_FILE_AT_LINE (1045)) ;
        //-------- @addAssignInstructionForGeneration
        var_signature.addAssign_operation (var_type, enumerator_40412.current_mFormalArgumentPassingMode (HERE) COMMA_SOURCE_FILE_AT_LINE (1046)) ;
        enumerator_40412.gotoNextObject () ;
      }
      { //-------- @modifierCallInstructionForGeneration
      var_nonterminalLabelMap.modifier_insertKey (enumerator_40245.current_mLabelName (HERE), var_signatureForGeneration, var_signature, enumerator_40245.current_mEndOfArgumentLocation (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1048)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_40245.gotoNextObject () ;
    }
    //-------- @readOnlyWithInstructionForGeneration
    const cMapElement_nonterminalMap * objectArray_40878 = (const cMapElement_nonterminalMap *) var_nonterminalMap.readAccessForWithInstruction_hasKey (enumerator_40161.current_mNonterminalName (HERE).reader_string (SOURCE_FILE_AT_LINE (1050))) ;
    if (NULL != objectArray_40878) {
        macroValidSharedObject (objectArray_40878, const cMapElement_nonterminalMap) ;
      { //-------- @routineCallInstructionForGeneration
      routine_enterNonterminalNonTerminalInMapAndCheck (enumerator_40161.current_mNonterminalName (HERE), var_nonterminalLabelMap, objectArray_40878->mAttribute_mHasParseLabel, var_nonterminalMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1051)) ;
      } //-------- @routineCallInstructionForGeneration
    }else{
      { //-------- @routineCallInstructionForGeneration
      routine_enterNonterminalNonTerminalInMapAndCheck (enumerator_40161.current_mNonterminalName (HERE), var_nonterminalLabelMap, GALGAS_bool (false), var_nonterminalMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1053)) ;
      } //-------- @routineCallInstructionForGeneration
    }
    enumerator_40161.gotoNextObject () ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1060)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1057)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_uint var_selectMethodCount = GALGAS_uint ((PMUInt32) 0U) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_ruleDeclarationList var_ruleDeclarationList = GALGAS_ruleDeclarationList::constructor_emptyList (SOURCE_FILE_AT_LINE (1065)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_uint var_newRuleIndex = GALGAS_uint ((PMUInt32) 0U) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_syntaxRuleListAST enumerator_41506 (constinArgument_inRuleList, true) ;
  //--- simple foreach instruction
  while (enumerator_41506.hasCurrentObject ()) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_ruleLabelImplementationList var_ruleLabelImplementationList = GALGAS_ruleLabelImplementationList::constructor_emptyList (SOURCE_FILE_AT_LINE (1068)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_uint var_localSelectMethodCount = var_selectMethodCount ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_syntaxRuleLabelListAST enumerator_41663 (enumerator_41506.current_mLabelList (HERE), true) ;
    //--- simple foreach instruction
    while (enumerator_41663.hasCurrentObject ()) {
      //-------- @assignmentInstructionForGeneration
      var_localSelectMethodCount = var_selectMethodCount ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_formalParameterListForGeneration var_signatureForGeneration ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_formalParameterSignature var_signature ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_semanticInstructionListForGeneration var_instructionListForGeneration ;
      { //-------- @routineCallInstructionForGeneration
      routine_semanticAnalysisOfRuleLabel (enumerator_41663.current_mFormalArguments (HERE), enumerator_41663.current_mSyntaxInstructionList (HERE), var_analysisContext, constinArgument_inTerminalMap, constinArgument_inLexiqueName, var_nonterminalMap, constinArgument_inComponentName, enumerator_41663.current_mEndOfInstructionList (HERE), var_localSelectMethodCount, var_signatureForGeneration, var_signature, var_instructionListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1075)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @addAssignInstructionForGeneration
      var_ruleLabelImplementationList.addAssign_operation (enumerator_41663.current_mLabelName (HERE), var_signatureForGeneration, var_signature, enumerator_41663.current_mEndOfArgumentLocation (HERE), var_instructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1089)) ;
      enumerator_41663.gotoNextObject () ;
    }
    //-------- @assignmentInstructionForGeneration
    var_selectMethodCount = var_localSelectMethodCount ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_hasParseLabel ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_nonterminalLabelMap joker_42603_0 ; // Joker input parameter
    var_nonterminalMap.method_searchKey (enumerator_41506.current_mNonterminalName (HERE), joker_42603_0, var_hasParseLabel, inCompiler COMMA_SOURCE_FILE_AT_LINE (1099)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @addAssignInstructionForGeneration
    var_ruleDeclarationList.addAssign_operation (enumerator_41506.current_mNonterminalName (HERE).reader_string (SOURCE_FILE_AT_LINE (1101)), var_newRuleIndex, var_ruleLabelImplementationList, var_hasParseLabel COMMA_SOURCE_FILE_AT_LINE (1100)) ;
    //-------- @incrementInstructionForGeneration
    var_newRuleIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1106)) ;
    enumerator_41506.gotoNextObject () ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outSyntaxDeclarationForGeneration = GALGAS_syntaxDeclarationForGeneration::constructor_new (GALGAS_bool (true), constinArgument_inComponentName, constinArgument_inLexiqueName, var_nonterminalMap, var_ruleDeclarationList, var_selectMethodCount COMMA_SOURCE_FILE_AT_LINE (1109)) ;
}


//---------------------------------------------------------------------------*

enumComparisonResult GALGAS_syntaxDeclarationForGeneration::objectCompare (const GALGAS_syntaxDeclarationForGeneration & inOperand) const {
  enumComparisonResult result = GALGAS_semanticDeclarationForGeneration::objectCompare (inOperand) ;
  const cPtr_syntaxDeclarationForGeneration * p = (const cPtr_syntaxDeclarationForGeneration *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_syntaxDeclarationForGeneration) ;
  const cPtr_syntaxDeclarationForGeneration * q = (const cPtr_syntaxDeclarationForGeneration *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_syntaxDeclarationForGeneration) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mComponentName.objectCompare (q->mAttribute_mComponentName) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mLexiqueName.objectCompare (q->mAttribute_mLexiqueName) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mNonterminalDeclarationMap.objectCompare (q->mAttribute_mNonterminalDeclarationMap) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mRuleDeclarationList.objectCompare (q->mAttribute_mRuleDeclarationList) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mSelectMethodCount.objectCompare (q->mAttribute_mSelectMethodCount) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_syntaxDeclarationForGeneration::GALGAS_syntaxDeclarationForGeneration (void) :
GALGAS_semanticDeclarationForGeneration () {
}

//---------------------------------------------------------------------------*

GALGAS_syntaxDeclarationForGeneration::GALGAS_syntaxDeclarationForGeneration (const cPtr_syntaxDeclarationForGeneration * inSourcePtr) :
GALGAS_semanticDeclarationForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_syntaxDeclarationForGeneration) ;
}

//---------------------------------------------------------------------------*

GALGAS_syntaxDeclarationForGeneration GALGAS_syntaxDeclarationForGeneration::constructor_new (const GALGAS_bool & inAttribute_mIsGlobal,
                                                                                              const GALGAS_string & inAttribute_mComponentName,
                                                                                              const GALGAS_string & inAttribute_mLexiqueName,
                                                                                              const GALGAS_nonterminalMap & inAttribute_mNonterminalDeclarationMap,
                                                                                              const GALGAS_ruleDeclarationList & inAttribute_mRuleDeclarationList,
                                                                                              const GALGAS_uint & inAttribute_mSelectMethodCount
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_syntaxDeclarationForGeneration result ;
  if (inAttribute_mIsGlobal.isValid () && inAttribute_mComponentName.isValid () && inAttribute_mLexiqueName.isValid () && inAttribute_mNonterminalDeclarationMap.isValid () && inAttribute_mRuleDeclarationList.isValid () && inAttribute_mSelectMethodCount.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_syntaxDeclarationForGeneration (inAttribute_mIsGlobal, inAttribute_mComponentName, inAttribute_mLexiqueName, inAttribute_mNonterminalDeclarationMap, inAttribute_mRuleDeclarationList, inAttribute_mSelectMethodCount COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_syntaxDeclarationForGeneration::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_syntaxDeclarationForGeneration * p = (cPtr_syntaxDeclarationForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_syntaxDeclarationForGeneration) ;
    cPtr_syntaxDeclarationForGeneration * r = NULL ;
    macroMyNew (r, cPtr_syntaxDeclarationForGeneration (p->mAttribute_mIsGlobal, p->mAttribute_mComponentName, p->mAttribute_mLexiqueName, p->mAttribute_mNonterminalDeclarationMap, p->mAttribute_mRuleDeclarationList, p->mAttribute_mSelectMethodCount COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_syntaxDeclarationForGeneration::reader_mComponentName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_syntaxDeclarationForGeneration * p = (const cPtr_syntaxDeclarationForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_syntaxDeclarationForGeneration) ;
    result = p->mAttribute_mComponentName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_syntaxDeclarationForGeneration::reader_mLexiqueName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_syntaxDeclarationForGeneration * p = (const cPtr_syntaxDeclarationForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_syntaxDeclarationForGeneration) ;
    result = p->mAttribute_mLexiqueName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nonterminalMap GALGAS_syntaxDeclarationForGeneration::reader_mNonterminalDeclarationMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_nonterminalMap result ;
  if (NULL != mObjectPtr) {
    const cPtr_syntaxDeclarationForGeneration * p = (const cPtr_syntaxDeclarationForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_syntaxDeclarationForGeneration) ;
    result = p->mAttribute_mNonterminalDeclarationMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ruleDeclarationList GALGAS_syntaxDeclarationForGeneration::reader_mRuleDeclarationList (UNUSED_LOCATION_ARGS) const {
  GALGAS_ruleDeclarationList result ;
  if (NULL != mObjectPtr) {
    const cPtr_syntaxDeclarationForGeneration * p = (const cPtr_syntaxDeclarationForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_syntaxDeclarationForGeneration) ;
    result = p->mAttribute_mRuleDeclarationList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_syntaxDeclarationForGeneration::reader_mSelectMethodCount (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_syntaxDeclarationForGeneration * p = (const cPtr_syntaxDeclarationForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_syntaxDeclarationForGeneration) ;
    result = p->mAttribute_mSelectMethodCount ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//          Pointer class for @syntaxDeclarationForGeneration class          *
//---------------------------------------------------------------------------*

cPtr_syntaxDeclarationForGeneration::cPtr_syntaxDeclarationForGeneration (const GALGAS_bool & in_mIsGlobal,
                                                                          const GALGAS_string & in_mComponentName,
                                                                          const GALGAS_string & in_mLexiqueName,
                                                                          const GALGAS_nonterminalMap & in_mNonterminalDeclarationMap,
                                                                          const GALGAS_ruleDeclarationList & in_mRuleDeclarationList,
                                                                          const GALGAS_uint & in_mSelectMethodCount
                                                                          COMMA_LOCATION_ARGS) :
cPtr_semanticDeclarationForGeneration (in_mIsGlobal COMMA_THERE),
mAttribute_mComponentName (in_mComponentName),
mAttribute_mLexiqueName (in_mLexiqueName),
mAttribute_mNonterminalDeclarationMap (in_mNonterminalDeclarationMap),
mAttribute_mRuleDeclarationList (in_mRuleDeclarationList),
mAttribute_mSelectMethodCount (in_mSelectMethodCount) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_syntaxDeclarationForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_syntaxDeclarationForGeneration ;
}

void cPtr_syntaxDeclarationForGeneration::description (C_String & ioString,
                                                       const PMSInt32 inIndentation) const {
  ioString << "[@syntaxDeclarationForGeneration:" ;
  mAttribute_mIsGlobal.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mComponentName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mLexiqueName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mNonterminalDeclarationMap.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mRuleDeclarationList.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mSelectMethodCount.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                   @syntaxDeclarationForGeneration type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_syntaxDeclarationForGeneration ("syntaxDeclarationForGeneration",
                                                       & kTypeDescriptor_GALGAS_semanticDeclarationForGeneration) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_syntaxDeclarationForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_syntaxDeclarationForGeneration ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_syntaxDeclarationForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_syntaxDeclarationForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_syntaxDeclarationForGeneration GALGAS_syntaxDeclarationForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler,
                                                                                            const GALGAS_location & inErrorLocation
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_syntaxDeclarationForGeneration result ;
  const GALGAS_syntaxDeclarationForGeneration * p = (const GALGAS_syntaxDeclarationForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_syntaxDeclarationForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "syntaxDeclarationForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@syntaxDeclarationForGeneration appendDeclaration1'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_syntaxDeclarationForGeneration_appendDeclaration_31_ (const cPtr_semanticDeclarationForGeneration * inObject,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_syntaxDeclarationForGeneration * object = (const cPtr_syntaxDeclarationForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_syntaxDeclarationForGeneration) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_uintlist var_selectMethodList = GALGAS_uintlist::constructor_emptyList (SOURCE_FILE_AT_LINE (107)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_uint var_idx = GALGAS_uint ((PMUInt32) 0U) ;
  //-------- @loopInstructionForGeneration
  if (object->mAttribute_mSelectMethodCount.add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (109)).isValid ()) {
    PMUInt32 variant_4763 = object->mAttribute_mSelectMethodCount.add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (109)).uintValue () ;
    bool loop_4763 = true ;
    while (loop_4763) {
      loop_4763 = GALGAS_bool (kIsStrictInf, var_idx.objectCompare (object->mAttribute_mSelectMethodCount)).isValid () ;
      if (loop_4763) {
        loop_4763 = GALGAS_bool (kIsStrictInf, var_idx.objectCompare (object->mAttribute_mSelectMethodCount)).boolValue () ;
      }
      if (loop_4763 && (0 == variant_4763)) {
        loop_4763 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (109)) ;
      }
      if (loop_4763) {
        variant_4763 -- ;
        //-------- @addAssignInstructionForGeneration
        var_selectMethodList.addAssign_operation (var_idx COMMA_SOURCE_FILE_AT_LINE (111)) ;
        //-------- @incrementInstructionForGeneration
        var_idx.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (112)) ;
      }
    }
  }
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string (filewrapperTemplate_syntaxFileGenerationTemplate_syntaxAnalyserClassDeclaration (inCompiler, object->mAttribute_mComponentName, object->mAttribute_mLexiqueName, object->mAttribute_mNonterminalDeclarationMap, object->mAttribute_mRuleDeclarationList, var_selectMethodList COMMA_SOURCE_FILE_AT_LINE (114))) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_syntaxDeclarationForGeneration_appendDeclaration_31_ (void) {
  enterCategoryReader_appendDeclaration_31_ (kTypeDescriptor_GALGAS_syntaxDeclarationForGeneration.mSlotID,
                                             categoryReader_syntaxDeclarationForGeneration_appendDeclaration_31_) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_syntaxDeclarationForGeneration_appendDeclaration_31_ (defineCategoryReader_syntaxDeclarationForGeneration_appendDeclaration_31_, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Abstract category method '@syntaxInstructionAST analyzeSyntaxInstruction' *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_syntaxInstructionAST_analyzeSyntaxInstruction> gCategoryMethodTable_syntaxInstructionAST_analyzeSyntaxInstruction ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyzeSyntaxInstruction (const PMSInt32 inClassIndex,
                                                   categoryMethodSignature_syntaxInstructionAST_analyzeSyntaxInstruction inMethod) {
  gCategoryMethodTable_syntaxInstructionAST_analyzeSyntaxInstruction.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_syntaxInstructionAST_analyzeSyntaxInstruction (void) {
  gCategoryMethodTable_syntaxInstructionAST_analyzeSyntaxInstruction.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_syntaxInstructionAST_analyzeSyntaxInstruction (NULL,
                                                                          freeCategoryMethod_syntaxInstructionAST_analyzeSyntaxInstruction) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_analyzeSyntaxInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                  const GALGAS_analysisContext constin_inAnalysisContext,
                                                  const GALGAS_terminalMap constin_inTerminalMap,
                                                  const GALGAS_string constin_inLexiqueName,
                                                  const GALGAS_nonterminalMap constin_inNonterminalMap,
                                                  const GALGAS_string constin_inComponentName,
                                                  GALGAS_semanticInstructionListForGeneration & io_ioInstructionListForGeneration,
                                                  GALGAS_variableMap & io_ioVariableMap,
                                                  GALGAS_uint & io_ioSelectMethodCount,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_syntaxInstructionAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_syntaxInstructionAST_analyzeSyntaxInstruction f = NULL ;
    if (classIndex < gCategoryMethodTable_syntaxInstructionAST_analyzeSyntaxInstruction.count ()) {
      f = gCategoryMethodTable_syntaxInstructionAST_analyzeSyntaxInstruction (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_syntaxInstructionAST_analyzeSyntaxInstruction.count ()) {
           f = gCategoryMethodTable_syntaxInstructionAST_analyzeSyntaxInstruction (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_syntaxInstructionAST_analyzeSyntaxInstruction.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    f (inObject, constin_inAnalysisContext, constin_inTerminalMap, constin_inLexiqueName, constin_inNonterminalMap, constin_inComponentName, io_ioInstructionListForGeneration, io_ioVariableMap, io_ioSelectMethodCount, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@semanticInstructionAST analyzeSyntaxInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_semanticInstructionAST_analyzeSyntaxInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                                            const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                            const GALGAS_terminalMap /* constinArgument_inTerminalMap */,
                                                                            const GALGAS_string /* constinArgument_inLexiqueName */,
                                                                            const GALGAS_nonterminalMap /* constinArgument_inNonterminalMap */,
                                                                            const GALGAS_string /* constinArgument_inComponentName */,
                                                                            GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                            GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                            GALGAS_uint & /* ioArgument_ioSelectMethodCount */,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_semanticInstructionAST * object = (const cPtr_semanticInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_semanticInstructionAST) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_semanticInstructionAST var_t = object ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticInstruction ((const cPtr_semanticInstructionAST *) var_t.ptr (), constinArgument_inAnalysisContext, ioArgument_ioInstructionListForGeneration, ioArgument_ioVariableMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (241)) ;
  //-------- END @methodCallInstructionForGeneration
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_semanticInstructionAST_analyzeSyntaxInstruction (void) {
  enterCategoryMethod_analyzeSyntaxInstruction (kTypeDescriptor_GALGAS_semanticInstructionAST.mSlotID,
                                                categoryMethod_semanticInstructionAST_analyzeSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_semanticInstructionAST_analyzeSyntaxInstruction (defineCategoryMethod_semanticInstructionAST_analyzeSyntaxInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@nonterminalCallInstruction analyzeSyntaxInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_nonterminalCallInstruction_analyzeSyntaxInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                                                const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                const GALGAS_terminalMap /* constinArgument_inTerminalMap */,
                                                                                const GALGAS_string /* constinArgument_inLexiqueName */,
                                                                                const GALGAS_nonterminalMap constinArgument_inNonterminalMap,
                                                                                const GALGAS_string /* constinArgument_inComponentName */,
                                                                                GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                GALGAS_uint & /* ioArgument_ioSelectMethodCount */,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_nonterminalCallInstruction * object = (const cPtr_nonterminalCallInstruction *) inObject ;
  macroValidSharedObject (object, const cPtr_nonterminalCallInstruction) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_nonterminalLabelMap var_labelMap ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_bool var_hasParseLabel ;
  //-------- @methodCallInstructionForGeneration
  constinArgument_inNonterminalMap.method_searchKey (object->mAttribute_mNonterminalName, var_labelMap, var_hasParseLabel, inCompiler COMMA_SOURCE_FILE_AT_LINE (263)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_formalParameterSignature var_signature ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (GALGAS_bool (kIsEqual, object->mAttribute_mLabelName.reader_string (SOURCE_FILE_AT_LINE (265)).objectCompare (GALGAS_string ("parse")))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_1 (var_hasParseLabel.operator_not (SOURCE_FILE_AT_LINE (266))) ;
    if (test_1.isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_2 (object->mAttribute_mLabelName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("the '<").operator_concat (object->mAttribute_mNonterminalName.reader_string (SOURCE_FILE_AT_LINE (268)) COMMA_SOURCE_FILE_AT_LINE (268)).operator_concat (GALGAS_string (">' nonterminal does not declare the 'parse' label") COMMA_SOURCE_FILE_AT_LINE (268)) COMMA_SOURCE_FILE_AT_LINE (267)) ;
      var_signature.drop () ; // Release error dropped variable
    }else if (test_1.isValid ()) {
      //-------- @assignmentInstructionForGeneration
      var_signature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (272)) ;
    }
  }else if (test_0.isValid ()) {
    //-------- @methodCallInstructionForGeneration
    GALGAS_formalParameterListForGeneration joker_11445_0 ; // Joker input parameter
    GALGAS_location joker_11459_0 ; // Joker input parameter
    var_labelMap.method_searchKey (object->mAttribute_mLabelName, joker_11445_0, var_signature, joker_11459_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (275)) ;
    //-------- END @methodCallInstructionForGeneration
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS_actualParameterListForGeneration var_actualParameterListForGeneration ;
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeRoutineArguments (constinArgument_inAnalysisContext, object->mAttribute_mNonterminalName, GALGAS_string ("'<").operator_concat (object->mAttribute_mNonterminalName.reader_string (SOURCE_FILE_AT_LINE (282)) COMMA_SOURCE_FILE_AT_LINE (282)).operator_concat (GALGAS_string (">' nonterminal declaration") COMMA_SOURCE_FILE_AT_LINE (282)), var_signature, object->mAttribute_mActualParameterList, ioArgument_ioVariableMap, var_actualParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (279)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_nonterminalInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mNonterminalName.reader_string (SOURCE_FILE_AT_LINE (291)), object->mAttribute_mLabelName.reader_string (SOURCE_FILE_AT_LINE (292)), var_actualParameterListForGeneration COMMA_SOURCE_FILE_AT_LINE (289)) COMMA_SOURCE_FILE_AT_LINE (289)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_nonterminalCallInstruction_analyzeSyntaxInstruction (void) {
  enterCategoryMethod_analyzeSyntaxInstruction (kTypeDescriptor_GALGAS_nonterminalCallInstruction.mSlotID,
                                                categoryMethod_nonterminalCallInstruction_analyzeSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_nonterminalCallInstruction_analyzeSyntaxInstruction (defineCategoryMethod_nonterminalCallInstruction_analyzeSyntaxInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@nonterminalInstructionForGeneration generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_nonterminalInstructionForGeneration_generateInstruction (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                    const GALGAS_bool constinArgument_inGenerateCheckValid,
                                                                                    GALGAS_uint & ioArgument_ioTemporaryVariableIndex,
                                                                                    GALGAS_stringset & ioArgument_ioUnusedVariableCppNameSet,
                                                                                    GALGAS_string & ioArgument_ioGeneratedCode,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_nonterminalInstructionForGeneration * object = (const cPtr_nonterminalInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_nonterminalInstructionForGeneration) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("//-------- @nonterminalInstructionForGeneration\n") COMMA_SOURCE_FILE_AT_LINE (305)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_stringlist var_parameterCppNameList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (307)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_stringlist var_jokerParametersToReleaseList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (308)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_stringlist var_inputVariableList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (309)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_actualParameterListForGeneration enumerator_12589 (object->mAttribute_mActualParameterList, true) ;
  //--- simple foreach instruction
  while (enumerator_12589.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_string var_parameterCppName ;
    //-------- @methodCallInstructionForGeneration
    callCategoryMethod_generateActualParameter ((const cPtr_actualParameterForGeneration *) enumerator_12589.current_mActualParameter (HERE).ptr (), ioArgument_ioTemporaryVariableIndex, ioArgument_ioGeneratedCode, var_jokerParametersToReleaseList, var_inputVariableList, ioArgument_ioUnusedVariableCppNameSet, var_parameterCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (312)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @addAssignInstructionForGeneration
    var_parameterCppNameList.addAssign_operation (var_parameterCppName COMMA_SOURCE_FILE_AT_LINE (313)) ;
    enumerator_12589.gotoNextObject () ;
  }
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("nt_").operator_concat (object->mAttribute_mNonterminalName.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (316)) COMMA_SOURCE_FILE_AT_LINE (316)).operator_concat (GALGAS_string ("_") COMMA_SOURCE_FILE_AT_LINE (316)).operator_concat (object->mAttribute_mLabelName.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (316)) COMMA_SOURCE_FILE_AT_LINE (316)).operator_concat (GALGAS_string (" (") COMMA_SOURCE_FILE_AT_LINE (316)) COMMA_SOURCE_FILE_AT_LINE (316)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_stringlist enumerator_13064 (var_parameterCppNameList, true) ;
  //--- simple foreach instruction
  while (enumerator_13064.hasCurrentObject ()) {
    //-------- @appendInstructionForGeneration
    ioArgument_ioGeneratedCode.dotAssign_operation (enumerator_13064.current_mValue (HERE).operator_concat (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (318)) COMMA_SOURCE_FILE_AT_LINE (318)) ;
    enumerator_13064.gotoNextObject () ;
  }
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioUnusedVariableCppNameSet.modifier_removeKey (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (320)) COMMA_SOURCE_FILE_AT_LINE (320)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (321)).operator_concat (GALGAS_string (") ;\n") COMMA_SOURCE_FILE_AT_LINE (321)) COMMA_SOURCE_FILE_AT_LINE (321)) ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (constinArgument_inGenerateCheckValid) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @appendInstructionForGeneration
    ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("#ifndef DO_NOT_GENERATE_CHECKINGS\n") COMMA_SOURCE_FILE_AT_LINE (324)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_stringlist enumerator_13369 (var_inputVariableList, true) ;
    //--- simple foreach instruction
    while (enumerator_13369.hasCurrentObject ()) {
      //-------- @appendInstructionForGeneration
      ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("  ").operator_concat (enumerator_13369.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (326)).operator_concat (GALGAS_string (".checkIsValid (HERE) ;\n") COMMA_SOURCE_FILE_AT_LINE (326)) COMMA_SOURCE_FILE_AT_LINE (326)) ;
      enumerator_13369.gotoNextObject () ;
    }
    //-------- @appendInstructionForGeneration
    ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("#endif\n") COMMA_SOURCE_FILE_AT_LINE (328)) ;
  }
  //-------- @foreachInstructionForGeneration
  cEnumerator_stringlist enumerator_13579 (var_jokerParametersToReleaseList, true) ;
  //--- simple foreach instruction
  while (enumerator_13579.hasCurrentObject ()) {
    //-------- @appendInstructionForGeneration
    ioArgument_ioGeneratedCode.dotAssign_operation (enumerator_13579.current_mValue (HERE).operator_concat (GALGAS_string (".drop () ; // Release temporary input variables (joker in source)\n") COMMA_SOURCE_FILE_AT_LINE (332)) COMMA_SOURCE_FILE_AT_LINE (332)) ;
    enumerator_13579.gotoNextObject () ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_nonterminalInstructionForGeneration_generateInstruction (void) {
  enterCategoryMethod_generateInstruction (kTypeDescriptor_GALGAS_nonterminalInstructionForGeneration.mSlotID,
                                           categoryMethod_nonterminalInstructionForGeneration_generateInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_nonterminalInstructionForGeneration_generateInstruction (defineCategoryMethod_nonterminalInstructionForGeneration_generateInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@terminalCheckInstruction analyzeSyntaxInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_terminalCheckInstruction_analyzeSyntaxInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                                              const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                              const GALGAS_terminalMap constinArgument_inTerminalMap,
                                                                              const GALGAS_string constinArgument_inLexiqueName,
                                                                              const GALGAS_nonterminalMap /* constinArgument_inNonterminalMap */,
                                                                              const GALGAS_string /* constinArgument_inComponentName */,
                                                                              GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                              GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                              GALGAS_uint & /* ioArgument_ioSelectMethodCount */,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_terminalCheckInstruction * object = (const cPtr_terminalCheckInstruction *) inObject ;
  macroValidSharedObject (object, const cPtr_terminalCheckInstruction) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_lexicalSentValueList var_sentAttributeList ;
  //-------- @methodCallInstructionForGeneration
  constinArgument_inTerminalMap.method_searchKey (object->mAttribute_mTerminalName, var_sentAttributeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (349)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (GALGAS_bool (kIsNotEqual, object->mAttribute_mActualInputParameterList.reader_length (SOURCE_FILE_AT_LINE (351)).objectCompare (var_sentAttributeList.reader_length (SOURCE_FILE_AT_LINE (351))))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    //--- @ifExpressionForGeneration
    GALGAS_string temp_1 ;
    if (GALGAS_bool (kIsStrictSup, var_sentAttributeList.reader_length (SOURCE_FILE_AT_LINE (354)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
      temp_1 = GALGAS_string ("s") ;
    }else{
      temp_1 = GALGAS_string::makeEmptyString () ;
    }
    //--- @ifExpressionForGeneration
    GALGAS_string temp_2 ;
    if (GALGAS_bool (kIsStrictSup, object->mAttribute_mActualInputParameterList.reader_length (SOURCE_FILE_AT_LINE (357)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
      temp_2 = GALGAS_string ("s") ;
    }else{
      temp_2 = GALGAS_string::makeEmptyString () ;
    }
    GALGAS_location location_3 (object->mAttribute_mTerminalName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_3, GALGAS_string ("naming the '$").operator_concat (object->mAttribute_mTerminalName.reader_string (SOURCE_FILE_AT_LINE (353)) COMMA_SOURCE_FILE_AT_LINE (353)).operator_concat (GALGAS_string ("$' requires ") COMMA_SOURCE_FILE_AT_LINE (353)).operator_concat (var_sentAttributeList.reader_length (SOURCE_FILE_AT_LINE (353)).reader_string (SOURCE_FILE_AT_LINE (353)) COMMA_SOURCE_FILE_AT_LINE (353)).operator_concat (GALGAS_string ("parameter") COMMA_SOURCE_FILE_AT_LINE (354)).operator_concat (temp_1 COMMA_SOURCE_FILE_AT_LINE (354)).operator_concat (GALGAS_string (", but this instruction names ") COMMA_SOURCE_FILE_AT_LINE (355)).operator_concat (object->mAttribute_mActualInputParameterList.reader_length (SOURCE_FILE_AT_LINE (356)).reader_string (SOURCE_FILE_AT_LINE (356)) COMMA_SOURCE_FILE_AT_LINE (356)).operator_concat (GALGAS_string (" parameter") COMMA_SOURCE_FILE_AT_LINE (356)).operator_concat (temp_2 COMMA_SOURCE_FILE_AT_LINE (357)) COMMA_SOURCE_FILE_AT_LINE (352)) ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_terminalCheckAssignementList var_terminalCheckAssignementList = GALGAS_terminalCheckAssignementList::constructor_emptyList (SOURCE_FILE_AT_LINE (361)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_actualInputParameterListAST enumerator_14864 (object->mAttribute_mActualInputParameterList, true) ;
  cEnumerator_lexicalSentValueList enumerator_14885 (var_sentAttributeList, true) ;
  //--- simple foreach instruction
  while (enumerator_14864.hasCurrentObject () && enumerator_14885.hasCurrentObject ()) {
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_4 (GALGAS_bool (kIsStrictSup, enumerator_14864.current_mActualParameterName (HERE).mAttribute_string.reader_length (SOURCE_FILE_AT_LINE (363)).objectCompare (GALGAS_uint ((PMUInt32) 0U)))) ;
    if (test_4.isValidAndTrue ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_unifiedTypeMapProxy var_type ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_string var_cppName ;
      //-------- @ifInstructionForGeneration
      const GALGAS_bool test_5 (GALGAS_bool (kIsStrictSup, enumerator_14864.current_mActualParameterTypeName (HERE).mAttribute_string.reader_length (SOURCE_FILE_AT_LINE (366)).objectCompare (GALGAS_uint ((PMUInt32) 0U)))) ;
      if (test_5.isValidAndTrue ()) {
        //-------- @assignmentInstructionForGeneration
        var_cppName = GALGAS_string ("var_").operator_concat (enumerator_14864.current_mActualParameterName (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (367)) COMMA_SOURCE_FILE_AT_LINE (367)) ;
        //-------- @assignmentInstructionForGeneration
        var_type = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, enumerator_14864.current_mActualParameterTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (368)) ;
        { //-------- @modifierCallInstructionForGeneration
        ioArgument_ioVariableMap.modifier_insertDefinedLocalVariable (enumerator_14864.current_mActualParameterName (HERE), var_type, var_cppName, var_cppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (369)) ;
        } //-------- END @typeMethodInstructionForGeneration
      }else if (test_5.isValid ()) {
        { //-------- @modifierCallInstructionForGeneration
        GALGAS_string joker_15465_0 ; // Joker input parameter
        ioArgument_ioVariableMap.modifier_searchForWriteAccess (enumerator_14864.current_mActualParameterName (HERE), var_type, var_cppName, joker_15465_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (371)) ;
        } //-------- END @typeMethodInstructionForGeneration
      }
      //-------- @localVariableDeclarationForGeneration
      GALGAS_unifiedTypeMapProxy var_expectedType ;
      //------- @switchInstructionForGeneration
      if (enumerator_14885.current_mLexicalType (HERE).isValid ()) {
        switch (enumerator_14885.current_mLexicalType (HERE).enumValue ()) {
        case GALGAS_lexicalTypeEnum::kNotBuilt:
          break ;
        case GALGAS_lexicalTypeEnum::kEnum_lexicalType_5F_string: {
          //-------- @assignmentInstructionForGeneration
          var_expectedType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLStringType ;
          } break ;
        case GALGAS_lexicalTypeEnum::kEnum_lexicalType_5F_char: {
          //-------- @assignmentInstructionForGeneration
          var_expectedType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLCharType ;
          } break ;
        case GALGAS_lexicalTypeEnum::kEnum_lexicalType_5F_uint: {
          //-------- @assignmentInstructionForGeneration
          var_expectedType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLUIntType ;
          } break ;
        case GALGAS_lexicalTypeEnum::kEnum_lexicalType_5F_uint_36__34_: {
          //-------- @assignmentInstructionForGeneration
          var_expectedType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLUInt_36__34_Type ;
          } break ;
        case GALGAS_lexicalTypeEnum::kEnum_lexicalType_5F_sint: {
          //-------- @assignmentInstructionForGeneration
          var_expectedType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLSIntType ;
          } break ;
        case GALGAS_lexicalTypeEnum::kEnum_lexicalType_5F_sint_36__34_: {
          //-------- @assignmentInstructionForGeneration
          var_expectedType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLSInt_36__34_Type ;
          } break ;
        case GALGAS_lexicalTypeEnum::kEnum_lexicalType_5F_double: {
          //-------- @assignmentInstructionForGeneration
          var_expectedType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLDoubleType ;
          } break ;
        }
      }
      //-------- @ifInstructionForGeneration
      const GALGAS_bool test_6 (GALGAS_bool (kIsNotEqual, var_expectedType.objectCompare (var_type))) ;
      if (test_6.isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        GALGAS_location location_7 (enumerator_14864.current_mActualParameterName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_7, GALGAS_string ("the '").operator_concat (enumerator_14864.current_mActualParameterName (HERE).reader_string (SOURCE_FILE_AT_LINE (385)) COMMA_SOURCE_FILE_AT_LINE (385)).operator_concat (GALGAS_string ("' parameter has the '@") COMMA_SOURCE_FILE_AT_LINE (385)).operator_concat (var_type.reader_identifierRepresentation (inCompiler COMMA_SOURCE_FILE_AT_LINE (385)) COMMA_SOURCE_FILE_AT_LINE (385)).operator_concat (GALGAS_string (", bit an '@") COMMA_SOURCE_FILE_AT_LINE (386)).operator_concat (var_expectedType.reader_identifierRepresentation (inCompiler COMMA_SOURCE_FILE_AT_LINE (386)) COMMA_SOURCE_FILE_AT_LINE (386)).operator_concat (GALGAS_string ("' parameter is required here") COMMA_SOURCE_FILE_AT_LINE (386)) COMMA_SOURCE_FILE_AT_LINE (384)) ;
      }
      //-------- @addAssignInstructionForGeneration
      var_terminalCheckAssignementList.addAssign_operation (enumerator_14864.current_mActualParameterTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (390)), var_cppName, enumerator_14885.current_mLexicalAttributeName (HERE) COMMA_SOURCE_FILE_AT_LINE (389)) ;
    }
    enumerator_14864.gotoNextObject () ;
    enumerator_14885.gotoNextObject () ;
  }
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_terminalCheckInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mTerminalName, constinArgument_inLexiqueName, var_terminalCheckAssignementList COMMA_SOURCE_FILE_AT_LINE (397)) COMMA_SOURCE_FILE_AT_LINE (397)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_terminalCheckInstruction_analyzeSyntaxInstruction (void) {
  enterCategoryMethod_analyzeSyntaxInstruction (kTypeDescriptor_GALGAS_terminalCheckInstruction.mSlotID,
                                                categoryMethod_terminalCheckInstruction_analyzeSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_terminalCheckInstruction_analyzeSyntaxInstruction (defineCategoryMethod_terminalCheckInstruction_analyzeSyntaxInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@terminalCheckInstructionForGeneration generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_terminalCheckInstructionForGeneration_generateInstruction (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                      const GALGAS_bool constinArgument_inGenerateCheckValid,
                                                                                      GALGAS_uint & /* ioArgument_ioTemporaryVariableIndex */,
                                                                                      GALGAS_stringset & ioArgument_ioUnusedVariableCppNameSet,
                                                                                      GALGAS_string & ioArgument_ioGeneratedCode,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_terminalCheckInstructionForGeneration * object = (const cPtr_terminalCheckInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_terminalCheckInstructionForGeneration) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("//-------- @terminalCheckInstructionForGeneration\n") COMMA_SOURCE_FILE_AT_LINE (413)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_terminalCheckAssignementList enumerator_17375 (object->mAttribute_mTerminalCheckAssignementList, true) ;
  //--- simple foreach instruction
  while (enumerator_17375.hasCurrentObject ()) {
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_0 (GALGAS_bool (kIsNotEqual, enumerator_17375.current_mTypeName (HERE).objectCompare (GALGAS_string::makeEmptyString ()))) ;
    if (test_0.isValidAndTrue ()) {
      //-------- @appendInstructionForGeneration
      ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("GALGAS_").operator_concat (enumerator_17375.current_mTypeName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (417)) COMMA_SOURCE_FILE_AT_LINE (417)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (417)) COMMA_SOURCE_FILE_AT_LINE (417)) ;
    }
    //-------- @appendInstructionForGeneration
    ioArgument_ioGeneratedCode.dotAssign_operation (enumerator_17375.current_mTargetVarCppName (HERE).operator_concat (GALGAS_string (" = ") COMMA_SOURCE_FILE_AT_LINE (420)).operator_concat (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (420)) COMMA_SOURCE_FILE_AT_LINE (420)).operator_concat (GALGAS_string ("->synthetizedAttribute_") COMMA_SOURCE_FILE_AT_LINE (420)).operator_concat (enumerator_17375.current_mSourceLexicalAttributeName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (421)) COMMA_SOURCE_FILE_AT_LINE (421)).operator_concat (GALGAS_string (" () ;\n") COMMA_SOURCE_FILE_AT_LINE (422)) COMMA_SOURCE_FILE_AT_LINE (420)) ;
    enumerator_17375.gotoNextObject () ;
  }
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioUnusedVariableCppNameSet.modifier_removeKey (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (425)) COMMA_SOURCE_FILE_AT_LINE (425)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (426)).operator_concat (GALGAS_string ("->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_") COMMA_SOURCE_FILE_AT_LINE (426)).operator_concat (object->mAttribute_mLexiqueIdentifier COMMA_SOURCE_FILE_AT_LINE (427)).operator_concat (GALGAS_string ("::kToken_") COMMA_SOURCE_FILE_AT_LINE (427)).operator_concat (object->mAttribute_mTerminalName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (427)) COMMA_SOURCE_FILE_AT_LINE (427)).operator_concat (GALGAS_string (") COMMA_SOURCE_FILE_AT_LINE (") COMMA_SOURCE_FILE_AT_LINE (428)).operator_concat (object->mAttribute_mInstructionLocation.reader_line (inCompiler COMMA_SOURCE_FILE_AT_LINE (428)).reader_string (SOURCE_FILE_AT_LINE (428)) COMMA_SOURCE_FILE_AT_LINE (428)).operator_concat (GALGAS_string (")) ;\n") COMMA_SOURCE_FILE_AT_LINE (428)) COMMA_SOURCE_FILE_AT_LINE (426)) ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_1 (constinArgument_inGenerateCheckValid) ;
  if (test_1.isValidAndTrue ()) {
    //-------- @appendInstructionForGeneration
    ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("#ifndef DO_NOT_GENERATE_CHECKINGS\n") COMMA_SOURCE_FILE_AT_LINE (431)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_terminalCheckAssignementList enumerator_18258 (object->mAttribute_mTerminalCheckAssignementList, true) ;
    //--- simple foreach instruction
    while (enumerator_18258.hasCurrentObject ()) {
      //-------- @appendInstructionForGeneration
      ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("  ").operator_concat (enumerator_18258.current_mTargetVarCppName (HERE) COMMA_SOURCE_FILE_AT_LINE (433)).operator_concat (GALGAS_string (".checkIsValid (HERE) ;\n") COMMA_SOURCE_FILE_AT_LINE (433)) COMMA_SOURCE_FILE_AT_LINE (433)) ;
      enumerator_18258.gotoNextObject () ;
    }
    //-------- @appendInstructionForGeneration
    ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("#endif\n") COMMA_SOURCE_FILE_AT_LINE (435)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_terminalCheckInstructionForGeneration_generateInstruction (void) {
  enterCategoryMethod_generateInstruction (kTypeDescriptor_GALGAS_terminalCheckInstructionForGeneration.mSlotID,
                                           categoryMethod_terminalCheckInstructionForGeneration_generateInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_terminalCheckInstructionForGeneration_generateInstruction (defineCategoryMethod_terminalCheckInstructionForGeneration_generateInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@repeatInstruction analyzeSyntaxInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_repeatInstruction_analyzeSyntaxInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                                       const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                       const GALGAS_terminalMap constinArgument_inTerminalMap,
                                                                       const GALGAS_string constinArgument_inLexiqueName,
                                                                       const GALGAS_nonterminalMap constinArgument_inNonterminalMap,
                                                                       const GALGAS_string constinArgument_inComponentName,
                                                                       GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                       GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                       GALGAS_uint & ioArgument_ioSelectMethodCount,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_repeatInstruction * object = (const cPtr_repeatInstruction *) inObject ;
  macroValidSharedObject (object, const cPtr_repeatInstruction) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_uint var_choiceIndex = ioArgument_ioSelectMethodCount ;
  //-------- @incrementInstructionForGeneration
  ioArgument_ioSelectMethodCount.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (486)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (488)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticInstructionListForGeneration var_repeated_5F_instructionList ;
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeSyntaxInstructionList (constinArgument_inAnalysisContext, constinArgument_inTerminalMap, constinArgument_inLexiqueName, constinArgument_inNonterminalMap, constinArgument_inComponentName, object->mAttribute_mRepeatedInstructionList, object->mAttribute_mEndOf_5F_repeated_5F_instructions_5F_branch, ioArgument_ioVariableMap, ioArgument_ioSelectMethodCount, var_repeated_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (491)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_listOfSemanticInstructionListForGeneration var_listOfSemanticInstructionListForGeneration = GALGAS_listOfSemanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (504)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_listOfSyntaxInstructionList enumerator_20597 (object->mAttribute_mRepeatBranchList, true) ;
  //--- simple foreach instruction
  while (enumerator_20597.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_semanticInstructionListForGeneration var_instructionList ;
    { //-------- @routineCallInstructionForGeneration
    routine_analyzeSyntaxInstructionList (constinArgument_inAnalysisContext, constinArgument_inTerminalMap, constinArgument_inLexiqueName, constinArgument_inNonterminalMap, constinArgument_inComponentName, enumerator_20597.current_mSyntaxInstructionList (HERE), enumerator_20597.current_mEndOf_5F_instructions (HERE), ioArgument_ioVariableMap, ioArgument_ioSelectMethodCount, var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (507)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @addAssignInstructionForGeneration
    var_listOfSemanticInstructionListForGeneration.addAssign_operation (var_instructionList, enumerator_20597.current_mEndOf_5F_instructions (HERE) COMMA_SOURCE_FILE_AT_LINE (519)) ;
    enumerator_20597.gotoNextObject () ;
  }
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_repeat_5F_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (522)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_repeatInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, constinArgument_inComponentName, var_choiceIndex, var_repeated_5F_instructionList, object->mAttribute_mEndOf_5F_repeat_5F_instruction, var_listOfSemanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (524)) COMMA_SOURCE_FILE_AT_LINE (524)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_repeatInstruction_analyzeSyntaxInstruction (void) {
  enterCategoryMethod_analyzeSyntaxInstruction (kTypeDescriptor_GALGAS_repeatInstruction.mSlotID,
                                                categoryMethod_repeatInstruction_analyzeSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_repeatInstruction_analyzeSyntaxInstruction (defineCategoryMethod_repeatInstruction_analyzeSyntaxInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@repeatInstructionForGeneration generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_repeatInstructionForGeneration_generateInstruction (const cPtr_semanticInstructionForGeneration * inObject,
                                                                               const GALGAS_bool constinArgument_inGenerateCheckValid,
                                                                               GALGAS_uint & ioArgument_ioTemporaryVariableIndex,
                                                                               GALGAS_stringset & ioArgument_ioUnusedVariableCppNameSet,
                                                                               GALGAS_string & ioArgument_ioGeneratedCode,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_repeatInstructionForGeneration * object = (const cPtr_repeatInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_repeatInstructionForGeneration) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("//-------- @repeatInstructionForGeneration\n") COMMA_SOURCE_FILE_AT_LINE (542)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_repeatFlagCppName = GALGAS_string ("repeatFlag_").operator_concat (ioArgument_ioTemporaryVariableIndex.reader_string (SOURCE_FILE_AT_LINE (543)) COMMA_SOURCE_FILE_AT_LINE (543)) ;
  //-------- @incrementInstructionForGeneration
  ioArgument_ioTemporaryVariableIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (543)) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("bool ").operator_concat (var_repeatFlagCppName COMMA_SOURCE_FILE_AT_LINE (544)).operator_concat (GALGAS_string (" = true ;\n") COMMA_SOURCE_FILE_AT_LINE (544)) COMMA_SOURCE_FILE_AT_LINE (544)) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("while (").operator_concat (var_repeatFlagCppName COMMA_SOURCE_FILE_AT_LINE (545)).operator_concat (GALGAS_string (") {\n") COMMA_SOURCE_FILE_AT_LINE (545)) COMMA_SOURCE_FILE_AT_LINE (545)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_generateInstructionList (constinArgument_inGenerateCheckValid, object->mAttribute_m_5F_repeated_5F_instructionList, ioArgument_ioTemporaryVariableIndex, ioArgument_ioUnusedVariableCppNameSet, ioArgument_ioGeneratedCode, inCompiler COMMA_SOURCE_FILE_AT_LINE (546)) ;
  } //-------- @routineCallInstructionForGeneration
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioGeneratedCode.modifier_incIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (553)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("switch (select_").operator_concat (object->mAttribute_mSyntaxComponentName.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (554)) COMMA_SOURCE_FILE_AT_LINE (554)).operator_concat (GALGAS_string ("_") COMMA_SOURCE_FILE_AT_LINE (554)).operator_concat (object->mAttribute_mChoiceIndex.reader_string (SOURCE_FILE_AT_LINE (554)) COMMA_SOURCE_FILE_AT_LINE (554)).operator_concat (GALGAS_string (" (") COMMA_SOURCE_FILE_AT_LINE (554)).operator_concat (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (554)) COMMA_SOURCE_FILE_AT_LINE (554)).operator_concat (GALGAS_string (")) {\n") COMMA_SOURCE_FILE_AT_LINE (554)) COMMA_SOURCE_FILE_AT_LINE (554)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_listOfSemanticInstructionListForGeneration enumerator_22436 (object->mAttribute_mListOfSemanticInstructionListForGeneration, true) ;
  //--- simple foreach instruction
  GALGAS_uint index_22430 ((PMUInt32) 0) ;
  while (enumerator_22436.hasCurrentObject ()) {
    //-------- @appendInstructionForGeneration
    ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("case ").operator_concat (index_22430.add_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (556)).reader_string (SOURCE_FILE_AT_LINE (556)) COMMA_SOURCE_FILE_AT_LINE (556)).operator_concat (GALGAS_string (": {\n") COMMA_SOURCE_FILE_AT_LINE (556)) COMMA_SOURCE_FILE_AT_LINE (556)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_generateInstructionList (constinArgument_inGenerateCheckValid, enumerator_22436.current_mInstructionList (HERE), ioArgument_ioTemporaryVariableIndex, ioArgument_ioUnusedVariableCppNameSet, ioArgument_ioGeneratedCode, inCompiler COMMA_SOURCE_FILE_AT_LINE (557)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @appendInstructionForGeneration
    ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("} break ;\n") COMMA_SOURCE_FILE_AT_LINE (564)) ;
    enumerator_22436.gotoNextObject () ;
    index_22430.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (555)) ;
  }
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("default:\n") COMMA_SOURCE_FILE_AT_LINE (566)) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("  ").operator_concat (var_repeatFlagCppName COMMA_SOURCE_FILE_AT_LINE (567)).operator_concat (GALGAS_string (" = false ;\n") COMMA_SOURCE_FILE_AT_LINE (567)) COMMA_SOURCE_FILE_AT_LINE (567)) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("  break ;\n") COMMA_SOURCE_FILE_AT_LINE (568)) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("}\n") COMMA_SOURCE_FILE_AT_LINE (569)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioGeneratedCode.modifier_decIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (570)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("}\n") COMMA_SOURCE_FILE_AT_LINE (571)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_repeatInstructionForGeneration_generateInstruction (void) {
  enterCategoryMethod_generateInstruction (kTypeDescriptor_GALGAS_repeatInstructionForGeneration.mSlotID,
                                           categoryMethod_repeatInstructionForGeneration_generateInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_repeatInstructionForGeneration_generateInstruction (defineCategoryMethod_repeatInstructionForGeneration_generateInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@selectInstruction analyzeSyntaxInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_selectInstruction_analyzeSyntaxInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                                       const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                       const GALGAS_terminalMap constinArgument_inTerminalMap,
                                                                       const GALGAS_string constinArgument_inLexiqueName,
                                                                       const GALGAS_nonterminalMap constinArgument_inNonterminalMap,
                                                                       const GALGAS_string constinArgument_inComponentName,
                                                                       GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                       GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                       GALGAS_uint & ioArgument_ioSelectMethodCount,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_selectInstruction * object = (const cPtr_selectInstruction *) inObject ;
  macroValidSharedObject (object, const cPtr_selectInstruction) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_uint var_choiceIndex = ioArgument_ioSelectMethodCount ;
  //-------- @incrementInstructionForGeneration
  ioArgument_ioSelectMethodCount.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (587)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioVariableMap.modifier_openOverrideForSelectBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (589)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_listOfSemanticInstructionListForGeneration var_listOfSemanticInstructionListForGeneration = GALGAS_listOfSemanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (591)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_listOfSyntaxInstructionList enumerator_23722 (object->mAttribute_mSelectBranchList, true) ;
  //--- simple foreach instruction
  while (enumerator_23722.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_semanticInstructionListForGeneration var_instructionList ;
    { //-------- @routineCallInstructionForGeneration
    routine_analyzeSyntaxInstructionList (constinArgument_inAnalysisContext, constinArgument_inTerminalMap, constinArgument_inLexiqueName, constinArgument_inNonterminalMap, constinArgument_inComponentName, enumerator_23722.current_mSyntaxInstructionList (HERE), enumerator_23722.current_mEndOf_5F_instructions (HERE), ioArgument_ioVariableMap, ioArgument_ioSelectMethodCount, var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (594)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @addAssignInstructionForGeneration
    var_listOfSemanticInstructionListForGeneration.addAssign_operation (var_instructionList, enumerator_23722.current_mEndOf_5F_instructions (HERE) COMMA_SOURCE_FILE_AT_LINE (606)) ;
    enumerator_23722.gotoNextObject () ;
  }
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_select_5F_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (609)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_selectInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, constinArgument_inComponentName, var_choiceIndex, var_listOfSemanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (610)) COMMA_SOURCE_FILE_AT_LINE (610)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_selectInstruction_analyzeSyntaxInstruction (void) {
  enterCategoryMethod_analyzeSyntaxInstruction (kTypeDescriptor_GALGAS_selectInstruction.mSlotID,
                                                categoryMethod_selectInstruction_analyzeSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_selectInstruction_analyzeSyntaxInstruction (defineCategoryMethod_selectInstruction_analyzeSyntaxInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@selectInstructionForGeneration generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_selectInstructionForGeneration_generateInstruction (const cPtr_semanticInstructionForGeneration * inObject,
                                                                               const GALGAS_bool constinArgument_inGenerateCheckValid,
                                                                               GALGAS_uint & ioArgument_ioTemporaryVariableIndex,
                                                                               GALGAS_stringset & ioArgument_ioUnusedVariableCppNameSet,
                                                                               GALGAS_string & ioArgument_ioGeneratedCode,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_selectInstructionForGeneration * object = (const cPtr_selectInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_selectInstructionForGeneration) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("//-------- @selectInstructionForGeneration\n") COMMA_SOURCE_FILE_AT_LINE (626)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioUnusedVariableCppNameSet.modifier_removeKey (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (627)) COMMA_SOURCE_FILE_AT_LINE (627)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("switch (select_").operator_concat (object->mAttribute_mSyntaxComponentName.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (628)) COMMA_SOURCE_FILE_AT_LINE (628)).operator_concat (GALGAS_string ("_") COMMA_SOURCE_FILE_AT_LINE (628)).operator_concat (object->mAttribute_mChoiceIndex.reader_string (SOURCE_FILE_AT_LINE (628)) COMMA_SOURCE_FILE_AT_LINE (628)).operator_concat (GALGAS_string (" (") COMMA_SOURCE_FILE_AT_LINE (628)).operator_concat (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (628)) COMMA_SOURCE_FILE_AT_LINE (628)).operator_concat (GALGAS_string (")) {\n") COMMA_SOURCE_FILE_AT_LINE (628)) COMMA_SOURCE_FILE_AT_LINE (628)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_listOfSemanticInstructionListForGeneration enumerator_25094 (object->mAttribute_mListOfSemanticInstructionListForGeneration, true) ;
  //--- simple foreach instruction
  GALGAS_uint index_25088 ((PMUInt32) 0) ;
  while (enumerator_25094.hasCurrentObject ()) {
    //-------- @appendInstructionForGeneration
    ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("case ").operator_concat (index_25088.add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (630)).reader_string (SOURCE_FILE_AT_LINE (630)) COMMA_SOURCE_FILE_AT_LINE (630)).operator_concat (GALGAS_string (": {\n") COMMA_SOURCE_FILE_AT_LINE (630)) COMMA_SOURCE_FILE_AT_LINE (630)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_generateInstructionList (constinArgument_inGenerateCheckValid, enumerator_25094.current_mInstructionList (HERE), ioArgument_ioTemporaryVariableIndex, ioArgument_ioUnusedVariableCppNameSet, ioArgument_ioGeneratedCode, inCompiler COMMA_SOURCE_FILE_AT_LINE (631)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @appendInstructionForGeneration
    ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("} break ;\n") COMMA_SOURCE_FILE_AT_LINE (638)) ;
    enumerator_25094.gotoNextObject () ;
    index_25088.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (629)) ;
  }
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("default:\n") COMMA_SOURCE_FILE_AT_LINE (640)) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("  break ;\n") COMMA_SOURCE_FILE_AT_LINE (641)) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("}\n") COMMA_SOURCE_FILE_AT_LINE (642)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_selectInstructionForGeneration_generateInstruction (void) {
  enterCategoryMethod_generateInstruction (kTypeDescriptor_GALGAS_selectInstructionForGeneration.mSlotID,
                                           categoryMethod_selectInstructionForGeneration_generateInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_selectInstructionForGeneration_generateInstruction (defineCategoryMethod_selectInstructionForGeneration_generateInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@parseRewindInstruction analyzeSyntaxInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_parseRewindInstruction_analyzeSyntaxInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                                            const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                            const GALGAS_terminalMap constinArgument_inTerminalMap,
                                                                            const GALGAS_string constinArgument_inLexiqueName,
                                                                            const GALGAS_nonterminalMap constinArgument_inNonterminalMap,
                                                                            const GALGAS_string constinArgument_inComponentName,
                                                                            GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                            GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                            GALGAS_uint & ioArgument_ioSelectMethodCount,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_parseRewindInstruction * object = (const cPtr_parseRewindInstruction *) inObject ;
  macroValidSharedObject (object, const cPtr_parseRewindInstruction) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_listOfSemanticInstructionListForGeneration var_listOfSemanticInstructionListForGeneration = GALGAS_listOfSemanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (658)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_uint var_referenceSelectMethodCount = ioArgument_ioSelectMethodCount ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_listOfSyntaxInstructionList enumerator_26180 (object->mAttribute_mParseRewindBranchList, true) ;
  //--- simple foreach instruction
  while (enumerator_26180.hasCurrentObject ()) {
    //-------- @assignmentInstructionForGeneration
    ioArgument_ioSelectMethodCount = var_referenceSelectMethodCount ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_semanticInstructionListForGeneration var_instructionList = GALGAS_semanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (662)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_syntaxInstructionList enumerator_26346 (enumerator_26180.current_mSyntaxInstructionList (HERE), true) ;
    //--- simple foreach instruction
    while (enumerator_26346.hasCurrentObject ()) {
      //-------- @methodCallInstructionForGeneration
      callCategoryMethod_analyzeSyntaxInstruction ((const cPtr_syntaxInstructionAST *) enumerator_26346.current_mInstruction (HERE).ptr (), constinArgument_inAnalysisContext, constinArgument_inTerminalMap, constinArgument_inLexiqueName, constinArgument_inNonterminalMap, constinArgument_inComponentName, var_instructionList, ioArgument_ioVariableMap, ioArgument_ioSelectMethodCount, inCompiler COMMA_SOURCE_FILE_AT_LINE (664)) ;
      //-------- END @methodCallInstructionForGeneration
      enumerator_26346.gotoNextObject () ;
    }
    //-------- @addAssignInstructionForGeneration
    var_listOfSemanticInstructionListForGeneration.addAssign_operation (var_instructionList, enumerator_26180.current_mEndOf_5F_instructions (HERE) COMMA_SOURCE_FILE_AT_LINE (675)) ;
    enumerator_26180.gotoNextObject () ;
  }
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_listOfSemanticInstructionListForGeneration var_tempListOfBranches = var_listOfSemanticInstructionListForGeneration ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticInstructionListForGeneration var_instructionList ;
  { //-------- @modifierCallInstructionForGeneration
  GALGAS_location joker_26993_0 ; // Joker input parameter
  var_tempListOfBranches.modifier_popFirst (var_instructionList, joker_26993_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (680)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_semanticInstructionListForGeneration var_referenceSignature = function_syntaxSignatureOfInstructionList (var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (681)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_ok = GALGAS_bool (true) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_listOfSemanticInstructionListForGeneration enumerator_27174 (var_tempListOfBranches, true) ;
  //--- complex foreach instruction
  bool bool_0 = var_ok.isValidAndTrue () ;
  if (enumerator_27174.hasCurrentObject () && bool_0) {
    while (enumerator_27174.hasCurrentObject () && bool_0) {
      //-------- @assignmentInstructionForGeneration
      var_ok = function_compareSyntaxSignature (var_referenceSignature, function_syntaxSignatureOfInstructionList (enumerator_27174.current_mInstructionList (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (686)), enumerator_27174.current_mEndOfInstructionList (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (684)) ;
      enumerator_27174.gotoNextObject () ;
      if (enumerator_27174.hasCurrentObject ()) {
        bool_0 = var_ok.isValidAndTrue () ;
      }
    }
  }
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_parseRewindInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_listOfSemanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (691)) COMMA_SOURCE_FILE_AT_LINE (691)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_parseRewindInstruction_analyzeSyntaxInstruction (void) {
  enterCategoryMethod_analyzeSyntaxInstruction (kTypeDescriptor_GALGAS_parseRewindInstruction.mSlotID,
                                                categoryMethod_parseRewindInstruction_analyzeSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_parseRewindInstruction_analyzeSyntaxInstruction (defineCategoryMethod_parseRewindInstruction_analyzeSyntaxInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@parseRewindInstructionForGeneration generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_parseRewindInstructionForGeneration_generateInstruction (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                    const GALGAS_bool constinArgument_inGenerateCheckValid,
                                                                                    GALGAS_uint & ioArgument_ioTemporaryVariableIndex,
                                                                                    GALGAS_stringset & ioArgument_ioUnusedVariableCppNameSet,
                                                                                    GALGAS_string & ioArgument_ioGeneratedCode,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_parseRewindInstructionForGeneration * object = (const cPtr_parseRewindInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_parseRewindInstructionForGeneration) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("//-------- @parseRewindInstructionForGeneration\n") COMMA_SOURCE_FILE_AT_LINE (705)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioUnusedVariableCppNameSet.modifier_removeKey (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (706)) COMMA_SOURCE_FILE_AT_LINE (706)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_parsingContextVar = GALGAS_string ("parsingContext_").operator_concat (ioArgument_ioTemporaryVariableIndex.reader_string (SOURCE_FILE_AT_LINE (707)) COMMA_SOURCE_FILE_AT_LINE (707)) ;
  //-------- @incrementInstructionForGeneration
  ioArgument_ioTemporaryVariableIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (707)) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("const C_parsingContext ").operator_concat (var_parsingContextVar COMMA_SOURCE_FILE_AT_LINE (708)).operator_concat (GALGAS_string (" = ") COMMA_SOURCE_FILE_AT_LINE (708)).operator_concat (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (708)) COMMA_SOURCE_FILE_AT_LINE (708)).operator_concat (GALGAS_string ("->parsingContext () ;\n") COMMA_SOURCE_FILE_AT_LINE (708)) COMMA_SOURCE_FILE_AT_LINE (708)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_listOfSemanticInstructionListForGeneration enumerator_28291 (object->mAttribute_mListOfSemanticInstructionListForGeneration, true) ;
  //--- simple foreach instruction
  while (enumerator_28291.hasCurrentObject ()) {
    { //-------- @routineCallInstructionForGeneration
    routine_generateInstructionList (constinArgument_inGenerateCheckValid, enumerator_28291.current_mInstructionList (HERE), ioArgument_ioTemporaryVariableIndex, ioArgument_ioUnusedVariableCppNameSet, ioArgument_ioGeneratedCode, inCompiler COMMA_SOURCE_FILE_AT_LINE (711)) ;
    } //-------- @routineCallInstructionForGeneration
    if (enumerator_28291.hasNextObject ()) {
      //-------- @appendInstructionForGeneration
      ioArgument_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (719)).operator_concat (GALGAS_string ("->setParsingContext (") COMMA_SOURCE_FILE_AT_LINE (719)).operator_concat (var_parsingContextVar COMMA_SOURCE_FILE_AT_LINE (719)).operator_concat (GALGAS_string (") ; // rewind\n") COMMA_SOURCE_FILE_AT_LINE (719)) COMMA_SOURCE_FILE_AT_LINE (719)) ;
    }
    enumerator_28291.gotoNextObject () ;
  }
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("//-------- END OF @parseRewindInstructionForGeneration\n") COMMA_SOURCE_FILE_AT_LINE (721)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_parseRewindInstructionForGeneration_generateInstruction (void) {
  enterCategoryMethod_generateInstruction (kTypeDescriptor_GALGAS_parseRewindInstructionForGeneration.mSlotID,
                                           categoryMethod_parseRewindInstructionForGeneration_generateInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_parseRewindInstructionForGeneration_generateInstruction (defineCategoryMethod_parseRewindInstructionForGeneration_generateInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@parseLoopInstruction analyzeSyntaxInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_parseLoopInstruction_analyzeSyntaxInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                                          const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                          const GALGAS_terminalMap constinArgument_inTerminalMap,
                                                                          const GALGAS_string constinArgument_inLexiqueName,
                                                                          const GALGAS_nonterminalMap constinArgument_inNonterminalMap,
                                                                          const GALGAS_string constinArgument_inComponentName,
                                                                          GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                          GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                          GALGAS_uint & ioArgument_ioSelectMethodCount,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_parseLoopInstruction * object = (const cPtr_parseLoopInstruction *) inObject ;
  macroValidSharedObject (object, const cPtr_parseLoopInstruction) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_variant_5F_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mVariantExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_variant_5F_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (738)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (GALGAS_bool (kIsNotEqual, var_variant_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (743)).objectCompare (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mUIntType))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mEndOfVariantExpression, GALGAS_string ("the variant expression type is '@").operator_concat (var_variant_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (745)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (745)) COMMA_SOURCE_FILE_AT_LINE (745)).operator_concat (GALGAS_string ("', but it should be '@") COMMA_SOURCE_FILE_AT_LINE (746)).operator_concat (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mUIntType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (746)) COMMA_SOURCE_FILE_AT_LINE (746)).operator_concat (GALGAS_string ("' type") COMMA_SOURCE_FILE_AT_LINE (746)) COMMA_SOURCE_FILE_AT_LINE (744)) ;
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_while_5F_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mWhileExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_while_5F_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (751)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_1 (GALGAS_bool (kIsNotEqual, var_while_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (756)).objectCompare (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType))) ;
  if (test_1.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mEndOfWhileExpression, GALGAS_string ("the variant expression type is '@").operator_concat (var_variant_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (758)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (758)) COMMA_SOURCE_FILE_AT_LINE (758)).operator_concat (GALGAS_string ("', but it should be '@") COMMA_SOURCE_FILE_AT_LINE (759)).operator_concat (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (759)) COMMA_SOURCE_FILE_AT_LINE (759)).operator_concat (GALGAS_string ("' type") COMMA_SOURCE_FILE_AT_LINE (759)) COMMA_SOURCE_FILE_AT_LINE (757)) ;
  }
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (764)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticInstructionListForGeneration var_instructionList ;
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeSyntaxInstructionList (constinArgument_inAnalysisContext, constinArgument_inTerminalMap, constinArgument_inLexiqueName, constinArgument_inNonterminalMap, constinArgument_inComponentName, object->mAttribute_mDoInstructionList, object->mAttribute_mEndOfInstructionList, ioArgument_ioVariableMap, ioArgument_ioSelectMethodCount, var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (767)) ;
  } //-------- @routineCallInstructionForGeneration
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOfInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (780)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_parseLoopInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_variant_5F_expression, var_while_5F_expression, var_instructionList COMMA_SOURCE_FILE_AT_LINE (782)) COMMA_SOURCE_FILE_AT_LINE (782)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_parseLoopInstruction_analyzeSyntaxInstruction (void) {
  enterCategoryMethod_analyzeSyntaxInstruction (kTypeDescriptor_GALGAS_parseLoopInstruction.mSlotID,
                                                categoryMethod_parseLoopInstruction_analyzeSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_parseLoopInstruction_analyzeSyntaxInstruction (defineCategoryMethod_parseLoopInstruction_analyzeSyntaxInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@parseLoopInstructionForGeneration generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_parseLoopInstructionForGeneration_generateInstruction (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                  const GALGAS_bool constinArgument_inGenerateCheckValid,
                                                                                  GALGAS_uint & ioArgument_ioTemporaryVariableIndex,
                                                                                  GALGAS_stringset & ioArgument_ioUnusedVariableCppNameSet,
                                                                                  GALGAS_string & ioArgument_ioGeneratedCode,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_parseLoopInstructionForGeneration * object = (const cPtr_parseLoopInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_parseLoopInstructionForGeneration) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioUnusedVariableCppNameSet.modifier_removeKey (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (798)) COMMA_SOURCE_FILE_AT_LINE (798)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("//-------- @parseLoopInstructionForGeneration\n") COMMA_SOURCE_FILE_AT_LINE (799)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_variantVarCppName ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_generateExpression ((const cPtr_semanticExpressionForGeneration *) object->mAttribute_mVariantExpression.ptr (), ioArgument_ioGeneratedCode, ioArgument_ioTemporaryVariableIndex, ioArgument_ioUnusedVariableCppNameSet, var_variantVarCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (802)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("if (").operator_concat (var_variantVarCppName COMMA_SOURCE_FILE_AT_LINE (804)).operator_concat (GALGAS_string (".isValid ()) {\n") COMMA_SOURCE_FILE_AT_LINE (804)) COMMA_SOURCE_FILE_AT_LINE (804)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioGeneratedCode.modifier_incIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (805)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_variantVar = GALGAS_string ("variant_").operator_concat (ioArgument_ioTemporaryVariableIndex.reader_string (SOURCE_FILE_AT_LINE (806)) COMMA_SOURCE_FILE_AT_LINE (806)) ;
  //-------- @incrementInstructionForGeneration
  ioArgument_ioTemporaryVariableIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (806)) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("PMUInt32 ").operator_concat (var_variantVar COMMA_SOURCE_FILE_AT_LINE (807)).operator_concat (GALGAS_string (" = ") COMMA_SOURCE_FILE_AT_LINE (807)).operator_concat (var_variantVarCppName COMMA_SOURCE_FILE_AT_LINE (807)).operator_concat (GALGAS_string (".uintValue () ;\n") COMMA_SOURCE_FILE_AT_LINE (807)) COMMA_SOURCE_FILE_AT_LINE (807)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_loopVar = GALGAS_string ("loop_").operator_concat (ioArgument_ioTemporaryVariableIndex.reader_string (SOURCE_FILE_AT_LINE (809)) COMMA_SOURCE_FILE_AT_LINE (809)) ;
  //-------- @incrementInstructionForGeneration
  ioArgument_ioTemporaryVariableIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (809)) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("bool ").operator_concat (var_loopVar COMMA_SOURCE_FILE_AT_LINE (810)).operator_concat (GALGAS_string (" = true ;\n") COMMA_SOURCE_FILE_AT_LINE (810)) COMMA_SOURCE_FILE_AT_LINE (810)) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("while (").operator_concat (var_loopVar COMMA_SOURCE_FILE_AT_LINE (811)).operator_concat (GALGAS_string (") {\n") COMMA_SOURCE_FILE_AT_LINE (811)) COMMA_SOURCE_FILE_AT_LINE (811)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioGeneratedCode.modifier_incIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (812)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (var_loopVar.operator_concat (GALGAS_string (" = false ;\n") COMMA_SOURCE_FILE_AT_LINE (813)) COMMA_SOURCE_FILE_AT_LINE (813)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_whileVarCppName ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_generateExpression ((const cPtr_semanticExpressionForGeneration *) object->mAttribute_mWhileExpression.ptr (), ioArgument_ioGeneratedCode, ioArgument_ioTemporaryVariableIndex, ioArgument_ioUnusedVariableCppNameSet, var_whileVarCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (815)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("if (").operator_concat (var_whileVarCppName COMMA_SOURCE_FILE_AT_LINE (816)).operator_concat (GALGAS_string (".isValidAndTrue ()) {\n") COMMA_SOURCE_FILE_AT_LINE (816)) COMMA_SOURCE_FILE_AT_LINE (816)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioGeneratedCode.modifier_incIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (817)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (var_loopVar.operator_concat (GALGAS_string (" = true ;\n") COMMA_SOURCE_FILE_AT_LINE (818)) COMMA_SOURCE_FILE_AT_LINE (818)) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (var_variantVar.operator_concat (GALGAS_string (" -- ; // Decrement variant\n") COMMA_SOURCE_FILE_AT_LINE (819)) COMMA_SOURCE_FILE_AT_LINE (819)) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("const C_parsingContext parsingContext = ").operator_concat (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (820)) COMMA_SOURCE_FILE_AT_LINE (820)).operator_concat (GALGAS_string ("->parsingContext () ;\n") COMMA_SOURCE_FILE_AT_LINE (820)) COMMA_SOURCE_FILE_AT_LINE (820)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_generateInstructionList (constinArgument_inGenerateCheckValid, object->mAttribute_mInstructionList, ioArgument_ioTemporaryVariableIndex, ioArgument_ioUnusedVariableCppNameSet, ioArgument_ioGeneratedCode, inCompiler COMMA_SOURCE_FILE_AT_LINE (821)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (828)).operator_concat (GALGAS_string ("->setParsingContext (parsingContext) ;\n") COMMA_SOURCE_FILE_AT_LINE (828)) COMMA_SOURCE_FILE_AT_LINE (828)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioGeneratedCode.modifier_decIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (829)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("}\n") COMMA_SOURCE_FILE_AT_LINE (830)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioGeneratedCode.modifier_decIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (831)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("}\n") COMMA_SOURCE_FILE_AT_LINE (832)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioGeneratedCode.modifier_decIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (833)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("}\n") COMMA_SOURCE_FILE_AT_LINE (834)) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("//--- 'parse'\n") COMMA_SOURCE_FILE_AT_LINE (836)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_generateInstructionList (constinArgument_inGenerateCheckValid, function_syntaxSignatureOfInstructionList (object->mAttribute_mInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (839)), ioArgument_ioTemporaryVariableIndex, ioArgument_ioUnusedVariableCppNameSet, ioArgument_ioGeneratedCode, inCompiler COMMA_SOURCE_FILE_AT_LINE (837)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (function_compilerCppName (inCompiler COMMA_SOURCE_FILE_AT_LINE (844)).operator_concat (GALGAS_string ("->resetTemplateString () ;\n") COMMA_SOURCE_FILE_AT_LINE (844)) COMMA_SOURCE_FILE_AT_LINE (844)) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("//-------- END OF @parseLoopInstructionForGeneration\n") COMMA_SOURCE_FILE_AT_LINE (845)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_parseLoopInstructionForGeneration_generateInstruction (void) {
  enterCategoryMethod_generateInstruction (kTypeDescriptor_GALGAS_parseLoopInstructionForGeneration.mSlotID,
                                           categoryMethod_parseLoopInstructionForGeneration_generateInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_parseLoopInstructionForGeneration_generateInstruction (defineCategoryMethod_parseLoopInstructionForGeneration_generateInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@parseWhenInstruction analyzeSyntaxInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_parseWhenInstruction_analyzeSyntaxInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                                          const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                          const GALGAS_terminalMap constinArgument_inTerminalMap,
                                                                          const GALGAS_string constinArgument_inLexiqueName,
                                                                          const GALGAS_nonterminalMap constinArgument_inNonterminalMap,
                                                                          const GALGAS_string constinArgument_inComponentName,
                                                                          GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                          GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                          GALGAS_uint & ioArgument_ioSelectMethodCount,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_parseWhenInstruction * object = (const cPtr_parseWhenInstruction *) inObject ;
  macroValidSharedObject (object, const cPtr_parseWhenInstruction) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_when_5F_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mWhenExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_when_5F_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (862)) ;
  //-------- END @methodCallInstructionForGeneration
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (868)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_uint var_localSelectMethodCount = ioArgument_ioSelectMethodCount ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticInstructionListForGeneration var_when_5F_instructionListForGeneration ;
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeSyntaxInstructionList (constinArgument_inAnalysisContext, constinArgument_inTerminalMap, constinArgument_inLexiqueName, constinArgument_inNonterminalMap, constinArgument_inComponentName, object->mAttribute_mWhenInstructionList, object->mAttribute_mEndOfWhenInstructionList, ioArgument_ioVariableMap, var_localSelectMethodCount, var_when_5F_instructionListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (872)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticInstructionListForGeneration var_else_5F_instructionListForGeneration ;
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeSyntaxInstructionList (constinArgument_inAnalysisContext, constinArgument_inTerminalMap, constinArgument_inLexiqueName, constinArgument_inNonterminalMap, constinArgument_inComponentName, object->mAttribute_mElseInstructionList, object->mAttribute_mEndOfElseInstructionList, ioArgument_ioVariableMap, ioArgument_ioSelectMethodCount, var_else_5F_instructionListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (886)) ;
  } //-------- @routineCallInstructionForGeneration
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOfElseInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (899)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_ok = function_compareSyntaxSignature (function_syntaxSignatureOfInstructionList (var_when_5F_instructionListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (902)), function_syntaxSignatureOfInstructionList (var_else_5F_instructionListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (903)), object->mAttribute_mEndOfElseInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (901)) ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (var_ok) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @addAssignInstructionForGeneration
    ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_parseWhenInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_when_5F_expression, var_when_5F_instructionListForGeneration, var_else_5F_instructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (908)) COMMA_SOURCE_FILE_AT_LINE (908)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_parseWhenInstruction_analyzeSyntaxInstruction (void) {
  enterCategoryMethod_analyzeSyntaxInstruction (kTypeDescriptor_GALGAS_parseWhenInstruction.mSlotID,
                                                categoryMethod_parseWhenInstruction_analyzeSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_parseWhenInstruction_analyzeSyntaxInstruction (defineCategoryMethod_parseWhenInstruction_analyzeSyntaxInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@parseWhenInstructionForGeneration generateInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_parseWhenInstructionForGeneration_generateInstruction (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                  const GALGAS_bool constinArgument_inGenerateCheckValid,
                                                                                  GALGAS_uint & ioArgument_ioTemporaryVariableIndex,
                                                                                  GALGAS_stringset & ioArgument_ioUnusedVariableCppNameSet,
                                                                                  GALGAS_string & ioArgument_ioGeneratedCode,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_parseWhenInstructionForGeneration * object = (const cPtr_parseWhenInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_parseWhenInstructionForGeneration) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("//--------- @parseWhenInstructionForGeneration\n") COMMA_SOURCE_FILE_AT_LINE (925)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_sourceVar ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_generateExpression ((const cPtr_semanticExpressionForGeneration *) object->mAttribute_mWhenExpression.ptr (), ioArgument_ioGeneratedCode, ioArgument_ioTemporaryVariableIndex, ioArgument_ioUnusedVariableCppNameSet, var_sourceVar, inCompiler COMMA_SOURCE_FILE_AT_LINE (927)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("if (").operator_concat (var_sourceVar COMMA_SOURCE_FILE_AT_LINE (928)).operator_concat (GALGAS_string (".isValidAndTrue ()) {\n") COMMA_SOURCE_FILE_AT_LINE (928)) COMMA_SOURCE_FILE_AT_LINE (928)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_generateInstructionList (constinArgument_inGenerateCheckValid, object->mAttribute_mInstructionList, ioArgument_ioTemporaryVariableIndex, ioArgument_ioUnusedVariableCppNameSet, ioArgument_ioGeneratedCode, inCompiler COMMA_SOURCE_FILE_AT_LINE (929)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("}else{\n") COMMA_SOURCE_FILE_AT_LINE (936)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_generateInstructionList (constinArgument_inGenerateCheckValid, object->mAttribute_mElseInstructionList, ioArgument_ioTemporaryVariableIndex, ioArgument_ioUnusedVariableCppNameSet, ioArgument_ioGeneratedCode, inCompiler COMMA_SOURCE_FILE_AT_LINE (937)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @appendInstructionForGeneration
  ioArgument_ioGeneratedCode.dotAssign_operation (GALGAS_string ("}\n") COMMA_SOURCE_FILE_AT_LINE (944)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_parseWhenInstructionForGeneration_generateInstruction (void) {
  enterCategoryMethod_generateInstruction (kTypeDescriptor_GALGAS_parseWhenInstructionForGeneration.mSlotID,
                                           categoryMethod_parseWhenInstructionForGeneration_generateInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_parseWhenInstructionForGeneration_generateInstruction (defineCategoryMethod_parseWhenInstructionForGeneration_generateInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@blockInstruction analyzeSyntaxInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_blockInstruction_analyzeSyntaxInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                                      const GALGAS_analysisContext /* constinArgument_inAnalysisContext */,
                                                                      const GALGAS_terminalMap /* constinArgument_inTerminalMap */,
                                                                      const GALGAS_string /* constinArgument_inLexiqueName */,
                                                                      const GALGAS_nonterminalMap /* constinArgument_inNonterminalMap */,
                                                                      const GALGAS_string /* constinArgument_inComponentName */,
                                                                      GALGAS_semanticInstructionListForGeneration & /* ioArgument_ioInstructionListForGeneration */,
                                                                      GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                      GALGAS_uint & /* ioArgument_ioSelectMethodCount */,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_blockInstruction * object = (const cPtr_blockInstruction *) inObject ;
  macroValidSharedObject (object, const cPtr_blockInstruction) ;
  //-------- @errorInstructionForGeneration
  GALGAS_location location_0 (object->mAttribute_mBlockMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
  inCompiler->emitSemanticError (location_0, GALGAS_string ("'block' instruction is not handled in GALGAS 2\n") COMMA_SOURCE_FILE_AT_LINE (959)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_blockInstruction_analyzeSyntaxInstruction (void) {
  enterCategoryMethod_analyzeSyntaxInstruction (kTypeDescriptor_GALGAS_blockInstruction.mSlotID,
                                                categoryMethod_blockInstruction_analyzeSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_blockInstruction_analyzeSyntaxInstruction (defineCategoryMethod_blockInstruction_analyzeSyntaxInstruction, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


