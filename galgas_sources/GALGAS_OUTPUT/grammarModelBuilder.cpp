//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'grammarModelBuilder.cpp'                       *
//             Generated by version version GALGAS_BETA_VERSION              *
//                     november 26th, 2010, at 19h4'3"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "grammarModelBuilder.h"
#include "galgas2/C_galgas_CLI_Options.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "grammarModelBuilder.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*

void cParser_grammarModelBuilder::rule_grammarModelBuilder_grammar_5F_component_5F_start_5F_symbol_i0_ (GALGAS_grammarComponentAST & outArgument_outGrammarComponentRoot,
                                                                                                        C_Lexique_galgas_5F_scanner * inCompiler) {
  outArgument_outGrammarComponentRoot.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_grammar) COMMA_SOURCE_FILE_AT_LINE (49)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_mGrammarName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (50)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_mGrammarClass = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (51)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (52)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_lstringlist var_syntaxComponents = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (54)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_with) COMMA_SOURCE_FILE_AT_LINE (56)) ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_syntaxComponent = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (57)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (58)) ;
    //-------- @addAssignInstructionForGeneration
    var_syntaxComponents.addAssign_operation (var_syntaxComponent COMMA_SOURCE_FILE_AT_LINE (59)) ;
    switch (select_grammarModelBuilder_0 (inCompiler)) {
    case 2: {
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_1 = true ;
  while (repeatFlag_1) {
    switch (select_grammarModelBuilder_1 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_import) COMMA_SOURCE_FILE_AT_LINE (65)) ;
      //-------- @selectInstructionForGeneration
      switch (select_grammarModelBuilder_2 (inCompiler)) {
      case 1: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_SOURCE_FILE_AT_LINE (67)) ;
      } break ;
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_lexique) COMMA_SOURCE_FILE_AT_LINE (69)) ;
      } break ;
      case 3: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_grammar) COMMA_SOURCE_FILE_AT_LINE (71)) ;
      } break ;
      case 4: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_syntax) COMMA_SOURCE_FILE_AT_LINE (73)) ;
      } break ;
      case 5: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_option) COMMA_SOURCE_FILE_AT_LINE (75)) ;
      } break ;
      default:
        break ;
      }
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (77)) ;
      //-------- @warningInstructionForGeneration
      inCompiler->emitSemanticWarning (inCompiler->here (), GALGAS_string ("obsolete GALGAS 1 'import' declaration: useless in GALGAS 2") COMMA_SOURCE_FILE_AT_LINE (78)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_SOURCE_FILE_AT_LINE (79)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (80)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (81)) ;
    } break ;
    default:
      repeatFlag_1 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_root) COMMA_SOURCE_FILE_AT_LINE (84)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_mStartSymbol = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_non_5F_terminal_5F_symbol) COMMA_SOURCE_FILE_AT_LINE (85)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_startSymbolHasParseLabel = GALGAS_bool (false) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_nonTerminalLabelListAST var_mLabelList = GALGAS_nonTerminalLabelListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (87)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_grammar_5F_start_5F_symbol_5F_label_ (GALGAS_lstring::constructor_new (GALGAS_string::makeEmptyString (), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (88)), var_mLabelList, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_2 = true ;
  while (repeatFlag_2) {
    switch (select_grammarModelBuilder_3 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_label) COMMA_SOURCE_FILE_AT_LINE (91)) ;
      //-------- @selectInstructionForGeneration
      switch (select_grammarModelBuilder_4 (inCompiler)) {
      case 1: {
        //-------- @terminalCheckInstructionForGeneration
        GALGAS_lstring var_labelName = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (93)) ;
        //-------- @nonterminalInstructionForGeneration
        nt_grammar_5F_start_5F_symbol_5F_label_ (var_labelName, var_mLabelList, inCompiler) ;
      } break ;
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_parse) COMMA_SOURCE_FILE_AT_LINE (96)) ;
        //-------- @ifInstructionForGeneration
        const GALGAS_bool test_3 (var_startSymbolHasParseLabel) ;
        if (test_3.isValidAndTrue ()) {
          //-------- @errorInstructionForGeneration
          inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("'parse' label has been already declared") COMMA_SOURCE_FILE_AT_LINE (98)) ;
        }
        //-------- @assignmentInstructionForGeneration
        var_startSymbolHasParseLabel = GALGAS_bool (true) ;
      } break ;
      default:
        break ;
      }
    } break ;
    default:
      repeatFlag_2 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (103)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_lstringlist var_mUnusedNonterminalList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (105)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_4 = true ;
  while (repeatFlag_4) {
    switch (select_grammarModelBuilder_5 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_SOURCE_FILE_AT_LINE (108)) ;
      //-------- @repeatInstructionForGeneration
      bool repeatFlag_5 = true ;
      while (repeatFlag_5) {
        //-------- @terminalCheckInstructionForGeneration
        GALGAS_lstring var_nonterminalSymbolName = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_non_5F_terminal_5F_symbol) COMMA_SOURCE_FILE_AT_LINE (110)) ;
        //-------- @addAssignInstructionForGeneration
        var_mUnusedNonterminalList.addAssign_operation (var_nonterminalSymbolName COMMA_SOURCE_FILE_AT_LINE (111)) ;
        switch (select_grammarModelBuilder_6 (inCompiler)) {
        case 2: {
          //-------- @terminalCheckInstructionForGeneration
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (113)) ;
        } break ;
        default:
          repeatFlag_5 = false ;
          break ;
        }
      }
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (115)) ;
    } break ;
    default:
      repeatFlag_4 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (118)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outGrammarComponentRoot = GALGAS_grammarComponentAST::constructor_new (var_mGrammarName, var_mGrammarClass, var_syntaxComponents, var_mStartSymbol, var_mLabelList, var_startSymbolHasParseLabel, var_mUnusedNonterminalList, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (119)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_grammar) COMMA_SOURCE_FILE_AT_LINE (129)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (130)) ;
}

//---------------------------------------------------------------------------*

void cParser_grammarModelBuilder::rule_grammarModelBuilder_grammar_5F_start_5F_symbol_5F_label_i1_ (const GALGAS_lstring constinArgument_inLabelName,
                                                                                                    GALGAS_nonTerminalLabelListAST & ioArgument_ioLabelList,
                                                                                                    C_Lexique_galgas_5F_scanner * inCompiler) {
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_stringset var_argumentNameSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (139)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_formalParameterListAST var_mFormalParameterList = GALGAS_formalParameterListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (140)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_grammarModelBuilder_7 (inCompiler)) {
    case 2: {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_lstring var_argumentName ;
      //-------- @nonterminalInstructionForGeneration
      nt_label_5F_formal_5F_parameter_ (var_argumentName, var_mFormalParameterList, inCompiler) ;
      //-------- @ifInstructionForGeneration
      const GALGAS_bool test_1 (var_argumentNameSet.reader_hasKey (var_argumentName.reader_string (SOURCE_FILE_AT_LINE (145)) COMMA_SOURCE_FILE_AT_LINE (145))) ;
      if (test_1.isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        GALGAS_location location_2 (var_argumentName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_2, GALGAS_string ("there is already an argument named '").operator_concat (var_argumentName.reader_string (SOURCE_FILE_AT_LINE (146)) COMMA_SOURCE_FILE_AT_LINE (146)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (146)) COMMA_SOURCE_FILE_AT_LINE (146)) ;
      }
      //-------- @addAssignInstructionForGeneration
      var_argumentNameSet.addAssign_operation (var_argumentName.reader_string (SOURCE_FILE_AT_LINE (148)) COMMA_SOURCE_FILE_AT_LINE (148)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioLabelList.addAssign_operation (constinArgument_inLabelName, var_mFormalParameterList, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (150)) ;
}

//---------------------------------------------------------------------------*

void cParser_grammarModelBuilder::rule_grammarModelBuilder_label_5F_formal_5F_parameter_i2_ (GALGAS_lstring & outArgument_outArgumentName,
                                                                                             GALGAS_formalParameterListAST & ioArgument_ioStartSymbolLabelFormalParameterList,
                                                                                             C_Lexique_galgas_5F_scanner * inCompiler) {
  outArgument_outArgumentName.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_SOURCE_FILE_AT_LINE (159)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_mTypeName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_SOURCE_FILE_AT_LINE (160)) ;
  //-------- @selectInstructionForGeneration
  switch (select_grammarModelBuilder_8 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_SOURCE_FILE_AT_LINE (163)) ;
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  outArgument_outArgumentName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (165)) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioStartSymbolLabelFormalParameterList.addAssign_operation (GALGAS_formalArgumentPassingModeAST::constructor_argumentIn (SOURCE_FILE_AT_LINE (167)), var_mTypeName, outArgument_outArgumentName, GALGAS_bool (false) COMMA_SOURCE_FILE_AT_LINE (166)) ;
}

//---------------------------------------------------------------------------*

void cParser_grammarModelBuilder::rule_grammarModelBuilder_label_5F_formal_5F_parameter_i3_ (GALGAS_lstring & outArgument_outArgumentName,
                                                                                             GALGAS_formalParameterListAST & ioArgument_ioStartSymbolLabelFormalParameterList,
                                                                                             C_Lexique_galgas_5F_scanner * inCompiler) {
  outArgument_outArgumentName.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F__3F_) COMMA_SOURCE_FILE_AT_LINE (180)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_mTypeName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_SOURCE_FILE_AT_LINE (181)) ;
  //-------- @selectInstructionForGeneration
  switch (select_grammarModelBuilder_9 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_SOURCE_FILE_AT_LINE (184)) ;
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  outArgument_outArgumentName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (186)) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioStartSymbolLabelFormalParameterList.addAssign_operation (GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (188)), var_mTypeName, outArgument_outArgumentName, GALGAS_bool (false) COMMA_SOURCE_FILE_AT_LINE (187)) ;
}

//---------------------------------------------------------------------------*

void cParser_grammarModelBuilder::rule_grammarModelBuilder_label_5F_formal_5F_parameter_i4_ (GALGAS_lstring & outArgument_outArgumentName,
                                                                                             GALGAS_formalParameterListAST & ioArgument_ioStartSymbolLabelFormalParameterList,
                                                                                             C_Lexique_galgas_5F_scanner * inCompiler) {
  outArgument_outArgumentName.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F__21_) COMMA_SOURCE_FILE_AT_LINE (201)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_mTypeName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_SOURCE_FILE_AT_LINE (202)) ;
  //-------- @selectInstructionForGeneration
  switch (select_grammarModelBuilder_10 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_unused) COMMA_SOURCE_FILE_AT_LINE (205)) ;
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  outArgument_outArgumentName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (207)) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioStartSymbolLabelFormalParameterList.addAssign_operation (GALGAS_formalArgumentPassingModeAST::constructor_argumentInOut (SOURCE_FILE_AT_LINE (209)), var_mTypeName, outArgument_outArgumentName, GALGAS_bool (false) COMMA_SOURCE_FILE_AT_LINE (208)) ;
}

//---------------------------------------------------------------------------*

void cParser_grammarModelBuilder::rule_grammarModelBuilder_label_5F_formal_5F_parameter_i5_ (GALGAS_lstring & outArgument_outArgumentName,
                                                                                             GALGAS_formalParameterListAST & ioArgument_ioStartSymbolLabelFormalParameterList,
                                                                                             C_Lexique_galgas_5F_scanner * inCompiler) {
  outArgument_outArgumentName.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21_) COMMA_SOURCE_FILE_AT_LINE (222)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_mTypeName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_SOURCE_FILE_AT_LINE (223)) ;
  //-------- @terminalCheckInstructionForGeneration
  outArgument_outArgumentName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (224)) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioStartSymbolLabelFormalParameterList.addAssign_operation (GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (226)), var_mTypeName, outArgument_outArgumentName, GALGAS_bool (false) COMMA_SOURCE_FILE_AT_LINE (225)) ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


