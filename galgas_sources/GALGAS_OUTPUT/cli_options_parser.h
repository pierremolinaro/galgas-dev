//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'cli_options_parser.h'                         *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                     february 9th, 2007, at 17h0'29"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef cli_options_parser_DEFINED
#define cli_options_parser_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/C_GGS_Object.h"
#include "galgas/GGS_location.h"
#include "galgas/GGS_lbool.h"
#include "galgas/GGS_lchar.h"
#include "galgas/GGS_lstring.h"
#include "galgas/GGS_ldouble.h"
#include "galgas/GGS_luint.h"
#include "galgas/GGS_lsint.h"
#include "galgas/GGS_luint64.h"
#include "galgas/GGS_lsint64.h"
#include "galgas/GGS_stringset.h"
#include "galgas/GGS_binaryset.h"
#include "galgas/predefined_types.h"
#include "galgas/AC_galgas_domain.h"
#include "galgas/AC_galgas_map.h"
#include "galgas/AC_galgas_list.h"
#include "galgas/AC_galgas_sortedlist.h"

//---------------------------------------------------------------------------*

#include "galgas_scanner.h"

// Include imported semantics
#include "common_semantics.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*


void routine_generate_option_component (C_Lexique &,
                                GGS_lstring  &,
                                GGS_M_cli_options  &,
                                GGS_M_cli_options  &,
                                GGS_M_cli_options  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Parser class cli_options_parser declaration                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cli_options_parser {
  public : virtual ~cli_options_parser (void) {}

  protected : virtual void nt_galgas_component_ (galgas_scanner &,
                                GGS_M_lexiqueComponents  &,
                                GGS_M_semanticsComponents  &,
                                GGS_M_syntaxComponents  &,
                                GGS_M_grammarComponents  &,
                                GGS_M_optionComponents  &,
                                GGS_M_metamodelsComponents  &,
                                GGS_M_constraintComponents  &) = 0 ;

  protected : virtual void nt_galgas_component_importLexique (galgas_scanner &,
                                GGS_M_lexiqueComponents  &) = 0 ;

  protected : virtual void nt_galgas_component_importSyntax (galgas_scanner &,
                                GGS_M_syntaxComponents  &,
                                GGS_M_metamodelsComponents  &) = 0 ;

  protected : virtual void nt_galgas_component_importSemantics (galgas_scanner &,
                                GGS_M_semanticsComponents  &,
                                GGS_M_metamodelsComponents  &,
                                GGS_M_constraintComponents  &) = 0 ;

  protected : virtual void nt_galgas_component_importGrammarForSemantics (galgas_scanner &,
                                GGS_M_grammarComponents  &,
                                GGS_M_metamodelsComponents  &,
                                GGS_M_constraintComponents  &) = 0 ;

  protected : virtual void nt_galgas_component_importOptions (galgas_scanner &,
                                GGS_M_optionComponents  &) = 0 ;

  protected : void pr_galgas_component_cli_options_parser_64_6_ (galgas_scanner &,
                                GGS_M_lexiqueComponents  &,
                                GGS_M_semanticsComponents  &,
                                GGS_M_syntaxComponents  &,
                                GGS_M_grammarComponents  &,
                                GGS_M_optionComponents  &,
                                GGS_M_metamodelsComponents  &,
                                GGS_M_constraintComponents  &) ;

  protected : virtual sint16 select_repeat_cli_options_parser_0 (galgas_scanner &) = 0 ;

  protected : virtual sint16 select_cli_options_parser_1 (galgas_scanner &) = 0 ;

  protected : void pr_galgas_component_cli_options_parser_64_6_importLexique (galgas_scanner &,
                                GGS_M_lexiqueComponents  &) ;

  protected : void pr_galgas_component_cli_options_parser_64_6_importSyntax (galgas_scanner &,
                                GGS_M_syntaxComponents  &,
                                GGS_M_metamodelsComponents  &) ;

  protected : void pr_galgas_component_cli_options_parser_64_6_importSemantics (galgas_scanner &,
                                GGS_M_semanticsComponents  &,
                                GGS_M_metamodelsComponents  &,
                                GGS_M_constraintComponents  &) ;

  protected : void pr_galgas_component_cli_options_parser_64_6_importGrammarForSemantics (galgas_scanner &,
                                GGS_M_grammarComponents  &,
                                GGS_M_metamodelsComponents  &,
                                GGS_M_constraintComponents  &) ;

  protected : void pr_galgas_component_cli_options_parser_64_6_importOptions (galgas_scanner &,
                                GGS_M_optionComponents  &) ;

} ;

//---------------------------------------------------------------------------*

#endif
