//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'semanticsGeneration.cpp'                       *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     february 7th, 2010, at 15h54'3"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticsGeneration.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticsGeneration.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@semanticDeclaration.generatePredeclaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_semanticDeclaration * operand_2849
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_2849 != NULL) {
    var_cas_outPredeclaration = GGS_string ("") ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclaration.generatePredeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclaration__generatePredeclaration> gDispatchTableForReader__semanticDeclaration__generatePredeclaration ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclaration__generatePredeclaration (typeCategoryReader__semanticDeclaration__generatePredeclaration inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclaration__generatePredeclaration.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclaration_defaultReader_generatePredeclaration (C_Compiler &,
                                const cPtr_semanticDeclaration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclaration__generatePredeclaration
findCategoryReader__semanticDeclaration__generatePredeclaration (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclaration__generatePredeclaration result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclaration__generatePredeclaration.count ()) {
    result = gDispatchTableForReader__semanticDeclaration__generatePredeclaration (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclaration__generatePredeclaration (superClassPtr) ;
      gDispatchTableForReader__semanticDeclaration__generatePredeclaration.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclaration_defaultReader_generatePredeclaration ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category reader '@mapDeclaration.generatePredeclaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_mapDeclaration * operand_3056
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_3056 != NULL) {
    var_cas_outPredeclaration = ((GGS_string ("class GALGAS_")).operator_concat (operand_3056->mMapTypeName.ggs_string ().reader_identifierRepresentation ())).operator_concat (GGS_string (" ;\n")) ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@mapindexDeclaration.generatePredeclaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapindexDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_mapindexDeclaration * operand_3332
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_3332 != NULL) {
    var_cas_outPredeclaration = ((GGS_string ("class GALGAS_")).operator_concat (operand_3332->mMapIndexTypeName.ggs_string ().reader_identifierRepresentation ())).operator_concat (GGS_string (" ;\n")) ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@enumDeclaration.generatePredeclaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__enumDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_enumDeclaration * operand_3609
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_3609 != NULL) {
    var_cas_outPredeclaration = ((GGS_string ("class GALGAS_")).operator_concat (operand_3609->mEnumTypeName.ggs_string ().reader_identifierRepresentation ())).operator_concat (GGS_string (" ;\n")) ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category reader '@filewrapperDeclaration.generatePredeclaration'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__filewrapperDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_filewrapperDeclaration * operand_3889
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_3889 != NULL) {
    var_cas_outPredeclaration = GGS_string ("") ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category reader '@sortedListDeclaration.generatePredeclaration'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__sortedListDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_sortedListDeclaration * operand_4103
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_4103 != NULL) {
    var_cas_outPredeclaration = ((GGS_string ("class GALGAS_")).operator_concat (operand_4103->mSortedListTypeName.ggs_string ().reader_identifierRepresentation ())).operator_concat (GGS_string (" ;\n")) ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@structDeclaration.generatePredeclaration'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__structDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_structDeclaration * operand_4384
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_4384 != NULL) {
    var_cas_outPredeclaration = ((GGS_string ("class GALGAS_")).operator_concat (operand_4384->mStructTypeName.ggs_string ().reader_identifierRepresentation ())).operator_concat (GGS_string (" ;\n")) ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@listDeclaration.generatePredeclaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__listDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_listDeclaration * operand_4659
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_4659 != NULL) {
    var_cas_outPredeclaration = ((GGS_string ("class GALGAS_")).operator_concat (operand_4659->mListTypeName.ggs_string ().reader_identifierRepresentation ())).operator_concat (GGS_string (" ;\n")) ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@classDeclaration.generatePredeclaration'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__classDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_classDeclaration * operand_4933
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_4933 != NULL) {
    var_cas_outPredeclaration = ((GGS_string ("class GALGAS_")).operator_concat (operand_4933->mClassTypeName.ggs_string ().reader_identifierRepresentation ())).operator_concat (GGS_string (" ;\n")) ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category reader '@externRoutineDeclaration.generatePredeclaration'     *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__externRoutineDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_externRoutineDeclaration * operand_5216
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_5216 != NULL) {
    var_cas_outPredeclaration = GGS_string ("") ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@routineDeclaration.generatePredeclaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__routineDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_routineDeclaration * operand_5427
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_5427 != NULL) {
    var_cas_outPredeclaration = GGS_string ("") ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category reader '@externFunctionDeclaration.generatePredeclaration'     *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__externFunctionDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_externFunctionDeclaration * operand_5645
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_5645 != NULL) {
    var_cas_outPredeclaration = GGS_string ("") ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@functionDeclaration.generatePredeclaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__functionDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_functionDeclaration * operand_5857
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_5857 != NULL) {
    var_cas_outPredeclaration = GGS_string ("") ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category reader '@onceFunctionDeclaration.generatePredeclaration'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__onceFunctionDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_onceFunctionDeclaration * operand_6073
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_6073 != NULL) {
    var_cas_outPredeclaration = GGS_string ("") ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@listmapDeclaration.generatePredeclaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__listmapDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_listmapDeclaration * operand_6284
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_6284 != NULL) {
    var_cas_outPredeclaration = ((GGS_string ("class GALGAS_")).operator_concat (operand_6284->mListmapTypeName.ggs_string ().reader_identifierRepresentation ())).operator_concat (GGS_string (" ;\n")) ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of wrapper 'typeGenerationTemplate'             *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_typeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_typeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_typeGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_typeGenerationTemplate_0,
  0,
  gWrapperAllDirectories_typeGenerationTemplate_0
) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  'semanticFileHeader' template of 'typeGenerationTemplate' filewrapper    *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_semanticFileHeader (C_Compiler & inLexique,
                                const GGS_string& var_cas_COMPONENT_NAME,
                                const GGS_semanticDeclarationList & var_cas_SEMANTIC_DECLARATION_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_COMPONENT_NAME.isBuilt ()
    && var_cas_SEMANTIC_DECLARATION_LIST.isBuilt () ;
  if (isBuilt) {
    result << "#ifndef " ;
    result << var_cas_COMPONENT_NAME ;
    result << "_ENTITIES_DEFINED\n"
      "#define " ;
    result << var_cas_COMPONENT_NAME ;
    result << "_ENTITIES_DEFINED\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "#include \"galgas2/predefined-types.h\"\n" ;
    GGS_semanticDeclarationList::cEnumerator enumerator_242 (var_cas_SEMANTIC_DECLARATION_LIST, true) ;
    const GGS_semanticDeclarationList::cElement * operand_242 = NULL ;
    while (((operand_242 = enumerator_242.nextObject ()))) {
      macroValidPointer (operand_242) ;
      result << (findCategoryReader__semanticDeclaration__generatePredeclaration (operand_242->mSemanticDeclaration (HERE)->galgasRTTI ()) (inLexique, operand_242->mSemanticDeclaration.getPtr () COMMA_SOURCE_FILE_AT_LINE (9))) ;
    }
    result << "\n" ;
  }
  return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'semanticFileImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_semanticFileImplementation (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_COMPONENT_NAME) {
  C_String result ;
  const bool isBuilt = var_cas_COMPONENT_NAME.isBuilt () ;
  if (isBuilt) {
    result << "#include \"" ;
    result << var_cas_COMPONENT_NAME ;
    result << ".h\"\n"
      "\n" ;
  }
  return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    'listTypeHeader' template of 'typeGenerationTemplate' filewrapper      *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_listTypeHeader (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_attributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
    result << "//---------------------------------------------------------------------------*\n"
      "//                                                                           *\n"
      "//" ;
    result << ((GGS_string ("'")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string ("' class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
    result << "*\n"
      "//                                                                           *\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " ;\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "class GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " : public AC_GALGAS_Array {\n"
      "//--- Constructor\n"
      "  protected : GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " (LOCATION_ARGS) ;\n"
      "\n"
      "//--- No copy\n"
      "  private : GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " (const GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " &) ;\n"
      "  private : GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " & operator = (const GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " &) ;\n"
      "\n"
      "//--- GALGAS constructors\n"
      "  public : static GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " * constructor_emptyList (LOCATION_ARGS) ;\n"
      "\n"
      "  public : static GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " * constructor_listWithValue (" ;
    const GGS_string var_cas_COL0 = GGS_string::stringWithColumnCount (result) ;
    GGS_attributeList::cEnumerator enumerator_1036 (var_cas_ATTRIBUTE_LIST, true) ;
    const GGS_attributeList::cElement * operand_1036 = NULL ;
    { GGS_uint var_cas_IDX (true, 0) ;
  while (((operand_1036 = enumerator_1036.nextObject ()))) {
    macroValidPointer (operand_1036) ;
    result << "const GALGAS_" ;
    result << operand_1036->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (24)) ;
    result << " * inOperand" ;
    result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (24)) ;
    if (enumerator_1036.hasNextObject ()) {
      result << ",\n" ;
      result << var_cas_COL0 ;
    }
    var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
  }
}
result << "\n" ;
result << var_cas_COL0 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--------------------------------- . (concat) operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_concat (" ;
const GGS_string var_cas_COL1 = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL1 ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL1 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Modifier handling\n"
  "  protected : static void insulate (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioObject) ;\n"
  "  \n"
  "//--- Introspection\n"
  "  public : virtual const C_galgas_type_descriptor * typeDescriptor (void) const ;\n"
  "\n"
  "//--- Friend\n"
  "  friend void addAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_1758 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_1758 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1758 = enumerator_1758.nextObject ()))) {
macroValidPointer (operand_1758) ;
result << ",\n"
  "                                   const GALGAS_" ;
result << operand_1758->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (43)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (43)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") ;\n"
  "  \n"
  "  friend void modifier_prependValue (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_2018 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2018 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2018 = enumerator_2018.nextObject ()))) {
macroValidPointer (operand_2018) ;
result << "                                     const GALGAS_" ;
result << operand_2018->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (50)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (50)) ;
if (enumerator_2018.hasNextObject ()) {
result << ",\n" ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "                                     COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend void modifier_popFirst (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_2342 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2342 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2342 = enumerator_2342.nextObject ()))) {
macroValidPointer (operand_2342) ;
result << "                                 GALGAS_" ;
result << operand_2342->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (58)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (58)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                                 C_Compiler * inCompiler\n"
  "                                 COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend void modifier_popLast (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_2700 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2700 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2700 = enumerator_2700.nextObject ()))) {
macroValidPointer (operand_2700) ;
result << "                                GALGAS_" ;
result << operand_2700->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (66)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (66)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                                C_Compiler * inCompiler\n"
  "                                COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend void dotAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n"
  "                                   const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n"
  "                                   COMMA_LOCATION_ARGS) ;\n" ;
GGS_attributeList::cEnumerator enumerator_3187 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3187 = NULL ;
while (((operand_3187 = enumerator_3187.nextObject ()))) {
macroValidPointer (operand_3187) ;
result << "\n"
  "  friend void modifier_set" ;
result << operand_3187->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (76)).reader_stringByCapitalizingFirstCharacter () ;
result << "AtIndex (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioList,\n"
  "                                         const GALGAS_" ;
result << operand_3187->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (77)) ;
result << " * inAttributeValue,\n"
  "                                         const GALGAS_uint * inIndex,\n"
  "                                         C_Compiler * inCompiler\n"
  "                                         COMMA_LOCATION_ARGS) ;\n" ;
}
GGS_attributeList::cEnumerator enumerator_3682 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3682 = NULL ;
while (((operand_3682 = enumerator_3682.nextObject ()))) {
macroValidPointer (operand_3682) ;
result << "\n"
  "  friend GALGAS_" ;
result << operand_3682->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (85)) ;
result << " * readerCall_" ;
result << operand_3682->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (85)) ;
result << "AtIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                               const GALGAS_uint * inIndex,\n"
  "                                               C_Compiler * inCompiler\n"
  "                                               COMMA_LOCATION_ARGS) ;\n" ;
}
result << "\n"
  "  friend void method_first (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_4158 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4158 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4158 = enumerator_4158.nextObject ()))) {
macroValidPointer (operand_4158) ;
result << "                            GALGAS_" ;
result << operand_4158->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (94)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (94)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                            C_Compiler * inCompiler\n"
  "                            COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend void method_last (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_4498 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4498 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4498 = enumerator_4498.nextObject ()))) {
macroValidPointer (operand_4498) ;
result << "                           GALGAS_" ;
result << operand_4498->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (102)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (102)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                           C_Compiler * inCompiler\n"
  "                           COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * readerCall_subListWithRange (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                                      const GALGAS_uint * inIndex,\n"
  "                                                      const GALGAS_uint * inLength,\n"
  "                                                      C_Compiler * inCompiler\n"
  "                                                      COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * readerCall_subListFromIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                                      const GALGAS_uint * inIndex,\n"
  "                                                      C_Compiler * inCompiler\n"
  "                                                      COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Enumerator class\n"
  "  public : class cEnumerator : public AC_GALGAS_Enumerator {\n"
  "    public : cEnumerator (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inEnumeratedObject,\n"
  "                          const bool inAscending) ;\n"
  "  \n"
  "  //--- Attribute access\n" ;
GGS_attributeList::cEnumerator enumerator_5762 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_5762 = NULL ;
while (((operand_5762 = enumerator_5762.nextObject ()))) {
macroValidPointer (operand_5762) ;
result << "    public : const GALGAS_" ;
result << operand_5762->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (125)) ;
result << " * attribute_" ;
result << operand_5762->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (125)) ;
result << " (void) const ;\n" ;
}
result << "  } ;\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void dotAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n"
  "                          const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n"
  "                          COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void addAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_6264 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6264 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6264 = enumerator_6264.nextObject ()))) {
macroValidPointer (operand_6264) ;
result << ",\n"
  "                          const GALGAS_" ;
result << operand_6264->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") ;\n"
  "\n"
  "void modifier_popFirst (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_6500 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6500 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6500 = enumerator_6500.nextObject ()))) {
macroValidPointer (operand_6500) ;
result << "                        GALGAS_" ;
result << operand_6500->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (145)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (145)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                        C_Compiler * inCompiler\n"
  "                        COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void modifier_popLast (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_6822 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6822 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6822 = enumerator_6822.nextObject ()))) {
macroValidPointer (operand_6822) ;
result << "                       GALGAS_" ;
result << operand_6822->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (153)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (153)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                       C_Compiler * inCompiler\n"
  "                       COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void modifier_prependValue (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_7147 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7147 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7147 = enumerator_7147.nextObject ()))) {
macroValidPointer (operand_7147) ;
result << ",\n"
  "                          const GALGAS_" ;
result << operand_7147->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (160)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (160)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "                            COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void method_first (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_7428 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7428 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7428 = enumerator_7428.nextObject ()))) {
macroValidPointer (operand_7428) ;
result << "                   GALGAS_" ;
result << operand_7428->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (168)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (168)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                   C_Compiler * inCompiler\n"
  "                   COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void method_last (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_7732 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7732 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7732 = enumerator_7732.nextObject ()))) {
macroValidPointer (operand_7732) ;
result << "                  GALGAS_" ;
result << operand_7732->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (176)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (176)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                  C_Compiler * inCompiler\n"
  "                  COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
GGS_attributeList::cEnumerator enumerator_7977 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7977 = NULL ;
while (((operand_7977 = enumerator_7977.nextObject ()))) {
macroValidPointer (operand_7977) ;
result << "\n"
  "void modifier_set" ;
result << operand_7977->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (183)).reader_stringByCapitalizingFirstCharacter () ;
result << "AtIndex (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioList,\n"
  "                                         const GALGAS_" ;
result << operand_7977->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (184)) ;
result << " * inAttributeValue,\n"
  "                                         const GALGAS_uint * inIndex,\n"
  "                                         C_Compiler * inCompiler\n"
  "                                         COMMA_LOCATION_ARGS) ;\n" ;
}
GGS_attributeList::cEnumerator enumerator_8463 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_8463 = NULL ;
while (((operand_8463 = enumerator_8463.nextObject ()))) {
macroValidPointer (operand_8463) ;
result << "\n"
  "GALGAS_" ;
result << operand_8463->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (192)) ;
result << " * readerCall_" ;
result << operand_8463->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (192)) ;
result << "AtIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                               const GALGAS_uint * inIndex,\n"
  "                                               C_Compiler * inCompiler\n"
  "                                               COMMA_LOCATION_ARGS) ;\n" ;
}
result << "\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * readerCall_subListWithRange (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                             const GALGAS_uint * inIndex,\n"
  "                                             const GALGAS_uint * inLength,\n"
  "                                             C_Compiler * inCompiler\n"
  "                                             COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * readerCall_subListFromIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                             const GALGAS_uint * inIndex,\n"
  "                                             C_Compiler * inCompiler\n"
  "                                             COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'listTypeImplementation' template of 'typeGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_listTypeImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_attributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("'")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string ("' class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (\"" ;
result << var_cas_TYPE_NAME ;
result << "\", NULL) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (LOCATION_ARGS) :\n"
  "AC_GALGAS_Array (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_emptyList (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_listWithValue (" ;
const GGS_string var_cas_COL0 = GGS_string::stringWithColumnCount (result) ;
GGS_attributeList::cEnumerator enumerator_1155 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_1155 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1155 = enumerator_1155.nextObject ()))) {
macroValidPointer (operand_1155) ;
result << "const GALGAS_" ;
result << operand_1155->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (27)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (27)) ;
if (enumerator_1155.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL0 ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result << var_cas_COL0 ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_emptyList (THERE) ;\n"
  "  const AC_GALGAS__root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_1525 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_1525 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1525 = enumerator_1525.nextObject ()))) {
macroValidPointer (operand_1525) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (34)) ;
if (enumerator_1525.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "  result->addObject (attributeArray) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::typeDescriptor (void) const {\n"
  "  return & kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioObject) {\n"
  "  if (ioObject->retainCount () > 1) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * source = ioObject ;\n"
  "    release (ioObject COMMA_HERE) ;\n"
  "    ioObject = constructor_emptyList (HERE) ;\n"
  "    retain (ioObject COMMA_HERE) ;\n"
  "    ioObject->copyFrom (source) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void addAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_2434 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2434 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2434 = enumerator_2434.nextObject ()))) {
macroValidPointer (operand_2434) ;
result << ",\n"
  "                          const GALGAS_" ;
result << operand_2434->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (64)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (64)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult) ;\n"
  "    const AC_GALGAS__root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (69)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_2775 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2775 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2775 = enumerator_2775.nextObject ()))) {
macroValidPointer (operand_2775) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (71)) ;
if (enumerator_2775.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "    ioResult->addObject (attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void modifier_prependValue (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_3074 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3074 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3074 = enumerator_3074.nextObject ()))) {
macroValidPointer (operand_3074) ;
result << ",\n"
  "                            const GALGAS_" ;
result << operand_3074->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (83)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (83)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "                            COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  if ((ioResult != NULL) && (inOperand0 != NULL)) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult) ;\n"
  "    const AC_GALGAS__root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (89)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_3498 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3498 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3498 = enumerator_3498.nextObject ()))) {
macroValidPointer (operand_3498) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (91)) ;
if (enumerator_3498.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "    ioResult->prependAttributeArray (attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void modifier_popFirst (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_3808 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3808 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3808 = enumerator_3808.nextObject ()))) {
macroValidPointer (operand_3808) ;
result << "                        GALGAS_" ;
result << operand_3808->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (103)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (103)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                        C_Compiler * inCompiler\n"
  "                        COMMA_LOCATION_ARGS) {\n" ;
GGS_attributeList::cEnumerator enumerator_4077 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4077 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4077 = enumerator_4077.nextObject ()))) {
macroValidPointer (operand_4077) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (109)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult) ;\n"
  "    const AC_GALGAS__root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (113)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_4353 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4353 = NULL ;
while (((operand_4353 = enumerator_4353.nextObject ()))) {
macroValidPointer (operand_4353) ;
result << "NULL" ;
if (enumerator_4353.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "    ioResult->removeFirstObject (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_attributeList::cEnumerator enumerator_4506 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4506 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4506 = enumerator_4506.nextObject ()))) {
macroValidPointer (operand_4506) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (120)) ;
result << " = (GALGAS_" ;
result << operand_4506->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (120)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (120)) ;
result << "] ;\n"
  "    macroValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (121)) ;
result << ", GALGAS_" ;
result << operand_4506->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (121)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void modifier_popLast (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_4958 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4958 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4958 = enumerator_4958.nextObject ()))) {
macroValidPointer (operand_4958) ;
result << "                        GALGAS_" ;
result << operand_4958->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (130)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (130)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                       C_Compiler * inCompiler\n"
  "                       COMMA_LOCATION_ARGS) {\n" ;
GGS_attributeList::cEnumerator enumerator_5225 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_5225 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5225 = enumerator_5225.nextObject ()))) {
macroValidPointer (operand_5225) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (136)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult) ;\n"
  "    const AC_GALGAS__root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (140)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_5501 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_5501 = NULL ;
while (((operand_5501 = enumerator_5501.nextObject ()))) {
macroValidPointer (operand_5501) ;
result << "NULL" ;
if (enumerator_5501.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "    ioResult->removeLastObject (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_attributeList::cEnumerator enumerator_5653 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_5653 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5653 = enumerator_5653.nextObject ()))) {
macroValidPointer (operand_5653) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (147)) ;
result << " = (GALGAS_" ;
result << operand_5653->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (147)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (147)) ;
result << "] ;\n"
  "    macroValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (148)) ;
result << ", GALGAS_" ;
result << operand_5653->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (148)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void method_first (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_6103 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6103 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6103 = enumerator_6103.nextObject ()))) {
macroValidPointer (operand_6103) ;
result << "                   GALGAS_" ;
result << operand_6103->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (157)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (157)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                   C_Compiler * inCompiler\n"
  "                   COMMA_LOCATION_ARGS) {\n" ;
GGS_attributeList::cEnumerator enumerator_6357 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6357 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6357 = enumerator_6357.nextObject ()))) {
macroValidPointer (operand_6357) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (163)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  if (inList != NULL) {\n"
  "    const AC_GALGAS__root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_6584 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6584 = NULL ;
while (((operand_6584 = enumerator_6584.nextObject ()))) {
macroValidPointer (operand_6584) ;
result << "NULL" ;
if (enumerator_6584.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "    inList->readFirst (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_attributeList::cEnumerator enumerator_6727 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6727 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6727 = enumerator_6727.nextObject ()))) {
macroValidPointer (operand_6727) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (173)) ;
result << " = (GALGAS_" ;
result << operand_6727->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (173)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (173)) ;
result << "] ;\n"
  "    macroValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
result << ", GALGAS_" ;
result << operand_6727->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void method_last (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_7176 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7176 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7176 = enumerator_7176.nextObject ()))) {
macroValidPointer (operand_7176) ;
result << "                  GALGAS_" ;
result << operand_7176->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (183)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (183)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                  C_Compiler * inCompiler\n"
  "                  COMMA_LOCATION_ARGS) {\n" ;
GGS_attributeList::cEnumerator enumerator_7427 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7427 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7427 = enumerator_7427.nextObject ()))) {
macroValidPointer (operand_7427) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (189)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  if (inList != NULL) {\n"
  "    const AC_GALGAS__root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (192)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_7654 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7654 = NULL ;
while (((operand_7654 = enumerator_7654.nextObject ()))) {
macroValidPointer (operand_7654) ;
result << "NULL" ;
if (enumerator_7654.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "    inList->readLast (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_attributeList::cEnumerator enumerator_7796 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7796 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7796 = enumerator_7796.nextObject ()))) {
macroValidPointer (operand_7796) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (199)) ;
result << " = (GALGAS_" ;
result << operand_7796->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (199)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (199)) ;
result << "] ;\n"
  "    macroValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
result << ", GALGAS_" ;
result << operand_7796->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n" ;
GGS_attributeList::cEnumerator enumerator_8104 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_8104 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8104 = enumerator_8104.nextObject ()))) {
macroValidPointer (operand_8104) ;
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_8104->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (208)) ;
result << " * readerCall_" ;
result << operand_8104->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (208)) ;
result << "AtIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                        const GALGAS_uint * inIndex,\n"
  "                                        C_Compiler * inCompiler\n"
  "                                        COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << operand_8104->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (212)) ;
result << " * result = NULL ;\n"
  "  if ((inList != NULL) && (inIndex != NULL)) {\n"
  "    result = (GALGAS_" ;
result << operand_8104->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (214)) ;
result << " *) inList->attributeDirectRead (inIndex, " ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (214)) ;
result << ", inCompiler COMMA_THERE) ;\n"
  "    macroValidObject (result, GALGAS_" ;
result << operand_8104->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (215)) ;
result << ") ;\n"
  "  }\n"
  "  return result ; \n"
  "}\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_attributeList::cEnumerator enumerator_8967 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_8967 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8967 = enumerator_8967.nextObject ()))) {
macroValidPointer (operand_8967) ;
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void modifier_set" ;
result << operand_8967->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (225)).reader_stringByCapitalizingFirstCharacter () ;
result << "AtIndex (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioList,\n"
  "                                         const GALGAS_" ;
result << operand_8967->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (226)) ;
result << " * inAttributeValue,\n"
  "                                         const GALGAS_uint * inIndex,\n"
  "                                         C_Compiler * inCompiler\n"
  "                                         COMMA_LOCATION_ARGS) {\n"
  "  if (ioList != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioList) ;\n"
  "    ioList->attributeDirectWrite (inAttributeValue, inIndex, " ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (232)) ;
result << ", inCompiler COMMA_THERE) ;\n"
  "  }\n"
  "}\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * readerCall_subListWithRange (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                             const GALGAS_uint * inIndex,\n"
  "                                             const GALGAS_uint * inLength,\n"
  "                                             C_Compiler * inCompiler\n"
  "                                             COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = NULL ;\n"
  "  if (inList != NULL) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_emptyList (THERE) ;\n"
  "    const bool ok = inList->subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;\n"
  "    if (! ok) {\n"
  "      result = NULL ;\n"
  "    }\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * readerCall_subListFromIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                             const GALGAS_uint * inIndex,\n"
  "                                             C_Compiler * inCompiler\n"
  "                                             COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = NULL ;\n"
  "  if (inList != NULL) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_emptyList (THERE) ;\n"
  "    const bool ok = inList->subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;\n"
  "    if (! ok) {\n"
  "      result = NULL ;\n"
  "    }\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::operator_concat (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                        const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                        COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = NULL ;\n"
  "  if ((inOperand1 != NULL) && (inOperand2 != NULL)) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_emptyList (THERE) ;\n"
  "    result->appendList (inOperand1) ;\n"
  "    result->appendList (inOperand2) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void dotAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n"
  "                          const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n"
  "                          COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  if ((ioResult != NULL) && (inOperand != NULL)) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult) ;\n"
  "    ioResult->appendList (inOperand) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::cEnumerator::cEnumerator (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inEnumeratedObject,\n"
  "                                             const bool inAscending) :\n"
  "AC_GALGAS_Enumerator (inEnumeratedObject, inAscending) {\n"
  "}\n"
  "\n" ;
GGS_attributeList::cEnumerator enumerator_12466 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_12466 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_12466 = enumerator_12466.nextObject ()))) {
macroValidPointer (operand_12466) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "const GALGAS_" ;
result << operand_12466->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (307)) ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::cEnumerator::attribute_" ;
result << operand_12466->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (307)) ;
result << " (void) const {\n"
  "  const GALGAS_" ;
result << operand_12466->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (308)) ;
result << " * result = (const GALGAS_" ;
result << operand_12466->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (308)) ;
result << " *) directAccess (" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (308)) ;
result << " COMMA_HERE) ;\n"
  "  macroValidObject (result, const GALGAS_" ;
result << operand_12466->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (309)) ;
result << ") ;\n"
  "  return result ;\n"
  "}\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    'enumTypeHeader' template of 'typeGenerationTemplate' filewrapper      *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_enumTypeHeader (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_lstringlist & var_cas_CONSTANT_LIST,
                                const GGS_enumMessageList & var_cas_ENUM_MESSAGE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_CONSTANT_LIST.isBuilt ()
    && var_cas_ENUM_MESSAGE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("'")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string ("' class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " : public AC_GALGAS__root {\n"
  "//--------------------------------- Enumeration\n"
  "  protected : typedef enum {" ;
const GGS_string var_cas_COL0 = GGS_string::stringWithColumnCount (result) ;
GGS_lstringlist::cEnumerator enumerator_708 (var_cas_CONSTANT_LIST, true) ;
const GGS_lstringlist::cElement * operand_708 = NULL ;
while (((operand_708 = enumerator_708.nextObject ()))) {
macroValidPointer (operand_708) ;
result << "kEnum_" ;
result << operand_708->mValue.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_708.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL0 ;
}
}
result << "} enum_" ;
result << var_cas_TYPE_NAME ;
result << " ;\n"
  "\n"
  "//--------------------------------- Private attribute\n"
  "  private : enum_" ;
result << var_cas_TYPE_NAME ;
result << " mEnumValue ;\n"
  "\n"
  "//--------------------------------- Constructor\n"
  "  protected : GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (const enum_" ;
result << var_cas_TYPE_NAME ;
result << " inValue COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--------------------------------- No copy\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " &) ;\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " & operator = (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " &) ;\n"
  "\n"
  "//--------------------------------- Implementation of reader 'description'\n"
  "  public : virtual void description (C_String & ioString,\n"
  "                                     const PMSInt32 inIndentation) const ;\n"
  "\n"
  "//--------------------------------- Comparison\n"
  "  public : static GALGAS_bool * operator_isEqual (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                  const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                  COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_bool * operator_isNotEqual (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                     const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                     COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_bool * operator_infOrEqual (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                     const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                     COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_bool * operator_supOrEqual (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                     const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                     COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_bool * operator_strictInf (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                    const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                    COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_bool * operator_strictSup (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                    const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                    COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--------------------------------- Compare (for sorted list)\n"
  "  public : virtual PMSInt32 compareForSortedList (const AC_GALGAS__root * inOperand\n"
  "                                                   COMMA_LOCATION_ARGS) const ;\n"
  "\n"
  "//--------------------------------- Introspection\n"
  "  public : virtual const C_galgas_type_descriptor * typeDescriptor (void) const ;\n"
  "\n"
  "//--------------------------------- GALGAS constructors\n" ;
GGS_lstringlist::cEnumerator enumerator_3486 (var_cas_CONSTANT_LIST, true) ;
const GGS_lstringlist::cElement * operand_3486 = NULL ;
while (((operand_3486 = enumerator_3486.nextObject ()))) {
macroValidPointer (operand_3486) ;
result << "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * constructor_" ;
result << operand_3486->mValue.ggs_string ().reader_identifierRepresentation () ;
result << " (LOCATION_ARGS) ;\n" ;
}
result << "\n"
  "\n"
  "//--------------------------------- GALGAS messages\n" ;
GGS_enumMessageList::cEnumerator enumerator_3696 (var_cas_ENUM_MESSAGE_LIST, true) ;
const GGS_enumMessageList::cElement * operand_3696 = NULL ;
while (((operand_3696 = enumerator_3696.nextObject ()))) {
macroValidPointer (operand_3696) ;
result << "  protected : virtual GALGAS_string * reader_" ;
result << operand_3696->mEnumMessageName.ggs_string ().reader_identifierRepresentation () ;
result << " (LOCATION_ARGS) ;\n"
  "  friend GALGAS_string * readerCall_" ;
result << operand_3696->mEnumMessageName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inReceiver\n" ;
result << var_cas_COL ;
result << "LOCATION_ARGS) ;\n" ;
}
result << "\n"
  "} ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'enumTypeImplementation' template of 'typeGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_enumTypeImplementation (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_lstringlist & var_cas_CONSTANT_LIST,
                                const GGS_enumMessageList & var_cas_ENUM_MESSAGE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_CONSTANT_LIST.isBuilt ()
    && var_cas_ENUM_MESSAGE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("'")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string ("' class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (\"" ;
result << var_cas_TYPE_NAME ;
result << "\", NULL) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (" ;
const GGS_string var_cas_COL0 = GGS_string::stringWithColumnCount (result) ;
result << "const enum_" ;
result << var_cas_TYPE_NAME ;
result << " inValue\n" ;
result << var_cas_COL0 ;
result << "COMMA_LOCATION_ARGS) :\n"
  "AC_GALGAS__root (THERE),\n"
  "mEnumValue (inValue) {\n"
  "}\n"
  "\n" ;
GGS_lstringlist::cEnumerator enumerator_791 (var_cas_CONSTANT_LIST, true) ;
const GGS_lstringlist::cElement * operand_791 = NULL ;
while (((operand_791 = enumerator_791.nextObject ()))) {
macroValidPointer (operand_791) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_" ;
result << operand_791->mValue.ggs_string ().reader_identifierRepresentation () ;
result << " (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (kEnum_" ;
result << operand_791->mValue.ggs_string ().reader_identifierRepresentation () ;
result << " COMMA_THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
GGS_enumMessageList::cEnumerator enumerator_1224 (var_cas_ENUM_MESSAGE_LIST, true) ;
const GGS_enumMessageList::cElement * operand_1224 = NULL ;
while (((operand_1224 = enumerator_1224.nextObject ()))) {
macroValidPointer (operand_1224) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_string * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::reader_" ;
result << operand_1224->mEnumMessageName.ggs_string ().reader_identifierRepresentation () ;
result << " (LOCATION_ARGS) {\n"
  "  GALGAS_string * result = NULL ;\n"
  "  switch (mEnumValue) {\n" ;
GGS_enumMessageAssociationList::cEnumerator enumerator_1533 (operand_1224->mMessageAssociationList, true) ;
const GGS_enumMessageAssociationList::cElement * operand_1533 = NULL ;
while (((operand_1533 = enumerator_1533.nextObject ()))) {
macroValidPointer (operand_1533) ;
result << "  case kEnum_" ;
result << operand_1533->mConstantName.ggs_string ().reader_identifierRepresentation () ;
result << ":\n"
  "    result = GALGAS_string::constructor_new (" ;
result << operand_1533->mMessage.ggs_string ().reader_utf8Representation () ;
result << " COMMA_THERE) ;\n"
  "    break ;\n" ;
}
result << "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
GGS_enumMessageList::cEnumerator enumerator_1814 (var_cas_ENUM_MESSAGE_LIST, true) ;
const GGS_enumMessageList::cElement * operand_1814 = NULL ;
while (((operand_1814 = enumerator_1814.nextObject ()))) {
macroValidPointer (operand_1814) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_string * readerCall_" ;
result << operand_1814->mEnumMessageName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inReceiver\n" ;
result << var_cas_COL ;
result << "LOCATION_ARGS) {\n"
  "  GALGAS_string * result = NULL ;\n"
  "  if (NULL != inReceiver) {\n"
  "    result = nReceiver->reader_" ;
result << operand_1814->mEnumMessageName.ggs_string ().reader_identifierRepresentation () ;
result << " (THERE) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::description (" ;
const GGS_string var_cas_COL_D = GGS_string::stringWithColumnCount (result) ;
result << "C_String & ioString,\n" ;
result << var_cas_COL_D ;
result << "const PMSInt32 /* inIndentation */) const {\n"
  "  ioString << \"<enum @" ;
result << var_cas_TYPE_NAME ;
result << ": \" ;\n"
  "  switch (mEnumValue) {\n" ;
GGS_lstringlist::cEnumerator enumerator_2688 (var_cas_CONSTANT_LIST, true) ;
const GGS_lstringlist::cElement * operand_2688 = NULL ;
while (((operand_2688 = enumerator_2688.nextObject ()))) {
macroValidPointer (operand_2688) ;
result << "  case kEnum_" ;
result << operand_2688->mValue.ggs_string ().reader_identifierRepresentation () ;
result << ":\n"
  "    ioString << " ;
result << operand_2688->mValue.ggs_string ().reader_utf8Representation () ;
result << " ;\n"
  "    break ;\n" ;
}
result << "  }\n"
  "\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "PMSInt32 GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::compareForSortedList (" ;
const GGS_string var_cas_COL_C = GGS_string::stringWithColumnCount (result) ;
result << "const AC_GALGAS__root * inOperand\n" ;
result << var_cas_COL_C ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operand = (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " *) inOperand ;\n"
  "  macroValidObjectThere (operand, const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << ") ;\n"
  "  return ((PMSInt32) mEnumValue) - ((PMSInt32) operand->mEnumValue) ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_bool * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::operator_isEqual (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                     const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                     COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_bool * result = NULL ;\n"
  "  if ((NULL != inOperand1) && (NULL != inOperand2)) {\n"
  "    result = GALGAS_bool::constructor_new (inOperand1->mEnumValue == inOperand2->mEnumValue COMMA_THERE) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_bool * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::operator_isNotEqual (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                        const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                        COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_bool * result = NULL ;\n"
  "  if ((NULL != inOperand1) && (NULL != inOperand2)) {\n"
  "    result = GALGAS_bool::constructor_new (inOperand1->mEnumValue != inOperand2->mEnumValue COMMA_THERE) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_bool * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::operator_infOrEqual (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                        const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                        COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_bool * result = NULL ;\n"
  "  if ((NULL != inOperand1) && (NULL != inOperand2)) {\n"
  "    result = GALGAS_bool::constructor_new (inOperand1->mEnumValue <= inOperand2->mEnumValue COMMA_THERE) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_bool * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::operator_supOrEqual (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                        const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                        COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_bool * result = NULL ;\n"
  "  if ((NULL != inOperand1) && (NULL != inOperand2)) {\n"
  "\n"
  "    result = GALGAS_bool::constructor_new (inOperand1->mEnumValue >= inOperand2->mEnumValue COMMA_THERE) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_bool * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::operator_strictInf (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                       const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                       COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_bool * result = NULL ;\n"
  "  if ((NULL != inOperand1) && (NULL != inOperand2)) {\n"
  "    result = GALGAS_bool::constructor_new (inOperand1->mEnumValue < inOperand2->mEnumValue COMMA_THERE) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_bool * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::operator_strictSup (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                       const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                       COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_bool * result = NULL ;\n"
  "  if ((NULL != inOperand1) && (NULL != inOperand2)) {\n"
  "    result = GALGAS_bool::constructor_new (inOperand1->mEnumValue > inOperand2->mEnumValue COMMA_THERE) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::typeDescriptor (void) const {\n"
  "  return & kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " ;\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Virtual Table for category method '@semanticDeclaration.generateCode'    *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticDeclaration__generateCode> gDispatchTableForMethod__semanticDeclaration__generateCode ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticDeclaration__generateCode (typeCategoryMethod__semanticDeclaration__generateCode inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticDeclaration__generateCode.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticDeclaration__generateCode
findCategoryMethod__semanticDeclaration__generateCode (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticDeclaration__generateCode result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticDeclaration__generateCode.count ()) {
    result = gDispatchTableForMethod__semanticDeclaration__generateCode (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticDeclaration__generateCode (superClassPtr) ;
      gDispatchTableForMethod__semanticDeclaration__generateCode.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Category method '@mapDeclaration.generateCode'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_mapDeclaration * operand_8454,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8454 != NULL) {
inLexique.printMessage (GGS_string ("@mapDeclaration generateCode\n") COMMA_SOURCE_FILE_AT_LINE (188)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@mapindexDeclaration.generateCode'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapindexDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_mapindexDeclaration * operand_8766,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8766 != NULL) {
inLexique.printMessage (GGS_string ("@mapindexDeclaration generateCode\n") COMMA_SOURCE_FILE_AT_LINE (198)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@enumDeclaration.generateCode'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__enumDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_enumDeclaration * operand_9079,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & var_cas_ioHeaderString,
                                GGS_string & var_cas_ioImplementationString
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9079 != NULL) {
var_cas_ioHeaderString.dotAssign_operation (template_filewrapper_typeGenerationTemplate_enumTypeHeader (inLexique, operand_9079->mEnumTypeName.ggs_string ().reader_identifierRepresentation (), operand_9079->mConstantList, operand_9079->mEnumMessageList)) ;
var_cas_ioImplementationString.dotAssign_operation (template_filewrapper_typeGenerationTemplate_enumTypeImplementation (inLexique, operand_9079->mEnumTypeName.ggs_string ().reader_identifierRepresentation (), operand_9079->mConstantList, operand_9079->mEnumMessageList)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@filewrapperDeclaration.generateCode'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__filewrapperDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_filewrapperDeclaration * operand_9677,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9677 != NULL) {
inLexique.printMessage (GGS_string ("@filewrapperDeclaration.semanticAnalysis [in semanticCompilation.gSemantics]\n") COMMA_SOURCE_FILE_AT_LINE (227)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@sortedListDeclaration.generateCode'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sortedListDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_sortedListDeclaration * operand_10039,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10039 != NULL) {
inLexique.printMessage (GGS_string ("@sortedListDeclaration generateCode\n") COMMA_SOURCE_FILE_AT_LINE (237)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@structDeclaration.generateCode'              *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__structDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_structDeclaration * operand_10356,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10356 != NULL) {
inLexique.printMessage (GGS_string ("@structDeclaration generateCode\n") COMMA_SOURCE_FILE_AT_LINE (247)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@listDeclaration.generateCode'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_listDeclaration * operand_10667,
                                GGS_semanticContext & var_cas_ioSemanticContext,
                                GGS_string & var_cas_ioHeaderString,
                                GGS_string & var_cas_ioImplementationString
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10667 != NULL) {
GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
{
GGS_attributeInCollectionList::cEnumerator enumerator_10840 (operand_10667->mAttributeList, true) ;
const GGS_attributeInCollectionList::cElement * operand_10840 = NULL ;
while (((operand_10840 = enumerator_10840.nextObject ()))) {
  macroValidPointer (operand_10840) ;
GGS_typeMapIndex  var_cas_attributeTypeIndex ;
GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_10840->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (260)) ;
var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_10840->mAttributeName) ;
}
}
GGS_listDeclaration  var_cas_tt = operand_10667 ;
var_cas_ioHeaderString.dotAssign_operation (template_filewrapper_typeGenerationTemplate_listTypeHeader (inLexique, var_cas_tt.reader_mListTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (268)).ggs_string ().reader_identifierRepresentation (), var_cas_attributeList)) ;
var_cas_ioImplementationString.dotAssign_operation (template_filewrapper_typeGenerationTemplate_listTypeImplementation (inLexique, var_cas_tt.reader_mListTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (272)).ggs_string ().reader_identifierRepresentation (), var_cas_attributeList)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@classDeclaration.generateCode'              *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__classDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_classDeclaration * operand_11579,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11579 != NULL) {
inLexique.printMessage (GGS_string ("@classDeclaration generateCode\n") COMMA_SOURCE_FILE_AT_LINE (284)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@externRoutineDeclaration.generateCode'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externRoutineDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_externRoutineDeclaration * operand_11898,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11898 != NULL) {
inLexique.printMessage (GGS_string ("@externRoutineDeclaration generateCode\n") COMMA_SOURCE_FILE_AT_LINE (294)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@routineDeclaration.generateCode'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__routineDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_routineDeclaration * operand_12219,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12219 != NULL) {
inLexique.printMessage (GGS_string ("@routineDeclaration generateCode\n") COMMA_SOURCE_FILE_AT_LINE (304)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@externFunctionDeclaration.generateCode'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externFunctionDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_externFunctionDeclaration * operand_12665,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12665 != NULL) {
inLexique.printMessage (GGS_string ("@externFunctionDeclaration generateCode\n") COMMA_SOURCE_FILE_AT_LINE (317)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@functionDeclaration.generateCode'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__functionDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_functionDeclaration * operand_12988,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12988 != NULL) {
inLexique.printMessage (GGS_string ("@functionDeclaration generateCode\n") COMMA_SOURCE_FILE_AT_LINE (327)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@onceFunctionDeclaration.generateCode'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__onceFunctionDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_onceFunctionDeclaration * operand_13434,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13434 != NULL) {
inLexique.printMessage (GGS_string ("@onceFunctionDeclaration generateCode\n") COMMA_SOURCE_FILE_AT_LINE (340)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@listmapDeclaration.generateCode'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listmapDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_listmapDeclaration * operand_13754,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13754 != NULL) {
inLexique.printMessage (GGS_string ("@listmapDeclaration generateCode\n") COMMA_SOURCE_FILE_AT_LINE (350)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticsGeneration (void) {
  enterCategoryReader__semanticDeclaration__generatePredeclaration (category_reader__semanticDeclaration__generatePredeclaration, gClassInfoFor__semanticDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__mapDeclaration__generatePredeclaration, gClassInfoFor__mapDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__mapindexDeclaration__generatePredeclaration, gClassInfoFor__mapindexDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__enumDeclaration__generatePredeclaration, gClassInfoFor__enumDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__filewrapperDeclaration__generatePredeclaration, gClassInfoFor__filewrapperDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__sortedListDeclaration__generatePredeclaration, gClassInfoFor__sortedListDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__structDeclaration__generatePredeclaration, gClassInfoFor__structDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__listDeclaration__generatePredeclaration, gClassInfoFor__listDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__classDeclaration__generatePredeclaration, gClassInfoFor__classDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__externRoutineDeclaration__generatePredeclaration, gClassInfoFor__externRoutineDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__routineDeclaration__generatePredeclaration, gClassInfoFor__routineDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__externFunctionDeclaration__generatePredeclaration, gClassInfoFor__externFunctionDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__functionDeclaration__generatePredeclaration, gClassInfoFor__functionDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__onceFunctionDeclaration__generatePredeclaration, gClassInfoFor__onceFunctionDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__listmapDeclaration__generatePredeclaration, gClassInfoFor__listmapDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__mapDeclaration__generateCode, gClassInfoFor__mapDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__mapindexDeclaration__generateCode, gClassInfoFor__mapindexDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__enumDeclaration__generateCode, gClassInfoFor__enumDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__filewrapperDeclaration__generateCode, gClassInfoFor__filewrapperDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__sortedListDeclaration__generateCode, gClassInfoFor__sortedListDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__structDeclaration__generateCode, gClassInfoFor__structDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__listDeclaration__generateCode, gClassInfoFor__listDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__classDeclaration__generateCode, gClassInfoFor__classDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__externRoutineDeclaration__generateCode, gClassInfoFor__externRoutineDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__routineDeclaration__generateCode, gClassInfoFor__routineDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__externFunctionDeclaration__generateCode, gClassInfoFor__externFunctionDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__functionDeclaration__generateCode, gClassInfoFor__functionDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__onceFunctionDeclaration__generateCode, gClassInfoFor__onceFunctionDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__listmapDeclaration__generateCode, gClassInfoFor__listmapDeclaration.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_semanticsGeneration (void) {
  gDispatchTableForReader__semanticDeclaration__generatePredeclaration.free () ;
  gDispatchTableForMethod__semanticDeclaration__generateCode.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticsGeneration (prologueRoutineFor_semanticsGeneration, epilogueRoutineFor_semanticsGeneration) ;

//---------------------------------------------------------------------------*

