//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'semanticsGeneration.cpp'                       *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      march 8th, 2010, at 16h49'12"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticsGeneration.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticsGeneration.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@semanticDeclaration.generatePredeclaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_semanticDeclaration * operand_2849
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_2849 != NULL) {
    var_cas_outPredeclaration = GGS_string ("") ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclaration.generatePredeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclaration__generatePredeclaration> gDispatchTableForReader__semanticDeclaration__generatePredeclaration ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclaration__generatePredeclaration (typeCategoryReader__semanticDeclaration__generatePredeclaration inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclaration__generatePredeclaration.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclaration_defaultReader_generatePredeclaration (C_Compiler &,
                                const cPtr_semanticDeclaration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclaration__generatePredeclaration
findCategoryReader__semanticDeclaration__generatePredeclaration (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclaration__generatePredeclaration result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclaration__generatePredeclaration.count ()) {
    result = gDispatchTableForReader__semanticDeclaration__generatePredeclaration (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclaration__generatePredeclaration (superClassPtr) ;
      gDispatchTableForReader__semanticDeclaration__generatePredeclaration.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclaration_defaultReader_generatePredeclaration ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category reader '@mapDeclaration.generatePredeclaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_mapDeclaration * operand_3056
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_3056 != NULL) {
    var_cas_outPredeclaration = ((GGS_string ("class GALGAS_")).operator_concat (operand_3056->mMapTypeName.ggs_string ().reader_identifierRepresentation ())).operator_concat (GGS_string (" ;\n")) ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@mapindexDeclaration.generatePredeclaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapindexDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_mapindexDeclaration * operand_3332
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_3332 != NULL) {
    var_cas_outPredeclaration = ((GGS_string ("class GALGAS_")).operator_concat (operand_3332->mMapIndexTypeName.ggs_string ().reader_identifierRepresentation ())).operator_concat (GGS_string (" ;\n")) ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@enumDeclaration.generatePredeclaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__enumDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_enumDeclaration * operand_3609
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_3609 != NULL) {
    var_cas_outPredeclaration = ((GGS_string ("class GALGAS_")).operator_concat (operand_3609->mEnumTypeName.ggs_string ().reader_identifierRepresentation ())).operator_concat (GGS_string (" ;\n")) ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category reader '@filewrapperDeclaration.generatePredeclaration'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__filewrapperDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_filewrapperDeclaration * operand_3889
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_3889 != NULL) {
    var_cas_outPredeclaration = GGS_string ("") ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category reader '@sortedListDeclaration.generatePredeclaration'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__sortedListDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_sortedListDeclaration * operand_4103
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_4103 != NULL) {
    var_cas_outPredeclaration = ((GGS_string ("class GALGAS_")).operator_concat (operand_4103->mSortedListTypeName.ggs_string ().reader_identifierRepresentation ())).operator_concat (GGS_string (" ;\n")) ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@structDeclaration.generatePredeclaration'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__structDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_structDeclaration * operand_4384
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_4384 != NULL) {
    var_cas_outPredeclaration = ((GGS_string ("class GALGAS_")).operator_concat (operand_4384->mStructTypeName.ggs_string ().reader_identifierRepresentation ())).operator_concat (GGS_string (" ;\n")) ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@listDeclaration.generatePredeclaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__listDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_listDeclaration * operand_4659
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_4659 != NULL) {
    var_cas_outPredeclaration = ((GGS_string ("class GALGAS_")).operator_concat (operand_4659->mListTypeName.ggs_string ().reader_identifierRepresentation ())).operator_concat (GGS_string (" ;\n")) ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@classDeclaration.generatePredeclaration'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__classDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_classDeclaration * operand_4933
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_4933 != NULL) {
    var_cas_outPredeclaration = ((GGS_string ("class GALGAS_")).operator_concat (operand_4933->mClassTypeName.ggs_string ().reader_identifierRepresentation ())).operator_concat (GGS_string (" ;\n")) ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category reader '@externRoutineDeclaration.generatePredeclaration'     *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__externRoutineDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_externRoutineDeclaration * operand_5216
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_5216 != NULL) {
    var_cas_outPredeclaration = GGS_string ("") ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@routineDeclaration.generatePredeclaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__routineDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_routineDeclaration * operand_5427
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_5427 != NULL) {
    var_cas_outPredeclaration = GGS_string ("") ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category reader '@externFunctionDeclaration.generatePredeclaration'     *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__externFunctionDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_externFunctionDeclaration * operand_5645
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_5645 != NULL) {
    var_cas_outPredeclaration = GGS_string ("") ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@functionDeclaration.generatePredeclaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__functionDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_functionDeclaration * operand_5857
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_5857 != NULL) {
    var_cas_outPredeclaration = GGS_string ("") ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category reader '@onceFunctionDeclaration.generatePredeclaration'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__onceFunctionDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_onceFunctionDeclaration * operand_6073
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_6073 != NULL) {
    var_cas_outPredeclaration = GGS_string ("") ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@listmapDeclaration.generatePredeclaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__listmapDeclaration__generatePredeclaration (C_Compiler &,
                                const cPtr_listmapDeclaration * operand_6284
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outPredeclaration ;
  if (operand_6284 != NULL) {
    var_cas_outPredeclaration = ((GGS_string ("class GALGAS_")).operator_concat (operand_6284->mListmapTypeName.ggs_string ().reader_identifierRepresentation ())).operator_concat (GGS_string (" ;\n")) ;
  }
  return var_cas_outPredeclaration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of wrapper 'typeGenerationTemplate'             *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_typeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_typeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_typeGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_typeGenerationTemplate_0,
  0,
  gWrapperAllDirectories_typeGenerationTemplate_0
) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  'semanticFileHeader' template of 'typeGenerationTemplate' filewrapper    *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_semanticFileHeader (C_Compiler & inLexique,
                                const GGS_string& var_cas_COMPONENT_NAME,
                                const GGS_semanticDeclarationList & var_cas_SEMANTIC_DECLARATION_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_COMPONENT_NAME.isBuilt ()
    && var_cas_SEMANTIC_DECLARATION_LIST.isBuilt () ;
  if (isBuilt) {
    result << "#ifndef " ;
    result << var_cas_COMPONENT_NAME ;
    result << "_ENTITIES_DEFINED\n"
      "#define " ;
    result << var_cas_COMPONENT_NAME ;
    result << "_ENTITIES_DEFINED\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "#include \"galgas2/predefined-types.h\"\n" ;
    GGS_semanticDeclarationList::cEnumerator enumerator_242 (var_cas_SEMANTIC_DECLARATION_LIST, true) ;
    const GGS_semanticDeclarationList::cElement * operand_242 = NULL ;
    while (((operand_242 = enumerator_242.nextObject ()))) {
      macroValidPointer (operand_242) ;
      result << (findCategoryReader__semanticDeclaration__generatePredeclaration (operand_242->mSemanticDeclaration (HERE)->galgasRTTI ()) (inLexique, operand_242->mSemanticDeclaration.getPtr () COMMA_SOURCE_FILE_AT_LINE (9))) ;
    }
    result << "\n" ;
  }
  return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'semanticFileImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_semanticFileImplementation (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_COMPONENT_NAME) {
  C_String result ;
  const bool isBuilt = var_cas_COMPONENT_NAME.isBuilt () ;
  if (isBuilt) {
    result << "#include \"" ;
    result << var_cas_COMPONENT_NAME ;
    result << ".h\"\n"
      "\n" ;
  }
  return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    'listTypeHeader' template of 'typeGenerationTemplate' filewrapper      *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_listTypeHeader (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_attributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
    result << "//---------------------------------------------------------------------------*\n"
      "//                                                                           *\n"
      "//" ;
    result << ((GGS_string ("'")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string ("' class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
    result << "*\n"
      "//                                                                           *\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " ;\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "class GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " : public AC_GALGAS_Array {\n"
      "//--- Constructor\n"
      "  protected : GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " (LOCATION_ARGS) ;\n"
      "\n"
      "//--- No copy\n"
      "  private : GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " (const GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " &) ;\n"
      "  private : GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " & operator = (const GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " &) ;\n"
      "\n"
      "//--- GALGAS constructors\n"
      "  public : static GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " * constructor_emptyList (LOCATION_ARGS) ;\n"
      "\n"
      "  public : static GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " * constructor_listWithValue (" ;
    const GGS_string var_cas_COL0 = GGS_string::stringWithColumnCount (result) ;
    GGS_attributeList::cEnumerator enumerator_1036 (var_cas_ATTRIBUTE_LIST, true) ;
    const GGS_attributeList::cElement * operand_1036 = NULL ;
    { GGS_uint var_cas_IDX (true, 0) ;
  while (((operand_1036 = enumerator_1036.nextObject ()))) {
    macroValidPointer (operand_1036) ;
    result << "const GALGAS_" ;
    result << operand_1036->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (24)) ;
    result << " * inOperand" ;
    result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (24)) ;
    if (enumerator_1036.hasNextObject ()) {
      result << ",\n" ;
      result << var_cas_COL0 ;
    }
    var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
  }
}
result << "\n" ;
result << var_cas_COL0 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--------------------------------- . (concat) operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_concat (" ;
const GGS_string var_cas_COL1 = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL1 ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL1 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Modifier handling\n"
  "  protected : static void insulate (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioObject) ;\n"
  "  \n"
  "//--- Introspection\n"
  "  public : virtual const C_galgas_type_descriptor * typeDescriptor (void) const ;\n"
  "\n"
  "//--- Friend\n"
  "  friend void addAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_1758 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_1758 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1758 = enumerator_1758.nextObject ()))) {
macroValidPointer (operand_1758) ;
result << ",\n"
  "                                   const GALGAS_" ;
result << operand_1758->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (43)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (43)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") ;\n"
  "  \n"
  "  friend void modifier_prependValue (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_2018 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2018 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2018 = enumerator_2018.nextObject ()))) {
macroValidPointer (operand_2018) ;
result << "                                     const GALGAS_" ;
result << operand_2018->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (50)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (50)) ;
if (enumerator_2018.hasNextObject ()) {
result << ",\n" ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "                                     COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend void modifier_popFirst (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_2342 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2342 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2342 = enumerator_2342.nextObject ()))) {
macroValidPointer (operand_2342) ;
result << "                                 GALGAS_" ;
result << operand_2342->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (58)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (58)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                                 C_Compiler * inCompiler\n"
  "                                 COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend void modifier_popLast (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_2700 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2700 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2700 = enumerator_2700.nextObject ()))) {
macroValidPointer (operand_2700) ;
result << "                                GALGAS_" ;
result << operand_2700->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (66)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (66)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                                C_Compiler * inCompiler\n"
  "                                COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend void dotAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n"
  "                                   const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n"
  "                                   COMMA_LOCATION_ARGS) ;\n" ;
GGS_attributeList::cEnumerator enumerator_3187 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3187 = NULL ;
while (((operand_3187 = enumerator_3187.nextObject ()))) {
macroValidPointer (operand_3187) ;
result << "\n"
  "  friend void modifier_set" ;
result << operand_3187->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (76)).reader_stringByCapitalizingFirstCharacter () ;
result << "AtIndex (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioList,\n"
  "                                         const GALGAS_" ;
result << operand_3187->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (77)) ;
result << " * inAttributeValue,\n"
  "                                         const GALGAS_uint * inIndex,\n"
  "                                         C_Compiler * inCompiler\n"
  "                                         COMMA_LOCATION_ARGS) ;\n" ;
}
GGS_attributeList::cEnumerator enumerator_3682 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3682 = NULL ;
while (((operand_3682 = enumerator_3682.nextObject ()))) {
macroValidPointer (operand_3682) ;
result << "\n"
  "  friend GALGAS_" ;
result << operand_3682->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (85)) ;
result << " * readerCall_" ;
result << operand_3682->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (85)) ;
result << "AtIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                               const GALGAS_uint * inIndex,\n"
  "                                               C_Compiler * inCompiler\n"
  "                                               COMMA_LOCATION_ARGS) ;\n" ;
}
result << "\n"
  "  friend void method_first (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_4158 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4158 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4158 = enumerator_4158.nextObject ()))) {
macroValidPointer (operand_4158) ;
result << "                            GALGAS_" ;
result << operand_4158->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (94)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (94)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                            C_Compiler * inCompiler\n"
  "                            COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend void method_last (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_4498 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4498 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4498 = enumerator_4498.nextObject ()))) {
macroValidPointer (operand_4498) ;
result << "                           GALGAS_" ;
result << operand_4498->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (102)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (102)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                           C_Compiler * inCompiler\n"
  "                           COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * readerCall_subListWithRange (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                                      const GALGAS_uint * inIndex,\n"
  "                                                      const GALGAS_uint * inLength,\n"
  "                                                      C_Compiler * inCompiler\n"
  "                                                      COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * readerCall_subListFromIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                                      const GALGAS_uint * inIndex,\n"
  "                                                      C_Compiler * inCompiler\n"
  "                                                      COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Enumerator class\n"
  "  public : class cEnumerator : public AC_GALGAS_Enumerator {\n"
  "    public : cEnumerator (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inEnumeratedObject,\n"
  "                          const bool inAscending) ;\n"
  "  \n"
  "  //--- Attribute access\n" ;
GGS_attributeList::cEnumerator enumerator_5762 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_5762 = NULL ;
while (((operand_5762 = enumerator_5762.nextObject ()))) {
macroValidPointer (operand_5762) ;
result << "    public : const GALGAS_" ;
result << operand_5762->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (125)) ;
result << " * attribute_" ;
result << operand_5762->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (125)) ;
result << " (void) const ;\n" ;
}
result << "  } ;\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void dotAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n"
  "                          const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n"
  "                          COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void addAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_6264 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6264 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6264 = enumerator_6264.nextObject ()))) {
macroValidPointer (operand_6264) ;
result << ",\n"
  "                          const GALGAS_" ;
result << operand_6264->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") ;\n"
  "\n"
  "void modifier_popFirst (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_6500 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6500 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6500 = enumerator_6500.nextObject ()))) {
macroValidPointer (operand_6500) ;
result << "                        GALGAS_" ;
result << operand_6500->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (145)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (145)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                        C_Compiler * inCompiler\n"
  "                        COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void modifier_popLast (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_6822 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6822 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6822 = enumerator_6822.nextObject ()))) {
macroValidPointer (operand_6822) ;
result << "                       GALGAS_" ;
result << operand_6822->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (153)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (153)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                       C_Compiler * inCompiler\n"
  "                       COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void modifier_prependValue (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_7147 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7147 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7147 = enumerator_7147.nextObject ()))) {
macroValidPointer (operand_7147) ;
result << ",\n"
  "                          const GALGAS_" ;
result << operand_7147->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (160)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (160)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "                            COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void method_first (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_7428 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7428 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7428 = enumerator_7428.nextObject ()))) {
macroValidPointer (operand_7428) ;
result << "                   GALGAS_" ;
result << operand_7428->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (168)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (168)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                   C_Compiler * inCompiler\n"
  "                   COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void method_last (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_7732 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7732 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7732 = enumerator_7732.nextObject ()))) {
macroValidPointer (operand_7732) ;
result << "                  GALGAS_" ;
result << operand_7732->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (176)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (176)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                  C_Compiler * inCompiler\n"
  "                  COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
GGS_attributeList::cEnumerator enumerator_7977 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7977 = NULL ;
while (((operand_7977 = enumerator_7977.nextObject ()))) {
macroValidPointer (operand_7977) ;
result << "\n"
  "void modifier_set" ;
result << operand_7977->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (183)).reader_stringByCapitalizingFirstCharacter () ;
result << "AtIndex (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioList,\n"
  "                                         const GALGAS_" ;
result << operand_7977->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (184)) ;
result << " * inAttributeValue,\n"
  "                                         const GALGAS_uint * inIndex,\n"
  "                                         C_Compiler * inCompiler\n"
  "                                         COMMA_LOCATION_ARGS) ;\n" ;
}
GGS_attributeList::cEnumerator enumerator_8463 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_8463 = NULL ;
while (((operand_8463 = enumerator_8463.nextObject ()))) {
macroValidPointer (operand_8463) ;
result << "\n"
  "GALGAS_" ;
result << operand_8463->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (192)) ;
result << " * readerCall_" ;
result << operand_8463->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (192)) ;
result << "AtIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                               const GALGAS_uint * inIndex,\n"
  "                                               C_Compiler * inCompiler\n"
  "                                               COMMA_LOCATION_ARGS) ;\n" ;
}
result << "\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * readerCall_subListWithRange (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                             const GALGAS_uint * inIndex,\n"
  "                                             const GALGAS_uint * inLength,\n"
  "                                             C_Compiler * inCompiler\n"
  "                                             COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * readerCall_subListFromIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                             const GALGAS_uint * inIndex,\n"
  "                                             C_Compiler * inCompiler\n"
  "                                             COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'listTypeImplementation' template of 'typeGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_listTypeImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_attributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("'")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string ("' class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (\"" ;
result << var_cas_TYPE_NAME ;
result << "\",\n"
  "                                                                    NULL,\n"
  "                                                                    (genericObjectCompareFunctionType) AC_GALGAS_Array::objectCompare) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (LOCATION_ARGS) :\n"
  "AC_GALGAS_Array (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_emptyList (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_listWithValue (" ;
const GGS_string var_cas_COL0 = GGS_string::stringWithColumnCount (result) ;
GGS_attributeList::cEnumerator enumerator_1358 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_1358 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1358 = enumerator_1358.nextObject ()))) {
macroValidPointer (operand_1358) ;
result << "const GALGAS_" ;
result << operand_1358->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (29)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (29)) ;
if (enumerator_1358.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL0 ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result << var_cas_COL0 ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_emptyList (THERE) ;\n"
  "  const AC_GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (34)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_1727 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_1727 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1727 = enumerator_1727.nextObject ()))) {
macroValidPointer (operand_1727) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (36)) ;
if (enumerator_1727.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "  result->addObject (attributeArray) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::typeDescriptor (void) const {\n"
  "  return & kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioObject) {\n"
  "  if (ioObject->retainCount () > 1) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * source = ioObject ;\n"
  "    release (ioObject COMMA_HERE) ;\n"
  "    ioObject = constructor_emptyList (HERE) ;\n"
  "    retain (ioObject COMMA_HERE) ;\n"
  "    ioObject->copyFrom (source) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void addAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_2636 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2636 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2636 = enumerator_2636.nextObject ()))) {
macroValidPointer (operand_2636) ;
result << ",\n"
  "                          const GALGAS_" ;
result << operand_2636->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (66)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (66)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult) ;\n"
  "    const AC_GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (71)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_2976 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2976 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2976 = enumerator_2976.nextObject ()))) {
macroValidPointer (operand_2976) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (73)) ;
if (enumerator_2976.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "    ioResult->addObject (attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void modifier_prependValue (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_3275 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3275 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3275 = enumerator_3275.nextObject ()))) {
macroValidPointer (operand_3275) ;
result << ",\n"
  "                            const GALGAS_" ;
result << operand_3275->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (85)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (85)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "                            COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  if ((ioResult != NULL) && (inOperand0 != NULL)) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult) ;\n"
  "    const AC_GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (91)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_3698 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3698 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3698 = enumerator_3698.nextObject ()))) {
macroValidPointer (operand_3698) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (93)) ;
if (enumerator_3698.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "    ioResult->prependAttributeArray (attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void modifier_popFirst (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_4008 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4008 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4008 = enumerator_4008.nextObject ()))) {
macroValidPointer (operand_4008) ;
result << "                        GALGAS_" ;
result << operand_4008->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (105)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (105)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                        C_Compiler * inCompiler\n"
  "                        COMMA_LOCATION_ARGS) {\n" ;
GGS_attributeList::cEnumerator enumerator_4277 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4277 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4277 = enumerator_4277.nextObject ()))) {
macroValidPointer (operand_4277) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (111)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult) ;\n"
  "    const AC_GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (115)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_4552 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4552 = NULL ;
while (((operand_4552 = enumerator_4552.nextObject ()))) {
macroValidPointer (operand_4552) ;
result << "NULL" ;
if (enumerator_4552.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "    ioResult->removeFirstObject (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_attributeList::cEnumerator enumerator_4705 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4705 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4705 = enumerator_4705.nextObject ()))) {
macroValidPointer (operand_4705) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (122)) ;
result << " = (GALGAS_" ;
result << operand_4705->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (122)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (122)) ;
result << "] ;\n"
  "    macroValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (123)) ;
result << ", GALGAS_" ;
result << operand_4705->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (123)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void modifier_popLast (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_5157 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_5157 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5157 = enumerator_5157.nextObject ()))) {
macroValidPointer (operand_5157) ;
result << "                        GALGAS_" ;
result << operand_5157->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (132)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (132)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                       C_Compiler * inCompiler\n"
  "                       COMMA_LOCATION_ARGS) {\n" ;
GGS_attributeList::cEnumerator enumerator_5424 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_5424 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5424 = enumerator_5424.nextObject ()))) {
macroValidPointer (operand_5424) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult) ;\n"
  "    const AC_GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (142)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_5699 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_5699 = NULL ;
while (((operand_5699 = enumerator_5699.nextObject ()))) {
macroValidPointer (operand_5699) ;
result << "NULL" ;
if (enumerator_5699.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "    ioResult->removeLastObject (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_attributeList::cEnumerator enumerator_5851 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_5851 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5851 = enumerator_5851.nextObject ()))) {
macroValidPointer (operand_5851) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (149)) ;
result << " = (GALGAS_" ;
result << operand_5851->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (149)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (149)) ;
result << "] ;\n"
  "    macroValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (150)) ;
result << ", GALGAS_" ;
result << operand_5851->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (150)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void method_first (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_6301 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6301 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6301 = enumerator_6301.nextObject ()))) {
macroValidPointer (operand_6301) ;
result << "                   GALGAS_" ;
result << operand_6301->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (159)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (159)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                   C_Compiler * inCompiler\n"
  "                   COMMA_LOCATION_ARGS) {\n" ;
GGS_attributeList::cEnumerator enumerator_6555 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6555 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6555 = enumerator_6555.nextObject ()))) {
macroValidPointer (operand_6555) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (165)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  if (inList != NULL) {\n"
  "    const AC_GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (168)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_6781 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6781 = NULL ;
while (((operand_6781 = enumerator_6781.nextObject ()))) {
macroValidPointer (operand_6781) ;
result << "NULL" ;
if (enumerator_6781.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "    inList->readFirst (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_attributeList::cEnumerator enumerator_6924 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_6924 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6924 = enumerator_6924.nextObject ()))) {
macroValidPointer (operand_6924) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (175)) ;
result << " = (GALGAS_" ;
result << operand_6924->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (175)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (175)) ;
result << "] ;\n"
  "    macroValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (176)) ;
result << ", GALGAS_" ;
result << operand_6924->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (176)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void method_last (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_7373 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7373 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7373 = enumerator_7373.nextObject ()))) {
macroValidPointer (operand_7373) ;
result << "                  GALGAS_" ;
result << operand_7373->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (185)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (185)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                  C_Compiler * inCompiler\n"
  "                  COMMA_LOCATION_ARGS) {\n" ;
GGS_attributeList::cEnumerator enumerator_7624 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7624 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7624 = enumerator_7624.nextObject ()))) {
macroValidPointer (operand_7624) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (191)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  if (inList != NULL) {\n"
  "    const AC_GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (194)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_7850 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7850 = NULL ;
while (((operand_7850 = enumerator_7850.nextObject ()))) {
macroValidPointer (operand_7850) ;
result << "NULL" ;
if (enumerator_7850.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "    inList->readLast (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_attributeList::cEnumerator enumerator_7992 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7992 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7992 = enumerator_7992.nextObject ()))) {
macroValidPointer (operand_7992) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (201)) ;
result << " = (GALGAS_" ;
result << operand_7992->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (201)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (201)) ;
result << "] ;\n"
  "    macroValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (202)) ;
result << ", GALGAS_" ;
result << operand_7992->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (202)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n" ;
GGS_attributeList::cEnumerator enumerator_8300 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_8300 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8300 = enumerator_8300.nextObject ()))) {
macroValidPointer (operand_8300) ;
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_8300->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (210)) ;
result << " * readerCall_" ;
result << operand_8300->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (210)) ;
result << "AtIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                        const GALGAS_uint * inIndex,\n"
  "                                        C_Compiler * inCompiler\n"
  "                                        COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << operand_8300->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (214)) ;
result << " * result = NULL ;\n"
  "  if ((inList != NULL) && (inIndex != NULL)) {\n"
  "    result = (GALGAS_" ;
result << operand_8300->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (216)) ;
result << " *) inList->attributeDirectRead (inIndex, " ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (216)) ;
result << ", inCompiler COMMA_THERE) ;\n"
  "    macroValidObject (result, GALGAS_" ;
result << operand_8300->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (217)) ;
result << ") ;\n"
  "  }\n"
  "  return result ; \n"
  "}\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_attributeList::cEnumerator enumerator_9163 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_9163 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9163 = enumerator_9163.nextObject ()))) {
macroValidPointer (operand_9163) ;
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void modifier_set" ;
result << operand_9163->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (227)).reader_stringByCapitalizingFirstCharacter () ;
result << "AtIndex (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioList,\n"
  "                                         const GALGAS_" ;
result << operand_9163->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (228)) ;
result << " * inAttributeValue,\n"
  "                                         const GALGAS_uint * inIndex,\n"
  "                                         C_Compiler * inCompiler\n"
  "                                         COMMA_LOCATION_ARGS) {\n"
  "  if (ioList != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioList) ;\n"
  "    ioList->attributeDirectWrite (inAttributeValue, inIndex, " ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (234)) ;
result << ", inCompiler COMMA_THERE) ;\n"
  "  }\n"
  "}\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * readerCall_subListWithRange (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                             const GALGAS_uint * inIndex,\n"
  "                                             const GALGAS_uint * inLength,\n"
  "                                             C_Compiler * inCompiler\n"
  "                                             COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = NULL ;\n"
  "  if (inList != NULL) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_emptyList (THERE) ;\n"
  "    const bool ok = inList->subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;\n"
  "    if (! ok) {\n"
  "      result = NULL ;\n"
  "    }\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * readerCall_subListFromIndex (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n"
  "                                             const GALGAS_uint * inIndex,\n"
  "                                             C_Compiler * inCompiler\n"
  "                                             COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = NULL ;\n"
  "  if (inList != NULL) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_emptyList (THERE) ;\n"
  "    const bool ok = inList->subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;\n"
  "    if (! ok) {\n"
  "      result = NULL ;\n"
  "    }\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::operator_concat (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                        const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                        COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = NULL ;\n"
  "  if ((inOperand1 != NULL) && (inOperand2 != NULL)) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_emptyList (THERE) ;\n"
  "    result->appendList (inOperand1) ;\n"
  "    result->appendList (inOperand2) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void dotAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n"
  "                          const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n"
  "                          COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  if ((ioResult != NULL) && (inOperand != NULL)) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult) ;\n"
  "    ioResult->appendList (inOperand) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::cEnumerator::cEnumerator (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inEnumeratedObject,\n"
  "                                             const bool inAscending) :\n"
  "AC_GALGAS_Enumerator (inEnumeratedObject, inAscending) {\n"
  "}\n"
  "\n" ;
GGS_attributeList::cEnumerator enumerator_12662 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_12662 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_12662 = enumerator_12662.nextObject ()))) {
macroValidPointer (operand_12662) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "const GALGAS_" ;
result << operand_12662->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (309)) ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::cEnumerator::attribute_" ;
result << operand_12662->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (309)) ;
result << " (void) const {\n"
  "  const GALGAS_" ;
result << operand_12662->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (310)) ;
result << " * result = (const GALGAS_" ;
result << operand_12662->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (310)) ;
result << " *) directAccess (" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (310)) ;
result << " COMMA_HERE) ;\n"
  "  macroValidObject (result, const GALGAS_" ;
result << operand_12662->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (311)) ;
result << ") ;\n"
  "  return result ;\n"
  "}\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'sortedlistTypeHeader' template of 'typeGenerationTemplate' filewrapper   *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_sortedlistTypeHeader (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_attributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("'")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string ("' class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " : public AC_GALGAS_SortedList {\n"
  "//--- Constructor\n"
  "  protected : GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inSource\n"
  "                             COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- No copy\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " &) ;\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " & operator = (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " &) ;\n"
  "\n"
  "//--- GALGAS constructors\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * constructor_emptySortedList (LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * constructor_sortedListWithValue (" ;
const GGS_string var_cas_COL0 = GGS_string::stringWithColumnCount (result) ;
GGS_attributeList::cEnumerator enumerator_968 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_968 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_968 = enumerator_968.nextObject ()))) {
macroValidPointer (operand_968) ;
result << "const GALGAS_" ;
result << operand_968->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (21)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (21)) ;
if (enumerator_968.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL0 ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result << var_cas_COL0 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Modifier handling\n"
  "  private : static void insulate (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioOperand\n"
  "                                  COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--------------------------------- . (concat) operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_concat (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "               const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "               COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Introspection\n"
  "  public : virtual const C_galgas_type_descriptor * typeDescriptor (void) const ;\n"
  "\n"
  "//--- Method for comparing two list elements\n"
  "  protected : virtual PMSInt32 compareSortedListElements (const AC_GALGAS_root * inLeftAttributeList [],\n"
  "                                                          const AC_GALGAS_root * inRightAttributeList []) ;\n"
  "\n"
  "\n"
  "//--- Friends\n"
  "  friend void dotAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n"
  "                                   const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n"
  "                                   COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "\n"
  "  friend void addAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_2213 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2213 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2213 = enumerator_2213.nextObject ()))) {
macroValidPointer (operand_2213) ;
result << ",\n"
  "                                   const GALGAS_" ;
result << operand_2213->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (51)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (51)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") ;\n"
  "  \n"
  "  friend void modifier_popSmallest (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_2473 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2473 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2473 = enumerator_2473.nextObject ()))) {
macroValidPointer (operand_2473) ;
result << ",\n"
  "                                    GALGAS_" ;
result << operand_2473->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (57)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (57)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  "                                    C_Compiler * inCompiler\n"
  "                                    COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend void modifier_popGreatest (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_2845 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2845 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2845 = enumerator_2845.nextObject ()))) {
macroValidPointer (operand_2845) ;
result << ",\n"
  "                                    GALGAS_" ;
result << operand_2845->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (64)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (64)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  "                                    C_Compiler * inCompiler\n"
  "                                    COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend void method_smallest (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList" ;
GGS_attributeList::cEnumerator enumerator_3214 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3214 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3214 = enumerator_3214.nextObject ()))) {
macroValidPointer (operand_3214) ;
result << ",\n"
  "                               GALGAS_" ;
result << operand_3214->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (71)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (71)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  "                               C_Compiler * inCompiler\n"
  "                               COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  friend void method_greatest (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList" ;
GGS_attributeList::cEnumerator enumerator_3568 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3568 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3568 = enumerator_3568.nextObject ()))) {
macroValidPointer (operand_3568) ;
result << ",\n"
  "                               GALGAS_" ;
result << operand_3568->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (78)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (78)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  "                               C_Compiler * inCompiler\n"
  "                               COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "\n"
  "//--- Enumerator class\n"
  "  public : class cEnumerator : public AC_GALGAS_Enumerator {\n"
  "    public : cEnumerator (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inEnumeratedObject,\n"
  "                          const bool inAscending) ;\n"
  "  \n"
  "  //--- Attribute access\n" ;
GGS_attributeList::cEnumerator enumerator_4091 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4091 = NULL ;
while (((operand_4091 = enumerator_4091.nextObject ()))) {
macroValidPointer (operand_4091) ;
result << "    public : const GALGAS_" ;
result << operand_4091->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (91)) ;
result << " * attribute_" ;
result << operand_4091->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (91)) ;
result << " (void) const ;\n" ;
}
result << "  } ;\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void dotAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n"
  "                          const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n"
  "                          COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void addAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_4593 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4593 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4593 = enumerator_4593.nextObject ()))) {
macroValidPointer (operand_4593) ;
result << ",\n"
  "                          const GALGAS_" ;
result << operand_4593->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (104)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (104)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") ;\n"
  "  \n"
  "void modifier_popSmallest (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_4834 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4834 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4834 = enumerator_4834.nextObject ()))) {
macroValidPointer (operand_4834) ;
result << "                           GALGAS_" ;
result << operand_4834->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (111)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (111)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                           C_Compiler * inCompiler\n"
  "                           COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void modifier_popGreatest (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_5169 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_5169 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5169 = enumerator_5169.nextObject ()))) {
macroValidPointer (operand_5169) ;
result << "                          GALGAS_" ;
result << operand_5169->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (119)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (119)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                          C_Compiler * inCompiler\n"
  "                          COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "\n"
  "void method_smallest (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_5499 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_5499 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5499 = enumerator_5499.nextObject ()))) {
macroValidPointer (operand_5499) ;
result << "                      GALGAS_" ;
result << operand_5499->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (128)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (128)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                      C_Compiler * inCompiler\n"
  "                      COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "void method_greatest (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_5816 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_5816 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5816 = enumerator_5816.nextObject ()))) {
macroValidPointer (operand_5816) ;
result << "                      GALGAS_" ;
result << operand_5816->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (136)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (136)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                      C_Compiler * inCompiler\n"
  "                      COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'sortedlistTypeImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_sortedlistTypeImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_attributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_sortDescriptorList & var_cas_SORT_ATTRIBUTE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_SORT_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("'")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string ("' class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (\"" ;
result << var_cas_TYPE_NAME ;
result << "\",\n"
  "                                                                    NULL,\n"
  "                                                                    (genericObjectCompareFunctionType) AC_GALGAS_SortedList::objectCompare) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inSource\n"
  "                              COMMA_LOCATION_ARGS) :\n"
  "AC_GALGAS_SortedList (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (15)) ;
result << ", inSource COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::typeDescriptor (void) const {\n"
  "  return & kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "PMSInt32 GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::compareSortedListElements (const AC_GALGAS_root * inLeftAttributeList [],\n"
  "                                                         const AC_GALGAS_root * inRightAttributeList []) {\n"
  "  PMSInt32 result = 0 ;\n" ;
GGS_sortDescriptorList::cEnumerator enumerator_1551 (var_cas_SORT_ATTRIBUTE_LIST, true) ;
const GGS_sortDescriptorList::cElement * operand_1551 = NULL ;
while (((operand_1551 = enumerator_1551.nextObject ()))) {
macroValidPointer (operand_1551) ;
result << "  if (result == 0) {\n"
  "    result = " ;
if (operand_1551->mAscendingOrder.boolValue ()) {
}else {
result << "- " ;
}
result << "inLeftAttributeList [" ;
result << operand_1551->mAttributeIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (31)) ;
result << "]->genericObjectCompare (inRightAttributeList [" ;
result << operand_1551->mAttributeIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (31)) ;
result << "] COMMA_HERE) ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioOperand\n"
  "                              COMMA_LOCATION_ARGS) {\n"
  "  if (ioOperand->retainCount () > 1) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * p = NULL ;\n"
  "    macroMyNew (p, GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (ioOperand COMMA_THERE)) ;\n"
  "    macroReleaseObject (ioOperand) ;\n"
  "    macroRetainObject (p) ;\n"
  "    ioOperand = p ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_emptySortedList (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (NULL COMMA_THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_sortedListWithValue (" ;
const GGS_string var_cas_COL0 = GGS_string::stringWithColumnCount (result) ;
GGS_attributeList::cEnumerator enumerator_2754 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_2754 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2754 = enumerator_2754.nextObject ()))) {
macroValidPointer (operand_2754) ;
result << "const GALGAS_" ;
result << operand_2754->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (62)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (62)) ;
if (enumerator_2754.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL0 ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result << var_cas_COL0 ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_emptySortedList (THERE) ;\n"
  "  const AC_GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (67)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_3129 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3129 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3129 = enumerator_3129.nextObject ()))) {
macroValidPointer (operand_3129) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (69)) ;
if (enumerator_3129.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "  result->addObject (attributeArray) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void addAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_attributeList::cEnumerator enumerator_3428 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3428 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3428 = enumerator_3428.nextObject ()))) {
macroValidPointer (operand_3428) ;
result << ",\n"
  "                          const GALGAS_" ;
result << operand_3428->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (81)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (81)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult COMMA_HERE) ;\n"
  "    const AC_GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (86)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_3779 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_3779 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3779 = enumerator_3779.nextObject ()))) {
macroValidPointer (operand_3779) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (88)) ;
if (enumerator_3779.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "    ioResult->addObject (attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void modifier_popSmallest (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_4080 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4080 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4080 = enumerator_4080.nextObject ()))) {
macroValidPointer (operand_4080) ;
result << "                           GALGAS_" ;
result << operand_4080->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (100)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (100)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                           C_Compiler * inCompiler\n"
  "                           COMMA_LOCATION_ARGS) {\n" ;
GGS_attributeList::cEnumerator enumerator_4358 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4358 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4358 = enumerator_4358.nextObject ()))) {
macroValidPointer (operand_4358) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (106)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult COMMA_HERE) ;\n"
  "    const AC_GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (110)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_4644 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4644 = NULL ;
while (((operand_4644 = enumerator_4644.nextObject ()))) {
macroValidPointer (operand_4644) ;
result << "NULL" ;
if (enumerator_4644.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "    ioResult->removeSmallestObject (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_attributeList::cEnumerator enumerator_4800 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_4800 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4800 = enumerator_4800.nextObject ()))) {
macroValidPointer (operand_4800) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (117)) ;
result << " = (GALGAS_" ;
result << operand_4800->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (117)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (117)) ;
result << "] ;\n"
  "    macroValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (118)) ;
result << ", GALGAS_" ;
result << operand_4800->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (118)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void modifier_popGreatest (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
GGS_attributeList::cEnumerator enumerator_5256 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_5256 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5256 = enumerator_5256.nextObject ()))) {
macroValidPointer (operand_5256) ;
result << "                        GALGAS_" ;
result << operand_5256->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (127)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (127)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                        C_Compiler * inCompiler\n"
  "                        COMMA_LOCATION_ARGS) {\n" ;
GGS_attributeList::cEnumerator enumerator_5525 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_5525 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5525 = enumerator_5525.nextObject ()))) {
macroValidPointer (operand_5525) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (133)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult COMMA_HERE) ;\n"
  "    const AC_GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (137)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_5811 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_5811 = NULL ;
while (((operand_5811 = enumerator_5811.nextObject ()))) {
macroValidPointer (operand_5811) ;
result << "NULL" ;
if (enumerator_5811.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "    ioResult->removeGreatestObject (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_attributeList::cEnumerator enumerator_5967 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_5967 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5967 = enumerator_5967.nextObject ()))) {
macroValidPointer (operand_5967) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (144)) ;
result << " = (GALGAS_" ;
result << operand_5967->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (144)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (144)) ;
result << "] ;\n"
  "    macroValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (145)) ;
result << ", GALGAS_" ;
result << operand_5967->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (145)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void dotAssign_operation (GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n"
  "                          const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n"
  "                          COMMA_LOCATION_ARGS) {\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult COMMA_THERE) ;\n"
  "    ioResult->appendSortedList (inOperand) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::operator_concat (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                            const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                            COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = NULL ;\n"
  "  if ((inOperand1 != NULL) && (inOperand2 != NULL)) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_emptySortedList (THERE) ;\n"
  "    result->appendSortedList (inOperand1) ;\n"
  "    result->appendSortedList (inOperand2) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void method_smallest (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_7451 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7451 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7451 = enumerator_7451.nextObject ()))) {
macroValidPointer (operand_7451) ;
result << "                      GALGAS_" ;
result << operand_7451->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (179)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (179)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                      C_Compiler * inCompiler\n"
  "                      COMMA_LOCATION_ARGS) {\n" ;
GGS_attributeList::cEnumerator enumerator_7714 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7714 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7714 = enumerator_7714.nextObject ()))) {
macroValidPointer (operand_7714) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (185)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  if (inList != NULL) {\n"
  "    const AC_GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (188)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_7940 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_7940 = NULL ;
while (((operand_7940 = enumerator_7940.nextObject ()))) {
macroValidPointer (operand_7940) ;
result << "NULL" ;
if (enumerator_7940.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "    inList->smallestObjectAttributeList (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_attributeList::cEnumerator enumerator_8099 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_8099 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8099 = enumerator_8099.nextObject ()))) {
macroValidPointer (operand_8099) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (195)) ;
result << " = (GALGAS_" ;
result << operand_8099->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (195)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (195)) ;
result << "] ;\n"
  "    macroValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (196)) ;
result << ", GALGAS_" ;
result << operand_8099->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (196)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void method_greatest (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inList,\n" ;
GGS_attributeList::cEnumerator enumerator_8552 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_8552 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8552 = enumerator_8552.nextObject ()))) {
macroValidPointer (operand_8552) ;
result << "                      GALGAS_" ;
result << operand_8552->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (205)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (205)) ;
result << ",\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "                      C_Compiler * inCompiler\n"
  "                      COMMA_LOCATION_ARGS) {\n" ;
GGS_attributeList::cEnumerator enumerator_8815 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_8815 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8815 = enumerator_8815.nextObject ()))) {
macroValidPointer (operand_8815) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (211)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  if (inList != NULL) {\n"
  "    const AC_GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (214)) ;
result << "] = {" ;
GGS_attributeList::cEnumerator enumerator_9041 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_9041 = NULL ;
while (((operand_9041 = enumerator_9041.nextObject ()))) {
macroValidPointer (operand_9041) ;
result << "NULL" ;
if (enumerator_9041.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "    inList->greatestObjectAttributeList (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_attributeList::cEnumerator enumerator_9200 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_9200 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9200 = enumerator_9200.nextObject ()))) {
macroValidPointer (operand_9200) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (221)) ;
result << " = (GALGAS_" ;
result << operand_9200->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (221)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (221)) ;
result << "] ;\n"
  "    macroValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (222)) ;
result << ", GALGAS_" ;
result << operand_9200->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (222)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::cEnumerator::cEnumerator (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inEnumeratedObject,\n"
  "           const bool inAscending) :\n"
  "AC_GALGAS_Enumerator (inEnumeratedObject, inAscending) {\n"
  "}\n"
  "\n" ;
GGS_attributeList::cEnumerator enumerator_9781 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_attributeList::cElement * operand_9781 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9781 = enumerator_9781.nextObject ()))) {
macroValidPointer (operand_9781) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "const GALGAS_" ;
result << operand_9781->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (237)) ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::cEnumerator::attribute_" ;
result << operand_9781->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (237)) ;
result << " (void) const {\n"
  "  const GALGAS_" ;
result << operand_9781->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (238)) ;
result << " * result = (const GALGAS_" ;
result << operand_9781->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (238)) ;
result << " *) directAccess (" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (238)) ;
result << " COMMA_HERE) ;\n"
  "  macroValidObject (result, const GALGAS_" ;
result << operand_9781->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (239)) ;
result << ") ;\n"
  "  return result ;\n"
  "}\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    'enumTypeHeader' template of 'typeGenerationTemplate' filewrapper      *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_enumTypeHeader (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_lstringlist & var_cas_CONSTANT_LIST,
                                const GGS_enumMessageList & var_cas_ENUM_MESSAGE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_CONSTANT_LIST.isBuilt ()
    && var_cas_ENUM_MESSAGE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("'")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string ("' class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " : public AC_GALGAS_root {\n"
  "//--------------------------------- Enumeration\n"
  "  protected : typedef enum {" ;
const GGS_string var_cas_COL0 = GGS_string::stringWithColumnCount (result) ;
GGS_lstringlist::cEnumerator enumerator_707 (var_cas_CONSTANT_LIST, true) ;
const GGS_lstringlist::cElement * operand_707 = NULL ;
while (((operand_707 = enumerator_707.nextObject ()))) {
macroValidPointer (operand_707) ;
result << "kEnum_" ;
result << operand_707->mValue.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_707.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL0 ;
}
}
result << "} enum_" ;
result << var_cas_TYPE_NAME ;
result << " ;\n"
  "\n"
  "//--------------------------------- Private attribute\n"
  "  private : enum_" ;
result << var_cas_TYPE_NAME ;
result << " mEnumValue ;\n"
  "\n"
  "//--------------------------------- Constructor\n"
  "  protected : GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (const enum_" ;
result << var_cas_TYPE_NAME ;
result << " inValue COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--------------------------------- No copy\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " &) ;\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " & operator = (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " &) ;\n"
  "\n"
  "//--------------------------------- Implementation of reader 'description'\n"
  "  public : virtual void description (C_String & ioString,\n"
  "                                     const PMSInt32 inIndentation) const ;\n"
  "\n"
  "//--------------------------------- Comparison\n"
  "  public : static GALGAS_bool * operator_isEqual (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                  const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                  COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_bool * operator_isNotEqual (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                     const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                     COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_bool * operator_infOrEqual (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                     const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                     COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_bool * operator_supOrEqual (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                     const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                     COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_bool * operator_strictInf (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                    const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                    COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_bool * operator_strictSup (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                    const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                    COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--------------------------------- Compare (for sorted list)\n"
  "  public : virtual PMSInt32 genericObjectCompare (const AC_GALGAS_root * inOperand\n"
  "                                                   COMMA_LOCATION_ARGS) const ;\n"
  "\n"
  "//--------------------------------- Introspection\n"
  "  public : virtual const C_galgas_type_descriptor * typeDescriptor (void) const ;\n"
  "\n"
  "//--------------------------------- GALGAS constructors\n" ;
GGS_lstringlist::cEnumerator enumerator_3484 (var_cas_CONSTANT_LIST, true) ;
const GGS_lstringlist::cElement * operand_3484 = NULL ;
while (((operand_3484 = enumerator_3484.nextObject ()))) {
macroValidPointer (operand_3484) ;
result << "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * constructor_" ;
result << operand_3484->mValue.ggs_string ().reader_identifierRepresentation () ;
result << " (LOCATION_ARGS) ;\n" ;
}
result << "\n"
  "\n"
  "//--------------------------------- GALGAS messages\n" ;
GGS_enumMessageList::cEnumerator enumerator_3694 (var_cas_ENUM_MESSAGE_LIST, true) ;
const GGS_enumMessageList::cElement * operand_3694 = NULL ;
while (((operand_3694 = enumerator_3694.nextObject ()))) {
macroValidPointer (operand_3694) ;
result << "  protected : virtual GALGAS_string * reader_" ;
result << operand_3694->mEnumMessageName.ggs_string ().reader_identifierRepresentation () ;
result << " (LOCATION_ARGS) ;\n"
  "  friend GALGAS_string * readerCall_" ;
result << operand_3694->mEnumMessageName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inReceiver\n" ;
result << var_cas_COL ;
result << "LOCATION_ARGS) ;\n" ;
}
result << "\n"
  "} ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'enumTypeImplementation' template of 'typeGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_enumTypeImplementation (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_lstringlist & var_cas_CONSTANT_LIST,
                                const GGS_enumMessageList & var_cas_ENUM_MESSAGE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_CONSTANT_LIST.isBuilt ()
    && var_cas_ENUM_MESSAGE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("'")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string ("' class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (\"" ;
result << var_cas_TYPE_NAME ;
result << "\", NULL) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (" ;
const GGS_string var_cas_COL0 = GGS_string::stringWithColumnCount (result) ;
result << "const enum_" ;
result << var_cas_TYPE_NAME ;
result << " inValue\n" ;
result << var_cas_COL0 ;
result << "COMMA_LOCATION_ARGS) :\n"
  "AC_GALGAS_root (THERE),\n"
  "mEnumValue (inValue) {\n"
  "}\n"
  "\n" ;
GGS_lstringlist::cEnumerator enumerator_790 (var_cas_CONSTANT_LIST, true) ;
const GGS_lstringlist::cElement * operand_790 = NULL ;
while (((operand_790 = enumerator_790.nextObject ()))) {
macroValidPointer (operand_790) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_" ;
result << operand_790->mValue.ggs_string ().reader_identifierRepresentation () ;
result << " (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (kEnum_" ;
result << operand_790->mValue.ggs_string ().reader_identifierRepresentation () ;
result << " COMMA_THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
GGS_enumMessageList::cEnumerator enumerator_1223 (var_cas_ENUM_MESSAGE_LIST, true) ;
const GGS_enumMessageList::cElement * operand_1223 = NULL ;
while (((operand_1223 = enumerator_1223.nextObject ()))) {
macroValidPointer (operand_1223) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_string * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::reader_" ;
result << operand_1223->mEnumMessageName.ggs_string ().reader_identifierRepresentation () ;
result << " (LOCATION_ARGS) {\n"
  "  GALGAS_string * result = NULL ;\n"
  "  switch (mEnumValue) {\n" ;
GGS_enumMessageAssociationList::cEnumerator enumerator_1532 (operand_1223->mMessageAssociationList, true) ;
const GGS_enumMessageAssociationList::cElement * operand_1532 = NULL ;
while (((operand_1532 = enumerator_1532.nextObject ()))) {
macroValidPointer (operand_1532) ;
result << "  case kEnum_" ;
result << operand_1532->mConstantName.ggs_string ().reader_identifierRepresentation () ;
result << ":\n"
  "    result = GALGAS_string::constructor_new (" ;
result << operand_1532->mMessage.ggs_string ().reader_utf8Representation () ;
result << " COMMA_THERE) ;\n"
  "    break ;\n" ;
}
result << "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
GGS_enumMessageList::cEnumerator enumerator_1813 (var_cas_ENUM_MESSAGE_LIST, true) ;
const GGS_enumMessageList::cElement * operand_1813 = NULL ;
while (((operand_1813 = enumerator_1813.nextObject ()))) {
macroValidPointer (operand_1813) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_string * readerCall_" ;
result << operand_1813->mEnumMessageName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inReceiver\n" ;
result << var_cas_COL ;
result << "LOCATION_ARGS) {\n"
  "  GALGAS_string * result = NULL ;\n"
  "  if (NULL != inReceiver) {\n"
  "    result = nReceiver->reader_" ;
result << operand_1813->mEnumMessageName.ggs_string ().reader_identifierRepresentation () ;
result << " (THERE) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::description (" ;
const GGS_string var_cas_COL_D = GGS_string::stringWithColumnCount (result) ;
result << "C_String & ioString,\n" ;
result << var_cas_COL_D ;
result << "const PMSInt32 /* inIndentation */) const {\n"
  "  ioString << \"<enum @" ;
result << var_cas_TYPE_NAME ;
result << ": \" ;\n"
  "  switch (mEnumValue) {\n" ;
GGS_lstringlist::cEnumerator enumerator_2687 (var_cas_CONSTANT_LIST, true) ;
const GGS_lstringlist::cElement * operand_2687 = NULL ;
while (((operand_2687 = enumerator_2687.nextObject ()))) {
macroValidPointer (operand_2687) ;
result << "  case kEnum_" ;
result << operand_2687->mValue.ggs_string ().reader_identifierRepresentation () ;
result << ":\n"
  "    ioString << " ;
result << operand_2687->mValue.ggs_string ().reader_utf8Representation () ;
result << " ;\n"
  "    break ;\n" ;
}
result << "  }\n"
  "\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "PMSInt32 GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::genericObjectCompare (" ;
const GGS_string var_cas_COL_C = GGS_string::stringWithColumnCount (result) ;
result << "const AC_GALGAS_root * inOperand\n" ;
result << var_cas_COL_C ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operand = (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " *) inOperand ;\n"
  "  macroValidObjectThere (operand, const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << ") ;\n"
  "  return ((PMSInt32) mEnumValue) - ((PMSInt32) operand->mEnumValue) ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_bool * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::operator_isEqual (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                     const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                     COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_bool * result = NULL ;\n"
  "  if ((NULL != inOperand1) && (NULL != inOperand2)) {\n"
  "    result = GALGAS_bool::constructor_new (inOperand1->mEnumValue == inOperand2->mEnumValue COMMA_THERE) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_bool * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::operator_isNotEqual (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                        const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                        COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_bool * result = NULL ;\n"
  "  if ((NULL != inOperand1) && (NULL != inOperand2)) {\n"
  "    result = GALGAS_bool::constructor_new (inOperand1->mEnumValue != inOperand2->mEnumValue COMMA_THERE) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_bool * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::operator_infOrEqual (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                        const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                        COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_bool * result = NULL ;\n"
  "  if ((NULL != inOperand1) && (NULL != inOperand2)) {\n"
  "    result = GALGAS_bool::constructor_new (inOperand1->mEnumValue <= inOperand2->mEnumValue COMMA_THERE) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_bool * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::operator_supOrEqual (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                        const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                        COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_bool * result = NULL ;\n"
  "  if ((NULL != inOperand1) && (NULL != inOperand2)) {\n"
  "\n"
  "    result = GALGAS_bool::constructor_new (inOperand1->mEnumValue >= inOperand2->mEnumValue COMMA_THERE) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_bool * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::operator_strictInf (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                       const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                       COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_bool * result = NULL ;\n"
  "  if ((NULL != inOperand1) && (NULL != inOperand2)) {\n"
  "    result = GALGAS_bool::constructor_new (inOperand1->mEnumValue < inOperand2->mEnumValue COMMA_THERE) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_bool * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::operator_strictSup (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                                       const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n"
  "                                                       COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_bool * result = NULL ;\n"
  "  if ((NULL != inOperand1) && (NULL != inOperand2)) {\n"
  "    result = GALGAS_bool::constructor_new (inOperand1->mEnumValue > inOperand2->mEnumValue COMMA_THERE) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::typeDescriptor (void) const {\n"
  "  return & kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " ;\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Virtual Table for category method '@semanticDeclaration.generateCode'    *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticDeclaration__generateCode> gDispatchTableForMethod__semanticDeclaration__generateCode ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticDeclaration__generateCode (typeCategoryMethod__semanticDeclaration__generateCode inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticDeclaration__generateCode.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticDeclaration__generateCode
findCategoryMethod__semanticDeclaration__generateCode (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticDeclaration__generateCode result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticDeclaration__generateCode.count ()) {
    result = gDispatchTableForMethod__semanticDeclaration__generateCode (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticDeclaration__generateCode (superClassPtr) ;
      gDispatchTableForMethod__semanticDeclaration__generateCode.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Category method '@mapDeclaration.generateCode'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_mapDeclaration * operand_8779,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8779 != NULL) {
inLexique.printMessage (GGS_string ("@mapDeclaration generateCode\n") COMMA_SOURCE_FILE_AT_LINE (199)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@mapindexDeclaration.generateCode'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapindexDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_mapindexDeclaration * operand_9091,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9091 != NULL) {
inLexique.printMessage (GGS_string ("@mapindexDeclaration generateCode\n") COMMA_SOURCE_FILE_AT_LINE (209)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@enumDeclaration.generateCode'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__enumDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_enumDeclaration * operand_9404,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & var_cas_ioHeaderString,
                                GGS_string & var_cas_ioImplementationString
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9404 != NULL) {
var_cas_ioHeaderString.dotAssign_operation (template_filewrapper_typeGenerationTemplate_enumTypeHeader (inLexique, operand_9404->mEnumTypeName.ggs_string ().reader_identifierRepresentation (), operand_9404->mConstantList, operand_9404->mEnumMessageList)) ;
var_cas_ioImplementationString.dotAssign_operation (template_filewrapper_typeGenerationTemplate_enumTypeImplementation (inLexique, operand_9404->mEnumTypeName.ggs_string ().reader_identifierRepresentation (), operand_9404->mConstantList, operand_9404->mEnumMessageList)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@filewrapperDeclaration.generateCode'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__filewrapperDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_filewrapperDeclaration * operand_10002,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10002 != NULL) {
inLexique.printMessage (GGS_string ("@filewrapperDeclaration.semanticAnalysis [in semanticCompilation.gSemantics]\n") COMMA_SOURCE_FILE_AT_LINE (238)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@sortedListDeclaration.generateCode'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sortedListDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_sortedListDeclaration * operand_10364,
                                GGS_semanticContext & var_cas_ioSemanticContext,
                                GGS_string & var_cas_ioHeaderString,
                                GGS_string & var_cas_ioImplementationString
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10364 != NULL) {
GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
GGS_indexAttributeMap  var_cas_indexAttributeMap = GGS_indexAttributeMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
{
GGS_attributeInCollectionList::cEnumerator enumerator_10589 (operand_10364->mAttributeList, true) ;
const GGS_attributeInCollectionList::cElement * operand_10589 = NULL ;
while (((operand_10589 = enumerator_10589.nextObject ()))) {
  macroValidPointer (operand_10589) ;
GGS_typeMapIndex  var_cas_attributeTypeIndex ;
GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_10589->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (252)) ;
var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_10589->mAttributeName) ;
var_cas_indexAttributeMap.modifier_insertKey (inLexique, operand_10589->mAttributeName, var_cas_indexAttributeMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (257)) ;
}
}
GGS_sortDescriptorList  var_cas_sortAttributeList = GGS_sortDescriptorList ::constructor_emptyList () ;
{
GGS_sortedListSortDescriptorList::cEnumerator enumerator_10995 (operand_10364->mSortDescriptorList, true) ;
const GGS_sortedListSortDescriptorList::cElement * operand_10995 = NULL ;
while (((operand_10995 = enumerator_10995.nextObject ()))) {
  macroValidPointer (operand_10995) ;
GGS_uint  var_cas_attributeIndex ;
const GGS_indexAttributeMap  temp_11058 = var_cas_indexAttributeMap ;
if (temp_11058.isBuilt ()) {
  temp_11058 (HERE)->method_searchKey (inLexique, operand_10995->mSortedAttributeName, var_cas_attributeIndex COMMA_SOURCE_FILE_AT_LINE (262)) ;
}
var_cas_sortAttributeList.addAssign_operation (var_cas_attributeIndex, operand_10995->mAscending) ;
}
}
GGS_sortedListDeclaration  var_cas_tt = operand_10364 ;
var_cas_ioHeaderString.dotAssign_operation (template_filewrapper_typeGenerationTemplate_sortedlistTypeHeader (inLexique, var_cas_tt.reader_mSortedListTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (267)).ggs_string ().reader_identifierRepresentation (), var_cas_attributeList)) ;
var_cas_ioImplementationString.dotAssign_operation (template_filewrapper_typeGenerationTemplate_sortedlistTypeImplementation (inLexique, var_cas_tt.reader_mSortedListTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (271)).ggs_string ().reader_identifierRepresentation (), var_cas_attributeList, var_cas_sortAttributeList)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@structDeclaration.generateCode'              *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__structDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_structDeclaration * operand_11722,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11722 != NULL) {
inLexique.printMessage (GGS_string ("@structDeclaration generateCode\n") COMMA_SOURCE_FILE_AT_LINE (284)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@listDeclaration.generateCode'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_listDeclaration * operand_12033,
                                GGS_semanticContext & var_cas_ioSemanticContext,
                                GGS_string & var_cas_ioHeaderString,
                                GGS_string & var_cas_ioImplementationString
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12033 != NULL) {
GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
{
GGS_attributeInCollectionList::cEnumerator enumerator_12206 (operand_12033->mAttributeList, true) ;
const GGS_attributeInCollectionList::cElement * operand_12206 = NULL ;
while (((operand_12206 = enumerator_12206.nextObject ()))) {
  macroValidPointer (operand_12206) ;
GGS_typeMapIndex  var_cas_attributeTypeIndex ;
GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_12206->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (297)) ;
var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_12206->mAttributeName) ;
}
}
GGS_listDeclaration  var_cas_tt = operand_12033 ;
var_cas_ioHeaderString.dotAssign_operation (template_filewrapper_typeGenerationTemplate_listTypeHeader (inLexique, var_cas_tt.reader_mListTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (305)).ggs_string ().reader_identifierRepresentation (), var_cas_attributeList)) ;
var_cas_ioImplementationString.dotAssign_operation (template_filewrapper_typeGenerationTemplate_listTypeImplementation (inLexique, var_cas_tt.reader_mListTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (309)).ggs_string ().reader_identifierRepresentation (), var_cas_attributeList)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@classDeclaration.generateCode'              *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__classDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_classDeclaration * operand_12945,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12945 != NULL) {
inLexique.printMessage (GGS_string ("@classDeclaration generateCode\n") COMMA_SOURCE_FILE_AT_LINE (321)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@externRoutineDeclaration.generateCode'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externRoutineDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_externRoutineDeclaration * operand_13264,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13264 != NULL) {
inLexique.printMessage (GGS_string ("@externRoutineDeclaration generateCode\n") COMMA_SOURCE_FILE_AT_LINE (331)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@routineDeclaration.generateCode'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__routineDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_routineDeclaration * operand_13585,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13585 != NULL) {
inLexique.printMessage (GGS_string ("@routineDeclaration generateCode\n") COMMA_SOURCE_FILE_AT_LINE (341)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@externFunctionDeclaration.generateCode'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externFunctionDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_externFunctionDeclaration * operand_14031,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_14031 != NULL) {
inLexique.printMessage (GGS_string ("@externFunctionDeclaration generateCode\n") COMMA_SOURCE_FILE_AT_LINE (354)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@functionDeclaration.generateCode'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__functionDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_functionDeclaration * operand_14354,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_14354 != NULL) {
inLexique.printMessage (GGS_string ("@functionDeclaration generateCode\n") COMMA_SOURCE_FILE_AT_LINE (364)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@onceFunctionDeclaration.generateCode'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__onceFunctionDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_onceFunctionDeclaration * operand_14800,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_14800 != NULL) {
inLexique.printMessage (GGS_string ("@onceFunctionDeclaration generateCode\n") COMMA_SOURCE_FILE_AT_LINE (377)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@listmapDeclaration.generateCode'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listmapDeclaration__generateCode (C_Compiler & inLexique,
                                const cPtr_listmapDeclaration * operand_15120,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_15120 != NULL) {
inLexique.printMessage (GGS_string ("@listmapDeclaration generateCode\n") COMMA_SOURCE_FILE_AT_LINE (387)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticsGeneration (void) {
  enterCategoryReader__semanticDeclaration__generatePredeclaration (category_reader__semanticDeclaration__generatePredeclaration, gClassInfoFor__semanticDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__mapDeclaration__generatePredeclaration, gClassInfoFor__mapDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__mapindexDeclaration__generatePredeclaration, gClassInfoFor__mapindexDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__enumDeclaration__generatePredeclaration, gClassInfoFor__enumDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__filewrapperDeclaration__generatePredeclaration, gClassInfoFor__filewrapperDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__sortedListDeclaration__generatePredeclaration, gClassInfoFor__sortedListDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__structDeclaration__generatePredeclaration, gClassInfoFor__structDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__listDeclaration__generatePredeclaration, gClassInfoFor__listDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__classDeclaration__generatePredeclaration, gClassInfoFor__classDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__externRoutineDeclaration__generatePredeclaration, gClassInfoFor__externRoutineDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__routineDeclaration__generatePredeclaration, gClassInfoFor__routineDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__externFunctionDeclaration__generatePredeclaration, gClassInfoFor__externFunctionDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__functionDeclaration__generatePredeclaration, gClassInfoFor__functionDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__onceFunctionDeclaration__generatePredeclaration, gClassInfoFor__onceFunctionDeclaration.slotID ()) ;
  enterCategoryReader__semanticDeclaration__generatePredeclaration ((typeCategoryReader__semanticDeclaration__generatePredeclaration) category_reader__listmapDeclaration__generatePredeclaration, gClassInfoFor__listmapDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__mapDeclaration__generateCode, gClassInfoFor__mapDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__mapindexDeclaration__generateCode, gClassInfoFor__mapindexDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__enumDeclaration__generateCode, gClassInfoFor__enumDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__filewrapperDeclaration__generateCode, gClassInfoFor__filewrapperDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__sortedListDeclaration__generateCode, gClassInfoFor__sortedListDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__structDeclaration__generateCode, gClassInfoFor__structDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__listDeclaration__generateCode, gClassInfoFor__listDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__classDeclaration__generateCode, gClassInfoFor__classDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__externRoutineDeclaration__generateCode, gClassInfoFor__externRoutineDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__routineDeclaration__generateCode, gClassInfoFor__routineDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__externFunctionDeclaration__generateCode, gClassInfoFor__externFunctionDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__functionDeclaration__generateCode, gClassInfoFor__functionDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__onceFunctionDeclaration__generateCode, gClassInfoFor__onceFunctionDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__generateCode ((typeCategoryMethod__semanticDeclaration__generateCode) category_method__listmapDeclaration__generateCode, gClassInfoFor__listmapDeclaration.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_semanticsGeneration (void) {
  gDispatchTableForReader__semanticDeclaration__generatePredeclaration.free () ;
  gDispatchTableForMethod__semanticDeclaration__generateCode.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticsGeneration (prologueRoutineFor_semanticsGeneration, epilogueRoutineFor_semanticsGeneration) ;

//---------------------------------------------------------------------------*

