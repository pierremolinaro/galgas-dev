//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'semanticGeneration.cpp'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                        may 26th, 2010, at 15h8'6"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticGeneration.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticGeneration.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of function "generateProcedure"               *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string function_generateProcedure (C_Compiler & inLexique,
                                const GGS_string  var_cas_inProcedureName,
                                const GGS_formalParameterListForGeneration   var_cas_inFormalArgumentList,
                                const GGS_semanticInstructionListForGeneration   var_cas_inInstructionList,
                                const GGS_bool  var_cas_inProcedureIsConst,
                                const GGS_string  var_cas_inCompilerTypeName COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER function_generateProcedure at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_outGeneratedCode ;
  GGS_stringset  var_cas_unusedVariableCppNameSet = GGS_stringset ::constructor_emptySet () ;
  var_cas_unusedVariableCppNameSet.addAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (41))) ;
  {
    GGS_formalParameterListForGeneration::cEnumerator enumerator_2408 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalParameterListForGeneration::cElement * operand_2408 = NULL ;
    while (((operand_2408 = enumerator_2408.nextObject ()))) {
      macroValidPointer (operand_2408) ;
      switch (operand_2408->mFormalArgumentPassingMode.enumValue ()) {
      case GGS_formalArgumentPassingModeAST::enum_argumentConstantIn:
      case GGS_formalArgumentPassingModeAST::enum_argumentIn:
      case GGS_formalArgumentPassingModeAST::enum_argumentOut:
        {
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentInOut:
        {
        var_cas_unusedVariableCppNameSet.addAssign_operation (operand_2408->mFormalArgumentCppName) ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::kNotBuilt:
        break ;
      }
    }
  }
  GGS_uint  var_cas_temporaryVariableIndex = GGS_uint (0U) ;
  GGS_string var_cas_routineBody = GGS_string ("") ;
  var_cas_routineBody.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (52)) ;
  {
    GGS_semanticInstructionListForGeneration::cEnumerator enumerator_2776 (var_cas_inInstructionList, true) ;
    const GGS_semanticInstructionListForGeneration::cElement * operand_2776 = NULL ;
    while (((operand_2776 = enumerator_2776.nextObject ()))) {
      macroValidPointer (operand_2776) ;
      { typeCategoryMethod__semanticInstructionForGeneration__generateInstruction method = findCategoryMethod__semanticInstructionForGeneration__generateInstruction (operand_2776->mInstruction.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_2776->mInstruction (HERE), var_cas_temporaryVariableIndex, var_cas_unusedVariableCppNameSet, var_cas_routineBody COMMA_SOURCE_FILE_AT_LINE (54)) ;
        }
      }
    }
  }
  var_cas_routineBody.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (56)) ;
  var_cas_outGeneratedCode = ((GGS_string ("void ")).operator_concat (var_cas_inProcedureName)).operator_concat (GGS_string (" (")) ;
  const GGS_uint  var_cas_colRef = var_cas_outGeneratedCode.reader_currentColumn () ;
  {
    GGS_formalParameterListForGeneration::cEnumerator enumerator_3113 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalParameterListForGeneration::cElement * operand_3113 = NULL ;
    while (((operand_3113 = enumerator_3113.nextObject ()))) {
      macroValidPointer (operand_3113) ;
      switch (operand_3113->mFormalArgumentPassingMode.enumValue ()) {
      case GGS_formalArgumentPassingModeAST::enum_argumentConstantIn:
        {
        var_cas_outGeneratedCode.appendCString ("GALGAS_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3113->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (64))) ;
        var_cas_outGeneratedCode.appendCString (" * const ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentInOut:
        {
        var_cas_outGeneratedCode.appendCString ("GALGAS_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3113->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (66))) ;
        var_cas_outGeneratedCode.appendCString (" * & ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentOut:
        {
        var_cas_outGeneratedCode.appendCString ("GALGAS_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3113->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (68))) ;
        var_cas_outGeneratedCode.appendCString (" * & ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentIn:
        {
        var_cas_outGeneratedCode.appendCString ("GALGAS_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3113->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (70))) ;
        var_cas_outGeneratedCode.appendCString (" * ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::kNotBuilt:
        break ;
      }
      const GGS_bool cond_3808 = var_cas_unusedVariableCppNameSet.reader_hasKey (operand_3113->mFormalArgumentCppName) ;
      if (cond_3808.isBuiltAndTrue ()) {
        var_cas_outGeneratedCode.appendCString ("/* ") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3113->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (" */") ;
      }else if (cond_3808.isBuiltAndFalse ()) {
        var_cas_outGeneratedCode.dotAssign_operation (operand_3113->mFormalArgumentCppName) ;
      }
      var_cas_outGeneratedCode.appendCString (",\n") ;
      var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (78)) ;
    }
  }
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inCompilerTypeName) ;
  var_cas_outGeneratedCode.appendCString (" * ") ;
  const GGS_bool cond_4185 = var_cas_unusedVariableCppNameSet.reader_hasKey (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (82))) ;
  if (cond_4185.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("/* ") ;
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (83))) ;
    var_cas_outGeneratedCode.appendCString (" */") ;
  }else if (cond_4185.isBuiltAndFalse ()) {
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (85))) ;
  }
  var_cas_outGeneratedCode.appendCString ("\n") ;
  var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (88)) ;
  var_cas_outGeneratedCode.appendCString ("COMMA_UNUSED_LOCATION_ARGS)") ;
  const GGS_bool cond_4451 = var_cas_inProcedureIsConst ;
  if (cond_4451.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString (" const") ;
  }
  var_cas_outGeneratedCode.appendCString (" {\n") ;
  {
      GGS_uint var_cas_IDX (true, 0) ;
    GGS_formalParameterListForGeneration::cEnumerator enumerator_4547 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalParameterListForGeneration::cElement * operand_4547 = NULL ;
    while (((operand_4547 = enumerator_4547.nextObject ()))) {
      macroValidPointer (operand_4547) ;
      switch (operand_4547->mFormalArgumentPassingMode.enumValue ()) {
      case GGS_formalArgumentPassingModeAST::enum_argumentOut:
        {
        var_cas_outGeneratedCode.appendCString ("  macroReleaseObject (") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_4547->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (") ; // Release 'out' argument\n") ;
        var_cas_outGeneratedCode.appendCString ("  ") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_4547->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (" = NULL ;\n") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentConstantIn:
      case GGS_formalArgumentPassingModeAST::enum_argumentIn:
      case GGS_formalArgumentPassingModeAST::enum_argumentInOut:
        {
        }
        break ;
      case GGS_formalArgumentPassingModeAST::kNotBuilt:
        break ;
      }
      var_cas_IDX.mValue ++ ;
    }
  }
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_routineBody) ;
  {
      GGS_uint var_cas_IDX (true, 0) ;
    GGS_formalParameterListForGeneration::cEnumerator enumerator_5063 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalParameterListForGeneration::cElement * operand_5063 = NULL ;
    while (((operand_5063 = enumerator_5063.nextObject ()))) {
      macroValidPointer (operand_5063) ;
      switch (operand_5063->mFormalArgumentPassingMode.enumValue ()) {
      case GGS_formalArgumentPassingModeAST::enum_argumentIn:
        {
        var_cas_outGeneratedCode.appendCString ("  macroReleaseObject (") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_5063->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (") ; // Release 'in' argument\n") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentConstantIn:
        {
        var_cas_outGeneratedCode.appendCString ("  macroReleaseObject (") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_5063->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (") ; // Release 'const in' argument\n") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentInOut:
      case GGS_formalArgumentPassingModeAST::enum_argumentOut:
        {
        }
        break ;
      case GGS_formalArgumentPassingModeAST::kNotBuilt:
        break ;
      }
      var_cas_IDX.mValue ++ ;
    }
  }
  var_cas_outGeneratedCode.appendCString ("}\n"
    "\n") ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE function_generateProcedure\n") ;
  #endif
  return var_cas_outGeneratedCode ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_generateProcedure (C_Compiler & inLexique,
                           const GGS_objectlist & inEffectiveParameterArray,
                           const GGS_location & inErrorLocation
                           COMMA_LOCATION_ARGS) {
  const GGS_string arg_0 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (0) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_formalParameterListForGeneration  arg_1 = GGS_formalParameterListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (1) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_semanticInstructionListForGeneration  arg_2 = GGS_semanticInstructionListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (2) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_bool arg_3 = GGS_bool::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (3) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_4 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (4) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string result = function_generateProcedure (inLexique,
                            arg_0,
                            arg_1,
                            arg_2,
                            arg_3,
                            arg_4
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

static const C_galgas_type_descriptorEX *
kArgumentTypeList_generateProcedure [5] = {& kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_formalParameterListForGeneration ,
                              & kTypeDescriptor_GGS_semanticInstructionListForGeneration ,
                              & kTypeDescriptor_GGS_bool,
                              & kTypeDescriptor_GGS_string} ;

const C_galgas_function_descriptorEX
kFunction_descriptor_generateProcedure ("generateProcedure",
                              functionForGenericCall_generateProcedure,
                              & kTypeDescriptor_GGS_string,
                              5,
                              kArgumentTypeList_generateProcedure) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of wrapper 'semanticComponentGenerationTemplate'       *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_semanticComponentGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_semanticComponentGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_semanticComponentGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_semanticComponentGenerationTemplate_0,
  0,
  gWrapperAllDirectories_semanticComponentGenerationTemplate_0
) ;

//---------------------------------------------------------------------------*
//                                                                           *
//'genericTypeHeader' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_genericTypeHeader (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt () ;
  if (isBuilt) {
    result << "//---------------------------------------------------------------------------*\n"
      "//                                                                           *\n"
      "//" ;
    result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" generic type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
    result << "*\n"
      "//                                                                           *\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " ;\n"
      "\n" ;
  }
  return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'genericTypeImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_genericTypeImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_unifiedTypeMapProxy & var_cas_SUPER_TYPE_INDEX) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_INDEX.isBuilt () ;
  if (isBuilt) {
    result << "//---------------------------------------------------------------------------*\n"
      "//                                                                           *\n"
      "//" ;
    result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" generic type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
    result << "*\n"
      "//                                                                           *\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "const C_galgas_type_descriptor\n"
      "kTypeDescriptor_GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " (" ;
    columnMarker = result.currentColumn () ;
    result << "\"" ;
    result << var_cas_TYPE_NAME ;
    result << "\",\n"
      "                       " ;
    result.appendSpacesUntilColumn (columnMarker) ;
    if (var_cas_SUPER_TYPE_INDEX.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (9)).boolValue ()) {
      result << "NULL" ;
    }else {
      result << "& kTypeDescriptor_GALGAS_" ;
      result << var_cas_SUPER_TYPE_INDEX.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
    }
    result << ",\n"
      "                       " ;
    result.appendSpacesUntilColumn (columnMarker) ;
    result << "NULL) ;\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "const C_galgas_type_descriptor * GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << "::typeDescriptor (void) const {\n"
      "  return & kTypeDescriptor_GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " ;\n"
      "}\n"
      "\n" ;
  }
  return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'unifiedTypeHeader' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_unifiedTypeHeader (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_bool& var_cas_IS_CONCRETE,
                                const GGS_unifiedTypeMapProxy & var_cas_SUPER_TYPE_INDEX,
                                const GGS_typeKindEnum& var_cas_TYPE_KIND,
                                const GGS_typedAttributeList & var_cas_CURRENT_TYPE_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_INHERITED_ATTRIBUTE_LIST,
                                const GGS_constructorMap & var_cas_CONSTRUCTOR_MAP,
                                const GGS_readerMap & var_cas_READER_MAP,
                                const GGS_modifierMap & var_cas_MODIFIER_MAP,
                                const GGS_instanceMethodMap & var_cas_INSTANCE_METHOD_MAP,
                                const GGS_classMethodMap & var_cas_CLASS_METHOD_MAP,
                                const GGS_enumerationDescriptorList & var_cas_ENUMERATION_DESCRIPTOR_LIST,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_unifiedTypeMapProxyList & var_cas_ADD_ASSIGN_ARGUMENT_LIST,
                                const GGS_nativeAttributeList & var_cas_NATIVE_ATTRIBUTE_LIST,
                                const GGS_lstringlist & var_cas_ENUM_CONSTANT_LIST,
                                const GGS_typedAttributeList & var_cas_PRIVATE_DATA_NUMBER_TYPED_LIST,
                                const GGS_withAccessorMap & var_cas_WITH_ACCESSOR_MAP) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_IS_CONCRETE.isBuilt ()
    && var_cas_SUPER_TYPE_INDEX.isBuilt ()
    && var_cas_TYPE_KIND.isBuilt ()
    && var_cas_CURRENT_TYPE_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_INHERITED_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_CONSTRUCTOR_MAP.isBuilt ()
    && var_cas_READER_MAP.isBuilt ()
    && var_cas_MODIFIER_MAP.isBuilt ()
    && var_cas_INSTANCE_METHOD_MAP.isBuilt ()
    && var_cas_CLASS_METHOD_MAP.isBuilt ()
    && var_cas_ENUMERATION_DESCRIPTOR_LIST.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_ADD_ASSIGN_ARGUMENT_LIST.isBuilt ()
    && var_cas_NATIVE_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_ENUM_CONSTANT_LIST.isBuilt ()
    && var_cas_PRIVATE_DATA_NUMBER_TYPED_LIST.isBuilt ()
    && var_cas_WITH_ACCESSOR_MAP.isBuilt () ;
  if (isBuilt) {
    result << "//---------------------------------------------------------------------------*\n"
      "//                                                                           *\n"
      "//" ;
    result << ((((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_TYPE_KIND.reader_kind (inLexique COMMA_SOURCE_FILE_AT_LINE (3)))).operator_concat (GGS_string (" type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
    result << "*\n"
      "//                                                                           *\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " ;\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "class GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " : public GALGAS_" ;
    result << var_cas_SUPER_TYPE_INDEX.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
    result << " {\n" ;
    if ((var_cas_ENUM_CONSTANT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- Enumeration type declaration\n"
        "  private : typedef enum {" ;
      GGS_lstringlist::cEnumerator enumerator_843 (var_cas_ENUM_CONSTANT_LIST, true) ;
      const GGS_lstringlist::cElement * operand_843 = NULL ;
      while (((operand_843 = enumerator_843.nextObject ()))) {
        macroValidPointer (operand_843) ;
        result << "kEnum_" ;
        result << operand_843->mValue.ggs_string ().reader_identifierRepresentation () ;
        if (enumerator_843.hasNextObject ()) {
          result << ", " ;
        }
      }
      result << "} enumeration ;\n"
        "\n"
        "//--------------------------------- Private attribute\n"
        "  private : enumeration mEnumValue ;\n"
        "\n"
        "//--------------------------------- C++ constructor (for enumeration type)\n"
        "  public : GALGAS_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " (const enumeration inValue COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateConstructorWithSelfObject (inLexique COMMA_SOURCE_FILE_AT_LINE (31)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "\n"
        "//--------------------------------- C++ constructor (for inheritance for predefined type)\n"
        "  protected : GALGAS_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " (GALGAS_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " * inObject COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateCppConstructorWithNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (38)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "\n"
        "//--------------------------------- C++ constructor (with native attributes)\n"
        "  protected : GALGAS_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " (" ;
      columnMarker = result.currentColumn () ;
      GGS_nativeAttributeList::cEnumerator enumerator_1733 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
      const GGS_nativeAttributeList::cElement * operand_1733 = NULL ;
      while (((operand_1733 = enumerator_1733.nextObject ()))) {
        macroValidPointer (operand_1733) ;
        result << "const " ;
        result << operand_1733->mCppClassName ;
        if (operand_1733->mIsPointer.boolValue ()) {
          result << " *" ;
        }else {
        }
        if (operand_1733->mUseReferenceForConstructor.boolValue ()) {
          result << " &" ;
        }else {
        }
        result << " inOperand_" ;
        result << operand_1733->mAttributeName ;
        if (enumerator_1733.hasNextObject ()) {
          result << ",\n" ;
          result.appendSpacesUntilColumn (columnMarker) ;
        }
      }
      if ((var_cas_NATIVE_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
        result << "LOCATION_ARGS) ;\n"
          "\n" ;
      }else {
        result << "\n" ;
        result.appendSpacesUntilColumn (columnMarker) ;
        result << "COMMA_LOCATION_ARGS) ;\n"
          "\n" ;
      }
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateCppConstructorWithCurrentAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (53)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "\n"
        "//--------------------------------- C++ constructor (with current attributes)\n"
        "  protected : GALGAS_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " (" ;
      columnMarker = result.currentColumn () ;
      GGS_typedAttributeList::cEnumerator enumerator_2298 (var_cas_CURRENT_TYPE_ATTRIBUTE_LIST, true) ;
      const GGS_typedAttributeList::cElement * operand_2298 = NULL ;
      { GGS_uint var_cas_IDX (true, 0) ;
    while (((operand_2298 = enumerator_2298.nextObject ()))) {
      macroValidPointer (operand_2298) ;
      result << "GALGAS_" ;
      result << operand_2298->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (57)) ;
      result << " * inAttribute_" ;
      result << operand_2298->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
      if (enumerator_2298.hasNextObject ()) {
        result << ",\n" ;
        result.appendSpacesUntilColumn (columnMarker) ;
      }
      var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
    }
  }
  if ((var_cas_CURRENT_TYPE_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
    result << "LOCATION_ARGS) ;\n"
      "\n" ;
  }else {
    result << "\n" ;
    result.appendSpacesUntilColumn (columnMarker) ;
    result << "COMMA_LOCATION_ARGS) ;\n"
      "\n" ;
  }
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateCppConstructorWithAllAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (67)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "\n"
    "//--------------------------------- C++ constructor\n"
    "  protected : GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " (" ;
  columnMarker = result.currentColumn () ;
  GGS_typedAttributeList::cEnumerator enumerator_2831 (var_cas_INHERITED_ATTRIBUTE_LIST, true) ;
  const GGS_typedAttributeList::cElement * operand_2831 = NULL ;
  { GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2831 = enumerator_2831.nextObject ()))) {
  macroValidPointer (operand_2831) ;
  result << "GALGAS_" ;
  result << operand_2831->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (71)) ;
  result << " * inAttribute_" ;
  result << operand_2831->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
  if (enumerator_2831.hasNextObject ()) {
    result << ",\n" ;
    result.appendSpacesUntilColumn (columnMarker) ;
  }
  var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((var_cas_INHERITED_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "LOCATION_ARGS) ;\n"
  "\n" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (81)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Native constructor\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_nativeAttributeList::cEnumerator enumerator_3371 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_3371 = NULL ;
while (((operand_3371 = enumerator_3371.nextObject ()))) {
macroValidPointer (operand_3371) ;
result << "const " ;
result << operand_3371->mCppClassName ;
if (operand_3371->mIsPointer.boolValue ()) {
  result << " *" ;
}else {
}
if (operand_3371->mUseReferenceForConstructor.boolValue ()) {
  result << " &" ;
}else {
}
result << " inOperand_" ;
result << operand_3371->mAttributeName ;
if (enumerator_3371.hasNextObject ()) {
  result << ",\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateVirtualDestructor (inLexique COMMA_SOURCE_FILE_AT_LINE (91)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Virtual destructor\n"
  "  protected : virtual ~ GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n" ;
}else {
}
if ((var_cas_CONSTRUCTOR_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- GALGAS constructors\n" ;
GGS_constructorMap::cEnumerator enumerator_3904 (var_cas_CONSTRUCTOR_MAP, true) ;
const GGS_constructorMap::cElement * operand_3904 = NULL ;
while (((operand_3904 = enumerator_3904.nextObject ()))) {
macroValidPointer (operand_3904) ;
result << "  public : static GALGAS_" ;
result << operand_3904->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (99)) ;
result << " * constructor_" ;
result << operand_3904->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_4071 (operand_3904->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_4071 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4071 = enumerator_4071.nextObject ()))) {
macroValidPointer (operand_4071) ;
result << "GALGAS_" ;
result << operand_4071->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (101)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (101)) ;
if (enumerator_4071.hasNextObject ()) {
  result << ",\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_3904->mInfo.mHasCompilerArgument).operator_and ((operand_3904->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else if (operand_3904->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else if ((operand_3904->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
result << "LOCATION_ARGS) ;\n"
  "\n" ;
}
}
}else {
}
result << "//--------------------------------- No copy\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " &) ;\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & operator = (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " &) ;\n"
  "\n" ;
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (122)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Implementation of reader 'description'\n"
  "  public : virtual void description (C_String & ioString,\n"
  "                                     const PMSInt32 inIndentation) const ;\n" ;
}else {
}
result << "//--------------------------------- Modifier invocation\n" ;
GGS_modifierMap::cEnumerator enumerator_5219 (var_cas_MODIFIER_MAP, true) ;
const GGS_modifierMap::cElement * operand_5219 = NULL ;
while (((operand_5219 = enumerator_5219.nextObject ()))) {
macroValidPointer (operand_5219) ;
if ((operand_5219->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (130))).boolValue ()) {
result << "  friend void modifierCall_" ;
result << operand_5219->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult" ;
GGS_formalParameterSignature::cEnumerator enumerator_5412 (operand_5219->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_5412 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5412 = enumerator_5412.nextObject ()))) {
macroValidPointer (operand_5412) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_5412->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (134))).boolValue ()) {
result << "GALGAS_" ;
result << operand_5412->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (135)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (135)) ;
}else if ((operand_5412->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (136))).boolValue ()) {
result << "GALGAS_" ;
result << operand_5412->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (137)) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (137)) ;
}else if ((operand_5412->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (138))).boolValue ()) {
result << "GALGAS_" ;
result << operand_5412->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (139)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (139)) ;
}else {
result << "GALGAS_" ;
result << operand_5412->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (141)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (141)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_5219->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Modifiers\n" ;
GGS_modifierMap::cEnumerator enumerator_6427 (var_cas_MODIFIER_MAP, true) ;
const GGS_modifierMap::cElement * operand_6427 = NULL ;
while (((operand_6427 = enumerator_6427.nextObject ()))) {
macroValidPointer (operand_6427) ;
if ((operand_6427->mInfo.mQualifier).operator_isNotEqual (GGS_readerQualifier::constructor_isInherited (inLexique COMMA_SOURCE_FILE_AT_LINE (158))).boolValue ()) {
result << "  protected : void modifier_" ;
result << operand_6427->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_6585 (operand_6427->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_6585 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6585 = enumerator_6585.nextObject ()))) {
macroValidPointer (operand_6585) ;
if ((operand_6585->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (161))).boolValue ()) {
result << "GALGAS_" ;
result << operand_6585->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (162)) ;
result << " * constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (162)) ;
}else if ((operand_6585->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (163))).boolValue ()) {
result << "GALGAS_" ;
result << operand_6585->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (164)) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (164)) ;
}else if ((operand_6585->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (165))).boolValue ()) {
result << "GALGAS_" ;
result << operand_6585->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
}else {
result << "GALGAS_" ;
result << operand_6585->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (168)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (168)) ;
}
if (enumerator_6585.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_6427->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_6427->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_6427->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") ;\n"
  "\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Instance Methods\n" ;
GGS_instanceMethodMap::cEnumerator enumerator_7852 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_7852 = NULL ;
while (((operand_7852 = enumerator_7852.nextObject ()))) {
macroValidPointer (operand_7852) ;
if ((operand_7852->mInfo.mQualifier).operator_isNotEqual (GGS_readerQualifier::constructor_isInherited (inLexique COMMA_SOURCE_FILE_AT_LINE (194))).boolValue ()) {
result << "  protected : virtual void method_" ;
result << operand_7852->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_8016 (operand_7852->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_8016 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8016 = enumerator_8016.nextObject ()))) {
macroValidPointer (operand_8016) ;
if ((operand_8016->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (197))).boolValue ()) {
result << "GALGAS_" ;
result << operand_8016->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (198)) ;
result << " * constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (198)) ;
}else if ((operand_8016->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (199))).boolValue ()) {
result << "GALGAS_" ;
result << operand_8016->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
}else if ((operand_8016->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (201))).boolValue ()) {
result << "GALGAS_" ;
result << operand_8016->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (202)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (202)) ;
}else {
result << "GALGAS_" ;
result << operand_8016->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (204)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (204)) ;
}
if (enumerator_8016.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_7852->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_7852->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_7852->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") " ;
if (((operand_7852->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (224)))).operator_or ((operand_7852->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isOverridingAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (224)))).boolValue ()) {
result << "= 0 " ;
}else {
}
result << ";\n"
  "\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Instance Method Invocation\n" ;
GGS_instanceMethodMap::cEnumerator enumerator_9441 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_9441 = NULL ;
while (((operand_9441 = enumerator_9441.nextObject ()))) {
macroValidPointer (operand_9441) ;
if (((operand_9441->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (233)))).operator_or ((operand_9441->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (233)))).boolValue ()) {
result << "  friend void instanceMethodCall_" ;
result << operand_9441->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inObject" ;
GGS_formalParameterSignature::cEnumerator enumerator_9688 (operand_9441->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_9688 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9688 = enumerator_9688.nextObject ()))) {
macroValidPointer (operand_9688) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_9688->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (237))).boolValue ()) {
result << "GALGAS_" ;
result << operand_9688->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (238)) ;
result << " * constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (238)) ;
}else if ((operand_9688->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (239))).boolValue ()) {
result << "GALGAS_" ;
result << operand_9688->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (240)) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (240)) ;
}else if ((operand_9688->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (241))).boolValue ()) {
result << "GALGAS_" ;
result << operand_9688->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (242)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (242)) ;
}else {
result << "GALGAS_" ;
result << operand_9688->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (244)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (244)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_9441->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Class Methods\n" ;
GGS_classMethodMap::cEnumerator enumerator_10716 (var_cas_CLASS_METHOD_MAP, true) ;
const GGS_classMethodMap::cElement * operand_10716 = NULL ;
while (((operand_10716 = enumerator_10716.nextObject ()))) {
macroValidPointer (operand_10716) ;
result << "  public : static void class_method_" ;
result << operand_10716->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_10823 (operand_10716->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_10823 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10823 = enumerator_10823.nextObject ()))) {
macroValidPointer (operand_10823) ;
if ((operand_10823->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (263))).boolValue ()) {
result << "GALGAS_" ;
result << operand_10823->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (264)) ;
result << " * constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (264)) ;
}else if ((operand_10823->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (265))).boolValue ()) {
result << "GALGAS_" ;
result << operand_10823->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (266)) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (266)) ;
}else if ((operand_10823->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (267))).boolValue ()) {
result << "GALGAS_" ;
result << operand_10823->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (268)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (268)) ;
}else {
result << "GALGAS_" ;
result << operand_10823->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (270)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (270)) ;
}
if (enumerator_10823.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_10716->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_10716->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_10716->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") ;\n"
  "\n" ;
}
result << "\n"
  "//--------------------------------- Readers\n" ;
GGS_readerMap::cEnumerator enumerator_12009 (var_cas_READER_MAP, true) ;
const GGS_readerMap::cElement * operand_12009 = NULL ;
while (((operand_12009 = enumerator_12009.nextObject ()))) {
macroValidPointer (operand_12009) ;
if ((operand_12009->mInfo.mQualifier).operator_isNotEqual (GGS_readerQualifier::constructor_isInherited (inLexique COMMA_SOURCE_FILE_AT_LINE (295))).boolValue ()) {
result << "  protected : virtual GALGAS_" ;
result << operand_12009->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (296)) ;
result << " * reader_" ;
result << operand_12009->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_12234 (operand_12009->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_12234 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_12234 = enumerator_12234.nextObject ()))) {
macroValidPointer (operand_12234) ;
result << "GALGAS_" ;
result << operand_12234->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (298)) ;
result << " * constinOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (298)) ;
if (enumerator_12234.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_12009->mInfo.mArgumentTypeList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_12009->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
}else {
if (operand_12009->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") " ;
if ((operand_12009->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (315))).boolValue ()) {
result << " = 0" ;
}else {
}
result << " ;\n"
  "\n" ;
}else {
}
}
result << "//--------------------------------- Reader invocation declaration\n" ;
GGS_readerMap::cEnumerator enumerator_12950 (var_cas_READER_MAP, true) ;
const GGS_readerMap::cElement * operand_12950 = NULL ;
while (((operand_12950 = enumerator_12950.nextObject ()))) {
macroValidPointer (operand_12950) ;
if ((operand_12950->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (324))).boolValue ()) {
result << "  friend GALGAS_" ;
result << operand_12950->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (325)) ;
result << " * readerCall_" ;
result << operand_12950->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inObject" ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_13205 (operand_12950->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_13205 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_13205 = enumerator_13205.nextObject ()))) {
macroValidPointer (operand_13205) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_13205->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (328)) ;
result << " * constinOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (328)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_12950->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}else {
}
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryAndOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (339)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- & operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operator_and (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryOrOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (346)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- | operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operator_or (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryXorOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (353)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- ^ operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operator_xor (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryNotOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (360)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- & operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operator_not (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryTildeOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (366)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- ~ operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operator_tilde (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryConcatOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (372)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- . (concat) operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operator_concat (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryAddOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (379)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- + operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * add_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binarySubOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (387)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- - operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * substract_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryMulOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (395)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- * operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * multiply_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryDivOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (403)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- / operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * divide_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryModOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (411)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- mod operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * modulo_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryMinusOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (419)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- unary - operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operator_unary_minus (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (426)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- ++, -- operators\n"
  "  public : static void increment_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static void decrement_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryShiftOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (436)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- << and >> shift operators\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * left_shift_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_uint * inShiftOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * right_shift_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_uint * inShiftOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_dotAssignOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (447)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- .= operator\n"
  "  friend void dotAssign_operation (GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult,\n"
  "                                   GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand\n"
  "                                   COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((var_cas_ADD_ASSIGN_ARGUMENT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- += operator\n"
  "  friend void addAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult" ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_18876 (var_cas_ADD_ASSIGN_ARGUMENT_LIST, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_18876 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_18876 = enumerator_18876.nextObject ()))) {
macroValidPointer (operand_18876) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_18876->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (458)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (458)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n" ;
}else {
}
if (((((var_cas_SUPPORTED_OPERATORS).operator_and ((function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (464))).operator_or (function_dotAssignOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (464))))).operator_isNotEqual (GGS_uint (0U))).operator_or ((var_cas_MODIFIER_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)))).operator_or ((var_cas_ADD_ASSIGN_ARGUMENT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << "//--------------------------------- Modifier utility method\n"
  "  public : static void insulate (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_doNotGenererateObjectCompare (inLexique COMMA_SOURCE_FILE_AT_LINE (472)))).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Comparison\n"
  "  public : static PMSInt32 objectCompare (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n"
  "                                          const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2) ;\n" ;
}else {
}
result << "\n"
  "//--------------------------------- Introspection\n"
  "  public : virtual const C_galgas_type_descriptor * typeDescriptor (void) const ;\n"
  "\n"
  "//--------------------------------- Private data member(s)\n" ;
GGS_nativeAttributeList::cEnumerator enumerator_19908 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_19908 = NULL ;
while (((operand_19908 = enumerator_19908.nextObject ()))) {
macroValidPointer (operand_19908) ;
result << "  private : " ;
if (operand_19908->mIsPointer.boolValue ()) {
result << "const " ;
}else {
}
result << operand_19908->mCppClassName ;
result << " " ;
if (operand_19908->mIsPointer.boolValue ()) {
result << "* " ;
}else {
}
result << operand_19908->mAttributeName ;
result << " ;\n" ;
if ((operand_19908->mGetterName.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "  public : inline " ;
if (operand_19908->mIsPointer.boolValue ()) {
result << "const " ;
}else {
}
result << operand_19908->mCppClassName ;
result << " " ;
if (operand_19908->mIsPointer.boolValue ()) {
result << " * " ;
}else {
}
result << operand_19908->mGetterName ;
result << " (void) const { return " ;
result << operand_19908->mAttributeName ;
result << " ; }\n" ;
}else {
}
}
GGS_typedAttributeList::cEnumerator enumerator_20299 (var_cas_PRIVATE_DATA_NUMBER_TYPED_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_20299 = NULL ;
while (((operand_20299 = enumerator_20299.nextObject ()))) {
macroValidPointer (operand_20299) ;
result << "  public : GALGAS_" ;
result << operand_20299->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (488)) ;
result << " * mAttribute_" ;
result << operand_20299->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateEnumerationHelperMethods (inLexique COMMA_SOURCE_FILE_AT_LINE (491)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Enumeration helper methods\n"
  "  protected : virtual void populateEnumerationArray (GALGAS_root * ioEnumerationArray [],\n"
  "                                                     const bool inAscending) const ;\n"
  "  public : virtual PMUInt32 count (void) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateSortedListComparisonMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (499)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Abstract method for comparing two sorted list elements\n"
  "  protected : virtual PMSInt32 compareSortedListElements (GALGAS_root * inLeftAttributeList [],\n"
  "                                                          GALGAS_root * inRightAttributeList []) const ;\n"
  "\n" ;
}else {
}
if ((var_cas_WITH_ACCESSOR_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- 'with' accessors\n" ;
GGS_withAccessorMap::cEnumerator enumerator_21327 (var_cas_WITH_ACCESSOR_MAP, true) ;
const GGS_withAccessorMap::cElement * operand_21327 = NULL ;
while (((operand_21327 = enumerator_21327.nextObject ()))) {
macroValidPointer (operand_21327) ;
result << "  friend GALGAS_root ** readWriteAccessForWithInstruction_" ;
result << operand_21327->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioMap,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_21327->mInfo.mArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (511)) ;
result << " * inKey\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
}else {
}
if ((var_cas_ENUMERATION_DESCRIPTOR_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Enumerator declaration\n"
  "  public : class cEnumerator : public AC_GALGAS_Enumerator {\n"
  "    public : cEnumerator (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inEnumeratedObject,\n"
  "                          const bool inAscending) ;\n"
  "  \n"
  "  //--- Attribute access\n" ;
GGS_enumerationDescriptorList::cEnumerator enumerator_22007 (var_cas_ENUMERATION_DESCRIPTOR_LIST, true) ;
const GGS_enumerationDescriptorList::cElement * operand_22007 = NULL ;
while (((operand_22007 = enumerator_22007.nextObject ()))) {
macroValidPointer (operand_22007) ;
result << "    public : GALGAS_" ;
result << operand_22007->mEnumeratedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (524)) ;
result << " * attribute_" ;
result << operand_22007->mEnumerationName.reader_identifierRepresentation () ;
result << " (void) ;\n" ;
}
result << "\n"
  "  } ;\n" ;
}else {
}
result << "} ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'unifiedTypeImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_unifiedTypeImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_bool& var_cas_IS_CONCRETE,
                                const GGS_unifiedTypeMapProxy & var_cas_SUPER_TYPE_INDEX,
                                const GGS_typeKindEnum& var_cas_TYPE_KIND,
                                const GGS_typedAttributeList & var_cas_CURRENT_TYPE_ATTRIBUTE_LIST,
                                const GGS_constructorMap & var_cas_CONSTRUCTOR_MAP,
                                const GGS_readerMap & var_cas_READER_MAP,
                                const GGS_modifierMap & var_cas_MODIFIER_MAP,
                                const GGS_instanceMethodMap & var_cas_INSTANCE_METHOD_MAP,
                                const GGS_classMethodMap & var_cas_CLASS_METHOD_MAP,
                                const GGS_enumerationDescriptorList & var_cas_ENUMERATION_DESCRIPTOR_LIST,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_unifiedTypeMapProxyList & var_cas_ADD_ASSIGN_ARGUMENT_LIST,
                                const GGS_nativeAttributeList & var_cas_NATIVE_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_IS_CONCRETE.isBuilt ()
    && var_cas_SUPER_TYPE_INDEX.isBuilt ()
    && var_cas_TYPE_KIND.isBuilt ()
    && var_cas_CURRENT_TYPE_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_CONSTRUCTOR_MAP.isBuilt ()
    && var_cas_READER_MAP.isBuilt ()
    && var_cas_MODIFIER_MAP.isBuilt ()
    && var_cas_INSTANCE_METHOD_MAP.isBuilt ()
    && var_cas_CLASS_METHOD_MAP.isBuilt ()
    && var_cas_ENUMERATION_DESCRIPTOR_LIST.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_ADD_ASSIGN_ARGUMENT_LIST.isBuilt ()
    && var_cas_NATIVE_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_TYPE_KIND.reader_kind (inLexique COMMA_SOURCE_FILE_AT_LINE (3)))).operator_concat (GGS_string (" type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor\n"
  "kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "\"" ;
result << var_cas_TYPE_NAME ;
result << "\",\n"
  "                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "& kTypeDescriptor_GALGAS_" ;
result << var_cas_SUPER_TYPE_INDEX.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
result << ",\n"
  "                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "(genericObjectCompareFunctionType) GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare) ;\n"
  "\n" ;
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateConstructorWithSelfObject (inLexique COMMA_SOURCE_FILE_AT_LINE (12)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inObject COMMA_LOCATION_ARGS) :\n"
  "GALGAS_" ;
result << var_cas_SUPER_TYPE_INDEX.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
result << " (THERE)" ;
GGS_nativeAttributeList::cEnumerator enumerator_1084 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_1084 = NULL ;
while (((operand_1084 = enumerator_1084.nextObject ()))) {
macroValidPointer (operand_1084) ;
result << ",\n" ;
result << operand_1084->mAttributeName ;
result << " (" ;
result << operand_1084->mDefaultValue ;
result << ")" ;
}
result << " {\n"
  "  if (NULL != inObject) {\n"
  "    macroValidObject (inObject, const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_nativeAttributeList::cEnumerator enumerator_1278 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_1278 = NULL ;
while (((operand_1278 = enumerator_1278.nextObject ()))) {
macroValidPointer (operand_1278) ;
result << "    " ;
result << operand_1278->mAttributeName ;
result << " = inObject->" ;
result << operand_1278->mGetterName ;
result << " () ;\n" ;
}
result << "  }\n"
  "}\n"
  "\n" ;
}else {
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::typeDescriptor (void) const {\n"
  "  return & kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "}\n" ;
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (37)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_nativeAttributeList::cEnumerator enumerator_1861 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_1861 = NULL ;
while (((operand_1861 = enumerator_1861.nextObject ()))) {
macroValidPointer (operand_1861) ;
result << "const " ;
result << operand_1861->mCppClassName ;
if (operand_1861->mIsPointer.boolValue ()) {
result << " *" ;
}else {
}
if (operand_1861->mUseReferenceForConstructor.boolValue ()) {
result << " &" ;
}else {
}
result << " inOperand_" ;
result << operand_1861->mAttributeName ;
if (enumerator_1861.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_nativeAttributeList::cEnumerator enumerator_2198 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_2198 = NULL ;
while (((operand_2198 = enumerator_2198.nextObject ()))) {
macroValidPointer (operand_2198) ;
result << "inOperand_" ;
result << operand_2198->mAttributeName ;
if (enumerator_2198.hasNextObject ()) {
result << ", " ;
}
}
if ((var_cas_NATIVE_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "THERE" ;
}else {
result << " COMMA_THERE" ;
}
result << ")) ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}else {
}
GGS_modifierMap::cEnumerator enumerator_2413 (var_cas_MODIFIER_MAP, true) ;
const GGS_modifierMap::cElement * operand_2413 = NULL ;
while (((operand_2413 = enumerator_2413.nextObject ()))) {
macroValidPointer (operand_2413) ;
if ((operand_2413->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (65))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void modifierCall_" ;
result << operand_2413->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult" ;
GGS_formalParameterSignature::cEnumerator enumerator_2686 (operand_2413->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_2686 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2686 = enumerator_2686.nextObject ()))) {
macroValidPointer (operand_2686) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_2686->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (70))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2686->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (71)) ;
result << " * constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (71)) ;
}else if ((operand_2686->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (72))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2686->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (73)) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (73)) ;
}else if ((operand_2686->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (74))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2686->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (75)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (75)) ;
}else {
result << "GALGAS_" ;
result << operand_2686->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (77)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (77)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_2413->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "//--- Release 'output' arguments\n" ;
GGS_formalParameterSignature::cEnumerator enumerator_3679 (operand_2413->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_3679 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3679 = enumerator_3679.nextObject ()))) {
macroValidPointer (operand_3679) ;
if ((operand_3679->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (89))).boolValue ()) {
result << "  macroReleaseObject (outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (90)) ;
result << ") ; // Release 'output' argument\n"
  "  outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (91)) ;
result << " = NULL ;\n" ;
}else {
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "//---\n"
  "  if (NULL != ioResult) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioResult COMMA_THERE) ;\n"
  "    ioResult->modifier_" ;
result << operand_2413->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_formalParameterSignature::cEnumerator enumerator_4166 (operand_2413->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_4166 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4166 = enumerator_4166.nextObject ()))) {
macroValidPointer (operand_4166) ;
if ((operand_4166->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (99))).boolValue ()) {
result << "constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (100)) ;
}else if ((operand_4166->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (101))).boolValue ()) {
result << "ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (102)) ;
}else if ((operand_4166->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (103))).boolValue ()) {
result << "outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (104)) ;
}else {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (106)) ;
}
if (enumerator_4166.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_2413->mInfo.mParameterList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_2413->mInfo.mHasCompilerArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_2413->mInfo.mHasCompilerArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
result << ") ;\n"
  "  }\n"
  "//---\n" ;
GGS_formalParameterSignature::cEnumerator enumerator_5027 (operand_2413->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_5027 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5027 = enumerator_5027.nextObject ()))) {
macroValidPointer (operand_5027) ;
if ((operand_5027->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (127))).boolValue ()) {
result << "  macroReleaseObject (constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (128)) ;
result << ") ; // Release 'const in' argument\n" ;
}else if ((operand_5027->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_SOURCE_FILE_AT_LINE (129))).boolValue ()) {
result << "  macroReleaseObject (inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (130)) ;
result << ") ; // Release 'in' argument\n" ;
}else {
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n" ;
}else {
}
}
GGS_instanceMethodMap::cEnumerator enumerator_5503 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_5503 = NULL ;
while (((operand_5503 = enumerator_5503.nextObject ()))) {
macroValidPointer (operand_5503) ;
if (((operand_5503->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (138)))).operator_or ((operand_5503->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (138)))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void instanceMethodCall_" ;
result << operand_5503->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inObject" ;
GGS_formalParameterSignature::cEnumerator enumerator_5830 (operand_5503->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_5830 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5830 = enumerator_5830.nextObject ()))) {
macroValidPointer (operand_5830) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_5830->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (143))).boolValue ()) {
result << "GALGAS_" ;
result << operand_5830->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (144)) ;
result << " * constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (144)) ;
}else if ((operand_5830->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (145))).boolValue ()) {
result << "GALGAS_" ;
result << operand_5830->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (146)) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (146)) ;
}else if ((operand_5830->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (147))).boolValue ()) {
result << "GALGAS_" ;
result << operand_5830->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (148)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (148)) ;
}else {
result << "GALGAS_" ;
result << operand_5830->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (150)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (150)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_5503->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "//--- Release 'output' arguments\n" ;
GGS_formalParameterSignature::cEnumerator enumerator_6823 (operand_5503->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_6823 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6823 = enumerator_6823.nextObject ()))) {
macroValidPointer (operand_6823) ;
if ((operand_6823->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (162))).boolValue ()) {
result << "  macroReleaseObject (outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (163)) ;
result << ") ; // Release 'output' argument\n"
  "  outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (164)) ;
result << " = NULL ;\n" ;
}else {
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "//---\n"
  "  if (inObject != NULL) {\n"
  "    macroRetainObjectThere (inObject) ;\n"
  "    inObject->method_" ;
result << operand_5503->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_formalParameterSignature::cEnumerator enumerator_7283 (operand_5503->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_7283 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7283 = enumerator_7283.nextObject ()))) {
macroValidPointer (operand_7283) ;
if ((operand_7283->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (172))).boolValue ()) {
result << "constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (173)) ;
}else if ((operand_7283->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (174))).boolValue ()) {
result << "ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (175)) ;
}else if ((operand_7283->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (176))).boolValue ()) {
result << "outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (177)) ;
}else {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (179)) ;
}
if (enumerator_7283.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_5503->mInfo.mParameterList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_5503->mInfo.mHasCompilerArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_5503->mInfo.mHasCompilerArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
result << ") ;\n"
  "    macroReleaseObjectThere (inObject) ;\n"
  "  }\n"
  "//---\n" ;
GGS_formalParameterSignature::cEnumerator enumerator_8193 (operand_5503->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_8193 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8193 = enumerator_8193.nextObject ()))) {
macroValidPointer (operand_8193) ;
if ((operand_8193->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (201))).boolValue ()) {
result << "  macroReleaseObject (constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (202)) ;
result << ") ; // Release 'const in' argument\n" ;
}else if ((operand_8193->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_SOURCE_FILE_AT_LINE (203))).boolValue ()) {
result << "  macroReleaseObject (inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (204)) ;
result << ") ; // Release 'in' argument\n" ;
}else {
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n" ;
}else {
}
}
GGS_readerMap::cEnumerator enumerator_8660 (var_cas_READER_MAP, true) ;
const GGS_readerMap::cElement * operand_8660 = NULL ;
while (((operand_8660 = enumerator_8660.nextObject ()))) {
macroValidPointer (operand_8660) ;
if ((operand_8660->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (212))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_8660->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (214)) ;
result << " * readerCall_" ;
result << operand_8660->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inObject" ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_8997 (operand_8660->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_8997 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8997 = enumerator_8997.nextObject ()))) {
macroValidPointer (operand_8997) ;
result << ",\n" ;
result << var_cas_COL ;
result << "GALGAS_" ;
result << operand_8997->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (217)) ;
result << " * inOperand_" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (217)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_8660->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "  GALGAS_" ;
result << operand_8660->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (225)) ;
result << " * result = NULL ;\n"
  "  if (inObject != NULL) {\n"
  "    result = inObject->reader_" ;
result << operand_8660->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_9506 (operand_8660->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_9506 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9506 = enumerator_9506.nextObject ()))) {
macroValidPointer (operand_9506) ;
result << "inOperand_" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (229)) ;
if (enumerator_9506.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_8660->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_8660->mInfo.mHasCompilerArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_8660->mInfo.mHasCompilerArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
result << ") ;\n"
  "  }\n"
  "//---\n" ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_9937 (operand_8660->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_9937 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9937 = enumerator_9937.nextObject ()))) {
macroValidPointer (operand_9937) ;
result << "  macroReleaseObject (inOperand_" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (249)) ;
result << ") ; // Release 'in' argument\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "//---\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}else {
}
}
if ((var_cas_ENUMERATION_DESCRIPTOR_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "//" ;
result << ((((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_TYPE_KIND.reader_kind (inLexique COMMA_SOURCE_FILE_AT_LINE (259)))).operator_concat (GGS_string (" enumeration")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n" ;
GGS_enumerationDescriptorList::cEnumerator enumerator_10411 (var_cas_ENUMERATION_DESCRIPTOR_LIST, true) ;
const GGS_enumerationDescriptorList::cElement * operand_10411 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10411 = enumerator_10411.nextObject ()))) {
macroValidPointer (operand_10411) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_10411->mEnumeratedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (262)) ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator::attribute_" ;
result << operand_10411->mEnumerationName.reader_identifierRepresentation () ;
result << " (void) {\n"
  "  GALGAS_" ;
result << operand_10411->mEnumeratedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (263)) ;
result << " * result = (GALGAS_" ;
result << operand_10411->mEnumeratedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (263)) ;
result << " *) directAccess (" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (263)) ;
result << " COMMA_HERE) ;\n"
  "  macroValidObject (result, GALGAS_" ;
result << operand_10411->mEnumeratedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (264)) ;
result << ") ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
}else {
}
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'predefinedTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_predefinedTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_modifierMap & var_cas_MODIFIER_MAP,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_unifiedTypeMapProxyList & var_cas_ADD_ASSIGN_ARGUMENT_LIST,
                                const GGS_nativeAttributeList & var_cas_NATIVE_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_MODIFIER_MAP.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_ADD_ASSIGN_ARGUMENT_LIST.isBuilt ()
    && var_cas_NATIVE_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
if (((((var_cas_SUPPORTED_OPERATORS).operator_and ((function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (1))).operator_or (function_dotAssignOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (1))))).operator_isNotEqual (GGS_uint (0U))).operator_or ((var_cas_MODIFIER_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)))).operator_or ((var_cas_ADD_ASSIGN_ARGUMENT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioOperand->retainCount () > 1) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new(" ;
GGS_nativeAttributeList::cEnumerator enumerator_546 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_546 = NULL ;
while (((operand_546 = enumerator_546.nextObject ()))) {
macroValidPointer (operand_546) ;
result << "ioOperand->" ;
result << operand_546->mAttributeName ;
if (enumerator_546.hasNextObject ()) {
result << ", " ;
}
}
if ((var_cas_NATIVE_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "THERE" ;
}else {
result << " COMMA_THERE" ;
}
result << ") ;\n"
  "    macroRetainObject (p) ;\n"
  "    macroReleaseObject (ioOperand) ;\n"
  "    ioOperand = p ;\n"
  "  }\n"
  "}\n" ;
}else {
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'enumTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_enumTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_stringlist & var_cas_CONSTANT_LIST,
                                const GGS_enumMessageListForGeneration & var_cas_ENUM_MESSAGE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_CONSTANT_LIST.isBuilt ()
    && var_cas_ENUM_MESSAGE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const enumeration inValue\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n"
  "GALGAS_enum (THERE),\n"
  "mEnumValue (inValue) {\n"
  "}\n"
  "\n" ;
GGS_stringlist::cEnumerator enumerator_304 (var_cas_CONSTANT_LIST, true) ;
const GGS_stringlist::cElement * operand_304 = NULL ;
while (((operand_304 = enumerator_304.nextObject ()))) {
macroValidPointer (operand_304) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_" ;
result << operand_304->mValue.reader_identifierRepresentation () ;
result << " (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (kEnum_" ;
result << operand_304->mValue.reader_identifierRepresentation () ;
result << " COMMA_THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
GGS_enumMessageListForGeneration::cEnumerator enumerator_761 (var_cas_ENUM_MESSAGE_LIST, true) ;
const GGS_enumMessageListForGeneration::cElement * operand_761 = NULL ;
while (((operand_761 = enumerator_761.nextObject ()))) {
macroValidPointer (operand_761) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const char * gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_761->mEnumMessageName.reader_identifierRepresentation () ;
result << " [" ;
result << var_cas_CONSTANT_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (21)) ;
result << "] = {" ;
GGS_enumMessageAssociationSortedListForGeneration::cEnumerator enumerator_1039 (operand_761->mMessageAssociationList, true) ;
const GGS_enumMessageAssociationSortedListForGeneration::cElement * operand_1039 = NULL ;
while (((operand_1039 = enumerator_1039.nextObject ()))) {
macroValidPointer (operand_1039) ;
result << "\n"
  "  " ;
result << operand_1039->mMessage.reader_utf8Representation () ;
if (enumerator_1039.hasNextObject ()) {
result << "," ;
}
}
result << "\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_string * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_761->mEnumMessageName.reader_identifierRepresentation () ;
result << " (LOCATION_ARGS) {\n"
  "  return GALGAS_string::constructor_new (gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_761->mEnumMessageName.reader_identifierRepresentation () ;
result << " [mEnumValue] COMMA_THERE) ;\n"
  "}\n"
  "\n" ;
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const char * gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " [" ;
result << var_cas_CONSTANT_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << "] = {" ;
GGS_stringlist::cEnumerator enumerator_1719 (var_cas_CONSTANT_LIST, true) ;
const GGS_stringlist::cElement * operand_1719 = NULL ;
while (((operand_1719 = enumerator_1719.nextObject ()))) {
macroValidPointer (operand_1719) ;
result << "\n"
  "  " ;
result << operand_1719->mValue.reader_utf8Representation () ;
if (enumerator_1719.hasNextObject ()) {
result << "," ;
}
}
result << "\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 /* inIndentation */) const {\n"
  "  ioString << \"<enum @" ;
result << var_cas_TYPE_NAME ;
result << ": \" << gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " [mEnumValue] << \">\" ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "PMSInt32 GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n"
  "                                      " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2) {\n"
  "  macroValidObject (inOperand1, const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  macroValidObject (inOperand2, const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  return ((PMSInt32) inOperand1->mEnumValue) - ((PMSInt32) inOperand2->mEnumValue) ;\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'listTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_listTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_list (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4)) ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_listWithValue (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_713 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_713 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_713 = enumerator_713.nextObject ()))) {
macroValidPointer (operand_713) ;
result << "GALGAS_" ;
result << operand_713->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (19)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (19)) ;
if (enumerator_713.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (THERE) ;\n"
  "  GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (24)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_1073 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1073 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1073 = enumerator_1073.nextObject ()))) {
macroValidPointer (operand_1073) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (26)) ;
if (enumerator_1073.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "  result->addObject (attributeArray) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioObject\n"
  "                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioObject->retainCount () > 1) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * source = ioObject ;\n"
  "    release (ioObject COMMA_THERE) ;\n"
  "    ioObject = constructor_emptyList (THERE) ;\n"
  "    retain (ioObject COMMA_THERE) ;\n"
  "    ioObject->copyFrom (source) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void addAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult" ;
GGS_typedAttributeList::cEnumerator enumerator_1841 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1841 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1841 = enumerator_1841.nextObject ()))) {
macroValidPointer (operand_1841) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_1841->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (51)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (51)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioResult COMMA_THERE) ;\n"
  "    GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (56)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_2189 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2189 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2189 = enumerator_2189.nextObject ()))) {
macroValidPointer (operand_2189) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (58)) ;
if (enumerator_2189.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "    ioResult->addObject (attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_prependValue (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_2485 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2485 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2485 = enumerator_2485.nextObject ()))) {
macroValidPointer (operand_2485) ;
result << "GALGAS_" ;
result << operand_2485->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (70)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (70)) ;
if (enumerator_2485.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  if (inOperand0 != NULL) {\n"
  "    GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (75)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_2788 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2788 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2788 = enumerator_2788.nextObject ()))) {
macroValidPointer (operand_2788) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (77)) ;
if (enumerator_2788.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "    prependAttributeArray (attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popFirst (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_3082 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3082 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3082 = enumerator_3082.nextObject ()))) {
macroValidPointer (operand_3082) ;
result << "GALGAS_" ;
result << operand_3082->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (89)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (89)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (93)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_3367 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3367 = NULL ;
while (((operand_3367 = enumerator_3367.nextObject ()))) {
macroValidPointer (operand_3367) ;
result << "NULL" ;
if (enumerator_3367.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "  removeFirstObject (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3505 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3505 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3505 = enumerator_3505.nextObject ()))) {
macroValidPointer (operand_3505) ;
result << "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (100)) ;
result << " = (GALGAS_" ;
result << operand_3505->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (100)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (100)) ;
result << "] ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popLast (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_3832 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3832 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3832 = enumerator_3832.nextObject ()))) {
macroValidPointer (operand_3832) ;
result << "GALGAS_" ;
result << operand_3832->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (108)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (108)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (112)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_4117 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4117 = NULL ;
while (((operand_4117 = enumerator_4117.nextObject ()))) {
macroValidPointer (operand_4117) ;
result << "NULL" ;
if (enumerator_4117.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "  removeLastObject (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4254 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4254 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4254 = enumerator_4254.nextObject ()))) {
macroValidPointer (operand_4254) ;
result << "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (119)) ;
result << " = (GALGAS_" ;
result << operand_4254->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (119)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (119)) ;
result << "] ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_first (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_4577 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4577 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4577 = enumerator_4577.nextObject ()))) {
macroValidPointer (operand_4577) ;
result << "GALGAS_" ;
result << operand_4577->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (127)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (127)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (131)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_4862 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4862 = NULL ;
while (((operand_4862 = enumerator_4862.nextObject ()))) {
macroValidPointer (operand_4862) ;
result << "NULL" ;
if (enumerator_4862.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "  readFirst (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4992 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4992 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4992 = enumerator_4992.nextObject ()))) {
macroValidPointer (operand_4992) ;
result << "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) ;
result << " = (GALGAS_" ;
result << operand_4992->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) ;
result << "] ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_last (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_5314 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5314 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5314 = enumerator_5314.nextObject ()))) {
macroValidPointer (operand_5314) ;
result << "GALGAS_" ;
result << operand_5314->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (146)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (146)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (150)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_5599 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5599 = NULL ;
while (((operand_5599 = enumerator_5599.nextObject ()))) {
macroValidPointer (operand_5599) ;
result << "NULL" ;
if (enumerator_5599.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "  readLast (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_5728 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5728 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5728 = enumerator_5728.nextObject ()))) {
macroValidPointer (operand_5728) ;
result << "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (157)) ;
result << " = (GALGAS_" ;
result << operand_5728->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (157)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (157)) ;
result << "] ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator_concat (GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n"
  "                                                        GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2\n"
  "                                                        COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  if ((NULL != inOperand1) && (NULL != inOperand2)) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (THERE) ;\n"
  "    result->appendList (inOperand1) ;\n"
  "    result->appendList (inOperand2) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_subListWithRange (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_uint * inOperand0,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_uint * inOperand1,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  if ((inOperand0 != NULL) && (NULL != inOperand1)) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (THERE) ;\n"
  "    const bool ok = subListWithRange (result, inOperand0, inOperand1, inCompiler COMMA_THERE) ;\n"
  "    if (! ok) {\n"
  "      result = NULL ;\n"
  "    }\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_subListFromIndex (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_uint * inIndex,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  if (inIndex != NULL) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (THERE) ;\n"
  "    const bool ok = subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;\n"
  "    if (! ok) {\n"
  "      result = NULL ;\n"
  "    }\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void dotAssign_operation (GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult,\n"
  "                          GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand\n"
  "                          COMMA_LOCATION_ARGS) {\n"
  "  if ((ioResult != NULL) && (inOperand != NULL)) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioResult COMMA_THERE) ;\n"
  "    ioResult->appendList (inOperand) ;\n"
  "  }\n"
  "}\n" ;
GGS_typedAttributeList::cEnumerator enumerator_8360 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8360 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8360 = enumerator_8360.nextObject ()))) {
macroValidPointer (operand_8360) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_set" ;
result << operand_8360->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ().reader_identifierRepresentation () ;
result << "AtIndex (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << operand_8360->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (221)) ;
result << " * inOperand,\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_uint * inIndex,\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  attributeDirectWrite (inOperand, inIndex, " ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (225)) ;
result << ", inCompiler COMMA_THERE) ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_9054 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9054 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9054 = enumerator_9054.nextObject ()))) {
macroValidPointer (operand_9054) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_9054->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (232)) ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_9054->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << "AtIndex (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_uint * inIndex,\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << operand_9054->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (235)) ;
result << " * result = NULL ;\n"
  "  result = (GALGAS_" ;
result << operand_9054->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (236)) ;
result << " *) attributeDirectRead (inIndex, " ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (236)) ;
result << ", inCompiler COMMA_THERE) ;\n"
  "  macroValidObjectThere (result, GALGAS_" ;
result << operand_9054->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (237)) ;
result << ") ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator::cEnumerator (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inEnumeratedObject,\n"
  "                                             const bool inAscending) :\n"
  "AC_GALGAS_Enumerator (inEnumeratedObject, inAscending) {\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'listmapTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_listmapTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_ASSOCIATED_LISTTYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ASSOCIATED_LISTTYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_listmap ((GALGAS_list * (*) (LOCATION_ARGS)) GALGAS_uintlist::constructor_emptyList COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyMap (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioObject\n"
  "                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioObject->retainCount () > 1) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * source = ioObject ;\n"
  "    macroReleaseObjectThere (ioObject) ;\n"
  "    ioObject = constructor_emptyMap (THERE) ;\n"
  "    macroRetainObjectThere (ioObject) ;\n"
  "    ioObject->copyFrom (source) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void addAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_string * inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_1241 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1241 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1241 = enumerator_1241.nextObject ()))) {
macroValidPointer (operand_1241) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_1241->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (33)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (33)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioResult COMMA_THERE) ;\n"
  "    GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (38)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_1589 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1589 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1589 = enumerator_1589.nextObject ()))) {
macroValidPointer (operand_1589) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (40)) ;
if (enumerator_1589.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "    ioResult->addObject (inKey, attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator::cEnumerator (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inEnumeratedObject,\n"
  "                                             const bool inAscending) :\n"
  "AC_GALGAS_Enumerator (inEnumeratedObject, inAscending) {\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'mapTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_mapTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_insertMethodListAST & var_cas_INSERT_METHOD_LIST,
                                const GGS_mapSearchMethodListAST & var_cas_SEARCH_METHOD_LIST,
                                const GGS_mapRemoveMethodListAST & var_cas_REMOVE_METHOD_LIST,
                                const GGS_bool& var_cas_HAS_INSERT_OR_REPLACE,
                                const GGS_withAccessorMap & var_cas_WITH_ACCESSOR_MAP) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_INSERT_METHOD_LIST.isBuilt ()
    && var_cas_SEARCH_METHOD_LIST.isBuilt ()
    && var_cas_REMOVE_METHOD_LIST.isBuilt ()
    && var_cas_HAS_INSERT_OR_REPLACE.isBuilt ()
    && var_cas_WITH_ACCESSOR_MAP.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_map (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (4)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4)) ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyMap (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioObject\n"
  "                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioObject->retainCount () > 1) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * source = ioObject ;\n"
  "    macroReleaseObjectThere (ioObject) ;\n"
  "    ioObject = constructor_emptyMap (THERE) ;\n"
  "    macroRetainObjectThere (ioObject) ;\n"
  "    ioObject->copyFrom (source) ;\n"
  "  }\n"
  "}\n"
  "\n" ;
GGS_insertMethodListAST::cEnumerator enumerator_1016 (var_cas_INSERT_METHOD_LIST, true) ;
const GGS_insertMethodListAST::cElement * operand_1016 = NULL ;
while (((operand_1016 = enumerator_1016.nextObject ()))) {
macroValidPointer (operand_1016) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_" ;
result << operand_1016->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_lstring * inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_1254 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1254 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1254 = enumerator_1254.nextObject ()))) {
macroValidPointer (operand_1254) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_1254->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_root * attributes [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (36)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (36)) ;
result << "] = {inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_1562 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1562 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1562 = enumerator_1562.nextObject ()))) {
macroValidPointer (operand_1562) ;
result << ", inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (38)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n" ;
const GGS_uint indentation_2025 = GGS_uint (2U) ;
if (indentation_2025.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_2025.uintValue ()) ;
}
result << "const utf32 kInsertErrorMessage [" ;
result << operand_1016->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (42)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (42)) ;
result << "] = " ;
result << operand_1016->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "const utf32 kShadowErrorMessage [" ;
result << operand_1016->mShadowErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (43)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (43)) ;
result << "] = " ;
result << operand_1016->mShadowErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;\n" ;
 ;
if (indentation_2025.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_2025.uintValue ())) ;
}
result << "}\n"
  "\n" ;
}
GGS_mapSearchMethodListAST::cEnumerator enumerator_2064 (var_cas_SEARCH_METHOD_LIST, true) ;
const GGS_mapSearchMethodListAST::cElement * operand_2064 = NULL ;
while (((operand_2064 = enumerator_2064.nextObject ()))) {
macroValidPointer (operand_2064) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const utf32 kSearchErrorMessage_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_2064->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " [" ;
result << operand_2064->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (51)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (51)) ;
result << "] = " ;
result << operand_2064->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_" ;
result << operand_2064->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_lstring * inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_2579 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2579 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2579 = enumerator_2579.nextObject ()))) {
macroValidPointer (operand_2579) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_2579->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (55)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (55)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
const GGS_uint indentation_3335 = GGS_uint (2U) ;
if (indentation_3335.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_3335.uintValue ()) ;
}
result << "GALGAS_root ** attributes = performSearch (inKey, inCompiler, kSearchErrorMessage_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_2064->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " COMMA_THERE) ;\n"
  "if (NULL != attributes) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3018 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3018 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3018 = enumerator_3018.nextObject ()))) {
macroValidPointer (operand_3018) ;
result << "  outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (63)) ;
result << " = (GALGAS_" ;
result << operand_3018->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (63)) ;
result << " *) attributes [" ;
result << var_cas_IDX.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (63)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (63)) ;
result << "] ;\n"
  "  macroValidObject (outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (64)) ;
result << ", GALGAS_" ;
result << operand_3018->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (64)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n" ;
 ;
if (indentation_3335.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_3335.uintValue ())) ;
}
result << "}\n"
  "\n" ;
}
GGS_mapRemoveMethodListAST::cEnumerator enumerator_3375 (var_cas_REMOVE_METHOD_LIST, true) ;
const GGS_mapRemoveMethodListAST::cElement * operand_3375 = NULL ;
while (((operand_3375 = enumerator_3375.nextObject ()))) {
macroValidPointer (operand_3375) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_" ;
result << operand_3375->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_lstring * inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_3613 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3613 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3613 = enumerator_3613.nextObject ()))) {
macroValidPointer (operand_3613) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_3613->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (76)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (76)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
const GGS_uint indentation_4479 = GGS_uint (2U) ;
if (indentation_4479.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_4479.uintValue ()) ;
}
result << "const utf32 kRemoveErrorMessage [" ;
result << operand_3375->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (81)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (81)) ;
result << "] = " ;
result << operand_3375->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "GALGAS_root ** attributes = performRemove (inKey, inCompiler, kRemoveErrorMessage COMMA_THERE) ;\n"
  "if (NULL != attributes) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4115 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4115 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4115 = enumerator_4115.nextObject ()))) {
macroValidPointer (operand_4115) ;
result << "  outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (85)) ;
result << " = (GALGAS_" ;
result << operand_4115->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (85)) ;
result << " *) attributes [" ;
result << var_cas_IDX.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (85)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (85)) ;
result << "] ;\n"
  "  macroValidObject (outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (86)) ;
result << ", GALGAS_" ;
result << operand_4115->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (86)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  macroMyDeletePODArray (attributes) ;\n"
  "}\n" ;
 ;
if (indentation_4479.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_4479.uintValue ())) ;
}
result << "}\n"
  "\n" ;
}
if (var_cas_HAS_INSERT_OR_REPLACE.boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_insertOrReplace (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_lstring * inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_4730 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4730 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4730 = enumerator_4730.nextObject ()))) {
macroValidPointer (operand_4730) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_4730->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (98)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (98)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  GALGAS_root * attributes [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (101)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (101)) ;
result << "] = {inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_5007 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5007 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5007 = enumerator_5007.nextObject ()))) {
macroValidPointer (operand_5007) ;
result << ", inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (103)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "  performInsertOrReplace (attributes) ;\n"
  "}\n"
  "\n" ;
}else {
}
GGS_typedAttributeList::cEnumerator enumerator_5159 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5159 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5159 = enumerator_5159.nextObject ()))) {
macroValidPointer (operand_5159) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_5159->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (112)) ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_5159->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << "ForKey (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_string * inKey,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_root * result = readAttributeForKey (inKey, inCompiler, " ;
result << var_cas_IDX.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (115)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (115)) ;
result << " COMMA_THERE) ;\n"
  "  macroNullOrValidObject (result, GALGAS_" ;
result << operand_5159->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (116)) ;
result << ") ;\n"
  "  return (GALGAS_" ;
result << operand_5159->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (117)) ;
result << " *) result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_typedAttributeList::cEnumerator enumerator_5936 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5936 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5936 = enumerator_5936.nextObject ()))) {
macroValidPointer (operand_5936) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_set" ;
result << operand_5936->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ().reader_identifierRepresentation () ;
result << "ForKey (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_string * inKey,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_5936->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (124)) ;
result << " * inAttributeValue,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  writeAttributeForKey (inKey, inAttributeValue, inCompiler, " ;
result << var_cas_IDX.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (127)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (127)) ;
result << " COMMA_THERE) ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator::cEnumerator (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inEnumeratedObject,\n"
  "                                             const bool inAscending) :\n"
  "AC_GALGAS_Enumerator (inEnumeratedObject, inAscending) {\n"
  "}\n"
  "\n" ;
GGS_withAccessorMap::cEnumerator enumerator_6910 (var_cas_WITH_ACCESSOR_MAP, true) ;
const GGS_withAccessorMap::cElement * operand_6910 = NULL ;
while (((operand_6910 = enumerator_6910.nextObject ()))) {
macroValidPointer (operand_6910) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_root ** readWriteAccessForWithInstruction_" ;
result << operand_6910->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioMap,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_6910->mInfo.mArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (143)) ;
result << " * inKey\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_root ** result = NULL ;\n"
  "  if ((NULL != ioMap) && (NULL != inKey)) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioMap COMMA_THERE) ;\n" ;
if ((operand_6910->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (148))).operator_isEqual (GGS_string ("hasKey")).boolValue ()) {
result << "    result = ioMap->performSearch (inKey, inCompiler COMMA_THERE) ;\n" ;
}else {
result << "    result = ioMap->performSearch (inKey, inCompiler, kSearchErrorMessage_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_6910->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " COMMA_THERE) ;\n" ;
}
result << "  }\n"
  "  macroReleaseObject (inKey) ; // Release 'in' argument\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'sortedlistTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_sortedlistTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_sortDescriptorListForGeneration & var_cas_SORT_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_SORT_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_sortedlist (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4)) ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "PMSInt32 GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::compareSortedListElements (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_root * inLeftAttributeList [],\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_root * inRightAttributeList []) const {\n"
  "  PMSInt32 result = 0 ;\n" ;
GGS_sortDescriptorListForGeneration::cEnumerator enumerator_563 (var_cas_SORT_ATTRIBUTE_LIST, true) ;
const GGS_sortDescriptorListForGeneration::cElement * operand_563 = NULL ;
while (((operand_563 = enumerator_563.nextObject ()))) {
macroValidPointer (operand_563) ;
result << "  if (result == 0) {\n"
  "    result = " ;
if (operand_563->mAscendingOrder.boolValue ()) {
}else {
result << "- " ;
}
result << "genericObjectCompareFunction (inLeftAttributeList [" ;
result << operand_563->mAttributeIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
result << "], inRightAttributeList [" ;
result << operand_563->mAttributeIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
result << "]) ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioOperand\n"
  "                     " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if ((ioOperand != NULL) && (ioOperand->retainCount () > 1)) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = NULL ;\n"
  "    macroMyNew (p, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "    p->copyFrom (ioOperand) ;\n"
  "    macroAssignObject (ioOperand, p) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptySortedList (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_sortedListWithValue (" ;
const GGS_string var_cas_COL0 = GGS_string::stringWithColumnCount (result) ;
GGS_typedAttributeList::cEnumerator enumerator_1804 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1804 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1804 = enumerator_1804.nextObject ()))) {
macroValidPointer (operand_1804) ;
result << "GALGAS_" ;
result << operand_1804->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (44)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (44)) ;
if (enumerator_1804.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL0 ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result << var_cas_COL0 ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptySortedList (THERE) ;\n"
  "  GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (49)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_2176 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2176 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2176 = enumerator_2176.nextObject ()))) {
macroValidPointer (operand_2176) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (51)) ;
if (enumerator_2176.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "  result->addObject (attributeArray) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void addAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult" ;
GGS_typedAttributeList::cEnumerator enumerator_2485 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2485 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2485 = enumerator_2485.nextObject ()))) {
macroValidPointer (operand_2485) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_2485->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (63)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (63)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "    " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioResult COMMA_HERE) ;\n"
  "    GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (69)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_2840 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2840 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2840 = enumerator_2840.nextObject ()))) {
macroValidPointer (operand_2840) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (71)) ;
if (enumerator_2840.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "    ioResult->addObject (attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void dotAssign_operation (GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult,\n"
  "                          GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand\n"
  "                          COMMA_LOCATION_ARGS) {\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioResult COMMA_THERE) ;\n"
  "    ioResult->appendSortedList (inOperand) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator_concat (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n"
  "                                                    " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2\n"
  "                                                    " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  if ((NULL != inOperand1) && (NULL != inOperand2)) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptySortedList (THERE) ;\n"
  "    result->appendSortedList (inOperand1) ;\n"
  "    result->appendSortedList (inOperand2) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popSmallest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_4198 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4198 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4198 = enumerator_4198.nextObject ()))) {
macroValidPointer (operand_4198) ;
result << "GALGAS_" ;
result << operand_4198->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (108)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (108)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4421 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4421 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4421 = enumerator_4421.nextObject ()))) {
macroValidPointer (operand_4421) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (114)) ;
result << ") ;\n"
  "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (115)) ;
result << " = NULL ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (117)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_4662 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4662 = NULL ;
while (((operand_4662 = enumerator_4662.nextObject ()))) {
macroValidPointer (operand_4662) ;
result << "NULL" ;
if (enumerator_4662.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "  removeSmallestObject (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4806 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4806 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4806 = enumerator_4806.nextObject ()))) {
macroValidPointer (operand_4806) ;
result << "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (124)) ;
result << " = (GALGAS_" ;
result << operand_4806->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (124)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (124)) ;
result << "] ;\n"
  "  macroNullOrValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (125)) ;
result << ", GALGAS_" ;
result << operand_4806->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (125)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popGreatest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_5254 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5254 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5254 = enumerator_5254.nextObject ()))) {
macroValidPointer (operand_5254) ;
result << "GALGAS_" ;
result << operand_5254->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (133)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (133)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_5477 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5477 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5477 = enumerator_5477.nextObject ()))) {
macroValidPointer (operand_5477) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (139)) ;
result << ") ;\n"
  "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (140)) ;
result << " = NULL ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (142)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_5718 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5718 = NULL ;
while (((operand_5718 = enumerator_5718.nextObject ()))) {
macroValidPointer (operand_5718) ;
result << "NULL" ;
if (enumerator_5718.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "  removeGreatestObject (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_5862 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5862 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5862 = enumerator_5862.nextObject ()))) {
macroValidPointer (operand_5862) ;
result << "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (149)) ;
result << " = (GALGAS_" ;
result << operand_5862->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (149)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (149)) ;
result << "] ;\n"
  "  macroNullOrValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (150)) ;
result << ", GALGAS_" ;
result << operand_5862->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (150)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_smallest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_6305 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6305 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6305 = enumerator_6305.nextObject ()))) {
macroValidPointer (operand_6305) ;
result << "GALGAS_" ;
result << operand_6305->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (158)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (158)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_6518 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6518 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6518 = enumerator_6518.nextObject ()))) {
macroValidPointer (operand_6518) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (164)) ;
result << ") ;\n"
  "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (165)) ;
result << " = NULL ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (167)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_6759 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6759 = NULL ;
while (((operand_6759 = enumerator_6759.nextObject ()))) {
macroValidPointer (operand_6759) ;
result << "NULL" ;
if (enumerator_6759.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "  smallestObjectAttributeList (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_6908 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6908 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6908 = enumerator_6908.nextObject ()))) {
macroValidPointer (operand_6908) ;
result << "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
result << " = (GALGAS_" ;
result << operand_6908->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
result << "] ;\n"
  "  macroNullOrValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (175)) ;
result << ", GALGAS_" ;
result << operand_6908->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (175)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_greatest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_7351 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7351 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7351 = enumerator_7351.nextObject ()))) {
macroValidPointer (operand_7351) ;
result << "GALGAS_" ;
result << operand_7351->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (183)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (183)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_7564 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7564 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7564 = enumerator_7564.nextObject ()))) {
macroValidPointer (operand_7564) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (189)) ;
result << ") ;\n"
  "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (190)) ;
result << " = NULL ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (192)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_7805 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7805 = NULL ;
while (((operand_7805 = enumerator_7805.nextObject ()))) {
macroValidPointer (operand_7805) ;
result << "NULL" ;
if (enumerator_7805.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "  greatestObjectAttributeList (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_7954 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7954 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7954 = enumerator_7954.nextObject ()))) {
macroValidPointer (operand_7954) ;
result << "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (199)) ;
result << " = (GALGAS_" ;
result << operand_7954->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (199)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (199)) ;
result << "] ;\n"
  "  macroNullOrValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
result << ", GALGAS_" ;
result << operand_7954->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator::cEnumerator (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inEnumeratedObject,\n"
  "           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const bool inAscending) :\n"
  "AC_GALGAS_Enumerator (inEnumeratedObject, inAscending) {\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'structTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_structTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_164 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_164 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_164 = enumerator_164.nextObject ()))) {
macroValidPointer (operand_164) ;
result << "GALGAS_" ;
result << operand_164->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (5)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5)) ;
if (enumerator_164.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " \n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n"
  "GALGAS_struct (THERE)" ;
GGS_typedAttributeList::cEnumerator enumerator_369 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_369 = NULL ;
while (((operand_369 = enumerator_369.nextObject ()))) {
macroValidPointer (operand_369) ;
result << ",\n"
  "mAttribute_" ;
result << operand_369->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (NULL)" ;
}
result << " {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_485 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_485 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_485 = enumerator_485.nextObject ()))) {
macroValidPointer (operand_485) ;
result << "  macroAssignObjectThere (mAttribute_" ;
result << operand_485->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ", (GALGAS_" ;
result << operand_485->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (13)) ;
result << " *) inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (13)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_872 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_872 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_872 = enumerator_872.nextObject ()))) {
macroValidPointer (operand_872) ;
result << "GALGAS_" ;
result << operand_872->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (22)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (22)) ;
if (enumerator_872.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " \n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  if (" ;
GGS_typedAttributeList::cEnumerator enumerator_1108 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1108 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1108 = enumerator_1108.nextObject ()))) {
macroValidPointer (operand_1108) ;
result << "(NULL != inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (28)) ;
result << ")" ;
if (enumerator_1108.hasNextObject ()) {
result << " && " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "    macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_1270 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1270 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1270 = enumerator_1270.nextObject ()))) {
macroValidPointer (operand_1270) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (34)) ;
if (enumerator_1270.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::~ GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1550 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1550 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1550 = enumerator_1550.nextObject ()))) {
macroValidPointer (operand_1550) ;
result << "  macroReleaseObject (mAttribute_" ;
result << operand_1550->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                             " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 inIndentation) const {\n"
  "  ioString << \"<struct @" ;
result << var_cas_TYPE_NAME ;
result << ":\" ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1953 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1953 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1953 = enumerator_1953.nextObject ()))) {
macroValidPointer (operand_1953) ;
result << "  mAttribute_" ;
result << operand_1953->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << "->description (ioString, inIndentation  + 1) ;\n" ;
if (enumerator_1953.hasNextObject ()) {
result << "  ioString << \", \" ;\n" ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  ioString << \">\" ;\n"
  "}\n"
  "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2170 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2170 = NULL ;
while (((operand_2170 = enumerator_2170.nextObject ()))) {
macroValidPointer (operand_2170) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_2170->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (68)) ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_2170->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (UNUSED_LOCATION_ARGS) {\n"
  "  return mAttribute_" ;
result << operand_2170->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "}\n"
  "\n" ;
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "PMSInt32 GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n"
  "                                      " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2) {\n"
  "  macroValidObject (inOperand1, const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  macroValidObject (inOperand2, const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  PMSInt32 result = 0 ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2979 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2979 = NULL ;
while (((operand_2979 = enumerator_2979.nextObject ()))) {
macroValidPointer (operand_2979) ;
result << "  if (result == 0) {\n"
  "    result = GALGAS_" ;
result << operand_2979->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (82)) ;
result << "::objectCompare (inOperand1->mAttribute_" ;
result << operand_2979->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ", inOperand2->mAttribute_" ;
result << operand_2979->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'mapProxyTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_mapProxyTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_mapSearchMethodListAST & var_cas_SEARCH_METHOD_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_SEARCH_METHOD_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_mapproxy (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (4)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4)) ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_null (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::class_method_makeRegularProxy (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_string * inKey,\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << " * & ioMap,\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & outProxy\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  macroReleaseObject (outProxy) ;\n"
  "  if ((NULL != inKey) && (NULL != ioMap)) {\n"
  "    GALGAS_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << "::insulate (ioMap COMMA_HERE) ;\n"
  "    macroMyNew (outProxy, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "    outProxy->internalMakeRegularProxy (ioMap, inKey) ;\n"
  "  }\n"
  "}\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1239 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1239 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1239 = enumerator_1239.nextObject ()))) {
macroValidPointer (operand_1239) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_1239->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (30)) ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_1239->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << operand_1239->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
result << " * result = NULL ;\n"
  "  GALGAS_root * * attributeList = getAttributeList (inCompiler COMMA_THERE) ;\n"
  "  if (NULL != attributeList) {\n"
  "    result = (GALGAS_" ;
result << operand_1239->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << " *) attributeList [" ;
result << var_cas_IDX.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (35)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << "] ;\n"
  "    macroValidObject (result, GALGAS_" ;
result << operand_1239->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (36)) ;
result << ") ;\n"
  "    macroRetainObject (result) ; // A returned object is retained\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_mapSearchMethodListAST::cEnumerator enumerator_2156 (var_cas_SEARCH_METHOD_LIST, true) ;
const GGS_mapSearchMethodListAST::cElement * operand_2156 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2156 = enumerator_2156.nextObject ()))) {
macroValidPointer (operand_2156) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_" ;
result << operand_2156->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << " * inMap,\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_lstring * inKey,\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  if ((NULL != inMap) && (NULL != inKey)) {\n" ;
const GGS_uint indentation_3213 = GGS_uint (4U) ;
if (indentation_3213.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_3213.uintValue ()) ;
}
result << "macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "const utf32 kSearchErrorMessage [" ;
result << operand_2156->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (53)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (53)) ;
result << "] = " ;
result << operand_2156->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "const bool ok = result->internalSearchKey (inMap, inKey, kSearchErrorMessage, inCompiler COMMA_THERE) ;\n"
  "if (! ok) {\n"
  "  macroReleaseObject (result) ;\n"
  "}\n" ;
 ;
if (indentation_3213.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_3213.uintValue ())) ;
}
result << "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'classTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_classTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_SUPER_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_CURRENT_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_ALL_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_INHERITED_ATTRIBUTE_LIST,
                                const GGS_bool& var_cas_IS_ABSTRACT,
                                const GGS_methodDefinitionListForGeneration & var_cas_CONCRETE_METHOD_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_CURRENT_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_ALL_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_INHERITED_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_IS_ABSTRACT.isBuilt ()
    && var_cas_CONCRETE_METHOD_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n" ;
if ((var_cas_CURRENT_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "PMSInt32 GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * /* inOperand1 */,\n"
  "                                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * /* inOperand2 */) {\n"
  "  return 0 ;\n"
  "}\n"
  "\n" ;
}else {
result << "PMSInt32 GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n"
  "                                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2) {\n"
  "  macroValidObject (inOperand1, const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  macroValidObject (inOperand2, const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  PMSInt32 result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (inOperand1, inOperand2) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_862 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_862 = NULL ;
while (((operand_862 = enumerator_862.nextObject ()))) {
macroValidPointer (operand_862) ;
result << "  if (0 == result) {\n"
  "    result = GALGAS_" ;
result << operand_862->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
result << "::objectCompare (inOperand1->mAttribute_" ;
result << operand_862->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ", inOperand2->mAttribute_" ;
result << operand_862->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n" ;
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1371 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1371 = NULL ;
while (((operand_1371 = enumerator_1371.nextObject ()))) {
macroValidPointer (operand_1371) ;
result << "GALGAS_" ;
result << operand_1371->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (27)) ;
result << " * constinAttribute_" ;
result << operand_1371->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1371.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
result << ") :\n"
  "GALGAS_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_1726 (var_cas_INHERITED_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1726 = NULL ;
while (((operand_1726 = enumerator_1726.nextObject ()))) {
macroValidPointer (operand_1726) ;
result << "constinAttribute_" ;
result << operand_1726->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1726.hasNextObject ()) {
result << ", " ;
}
}
if ((var_cas_INHERITED_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << " COMMA_THERE)" ;
}else {
result << "THERE)" ;
}
GGS_typedAttributeList::cEnumerator enumerator_1952 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1952 = NULL ;
while (((operand_1952 = enumerator_1952.nextObject ()))) {
macroValidPointer (operand_1952) ;
result << ",\n"
  "mAttribute_" ;
result << operand_1952->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (NULL)" ;
}
result << " {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2085 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2085 = NULL ;
while (((operand_2085 = enumerator_2085.nextObject ()))) {
macroValidPointer (operand_2085) ;
result << "  macroAssignObject (mAttribute_" ;
result << operand_2085->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ", (GALGAS_" ;
result << operand_2085->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (52)) ;
result << " *) constinAttribute_" ;
result << operand_2085->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n" ;
}
result << "}\n"
  "\n" ;
if (((var_cas_IS_ABSTRACT).operator_not ()).operator_and ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 /* inIndentation */) const {\n"
  "  ioString << \"<class @\"\n"
  "           << typeDescriptor ()->mGalgasTypeName\n"
  "           << \">\" ;\n"
  "}\n"
  "\n" ;
}else {
}
if (((var_cas_IS_ABSTRACT).operator_not ()).operator_and ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_3354 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3354 = NULL ;
while (((operand_3354 = enumerator_3354.nextObject ()))) {
macroValidPointer (operand_3354) ;
result << "GALGAS_" ;
result << operand_3354->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (77)) ;
result << " * inAttribute_" ;
result << operand_3354->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_3354.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  if (" ;
GGS_typedAttributeList::cEnumerator enumerator_3718 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3718 = NULL ;
while (((operand_3718 = enumerator_3718.nextObject ()))) {
macroValidPointer (operand_3718) ;
result << "(NULL != inAttribute_" ;
result << operand_3718->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
if (enumerator_3718.hasNextObject ()) {
result << " && " ;
}
}
result << ") {\n"
  "    macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_3924 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3924 = NULL ;
while (((operand_3924 = enumerator_3924.nextObject ()))) {
macroValidPointer (operand_3924) ;
result << "inAttribute_" ;
result << operand_3924->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_3924.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_THERE)) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 /* inIndentation */) const {\n"
  "  ioString << \"<class @\"\n"
  "           << typeDescriptor ()->mGalgasTypeName\n"
  "           << \":\" ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4484 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4484 = NULL ;
while (((operand_4484 = enumerator_4484.nextObject ()))) {
macroValidPointer (operand_4484) ;
result << "//  mAttribute_" ;
result << operand_4484->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << "->description (ioString, inIndentation + 1) ;\n" ;
if (enumerator_4484.hasNextObject ()) {
result << "  ioString << \", \" ;\n" ;
}
}
result << "  ioString << \">\" ;\n"
  "}\n"
  "\n" ;
}else {
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::~GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4868 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4868 = NULL ;
while (((operand_4868 = enumerator_4868.nextObject ()))) {
macroValidPointer (operand_4868) ;
result << "  macroReleaseObject (mAttribute_" ;
result << operand_4868->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n" ;
}
result << "}\n"
  "\n" ;
if (((var_cas_IS_ABSTRACT).operator_not ()).operator_and ((var_cas_SUPER_TYPE_IDENTIFIER).operator_isNotEqual (GGS_string ("class"))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " (UNUSED_LOCATION_ARGS) {\n"
  "  macroRetainObject (this) ;\n"
  "  return (GALGAS_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " *) this ;\n"
  "}\n"
  "\n" ;
}else {
}
GGS_methodDefinitionListForGeneration::cEnumerator enumerator_5367 (var_cas_CONCRETE_METHOD_LIST, true) ;
const GGS_methodDefinitionListForGeneration::cElement * operand_5367 = NULL ;
while (((operand_5367 = enumerator_5367.nextObject ()))) {
macroValidPointer (operand_5367) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << function_generateProcedure (inLexique, (((GGS_string ("GALGAS_")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string ("::method_"))).operator_concat (operand_5367->mMethodName.ggs_string ().reader_identifierRepresentation ()), operand_5367->mSignature, operand_5367->mInstructionList, GGS_bool (false), GGS_string ("C_Compiler") COMMA_SOURCE_FILE_AT_LINE (136)) ;
}
GGS_typedAttributeList::cEnumerator enumerator_5705 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5705 = NULL ;
while (((operand_5705 = enumerator_5705.nextObject ()))) {
macroValidPointer (operand_5705) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_5705->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (147)) ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_5705->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (UNUSED_LOCATION_ARGS) {\n"
  "  macroRetainObject (mAttribute_" ;
result << operand_5705->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  return mAttribute_" ;
result << operand_5705->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "}\n"
  "\n" ;
}
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'routineDeclaration' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_routineDeclaration (C_Compiler & inLexique,
                                const GGS_string& var_cas_ROUTINE_NAME,
                                const GGS_formalParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_ROUTINE_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Routine '")).operator_concat (var_cas_ROUTINE_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void routine_" ;
result << var_cas_ROUTINE_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_488 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_488 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_488 = enumerator_488.nextObject ()))) {
macroValidPointer (operand_488) ;
if ((operand_488->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (9))).boolValue ()) {
result << "GALGAS_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (10)) ;
result << " * constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (10)) ;
}else if ((operand_488->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (11))).boolValue ()) {
result << "GALGAS_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
}else if ((operand_488->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (13))).boolValue ()) {
result << "GALGAS_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
}else {
result << "GALGAS_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'functionDeclaration' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_functionDeclaration (C_Compiler & inLexique,
                                const GGS_string& var_cas_FUNCTION_NAME,
                                const GGS_formalInputParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST,
                                const GGS_string& var_cas_RETURN_TYPE_IDENTIFIER) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_FUNCTION_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt ()
    && var_cas_RETURN_TYPE_IDENTIFIER.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Routine '")).operator_concat (var_cas_FUNCTION_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_RETURN_TYPE_IDENTIFIER ;
result << " * function_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_521 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_521 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_521 = enumerator_521.nextObject ()))) {
macroValidPointer (operand_521) ;
result << "GALGAS_" ;
result << operand_521->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
result << " * constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'routineImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_routineImplementation (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_ROUTINE_NAME,
                                const GGS_string& var_cas_ROUTINE_IMPLEMENTATION) {
  C_String result ;
  const bool isBuilt = var_cas_ROUTINE_NAME.isBuilt ()
    && var_cas_ROUTINE_IMPLEMENTATION.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Routine '")).operator_concat (var_cas_ROUTINE_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << var_cas_ROUTINE_IMPLEMENTATION ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@semanticDeclarationForGeneration.appendDeclaration'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendDeclaration (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_11183
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_11183 != NULL) {
var_cas_outHeader = GGS_string ("") ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration> gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration (typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendDeclaration (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration
findCategoryReader__semanticDeclarationForGeneration__appendDeclaration (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendDeclaration (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendDeclaration ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@routinePrototypeDeclarationForGeneration.appendDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__routinePrototypeDeclarationForGeneration__appendDeclaration (C_Compiler & inLexique,
                                const cPtr_routinePrototypeDeclarationForGeneration * operand_11395
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_11395 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_routineDeclaration (inLexique, operand_11395->mRoutineName, operand_11395->mFormalArgumentList) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@functionPrototypeDeclarationForGeneration.appendDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__functionPrototypeDeclarationForGeneration__appendDeclaration (C_Compiler & inLexique,
                                const cPtr_functionPrototypeDeclarationForGeneration * operand_11721
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_11721 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_functionDeclaration (inLexique, operand_11721->mFunctionName, operand_11721->mFormalArgumentList, operand_11721->mReturnType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (288))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@semanticTypeForGeneration.appendDeclaration'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticTypeForGeneration__appendDeclaration (C_Compiler & inLexique,
                                const cPtr_semanticTypeForGeneration * operand_12077
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_12077 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_unifiedTypeHeader (inLexique, operand_12077->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (296)), operand_12077->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (297)), operand_12077->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (298)), operand_12077->mTypeIndex.reader_mSuperType (inLexique COMMA_SOURCE_FILE_AT_LINE (299)), operand_12077->mTypeIndex.reader_mTypeKindEnum (inLexique COMMA_SOURCE_FILE_AT_LINE (300)), operand_12077->mTypeIndex.reader_mCurrentTypedAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (301)), operand_12077->mTypeIndex.reader_mInheritedTypedAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (302)), operand_12077->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (303)), operand_12077->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (304)), operand_12077->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (305)), operand_12077->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (306)), operand_12077->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (307)), operand_12077->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (308)), operand_12077->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (309)), operand_12077->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (310)), operand_12077->mTypeIndex.reader_mNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (311)), operand_12077->mTypeIndex.reader_mEnumConstantList (inLexique COMMA_SOURCE_FILE_AT_LINE (312)), operand_12077->mTypeIndex.reader_mPrivateDataMemberList (inLexique COMMA_SOURCE_FILE_AT_LINE (313)), operand_12077->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (314))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@genericTypeForGeneration.appendDeclaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__genericTypeForGeneration__appendDeclaration (C_Compiler & inLexique,
                                const cPtr_genericTypeForGeneration * operand_13032
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_13032 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_genericTypeHeader (inLexique, operand_13032->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (322)), operand_13032->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (323))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticDeclarationForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendTypeGenericImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_13764
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_13764 != NULL) {
var_cas_outImplementation = GGS_string ("") ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation> gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendTypeGenericImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation
findCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendTypeGenericImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticTypeForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticTypeForGeneration__appendTypeGenericImplementation (C_Compiler & inLexique,
                                const cPtr_semanticTypeForGeneration * operand_13990
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_13990 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_unifiedTypeImplementation (inLexique, operand_13990->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (342)), operand_13990->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (343)), operand_13990->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (344)), operand_13990->mTypeIndex.reader_mSuperType (inLexique COMMA_SOURCE_FILE_AT_LINE (345)), operand_13990->mTypeIndex.reader_mTypeKindEnum (inLexique COMMA_SOURCE_FILE_AT_LINE (346)), operand_13990->mTypeIndex.reader_mCurrentTypedAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (347)), operand_13990->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (348)), operand_13990->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (349)), operand_13990->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (350)), operand_13990->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (351)), operand_13990->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (352)), operand_13990->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (353)), operand_13990->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (354)), operand_13990->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (355)), operand_13990->mTypeIndex.reader_mNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (356))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@genericTypeForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__genericTypeForGeneration__appendTypeGenericImplementation (C_Compiler & inLexique,
                                const cPtr_genericTypeForGeneration * operand_14824
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_14824 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_genericTypeImplementation (inLexique, operand_14824->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (365)), operand_14824->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (366)), operand_14824->mTypeIndex.reader_mSuperType (inLexique COMMA_SOURCE_FILE_AT_LINE (367))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticDeclarationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendSpecificImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_15527
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_15527 != NULL) {
var_cas_outImplementation = GGS_string ("") ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation> gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendSpecificImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation
findCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendSpecificImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@primitiveTypeForGeneration.appendSpecificImplementation' *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__primitiveTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_primitiveTypeForGeneration * operand_15751
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_15751 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_predefinedTypeSpecificImplementation (inLexique, operand_15751->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (385)), operand_15751->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (386)), operand_15751->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (387)), operand_15751->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (388)), operand_15751->mTypeIndex.reader_mNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (389))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@listTypeForGeneration.appendSpecificImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__listTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_listTypeForGeneration * operand_16257
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_16257 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_listTypeSpecificImplementation (inLexique, operand_16257->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (397)), operand_16257->mTypedAttributeList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category reader '@listmapTypeForGeneration.appendSpecificImplementation'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__listmapTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_listmapTypeForGeneration * operand_16629
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_16629 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_listmapTypeSpecificImplementation (inLexique, operand_16629->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (406)), operand_16629->mAssociatedListTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (407)), operand_16629->mAssociatedListTypedAttributeList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category reader '@mapTypeForGeneration.appendSpecificImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_mapTypeForGeneration * operand_17071
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_17071 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_mapTypeSpecificImplementation (inLexique, operand_17071->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (416)), operand_17071->mTypedAttributeList, operand_17071->mInsertMethodList, operand_17071->mSearchMethodList, operand_17071->mRemoveMethodList, operand_17071->mHasInsertOrReplaceModifier, operand_17071->mWithAccessorMap) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@sortedListTypeForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__sortedListTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_sortedListTypeForGeneration * operand_17569
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_17569 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_sortedlistTypeSpecificImplementation (inLexique, operand_17569->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (430)), operand_17569->mTypedAttributeList, operand_17569->mSortDescriptorList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category reader '@structTypeForGeneration.appendSpecificImplementation'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__structTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_structTypeForGeneration * operand_17971
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_17971 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_structTypeSpecificImplementation (inLexique, operand_17971->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (440)), operand_17971->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (441)), operand_17971->mTypedAttributeList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@enumTypeForGeneration.appendSpecificImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__enumTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_enumTypeForGeneration * operand_18364
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_18364 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_enumTypeSpecificImplementation (inLexique, operand_18364->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (450)), operand_18364->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (451)), operand_18364->mConstantList, operand_18364->mEnumMessageList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@mapProxyTypeForGeneration.appendSpecificImplementation'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapProxyTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_mapProxyTypeForGeneration * operand_18775
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_18775 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_mapProxyTypeSpecificImplementation (inLexique, operand_18775->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (461)), operand_18775->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (462)), operand_18775->mAssociatedMapTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (463)), operand_18775->mAssociatedMapTypedAttributeList, operand_18775->mSearchMethodList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@classTypeForGeneration.appendSpecificImplementation'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__classTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_classTypeForGeneration * operand_19263
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_19263 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_classTypeSpecificImplementation (inLexique, operand_19263->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (473)), operand_19263->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (474)), ((operand_19263->mSuperClass.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (475))).isBuiltAndTrue () ? (GGS_string ("class")) : (operand_19263->mSuperClass.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (475)))), operand_19263->mTypedAttributeList, operand_19263->mAllTypedAttributeList, operand_19263->mAllTypedAttributeList.reader_subListWithRange (inLexique, GGS_uint (0U), operand_19263->mAllTypedAttributeList.reader_length ().substract_operation (inLexique, operand_19263->mTypedAttributeList.reader_length () COMMA_SOURCE_FILE_AT_LINE (478)) COMMA_SOURCE_FILE_AT_LINE (478)), operand_19263->mIsAbstract, operand_19263->mMethodList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@routineImplementationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__routineImplementationForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_routineImplementationForGeneration * operand_19934
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_19934 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_routineImplementation (inLexique, operand_19934->mRoutineName, function_generateProcedure (inLexique, (GGS_string ("routine_")).operator_concat (operand_19934->mRoutineName.reader_identifierRepresentation ()), operand_19934->mFormalArgumentList, operand_19934->mRoutineInstructionList, GGS_bool (false), GGS_string ("C_Compiler") COMMA_SOURCE_FILE_AT_LINE (489))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticGeneration (void) {
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration (category_reader__semanticDeclarationForGeneration__appendDeclaration, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration) category_reader__routinePrototypeDeclarationForGeneration__appendDeclaration, gClassInfoFor__routinePrototypeDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration) category_reader__functionPrototypeDeclarationForGeneration__appendDeclaration, gClassInfoFor__functionPrototypeDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration) category_reader__semanticTypeForGeneration__appendDeclaration, gClassInfoFor__semanticTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration) category_reader__genericTypeForGeneration__appendDeclaration, gClassInfoFor__genericTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (category_reader__semanticDeclarationForGeneration__appendTypeGenericImplementation, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation) category_reader__semanticTypeForGeneration__appendTypeGenericImplementation, gClassInfoFor__semanticTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation) category_reader__genericTypeForGeneration__appendTypeGenericImplementation, gClassInfoFor__genericTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (category_reader__semanticDeclarationForGeneration__appendSpecificImplementation, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__primitiveTypeForGeneration__appendSpecificImplementation, gClassInfoFor__primitiveTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__listTypeForGeneration__appendSpecificImplementation, gClassInfoFor__listTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__listmapTypeForGeneration__appendSpecificImplementation, gClassInfoFor__listmapTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__mapTypeForGeneration__appendSpecificImplementation, gClassInfoFor__mapTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__sortedListTypeForGeneration__appendSpecificImplementation, gClassInfoFor__sortedListTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__structTypeForGeneration__appendSpecificImplementation, gClassInfoFor__structTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__enumTypeForGeneration__appendSpecificImplementation, gClassInfoFor__enumTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__mapProxyTypeForGeneration__appendSpecificImplementation, gClassInfoFor__mapProxyTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__classTypeForGeneration__appendSpecificImplementation, gClassInfoFor__classTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__routineImplementationForGeneration__appendSpecificImplementation, gClassInfoFor__routineImplementationForGeneration.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_semanticGeneration (void) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration.free () ;
  gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.free () ;
  gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticGeneration (prologueRoutineFor_semanticGeneration, epilogueRoutineFor_semanticGeneration) ;

//---------------------------------------------------------------------------*

