//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'semanticGeneration.cpp'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       june 1st, 2010, at 22h45'48"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticGeneration.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticGeneration.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of function "generateProcedure"               *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string function_generateProcedure (C_Compiler & inLexique,
                                const GGS_string  var_cas_inProcedureName,
                                const GGS_formalParameterListForGeneration   var_cas_inFormalArgumentList,
                                const GGS_semanticInstructionListForGeneration   var_cas_inInstructionList,
                                const GGS_bool  var_cas_inProcedureIsConst,
                                const GGS_string  var_cas_inCompilerTypeName,
                                const GGS_bool  var_cas_inGenerateLocationArgs COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER function_generateProcedure at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_outGeneratedCode ;
  GGS_stringset  var_cas_unusedVariableCppNameSet = GGS_stringset ::constructor_emptySet () ;
  var_cas_unusedVariableCppNameSet.addAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (42))) ;
  {
    GGS_formalParameterListForGeneration::cEnumerator enumerator_2441 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalParameterListForGeneration::cElement * operand_2441 = NULL ;
    while (((operand_2441 = enumerator_2441.nextObject ()))) {
      macroValidPointer (operand_2441) ;
      const GGS_bool cond_2598 = (operand_2441->mFormalArgumentPassingMode).operator_isNotEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (44))) ;
      if (cond_2598.isBuiltAndTrue ()) {
        var_cas_unusedVariableCppNameSet.addAssign_operation (operand_2441->mFormalArgumentCppName) ;
      }
    }
  }
  GGS_uint  var_cas_temporaryVariableIndex = GGS_uint (0U) ;
  GGS_string var_cas_routineBody = GGS_string ("") ;
  var_cas_routineBody.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (51)) ;
  {
    GGS_semanticInstructionListForGeneration::cEnumerator enumerator_2772 (var_cas_inInstructionList, true) ;
    const GGS_semanticInstructionListForGeneration::cElement * operand_2772 = NULL ;
    while (((operand_2772 = enumerator_2772.nextObject ()))) {
      macroValidPointer (operand_2772) ;
      { typeCategoryMethod__semanticInstructionForGeneration__generateInstruction method = findCategoryMethod__semanticInstructionForGeneration__generateInstruction (operand_2772->mInstruction.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_2772->mInstruction (HERE), var_cas_temporaryVariableIndex, var_cas_unusedVariableCppNameSet, var_cas_routineBody COMMA_SOURCE_FILE_AT_LINE (53)) ;
        }
      }
    }
  }
  var_cas_routineBody.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (55)) ;
  var_cas_outGeneratedCode = ((GGS_string ("void ")).operator_concat (var_cas_inProcedureName)).operator_concat (GGS_string (" (")) ;
  const GGS_uint  var_cas_colRef = var_cas_outGeneratedCode.reader_currentColumn () ;
  {
    GGS_formalParameterListForGeneration::cEnumerator enumerator_3109 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalParameterListForGeneration::cElement * operand_3109 = NULL ;
    while (((operand_3109 = enumerator_3109.nextObject ()))) {
      macroValidPointer (operand_3109) ;
      switch (operand_3109->mFormalArgumentPassingMode.enumValue ()) {
      case GGS_formalArgumentPassingModeAST::enum_argumentConstantIn:
        {
        var_cas_outGeneratedCode.appendCString ("GALGASap_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3109->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (63))) ;
        var_cas_outGeneratedCode.appendCString (" ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentInOut:
        {
        var_cas_outGeneratedCode.appendCString ("GALGASap_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3109->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (65))) ;
        var_cas_outGeneratedCode.appendCString (" & ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentOut:
        {
        var_cas_outGeneratedCode.appendCString ("GALGASap_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3109->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (67))) ;
        var_cas_outGeneratedCode.appendCString (" & ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentIn:
        {
        var_cas_outGeneratedCode.appendCString ("GALGASap_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3109->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (69))) ;
        var_cas_outGeneratedCode.appendCString (" ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::kNotBuilt:
        break ;
      }
      const GGS_bool cond_3798 = var_cas_unusedVariableCppNameSet.reader_hasKey (operand_3109->mFormalArgumentCppName) ;
      if (cond_3798.isBuiltAndTrue ()) {
        var_cas_outGeneratedCode.appendCString ("/* ") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3109->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (" */") ;
      }else if (cond_3798.isBuiltAndFalse ()) {
        var_cas_outGeneratedCode.dotAssign_operation (operand_3109->mFormalArgumentCppName) ;
      }
      var_cas_outGeneratedCode.appendCString (",\n") ;
      var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (77)) ;
    }
  }
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inCompilerTypeName) ;
  var_cas_outGeneratedCode.appendCString (" * ") ;
  const GGS_bool cond_4175 = var_cas_unusedVariableCppNameSet.reader_hasKey (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (81))) ;
  if (cond_4175.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("/* ") ;
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (82))) ;
    var_cas_outGeneratedCode.appendCString (" */") ;
  }else if (cond_4175.isBuiltAndFalse ()) {
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (84))) ;
  }
  const GGS_bool cond_4415 = var_cas_inGenerateLocationArgs ;
  if (cond_4415.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("\n") ;
    var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (88)) ;
    var_cas_outGeneratedCode.appendCString ("COMMA_UNUSED_LOCATION_ARGS") ;
  }
  var_cas_outGeneratedCode.appendCString (")") ;
  const GGS_bool cond_4518 = var_cas_inProcedureIsConst ;
  if (cond_4518.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString (" const") ;
  }
  var_cas_outGeneratedCode.appendCString (" {\n") ;
  {
      GGS_uint var_cas_IDX (true, 0) ;
    GGS_formalParameterListForGeneration::cEnumerator enumerator_4614 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalParameterListForGeneration::cElement * operand_4614 = NULL ;
    while (((operand_4614 = enumerator_4614.nextObject ()))) {
      macroValidPointer (operand_4614) ;
      switch (operand_4614->mFormalArgumentPassingMode.enumValue ()) {
      case GGS_formalArgumentPassingModeAST::enum_argumentOut:
        {
        var_cas_outGeneratedCode.appendCString ("  ") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_4614->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (".drop () ; // Release 'out' argument\n") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentConstantIn:
      case GGS_formalArgumentPassingModeAST::enum_argumentIn:
      case GGS_formalArgumentPassingModeAST::enum_argumentInOut:
        {
        }
        break ;
      case GGS_formalArgumentPassingModeAST::kNotBuilt:
        break ;
      }
      var_cas_IDX.mValue ++ ;
    }
  }
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_routineBody) ;
  var_cas_outGeneratedCode.appendCString ("}\n"
    "\n") ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE function_generateProcedure\n") ;
  #endif
  return var_cas_outGeneratedCode ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_generateProcedure (C_Compiler & inLexique,
                           const GGS_objectlist & inEffectiveParameterArray,
                           const GGS_location & inErrorLocation
                           COMMA_LOCATION_ARGS) {
  const GGS_string arg_0 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (0) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_formalParameterListForGeneration  arg_1 = GGS_formalParameterListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (1) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_semanticInstructionListForGeneration  arg_2 = GGS_semanticInstructionListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (2) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_bool arg_3 = GGS_bool::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (3) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_4 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (4) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_bool arg_5 = GGS_bool::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (5) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string result = function_generateProcedure (inLexique,
                            arg_0,
                            arg_1,
                            arg_2,
                            arg_3,
                            arg_4,
                            arg_5
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

static const C_galgas_type_descriptorEX *
kArgumentTypeList_generateProcedure [6] = {& kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_formalParameterListForGeneration ,
                              & kTypeDescriptor_GGS_semanticInstructionListForGeneration ,
                              & kTypeDescriptor_GGS_bool,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_bool} ;

const C_galgas_function_descriptorEX
kFunction_descriptor_generateProcedure ("generateProcedure",
                              functionForGenericCall_generateProcedure,
                              & kTypeDescriptor_GGS_string,
                              6,
                              kArgumentTypeList_generateProcedure) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of function "generateFunction"                *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string function_generateFunction (C_Compiler & inLexique,
                                const GGS_string  var_cas_inProcedureName,
                                const GGS_formalInputParameterListForGeneration   var_cas_inFormalArgumentList,
                                const GGS_semanticInstructionListForGeneration   var_cas_inInstructionList,
                                const GGS_string  var_cas_inCompilerTypeName,
                                const GGS_string  var_cas_inResultTypeName,
                                const GGS_string  var_cas_inResultVariableCppName COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER function_generateFunction at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_outGeneratedCode ;
  GGS_stringset  var_cas_unusedVariableCppNameSet = GGS_stringset ::constructor_emptySet () ;
  var_cas_unusedVariableCppNameSet.addAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (127))) ;
  {
    GGS_formalInputParameterListForGeneration::cEnumerator enumerator_5926 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalInputParameterListForGeneration::cElement * operand_5926 = NULL ;
    while (((operand_5926 = enumerator_5926.nextObject ()))) {
      macroValidPointer (operand_5926) ;
      var_cas_unusedVariableCppNameSet.addAssign_operation (operand_5926->mFormalArgumentCppName) ;
    }
  }
  GGS_uint  var_cas_temporaryVariableIndex = GGS_uint (0U) ;
  GGS_string var_cas_routineBody = GGS_string ("") ;
  var_cas_routineBody.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (135)) ;
  {
    GGS_semanticInstructionListForGeneration::cEnumerator enumerator_6156 (var_cas_inInstructionList, true) ;
    const GGS_semanticInstructionListForGeneration::cElement * operand_6156 = NULL ;
    while (((operand_6156 = enumerator_6156.nextObject ()))) {
      macroValidPointer (operand_6156) ;
      { typeCategoryMethod__semanticInstructionForGeneration__generateInstruction method = findCategoryMethod__semanticInstructionForGeneration__generateInstruction (operand_6156->mInstruction.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_6156->mInstruction (HERE), var_cas_temporaryVariableIndex, var_cas_unusedVariableCppNameSet, var_cas_routineBody COMMA_SOURCE_FILE_AT_LINE (137)) ;
        }
      }
    }
  }
  var_cas_routineBody.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (139)) ;
  var_cas_outGeneratedCode = ((GGS_string ("GALGASap_")).operator_concat (var_cas_inResultTypeName.reader_identifierRepresentation ())).operator_concat (GGS_string (" ")) ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inProcedureName) ;
  var_cas_outGeneratedCode.appendCString (" (") ;
  const GGS_uint  var_cas_colRef = var_cas_outGeneratedCode.reader_currentColumn () ;
  {
    GGS_formalInputParameterListForGeneration::cEnumerator enumerator_6571 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalInputParameterListForGeneration::cElement * operand_6571 = NULL ;
    while (((operand_6571 = enumerator_6571.nextObject ()))) {
      macroValidPointer (operand_6571) ;
      var_cas_outGeneratedCode.appendCString ("GALGASap_") ;
      var_cas_outGeneratedCode.dotAssign_operation (operand_6571->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (146))) ;
      var_cas_outGeneratedCode.appendCString (" & ") ;
      const GGS_bool cond_6815 = var_cas_unusedVariableCppNameSet.reader_hasKey (operand_6571->mFormalArgumentCppName) ;
      if (cond_6815.isBuiltAndTrue ()) {
        var_cas_outGeneratedCode.appendCString ("/* ") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_6571->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (" */") ;
      }else if (cond_6815.isBuiltAndFalse ()) {
        var_cas_outGeneratedCode.dotAssign_operation (operand_6571->mFormalArgumentCppName) ;
      }
      var_cas_outGeneratedCode.appendCString (",\n") ;
      var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (153)) ;
    }
  }
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inCompilerTypeName) ;
  var_cas_outGeneratedCode.appendCString (" * ") ;
  const GGS_bool cond_7192 = var_cas_unusedVariableCppNameSet.reader_hasKey (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (157))) ;
  if (cond_7192.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("/* ") ;
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (158))) ;
    var_cas_outGeneratedCode.appendCString (" */") ;
  }else if (cond_7192.isBuiltAndFalse ()) {
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (160))) ;
  }
  var_cas_outGeneratedCode.appendCString ("\n") ;
  var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (163)) ;
  var_cas_outGeneratedCode.appendCString ("COMMA_UNUSED_LOCATION_ARGS)") ;
  var_cas_outGeneratedCode.appendCString (" {\n") ;
  var_cas_outGeneratedCode.appendCString ("  GALGASap_") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inResultTypeName.reader_identifierRepresentation ()) ;
  var_cas_outGeneratedCode.appendCString (" ") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inResultVariableCppName) ;
  var_cas_outGeneratedCode.appendCString (" ; // Returned variable\n") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_routineBody) ;
  var_cas_outGeneratedCode.appendCString ("//---\n") ;
  var_cas_outGeneratedCode.appendCString ("  return ") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inResultVariableCppName) ;
  var_cas_outGeneratedCode.appendCString (" ;\n") ;
  var_cas_outGeneratedCode.appendCString ("}\n"
    "\n") ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE function_generateFunction\n") ;
  #endif
  return var_cas_outGeneratedCode ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_generateFunction (C_Compiler & inLexique,
                           const GGS_objectlist & inEffectiveParameterArray,
                           const GGS_location & inErrorLocation
                           COMMA_LOCATION_ARGS) {
  const GGS_string arg_0 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (0) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_formalInputParameterListForGeneration  arg_1 = GGS_formalInputParameterListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (1) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_semanticInstructionListForGeneration  arg_2 = GGS_semanticInstructionListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (2) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_3 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (3) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_4 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (4) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_5 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (5) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string result = function_generateFunction (inLexique,
                            arg_0,
                            arg_1,
                            arg_2,
                            arg_3,
                            arg_4,
                            arg_5
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

static const C_galgas_type_descriptorEX *
kArgumentTypeList_generateFunction [6] = {& kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_formalInputParameterListForGeneration ,
                              & kTypeDescriptor_GGS_semanticInstructionListForGeneration ,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_string} ;

const C_galgas_function_descriptorEX
kFunction_descriptor_generateFunction ("generateFunction",
                              functionForGenericCall_generateFunction,
                              & kTypeDescriptor_GGS_string,
                              6,
                              kArgumentTypeList_generateFunction) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of wrapper 'semanticComponentGenerationTemplate'       *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_semanticComponentGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_semanticComponentGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_semanticComponentGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_semanticComponentGenerationTemplate_0,
  0,
  gWrapperAllDirectories_semanticComponentGenerationTemplate_0
) ;

//---------------------------------------------------------------------------*
//                                                                           *
//'autoPointerClassHeader' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_autoPointerClassHeader (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_SUPER_TYPE_IDENTIFIER) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_IDENTIFIER.isBuilt () ;
  if (isBuilt) {
    result << "//---------------------------------------------------------------------------*\n"
      "//                                                                           *\n"
      "//" ;
    result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" auto ptr type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
    result << "*\n"
      "//                                                                           *\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "class GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " : public GALGASap_" ;
    result << var_cas_SUPER_TYPE_IDENTIFIER ;
    result << " {\n"
      "//--- Default constructor\n"
      "  public : inline GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " (void) : GALGASap_" ;
    result << var_cas_SUPER_TYPE_IDENTIFIER ;
    result << " () {}\n"
      "\n"
      "//--- Copy constructor\n"
      "  public : GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " (const GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " & inSource) ;\n"
      "\n"
      "//--- Constructor from generic object\n"
      "  public : GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " (const GALGASap_root & inSource) ;\n"
      "\n"
      "//--- Assignment operator\n"
      "  public : GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " & operator = (const GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " & inSource) ;\n"
      "\n"
      "//--- Get pointer  \n"
      "  #ifndef DO_NOT_GENERATE_CHECKINGS\n"
      "    public : GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " * ptr (LOCATION_ARGS) ;\n"
      "  #else\n"
      "    public : inline GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " * ptr (LOCATION_ARGS) {\n"
      "      return (GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " *) mPtr ;\n"
      "    }\n"
      "  #endif\n"
      "\n"
      "//--- Construction from pointer\n"
      "  public : GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " (GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " * inSourcePtr) ;\n"
      "\n"
      "//--- Assignment from pointer\n"
      "  public : GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " & operator = (GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " * inSourcePtr) ;\n"
      "} ;\n"
      "\n" ;
  }
  return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'autoPointerClassImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_autoPointerClassImplementation (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_SUPER_TYPE_IDENTIFIER) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_IDENTIFIER.isBuilt () ;
  if (isBuilt) {
    result << "//---------------------------------------------------------------------------*\n"
      "//                                                                           *\n"
      "//" ;
    result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" auto ptr type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
    result << "*\n"
      "//                                                                           *\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << "::GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " (const GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " & inSource) :\n"
      "GALGASap_" ;
    result << var_cas_SUPER_TYPE_IDENTIFIER ;
    result << " (inSource) {\n"
      "}\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << "::GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " (const GALGASap_root & inSource) :\n"
      "GALGASap_" ;
    result << var_cas_SUPER_TYPE_IDENTIFIER ;
    result << " (inSource) {\n"
      "  macroNullOrValidObject (mPtr, GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << ") ;\n"
      "}\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " & GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << "::operator = (const GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " & inSource) {\n"
      "  macroRetainObject (inSource.mPtr) ;\n"
      "  macroReleaseObject (mPtr) ;\n"
      "  mPtr = inSource.mPtr ;\n"
      "  return * this ;\n"
      "}\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
      "  GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " * GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << "::ptr (LOCATION_ARGS) {\n"
      "    macroValidObjectThere (mPtr, GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << ") ;\n"
      "    return (GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " *) mPtr ;\n"
      "  }\n"
      "#endif\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << "::GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " (GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " * inSourcePtr) :\n"
      "GALGASap_" ;
    result << var_cas_SUPER_TYPE_IDENTIFIER ;
    result << " (inSourcePtr) {\n"
      "  macroRetainObject (mPtr) ;\n"
      "}\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " & GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << "::operator = (GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " * inSourcePtr) {\n"
      "  macroRetainObject (inSourcePtr) ;\n"
      "  macroReleaseObject (mPtr) ;\n"
      "  mPtr = inSourcePtr ;\n"
      "  return *this ;\n"
      "}\n"
      "\n" ;
  }
  return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'genericTypeHeader' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_genericTypeHeader (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt () ;
  if (isBuilt) {
    result << "//---------------------------------------------------------------------------*\n"
      "//                                                                           *\n"
      "//" ;
    result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" generic type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
    result << "*\n"
      "//                                                                           *\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " ;\n"
      "\n" ;
  }
  return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'genericTypeImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_genericTypeImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_unifiedTypeMapProxy & var_cas_SUPER_TYPE_INDEX) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_INDEX.isBuilt () ;
  if (isBuilt) {
    result << "//---------------------------------------------------------------------------*\n"
      "//                                                                           *\n"
      "//" ;
    result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" generic type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
    result << "*\n"
      "//                                                                           *\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "const C_galgas_type_descriptor\n"
      "kTypeDescriptor_GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " (" ;
    columnMarker = result.currentColumn () ;
    result << "\"" ;
    result << var_cas_TYPE_NAME ;
    result << "\",\n"
      "                       " ;
    result.appendSpacesUntilColumn (columnMarker) ;
    if (var_cas_SUPER_TYPE_INDEX.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (9)).boolValue ()) {
      result << "NULL" ;
    }else {
      result << "& kTypeDescriptor_GALGAS_" ;
      result << var_cas_SUPER_TYPE_INDEX.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
    }
    result << ",\n"
      "                       " ;
    result.appendSpacesUntilColumn (columnMarker) ;
    result << "NULL) ;\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "const C_galgas_type_descriptor * GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << "::typeDescriptor (void) const {\n"
      "  return & kTypeDescriptor_GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " ;\n"
      "}\n"
      "\n" ;
  }
  return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'unifiedTypeHeader' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_unifiedTypeHeader (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_bool& var_cas_IS_CONCRETE,
                                const GGS_unifiedTypeMapProxy & var_cas_SUPER_TYPE_INDEX,
                                const GGS_typeKindEnum& var_cas_TYPE_KIND,
                                const GGS_typedAttributeList & var_cas_CURRENT_TYPE_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_INHERITED_ATTRIBUTE_LIST,
                                const GGS_constructorMap & var_cas_CONSTRUCTOR_MAP,
                                const GGS_readerMap & var_cas_READER_MAP,
                                const GGS_modifierMap & var_cas_MODIFIER_MAP,
                                const GGS_instanceMethodMap & var_cas_INSTANCE_METHOD_MAP,
                                const GGS_classMethodMap & var_cas_CLASS_METHOD_MAP,
                                const GGS_enumerationDescriptorList & var_cas_ENUMERATION_DESCRIPTOR_LIST,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_unifiedTypeMapProxyList & var_cas_ADD_ASSIGN_ARGUMENT_LIST,
                                const GGS_nativeAttributeList & var_cas_NATIVE_ATTRIBUTE_LIST,
                                const GGS_lstringlist & var_cas_ENUM_CONSTANT_LIST,
                                const GGS_typedAttributeList & var_cas_PRIVATE_DATA_NUMBER_TYPED_LIST,
                                const GGS_withAccessorMap & var_cas_WITH_ACCESSOR_MAP) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_IS_CONCRETE.isBuilt ()
    && var_cas_SUPER_TYPE_INDEX.isBuilt ()
    && var_cas_TYPE_KIND.isBuilt ()
    && var_cas_CURRENT_TYPE_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_INHERITED_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_CONSTRUCTOR_MAP.isBuilt ()
    && var_cas_READER_MAP.isBuilt ()
    && var_cas_MODIFIER_MAP.isBuilt ()
    && var_cas_INSTANCE_METHOD_MAP.isBuilt ()
    && var_cas_CLASS_METHOD_MAP.isBuilt ()
    && var_cas_ENUMERATION_DESCRIPTOR_LIST.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_ADD_ASSIGN_ARGUMENT_LIST.isBuilt ()
    && var_cas_NATIVE_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_ENUM_CONSTANT_LIST.isBuilt ()
    && var_cas_PRIVATE_DATA_NUMBER_TYPED_LIST.isBuilt ()
    && var_cas_WITH_ACCESSOR_MAP.isBuilt () ;
  if (isBuilt) {
    result << "//---------------------------------------------------------------------------*\n"
      "//                                                                           *\n"
      "//" ;
    result << ((((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_TYPE_KIND.reader_kind (inLexique COMMA_SOURCE_FILE_AT_LINE (3)))).operator_concat (GGS_string (" type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
    result << "*\n"
      "//                                                                           *\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " ;\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "class GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " : public GALGAS_" ;
    result << var_cas_SUPER_TYPE_INDEX.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
    result << " {\n" ;
    if ((var_cas_ENUM_CONSTANT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- Enumeration type declaration\n"
        "  private : typedef enum {" ;
      GGS_lstringlist::cEnumerator enumerator_843 (var_cas_ENUM_CONSTANT_LIST, true) ;
      const GGS_lstringlist::cElement * operand_843 = NULL ;
      while (((operand_843 = enumerator_843.nextObject ()))) {
        macroValidPointer (operand_843) ;
        result << "kEnum_" ;
        result << operand_843->mValue.ggs_string ().reader_identifierRepresentation () ;
        if (enumerator_843.hasNextObject ()) {
          result << ", " ;
        }
      }
      result << "} enumeration ;\n"
        "\n"
        "//--------------------------------- Private attribute\n"
        "  private : enumeration mEnumValue ;\n"
        "\n"
        "//--------------------------------- C++ constructor (for enumeration type)\n"
        "  public : GALGAS_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " (const enumeration inValue COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateConstructorWithSelfObject (inLexique COMMA_SOURCE_FILE_AT_LINE (31)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "\n"
        "//--------------------------------- C++ constructor (for inheritance for predefined type)\n"
        "  protected : GALGAS_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " (GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " & inObject COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateCppConstructorWithNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (38)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "\n"
        "//--------------------------------- C++ constructor (with native attributes)\n"
        "  protected : GALGAS_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " (" ;
      columnMarker = result.currentColumn () ;
      GGS_nativeAttributeList::cEnumerator enumerator_1735 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
      const GGS_nativeAttributeList::cElement * operand_1735 = NULL ;
      while (((operand_1735 = enumerator_1735.nextObject ()))) {
        macroValidPointer (operand_1735) ;
        result << "const " ;
        result << operand_1735->mCppClassName ;
        if (operand_1735->mIsPointer.boolValue ()) {
          result << " *" ;
        }else {
        }
        if (operand_1735->mUseReferenceForConstructor.boolValue ()) {
          result << " &" ;
        }else {
        }
        result << " inOperand_" ;
        result << operand_1735->mAttributeName ;
        if (enumerator_1735.hasNextObject ()) {
          result << ",\n" ;
          result.appendSpacesUntilColumn (columnMarker) ;
        }
      }
      if ((var_cas_NATIVE_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
        result << "LOCATION_ARGS) ;\n"
          "\n" ;
      }else {
        result << "\n" ;
        result.appendSpacesUntilColumn (columnMarker) ;
        result << "COMMA_LOCATION_ARGS) ;\n"
          "\n" ;
      }
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateCppConstructorWithCurrentAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (53)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "\n"
        "//--------------------------------- C++ constructor (with current attributes)\n"
        "  protected : GALGAS_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " (" ;
      columnMarker = result.currentColumn () ;
      GGS_typedAttributeList::cEnumerator enumerator_2300 (var_cas_CURRENT_TYPE_ATTRIBUTE_LIST, true) ;
      const GGS_typedAttributeList::cElement * operand_2300 = NULL ;
      { GGS_uint var_cas_IDX (true, 0) ;
    while (((operand_2300 = enumerator_2300.nextObject ()))) {
      macroValidPointer (operand_2300) ;
      result << "GALGASap_" ;
      result << operand_2300->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (57)) ;
      result << " & inAttribute_" ;
      result << operand_2300->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
      if (enumerator_2300.hasNextObject ()) {
        result << ",\n" ;
        result.appendSpacesUntilColumn (columnMarker) ;
      }
      var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
    }
  }
  if ((var_cas_CURRENT_TYPE_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
    result << "LOCATION_ARGS) ;\n"
      "\n" ;
  }else {
    result << "\n" ;
    result.appendSpacesUntilColumn (columnMarker) ;
    result << "COMMA_LOCATION_ARGS) ;\n"
      "\n" ;
  }
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateCppConstructorWithAllAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (67)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "\n"
    "//--------------------------------- C++ constructor\n"
    "  protected : GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " (" ;
  columnMarker = result.currentColumn () ;
  GGS_typedAttributeList::cEnumerator enumerator_2835 (var_cas_INHERITED_ATTRIBUTE_LIST, true) ;
  const GGS_typedAttributeList::cElement * operand_2835 = NULL ;
  { GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2835 = enumerator_2835.nextObject ()))) {
  macroValidPointer (operand_2835) ;
  result << "GALGASap_" ;
  result << operand_2835->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (71)) ;
  result << " & inAttribute_" ;
  result << operand_2835->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
  if (enumerator_2835.hasNextObject ()) {
    result << ",\n" ;
    result.appendSpacesUntilColumn (columnMarker) ;
  }
  var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((var_cas_INHERITED_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "LOCATION_ARGS) ;\n"
  "\n" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (81)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Native constructor\n"
  "  public : static GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_nativeAttributeList::cEnumerator enumerator_3377 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_3377 = NULL ;
while (((operand_3377 = enumerator_3377.nextObject ()))) {
macroValidPointer (operand_3377) ;
result << "const " ;
result << operand_3377->mCppClassName ;
if (operand_3377->mIsPointer.boolValue ()) {
  result << " *" ;
}else {
}
if (operand_3377->mUseReferenceForConstructor.boolValue ()) {
  result << " &" ;
}else {
}
result << " inOperand_" ;
result << operand_3377->mAttributeName ;
if (enumerator_3377.hasNextObject ()) {
  result << ",\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateVirtualDestructor (inLexique COMMA_SOURCE_FILE_AT_LINE (91)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Virtual destructor\n"
  "  protected : virtual ~ GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n" ;
}else {
}
if ((var_cas_CONSTRUCTOR_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- GALGAS constructors\n" ;
GGS_constructorMap::cEnumerator enumerator_3910 (var_cas_CONSTRUCTOR_MAP, true) ;
const GGS_constructorMap::cElement * operand_3910 = NULL ;
while (((operand_3910 = enumerator_3910.nextObject ()))) {
macroValidPointer (operand_3910) ;
result << "  public : static GALGASap_" ;
result << operand_3910->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (99)) ;
result << " constructor_" ;
result << operand_3910->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_4077 (operand_3910->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_4077 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4077 = enumerator_4077.nextObject ()))) {
macroValidPointer (operand_4077) ;
result << "GALGASap_" ;
result << operand_4077->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (101)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (101)) ;
if (enumerator_4077.hasNextObject ()) {
  result << ",\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_3910->mInfo.mHasCompilerArgument).operator_and ((operand_3910->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else if (operand_3910->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else if ((operand_3910->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
result << "LOCATION_ARGS) ;\n"
  "\n" ;
}
}
}else {
}
result << "//--------------------------------- No copy\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " &) ;\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & operator = (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " &) ;\n"
  "\n" ;
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (122)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Implementation of reader 'description'\n"
  "  public : virtual void description (C_String & ioString,\n"
  "                                     const PMSInt32 inIndentation) ;\n" ;
}else {
}
result << "//--------------------------------- Modifier invocation\n" ;
GGS_modifierMap::cEnumerator enumerator_5221 (var_cas_MODIFIER_MAP, true) ;
const GGS_modifierMap::cElement * operand_5221 = NULL ;
while (((operand_5221 = enumerator_5221.nextObject ()))) {
macroValidPointer (operand_5221) ;
if ((operand_5221->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (130))).boolValue ()) {
result << "  friend void modifierCall_" ;
result << operand_5221->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & ioResult" ;
GGS_formalParameterSignature::cEnumerator enumerator_5414 (operand_5221->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_5414 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5414 = enumerator_5414.nextObject ()))) {
macroValidPointer (operand_5414) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_5414->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (134))).boolValue ()) {
result << "GALGASap_" ;
result << operand_5414->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (135)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (135)) ;
}else if ((operand_5414->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (136))).boolValue ()) {
result << "GALGASap_" ;
result << operand_5414->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (137)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (137)) ;
}else if ((operand_5414->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (138))).boolValue ()) {
result << "GALGASap_" ;
result << operand_5414->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (139)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (139)) ;
}else {
result << "GALGASap_" ;
result << operand_5414->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (141)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (141)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_5221->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Modifiers\n" ;
GGS_modifierMap::cEnumerator enumerator_6429 (var_cas_MODIFIER_MAP, true) ;
const GGS_modifierMap::cElement * operand_6429 = NULL ;
while (((operand_6429 = enumerator_6429.nextObject ()))) {
macroValidPointer (operand_6429) ;
if ((operand_6429->mInfo.mQualifier).operator_isNotEqual (GGS_readerQualifier::constructor_isInherited (inLexique COMMA_SOURCE_FILE_AT_LINE (158))).boolValue ()) {
result << "  protected : void modifier_" ;
result << operand_6429->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_6587 (operand_6429->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_6587 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6587 = enumerator_6587.nextObject ()))) {
macroValidPointer (operand_6587) ;
if ((operand_6587->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (161))).boolValue ()) {
result << "GALGASap_" ;
result << operand_6587->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (162)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (162)) ;
}else if ((operand_6587->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (163))).boolValue ()) {
result << "GALGASap_" ;
result << operand_6587->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (164)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (164)) ;
}else if ((operand_6587->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (165))).boolValue ()) {
result << "GALGASap_" ;
result << operand_6587->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
}else {
result << "GALGASap_" ;
result << operand_6587->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (168)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (168)) ;
}
if (enumerator_6587.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_6429->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_6429->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_6429->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") ;\n"
  "\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Instance Methods\n" ;
GGS_instanceMethodMap::cEnumerator enumerator_7854 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_7854 = NULL ;
while (((operand_7854 = enumerator_7854.nextObject ()))) {
macroValidPointer (operand_7854) ;
if ((operand_7854->mInfo.mQualifier).operator_isNotEqual (GGS_readerQualifier::constructor_isInherited (inLexique COMMA_SOURCE_FILE_AT_LINE (194))).boolValue ()) {
result << "  protected : virtual void method_" ;
result << operand_7854->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_8018 (operand_7854->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_8018 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8018 = enumerator_8018.nextObject ()))) {
macroValidPointer (operand_8018) ;
if ((operand_8018->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (197))).boolValue ()) {
result << "GALGASap_" ;
result << operand_8018->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (198)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (198)) ;
}else if ((operand_8018->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (199))).boolValue ()) {
result << "GALGASap_" ;
result << operand_8018->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
}else if ((operand_8018->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (201))).boolValue ()) {
result << "GALGASap_" ;
result << operand_8018->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (202)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (202)) ;
}else {
result << "GALGASap_" ;
result << operand_8018->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (204)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (204)) ;
}
if (enumerator_8018.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_7854->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_7854->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_7854->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") " ;
if (((operand_7854->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (224)))).operator_or ((operand_7854->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isOverridingAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (224)))).boolValue ()) {
result << "= 0 " ;
}else {
}
result << ";\n"
  "\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Instance Method Invocation\n" ;
GGS_instanceMethodMap::cEnumerator enumerator_9443 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_9443 = NULL ;
while (((operand_9443 = enumerator_9443.nextObject ()))) {
macroValidPointer (operand_9443) ;
if (((operand_9443->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (233)))).operator_or ((operand_9443->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (233)))).boolValue ()) {
result << "  friend void instanceMethodCall_" ;
result << operand_9443->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " inObject" ;
GGS_formalParameterSignature::cEnumerator enumerator_9690 (operand_9443->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_9690 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9690 = enumerator_9690.nextObject ()))) {
macroValidPointer (operand_9690) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_9690->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (237))).boolValue ()) {
result << "GALGASap_" ;
result << operand_9690->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (238)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (238)) ;
}else if ((operand_9690->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (239))).boolValue ()) {
result << "GALGASap_" ;
result << operand_9690->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (240)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (240)) ;
}else if ((operand_9690->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (241))).boolValue ()) {
result << "GALGASap_" ;
result << operand_9690->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (242)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (242)) ;
}else {
result << "GALGASap_" ;
result << operand_9690->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (244)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (244)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_9443->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Class Methods\n" ;
GGS_classMethodMap::cEnumerator enumerator_10718 (var_cas_CLASS_METHOD_MAP, true) ;
const GGS_classMethodMap::cElement * operand_10718 = NULL ;
while (((operand_10718 = enumerator_10718.nextObject ()))) {
macroValidPointer (operand_10718) ;
result << "  public : static void class_method_" ;
result << operand_10718->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_10825 (operand_10718->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_10825 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10825 = enumerator_10825.nextObject ()))) {
macroValidPointer (operand_10825) ;
if ((operand_10825->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (263))).boolValue ()) {
result << "GALGASap_" ;
result << operand_10825->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (264)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (264)) ;
}else if ((operand_10825->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (265))).boolValue ()) {
result << "GALGASap_" ;
result << operand_10825->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (266)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (266)) ;
}else if ((operand_10825->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (267))).boolValue ()) {
result << "GALGASap_" ;
result << operand_10825->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (268)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (268)) ;
}else {
result << "GALGASap_" ;
result << operand_10825->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (270)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (270)) ;
}
if (enumerator_10825.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_10718->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_10718->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_10718->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") ;\n"
  "\n" ;
}
result << "\n"
  "//--------------------------------- Readers\n" ;
GGS_readerMap::cEnumerator enumerator_12011 (var_cas_READER_MAP, true) ;
const GGS_readerMap::cElement * operand_12011 = NULL ;
while (((operand_12011 = enumerator_12011.nextObject ()))) {
macroValidPointer (operand_12011) ;
if ((operand_12011->mInfo.mQualifier).operator_isNotEqual (GGS_readerQualifier::constructor_isInherited (inLexique COMMA_SOURCE_FILE_AT_LINE (295))).boolValue ()) {
result << "  protected : virtual GALGASap_" ;
result << operand_12011->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (296)) ;
result << " reader_" ;
result << operand_12011->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_12236 (operand_12011->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_12236 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_12236 = enumerator_12236.nextObject ()))) {
macroValidPointer (operand_12236) ;
result << "GALGASap_" ;
result << operand_12236->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (298)) ;
result << " & constinOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (298)) ;
if (enumerator_12236.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_12011->mInfo.mArgumentTypeList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_12011->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
}else {
if (operand_12011->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") " ;
if ((operand_12011->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (315))).boolValue ()) {
result << " = 0" ;
}else {
}
result << " ;\n"
  "\n" ;
}else {
}
}
result << "//--------------------------------- Reader invocation declaration\n" ;
GGS_readerMap::cEnumerator enumerator_12954 (var_cas_READER_MAP, true) ;
const GGS_readerMap::cElement * operand_12954 = NULL ;
while (((operand_12954 = enumerator_12954.nextObject ()))) {
macroValidPointer (operand_12954) ;
if ((operand_12954->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (324))).boolValue ()) {
result << "  friend GALGASap_" ;
result << operand_12954->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (325)) ;
result << " readerCall_" ;
result << operand_12954->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inObject" ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_13211 (operand_12954->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_13211 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_13211 = enumerator_13211.nextObject ()))) {
macroValidPointer (operand_13211) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << operand_13211->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (328)) ;
result << " & constinOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (328)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_12954->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}else {
}
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryAndOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (339)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- & operator\n"
  "  public : static GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_and (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand2\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryOrOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (346)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- | operator\n"
  "  public : static GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_or (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand2\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryXorOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (353)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- ^ operator\n"
  "  public : static GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_xor (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand2\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryNotOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (360)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- & operator\n"
  "  public : static GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_not (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryTildeOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (366)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- ~ operator\n"
  "  public : static GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_tilde (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryConcatOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (372)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- . (concat) operator\n"
  "  public : static GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_concat (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand2\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryAddOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (379)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- + operator\n"
  "  public : static GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " add_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand2,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binarySubOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (387)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- - operator\n"
  "  public : static GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " substract_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand2,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryMulOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (395)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- * operator\n"
  "  public : static GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " multiply_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand2,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryDivOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (403)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- / operator\n"
  "  public : static GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " divide_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand2,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryModOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (411)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- mod operator\n"
  "  public : static GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " modulo_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand2,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryMinusOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (419)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- unary - operator\n"
  "  public : static GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_unary_minus (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (426)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- ++, -- operators\n"
  "  public : static void increment_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & ioOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static void decrement_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & ioOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryShiftOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (436)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- << and >> shift operators\n"
  "  public : static GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " left_shift_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_uint & inShiftOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " right_shift_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_uint & inShiftOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_dotAssignOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (447)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- .= operator\n"
  "  public : static void dotAssign_operation (GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & ioResult,\n"
  "                                            GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " inOperand\n"
  "                                            COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((var_cas_ADD_ASSIGN_ARGUMENT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- += operator\n"
  "    public : static void addAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & ioResult" ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_18972 (var_cas_ADD_ASSIGN_ARGUMENT_LIST, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_18972 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_18972 = enumerator_18972.nextObject ()))) {
macroValidPointer (operand_18972) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << operand_18972->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (458)) ;
result << " inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (458)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n" ;
}else {
}
if (((((var_cas_SUPPORTED_OPERATORS).operator_and ((function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (464))).operator_or (function_dotAssignOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (464))))).operator_isNotEqual (GGS_uint (0U))).operator_or ((var_cas_MODIFIER_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)))).operator_or ((var_cas_ADD_ASSIGN_ARGUMENT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << "//--------------------------------- Modifier utility method\n"
  "  public : static void insulate (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & ioOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_doNotGenererateObjectCompare (inLexique COMMA_SOURCE_FILE_AT_LINE (472)))).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Comparison\n"
  "  public : static PMSInt32 objectCompare (GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand1,\n"
  "                                          GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand2) ;\n" ;
}else {
}
result << "\n"
  "//--------------------------------- Introspection\n"
  "  public : virtual const C_galgas_type_descriptor * typeDescriptor (void) const ;\n"
  "\n"
  "//--------------------------------- Private data member(s)\n" ;
GGS_nativeAttributeList::cEnumerator enumerator_19996 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_19996 = NULL ;
while (((operand_19996 = enumerator_19996.nextObject ()))) {
macroValidPointer (operand_19996) ;
result << "  private : " ;
if (operand_19996->mIsConst.boolValue ()) {
result << "const " ;
}else {
}
result << operand_19996->mCppClassName ;
result << " " ;
if (operand_19996->mIsPointer.boolValue ()) {
result << "* " ;
}else {
}
result << operand_19996->mAttributeName ;
result << " ;\n" ;
if ((operand_19996->mGetterName.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "  public : inline " ;
if (operand_19996->mIsConst.boolValue ()) {
result << "const " ;
}else {
}
result << operand_19996->mCppClassName ;
result << " " ;
if (operand_19996->mIsPointer.boolValue ()) {
result << " * " ;
}else {
}
result << operand_19996->mGetterName ;
result << " (void) const { return " ;
result << operand_19996->mAttributeName ;
result << " ; }\n" ;
}else {
}
}
GGS_typedAttributeList::cEnumerator enumerator_20383 (var_cas_PRIVATE_DATA_NUMBER_TYPED_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_20383 = NULL ;
while (((operand_20383 = enumerator_20383.nextObject ()))) {
macroValidPointer (operand_20383) ;
result << "  public : GALGASap_" ;
result << operand_20383->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (488)) ;
result << " mAttribute_" ;
result << operand_20383->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateEnumerationHelperMethods (inLexique COMMA_SOURCE_FILE_AT_LINE (491)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Enumeration helper methods\n"
  "  protected : virtual void populateEnumerationArray (cRootObjectArray & ioEnumerationArray,\n"
  "                                                     const bool inAscending) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateSortedListComparisonMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (498)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Abstract method for comparing two sorted list elements\n"
  "  protected : virtual PMSInt32 compareSortedListElements (GALGASap_root & inLeftAttributeList [],\n"
  "                                                          GALGASap_root & inRightAttributeList []) const ;\n"
  "\n" ;
}else {
}
if ((var_cas_WITH_ACCESSOR_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- 'with' accessors\n" ;
GGS_withAccessorMap::cEnumerator enumerator_21362 (var_cas_WITH_ACCESSOR_MAP, true) ;
const GGS_withAccessorMap::cElement * operand_21362 = NULL ;
while (((operand_21362 = enumerator_21362.nextObject ()))) {
macroValidPointer (operand_21362) ;
result << "  friend cRootObjectArray * readWriteAccessForWithInstruction_" ;
result << operand_21362->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & ioMap,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << operand_21362->mInfo.mArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (510)) ;
result << " & inKey\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
}else {
}
if ((var_cas_ENUMERATION_DESCRIPTOR_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Enumerator declaration\n"
  "  public : class cEnumerator : public AC_GALGAS_Enumerator {\n"
  "    public : cEnumerator (GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inEnumeratedObject,\n"
  "                          const bool inAscending) ;\n"
  "\n"
  "  //--- Update attribute proxies\n"
  "    public : void updateAttributeProxies (void) ;\n"
  "  \n"
  "  //--- Current attribute proxies\n" ;
GGS_enumerationDescriptorList::cEnumerator enumerator_22137 (var_cas_ENUMERATION_DESCRIPTOR_LIST, true) ;
const GGS_enumerationDescriptorList::cElement * operand_22137 = NULL ;
while (((operand_22137 = enumerator_22137.nextObject ()))) {
macroValidPointer (operand_22137) ;
result << "    public : GALGASap_" ;
result << operand_22137->mEnumeratedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (526)) ;
result << " attribute_" ;
result << operand_22137->mEnumerationName.reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "  } ;\n" ;
}else {
}
result << "} ;\n"
  "\n"
  "//--------------------------------- Reader invocation declaration\n" ;
GGS_readerMap::cEnumerator enumerator_22439 (var_cas_READER_MAP, true) ;
const GGS_readerMap::cElement * operand_22439 = NULL ;
while (((operand_22439 = enumerator_22439.nextObject ()))) {
macroValidPointer (operand_22439) ;
if ((operand_22439->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (537))).boolValue ()) {
result << "GALGASap_" ;
result << operand_22439->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (538)) ;
result << " readerCall_" ;
result << operand_22439->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inObject" ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_22687 (operand_22439->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_22687 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_22687 = enumerator_22687.nextObject ()))) {
macroValidPointer (operand_22687) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << operand_22687->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (541)) ;
result << " & constinOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (541)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_22439->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}else {
}
}
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'unifiedTypeImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_unifiedTypeImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_bool& var_cas_IS_CONCRETE,
                                const GGS_unifiedTypeMapProxy & var_cas_SUPER_TYPE_INDEX,
                                const GGS_typeKindEnum& var_cas_TYPE_KIND,
                                const GGS_typedAttributeList & var_cas_CURRENT_TYPE_ATTRIBUTE_LIST,
                                const GGS_constructorMap & var_cas_CONSTRUCTOR_MAP,
                                const GGS_readerMap & var_cas_READER_MAP,
                                const GGS_modifierMap & var_cas_MODIFIER_MAP,
                                const GGS_instanceMethodMap & var_cas_INSTANCE_METHOD_MAP,
                                const GGS_classMethodMap & var_cas_CLASS_METHOD_MAP,
                                const GGS_enumerationDescriptorList & var_cas_ENUMERATION_DESCRIPTOR_LIST,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_unifiedTypeMapProxyList & var_cas_ADD_ASSIGN_ARGUMENT_LIST,
                                const GGS_nativeAttributeList & var_cas_NATIVE_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_IS_CONCRETE.isBuilt ()
    && var_cas_SUPER_TYPE_INDEX.isBuilt ()
    && var_cas_TYPE_KIND.isBuilt ()
    && var_cas_CURRENT_TYPE_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_CONSTRUCTOR_MAP.isBuilt ()
    && var_cas_READER_MAP.isBuilt ()
    && var_cas_MODIFIER_MAP.isBuilt ()
    && var_cas_INSTANCE_METHOD_MAP.isBuilt ()
    && var_cas_CLASS_METHOD_MAP.isBuilt ()
    && var_cas_ENUMERATION_DESCRIPTOR_LIST.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_ADD_ASSIGN_ARGUMENT_LIST.isBuilt ()
    && var_cas_NATIVE_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_TYPE_KIND.reader_kind (inLexique COMMA_SOURCE_FILE_AT_LINE (3)))).operator_concat (GGS_string (" type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor\n"
  "kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "\"" ;
result << var_cas_TYPE_NAME ;
result << "\",\n"
  "                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "& kTypeDescriptor_GALGAS_" ;
result << var_cas_SUPER_TYPE_INDEX.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
result << ",\n"
  "                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "(genericObjectCompareFunctionType) GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare) ;\n"
  "\n" ;
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateConstructorWithSelfObject (inLexique COMMA_SOURCE_FILE_AT_LINE (12)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inObject COMMA_LOCATION_ARGS) :\n"
  "GALGAS_" ;
result << var_cas_SUPER_TYPE_INDEX.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
result << " (THERE)" ;
GGS_nativeAttributeList::cEnumerator enumerator_1086 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_1086 = NULL ;
while (((operand_1086 = enumerator_1086.nextObject ()))) {
macroValidPointer (operand_1086) ;
result << ",\n" ;
result << operand_1086->mAttributeName ;
result << " (" ;
result << operand_1086->mDefaultValue ;
result << ")" ;
}
result << " {\n"
  "  if (inObject.isValid ()) {\n" ;
GGS_nativeAttributeList::cEnumerator enumerator_1216 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_1216 = NULL ;
while (((operand_1216 = enumerator_1216.nextObject ()))) {
macroValidPointer (operand_1216) ;
result << "    " ;
result << operand_1216->mAttributeName ;
result << " = inObject.ptr (HERE)->" ;
result << operand_1216->mGetterName ;
result << " () ;\n" ;
}
result << "  }\n"
  "}\n"
  "\n" ;
}else {
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::typeDescriptor (void) const {\n"
  "  return & kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "}\n" ;
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (36)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_nativeAttributeList::cEnumerator enumerator_1810 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_1810 = NULL ;
while (((operand_1810 = enumerator_1810.nextObject ()))) {
macroValidPointer (operand_1810) ;
result << "const " ;
result << operand_1810->mCppClassName ;
if (operand_1810->mIsPointer.boolValue ()) {
result << " *" ;
}else {
}
if (operand_1810->mUseReferenceForConstructor.boolValue ()) {
result << " &" ;
}else {
}
result << " inOperand_" ;
result << operand_1810->mAttributeName ;
if (enumerator_1810.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_nativeAttributeList::cEnumerator enumerator_2147 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_2147 = NULL ;
while (((operand_2147 = enumerator_2147.nextObject ()))) {
macroValidPointer (operand_2147) ;
result << "inOperand_" ;
result << operand_2147->mAttributeName ;
if (enumerator_2147.hasNextObject ()) {
result << ", " ;
}
}
if ((var_cas_NATIVE_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "THERE" ;
}else {
result << " COMMA_THERE" ;
}
result << ")) ;\n"
  "  return GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (result) ;\n"
  "}\n"
  "\n" ;
}else {
}
GGS_modifierMap::cEnumerator enumerator_2392 (var_cas_MODIFIER_MAP, true) ;
const GGS_modifierMap::cElement * operand_2392 = NULL ;
while (((operand_2392 = enumerator_2392.nextObject ()))) {
macroValidPointer (operand_2392) ;
if ((operand_2392->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (64))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void modifierCall_" ;
result << operand_2392->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & ioResult" ;
GGS_formalParameterSignature::cEnumerator enumerator_2665 (operand_2392->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_2665 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2665 = enumerator_2665.nextObject ()))) {
macroValidPointer (operand_2665) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_2665->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (69))).boolValue ()) {
result << "GALGASap_" ;
result << operand_2665->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (70)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (70)) ;
}else if ((operand_2665->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (71))).boolValue ()) {
result << "GALGASap_" ;
result << operand_2665->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (72)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (72)) ;
}else if ((operand_2665->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (73))).boolValue ()) {
result << "GALGASap_" ;
result << operand_2665->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (74)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (74)) ;
}else {
result << "GALGASap_" ;
result << operand_2665->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (76)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (76)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_2392->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "//--- Release 'output' arguments\n" ;
GGS_formalParameterSignature::cEnumerator enumerator_3658 (operand_2392->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_3658 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3658 = enumerator_3658.nextObject ()))) {
macroValidPointer (operand_3658) ;
if ((operand_3658->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (88))).boolValue ()) {
result << "  outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (89)) ;
result << ".drop () ;\n" ;
}else {
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "//---\n"
  "  if (ioResult.isValid ()) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioResult COMMA_THERE) ;\n"
  "    ioResult.ptr (HERE)->modifier_" ;
result << operand_2392->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_formalParameterSignature::cEnumerator enumerator_4067 (operand_2392->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_4067 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4067 = enumerator_4067.nextObject ()))) {
macroValidPointer (operand_4067) ;
if ((operand_4067->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (97))).boolValue ()) {
result << "constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (98)) ;
}else if ((operand_4067->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (99))).boolValue ()) {
result << "ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (100)) ;
}else if ((operand_4067->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (101))).boolValue ()) {
result << "outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (102)) ;
}else {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (104)) ;
}
if (enumerator_4067.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_2392->mInfo.mParameterList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_2392->mInfo.mHasCompilerArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_2392->mInfo.mHasCompilerArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
result << ") ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}else {
}
}
GGS_instanceMethodMap::cEnumerator enumerator_4949 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_4949 = NULL ;
while (((operand_4949 = enumerator_4949.nextObject ()))) {
macroValidPointer (operand_4949) ;
if (((operand_4949->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (128)))).operator_or ((operand_4949->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (128)))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void instanceMethodCall_" ;
result << operand_4949->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " inObject" ;
GGS_formalParameterSignature::cEnumerator enumerator_5276 (operand_4949->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_5276 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5276 = enumerator_5276.nextObject ()))) {
macroValidPointer (operand_5276) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_5276->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (133))).boolValue ()) {
result << "GALGASap_" ;
result << operand_5276->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (134)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (134)) ;
}else if ((operand_5276->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (135))).boolValue ()) {
result << "GALGASap_" ;
result << operand_5276->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (136)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (136)) ;
}else if ((operand_5276->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (137))).boolValue ()) {
result << "GALGASap_" ;
result << operand_5276->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) ;
}else {
result << "GALGASap_" ;
result << operand_5276->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (140)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (140)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_4949->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "//--- Release 'output' arguments\n" ;
GGS_formalParameterSignature::cEnumerator enumerator_6269 (operand_4949->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_6269 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6269 = enumerator_6269.nextObject ()))) {
macroValidPointer (operand_6269) ;
if ((operand_6269->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (152))).boolValue ()) {
result << "  outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (153)) ;
result << ".drop () ;\n" ;
}else {
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "//---\n"
  "  if (inObject.isValid ()) {\n"
  "    inObject.ptr (HERE)->method_" ;
result << operand_4949->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_formalParameterSignature::cEnumerator enumerator_6603 (operand_4949->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_6603 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6603 = enumerator_6603.nextObject ()))) {
macroValidPointer (operand_6603) ;
if ((operand_6603->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (160))).boolValue ()) {
result << "constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (161)) ;
}else if ((operand_6603->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (162))).boolValue ()) {
result << "ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (163)) ;
}else if ((operand_6603->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (164))).boolValue ()) {
result << "outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (165)) ;
}else {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (167)) ;
}
if (enumerator_6603.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_4949->mInfo.mParameterList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_4949->mInfo.mHasCompilerArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_4949->mInfo.mHasCompilerArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
result << ") ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}else {
}
}
GGS_readerMap::cEnumerator enumerator_7476 (var_cas_READER_MAP, true) ;
const GGS_readerMap::cElement * operand_7476 = NULL ;
while (((operand_7476 = enumerator_7476.nextObject ()))) {
macroValidPointer (operand_7476) ;
if ((operand_7476->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (191))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << operand_7476->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (193)) ;
result << " readerCall_" ;
result << operand_7476->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inObject" ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_7815 (operand_7476->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_7815 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7815 = enumerator_7815.nextObject ()))) {
macroValidPointer (operand_7815) ;
result << ",\n" ;
result << var_cas_COL ;
result << "GALGASap_" ;
result << operand_7815->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (196)) ;
result << " & inOperand_" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (196)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_7476->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "  GALGASap_" ;
result << operand_7476->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (204)) ;
result << " result ;\n"
  "  if (inObject.isValid ()) {\n"
  "    result = inObject.ptr (HERE)->reader_" ;
result << operand_7476->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_8333 (operand_7476->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_8333 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8333 = enumerator_8333.nextObject ()))) {
macroValidPointer (operand_8333) ;
result << "inOperand_" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (208)) ;
if (enumerator_8333.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_7476->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_7476->mInfo.mHasCompilerArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_7476->mInfo.mHasCompilerArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
result << ") ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}else {
}
}
if ((var_cas_ENUMERATION_DESCRIPTOR_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "//" ;
result << ((((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_TYPE_KIND.reader_kind (inLexique COMMA_SOURCE_FILE_AT_LINE (233)))).operator_concat (GGS_string (" enumeration")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator::cEnumerator (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inEnumeratedObject,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const bool inAscending) :\n"
  "AC_GALGAS_Enumerator (inEnumeratedObject.ptrNoVerif (), inAscending)" ;
GGS_enumerationDescriptorList::cEnumerator enumerator_9412 (var_cas_ENUMERATION_DESCRIPTOR_LIST, true) ;
const GGS_enumerationDescriptorList::cElement * operand_9412 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9412 = enumerator_9412.nextObject ()))) {
macroValidPointer (operand_9412) ;
result << ",\n"
  "attribute_" ;
result << operand_9412->mEnumerationName.reader_identifierRepresentation () ;
result << " ()" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator::updateAttributeProxies (void) {\n" ;
GGS_enumerationDescriptorList::cEnumerator enumerator_9762 (var_cas_ENUMERATION_DESCRIPTOR_LIST, true) ;
const GGS_enumerationDescriptorList::cElement * operand_9762 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9762 = enumerator_9762.nextObject ()))) {
macroValidPointer (operand_9762) ;
result << "  attribute_" ;
result << operand_9762->mEnumerationName.reader_identifierRepresentation () ;
result << " = directAccess (" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (247)) ;
result << " COMMA_HERE) ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n" ;
}else {
}
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'predefinedTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_predefinedTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_modifierMap & var_cas_MODIFIER_MAP,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_unifiedTypeMapProxyList & var_cas_ADD_ASSIGN_ARGUMENT_LIST,
                                const GGS_nativeAttributeList & var_cas_NATIVE_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_MODIFIER_MAP.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_ADD_ASSIGN_ARGUMENT_LIST.isBuilt ()
    && var_cas_NATIVE_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
if (((((var_cas_SUPPORTED_OPERATORS).operator_and ((function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (1))).operator_or (function_dotAssignOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (1))))).operator_isNotEqual (GGS_uint (0U))).operator_or ((var_cas_MODIFIER_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)))).operator_or ((var_cas_ADD_ASSIGN_ARGUMENT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & ioOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioOperand.ptr (HERE)->retainCount () > 1) {\n"
  "    ioOperand = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new(" ;
GGS_nativeAttributeList::cEnumerator enumerator_537 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_537 = NULL ;
while (((operand_537 = enumerator_537.nextObject ()))) {
macroValidPointer (operand_537) ;
result << "ioOperand.ptr (HERE)->" ;
result << operand_537->mAttributeName ;
if (enumerator_537.hasNextObject ()) {
result << ", " ;
}
}
if ((var_cas_NATIVE_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "THERE" ;
}else {
result << " COMMA_THERE" ;
}
result << ") ;\n"
  "  }\n"
  "}\n" ;
}else {
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'enumTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_enumTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_stringlist & var_cas_CONSTANT_LIST,
                                const GGS_enumMessageListForGeneration & var_cas_ENUM_MESSAGE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_CONSTANT_LIST.isBuilt ()
    && var_cas_ENUM_MESSAGE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const enumeration inValue\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n"
  "GALGAS_enum (THERE),\n"
  "mEnumValue (inValue) {\n"
  "}\n"
  "\n" ;
GGS_stringlist::cEnumerator enumerator_304 (var_cas_CONSTANT_LIST, true) ;
const GGS_stringlist::cElement * operand_304 = NULL ;
while (((operand_304 = enumerator_304.nextObject ()))) {
macroValidPointer (operand_304) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_" ;
result << operand_304->mValue.reader_identifierRepresentation () ;
result << " (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (kEnum_" ;
result << operand_304->mValue.reader_identifierRepresentation () ;
result << " COMMA_THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
GGS_enumMessageListForGeneration::cEnumerator enumerator_761 (var_cas_ENUM_MESSAGE_LIST, true) ;
const GGS_enumMessageListForGeneration::cElement * operand_761 = NULL ;
while (((operand_761 = enumerator_761.nextObject ()))) {
macroValidPointer (operand_761) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const char * gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_761->mEnumMessageName.reader_identifierRepresentation () ;
result << " [" ;
result << var_cas_CONSTANT_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (21)) ;
result << "] = {" ;
GGS_enumMessageAssociationSortedListForGeneration::cEnumerator enumerator_1039 (operand_761->mMessageAssociationList, true) ;
const GGS_enumMessageAssociationSortedListForGeneration::cElement * operand_1039 = NULL ;
while (((operand_1039 = enumerator_1039.nextObject ()))) {
macroValidPointer (operand_1039) ;
result << "\n"
  "  " ;
result << operand_1039->mMessage.reader_utf8Representation () ;
if (enumerator_1039.hasNextObject ()) {
result << "," ;
}
}
result << "\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_string GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_761->mEnumMessageName.reader_identifierRepresentation () ;
result << " (LOCATION_ARGS) {\n"
  "  return GALGAS_string::constructor_new (gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_761->mEnumMessageName.reader_identifierRepresentation () ;
result << " [mEnumValue] COMMA_THERE) ;\n"
  "}\n"
  "\n" ;
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const char * gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " [" ;
result << var_cas_CONSTANT_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << "] = {" ;
GGS_stringlist::cEnumerator enumerator_1719 (var_cas_CONSTANT_LIST, true) ;
const GGS_stringlist::cElement * operand_1719 = NULL ;
while (((operand_1719 = enumerator_1719.nextObject ()))) {
macroValidPointer (operand_1719) ;
result << "\n"
  "  " ;
result << operand_1719->mValue.reader_utf8Representation () ;
if (enumerator_1719.hasNextObject ()) {
result << "," ;
}
}
result << "\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 /* inIndentation */) {\n"
  "  ioString << \"<enum @" ;
result << var_cas_TYPE_NAME ;
result << ": \" << gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " [mEnumValue] << \">\" ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "PMSInt32 GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand1,\n"
  "                                      " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand2) {\n"
  "  return ((PMSInt32) inOperand1.ptr (HERE)->mEnumValue) - ((PMSInt32) inOperand2.ptr (HERE)->mEnumValue) ;\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'listTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_listTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_list (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4)) ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_listWithValue (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_713 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_713 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_713 = enumerator_713.nextObject ()))) {
macroValidPointer (operand_713) ;
result << "GALGASap_" ;
result << operand_713->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (19)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (19)) ;
if (enumerator_713.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result (GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (THERE)) ;\n"
  "  cRootObjectArray attributeArray (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (24)) ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1078 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1078 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1078 = enumerator_1078.nextObject ()))) {
macroValidPointer (operand_1078) ;
result << "  attributeArray.addObject (inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (26)) ;
result << " COMMA_HERE) ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  result.ptr (HERE)->addObject (attributeArray) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & ioObject\n"
  "                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioObject.ptr (HERE)->retainCount () > 1) {\n"
  "    GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " newList (constructor_emptyList (THERE)) ;\n"
  "    newList.ptr (HERE)->copyFrom (ioObject.ptr (HERE)) ;\n"
  "    ioObject = newList ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::addAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & ioResult" ;
GGS_typedAttributeList::cEnumerator enumerator_1872 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1872 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1872 = enumerator_1872.nextObject ()))) {
macroValidPointer (operand_1872) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << operand_1872->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (47)) ;
result << " inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (47)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioResult.isValid ()) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioResult COMMA_THERE) ;\n"
  "    cRootObjectArray attributeArray (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (52)) ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2226 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2226 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2226 = enumerator_2226.nextObject ()))) {
macroValidPointer (operand_2226) ;
result << "    attributeArray.addObject (inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (54)) ;
result << " COMMA_HERE) ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "    ioResult.ptr (HERE)->addObject (attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_prependValue (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_2556 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2556 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2556 = enumerator_2556.nextObject ()))) {
macroValidPointer (operand_2556) ;
result << "GALGASap_" ;
result << operand_2556->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (64)) ;
result << " inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (64)) ;
if (enumerator_2556.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  if (" ;
GGS_typedAttributeList::cEnumerator enumerator_2765 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2765 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2765 = enumerator_2765.nextObject ()))) {
macroValidPointer (operand_2765) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (70)) ;
result << ".isValid ()" ;
if (enumerator_2765.hasNextObject ()) {
result << " && " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "    cRootObjectArray attributeArray (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (74)) ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2970 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2970 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2970 = enumerator_2970.nextObject ()))) {
macroValidPointer (operand_2970) ;
result << "    attributeArray.addObject (inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (76)) ;
result << " COMMA_HERE) ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "    prependAttributeArray (attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popFirst (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_3287 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3287 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3287 = enumerator_3287.nextObject ()))) {
macroValidPointer (operand_3287) ;
result << "GALGASap_" ;
result << operand_3287->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (86)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (86)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGASap_root attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (90)) ;
result << "] ;\n"
  "  removeFirstObject (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3624 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3624 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3624 = enumerator_3624.nextObject ()))) {
macroValidPointer (operand_3624) ;
result << "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (93)) ;
result << " = attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (93)) ;
result << "] ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popLast (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_3890 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3890 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3890 = enumerator_3890.nextObject ()))) {
macroValidPointer (operand_3890) ;
result << "GALGASap_" ;
result << operand_3890->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (101)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (101)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGASap_root attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (105)) ;
result << "] ;\n"
  "  removeLastObject (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4226 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4226 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4226 = enumerator_4226.nextObject ()))) {
macroValidPointer (operand_4226) ;
result << "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (108)) ;
result << " = attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (108)) ;
result << "] ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_first (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_4488 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4488 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4488 = enumerator_4488.nextObject ()))) {
macroValidPointer (operand_4488) ;
result << "GALGASap_" ;
result << operand_4488->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (116)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (116)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGASap_root attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (120)) ;
result << "] ;\n"
  "  readFirst (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4818 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4818 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4818 = enumerator_4818.nextObject ()))) {
macroValidPointer (operand_4818) ;
result << "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (123)) ;
result << " = attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (123)) ;
result << "] ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_last (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_5079 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5079 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5079 = enumerator_5079.nextObject ()))) {
macroValidPointer (operand_5079) ;
result << "GALGASap_" ;
result << operand_5079->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (131)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (131)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGASap_root attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (135)) ;
result << "] ;\n"
  "  readLast (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_5408 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5408 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5408 = enumerator_5408.nextObject ()))) {
macroValidPointer (operand_5408) ;
result << "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) ;
result << " = attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) ;
result << "] ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator_concat (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand1,\n"
  "                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand2\n"
  "                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (inOperand1.isValid () && inOperand2.isValid ()) {\n"
  "    result = inOperand1 ;\n"
  "    result.ptr (HERE)->appendList (inOperand2.ptr (HERE)) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_subListWithRange (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_uint & inOperand0,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_uint & inOperand1,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (inOperand0.isValid () && inOperand1.isValid ()) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (THERE) ;\n"
  "    const bool ok = subListWithRange (result.ptr (HERE), inOperand0, inOperand1, inCompiler COMMA_THERE) ;\n"
  "    if (! ok) {\n"
  "      result.drop () ;\n"
  "    }\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_subListFromIndex (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_uint & inIndex,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (inIndex.isValid ()) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (THERE) ;\n"
  "    const bool ok = subListFromIndex (result.ptr (HERE), inIndex, inCompiler COMMA_THERE) ;\n"
  "    if (! ok) {\n"
  "      result.drop () ;\n"
  "    }\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::dotAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & ioResult,\n"
  "                          " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " inOperand\n"
  "                          " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioResult.isValid () && inOperand.isValid ()) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioResult COMMA_THERE) ;\n"
  "    ioResult.ptr (HERE)->appendList (inOperand.ptr (HERE)) ;\n"
  "  }\n"
  "}\n" ;
GGS_typedAttributeList::cEnumerator enumerator_7971 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7971 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7971 = enumerator_7971.nextObject ()))) {
macroValidPointer (operand_7971) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_set" ;
result << operand_7971->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ().reader_identifierRepresentation () ;
result << "AtIndex (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << operand_7971->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (201)) ;
result << " inOperand,\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_uint inIndex,\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  attributeDirectWrite (inOperand, inIndex, " ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (205)) ;
result << ", inCompiler COMMA_THERE) ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_8665 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8665 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8665 = enumerator_8665.nextObject ()))) {
macroValidPointer (operand_8665) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << operand_8665->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (212)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_8665->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << "AtIndex (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_uint & inIndex,\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  return attributeDirectRead (inIndex, " ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (215)) ;
result << ", inCompiler COMMA_THERE) ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'listmapTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_listmapTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_ASSOCIATED_LISTTYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ASSOCIATED_LISTTYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_listmap ((GALGAS_list * (*) (LOCATION_ARGS)) GALGAS_uintlist::constructor_emptyList COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyMap (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioObject\n"
  "                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioObject->retainCount () > 1) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * source = ioObject ;\n"
  "    macroReleaseObject (ioObject) ;\n"
  "    ioObject = constructor_emptyMap (THERE) ;\n"
  "    ioObject->copyFrom (source) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void addAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_string * inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_1196 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1196 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1196 = enumerator_1196.nextObject ()))) {
macroValidPointer (operand_1196) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_1196->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioResult COMMA_THERE) ;\n"
  "    GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (37)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_1544 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1544 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1544 = enumerator_1544.nextObject ()))) {
macroValidPointer (operand_1544) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (39)) ;
if (enumerator_1544.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "    ioResult->addObject (inKey, attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'mapTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_mapTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_insertMethodListAST & var_cas_INSERT_METHOD_LIST,
                                const GGS_mapSearchMethodListAST & var_cas_SEARCH_METHOD_LIST,
                                const GGS_mapRemoveMethodListAST & var_cas_REMOVE_METHOD_LIST,
                                const GGS_bool& var_cas_HAS_INSERT_OR_REPLACE,
                                const GGS_withAccessorMap & var_cas_WITH_ACCESSOR_MAP) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_INSERT_METHOD_LIST.isBuilt ()
    && var_cas_SEARCH_METHOD_LIST.isBuilt ()
    && var_cas_REMOVE_METHOD_LIST.isBuilt ()
    && var_cas_HAS_INSERT_OR_REPLACE.isBuilt ()
    && var_cas_WITH_ACCESSOR_MAP.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_map (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (4)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4)) ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyMap (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_mapWithMapToOverride (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inMapToOverride\n"
  "                                                   " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (inMapToOverride.isValid ()) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyMap (THERE) ;\n"
  "    result.ptr (HERE)->mOverridenMap = inMapToOverride ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & ioObject\n"
  "                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioObject.ptr (HERE)->retainCount () > 1) {\n"
  "    GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " newMap (constructor_emptyMap (THERE)) ;\n"
  "    newMap.ptr (HERE)->copyFrom (ioObject.ptr(HERE)) ;\n"
  "    ioObject = newMap ;\n"
  "  }\n"
  "}\n"
  "\n" ;
GGS_insertMethodListAST::cEnumerator enumerator_1490 (var_cas_INSERT_METHOD_LIST, true) ;
const GGS_insertMethodListAST::cElement * operand_1490 = NULL ;
while (((operand_1490 = enumerator_1490.nextObject ()))) {
macroValidPointer (operand_1490) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_" ;
result << operand_1490->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_lstring inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_1728 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1728 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1728 = enumerator_1728.nextObject ()))) {
macroValidPointer (operand_1728) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << operand_1728->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (42)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (42)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGASap_root attributes [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (46)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (46)) ;
result << "] = {inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_2036 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2036 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2036 = enumerator_2036.nextObject ()))) {
macroValidPointer (operand_2036) ;
result << ", inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (48)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n" ;
const GGS_uint indentation_2499 = GGS_uint (2U) ;
if (indentation_2499.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_2499.uintValue ()) ;
}
result << "const utf32 kInsertErrorMessage [" ;
result << operand_1490->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (52)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (52)) ;
result << "] = " ;
result << operand_1490->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "const utf32 kShadowErrorMessage [" ;
result << operand_1490->mShadowErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (53)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (53)) ;
result << "] = " ;
result << operand_1490->mShadowErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;\n" ;
 ;
if (indentation_2499.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_2499.uintValue ())) ;
}
result << "}\n"
  "\n" ;
}
GGS_mapSearchMethodListAST::cEnumerator enumerator_2538 (var_cas_SEARCH_METHOD_LIST, true) ;
const GGS_mapSearchMethodListAST::cElement * operand_2538 = NULL ;
while (((operand_2538 = enumerator_2538.nextObject ()))) {
macroValidPointer (operand_2538) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const utf32 kSearchErrorMessage_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_2538->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " [" ;
result << operand_2538->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (61)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (61)) ;
result << "] = " ;
result << operand_2538->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_" ;
result << operand_2538->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_lstring inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_3053 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3053 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3053 = enumerator_3053.nextObject ()))) {
macroValidPointer (operand_3053) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << operand_3053->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (65)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (65)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
const GGS_uint indentation_3660 = GGS_uint (2U) ;
if (indentation_3660.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_3660.uintValue ()) ;
}
result << "cRootObjectArray * attributes = performSearch (inKey, inCompiler, kSearchErrorMessage_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_2538->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " COMMA_THERE) ;\n"
  "if (NULL != attributes) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3496 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3496 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3496 = enumerator_3496.nextObject ()))) {
macroValidPointer (operand_3496) ;
result << "  outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (73)) ;
result << " = attributes->objectAtIndex (" ;
result << var_cas_IDX.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (73)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (73)) ;
result << " COMMA_HERE) ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n" ;
 ;
if (indentation_3660.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_3660.uintValue ())) ;
}
result << "}\n"
  "\n" ;
}
GGS_mapRemoveMethodListAST::cEnumerator enumerator_3700 (var_cas_REMOVE_METHOD_LIST, true) ;
const GGS_mapRemoveMethodListAST::cElement * operand_3700 = NULL ;
while (((operand_3700 = enumerator_3700.nextObject ()))) {
macroValidPointer (operand_3700) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_" ;
result << operand_3700->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_lstring inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_3938 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3938 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3938 = enumerator_3938.nextObject ()))) {
macroValidPointer (operand_3938) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << operand_3938->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (85)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (85)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
const GGS_uint indentation_4633 = GGS_uint (2U) ;
if (indentation_4633.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_4633.uintValue ()) ;
}
result << "const utf32 kRemoveErrorMessage [" ;
result << operand_3700->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (90)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (90)) ;
result << "] = " ;
result << operand_3700->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "cRootObjectArray attributes ;\n"
  "  performRemove (inKey, attributes, inCompiler, kRemoveErrorMessage COMMA_THERE) ;\n"
  "if (attributes.count () != 0) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4470 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4470 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4470 = enumerator_4470.nextObject ()))) {
macroValidPointer (operand_4470) ;
result << "  outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (95)) ;
result << " = attributes.objectAtIndex (" ;
result << var_cas_IDX.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (95)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (95)) ;
result << " COMMA_HERE) ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n" ;
 ;
if (indentation_4633.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_4633.uintValue ())) ;
}
result << "}\n"
  "\n" ;
}
if (var_cas_HAS_INSERT_OR_REPLACE.boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_insertOrReplace (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_lstring * inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_4884 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4884 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4884 = enumerator_4884.nextObject ()))) {
macroValidPointer (operand_4884) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_4884->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (106)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (106)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  GALGAS_root * attributes [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (109)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (109)) ;
result << "] = {inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_5161 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5161 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5161 = enumerator_5161.nextObject ()))) {
macroValidPointer (operand_5161) ;
result << ", inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (111)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "  performInsertOrReplace (attributes) ;\n"
  "}\n"
  "\n" ;
}else {
}
GGS_typedAttributeList::cEnumerator enumerator_5313 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5313 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5313 = enumerator_5313.nextObject ()))) {
macroValidPointer (operand_5313) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << operand_5313->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (120)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_5313->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << "ForKey (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_string & inKey,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  return readAttributeForKey (inKey, inCompiler, " ;
result << var_cas_IDX.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (123)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (123)) ;
result << " COMMA_THERE) ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_typedAttributeList::cEnumerator enumerator_5891 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5891 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5891 = enumerator_5891.nextObject ()))) {
macroValidPointer (operand_5891) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_set" ;
result << operand_5891->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ().reader_identifierRepresentation () ;
result << "ForKey (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_string inKey,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << operand_5891->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (130)) ;
result << " inAttributeValue,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  writeAttributeForKey (inKey, inAttributeValue, inCompiler, " ;
result << var_cas_IDX.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (133)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (133)) ;
result << " COMMA_THERE) ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_withAccessorMap::cEnumerator enumerator_6544 (var_cas_WITH_ACCESSOR_MAP, true) ;
const GGS_withAccessorMap::cElement * operand_6544 = NULL ;
while (((operand_6544 = enumerator_6544.nextObject ()))) {
macroValidPointer (operand_6544) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "cRootObjectArray * readWriteAccessForWithInstruction_" ;
result << operand_6544->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & ioMap,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << operand_6544->mInfo.mArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (141)) ;
result << " & inKey\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  cRootObjectArray * result = NULL ;\n"
  "  if (ioMap.isValid () && inKey.isValid ()) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioMap COMMA_THERE) ;\n" ;
if ((operand_6544->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (146))).operator_isEqual (GGS_string ("hasKey")).boolValue ()) {
result << "    result = ioMap.ptr (HERE)->performSearch (inKey, inCompiler COMMA_THERE) ;\n" ;
}else {
result << "    result = ioMap.ptr (HERE)->performSearch (inKey, inCompiler, kSearchErrorMessage_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_6544->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " COMMA_THERE) ;\n" ;
}
result << "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'sortedlistTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_sortedlistTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_sortDescriptorListForGeneration & var_cas_SORT_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_SORT_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_sortedlist (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4)) ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "PMSInt32 GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::compareSortedListElements (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_root * inLeftAttributeList [],\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_root * inRightAttributeList []) const {\n"
  "  PMSInt32 result = 0 ;\n" ;
GGS_sortDescriptorListForGeneration::cEnumerator enumerator_563 (var_cas_SORT_ATTRIBUTE_LIST, true) ;
const GGS_sortDescriptorListForGeneration::cElement * operand_563 = NULL ;
while (((operand_563 = enumerator_563.nextObject ()))) {
macroValidPointer (operand_563) ;
result << "  if (result == 0) {\n"
  "    result = " ;
if (operand_563->mAscendingOrder.boolValue ()) {
}else {
result << "- " ;
}
result << "genericObjectCompareFunction (inLeftAttributeList [" ;
result << operand_563->mAttributeIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
result << "], inRightAttributeList [" ;
result << operand_563->mAttributeIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
result << "]) ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioOperand\n"
  "                     " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if ((ioOperand != NULL) && (ioOperand->retainCount () > 1)) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = NULL ;\n"
  "    macroMyNew (p, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "    p->copyFrom (ioOperand) ;\n"
  "    macroAssignObject (ioOperand, p) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptySortedList (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_sortedListWithValue (" ;
const GGS_string var_cas_COL0 = GGS_string::stringWithColumnCount (result) ;
GGS_typedAttributeList::cEnumerator enumerator_1804 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1804 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1804 = enumerator_1804.nextObject ()))) {
macroValidPointer (operand_1804) ;
result << "GALGAS_" ;
result << operand_1804->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (44)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (44)) ;
if (enumerator_1804.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL0 ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result << var_cas_COL0 ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptySortedList (THERE) ;\n"
  "  GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (49)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_2176 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2176 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2176 = enumerator_2176.nextObject ()))) {
macroValidPointer (operand_2176) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (51)) ;
if (enumerator_2176.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "  result->addObject (attributeArray) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void addAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult" ;
GGS_typedAttributeList::cEnumerator enumerator_2485 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2485 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2485 = enumerator_2485.nextObject ()))) {
macroValidPointer (operand_2485) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_2485->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (63)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (63)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "    " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioResult COMMA_HERE) ;\n"
  "    GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (69)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_2840 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2840 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2840 = enumerator_2840.nextObject ()))) {
macroValidPointer (operand_2840) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (71)) ;
if (enumerator_2840.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "    ioResult->addObject (attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void dotAssign_operation (GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult,\n"
  "                          GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand\n"
  "                          COMMA_LOCATION_ARGS) {\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioResult COMMA_THERE) ;\n"
  "    ioResult->appendSortedList (inOperand) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator_concat (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n"
  "                                                    " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2\n"
  "                                                    " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  if ((NULL != inOperand1) && (NULL != inOperand2)) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptySortedList (THERE) ;\n"
  "    result->appendSortedList (inOperand1) ;\n"
  "    result->appendSortedList (inOperand2) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popSmallest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_4198 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4198 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4198 = enumerator_4198.nextObject ()))) {
macroValidPointer (operand_4198) ;
result << "GALGAS_" ;
result << operand_4198->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (108)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (108)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4421 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4421 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4421 = enumerator_4421.nextObject ()))) {
macroValidPointer (operand_4421) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (114)) ;
result << ") ;\n"
  "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (115)) ;
result << " = NULL ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (117)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_4662 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4662 = NULL ;
while (((operand_4662 = enumerator_4662.nextObject ()))) {
macroValidPointer (operand_4662) ;
result << "NULL" ;
if (enumerator_4662.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "  removeSmallestObject (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4806 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4806 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4806 = enumerator_4806.nextObject ()))) {
macroValidPointer (operand_4806) ;
result << "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (124)) ;
result << " = (GALGAS_" ;
result << operand_4806->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (124)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (124)) ;
result << "] ;\n"
  "  macroNullOrValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (125)) ;
result << ", GALGAS_" ;
result << operand_4806->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (125)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popGreatest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_5254 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5254 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5254 = enumerator_5254.nextObject ()))) {
macroValidPointer (operand_5254) ;
result << "GALGAS_" ;
result << operand_5254->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (133)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (133)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_5477 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5477 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5477 = enumerator_5477.nextObject ()))) {
macroValidPointer (operand_5477) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (139)) ;
result << ") ;\n"
  "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (140)) ;
result << " = NULL ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (142)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_5718 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5718 = NULL ;
while (((operand_5718 = enumerator_5718.nextObject ()))) {
macroValidPointer (operand_5718) ;
result << "NULL" ;
if (enumerator_5718.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "  removeGreatestObject (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_5862 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5862 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5862 = enumerator_5862.nextObject ()))) {
macroValidPointer (operand_5862) ;
result << "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (149)) ;
result << " = (GALGAS_" ;
result << operand_5862->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (149)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (149)) ;
result << "] ;\n"
  "  macroNullOrValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (150)) ;
result << ", GALGAS_" ;
result << operand_5862->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (150)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_smallest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_6305 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6305 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6305 = enumerator_6305.nextObject ()))) {
macroValidPointer (operand_6305) ;
result << "GALGAS_" ;
result << operand_6305->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (158)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (158)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_6518 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6518 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6518 = enumerator_6518.nextObject ()))) {
macroValidPointer (operand_6518) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (164)) ;
result << ") ;\n"
  "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (165)) ;
result << " = NULL ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (167)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_6759 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6759 = NULL ;
while (((operand_6759 = enumerator_6759.nextObject ()))) {
macroValidPointer (operand_6759) ;
result << "NULL" ;
if (enumerator_6759.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "  smallestObjectAttributeList (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_6908 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6908 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6908 = enumerator_6908.nextObject ()))) {
macroValidPointer (operand_6908) ;
result << "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
result << " = (GALGAS_" ;
result << operand_6908->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
result << "] ;\n"
  "  macroNullOrValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (175)) ;
result << ", GALGAS_" ;
result << operand_6908->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (175)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_greatest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_7351 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7351 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7351 = enumerator_7351.nextObject ()))) {
macroValidPointer (operand_7351) ;
result << "GALGAS_" ;
result << operand_7351->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (183)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (183)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_7564 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7564 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7564 = enumerator_7564.nextObject ()))) {
macroValidPointer (operand_7564) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (189)) ;
result << ") ;\n"
  "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (190)) ;
result << " = NULL ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (192)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_7805 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7805 = NULL ;
while (((operand_7805 = enumerator_7805.nextObject ()))) {
macroValidPointer (operand_7805) ;
result << "NULL" ;
if (enumerator_7805.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "  greatestObjectAttributeList (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_7954 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7954 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7954 = enumerator_7954.nextObject ()))) {
macroValidPointer (operand_7954) ;
result << "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (199)) ;
result << " = (GALGAS_" ;
result << operand_7954->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (199)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (199)) ;
result << "] ;\n"
  "  macroNullOrValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
result << ", GALGAS_" ;
result << operand_7954->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'structTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_structTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_164 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_164 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_164 = enumerator_164.nextObject ()))) {
macroValidPointer (operand_164) ;
result << "GALGASap_" ;
result << operand_164->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (5)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5)) ;
if (enumerator_164.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " \n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n"
  "GALGAS_struct (THERE)" ;
GGS_typedAttributeList::cEnumerator enumerator_369 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_369 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_369 = enumerator_369.nextObject ()))) {
macroValidPointer (operand_369) ;
result << ",\n"
  "mAttribute_" ;
result << operand_369->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (10)) ;
result << ")" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_675 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_675 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_675 = enumerator_675.nextObject ()))) {
macroValidPointer (operand_675) ;
result << "GALGASap_" ;
result << operand_675->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (18)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (18)) ;
if (enumerator_675.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " \n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  if (" ;
GGS_typedAttributeList::cEnumerator enumerator_913 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_913 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_913 = enumerator_913.nextObject ()))) {
macroValidPointer (operand_913) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (24)) ;
result << ".isValid ()" ;
if (enumerator_913.hasNextObject ()) {
result << " && " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "    macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_1076 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1076 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1076 = enumerator_1076.nextObject ()))) {
macroValidPointer (operand_1076) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (30)) ;
if (enumerator_1076.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::~ GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                             " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 inIndentation) {\n"
  "  ioString << \"<struct @" ;
result << var_cas_TYPE_NAME ;
result << ":\" ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1615 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1615 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1615 = enumerator_1615.nextObject ()))) {
macroValidPointer (operand_1615) ;
result << "  mAttribute_" ;
result << operand_1615->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".ptr (HERE)->description (ioString, inIndentation  + 1) ;\n" ;
if (enumerator_1615.hasNextObject ()) {
result << "  ioString << \", \" ;\n" ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  ioString << \">\" ;\n"
  "}\n"
  "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1843 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1843 = NULL ;
while (((operand_1843 = enumerator_1843.nextObject ()))) {
macroValidPointer (operand_1843) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << operand_1843->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (60)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_1843->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (UNUSED_LOCATION_ARGS) {\n"
  "  return mAttribute_" ;
result << operand_1843->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "}\n"
  "\n" ;
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "PMSInt32 GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand1,\n"
  "                                      " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand2) {\n"
  "  PMSInt32 result = 0 ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2510 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2510 = NULL ;
while (((operand_2510 = enumerator_2510.nextObject ()))) {
macroValidPointer (operand_2510) ;
result << "  if (result == 0) {\n"
  "    result = GALGAS_" ;
result << operand_2510->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (72)) ;
result << "::objectCompare (inOperand1.ptr (HERE)->mAttribute_" ;
result << operand_2510->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ", inOperand2.ptr (HERE)->mAttribute_" ;
result << operand_2510->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'mapProxyTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_mapProxyTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_mapSearchMethodListAST & var_cas_SEARCH_METHOD_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_SEARCH_METHOD_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_mapproxy (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (4)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4)) ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_null (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::class_method_makeRegularProxy (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_string * inKey,\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << " * & ioMap,\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & outProxy\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  macroReleaseObject (outProxy) ;\n"
  "  if ((NULL != inKey) && (NULL != ioMap)) {\n"
  "    GALGAS_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << "::insulate (ioMap COMMA_HERE) ;\n"
  "    macroMyNew (outProxy, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "    outProxy->internalMakeRegularProxy (ioMap, inKey) ;\n"
  "  }\n"
  "}\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1239 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1239 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1239 = enumerator_1239.nextObject ()))) {
macroValidPointer (operand_1239) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_1239->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (30)) ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_1239->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << operand_1239->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
result << " * result = NULL ;\n"
  "  GALGAS_root * * attributeList = getAttributeList (inCompiler COMMA_THERE) ;\n"
  "  if (NULL != attributeList) {\n"
  "    result = (GALGAS_" ;
result << operand_1239->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << " *) attributeList [" ;
result << var_cas_IDX.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (35)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << "] ;\n"
  "    macroValidObject (result, GALGAS_" ;
result << operand_1239->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (36)) ;
result << ") ;\n"
  "    macroRetainObject (result) ; // A returned object is retained\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_mapSearchMethodListAST::cEnumerator enumerator_2156 (var_cas_SEARCH_METHOD_LIST, true) ;
const GGS_mapSearchMethodListAST::cElement * operand_2156 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2156 = enumerator_2156.nextObject ()))) {
macroValidPointer (operand_2156) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_" ;
result << operand_2156->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << " * inMap,\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_lstring * inKey,\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  if ((NULL != inMap) && (NULL != inKey)) {\n" ;
const GGS_uint indentation_3213 = GGS_uint (4U) ;
if (indentation_3213.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_3213.uintValue ()) ;
}
result << "macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "const utf32 kSearchErrorMessage [" ;
result << operand_2156->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (53)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (53)) ;
result << "] = " ;
result << operand_2156->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "const bool ok = result->internalSearchKey (inMap, inKey, kSearchErrorMessage, inCompiler COMMA_THERE) ;\n"
  "if (! ok) {\n"
  "  macroReleaseObject (result) ;\n"
  "}\n" ;
 ;
if (indentation_3213.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_3213.uintValue ())) ;
}
result << "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'classTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_classTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_SUPER_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_CURRENT_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_ALL_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_INHERITED_ATTRIBUTE_LIST,
                                const GGS_bool& var_cas_IS_ABSTRACT,
                                const GGS_methodDefinitionListForGeneration & var_cas_CONCRETE_METHOD_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_CURRENT_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_ALL_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_INHERITED_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_IS_ABSTRACT.isBuilt ()
    && var_cas_CONCRETE_METHOD_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n" ;
if ((var_cas_CURRENT_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "PMSInt32 GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & /* inOperand1 */,\n"
  "                                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & /* inOperand2 */) {\n"
  "  return 0 ;\n"
  "}\n"
  "\n" ;
}else {
result << "PMSInt32 GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand1,\n"
  "                                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand2) {\n" ;
if ((var_cas_SUPER_TYPE_IDENTIFIER).operator_isEqual (GGS_string ("class")).boolValue ()) {
result << "  PMSInt32 result = 0 ;\n" ;
}else {
result << "  PMSInt32 result = GALGAS_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << "::objectCompare (inOperand1, inOperand2) ;\n" ;
}
GGS_typedAttributeList::cEnumerator enumerator_799 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_799 = NULL ;
while (((operand_799 = enumerator_799.nextObject ()))) {
macroValidPointer (operand_799) ;
result << "  if (0 == result) {\n"
  "    result = GALGAS_" ;
result << operand_799->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (18)) ;
result << "::objectCompare (inOperand1.ptr (HERE)->mAttribute_" ;
result << operand_799->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ", inOperand2.ptr (HERE)->mAttribute_" ;
result << operand_799->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n" ;
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1330 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1330 = NULL ;
while (((operand_1330 = enumerator_1330.nextObject ()))) {
macroValidPointer (operand_1330) ;
result << "GALGASap_" ;
result << operand_1330->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (29)) ;
result << " & constinAttribute_" ;
result << operand_1330->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1330.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
result << ") :\n"
  "GALGAS_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_1687 (var_cas_INHERITED_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1687 = NULL ;
while (((operand_1687 = enumerator_1687.nextObject ()))) {
macroValidPointer (operand_1687) ;
result << "constinAttribute_" ;
result << operand_1687->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1687.hasNextObject ()) {
result << ", " ;
}
}
if ((var_cas_INHERITED_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << " COMMA_THERE)" ;
}else {
result << "THERE)" ;
}
GGS_typedAttributeList::cEnumerator enumerator_1913 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1913 = NULL ;
while (((operand_1913 = enumerator_1913.nextObject ()))) {
macroValidPointer (operand_1913) ;
result << ",\n"
  "mAttribute_" ;
result << operand_1913->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (constinAttribute_" ;
result << operand_1913->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
}
result << " {\n"
  "}\n"
  "\n" ;
if (((var_cas_IS_ABSTRACT).operator_not ()).operator_and ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 /* inIndentation */) {\n"
  "  ioString << \"<class @\"\n"
  "           << typeDescriptor ()->mGalgasTypeName\n"
  "           << \">\" ;\n"
  "}\n"
  "\n" ;
}else {
}
if (((var_cas_IS_ABSTRACT).operator_not ()).operator_and ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_3103 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3103 = NULL ;
while (((operand_3103 = enumerator_3103.nextObject ()))) {
macroValidPointer (operand_3103) ;
result << "GALGASap_" ;
result << operand_3103->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (76)) ;
result << " & inAttribute_" ;
result << operand_3103->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_3103.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  if (" ;
GGS_typedAttributeList::cEnumerator enumerator_3469 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3469 = NULL ;
while (((operand_3469 = enumerator_3469.nextObject ()))) {
macroValidPointer (operand_3469) ;
result << "inAttribute_" ;
result << operand_3469->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
if (enumerator_3469.hasNextObject ()) {
result << " && " ;
}
}
result << ") {\n"
  "    macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_3676 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3676 = NULL ;
while (((operand_3676 = enumerator_3676.nextObject ()))) {
macroValidPointer (operand_3676) ;
result << "inAttribute_" ;
result << operand_3676->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_3676.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_THERE)) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 /* inIndentation */) {\n"
  "  ioString << \"<class @\"\n"
  "           << typeDescriptor ()->mGalgasTypeName\n"
  "           << \":\" ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4230 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4230 = NULL ;
while (((operand_4230 = enumerator_4230.nextObject ()))) {
macroValidPointer (operand_4230) ;
result << "//  mAttribute_" ;
result << operand_4230->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << "->description (ioString, inIndentation + 1) ;\n" ;
if (enumerator_4230.hasNextObject ()) {
result << "  ioString << \", \" ;\n" ;
}
}
result << "  ioString << \">\" ;\n"
  "}\n"
  "\n" ;
}else {
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::~GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) {\n"
  "}\n"
  "\n" ;
if (((var_cas_IS_ABSTRACT).operator_not ()).operator_and ((var_cas_SUPER_TYPE_IDENTIFIER).operator_isNotEqual (GGS_string ("class"))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " (UNUSED_LOCATION_ARGS) {\n"
  "  return GALGASap_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " (this) ;\n"
  "}\n"
  "\n" ;
}else {
}
GGS_methodDefinitionListForGeneration::cEnumerator enumerator_4944 (var_cas_CONCRETE_METHOD_LIST, true) ;
const GGS_methodDefinitionListForGeneration::cElement * operand_4944 = NULL ;
while (((operand_4944 = enumerator_4944.nextObject ()))) {
macroValidPointer (operand_4944) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << function_generateProcedure (inLexique, (((GGS_string ("GALGAS_")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string ("::method_"))).operator_concat (operand_4944->mMethodName.ggs_string ().reader_identifierRepresentation ()), operand_4944->mSignature, operand_4944->mInstructionList, GGS_bool (false), GGS_string ("C_Compiler"), GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (131)) ;
}
GGS_typedAttributeList::cEnumerator enumerator_5321 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5321 = NULL ;
while (((operand_5321 = enumerator_5321.nextObject ()))) {
macroValidPointer (operand_5321) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << operand_5321->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (143)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_5321->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (UNUSED_LOCATION_ARGS) {\n"
  "  return mAttribute_" ;
result << operand_5321->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "}\n"
  "\n" ;
}
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'routineDeclaration' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_routineDeclaration (C_Compiler & inLexique,
                                const GGS_string& var_cas_ROUTINE_NAME,
                                const GGS_formalParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_ROUTINE_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Routine '")).operator_concat (var_cas_ROUTINE_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void routine_" ;
result << var_cas_ROUTINE_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_488 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_488 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_488 = enumerator_488.nextObject ()))) {
macroValidPointer (operand_488) ;
if ((operand_488->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (9))).boolValue ()) {
result << "GALGASap_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (10)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (10)) ;
}else if ((operand_488->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (11))).boolValue ()) {
result << "GALGASap_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
}else if ((operand_488->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (13))).boolValue ()) {
result << "GALGASap_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
}else {
result << "GALGASap_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'functionDeclaration' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_functionDeclaration (C_Compiler & inLexique,
                                const GGS_string& var_cas_FUNCTION_NAME,
                                const GGS_formalInputParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST,
                                const GGS_string& var_cas_RETURN_TYPE_IDENTIFIER) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_FUNCTION_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt ()
    && var_cas_RETURN_TYPE_IDENTIFIER.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Routine '")).operator_concat (var_cas_FUNCTION_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_RETURN_TYPE_IDENTIFIER ;
result << " function_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_521 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_521 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_521 = enumerator_521.nextObject ()))) {
macroValidPointer (operand_521) ;
result << "GALGASap_" ;
result << operand_521->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
result << " & constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'routineImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_routineImplementation (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_ROUTINE_NAME,
                                const GGS_string& var_cas_ROUTINE_IMPLEMENTATION) {
  C_String result ;
  const bool isBuilt = var_cas_ROUTINE_NAME.isBuilt ()
    && var_cas_ROUTINE_IMPLEMENTATION.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Routine '")).operator_concat (var_cas_ROUTINE_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << var_cas_ROUTINE_IMPLEMENTATION ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'functionImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_functionImplementation (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_FUNCTION_NAME,
                                const GGS_string& var_cas_FUNCTION_IMPLEMENTATION) {
  C_String result ;
  const bool isBuilt = var_cas_FUNCTION_NAME.isBuilt ()
    && var_cas_FUNCTION_IMPLEMENTATION.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Function '")).operator_concat (var_cas_FUNCTION_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << var_cas_FUNCTION_IMPLEMENTATION ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@semanticDeclarationForGeneration.appendDeclaration'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendDeclaration (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_13995
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_13995 != NULL) {
var_cas_outHeader = GGS_string ("") ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration> gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration (typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendDeclaration (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration
findCategoryReader__semanticDeclarationForGeneration__appendDeclaration (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendDeclaration (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendDeclaration ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@routinePrototypeDeclarationForGeneration.appendDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__routinePrototypeDeclarationForGeneration__appendDeclaration (C_Compiler & inLexique,
                                const cPtr_routinePrototypeDeclarationForGeneration * operand_14207
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_14207 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_routineDeclaration (inLexique, operand_14207->mRoutineName, operand_14207->mFormalArgumentList) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@functionPrototypeDeclarationForGeneration.appendDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__functionPrototypeDeclarationForGeneration__appendDeclaration (C_Compiler & inLexique,
                                const cPtr_functionPrototypeDeclarationForGeneration * operand_14533
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_14533 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_functionDeclaration (inLexique, operand_14533->mFunctionName, operand_14533->mFormalArgumentList, operand_14533->mReturnType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (364))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@semanticTypeForGeneration.appendDeclaration'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticTypeForGeneration__appendDeclaration (C_Compiler & inLexique,
                                const cPtr_semanticTypeForGeneration * operand_14889
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_14889 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_unifiedTypeHeader (inLexique, operand_14889->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (372)), operand_14889->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (373)), operand_14889->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (374)), operand_14889->mTypeIndex.reader_mSuperType (inLexique COMMA_SOURCE_FILE_AT_LINE (375)), operand_14889->mTypeIndex.reader_mTypeKindEnum (inLexique COMMA_SOURCE_FILE_AT_LINE (376)), operand_14889->mTypeIndex.reader_mCurrentTypedAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (377)), operand_14889->mTypeIndex.reader_mInheritedTypedAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (378)), operand_14889->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (379)), operand_14889->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (380)), operand_14889->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (381)), operand_14889->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (382)), operand_14889->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (383)), operand_14889->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (384)), operand_14889->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (385)), operand_14889->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (386)), operand_14889->mTypeIndex.reader_mNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (387)), operand_14889->mTypeIndex.reader_mEnumConstantList (inLexique COMMA_SOURCE_FILE_AT_LINE (388)), operand_14889->mTypeIndex.reader_mPrivateDataMemberList (inLexique COMMA_SOURCE_FILE_AT_LINE (389)), operand_14889->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (390))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@genericTypeForGeneration.appendDeclaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__genericTypeForGeneration__appendDeclaration (C_Compiler & inLexique,
                                const cPtr_genericTypeForGeneration * operand_15844
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_15844 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_genericTypeHeader (inLexique, operand_15844->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (398)), operand_15844->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (399))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticDeclarationForGeneration.appendAutoPointerClassDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_16500
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_16500 != NULL) {
var_cas_outHeader = GGS_string ("") ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendAutoPointerClassDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration> gDispatchTableForReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration (typeCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendAutoPointerClassDeclaration (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration
findCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendAutoPointerClassDeclaration ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticTypeForGeneration.appendAutoPointerClassDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticTypeForGeneration__appendAutoPointerClassDeclaration (C_Compiler & inLexique,
                                const cPtr_semanticTypeForGeneration * operand_16713
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_16713 != NULL) {
const GGS_bool cond_16802 = (operand_16713->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (416))).operator_isEqual (GGS_string ("root")) ;
if (cond_16802.isBuiltAndTrue ()) {
var_cas_outHeader = GGS_string ("") ;
}else if (cond_16802.isBuiltAndFalse ()) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_autoPointerClassHeader (inLexique, operand_16713->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (420)), operand_16713->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (421)), operand_16713->mTypeIndex.reader_mSuperType (inLexique COMMA_SOURCE_FILE_AT_LINE (422)).reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (422))) ;
}
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticDeclarationForGeneration.appendAutoPointerClassImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_17520
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_17520 != NULL) {
var_cas_outImplementation = GGS_string ("") ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendAutoPointerClassImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation> gDispatchTableForReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation (typeCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendAutoPointerClassImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation
findCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendAutoPointerClassImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticTypeForGeneration.appendAutoPointerClassImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticTypeForGeneration__appendAutoPointerClassImplementation (C_Compiler & inLexique,
                                const cPtr_semanticTypeForGeneration * operand_17752
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_17752 != NULL) {
const GGS_bool cond_17857 = (operand_17752->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (440))).operator_isEqual (GGS_string ("root")) ;
if (cond_17857.isBuiltAndTrue ()) {
var_cas_outImplementation = GGS_string ("") ;
}else if (cond_17857.isBuiltAndFalse ()) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_autoPointerClassImplementation (inLexique, operand_17752->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (444)), operand_17752->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (445)), operand_17752->mTypeIndex.reader_mSuperType (inLexique COMMA_SOURCE_FILE_AT_LINE (446)).reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (446))) ;
}
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticDeclarationForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendTypeGenericImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_18664
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_18664 != NULL) {
var_cas_outImplementation = GGS_string ("") ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation> gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendTypeGenericImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation
findCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendTypeGenericImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticTypeForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticTypeForGeneration__appendTypeGenericImplementation (C_Compiler & inLexique,
                                const cPtr_semanticTypeForGeneration * operand_18890
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_18890 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_unifiedTypeImplementation (inLexique, operand_18890->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (466)), operand_18890->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (467)), operand_18890->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (468)), operand_18890->mTypeIndex.reader_mSuperType (inLexique COMMA_SOURCE_FILE_AT_LINE (469)), operand_18890->mTypeIndex.reader_mTypeKindEnum (inLexique COMMA_SOURCE_FILE_AT_LINE (470)), operand_18890->mTypeIndex.reader_mCurrentTypedAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (471)), operand_18890->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (472)), operand_18890->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (473)), operand_18890->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (474)), operand_18890->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (475)), operand_18890->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (476)), operand_18890->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (477)), operand_18890->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (478)), operand_18890->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (479)), operand_18890->mTypeIndex.reader_mNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (480))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@genericTypeForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__genericTypeForGeneration__appendTypeGenericImplementation (C_Compiler & inLexique,
                                const cPtr_genericTypeForGeneration * operand_19724
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_19724 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_genericTypeImplementation (inLexique, operand_19724->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (489)), operand_19724->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (490)), operand_19724->mTypeIndex.reader_mSuperType (inLexique COMMA_SOURCE_FILE_AT_LINE (491))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticDeclarationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendSpecificImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_20427
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_20427 != NULL) {
var_cas_outImplementation = GGS_string ("") ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation> gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendSpecificImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation
findCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendSpecificImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@primitiveTypeForGeneration.appendSpecificImplementation' *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__primitiveTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_primitiveTypeForGeneration * operand_20651
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_20651 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_predefinedTypeSpecificImplementation (inLexique, operand_20651->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (509)), operand_20651->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (510)), operand_20651->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (511)), operand_20651->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (512)), operand_20651->mTypeIndex.reader_mNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (513))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@listTypeForGeneration.appendSpecificImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__listTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_listTypeForGeneration * operand_21157
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_21157 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_listTypeSpecificImplementation (inLexique, operand_21157->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (521)), operand_21157->mTypedAttributeList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category reader '@listmapTypeForGeneration.appendSpecificImplementation'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__listmapTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_listmapTypeForGeneration * operand_21529
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_21529 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_listmapTypeSpecificImplementation (inLexique, operand_21529->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (530)), operand_21529->mAssociatedListTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (531)), operand_21529->mAssociatedListTypedAttributeList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category reader '@mapTypeForGeneration.appendSpecificImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_mapTypeForGeneration * operand_21971
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_21971 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_mapTypeSpecificImplementation (inLexique, operand_21971->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (540)), operand_21971->mTypedAttributeList, operand_21971->mInsertMethodList, operand_21971->mSearchMethodList, operand_21971->mRemoveMethodList, operand_21971->mHasInsertOrReplaceModifier, operand_21971->mWithAccessorMap) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@sortedListTypeForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__sortedListTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_sortedListTypeForGeneration * operand_22469
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_22469 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_sortedlistTypeSpecificImplementation (inLexique, operand_22469->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (554)), operand_22469->mTypedAttributeList, operand_22469->mSortDescriptorList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category reader '@structTypeForGeneration.appendSpecificImplementation'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__structTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_structTypeForGeneration * operand_22871
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_22871 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_structTypeSpecificImplementation (inLexique, operand_22871->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (564)), operand_22871->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (565)), operand_22871->mTypedAttributeList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@enumTypeForGeneration.appendSpecificImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__enumTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_enumTypeForGeneration * operand_23264
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_23264 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_enumTypeSpecificImplementation (inLexique, operand_23264->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (574)), operand_23264->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (575)), operand_23264->mConstantList, operand_23264->mEnumMessageList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@mapProxyTypeForGeneration.appendSpecificImplementation'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapProxyTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_mapProxyTypeForGeneration * operand_23675
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_23675 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_mapProxyTypeSpecificImplementation (inLexique, operand_23675->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (585)), operand_23675->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (586)), operand_23675->mAssociatedMapTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (587)), operand_23675->mAssociatedMapTypedAttributeList, operand_23675->mSearchMethodList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@classTypeForGeneration.appendSpecificImplementation'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__classTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_classTypeForGeneration * operand_24163
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_24163 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_classTypeSpecificImplementation (inLexique, operand_24163->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (597)), operand_24163->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (598)), ((operand_24163->mSuperClass.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (599))).isBuiltAndTrue () ? (GGS_string ("class")) : (operand_24163->mSuperClass.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (599)))), operand_24163->mTypedAttributeList, operand_24163->mAllTypedAttributeList, operand_24163->mAllTypedAttributeList.reader_subListWithRange (inLexique, GGS_uint (0U), operand_24163->mAllTypedAttributeList.reader_length ().substract_operation (inLexique, operand_24163->mTypedAttributeList.reader_length () COMMA_SOURCE_FILE_AT_LINE (602)) COMMA_SOURCE_FILE_AT_LINE (602)), operand_24163->mIsAbstract, operand_24163->mMethodList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@routineImplementationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__routineImplementationForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_routineImplementationForGeneration * operand_24834
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_24834 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_routineImplementation (inLexique, operand_24834->mRoutineName, function_generateProcedure (inLexique, (GGS_string ("routine_")).operator_concat (operand_24834->mRoutineName.reader_identifierRepresentation ()), operand_24834->mFormalArgumentList, operand_24834->mRoutineInstructionList, GGS_bool (false), GGS_string ("C_Compiler"), GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (613))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@functionImplementationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__functionImplementationForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_functionImplementationForGeneration * operand_25418
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_25418 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_functionImplementation (inLexique, operand_25418->mFunctionName, function_generateFunction (inLexique, (GGS_string ("function_")).operator_concat (operand_25418->mFunctionName.reader_identifierRepresentation ()), operand_25418->mFormalArgumentList, operand_25418->mFunctionInstructionList, GGS_string ("C_Compiler"), operand_25418->mReturnType.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (634)), operand_25418->mResultVariableCppName COMMA_SOURCE_FILE_AT_LINE (629))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticGeneration (void) {
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration (category_reader__semanticDeclarationForGeneration__appendDeclaration, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration) category_reader__routinePrototypeDeclarationForGeneration__appendDeclaration, gClassInfoFor__routinePrototypeDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration) category_reader__functionPrototypeDeclarationForGeneration__appendDeclaration, gClassInfoFor__functionPrototypeDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration) category_reader__semanticTypeForGeneration__appendDeclaration, gClassInfoFor__semanticTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration) category_reader__genericTypeForGeneration__appendDeclaration, gClassInfoFor__genericTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration (category_reader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration) category_reader__semanticTypeForGeneration__appendAutoPointerClassDeclaration, gClassInfoFor__semanticTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation (category_reader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation) category_reader__semanticTypeForGeneration__appendAutoPointerClassImplementation, gClassInfoFor__semanticTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (category_reader__semanticDeclarationForGeneration__appendTypeGenericImplementation, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation) category_reader__semanticTypeForGeneration__appendTypeGenericImplementation, gClassInfoFor__semanticTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation) category_reader__genericTypeForGeneration__appendTypeGenericImplementation, gClassInfoFor__genericTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (category_reader__semanticDeclarationForGeneration__appendSpecificImplementation, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__primitiveTypeForGeneration__appendSpecificImplementation, gClassInfoFor__primitiveTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__listTypeForGeneration__appendSpecificImplementation, gClassInfoFor__listTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__listmapTypeForGeneration__appendSpecificImplementation, gClassInfoFor__listmapTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__mapTypeForGeneration__appendSpecificImplementation, gClassInfoFor__mapTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__sortedListTypeForGeneration__appendSpecificImplementation, gClassInfoFor__sortedListTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__structTypeForGeneration__appendSpecificImplementation, gClassInfoFor__structTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__enumTypeForGeneration__appendSpecificImplementation, gClassInfoFor__enumTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__mapProxyTypeForGeneration__appendSpecificImplementation, gClassInfoFor__mapProxyTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__classTypeForGeneration__appendSpecificImplementation, gClassInfoFor__classTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__routineImplementationForGeneration__appendSpecificImplementation, gClassInfoFor__routineImplementationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__functionImplementationForGeneration__appendSpecificImplementation, gClassInfoFor__functionImplementationForGeneration.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_semanticGeneration (void) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration.free () ;
  gDispatchTableForReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration.free () ;
  gDispatchTableForReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation.free () ;
  gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.free () ;
  gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticGeneration (prologueRoutineFor_semanticGeneration, epilogueRoutineFor_semanticGeneration) ;

//---------------------------------------------------------------------------*

