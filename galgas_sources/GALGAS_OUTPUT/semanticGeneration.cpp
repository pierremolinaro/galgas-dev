//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'semanticGeneration.cpp'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                    september 25th, 2010, at 21h57'37"                     *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticGeneration.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticGeneration.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of function "generateProcedure"               *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string function_generateProcedure (C_Compiler & inLexique,
                                const GGS_string  var_cas_inProcedureName,
                                const GGS_formalParameterListForGeneration   var_cas_inFormalArgumentList,
                                const GGS_semanticInstructionListForGeneration   var_cas_inInstructionList,
                                const GGS_bool  var_cas_inProcedureIsConst,
                                const GGS_string  var_cas_inCompilerTypeName,
                                const GGS_bool  var_cas_inGenerateLocationArgs,
                                const GGS_bool  var_cas_inGenerateResetTemplateString COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER function_generateProcedure at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_outGeneratedCode ;
  GGS_stringset  var_cas_unusedVariableCppNameSet = GGS_stringset ::constructor_emptySet () ;
  const GGS_bool cond_2502 = (var_cas_inGenerateResetTemplateString).operator_not () ;
  if (cond_2502.isBuiltAndTrue ()) {
    var_cas_unusedVariableCppNameSet.addAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (44))) ;
  }
  {
    GGS_formalParameterListForGeneration::cEnumerator enumerator_2538 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalParameterListForGeneration::cElement * operand_2538 = NULL ;
    while (((operand_2538 = enumerator_2538.nextObject ()))) {
      macroValidPointer (operand_2538) ;
      const GGS_bool cond_2695 = (operand_2538->mFormalArgumentPassingMode).operator_isNotEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (47))) ;
      if (cond_2695.isBuiltAndTrue ()) {
        var_cas_unusedVariableCppNameSet.addAssign_operation (operand_2538->mFormalArgumentCppName) ;
      }
    }
  }
  GGS_uint  var_cas_temporaryVariableIndex = GGS_uint (0U) ;
  GGS_string var_cas_routineBody = GGS_string ("") ;
  var_cas_routineBody.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (54)) ;
  {
    GGS_semanticInstructionListForGeneration::cEnumerator enumerator_2869 (var_cas_inInstructionList, true) ;
    const GGS_semanticInstructionListForGeneration::cElement * operand_2869 = NULL ;
    while (((operand_2869 = enumerator_2869.nextObject ()))) {
      macroValidPointer (operand_2869) ;
      { typeCategoryMethod__semanticInstructionForGeneration__generateInstruction method = findCategoryMethod__semanticInstructionForGeneration__generateInstruction (operand_2869->mInstruction.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_2869->mInstruction (HERE), var_cas_temporaryVariableIndex, var_cas_unusedVariableCppNameSet, var_cas_routineBody COMMA_SOURCE_FILE_AT_LINE (56)) ;
        }
      }
    }
  }
  var_cas_routineBody.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (58)) ;
  var_cas_outGeneratedCode = ((GGS_string ("void ")).operator_concat (var_cas_inProcedureName)).operator_concat (GGS_string (" (")) ;
  const GGS_uint  var_cas_colRef = var_cas_outGeneratedCode.reader_currentColumn () ;
  {
    GGS_formalParameterListForGeneration::cEnumerator enumerator_3206 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalParameterListForGeneration::cElement * operand_3206 = NULL ;
    while (((operand_3206 = enumerator_3206.nextObject ()))) {
      macroValidPointer (operand_3206) ;
      switch (operand_3206->mFormalArgumentPassingMode.enumValue ()) {
      case GGS_formalArgumentPassingModeAST::enum_argumentConstantIn:
        {
        var_cas_outGeneratedCode.appendCString ("GALGASap_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3206->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (66))) ;
        var_cas_outGeneratedCode.appendCString (" ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentInOut:
        {
        var_cas_outGeneratedCode.appendCString ("GALGASap_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3206->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (68))) ;
        var_cas_outGeneratedCode.appendCString (" & ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentOut:
        {
        var_cas_outGeneratedCode.appendCString ("GALGASap_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3206->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (70))) ;
        var_cas_outGeneratedCode.appendCString (" & ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentIn:
        {
        var_cas_outGeneratedCode.appendCString ("GALGASap_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3206->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (72))) ;
        var_cas_outGeneratedCode.appendCString (" ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::kNotBuilt:
        break ;
      }
      const GGS_bool cond_3895 = var_cas_unusedVariableCppNameSet.reader_hasKey (operand_3206->mFormalArgumentCppName) ;
      if (cond_3895.isBuiltAndTrue ()) {
        var_cas_outGeneratedCode.appendCString ("/* ") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3206->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (" */") ;
      }else if (cond_3895.isBuiltAndFalse ()) {
        var_cas_outGeneratedCode.dotAssign_operation (operand_3206->mFormalArgumentCppName) ;
      }
      var_cas_outGeneratedCode.appendCString (",\n") ;
      var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (80)) ;
    }
  }
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inCompilerTypeName) ;
  var_cas_outGeneratedCode.appendCString (" * ") ;
  const GGS_bool cond_4272 = var_cas_unusedVariableCppNameSet.reader_hasKey (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (84))) ;
  if (cond_4272.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("/* ") ;
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (85))) ;
    var_cas_outGeneratedCode.appendCString (" */") ;
  }else if (cond_4272.isBuiltAndFalse ()) {
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (87))) ;
  }
  const GGS_bool cond_4512 = var_cas_inGenerateLocationArgs ;
  if (cond_4512.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("\n") ;
    var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (91)) ;
    var_cas_outGeneratedCode.appendCString ("COMMA_UNUSED_LOCATION_ARGS") ;
  }
  var_cas_outGeneratedCode.appendCString (")") ;
  const GGS_bool cond_4615 = var_cas_inProcedureIsConst ;
  if (cond_4615.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString (" const") ;
  }
  var_cas_outGeneratedCode.appendCString (" {\n") ;
  {
      GGS_uint var_cas_IDX (true, 0) ;
    GGS_formalParameterListForGeneration::cEnumerator enumerator_4711 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalParameterListForGeneration::cElement * operand_4711 = NULL ;
    while (((operand_4711 = enumerator_4711.nextObject ()))) {
      macroValidPointer (operand_4711) ;
      switch (operand_4711->mFormalArgumentPassingMode.enumValue ()) {
      case GGS_formalArgumentPassingModeAST::enum_argumentOut:
        {
        var_cas_outGeneratedCode.appendCString ("  ") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_4711->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (".drop () ; // Release 'out' argument\n") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentConstantIn:
      case GGS_formalArgumentPassingModeAST::enum_argumentIn:
      case GGS_formalArgumentPassingModeAST::enum_argumentInOut:
        {
        }
        break ;
      case GGS_formalArgumentPassingModeAST::kNotBuilt:
        break ;
      }
      var_cas_IDX.mValue ++ ;
    }
  }
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_routineBody) ;
  const GGS_bool cond_5176 = var_cas_inGenerateResetTemplateString ;
  if (cond_5176.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("  ") ;
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (111))) ;
    var_cas_outGeneratedCode.appendCString ("->resetTemplateString () ;\n") ;
  }
  var_cas_outGeneratedCode.appendCString ("}\n"
    "\n") ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE function_generateProcedure\n") ;
  #endif
  return var_cas_outGeneratedCode ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_generateProcedure (C_Compiler & inLexique,
                           const GGS_objectlist & inEffectiveParameterArray,
                           const GGS_location & inErrorLocation
                           COMMA_LOCATION_ARGS) {
  const GGS_string arg_0 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (0) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_formalParameterListForGeneration  arg_1 = GGS_formalParameterListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (1) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_semanticInstructionListForGeneration  arg_2 = GGS_semanticInstructionListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (2) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_bool arg_3 = GGS_bool::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (3) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_4 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (4) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_bool arg_5 = GGS_bool::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (5) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_bool arg_6 = GGS_bool::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (6) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string result = function_generateProcedure (inLexique,
                            arg_0,
                            arg_1,
                            arg_2,
                            arg_3,
                            arg_4,
                            arg_5,
                            arg_6
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

static const C_galgas_type_descriptorEX *
kArgumentTypeList_generateProcedure [7] = {& kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_formalParameterListForGeneration ,
                              & kTypeDescriptor_GGS_semanticInstructionListForGeneration ,
                              & kTypeDescriptor_GGS_bool,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_bool,
                              & kTypeDescriptor_GGS_bool} ;

const C_galgas_function_descriptorEX
kFunction_descriptor_generateProcedure ("generateProcedure",
                              functionForGenericCall_generateProcedure,
                              & kTypeDescriptor_GGS_string,
                              7,
                              kArgumentTypeList_generateProcedure) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of function "generateFunction"                *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string function_generateFunction (C_Compiler & inLexique,
                                const GGS_string  var_cas_inProcedureName,
                                const GGS_formalInputParameterListForGeneration   var_cas_inFormalArgumentList,
                                const GGS_semanticInstructionListForGeneration   var_cas_inInstructionList,
                                const GGS_string  var_cas_inCompilerTypeName,
                                const GGS_string  var_cas_inResultTypeName,
                                const GGS_string  var_cas_inResultVariableCppName COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER function_generateFunction at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_outGeneratedCode ;
  GGS_stringset  var_cas_unusedVariableCppNameSet = GGS_stringset ::constructor_emptySet () ;
  var_cas_unusedVariableCppNameSet.addAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (134))) ;
  {
    GGS_formalInputParameterListForGeneration::cEnumerator enumerator_6164 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalInputParameterListForGeneration::cElement * operand_6164 = NULL ;
    while (((operand_6164 = enumerator_6164.nextObject ()))) {
      macroValidPointer (operand_6164) ;
      var_cas_unusedVariableCppNameSet.addAssign_operation (operand_6164->mFormalArgumentCppName) ;
    }
  }
  GGS_uint  var_cas_temporaryVariableIndex = GGS_uint (0U) ;
  GGS_string var_cas_routineBody = GGS_string ("") ;
  var_cas_routineBody.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (142)) ;
  {
    GGS_semanticInstructionListForGeneration::cEnumerator enumerator_6394 (var_cas_inInstructionList, true) ;
    const GGS_semanticInstructionListForGeneration::cElement * operand_6394 = NULL ;
    while (((operand_6394 = enumerator_6394.nextObject ()))) {
      macroValidPointer (operand_6394) ;
      { typeCategoryMethod__semanticInstructionForGeneration__generateInstruction method = findCategoryMethod__semanticInstructionForGeneration__generateInstruction (operand_6394->mInstruction.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_6394->mInstruction (HERE), var_cas_temporaryVariableIndex, var_cas_unusedVariableCppNameSet, var_cas_routineBody COMMA_SOURCE_FILE_AT_LINE (144)) ;
        }
      }
    }
  }
  var_cas_routineBody.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (146)) ;
  var_cas_outGeneratedCode = ((GGS_string ("GALGASap_")).operator_concat (var_cas_inResultTypeName.reader_identifierRepresentation ())).operator_concat (GGS_string (" ")) ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inProcedureName) ;
  var_cas_outGeneratedCode.appendCString (" (") ;
  const GGS_uint  var_cas_colRef = var_cas_outGeneratedCode.reader_currentColumn () ;
  {
    GGS_formalInputParameterListForGeneration::cEnumerator enumerator_6809 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalInputParameterListForGeneration::cElement * operand_6809 = NULL ;
    while (((operand_6809 = enumerator_6809.nextObject ()))) {
      macroValidPointer (operand_6809) ;
      var_cas_outGeneratedCode.appendCString ("GALGASap_") ;
      var_cas_outGeneratedCode.dotAssign_operation (operand_6809->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (153))) ;
      var_cas_outGeneratedCode.appendCString (" & ") ;
      const GGS_bool cond_7053 = var_cas_unusedVariableCppNameSet.reader_hasKey (operand_6809->mFormalArgumentCppName) ;
      if (cond_7053.isBuiltAndTrue ()) {
        var_cas_outGeneratedCode.appendCString ("/* ") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_6809->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (" */") ;
      }else if (cond_7053.isBuiltAndFalse ()) {
        var_cas_outGeneratedCode.dotAssign_operation (operand_6809->mFormalArgumentCppName) ;
      }
      var_cas_outGeneratedCode.appendCString (",\n") ;
      var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (160)) ;
    }
  }
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inCompilerTypeName) ;
  var_cas_outGeneratedCode.appendCString (" * ") ;
  const GGS_bool cond_7430 = var_cas_unusedVariableCppNameSet.reader_hasKey (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (164))) ;
  if (cond_7430.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("/* ") ;
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (165))) ;
    var_cas_outGeneratedCode.appendCString (" */") ;
  }else if (cond_7430.isBuiltAndFalse ()) {
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (167))) ;
  }
  var_cas_outGeneratedCode.appendCString ("\n") ;
  var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (170)) ;
  var_cas_outGeneratedCode.appendCString ("COMMA_UNUSED_LOCATION_ARGS)") ;
  var_cas_outGeneratedCode.appendCString (" {\n") ;
  var_cas_outGeneratedCode.appendCString ("  GALGASap_") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inResultTypeName.reader_identifierRepresentation ()) ;
  var_cas_outGeneratedCode.appendCString (" ") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inResultVariableCppName) ;
  var_cas_outGeneratedCode.appendCString (" ; // Returned variable\n") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_routineBody) ;
  var_cas_outGeneratedCode.appendCString ("//---\n") ;
  var_cas_outGeneratedCode.appendCString ("  return ") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inResultVariableCppName) ;
  var_cas_outGeneratedCode.appendCString (" ;\n") ;
  var_cas_outGeneratedCode.appendCString ("}\n"
    "\n") ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE function_generateFunction\n") ;
  #endif
  return var_cas_outGeneratedCode ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_generateFunction (C_Compiler & inLexique,
                           const GGS_objectlist & inEffectiveParameterArray,
                           const GGS_location & inErrorLocation
                           COMMA_LOCATION_ARGS) {
  const GGS_string arg_0 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (0) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_formalInputParameterListForGeneration  arg_1 = GGS_formalInputParameterListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (1) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_semanticInstructionListForGeneration  arg_2 = GGS_semanticInstructionListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (2) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_3 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (3) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_4 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (4) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_5 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (5) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string result = function_generateFunction (inLexique,
                            arg_0,
                            arg_1,
                            arg_2,
                            arg_3,
                            arg_4,
                            arg_5
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

static const C_galgas_type_descriptorEX *
kArgumentTypeList_generateFunction [6] = {& kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_formalInputParameterListForGeneration ,
                              & kTypeDescriptor_GGS_semanticInstructionListForGeneration ,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_string} ;

const C_galgas_function_descriptorEX
kFunction_descriptor_generateFunction ("generateFunction",
                              functionForGenericCall_generateFunction,
                              & kTypeDescriptor_GGS_string,
                              6,
                              kArgumentTypeList_generateFunction) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of wrapper 'typeGenerationTemplate'             *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_typeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_typeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_typeGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_typeGenerationTemplate_0,
  0,
  gWrapperAllDirectories_typeGenerationTemplate_0
) ;

//---------------------------------------------------------------------------*
//                                                                           *
//'unifiedClassBodyForType' template of 'typeGenerationTemplate' filewrapper *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_bool& var_cas_IS_CONCRETE,
                                const GGS_constructorMap & var_cas_CONSTRUCTOR_MAP,
                                const GGS_readerMap & var_cas_READER_MAP,
                                const GGS_modifierMap & var_cas_MODIFIER_MAP,
                                const GGS_instanceMethodMap & var_cas_INSTANCE_METHOD_MAP,
                                const GGS_classMethodMap & var_cas_CLASS_METHOD_MAP,
                                const GGS_enumerationDescriptorList & var_cas_ENUMERATION_DESCRIPTOR_LIST,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_unifiedTypeMapProxyList & var_cas_ADD_ASSIGN_ARGUMENT_LIST,
                                const GGS_withAccessorMap & var_cas_WITH_ACCESSOR_MAP) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_IS_CONCRETE.isBuilt ()
    && var_cas_CONSTRUCTOR_MAP.isBuilt ()
    && var_cas_READER_MAP.isBuilt ()
    && var_cas_MODIFIER_MAP.isBuilt ()
    && var_cas_INSTANCE_METHOD_MAP.isBuilt ()
    && var_cas_CLASS_METHOD_MAP.isBuilt ()
    && var_cas_ENUMERATION_DESCRIPTOR_LIST.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_ADD_ASSIGN_ARGUMENT_LIST.isBuilt ()
    && var_cas_WITH_ACCESSOR_MAP.isBuilt () ;
  if (isBuilt) {
    if ((var_cas_CONSTRUCTOR_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- GALGAS constructors\n" ;
      GGS_constructorMap::cEnumerator enumerator_127 (var_cas_CONSTRUCTOR_MAP, true) ;
      const GGS_constructorMap::cElement * operand_127 = NULL ;
      while (((operand_127 = enumerator_127.nextObject ()))) {
        macroValidPointer (operand_127) ;
        result << "  public : static GALGAS_" ;
        result << operand_127->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (5)) ;
        result << " constructor_" ;
        result << operand_127->mKey.ggs_string ().reader_identifierRepresentation () ;
        result << " (" ;
        columnMarker = result.currentColumn () ;
        GGS_unifiedTypeMapProxyList::cEnumerator enumerator_292 (operand_127->mInfo.mArgumentTypeList, true) ;
        const GGS_unifiedTypeMapProxyList::cElement * operand_292 = NULL ;
        { GGS_uint var_cas_IDX (true, 0) ;
      while (((operand_292 = enumerator_292.nextObject ()))) {
        macroValidPointer (operand_292) ;
        result << "const GALGAS_" ;
        result << operand_292->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (7)) ;
        result << " & inOperand" ;
        result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (7)) ;
        if (enumerator_292.hasNextObject ()) {
          result << ",\n" ;
          result.appendSpacesUntilColumn (columnMarker) ;
        }
        var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
      }
    }
    if ((operand_127->mInfo.mHasCompilerArgument).operator_and ((operand_127->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
      result << ",\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "C_Compiler * inCompiler\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else if (operand_127->mInfo.mHasCompilerArgument.boolValue ()) {
      result << "C_Compiler * inCompiler\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else if ((operand_127->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
      result << "\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
      result << "LOCATION_ARGS) ;\n"
        "\n" ;
    }
  }
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateCopyConstructorAndAssignmentOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (24)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- Handle copy\n"
    "  public : GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " (const GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " & inSource) ;\n"
    "  public : GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " & operator = (const GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " & inSource) ;\n"
    "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryShiftOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (30)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- << and >> shift operators\n"
    "public : VIRTUAL_IN_DEBUG GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " left_shift_operation (" ;
  columnMarker = result.currentColumn () ;
  result << "const GALGAS_uint & inShiftOperand\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "COMMA_LOCATION_ARGS) const ;\n"
    "\n"
    "public : VIRTUAL_IN_DEBUG GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " right_shift_operation (" ;
  columnMarker = result.currentColumn () ;
  result << "const GALGAS_uint & inShiftOperand\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "COMMA_LOCATION_ARGS) const ;\n"
    "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_dotAssignOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (38)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- .= operator\n"
    "  public : VIRTUAL_IN_DEBUG void dotAssign_operation (const GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " inOperand\n"
    "                                                      COMMA_LOCATION_ARGS) ;\n"
    "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryAndOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (44)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- & operator\n"
    "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " operator_and (" ;
  columnMarker = result.currentColumn () ;
  result << "const GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " & inOperand\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "COMMA_LOCATION_ARGS) const ;\n"
    "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryOrOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (50)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- | operator\n"
    "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " operator_or (" ;
  columnMarker = result.currentColumn () ;
  result << "const GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " & inOperand\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "COMMA_LOCATION_ARGS) const ;\n"
    "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryXorOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (56)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- ^ operator\n"
    "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " operator_xor (" ;
  columnMarker = result.currentColumn () ;
  result << "const GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " & inOperand\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "COMMA_LOCATION_ARGS) const ;\n"
    "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryNotOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (62)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- not operator\n"
    "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " operator_not (LOCATION_ARGS) const ;\n"
    "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryTildeOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (67)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- ~ operator\n"
    "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " operator_tilde (LOCATION_ARGS) const ;\n"
    "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryConcatOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (72)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- . (concat) operator\n"
    "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " operator_concat (" ;
  columnMarker = result.currentColumn () ;
  result << "const GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " & inOperand\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "COMMA_LOCATION_ARGS) const ;\n"
    "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryAddOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (78)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- + operator\n"
    "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " add_operation (" ;
  columnMarker = result.currentColumn () ;
  result << "const GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " & inOperand,\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "C_Compiler * inCompiler\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "COMMA_LOCATION_ARGS) const ;\n"
    "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binarySubOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (85)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- - operator\n"
    "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " substract_operation (" ;
  columnMarker = result.currentColumn () ;
  result << "const GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " & inOperand,\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "C_Compiler * inCompiler\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "COMMA_LOCATION_ARGS) const ;\n"
    "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryMulOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (92)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- * operator\n"
    "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " multiply_operation (" ;
  columnMarker = result.currentColumn () ;
  result << "const GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " & inOperand,\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "C_Compiler * inCompiler\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "COMMA_LOCATION_ARGS) const ;\n"
    "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryDivOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (99)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- / operator\n"
    "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " divide_operation (" ;
  columnMarker = result.currentColumn () ;
  result << "const GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " & inOperand,\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "C_Compiler * inCompiler\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "COMMA_LOCATION_ARGS) const ;\n"
    "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryModOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (106)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- mod operator\n"
    "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " modulo_operation (" ;
  columnMarker = result.currentColumn () ;
  result << "const GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " & inOperand,\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "C_Compiler * inCompiler\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "COMMA_LOCATION_ARGS) const ;\n"
    "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryMinusOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (113)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- unary - operator\n"
    "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " operator_unary_minus (" ;
  columnMarker = result.currentColumn () ;
  result << "C_Compiler * inCompiler\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "COMMA_LOCATION_ARGS) const ;\n"
    "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (119)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- ++, -- operators\n"
    "  public : VIRTUAL_IN_DEBUG void increment_operation (" ;
  columnMarker = result.currentColumn () ;
  result << "C_Compiler * inCompiler\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "COMMA_LOCATION_ARGS) ;\n"
    "\n"
    "  public : VIRTUAL_IN_DEBUG void decrement_operation (" ;
  columnMarker = result.currentColumn () ;
  result << "C_Compiler * inCompiler\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "COMMA_LOCATION_ARGS) ;\n"
    "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (126)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- Implementation of reader 'description'\n"
    "  public : VIRTUAL_IN_DEBUG void log (const char * inMessage) const ;\n"
    "\n"
    "  public : VIRTUAL_IN_DEBUG void description (C_String & ioString,\n"
    "                                              const PMSInt32 inIndentation) const ;\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_doNotGenererateObjectCompare (inLexique COMMA_SOURCE_FILE_AT_LINE (133)))).operator_isEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- Comparison\n"
    "  public : static enumComparisonResult objectCompare (const GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " & inOperand1,\n"
    "                                                      const GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " & inOperand2) ;\n" ;
}else {
}
result << "\n"
  "//--------------------------------- Modifiers\n" ;
GGS_modifierMap::cEnumerator enumerator_6554 (var_cas_MODIFIER_MAP, true) ;
const GGS_modifierMap::cElement * operand_6554 = NULL ;
while (((operand_6554 = enumerator_6554.nextObject ()))) {
  macroValidPointer (operand_6554) ;
  if ((operand_6554->mInfo.mQualifier).operator_isNotEqual (GGS_methodQualifier::constructor_isInherited (inLexique COMMA_SOURCE_FILE_AT_LINE (144))).boolValue ()) {
    result << "  protected : void modifier_" ;
    result << operand_6554->mKey.ggs_string ().reader_identifierRepresentation () ;
    result << " (" ;
    columnMarker = result.currentColumn () ;
    GGS_formalParameterSignature::cEnumerator enumerator_6712 (operand_6554->mInfo.mParameterList, true) ;
    const GGS_formalParameterSignature::cElement * operand_6712 = NULL ;
    { GGS_uint var_cas_IDX (true, 0) ;
  while (((operand_6712 = enumerator_6712.nextObject ()))) {
    macroValidPointer (operand_6712) ;
    if ((operand_6712->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (147))).boolValue ()) {
      result << "GALGAS_" ;
      result << operand_6712->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (148)) ;
      result << " constinArgument" ;
      result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (148)) ;
    }else if ((operand_6712->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (149))).boolValue ()) {
      result << "GALGAS_" ;
      result << operand_6712->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (150)) ;
      result << " & ioArgument" ;
      result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (150)) ;
    }else if ((operand_6712->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (151))).boolValue ()) {
      result << "GALGAS_" ;
      result << operand_6712->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (152)) ;
      result << " & outArgument" ;
      result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (152)) ;
    }else {
      result << "GALGAS_" ;
      result << operand_6712->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (154)) ;
      result << " inArgument" ;
      result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (154)) ;
    }
    if (enumerator_6712.hasNextObject ()) {
      result << ",\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
    }
    var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
  }
}
if ((operand_6554->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
  if (operand_6554->mInfo.mHasCompilerArgument.boolValue ()) {
    result << "C_Compiler * inCompiler\n" ;
    result.appendSpacesUntilColumn (columnMarker) ;
    result << "COMMA_LOCATION_ARGS" ;
  }else {
    result.appendSpacesUntilColumn (columnMarker) ;
    result << "LOCATION_ARGS" ;
  }
}else {
  if (operand_6554->mInfo.mHasCompilerArgument.boolValue ()) {
    result << ",\n" ;
    result.appendSpacesUntilColumn (columnMarker) ;
    result << "C_Compiler * inCompiler\n" ;
    result.appendSpacesUntilColumn (columnMarker) ;
    result << "COMMA_LOCATION_ARGS" ;
  }else {
    result << "\n" ;
    result.appendSpacesUntilColumn (columnMarker) ;
    result << "COMMA_LOCATION_ARGS" ;
  }
}
result << ") ;\n"
  "\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Instance Methods\n" ;
GGS_instanceMethodMap::cEnumerator enumerator_7971 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_7971 = NULL ;
while (((operand_7971 = enumerator_7971.nextObject ()))) {
macroValidPointer (operand_7971) ;
if ((operand_7971->mInfo.mQualifier).operator_isNotEqual (GGS_methodQualifier::constructor_isInherited (inLexique COMMA_SOURCE_FILE_AT_LINE (180))).boolValue ()) {
result << "  protected : virtual void method_" ;
result << operand_7971->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_8135 (operand_7971->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_8135 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8135 = enumerator_8135.nextObject ()))) {
macroValidPointer (operand_8135) ;
if ((operand_8135->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (183))).boolValue ()) {
  result << "GALGAS_" ;
  result << operand_8135->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (184)) ;
  result << " constinArgument" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (184)) ;
}else if ((operand_8135->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (185))).boolValue ()) {
  result << "GALGAS_" ;
  result << operand_8135->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (186)) ;
  result << " & ioArgument" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (186)) ;
}else if ((operand_8135->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (187))).boolValue ()) {
  result << "GALGAS_" ;
  result << operand_8135->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (188)) ;
  result << " & outArgument" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (188)) ;
}else {
  result << "GALGAS_" ;
  result << operand_8135->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (190)) ;
  result << " inArgument" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (190)) ;
}
if (enumerator_8135.hasNextObject ()) {
  result << ",\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_7971->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_7971->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_7971->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") " ;
if (((operand_7971->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (210)))).operator_or ((operand_7971->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isOverridingAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (210)))).boolValue ()) {
result << "= 0 " ;
}else {
}
result << ";\n"
  "\n" ;
}else {
}
}
result << "//--------------------------------- Class Methods\n" ;
GGS_classMethodMap::cEnumerator enumerator_9534 (var_cas_CLASS_METHOD_MAP, true) ;
const GGS_classMethodMap::cElement * operand_9534 = NULL ;
while (((operand_9534 = enumerator_9534.nextObject ()))) {
macroValidPointer (operand_9534) ;
result << "  public : static void class_method_" ;
result << operand_9534->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_9641 (operand_9534->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_9641 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9641 = enumerator_9641.nextObject ()))) {
macroValidPointer (operand_9641) ;
if ((operand_9641->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (221))).boolValue ()) {
result << "GALGAS_" ;
result << operand_9641->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (222)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (222)) ;
}else if ((operand_9641->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (223))).boolValue ()) {
result << "GALGAS_" ;
result << operand_9641->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (224)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (224)) ;
}else if ((operand_9641->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (225))).boolValue ()) {
result << "GALGAS_" ;
result << operand_9641->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (226)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (226)) ;
}else {
result << "GALGAS_" ;
result << operand_9641->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (228)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (228)) ;
}
if (enumerator_9641.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_9534->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_9534->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_9534->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") ;\n"
  "\n" ;
}
result << "\n"
  "//--------------------------------- Readers\n" ;
GGS_readerMap::cEnumerator enumerator_10819 (var_cas_READER_MAP, true) ;
const GGS_readerMap::cElement * operand_10819 = NULL ;
while (((operand_10819 = enumerator_10819.nextObject ()))) {
macroValidPointer (operand_10819) ;
if ((((operand_10819->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (253)))).operator_or ((operand_10819->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (253))))).operator_or ((operand_10819->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasicFinal (inLexique COMMA_SOURCE_FILE_AT_LINE (253)))).boolValue ()) {
result << "  public :" ;
if ((operand_10819->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasicFinal (inLexique COMMA_SOURCE_FILE_AT_LINE (255))).boolValue ()) {
result << " VIRTUAL_IN_DEBUG " ;
}else {
result << " virtual " ;
}
result << "GALGAS_" ;
result << operand_10819->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (260)) ;
result << " reader_" ;
result << operand_10819->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_11256 (operand_10819->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_11256 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_11256 = enumerator_11256.nextObject ()))) {
macroValidPointer (operand_11256) ;
result << "const GALGAS_" ;
result << operand_11256->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (262)) ;
result << " & constinOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (262)) ;
if (enumerator_11256.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_10819->mInfo.mArgumentTypeList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_10819->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
}else {
if (operand_10819->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") const ;\n"
  "\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Introspection\n"
  "  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * typeDescriptor (void) const ;\n" ;
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateEnumerationHelperMethods (inLexique COMMA_SOURCE_FILE_AT_LINE (286)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Enumeration helper methods\n"
  "  protected : virtual void populateEnumerationArray (capCollectionElementArray & inEnumerationArray,\n"
  "                                                     const bool inAscending) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateSortedListComparisonMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (293)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Abstract method for comparing two sorted list elements\n"
  "  protected : virtual enumComparisonResult compareSortedListElements (const capCollectionElement & inLeftAttributeList,\n"
  "                                                                      const capCollectionElement & inRightAttributeList) const ;\n"
  "\n" ;
}else {
}
if ((var_cas_WITH_ACCESSOR_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- 'with' accessors\n" ;
GGS_withAccessorMap::cEnumerator enumerator_12840 (var_cas_WITH_ACCESSOR_MAP, true) ;
const GGS_withAccessorMap::cElement * operand_12840 = NULL ;
while (((operand_12840 = enumerator_12840.nextObject ()))) {
macroValidPointer (operand_12840) ;
result << "  friend cCollectionElement * readWriteAccessForWithInstruction_" ;
result << operand_12840->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & ioMap,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_12840->mInfo.mArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (305)) ;
result << " & inKey\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
}else {
}
if ((var_cas_ENUMERATION_DESCRIPTOR_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Friend\n"
  "\n"
  "  friend class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_cEnumerator ;\n" ;
}else {
}
result << " \n"
  "} ; // End of GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " class\n"
  "\n" ;
if ((var_cas_ENUMERATION_DESCRIPTOR_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "//   Enumerator declaration                                                  *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_cEnumerator : public AC_GALGAS_Enumerator {\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_cEnumerator (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inEnumeratedObject,\n"
  "     " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const bool inAscending) ;\n"
  "\n"
  "//--- Current element access\n" ;
GGS_enumerationDescriptorList::cEnumerator enumerator_13939 (var_cas_ENUMERATION_DESCRIPTOR_LIST, true) ;
const GGS_enumerationDescriptorList::cElement * operand_13939 = NULL ;
while (((operand_13939 = enumerator_13939.nextObject ()))) {
macroValidPointer (operand_13939) ;
result << "  public : GALGAS_" ;
result << operand_13939->mEnumeratedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (327)) ;
result << " current_" ;
result << operand_13939->mEnumerationName.reader_identifierRepresentation () ;
result << " (void) const ;\n" ;
}
result << "} ;\n" ;
}else {
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "\n" ;
if ((var_cas_WITH_ACCESSOR_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- 'with' accessors\n" ;
GGS_withAccessorMap::cEnumerator enumerator_14401 (var_cas_WITH_ACCESSOR_MAP, true) ;
const GGS_withAccessorMap::cElement * operand_14401 = NULL ;
while (((operand_14401 = enumerator_14401.nextObject ()))) {
macroValidPointer (operand_14401) ;
result << "cCollectionElement * readWriteAccessForWithInstruction_" ;
result << operand_14401->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & ioMap,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_14401->mInfo.mArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (342)) ;
result << " & inKey\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
}else {
}
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   'structTypeHeader' template of 'typeGenerationTemplate' filewrapper     *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_structTypeHeader (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string (" struct")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "\n"
  "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
  "  : public GALGAS__root\n"
  "#endif\n"
  " {\n"
  "//--------------------------------- Public data members\n" ;
GGS_typedAttributeList::cEnumerator enumerator_580 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_580 = NULL ;
while (((operand_580 = enumerator_580.nextObject ()))) {
macroValidPointer (operand_580) ;
result << "  public : GALGAS_" ;
result << operand_580->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (15)) ;
result << " mAttribute_" ;
result << operand_580->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "\n"
  "//--------------------------------- Accessors\n"
  "  public : VIRTUAL_IN_DEBUG bool isValid (void) const ;\n"
  "  public : VIRTUAL_IN_DEBUG void drop (void) ;\n"
  "\n"
  "//--------------------------------- Default constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n"
  "//--------------------------------- Virtual destructor (in debug mode)\n"
  "  #ifndef DO_NOT_GENERATE_CHECKINGS\n"
  "    public : virtual ~ GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "  #endif\n"
  "\n"
  "//--------------------------------- Native constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1277 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1277 = NULL ;
while (((operand_1277 = enumerator_1277.nextObject ()))) {
macroValidPointer (operand_1277) ;
result << "const GALGAS_" ;
result << operand_1277->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (33)) ;
result << " & in_" ;
result << operand_1277->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1277.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << ") ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'structTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_structTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) :\n" ;
GGS_typedAttributeList::cEnumerator enumerator_170 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_170 = NULL ;
while (((operand_170 = enumerator_170.nextObject ()))) {
macroValidPointer (operand_170) ;
result << "mAttribute_" ;
result << operand_170->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ()" ;
if (enumerator_170.hasNextObject ()) {
result << ",\n" ;
}
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "//GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::~GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) {\n"
  "//}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "/* GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) :\n" ;
GGS_typedAttributeList::cEnumerator enumerator_626 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_626 = NULL ;
while (((operand_626 = enumerator_626.nextObject ()))) {
macroValidPointer (operand_626) ;
result << "//mAttribute_" ;
result << operand_626->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (inSource.mAttribute_" ;
result << operand_626->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
if (enumerator_626.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << " {\n"
  "} */\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_961 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_961 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_961 = enumerator_961.nextObject ()))) {
macroValidPointer (operand_961) ;
result << "const GALGAS_" ;
result << operand_961->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (31)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (31)) ;
if (enumerator_961.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") :\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1124 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1124 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1124 = enumerator_1124.nextObject ()))) {
macroValidPointer (operand_1124) ;
result << "mAttribute_" ;
result << operand_1124->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << ")" ;
if (enumerator_1124.hasNextObject ()) {
result << ",\n" ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "/* GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator = (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1480 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1480 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1480 = enumerator_1480.nextObject ()))) {
macroValidPointer (operand_1480) ;
result << "  mAttribute_" ;
result << operand_1480->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " = inOperand.mAttribute_" ;
result << operand_1480->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  return *this ;\n"
  "} */\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1842 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1842 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1842 = enumerator_1842.nextObject ()))) {
macroValidPointer (operand_1842) ;
result << "const GALGAS_" ;
result << operand_1842->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (54)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (54)) ;
if (enumerator_1842.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " \n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (" ;
GGS_typedAttributeList::cEnumerator enumerator_2082 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2082 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2082 = enumerator_2082.nextObject ()))) {
macroValidPointer (operand_2082) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (60)) ;
result << ".isValid ()" ;
if (enumerator_2082.hasNextObject ()) {
result << " && " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_2234 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2234 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2234 = enumerator_2234.nextObject ()))) {
macroValidPointer (operand_2234) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (66)) ;
if (enumerator_2234.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::~ GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::log (const char * inMessage) const {\n"
  "  printf (\"LOGGING '%s': \", inMessage) ;\n"
  "  C_String s ;\n"
  "  description (s, 0) ;\n"
  "  printf (\"%s\\n\", s.cString (HERE)) ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 inIndentation) const {\n"
  "  ioString << \"<struct @" ;
result << var_cas_TYPE_NAME ;
result << ":\" ;\n"
  "  if (! isValid ()) {\n"
  "    ioString << \" not built\" ;\n"
  "  }else{\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3101 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3101 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3101 = enumerator_3101.nextObject ()))) {
macroValidPointer (operand_3101) ;
result << "    mAttribute_" ;
result << operand_3101->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".description (ioString, inIndentation+1) ;\n" ;
if (enumerator_3101.hasNextObject ()) {
result << "    ioString << \", \" ;\n" ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "  ioString << \">\" ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand1,\n"
  "                        " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand2) {\n"
  "   enumComparisonResult result = kOperandEqual ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3639 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3639 = NULL ;
while (((operand_3639 = enumerator_3639.nextObject ()))) {
macroValidPointer (operand_3639) ;
result << "  if (result == kOperandEqual) {\n"
  "    result = GALGAS_" ;
result << operand_3639->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (113)) ;
result << "::objectCompare (inOperand1.mAttribute_" ;
result << operand_3639->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ", inOperand2.mAttribute_" ;
result << operand_3639->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "bool GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::isValid (void) const {\n"
  "  return " ;
GGS_typedAttributeList::cEnumerator enumerator_4134 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4134 = NULL ;
while (((operand_4134 = enumerator_4134.nextObject ()))) {
macroValidPointer (operand_4134) ;
result << "mAttribute_" ;
result << operand_4134->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
if (enumerator_4134.hasNextObject ()) {
result << " && " ;
}
}
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::drop (void) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4406 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4406 = NULL ;
while (((operand_4406 = enumerator_4406.nextObject ()))) {
macroValidPointer (operand_4406) ;
result << "  mAttribute_" ;
result << operand_4406->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".drop () ;\n" ;
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "/* GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_object & inSource) :\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4695 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4695 = NULL ;
while (((operand_4695 = enumerator_4695.nextObject ()))) {
macroValidPointer (operand_4695) ;
result << "mAttribute_" ;
result << operand_4695->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ()" ;
if (enumerator_4695.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << " {\n"
  "  const GALGAS_object * object = inSource.ptrNoVerif () ;\n"
  "  if (NULL != object) {\n"
  "    macroValidObject (object, const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) object ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_5050 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5050 = NULL ;
while (((operand_5050 = enumerator_5050.nextObject ()))) {
macroValidPointer (operand_5050) ;
result << "    mAttribute_" ;
result << operand_5050->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " = p->mAttribute_" ;
result << operand_5050->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "  }\n"
  "} */\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "/* GALGAS_object GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::embedObject (void) const {\n"
  "  GALGAS_object * result = NULL ;\n"
  "  if (isValid ()) {\n"
  "    macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_5500 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5500 = NULL ;
while (((operand_5500 = enumerator_5500.nextObject ()))) {
macroValidPointer (operand_5500) ;
result << "mAttribute_" ;
result << operand_5500->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_5500.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_HERE)) ;\n"
  "  }\n"
  "  return GALGAS_object (result) ;\n"
  "} */\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    'listTypeHeader' template of 'typeGenerationTemplate' filewrapper      *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_listTypeHeader (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string (" list")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public GALGAS_list {\n"
  "//--------------------------------- Default constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n"
  "//--------------------------------- Handle copy\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) ;\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & operator = (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) ;\n"
  "\n"
  "//--------------------------------- += operator\n"
  "  public : VIRTUAL_IN_DEBUG void addAssign_operation (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_916 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_916 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_916 = enumerator_916.nextObject ()))) {
macroValidPointer (operand_916) ;
result << "const GALGAS_" ;
result << operand_916->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (18)) ;
result << " inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (18)) ;
if (enumerator_916.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'listTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_listTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Class for element of '@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string ("' list")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public cCollectionElement {\n"
  "//--- List attributes\n" ;
GGS_typedAttributeList::cEnumerator enumerator_549 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_549 = NULL ;
while (((operand_549 = enumerator_549.nextObject ()))) {
macroValidPointer (operand_549) ;
result << "  public : GALGAS_" ;
result << operand_549->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
result << " mAttribute_" ;
result << operand_549->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "//--- Constructor\n"
  "  public : cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_801 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_801 = NULL ;
while (((operand_801 = enumerator_801.nextObject ()))) {
macroValidPointer (operand_801) ;
result << "const GALGAS_" ;
result << operand_801->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (17)) ;
result << " & in_" ;
result << operand_801->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_801.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Virtual method for comparing elements\n"
  "  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) ;\n"
  "\n"
  "//--- Virtual method that checks that all attributes are valid\n"
  "  public : virtual bool isValid (void) const ;\n"
  "\n"
  "//--- Virtual method that returns a copy of current object\n"
  "  public : virtual cCollectionElement * copy (void) ;\n"
  "\n"
  "//--- Description\n"
  " public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1651 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1651 = NULL ;
while (((operand_1651 = enumerator_1651.nextObject ()))) {
macroValidPointer (operand_1651) ;
result << "const GALGAS_" ;
result << operand_1651->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (40)) ;
result << " & in_" ;
result << operand_1651->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1651.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n"
  "cCollectionElement (THERE)" ;
GGS_typedAttributeList::cEnumerator enumerator_1885 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1885 = NULL ;
while (((operand_1885 = enumerator_1885.nextObject ()))) {
macroValidPointer (operand_1885) ;
result << ",\n"
  "mAttribute_" ;
result << operand_1885->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (in_" ;
result << operand_1885->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "bool cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::isValid (void) const {\n"
  "  return " ;
GGS_typedAttributeList::cEnumerator enumerator_2213 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2213 = NULL ;
while (((operand_2213 = enumerator_2213.nextObject ()))) {
macroValidPointer (operand_2213) ;
result << "mAttribute_" ;
result << operand_2213->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
if (enumerator_2213.hasNextObject ()) {
result << " && " ;
}
}
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cCollectionElement * cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::copy (void) {\n"
  "  cCollectionElement * result = NULL ;\n"
  "  macroMyNew (result, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_2620 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2620 = NULL ;
while (((operand_2620 = enumerator_2620.nextObject ()))) {
macroValidPointer (operand_2620) ;
result << "mAttribute_" ;
result << operand_2620->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_2620.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_HERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2993 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2993 = NULL ;
while (((operand_2993 = enumerator_2993.nextObject ()))) {
macroValidPointer (operand_2993) ;
result << "// mAttribute_" ;
result << operand_2993->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".description (ioString, inIndentation) ;\n" ;
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::compare (const cCollectionElement * inOperand) {\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operand = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inOperand ;\n"
  "  enumComparisonResult result = kOperandEqual ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3486 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3486 = NULL ;
while (((operand_3486 = enumerator_3486.nextObject ()))) {
macroValidPointer (operand_3486) ;
result << "  if (kOperandEqual == result) {\n"
  "    result = GALGAS_" ;
result << operand_3486->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (92)) ;
result << "::objectCompare (mAttribute_" ;
result << operand_3486->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ", operand->mAttribute_" ;
result << operand_3486->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const C_galgas_type_descriptor * kFieldList_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (100)) ;
result << "] = {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4021 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4021 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4021 = enumerator_4021.nextObject ()))) {
macroValidPointer (operand_4021) ;
result << "  & kTypeDescriptor_GALGAS_" ;
result << operand_4021->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (102)) ;
if (enumerator_4021.hasNextObject ()) {
result << ",\n" ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_list (kFieldList_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_listWithValue (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_4850 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4850 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4850 = enumerator_4850.nextObject ()))) {
macroValidPointer (operand_4850) ;
result << "GALGAS_" ;
result << operand_4850->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (126)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (126)) ;
if (enumerator_4850.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result (constructor_emptyList (THERE)) ;\n"
  "  cCollectionElement * p = NULL ;\n"
  "  macroMyNew (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_5199 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5199 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5199 = enumerator_5199.nextObject ()))) {
macroValidPointer (operand_5199) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (134)) ;
if (enumerator_5199.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "  capCollectionElement attributes (p) ;\n"
  "  result.ptr (HERE)->addObject (attributes) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (LOCATION_ARGS) {\n"
  "  if (ptr (HERE)->retainCount () > 1) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " newList (constructor_emptyList (THERE)) ;\n"
  "    newList.ptr (HERE)->copyFrom (ptr (HERE)) ;\n"
  "    *this = newList ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::addAssign_operation (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_5885 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5885 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5885 = enumerator_5885.nextObject ()))) {
macroValidPointer (operand_5885) ;
result << "const GALGAS_" ;
result << operand_5885->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (157)) ;
result << " inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (157)) ;
if (enumerator_5885.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (isValid ()) {\n"
  "    insulate (THERE) ;\n"
  "    cCollectionElement * p = NULL ;\n"
  "    macroMyNew (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_6220 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6220 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6220 = enumerator_6220.nextObject ()))) {
macroValidPointer (operand_6220) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
if (enumerator_6220.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "    capCollectionElement attributes (p) ;\n"
  "    ptr (HERE)->addObject (attributes) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_prependValue (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_6569 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6569 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6569 = enumerator_6569.nextObject ()))) {
macroValidPointer (operand_6569) ;
result << "GALGAS_" ;
result << operand_6569->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (179)) ;
result << " inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (179)) ;
if (enumerator_6569.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (" ;
GGS_typedAttributeList::cEnumerator enumerator_6769 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6769 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6769 = enumerator_6769.nextObject ()))) {
macroValidPointer (operand_6769) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (185)) ;
result << ".isValid ()" ;
if (enumerator_6769.hasNextObject ()) {
result << " && " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "    cCollectionElement * p = NULL ;\n"
  "    macroMyNew (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_6991 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6991 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6991 = enumerator_6991.nextObject ()))) {
macroValidPointer (operand_6991) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (192)) ;
if (enumerator_6991.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "    capCollectionElement attributes (p) ;\n"
  "    prependAttributeArray (attributes) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popFirst (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_7336 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7336 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7336 = enumerator_7336.nextObject ()))) {
macroValidPointer (operand_7336) ;
result << "GALGAS_" ;
result << operand_7336->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (205)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (205)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement attributes ;\n"
  "  removeFirstObject (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_7767 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7767 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7767 = enumerator_7767.nextObject ()))) {
macroValidPointer (operand_7767) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (215)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_7945 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7945 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7945 = enumerator_7945.nextObject ()))) {
macroValidPointer (operand_7945) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (221)) ;
result << " = p->mAttribute_" ;
result << operand_7945->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popLast (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_8243 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8243 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8243 = enumerator_8243.nextObject ()))) {
macroValidPointer (operand_8243) ;
result << "GALGAS_" ;
result << operand_8243->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (230)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (230)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement attributes ;\n"
  "  removeLastObject (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_8673 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8673 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8673 = enumerator_8673.nextObject ()))) {
macroValidPointer (operand_8673) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (240)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_8851 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8851 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8851 = enumerator_8851.nextObject ()))) {
macroValidPointer (operand_8851) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (246)) ;
result << " = p->mAttribute_" ;
result << operand_8851->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_first (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_9145 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9145 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9145 = enumerator_9145.nextObject ()))) {
macroValidPointer (operand_9145) ;
result << "GALGAS_" ;
result << operand_9145->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (255)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (255)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement attributes ;\n"
  "  readFirst (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_9568 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9568 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9568 = enumerator_9568.nextObject ()))) {
macroValidPointer (operand_9568) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (265)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_9746 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9746 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9746 = enumerator_9746.nextObject ()))) {
macroValidPointer (operand_9746) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (271)) ;
result << " = p->mAttribute_" ;
result << operand_9746->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_last (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_10039 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10039 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10039 = enumerator_10039.nextObject ()))) {
macroValidPointer (operand_10039) ;
result << "GALGAS_" ;
result << operand_10039->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (280)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (280)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement attributes ;\n"
  "  readLast (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_10461 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10461 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10461 = enumerator_10461.nextObject ()))) {
macroValidPointer (operand_10461) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (290)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_10639 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10639 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10639 = enumerator_10639.nextObject ()))) {
macroValidPointer (operand_10639) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (296)) ;
result << " = p->mAttribute_" ;
result << operand_10639->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator_concat (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n"
  "                     " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (isValid () && inOperand.isValid ()) {\n"
  "    result = *this ;\n"
  "    result.ptr (HERE)->appendList (inOperand.ptr (HERE)) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_subListWithRange (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_uint & inOperand0,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_uint & inOperand1,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (inOperand0.isValid () && inOperand1.isValid ()) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (THERE) ;\n"
  "    const bool ok = subListWithRange (result.ptr (HERE), inOperand0, inOperand1, inCompiler COMMA_THERE) ;\n"
  "    if (! ok) {\n"
  "      result.drop () ;\n"
  "    }\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_subListFromIndex (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_uint & inIndex,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (inIndex.isValid ()) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (THERE) ;\n"
  "    const bool ok = subListFromIndex (result.ptr (HERE), inIndex, inCompiler COMMA_THERE) ;\n"
  "    if (! ok) {\n"
  "      result.drop () ;\n"
  "    }\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::dotAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " inOperand\n"
  "                          " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (isValid () && inOperand.isValid ()) {\n"
  "    insulate (THERE) ;\n"
  "    ptr (HERE)->appendList (inOperand.ptr (HERE)) ;\n"
  "  }\n"
  "}\n" ;
GGS_typedAttributeList::cEnumerator enumerator_13022 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_13022 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_13022 = enumerator_13022.nextObject ()))) {
macroValidPointer (operand_13022) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_set" ;
result << operand_13022->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ().reader_identifierRepresentation () ;
result << "AtIndex (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << operand_13022->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (358)) ;
result << " inOperand,\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_uint inIndex,\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) writeObjectAccessAtIndex (inIndex, inCompiler COMMA_THERE) ;\n"
  "  if (NULL != p) {\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    p->mAttribute_" ;
result << operand_13022->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " = inOperand ;\n"
  "  }\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_13964 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_13964 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_13964 = enumerator_13964.nextObject ()))) {
macroValidPointer (operand_13964) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_13964->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (373)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_13964->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << "AtIndex (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_uint & inIndex,\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  GALGAS_" ;
result << operand_13964->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (378)) ;
result << " result ;\n"
  "  if (NULL != p) {\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    result = p->mAttribute_" ;
result << operand_13964->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'genericTypeImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_genericTypeImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_unifiedTypeMapProxy & var_cas_SUPER_TYPE_INDEX) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_INDEX.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor\n"
  "kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "\"" ;
result << var_cas_TYPE_NAME ;
result << "\",\n"
  "                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
if (var_cas_SUPER_TYPE_INDEX.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (9)).boolValue ()) {
result << "NULL" ;
}else {
result << "& kTypeDescriptor_GALGAS_" ;
result << var_cas_SUPER_TYPE_INDEX.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
}
result << ") ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::typeDescriptor (void) const {\n"
  "  return & kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of wrapper 'typeGenerationTemplateEX'            *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_typeGenerationTemplateEX_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_typeGenerationTemplateEX_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_typeGenerationTemplateEX (
  "",
  0,
  gWrapperAllFiles_typeGenerationTemplateEX_0,
  0,
  gWrapperAllDirectories_typeGenerationTemplateEX_0
) ;

//---------------------------------------------------------------------------*
//                                                                           *
//'autoPointerClassImplementation' template of 'typeGenerationTemplateEX' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplateEX_autoPointerClassImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_SUPER_TYPE_IDENTIFIER,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_readerMap & var_cas_READER_MAP,
                                const GGS_nativeAttributeList & var_cas_NATIVE_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_READER_MAP.isBuilt ()
    && var_cas_NATIVE_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" auto ptr type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) :\n"
  "GALGASap_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " (inSource) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGASap_object & inSource) :\n"
  "GALGASap_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " (inSource) {\n"
  "  macroNullOrValidObject (mPtr, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator = (const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) {\n"
  "  macroAssignObject (mPtr, inSource.mPtr) ;\n"
  "  return * this ;\n"
  "}\n"
  "\n" ;
GGS_readerMap::cEnumerator enumerator_1125 (var_cas_READER_MAP, true) ;
const GGS_readerMap::cElement * operand_1125 = NULL ;
while (((operand_1125 = enumerator_1125.nextObject ()))) {
macroValidPointer (operand_1125) ;
if ((operand_1125->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (28))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << operand_1125->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (30)) ;
result << " GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::readerCall_" ;
result << operand_1125->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_1446 (operand_1125->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_1446 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1446 = enumerator_1446.nextObject ()))) {
macroValidPointer (operand_1446) ;
result << "const GALGASap_" ;
result << operand_1446->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
result << " & inOperand_" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
if (enumerator_1446.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_1125->mInfo.mArgumentTypeList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_1125->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
}else if (operand_1125->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") const {\n"
  "  GALGASap_" ;
result << operand_1125->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (47)) ;
result << " result ;\n"
  "  if (isValid ()) {\n"
  "    result = ptr (HERE)->reader_" ;
result << operand_1125->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_2155 (operand_1125->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_2155 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2155 = enumerator_2155.nextObject ()))) {
macroValidPointer (operand_2155) ;
result << "inOperand_" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (51)) ;
if (enumerator_2155.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_1125->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_1125->mInfo.mHasCompilerArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_1125->mInfo.mHasCompilerArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
result << ") ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}else {
}
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::ptr (LOCATION_ARGS) {\n"
  "    macroValidObjectThere (mPtr, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    return (GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) mPtr ;\n"
  "  }\n"
  "#endif\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
  "  const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::ptr (LOCATION_ARGS) const {\n"
  "    macroValidObjectThere (mPtr, const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    return (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) mPtr ;\n"
  "  }\n"
  "#endif\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inSourcePtr) :\n"
  "GALGASap_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " (inSourcePtr) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator = (GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inSourcePtr) {\n"
  "  macroAssignObject (mPtr, inSourcePtr) ;\n"
  "  return *this ;\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'unifiedTypeImplementation' template of 'typeGenerationTemplateEX' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplateEX_unifiedTypeImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_bool& var_cas_IS_CONCRETE,
                                const GGS_unifiedTypeMapProxy & var_cas_SUPER_TYPE_INDEX,
                                const GGS_typeKindEnum& var_cas_TYPE_KIND,
                                const GGS_typedAttributeList & var_cas_CURRENT_TYPE_ATTRIBUTE_LIST,
                                const GGS_constructorMap & var_cas_CONSTRUCTOR_MAP,
                                const GGS_readerMap & var_cas_READER_MAP,
                                const GGS_modifierMap & var_cas_MODIFIER_MAP,
                                const GGS_instanceMethodMap & var_cas_INSTANCE_METHOD_MAP,
                                const GGS_classMethodMap & var_cas_CLASS_METHOD_MAP,
                                const GGS_enumerationDescriptorList & var_cas_ENUMERATION_DESCRIPTOR_LIST,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_unifiedTypeMapProxyList & var_cas_ADD_ASSIGN_ARGUMENT_LIST,
                                const GGS_nativeAttributeList & var_cas_NATIVE_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_IS_CONCRETE.isBuilt ()
    && var_cas_SUPER_TYPE_INDEX.isBuilt ()
    && var_cas_TYPE_KIND.isBuilt ()
    && var_cas_CURRENT_TYPE_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_CONSTRUCTOR_MAP.isBuilt ()
    && var_cas_READER_MAP.isBuilt ()
    && var_cas_MODIFIER_MAP.isBuilt ()
    && var_cas_INSTANCE_METHOD_MAP.isBuilt ()
    && var_cas_CLASS_METHOD_MAP.isBuilt ()
    && var_cas_ENUMERATION_DESCRIPTOR_LIST.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_ADD_ASSIGN_ARGUMENT_LIST.isBuilt ()
    && var_cas_NATIVE_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_TYPE_KIND.reader_kind (inLexique COMMA_SOURCE_FILE_AT_LINE (3)))).operator_concat (GGS_string (" type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor\n"
  "kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "\"" ;
result << var_cas_TYPE_NAME ;
result << "\",\n"
  "                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "& kTypeDescriptor_GALGAS_" ;
result << var_cas_SUPER_TYPE_INDEX.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
result << ") ;\n"
  "\n" ;
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateConstructorWithSelfObject (inLexique COMMA_SOURCE_FILE_AT_LINE (11)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inObject COMMA_LOCATION_ARGS) :\n"
  "GALGAS_" ;
result << var_cas_SUPER_TYPE_INDEX.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (15)) ;
result << " (THERE)" ;
GGS_nativeAttributeList::cEnumerator enumerator_982 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_982 = NULL ;
while (((operand_982 = enumerator_982.nextObject ()))) {
macroValidPointer (operand_982) ;
result << ",\n" ;
result << operand_982->mAttributeName ;
result << " (" ;
result << operand_982->mDefaultValue ;
result << ")" ;
}
result << " {\n"
  "  if (inObject.isValid ()) {\n" ;
GGS_nativeAttributeList::cEnumerator enumerator_1112 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_1112 = NULL ;
while (((operand_1112 = enumerator_1112.nextObject ()))) {
macroValidPointer (operand_1112) ;
result << "    " ;
result << operand_1112->mAttributeName ;
result << " = inObject.ptr (HERE)->" ;
result << operand_1112->mGetterName ;
result << " () ;\n" ;
}
result << "  }\n"
  "}\n"
  "\n" ;
}else {
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::typeDescriptor (void) const {\n"
  "  return & kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "}\n" ;
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (35)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_nativeAttributeList::cEnumerator enumerator_1708 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_1708 = NULL ;
while (((operand_1708 = enumerator_1708.nextObject ()))) {
macroValidPointer (operand_1708) ;
result << "const " ;
result << operand_1708->mCppClassName ;
if (operand_1708->mIsPointer.boolValue ()) {
result << " *" ;
}else {
}
if (operand_1708->mUseReferenceForConstructor.boolValue ()) {
result << " &" ;
}else {
}
result << " inOperand_" ;
result << operand_1708->mAttributeName ;
if (enumerator_1708.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_nativeAttributeList::cEnumerator enumerator_2045 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_2045 = NULL ;
while (((operand_2045 = enumerator_2045.nextObject ()))) {
macroValidPointer (operand_2045) ;
result << "inOperand_" ;
result << operand_2045->mAttributeName ;
if (enumerator_2045.hasNextObject ()) {
result << ", " ;
}
}
if ((var_cas_NATIVE_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "THERE" ;
}else {
result << " COMMA_THERE" ;
}
result << ")) ;\n"
  "  return GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (result) ;\n"
  "}\n"
  "\n" ;
}else {
}
GGS_modifierMap::cEnumerator enumerator_2292 (var_cas_MODIFIER_MAP, true) ;
const GGS_modifierMap::cElement * operand_2292 = NULL ;
while (((operand_2292 = enumerator_2292.nextObject ()))) {
macroValidPointer (operand_2292) ;
if ((operand_2292->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (63))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifierCall_" ;
result << operand_2292->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_2562 (operand_2292->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_2562 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2562 = enumerator_2562.nextObject ()))) {
macroValidPointer (operand_2562) ;
if ((operand_2562->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (67))).boolValue ()) {
result << "GALGASap_" ;
result << operand_2562->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (68)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (68)) ;
}else if ((operand_2562->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (69))).boolValue ()) {
result << "GALGASap_" ;
result << operand_2562->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (70)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (70)) ;
}else if ((operand_2562->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (71))).boolValue ()) {
result << "GALGASap_" ;
result << operand_2562->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (72)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (72)) ;
}else {
result << "GALGASap_" ;
result << operand_2562->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (74)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (74)) ;
}
if (enumerator_2562.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_2292->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_2292->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
}else if (operand_2292->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "//--- Release 'output' arguments\n" ;
GGS_formalParameterSignature::cEnumerator enumerator_3801 (operand_2292->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_3801 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3801 = enumerator_3801.nextObject ()))) {
macroValidPointer (operand_3801) ;
if ((operand_3801->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (93))).boolValue ()) {
result << "  outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (94)) ;
result << ".drop () ;\n" ;
}else {
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "//---\n"
  "  if (isValid ()) {\n"
  "    insulate (THERE) ;\n"
  "    ptr (HERE)->modifier_" ;
result << operand_2292->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_formalParameterSignature::cEnumerator enumerator_4168 (operand_2292->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_4168 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4168 = enumerator_4168.nextObject ()))) {
macroValidPointer (operand_4168) ;
if ((operand_4168->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (102))).boolValue ()) {
result << "constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (103)) ;
}else if ((operand_4168->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (104))).boolValue ()) {
result << "ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (105)) ;
}else if ((operand_4168->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (106))).boolValue ()) {
result << "outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (107)) ;
}else {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (109)) ;
}
if (enumerator_4168.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_2292->mInfo.mParameterList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_2292->mInfo.mHasCompilerArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_2292->mInfo.mHasCompilerArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
result << ") ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}else {
}
}
GGS_instanceMethodMap::cEnumerator enumerator_5108 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_5108 = NULL ;
while (((operand_5108 = enumerator_5108.nextObject ()))) {
macroValidPointer (operand_5108) ;
if (((operand_5108->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (133)))).operator_or ((operand_5108->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (133)))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::instanceMethodCall_" ;
result << operand_5108->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_5426 (operand_5108->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_5426 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5426 = enumerator_5426.nextObject ()))) {
macroValidPointer (operand_5426) ;
if ((operand_5426->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (137))).boolValue ()) {
result << "GALGASap_" ;
result << operand_5426->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) ;
}else if ((operand_5426->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (139))).boolValue ()) {
result << "GALGASap_" ;
result << operand_5426->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (140)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (140)) ;
}else if ((operand_5426->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (141))).boolValue ()) {
result << "GALGASap_" ;
result << operand_5426->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (142)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (142)) ;
}else {
result << "GALGASap_" ;
result << operand_5426->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (144)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (144)) ;
}
if (enumerator_5426.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_5108->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_5108->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
}else if (operand_5108->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "//--- Release 'output' arguments\n" ;
GGS_formalParameterSignature::cEnumerator enumerator_6606 (operand_5108->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_6606 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6606 = enumerator_6606.nextObject ()))) {
macroValidPointer (operand_6606) ;
if ((operand_6606->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (162))).boolValue ()) {
result << "  outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (163)) ;
result << ".drop () ;\n" ;
}else {
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "//---\n"
  "  if (isValid ()) {\n"
  "    ptr (HERE)->method_" ;
result << operand_5108->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_formalParameterSignature::cEnumerator enumerator_6922 (operand_5108->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_6922 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6922 = enumerator_6922.nextObject ()))) {
macroValidPointer (operand_6922) ;
if ((operand_6922->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (170))).boolValue ()) {
result << "constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (171)) ;
}else if ((operand_6922->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (172))).boolValue ()) {
result << "ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (173)) ;
}else if ((operand_6922->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (174))).boolValue ()) {
result << "outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (175)) ;
}else {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (177)) ;
}
if (enumerator_6922.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_5108->mInfo.mParameterList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_5108->mInfo.mHasCompilerArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_5108->mInfo.mHasCompilerArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
result << ") ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}else {
}
}
if ((var_cas_ENUMERATION_DESCRIPTOR_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "//" ;
result << ((((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_TYPE_KIND.reader_kind (inLexique COMMA_SOURCE_FILE_AT_LINE (202)))).operator_concat (GGS_string (" enumeration")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator::cEnumerator (" ;
columnMarker = result.currentColumn () ;
result << "const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inEnumeratedObject,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const bool inAscending) :\n"
  "AC_GALGAS_Enumerator (inEnumeratedObject.ptrNoVerif (), inAscending)" ;
GGS_enumerationDescriptorList::cEnumerator enumerator_8414 (var_cas_ENUMERATION_DESCRIPTOR_LIST, true) ;
const GGS_enumerationDescriptorList::cElement * operand_8414 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8414 = enumerator_8414.nextObject ()))) {
macroValidPointer (operand_8414) ;
result << ",\n"
  "attribute_" ;
result << operand_8414->mEnumerationName.reader_identifierRepresentation () ;
result << " ()" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator::updateAttributeProxies (void) {\n"
  "  capCollectionElement object = currentObject () ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) object.ptrNoVerif () ;\n"
  "  macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_enumerationDescriptorList::cEnumerator enumerator_9016 (var_cas_ENUMERATION_DESCRIPTOR_LIST, true) ;
const GGS_enumerationDescriptorList::cElement * operand_9016 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9016 = enumerator_9016.nextObject ()))) {
macroValidPointer (operand_9016) ;
result << "  attribute_" ;
result << operand_9016->mEnumerationName.reader_identifierRepresentation () ;
result << " = p->mAttribute_" ;
result << operand_9016->mEnumerationName.reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n" ;
}else {
}
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'predefinedTypeSpecificImplementation' template of 'typeGenerationTemplateEX' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplateEX_predefinedTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_modifierMap & var_cas_MODIFIER_MAP,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_unifiedTypeMapProxyList & var_cas_ADD_ASSIGN_ARGUMENT_LIST,
                                const GGS_nativeAttributeList & var_cas_NATIVE_ATTRIBUTE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_MODIFIER_MAP.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_ADD_ASSIGN_ARGUMENT_LIST.isBuilt ()
    && var_cas_NATIVE_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
if (((((var_cas_SUPPORTED_OPERATORS).operator_and ((function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (1))).operator_or (function_dotAssignOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (1))))).operator_isNotEqual (GGS_uint (0U))).operator_or ((var_cas_MODIFIER_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)))).operator_or ((var_cas_ADD_ASSIGN_ARGUMENT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (LOCATION_ARGS) {\n"
  "  if (ptr (HERE)->retainCount () > 1) {\n"
  "    *this = constructor_new (" ;
GGS_nativeAttributeList::cEnumerator enumerator_410 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_410 = NULL ;
while (((operand_410 = enumerator_410.nextObject ()))) {
macroValidPointer (operand_410) ;
result << "ptr (HERE)->" ;
result << operand_410->mAttributeName ;
if (enumerator_410.hasNextObject ()) {
result << ", " ;
}
}
if ((var_cas_NATIVE_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "THERE" ;
}else {
result << " COMMA_THERE" ;
}
result << ") ;\n"
  "  }\n"
  "}\n" ;
}else {
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'enumTypeSpecificImplementation' template of 'typeGenerationTemplateEX' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplateEX_enumTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_stringlist & var_cas_CONSTANT_LIST,
                                const GGS_enumMessageListForGeneration & var_cas_ENUM_MESSAGE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_CONSTANT_LIST.isBuilt ()
    && var_cas_ENUM_MESSAGE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const enumeration inValue\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n"
  "GALGAS_enum (THERE),\n"
  "mEnumValue (inValue) {\n"
  "}\n"
  "\n" ;
GGS_stringlist::cEnumerator enumerator_304 (var_cas_CONSTANT_LIST, true) ;
const GGS_stringlist::cElement * operand_304 = NULL ;
while (((operand_304 = enumerator_304.nextObject ()))) {
macroValidPointer (operand_304) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_" ;
result << operand_304->mValue.reader_identifierRepresentation () ;
result << " (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::kEnum_" ;
result << operand_304->mValue.reader_identifierRepresentation () ;
result << " COMMA_THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
GGS_enumMessageListForGeneration::cEnumerator enumerator_790 (var_cas_ENUM_MESSAGE_LIST, true) ;
const GGS_enumMessageListForGeneration::cElement * operand_790 = NULL ;
while (((operand_790 = enumerator_790.nextObject ()))) {
macroValidPointer (operand_790) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const char * gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_790->mEnumMessageName.reader_identifierRepresentation () ;
result << " [" ;
result << var_cas_CONSTANT_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (21)) ;
result << "] = {" ;
GGS_enumMessageAssociationSortedListForGeneration::cEnumerator enumerator_1068 (operand_790->mMessageAssociationList, true) ;
const GGS_enumMessageAssociationSortedListForGeneration::cElement * operand_1068 = NULL ;
while (((operand_1068 = enumerator_1068.nextObject ()))) {
macroValidPointer (operand_1068) ;
result << "\n"
  "  " ;
result << operand_1068->mMessage.reader_utf8Representation () ;
if (enumerator_1068.hasNextObject ()) {
result << "," ;
}
}
result << "\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_string GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_790->mEnumMessageName.reader_identifierRepresentation () ;
result << " (LOCATION_ARGS) const {\n"
  "  return GALGASap_string::constructor_new (gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_790->mEnumMessageName.reader_identifierRepresentation () ;
result << " [mEnumValue] COMMA_THERE) ;\n"
  "}\n"
  "\n" ;
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const char * gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " [" ;
result << var_cas_CONSTANT_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << "] = {" ;
GGS_stringlist::cEnumerator enumerator_1756 (var_cas_CONSTANT_LIST, true) ;
const GGS_stringlist::cElement * operand_1756 = NULL ;
while (((operand_1756 = enumerator_1756.nextObject ()))) {
macroValidPointer (operand_1756) ;
result << "\n"
  "  " ;
result << operand_1756->mValue.reader_utf8Representation () ;
if (enumerator_1756.hasNextObject ()) {
result << "," ;
}
}
result << "\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 /* inIndentation */) const {\n"
  "  ioString << \"<enum @" ;
result << var_cas_TYPE_NAME ;
result << ": \" << gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " [mEnumValue] << \">\" ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand1,\n"
  "                        " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand2) {\n"
  "  enumComparisonResult result = kOperandNotValid ;\n"
  "  if (inOperand1.isValid () && inOperand2.isValid ()) {\n"
  "    if (inOperand1.ptr (HERE)->mEnumValue < (PMSInt32) inOperand2.ptr (HERE)->mEnumValue) {\n"
  "      result = kFirstOperandLowerThanSecond ;\n"
  "    }else if (inOperand1.ptr (HERE)->mEnumValue > (PMSInt32) inOperand2.ptr (HERE)->mEnumValue) {\n"
  "      result = kFirstOperandGreaterThanSecond ;\n"
  "    }else{\n"
  "      result = kOperandEqual ;\n"
  "    }\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'listmapTypeSpecificImplementation' template of 'typeGenerationTemplateEX' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplateEX_listmapTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_ASSOCIATED_LISTTYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ASSOCIATED_LISTTYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_listmap ((GALGAS_list * (*) (LOCATION_ARGS)) GALGASap_uintlist::constructor_emptyList COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyMap (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioObject\n"
  "                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioObject->retainCount () > 1) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * source = ioObject ;\n"
  "    macroReleaseObject (ioObject) ;\n"
  "    ioObject = constructor_emptyMap (THERE) ;\n"
  "    ioObject->copyFrom (source) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void addAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_string * inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_1208 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1208 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1208 = enumerator_1208.nextObject ()))) {
macroValidPointer (operand_1208) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_1208->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioResult COMMA_THERE) ;\n"
  "    GALGAS_object * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (37)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_1564 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1564 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1564 = enumerator_1564.nextObject ()))) {
macroValidPointer (operand_1564) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (39)) ;
if (enumerator_1564.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "    ioResult->addObject (inKey, attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'mapTypeSpecificDeclaration' template of 'typeGenerationTemplateEX' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplateEX_mapTypeSpecificDeclaration (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Class for element of '@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string ("' map")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public cCollectionElementForMap {\n"
  "//--- Map attributes\n" ;
GGS_typedAttributeList::cEnumerator enumerator_553 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_553 = NULL ;
while (((operand_553 = enumerator_553.nextObject ()))) {
macroValidPointer (operand_553) ;
result << "  public : GALGASap_" ;
result << operand_553->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
result << " mAttribute_" ;
result << operand_553->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "//--- Constructor\n"
  "  public : cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGASap_lstring & inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_839 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_839 = NULL ;
while (((operand_839 = enumerator_839.nextObject ()))) {
macroValidPointer (operand_839) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGASap_" ;
result << operand_839->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (17)) ;
result << " & in_" ;
result << operand_839->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Virtual method for comparing elements\n"
  "  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) ;\n"
  "\n"
  "//--- Virtual method that checks that all attributes are valid\n"
  "  public : virtual bool isValid (void) const ;\n"
  "\n"
  "//--- Virtual method that returns a copy of current object\n"
  "  public : virtual cCollectionElement * copy (void) ;\n"
  "\n"
  "//--- Description\n"
  " public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;\n"
  "} ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'mapTypeSpecificImplementation' template of 'typeGenerationTemplateEX' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplateEX_mapTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_insertMethodListAST & var_cas_INSERT_METHOD_LIST,
                                const GGS_mapSearchMethodListAST & var_cas_SEARCH_METHOD_LIST,
                                const GGS_mapRemoveMethodListAST & var_cas_REMOVE_METHOD_LIST,
                                const GGS_bool& var_cas_HAS_INSERT_OR_REPLACE,
                                const GGS_withAccessorMap & var_cas_WITH_ACCESSOR_MAP) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_INSERT_METHOD_LIST.isBuilt ()
    && var_cas_SEARCH_METHOD_LIST.isBuilt ()
    && var_cas_REMOVE_METHOD_LIST.isBuilt ()
    && var_cas_HAS_INSERT_OR_REPLACE.isBuilt ()
    && var_cas_WITH_ACCESSOR_MAP.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Class for element of '@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string ("' map")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGASap_lstring & inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_560 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_560 = NULL ;
while (((operand_560 = enumerator_560.nextObject ()))) {
macroValidPointer (operand_560) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGASap_" ;
result << operand_560->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
result << " & in_" ;
result << operand_560->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n"
  "cCollectionElementForMap (inKey COMMA_THERE)" ;
GGS_typedAttributeList::cEnumerator enumerator_801 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_801 = NULL ;
while (((operand_801 = enumerator_801.nextObject ()))) {
macroValidPointer (operand_801) ;
result << ",\n"
  "mAttribute_" ;
result << operand_801->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (in_" ;
result << operand_801->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "bool cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::isValid (void) const {\n"
  "  return mAttribute_lkey.isValid ()" ;
GGS_typedAttributeList::cEnumerator enumerator_1155 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1155 = NULL ;
while (((operand_1155 = enumerator_1155.nextObject ()))) {
macroValidPointer (operand_1155) ;
result << " && mAttribute_" ;
result << operand_1155->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
}
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cCollectionElement * cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::copy (void) {\n"
  "  cCollectionElement * result = NULL ;\n"
  "  macroMyNew (result, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (mAttribute_lkey" ;
GGS_typedAttributeList::cEnumerator enumerator_1560 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1560 = NULL ;
while (((operand_1560 = enumerator_1560.nextObject ()))) {
macroValidPointer (operand_1560) ;
result << ", mAttribute_" ;
result << operand_1560->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
}
result << " COMMA_HERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1916 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1916 = NULL ;
while (((operand_1916 = enumerator_1916.nextObject ()))) {
macroValidPointer (operand_1916) ;
result << "// mAttribute_" ;
result << operand_1916->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".description (ioString, inIndentation) ;\n" ;
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::compare (const cCollectionElement * inOperand) {\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operand = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inOperand ;\n"
  "  enumComparisonResult result = GALGASap_lstring::objectCompare (mAttribute_lkey, operand->mAttribute_lkey) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2471 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2471 = NULL ;
while (((operand_2471 = enumerator_2471.nextObject ()))) {
macroValidPointer (operand_2471) ;
result << "  if (kOperandEqual == result) {\n"
  "    result = GALGASap_" ;
result << operand_2471->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (58)) ;
result << "::objectCompare (mAttribute_" ;
result << operand_2471->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ", operand->mAttribute_" ;
result << operand_2471->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_map (THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyMap (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_mapWithMapToOverride (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inMapToOverride\n"
  "                                                   " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (inMapToOverride.isValid ()) {\n"
  "    result = constructor_emptyMap (THERE) ;\n"
  "    result.ptr (HERE)->mOverridenMap = inMapToOverride ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (LOCATION_ARGS) {\n"
  "  if (ptr (HERE)->retainCount () > 1) {\n"
  "    GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " newMap (constructor_emptyMap (THERE)) ;\n"
  "    newMap.ptr (HERE)->copyFrom (ptr(HERE)) ;\n"
  "    *this = newMap ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_overriddenMap (LOCATION_ARGS) const {\n"
  "  GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result = mOverridenMap ;\n"
  "  if (! result.isValid ()) {\n"
  "    result = GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyMap (THERE) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
GGS_insertMethodListAST::cEnumerator enumerator_4482 (var_cas_INSERT_METHOD_LIST, true) ;
const GGS_insertMethodListAST::cElement * operand_4482 = NULL ;
while (((operand_4482 = enumerator_4482.nextObject ()))) {
macroValidPointer (operand_4482) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_" ;
result << operand_4482->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_lstring inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_4720 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4720 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4720 = enumerator_4720.nextObject ()))) {
macroValidPointer (operand_4720) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << operand_4720->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (114)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (114)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = NULL ;\n"
  "  macroMyNew (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_5075 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5075 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5075 = enumerator_5075.nextObject ()))) {
macroValidPointer (operand_5075) ;
result << ", inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (121)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_HERE)) ;\n"
  "  capCollectionElement attributes (p) ;\n" ;
const GGS_uint indentation_5596 = GGS_uint (2U) ;
if (indentation_5596.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_5596.uintValue ()) ;
}
result << "const utf32 kInsertErrorMessage [" ;
result << operand_4482->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (126)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (126)) ;
result << "] = " ;
result << operand_4482->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "const utf32 kShadowErrorMessage [" ;
result << operand_4482->mShadowErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (127)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (127)) ;
result << "] = " ;
result << operand_4482->mShadowErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;\n" ;
 ;
if (indentation_5596.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_5596.uintValue ())) ;
}
result << "}\n"
  "\n" ;
}
GGS_mapSearchMethodListAST::cEnumerator enumerator_5635 (var_cas_SEARCH_METHOD_LIST, true) ;
const GGS_mapSearchMethodListAST::cElement * operand_5635 = NULL ;
while (((operand_5635 = enumerator_5635.nextObject ()))) {
macroValidPointer (operand_5635) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const utf32 kSearchErrorMessage_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_5635->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " [" ;
result << operand_5635->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (135)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (135)) ;
result << "] = " ;
result << operand_5635->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_" ;
result << operand_5635->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_lstring inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_6150 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6150 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6150 = enumerator_6150.nextObject ()))) {
macroValidPointer (operand_6150) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << operand_6150->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (139)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (139)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
const GGS_uint indentation_6943 = GGS_uint (2U) ;
if (indentation_6943.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_6943.uintValue ()) ;
}
result << "capCollectionElement attributes = performSearch (inKey, inCompiler, kSearchErrorMessage_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_5635->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " COMMA_THERE) ;\n"
  "cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "if (NULL != p) {\n"
  "  macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_6779 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6779 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6779 = enumerator_6779.nextObject ()))) {
macroValidPointer (operand_6779) ;
result << "  outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (149)) ;
result << " = p->mAttribute_" ;
result << operand_6779->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n" ;
 ;
if (indentation_6943.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_6943.uintValue ())) ;
}
result << "}\n"
  "\n" ;
}
GGS_mapRemoveMethodListAST::cEnumerator enumerator_6983 (var_cas_REMOVE_METHOD_LIST, true) ;
const GGS_mapRemoveMethodListAST::cElement * operand_6983 = NULL ;
while (((operand_6983 = enumerator_6983.nextObject ()))) {
macroValidPointer (operand_6983) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_" ;
result << operand_6983->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_lstring inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_7221 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7221 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7221 = enumerator_7221.nextObject ()))) {
macroValidPointer (operand_7221) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << operand_7221->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (161)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (161)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
const GGS_uint indentation_8097 = GGS_uint (2U) ;
if (indentation_8097.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_8097.uintValue ()) ;
}
result << "const utf32 kRemoveErrorMessage [" ;
result << operand_6983->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (166)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
result << "] = " ;
result << operand_6983->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "capCollectionElement attributes ;\n"
  "performRemove (inKey, attributes, inCompiler, kRemoveErrorMessage COMMA_THERE) ;\n"
  "cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "if (NULL != p) {\n"
  "  macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_7933 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7933 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7933 = enumerator_7933.nextObject ()))) {
macroValidPointer (operand_7933) ;
result << "  outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (173)) ;
result << " = p->mAttribute_" ;
result << operand_7933->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n" ;
 ;
if (indentation_8097.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_8097.uintValue ())) ;
}
result << "}\n"
  "\n" ;
}
if (var_cas_HAS_INSERT_OR_REPLACE.boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_insertOrReplace (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_lstring * inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_8348 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8348 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8348 = enumerator_8348.nextObject ()))) {
macroValidPointer (operand_8348) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_8348->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (184)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (184)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  GALGAS_object * attributes [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (187)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (187)) ;
result << "] = {inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_8627 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8627 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8627 = enumerator_8627.nextObject ()))) {
macroValidPointer (operand_8627) ;
result << ", inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (189)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "  performInsertOrReplace (attributes) ;\n"
  "}\n"
  "\n" ;
}else {
}
GGS_typedAttributeList::cEnumerator enumerator_8779 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8779 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8779 = enumerator_8779.nextObject ()))) {
macroValidPointer (operand_8779) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << operand_8779->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (198)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_8779->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << "ForKey (" ;
columnMarker = result.currentColumn () ;
result << "const GALGASap_string & inKey,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  capCollectionElement attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  GALGASap_" ;
result << operand_8779->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (203)) ;
result << " result ;\n"
  "  if (NULL != p) {\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    result = p->mAttribute_" ;
result << operand_8779->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_typedAttributeList::cEnumerator enumerator_9789 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9789 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9789 = enumerator_9789.nextObject ()))) {
macroValidPointer (operand_9789) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_set" ;
result << operand_9789->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ().reader_identifierRepresentation () ;
result << "ForKey (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << operand_9789->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (214)) ;
result << " inAttributeValue,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_string inKey,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;\n"
  "  if (NULL != p) {\n"
  "    MF_Assert (dynamic_cast <cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *> (p) != NULL, \"p is not an instance of cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *\", 0, 0) ;\n"
  "    p->mAttribute_" ;
result << operand_9789->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " = inAttributeValue ;\n"
  "  }\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_withAccessorMap::cEnumerator enumerator_10785 (var_cas_WITH_ACCESSOR_MAP, true) ;
const GGS_withAccessorMap::cElement * operand_10785 = NULL ;
while (((operand_10785 = enumerator_10785.nextObject ()))) {
macroValidPointer (operand_10785) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "cCollectionElement * readWriteAccessForWithInstruction_" ;
result << operand_10785->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & ioMap,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << operand_10785->mInfo.mArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (230)) ;
result << " & inKey\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  cCollectionElement * result = NULL ;\n"
  "  if (ioMap.isValid () && inKey.isValid ()) {\n"
  "    ioMap.insulate (THERE) ;\n" ;
if ((operand_10785->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (235))).operator_isEqual (GGS_string ("hasKey")).boolValue ()) {
result << "    result = ioMap.ptr (HERE)->searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;\n" ;
}else {
result << "    result = ioMap.ptr (HERE)->searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_10785->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " COMMA_THERE) ;\n" ;
}
result << "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'sortedlistTypeSpecificImplementation' template of 'typeGenerationTemplateEX' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplateEX_sortedlistTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_sortDescriptorListForGeneration & var_cas_SORT_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_SORT_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Class for element of '@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string ("' list")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public cCollectionElement {\n"
  "//--- List attributes\n" ;
GGS_typedAttributeList::cEnumerator enumerator_549 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_549 = NULL ;
while (((operand_549 = enumerator_549.nextObject ()))) {
macroValidPointer (operand_549) ;
result << "  public : GALGASap_" ;
result << operand_549->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
result << " mAttribute_" ;
result << operand_549->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "//--- Constructor\n"
  "  public : cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_803 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_803 = NULL ;
while (((operand_803 = enumerator_803.nextObject ()))) {
macroValidPointer (operand_803) ;
result << "const GALGASap_" ;
result << operand_803->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (17)) ;
result << " & in_" ;
result << operand_803->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_803.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Virtual method for comparing elements\n"
  "  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) ;\n"
  "\n"
  "//--- Virtual method that checks that all attributes are valid\n"
  "  public : virtual bool isValid (void) const ;\n"
  "\n"
  "//--- Virtual method that returns a copy of current object\n"
  "  public : virtual cCollectionElement * copy (void) ;\n"
  "\n"
  "//--- Description\n"
  " public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1655 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1655 = NULL ;
while (((operand_1655 = enumerator_1655.nextObject ()))) {
macroValidPointer (operand_1655) ;
result << "const GALGASap_" ;
result << operand_1655->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (40)) ;
result << " & in_" ;
result << operand_1655->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1655.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n"
  "cCollectionElement (THERE)" ;
GGS_typedAttributeList::cEnumerator enumerator_1891 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1891 = NULL ;
while (((operand_1891 = enumerator_1891.nextObject ()))) {
macroValidPointer (operand_1891) ;
result << ",\n"
  "mAttribute_" ;
result << operand_1891->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (in_" ;
result << operand_1891->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "bool cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::isValid (void) const {\n"
  "  return " ;
GGS_typedAttributeList::cEnumerator enumerator_2219 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2219 = NULL ;
while (((operand_2219 = enumerator_2219.nextObject ()))) {
macroValidPointer (operand_2219) ;
result << "mAttribute_" ;
result << operand_2219->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
if (enumerator_2219.hasNextObject ()) {
result << " && " ;
}
}
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cCollectionElement * cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::copy (void) {\n"
  "  cCollectionElement * result = NULL ;\n"
  "  macroMyNew (result, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_2626 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2626 = NULL ;
while (((operand_2626 = enumerator_2626.nextObject ()))) {
macroValidPointer (operand_2626) ;
result << "mAttribute_" ;
result << operand_2626->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_2626.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_HERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2999 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2999 = NULL ;
while (((operand_2999 = enumerator_2999.nextObject ()))) {
macroValidPointer (operand_2999) ;
result << "// mAttribute_" ;
result << operand_2999->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".description (ioString, inIndentation) ;\n" ;
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::compare (const cCollectionElement * inOperand) {\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operand = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inOperand ;\n"
  "  enumComparisonResult result = kOperandEqual ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3492 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3492 = NULL ;
while (((operand_3492 = enumerator_3492.nextObject ()))) {
macroValidPointer (operand_3492) ;
result << "  if (kOperandEqual == result) {\n"
  "    result = GALGASap_" ;
result << operand_3492->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (92)) ;
result << "::objectCompare (mAttribute_" ;
result << operand_3492->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ", operand->mAttribute_" ;
result << operand_3492->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const C_galgas_type_descriptor * kFieldList_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (100)) ;
result << "] = {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4029 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4029 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4029 = enumerator_4029.nextObject ()))) {
macroValidPointer (operand_4029) ;
result << "  & kTypeDescriptor_GALGAS_" ;
result << operand_4029->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (102)) ;
if (enumerator_4029.hasNextObject ()) {
result << ",\n" ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_sortedlist (kFieldList_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::compareSortedListElements (" ;
columnMarker = result.currentColumn () ;
result << "const capCollectionElement & inLeftAttributeList,\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const capCollectionElement & inRightAttributeList) const {\n"
  "  enumComparisonResult result = kOperandEqual ;\n"
  "  const cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p1 = (const cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inLeftAttributeList.ptrNoVerif () ;\n"
  "  macroValidObject (p1, const cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  const cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p2 = (const cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inRightAttributeList.ptrNoVerif () ;\n"
  "  macroValidObject (p2, const cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_sortDescriptorListForGeneration::cEnumerator enumerator_5189 (var_cas_SORT_ATTRIBUTE_LIST, true) ;
const GGS_sortDescriptorListForGeneration::cElement * operand_5189 = NULL ;
while (((operand_5189 = enumerator_5189.nextObject ()))) {
macroValidPointer (operand_5189) ;
result << "  if (result == kOperandEqual) {\n"
  "    result = " ;
if (operand_5189->mAscendingOrder.boolValue ()) {
}else {
result << "complementComparison " ;
}
result << "(GALGASap_" ;
result << operand_5189->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (126)) ;
result << "::objectCompare (p1->mAttribute_" ;
result << operand_5189->mAttributeName.reader_identifierRepresentation () ;
result << ", p2->mAttribute_" ;
result << operand_5189->mAttributeName.reader_identifierRepresentation () ;
result << ")) ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (LOCATION_ARGS) {\n"
  "  if (isValid () && (ptr (HERE)->retainCount () > 1)) {\n"
  "    GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " p (constructor_emptySortedList (THERE)) ;\n"
  "    p.ptr (HERE)->copyFrom (ptr (HERE)) ;\n"
  "    *this = p ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptySortedList (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = NULL ;\n"
  "  macroMyNew (p, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (p) ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_sortedListWithValue (" ;
const GGS_string var_cas_COL0 = GGS_string::stringWithColumnCount (result) ;
GGS_typedAttributeList::cEnumerator enumerator_6434 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6434 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6434 = enumerator_6434.nextObject ()))) {
macroValidPointer (operand_6434) ;
result << "GALGASap_" ;
result << operand_6434->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (154)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (154)) ;
if (enumerator_6434.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL0 ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result << var_cas_COL0 ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result = constructor_emptySortedList (THERE) ;\n"
  "  cCollectionElement * p = NULL ;\n"
  "  macroMyNew (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_6799 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6799 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6799 = enumerator_6799.nextObject ()))) {
macroValidPointer (operand_6799) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (162)) ;
if (enumerator_6799.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "  capCollectionElement attributes (p) ;\n"
  "  result.ptr (HERE)->addObject (attributes) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::addAssign_operation (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_7159 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7159 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7159 = enumerator_7159.nextObject ()))) {
macroValidPointer (operand_7159) ;
result << "const GALGASap_" ;
result << operand_7159->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (175)) ;
result << " inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (175)) ;
if (enumerator_7159.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "    " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (isValid ()) {\n"
  "    insulate (HERE) ;\n"
  "    cCollectionElement * p = NULL ;\n"
  "    macroMyNew (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_7496 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7496 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7496 = enumerator_7496.nextObject ()))) {
macroValidPointer (operand_7496) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (185)) ;
if (enumerator_7496.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "    capCollectionElement attributes (p) ;\n"
  "    ptr (HERE)->addObject (attributes) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::dotAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " inOperand\n"
  "                          " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (isValid () && inOperand.isValid ()) {\n"
  "    insulate (THERE) ;\n"
  "    ptr (HERE)->appendSortedList (inOperand.ptr (HERE)) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator_concat (" ;
columnMarker = result.currentColumn () ;
result << "const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n"
  "                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (isValid () && inOperand.isValid ()) {\n"
  "    result = constructor_emptySortedList (THERE) ;\n"
  "    result.ptr (HERE)->appendSortedList (ptr (HERE)) ;\n"
  "    result.ptr (HERE)->appendSortedList (inOperand.ptr (HERE)) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popSmallest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_8760 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8760 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8760 = enumerator_8760.nextObject ()))) {
macroValidPointer (operand_8760) ;
result << "GALGASap_" ;
result << operand_8760->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (221)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (221)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement attributes ;\n"
  "  removeSmallestObject (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_9214 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9214 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9214 = enumerator_9214.nextObject ()))) {
macroValidPointer (operand_9214) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (231)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_9392 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9392 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9392 = enumerator_9392.nextObject ()))) {
macroValidPointer (operand_9392) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (237)) ;
result << " = p->mAttribute_" ;
result << operand_9392->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popGreatest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_9694 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9694 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9694 = enumerator_9694.nextObject ()))) {
macroValidPointer (operand_9694) ;
result << "GALGASap_" ;
result << operand_9694->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (246)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (246)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement attributes ;\n"
  "  removeGreatestObject (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_10148 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10148 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10148 = enumerator_10148.nextObject ()))) {
macroValidPointer (operand_10148) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (256)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_10326 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10326 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10326 = enumerator_10326.nextObject ()))) {
macroValidPointer (operand_10326) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (262)) ;
result << " = p->mAttribute_" ;
result << operand_10326->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_smallest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_10623 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10623 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10623 = enumerator_10623.nextObject ()))) {
macroValidPointer (operand_10623) ;
result << "GALGASap_" ;
result << operand_10623->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (271)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (271)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement attributes ;\n"
  "  smallestObjectAttributeList (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_11074 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_11074 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_11074 = enumerator_11074.nextObject ()))) {
macroValidPointer (operand_11074) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (281)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_11252 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_11252 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_11252 = enumerator_11252.nextObject ()))) {
macroValidPointer (operand_11252) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (287)) ;
result << " = p->mAttribute_" ;
result << operand_11252->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_greatest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_11549 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_11549 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_11549 = enumerator_11549.nextObject ()))) {
macroValidPointer (operand_11549) ;
result << "GALGASap_" ;
result << operand_11549->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (296)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (296)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement attributes ;\n"
  "  greatestObjectAttributeList (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_12000 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_12000 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_12000 = enumerator_12000.nextObject ()))) {
macroValidPointer (operand_12000) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (306)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_12178 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_12178 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_12178 = enumerator_12178.nextObject ()))) {
macroValidPointer (operand_12178) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (312)) ;
result << " = p->mAttribute_" ;
result << operand_12178->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'mapProxyTypeSpecificImplementation' template of 'typeGenerationTemplateEX' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplateEX_mapProxyTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_mapSearchMethodListAST & var_cas_SEARCH_METHOD_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_SEARCH_METHOD_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_mapproxy (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (4)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4)) ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_null (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::class_method_makeRegularProxy (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << " & ioMap,\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_string inKey,\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & outProxy\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  outProxy.drop () ;\n"
  "  if (inKey.isValid () && ioMap.isValid ()) {\n"
  "    ioMap.insulate (HERE) ;\n"
  "    GALGAS_classMapIndex * p = NULL ;\n"
  "    macroMyNew (p, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "    outProxy = p ;\n"
  "    outProxy.ptr (HERE)->internalMakeRegularProxy (ioMap.ptr (HERE), inKey) ;\n"
  "  }\n"
  "}\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1254 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1254 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1254 = enumerator_1254.nextObject ()))) {
macroValidPointer (operand_1254) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << operand_1254->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_1254->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  GALGASap_" ;
result << operand_1254->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (34)) ;
result << " result ;\n"
  "  capCollectionElement attributeList = getAttributeList (inCompiler COMMA_THERE) ;\n"
  "  if (attributeList.ptrNoVerif () != NULL) {\n"
  "    macroValidObject (attributeList.ptrNoVerif (), cCollectionElement_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    result = ((cCollectionElement_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << " *) attributeList.ptrNoVerif ())->mAttribute_" ;
result << operand_1254->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ";\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_mapSearchMethodListAST::cEnumerator enumerator_2182 (var_cas_SEARCH_METHOD_LIST, true) ;
const GGS_mapSearchMethodListAST::cElement * operand_2182 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2182 = enumerator_2182.nextObject ()))) {
macroValidPointer (operand_2182) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_" ;
result << operand_2182->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << " & inMap,\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_lstring & inKey,\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (inMap.isValid () && inKey.isValid ()) {\n" ;
const GGS_uint indentation_3301 = GGS_uint (4U) ;
if (indentation_3301.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_3301.uintValue ()) ;
}
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = NULL ;\n"
  "macroMyNew (p, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "result = p ;\n"
  "const utf32 kSearchErrorMessage [" ;
result << operand_2182->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (56)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (56)) ;
result << "] = " ;
result << operand_2182->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "const bool ok = result.ptr (HERE)->internalSearchKey (inMap, inKey, kSearchErrorMessage, inCompiler COMMA_THERE) ;\n"
  "if (! ok) {\n"
  "  result.drop () ;\n"
  "}\n" ;
 ;
if (indentation_3301.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_3301.uintValue ())) ;
}
result << "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'classTypeSpecificImplementation' template of 'typeGenerationTemplateEX' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplateEX_classTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_SUPER_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_CURRENT_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_ALL_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_INHERITED_ATTRIBUTE_LIST,
                                const GGS_bool& var_cas_IS_ABSTRACT,
                                const GGS_methodDefinitionListForGeneration & var_cas_CONCRETE_METHOD_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_CURRENT_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_ALL_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_INHERITED_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_IS_ABSTRACT.isBuilt ()
    && var_cas_CONCRETE_METHOD_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n" ;
if ((var_cas_CURRENT_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "enumComparisonResult GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand1,\n"
  "                        " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand2) {\n"
  "  return (inOperand1.isValid () && inOperand2.isValid ()) \? kOperandEqual : kOperandNotValid ;\n"
  "}\n"
  "\n" ;
}else {
result << "enumComparisonResult GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand1,\n"
  "                        " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand2) {\n" ;
if ((var_cas_SUPER_TYPE_IDENTIFIER).operator_isEqual (GGS_string ("class")).boolValue ()) {
result << "  enumComparisonResult result = (inOperand1.isValid () && inOperand2.isValid ()) \? kOperandEqual : kOperandNotValid ;\n" ;
}else {
result << "  enumComparisonResult result = GALGASap_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << "::objectCompare (inOperand1, inOperand2) ;\n" ;
}
GGS_typedAttributeList::cEnumerator enumerator_991 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_991 = NULL ;
while (((operand_991 = enumerator_991.nextObject ()))) {
macroValidPointer (operand_991) ;
result << "  if (kOperandEqual == result) {\n"
  "    result = GALGASap_" ;
result << operand_991->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (18)) ;
result << "::objectCompare (inOperand1.ptr (HERE)->mAttribute_" ;
result << operand_991->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ", inOperand2.ptr (HERE)->mAttribute_" ;
result << operand_991->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n" ;
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1533 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1533 = NULL ;
while (((operand_1533 = enumerator_1533.nextObject ()))) {
macroValidPointer (operand_1533) ;
result << "const GALGASap_" ;
result << operand_1533->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (29)) ;
result << " & constinAttribute_" ;
result << operand_1533->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1533.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
result << ") :\n"
  "GALGAS_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_1896 (var_cas_INHERITED_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1896 = NULL ;
while (((operand_1896 = enumerator_1896.nextObject ()))) {
macroValidPointer (operand_1896) ;
result << "constinAttribute_" ;
result << operand_1896->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1896.hasNextObject ()) {
result << ", " ;
}
}
if ((var_cas_INHERITED_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << " COMMA_THERE)" ;
}else {
result << "THERE)" ;
}
GGS_typedAttributeList::cEnumerator enumerator_2122 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2122 = NULL ;
while (((operand_2122 = enumerator_2122.nextObject ()))) {
macroValidPointer (operand_2122) ;
result << ",\n"
  "mAttribute_" ;
result << operand_2122->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (constinAttribute_" ;
result << operand_2122->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
}
result << " {\n"
  "}\n"
  "\n" ;
if (((var_cas_IS_ABSTRACT).operator_not ()).operator_and ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 /* inIndentation */) const {\n"
  "  ioString << \"<class @\"\n"
  "           << typeDescriptor ()->mGalgasTypeName\n"
  "           << \">\" ;\n"
  "}\n"
  "\n" ;
}else {
}
if (((var_cas_IS_ABSTRACT).operator_not ()).operator_and ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_3322 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3322 = NULL ;
while (((operand_3322 = enumerator_3322.nextObject ()))) {
macroValidPointer (operand_3322) ;
result << "GALGASap_" ;
result << operand_3322->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (76)) ;
result << " & inAttribute_" ;
result << operand_3322->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_3322.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  if (" ;
GGS_typedAttributeList::cEnumerator enumerator_3688 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3688 = NULL ;
while (((operand_3688 = enumerator_3688.nextObject ()))) {
macroValidPointer (operand_3688) ;
result << "inAttribute_" ;
result << operand_3688->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
if (enumerator_3688.hasNextObject ()) {
result << " && " ;
}
}
result << ") {\n"
  "    macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_3895 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3895 = NULL ;
while (((operand_3895 = enumerator_3895.nextObject ()))) {
macroValidPointer (operand_3895) ;
result << "inAttribute_" ;
result << operand_3895->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_3895.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_THERE)) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 /* inIndentation */) const {\n"
  "  ioString << \"<class @\"\n"
  "           << typeDescriptor ()->mGalgasTypeName\n"
  "           << \":\" ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4455 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4455 = NULL ;
while (((operand_4455 = enumerator_4455.nextObject ()))) {
macroValidPointer (operand_4455) ;
result << "//  mAttribute_" ;
result << operand_4455->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << "->description (ioString, inIndentation + 1) ;\n" ;
if (enumerator_4455.hasNextObject ()) {
result << "  ioString << \", \" ;\n" ;
}
}
result << "  ioString << \">\" ;\n"
  "}\n"
  "\n" ;
}else {
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::~GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) {\n"
  "}\n"
  "\n" ;
if (((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).operator_and ((var_cas_IS_ABSTRACT).operator_not ()).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (LOCATION_ARGS) {\n"
  "  if (isValid () && (ptr (HERE)->retainCount () > 1)) {\n"
  "    GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " p = constructor_new (" ;
GGS_typedAttributeList::cEnumerator enumerator_5181 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5181 = NULL ;
while (((operand_5181 = enumerator_5181.nextObject ()))) {
macroValidPointer (operand_5181) ;
result << "ptr (HERE)->mAttribute_" ;
result << operand_5181->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_5181.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_THERE) ;\n"
  "    *this = p ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}else {
}
GGS_methodDefinitionListForGeneration::cEnumerator enumerator_5384 (var_cas_CONCRETE_METHOD_LIST, true) ;
const GGS_methodDefinitionListForGeneration::cElement * operand_5384 = NULL ;
while (((operand_5384 = enumerator_5384.nextObject ()))) {
macroValidPointer (operand_5384) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << function_generateProcedure (inLexique, (((GGS_string ("GALGAS_")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string ("::method_"))).operator_concat (operand_5384->mMethodName.ggs_string ().reader_identifierRepresentation ()), operand_5384->mSignature, operand_5384->mInstructionList, GGS_bool (false), GGS_string ("C_Compiler"), GGS_bool (true), GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (137)) ;
}
GGS_typedAttributeList::cEnumerator enumerator_5805 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5805 = NULL ;
while (((operand_5805 = enumerator_5805.nextObject ()))) {
macroValidPointer (operand_5805) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << operand_5805->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (150)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_5805->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (UNUSED_LOCATION_ARGS) const {\n"
  "  return mAttribute_" ;
result << operand_5805->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "}\n"
  "\n" ;
}
if ((var_cas_IS_ABSTRACT).operator_not ().boolValue ()) {
GGS_typedAttributeList::cEnumerator enumerator_6219 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6219 = NULL ;
while (((operand_6219 = enumerator_6219.nextObject ()))) {
macroValidPointer (operand_6219) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_set" ;
result << operand_6219->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << operand_6219->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (158)) ;
result << " inValue\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  mAttribute_" ;
result << operand_6219->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " = inValue ;\n"
  "}\n"
  "\n" ;
}
}else {
}
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of wrapper 'semanticComponentGenerationTemplate'       *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_semanticComponentGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_semanticComponentGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_semanticComponentGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_semanticComponentGenerationTemplate_0,
  0,
  gWrapperAllDirectories_semanticComponentGenerationTemplate_0
) ;

//---------------------------------------------------------------------------*
//                                                                           *
//'routineDeclaration' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_routineDeclaration (C_Compiler & inLexique,
                                const GGS_string& var_cas_ROUTINE_NAME,
                                const GGS_formalParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_ROUTINE_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Routine '")).operator_concat (var_cas_ROUTINE_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void routine_" ;
result << var_cas_ROUTINE_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_488 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_488 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_488 = enumerator_488.nextObject ()))) {
macroValidPointer (operand_488) ;
if ((operand_488->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (9))).boolValue ()) {
result << "GALGASap_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (10)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (10)) ;
}else if ((operand_488->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (11))).boolValue ()) {
result << "GALGASap_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
}else if ((operand_488->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (13))).boolValue ()) {
result << "GALGASap_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
}else {
result << "GALGASap_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'functionDeclaration' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_functionDeclaration (C_Compiler & inLexique,
                                const GGS_string& var_cas_FUNCTION_NAME,
                                const GGS_formalInputParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST,
                                const GGS_string& var_cas_RETURN_TYPE_IDENTIFIER) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_FUNCTION_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt ()
    && var_cas_RETURN_TYPE_IDENTIFIER.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Routine '")).operator_concat (var_cas_FUNCTION_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_RETURN_TYPE_IDENTIFIER ;
result << " function_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_521 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_521 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_521 = enumerator_521.nextObject ()))) {
macroValidPointer (operand_521) ;
result << "GALGASap_" ;
result << operand_521->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
result << " & constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'routineImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_routineImplementation (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_ROUTINE_NAME,
                                const GGS_string& var_cas_ROUTINE_IMPLEMENTATION) {
  C_String result ;
  const bool isBuilt = var_cas_ROUTINE_NAME.isBuilt ()
    && var_cas_ROUTINE_IMPLEMENTATION.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Routine '")).operator_concat (var_cas_ROUTINE_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << var_cas_ROUTINE_IMPLEMENTATION ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'functionImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_functionImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_FUNCTION_NAME,
                                const GGS_string& var_cas_FUNCTION_IMPLEMENTATION,
                                const GGS_formalInputParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST,
                                const GGS_string& var_cas_RETURN_TYPE_IDENTIFIER) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_FUNCTION_NAME.isBuilt ()
    && var_cas_FUNCTION_IMPLEMENTATION.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt ()
    && var_cas_RETURN_TYPE_IDENTIFIER.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Function '")).operator_concat (var_cas_FUNCTION_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << var_cas_FUNCTION_IMPLEMENTATION ;
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "//  Introspection                                                            *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const C_galgas_type_descriptor * functionArgs_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " [" ;
result << var_cas_FORMAL_ARGUMENT_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (12)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
result << "] = {\n" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_845 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_845 = NULL ;
while (((operand_845 = enumerator_845.nextObject ()))) {
macroValidPointer (operand_845) ;
result << "  & kTypeDescriptor_GALGAS_" ;
result << operand_845->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (15)) ;
result << ",\n" ;
}
result << "  NULL\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static GALGASap_object functionWithGenericHeader_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n"
  "                                                 " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "cRootObjectArray & inEffectiveParameterArray,\n"
  "                                                 " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGASap_location & inErrorLocation\n"
  "                                                 " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  const bool ok = inCompiler->checkFunctionCallArguments (" ;
result << var_cas_FUNCTION_NAME.reader_utf8Representation () ;
result << ",\n"
  "                                                          " ;
result << var_cas_FORMAL_ARGUMENT_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (27)) ;
result << ",\n"
  "                                                          functionArgs_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << ",\n"
  "                                                          inEffectiveParameterArray,\n"
  "                                                          inErrorLocation\n"
  "                                                          COMMA_THERE) ;\n"
  "  GALGASap_object result ;\n"
  "  if (ok) {\n" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_2051 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_2051 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2051 = enumerator_2051.nextObject ()))) {
macroValidPointer (operand_2051) ;
result << "    GALGASap_" ;
result << operand_2051->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << " operand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << " = inEffectiveParameterArray.objectAtIndex (" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << " COMMA_THERE) ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "    result = function_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_2352 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_2352 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2352 = enumerator_2352.nextObject ()))) {
macroValidPointer (operand_2352) ;
result << "operand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (39)) ;
result << ", " ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "inCompiler COMMA_THERE).embedObject () ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "C_galgas_function_descriptor functionDescriptor_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << var_cas_FUNCTION_NAME.reader_utf8Representation () ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "functionWithGenericHeader_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "& kTypeDescriptor_GALGAS_" ;
result << var_cas_RETURN_TYPE_IDENTIFIER ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << var_cas_FORMAL_ARGUMENT_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (51)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "functionArgs_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << ") ;\n"
  "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@semanticDeclarationForGeneration.appendDeclaration'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendDeclaration (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_14979
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_14979 != NULL) {
var_cas_outHeader = GGS_string ("") ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration> gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration (typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendDeclaration (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration
findCategoryReader__semanticDeclarationForGeneration__appendDeclaration (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendDeclaration (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendDeclaration ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@routinePrototypeDeclarationForGeneration.appendDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__routinePrototypeDeclarationForGeneration__appendDeclaration (C_Compiler & inLexique,
                                const cPtr_routinePrototypeDeclarationForGeneration * operand_15191
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_15191 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_routineDeclaration (inLexique, operand_15191->mRoutineName, operand_15191->mFormalArgumentList) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@functionPrototypeDeclarationForGeneration.appendDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__functionPrototypeDeclarationForGeneration__appendDeclaration (C_Compiler & inLexique,
                                const cPtr_functionPrototypeDeclarationForGeneration * operand_15517
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_15517 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_functionDeclaration (inLexique, operand_15517->mFunctionName, operand_15517->mFormalArgumentList, operand_15517->mReturnType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (389))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@onceFunctionDeclarationForGeneration.appendDeclaration'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__onceFunctionDeclarationForGeneration__appendDeclaration (C_Compiler & inLexique,
                                const cPtr_onceFunctionDeclarationForGeneration * operand_15884
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_15884 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_functionDeclaration (inLexique, operand_15884->mFunctionName, GGS_formalInputParameterListForGeneration ::constructor_emptyList (), operand_15884->mReturnType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (399))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@structTypeForGeneration.appendDeclaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__structTypeForGeneration__appendDeclaration (C_Compiler & inLexique,
                                const cPtr_structTypeForGeneration * operand_16269
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_16269 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_structTypeHeader (inLexique, operand_16269->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (407)), operand_16269->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (408)), operand_16269->mTypedAttributeList) ;
var_cas_outHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (inLexique, operand_16269->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (412)), operand_16269->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (413)), operand_16269->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (414)), operand_16269->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (415)), operand_16269->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (416)), operand_16269->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (417)), operand_16269->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (418)), operand_16269->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (419)), operand_16269->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (420)), operand_16269->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (421)), operand_16269->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (422)), operand_16269->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (423)))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@listTypeForGeneration.appendDeclaration'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__listTypeForGeneration__appendDeclaration (C_Compiler & inLexique,
                                const cPtr_listTypeForGeneration * operand_17109
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_17109 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_listTypeHeader (inLexique, operand_17109->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (431)), operand_17109->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (432)), operand_17109->mTypedAttributeList) ;
var_cas_outHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (inLexique, operand_17109->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (436)), operand_17109->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (437)), operand_17109->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (438)), operand_17109->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (439)), operand_17109->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (440)), operand_17109->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (441)), operand_17109->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (442)), operand_17109->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (443)), operand_17109->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (444)), operand_17109->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (445)), operand_17109->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (446)), operand_17109->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (447)))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticDeclarationForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendTypeGenericImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_18353
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_18353 != NULL) {
var_cas_outImplementation = GGS_string ("") ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation> gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendTypeGenericImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation
findCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendTypeGenericImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticTypeForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticTypeForGeneration__appendTypeGenericImplementation (C_Compiler & inLexique,
                                const cPtr_semanticTypeForGeneration * operand_18579
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_18579 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_genericTypeImplementation (inLexique, operand_18579->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (466)), operand_18579->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (467)), operand_18579->mTypeIndex.reader_mSuperType (inLexique COMMA_SOURCE_FILE_AT_LINE (468))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticDeclarationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendSpecificImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_19912
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_19912 != NULL) {
var_cas_outImplementation = GGS_string ("") ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation> gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendSpecificImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation
findCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendSpecificImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category reader '@listmapTypeForGeneration.appendSpecificImplementation'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__listmapTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_listmapTypeForGeneration * operand_21005
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_21005 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplateEX_listmapTypeSpecificImplementation (inLexique, operand_21005->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (525)), operand_21005->mAssociatedListTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (526)), operand_21005->mAssociatedListTypedAttributeList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category reader '@mapTypeForGeneration.appendSpecificImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_mapTypeForGeneration * operand_21436
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_21436 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplateEX_mapTypeSpecificImplementation (inLexique, operand_21436->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (535)), operand_21436->mTypedAttributeList, operand_21436->mInsertMethodList, operand_21436->mSearchMethodList, operand_21436->mRemoveMethodList, operand_21436->mHasInsertOrReplaceModifier, operand_21436->mWithAccessorMap) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@sortedListTypeForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__sortedListTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_sortedListTypeForGeneration * operand_21923
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_21923 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplateEX_sortedlistTypeSpecificImplementation (inLexique, operand_21923->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (549)), operand_21923->mTypedAttributeList, operand_21923->mSortDescriptorList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@enumTypeForGeneration.appendSpecificImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__enumTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_enumTypeForGeneration * operand_22312
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_22312 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplateEX_enumTypeSpecificImplementation (inLexique, operand_22312->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (559)), operand_22312->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (560)), operand_22312->mConstantList, operand_22312->mEnumMessageList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@mapProxyTypeForGeneration.appendSpecificImplementation'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapProxyTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_mapProxyTypeForGeneration * operand_22712
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_22712 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplateEX_mapProxyTypeSpecificImplementation (inLexique, operand_22712->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (570)), operand_22712->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (571)), operand_22712->mAssociatedMapTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (572)), operand_22712->mAssociatedMapTypedAttributeList, operand_22712->mSearchMethodList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@classTypeForGeneration.appendSpecificImplementation'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__classTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_classTypeForGeneration * operand_23189
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_23189 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplateEX_classTypeSpecificImplementation (inLexique, operand_23189->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (582)), operand_23189->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (583)), ((operand_23189->mSuperClass.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (584))).isBuiltAndTrue () ? (GGS_string ("class")) : (operand_23189->mSuperClass.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (584)))), operand_23189->mTypedAttributeList, operand_23189->mAllTypedAttributeList, operand_23189->mAllTypedAttributeList.reader_subListWithRange (inLexique, GGS_uint (0U), operand_23189->mAllTypedAttributeList.reader_length ().substract_operation (inLexique, operand_23189->mTypedAttributeList.reader_length () COMMA_SOURCE_FILE_AT_LINE (587)) COMMA_SOURCE_FILE_AT_LINE (587)), operand_23189->mIsAbstract, operand_23189->mMethodList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category reader '@structTypeForGeneration.appendSpecificImplementation'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__structTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_structTypeForGeneration * operand_23838
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_23838 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_structTypeSpecificImplementation (inLexique, operand_23838->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (597)), operand_23838->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (598)), operand_23838->mTypedAttributeList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@routineImplementationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__routineImplementationForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_routineImplementationForGeneration * operand_24231
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_24231 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_routineImplementation (inLexique, operand_24231->mRoutineName, function_generateProcedure (inLexique, (GGS_string ("routine_")).operator_concat (operand_24231->mRoutineName.reader_identifierRepresentation ()), operand_24231->mFormalArgumentList, operand_24231->mRoutineInstructionList, GGS_bool (false), GGS_string ("C_Compiler"), GGS_bool (true), GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (608))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@functionImplementationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__functionImplementationForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_functionImplementationForGeneration * operand_24868
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_24868 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_functionImplementation (inLexique, operand_24868->mFunctionName, function_generateFunction (inLexique, (GGS_string ("function_")).operator_concat (operand_24868->mFunctionName.reader_identifierRepresentation ()), operand_24868->mFormalArgumentList, operand_24868->mFunctionInstructionList, GGS_string ("C_Compiler"), operand_24868->mReturnType.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (630)), operand_24868->mResultVariableCppName COMMA_SOURCE_FILE_AT_LINE (625)), operand_24868->mFormalArgumentList, operand_24868->mReturnType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (634))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@onceFunctionDeclarationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__onceFunctionDeclarationForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_onceFunctionDeclarationForGeneration * operand_25491
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_25491 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_functionImplementation (inLexique, operand_25491->mFunctionName, function_generateFunction (inLexique, (GGS_string ("function_")).operator_concat (operand_25491->mFunctionName.reader_identifierRepresentation ()), GGS_formalInputParameterListForGeneration ::constructor_emptyList (), operand_25491->mFunctionInstructionList, GGS_string ("C_Compiler"), operand_25491->mReturnType.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (648)), operand_25491->mResultVariableCppName COMMA_SOURCE_FILE_AT_LINE (643)), GGS_formalInputParameterListForGeneration ::constructor_emptyList (), operand_25491->mReturnType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (652))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticGeneration (void) {
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration (category_reader__semanticDeclarationForGeneration__appendDeclaration, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration) category_reader__routinePrototypeDeclarationForGeneration__appendDeclaration, gClassInfoFor__routinePrototypeDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration) category_reader__functionPrototypeDeclarationForGeneration__appendDeclaration, gClassInfoFor__functionPrototypeDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration) category_reader__onceFunctionDeclarationForGeneration__appendDeclaration, gClassInfoFor__onceFunctionDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration) category_reader__structTypeForGeneration__appendDeclaration, gClassInfoFor__structTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration) category_reader__listTypeForGeneration__appendDeclaration, gClassInfoFor__listTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (category_reader__semanticDeclarationForGeneration__appendTypeGenericImplementation, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation) category_reader__semanticTypeForGeneration__appendTypeGenericImplementation, gClassInfoFor__semanticTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (category_reader__semanticDeclarationForGeneration__appendSpecificImplementation, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__listmapTypeForGeneration__appendSpecificImplementation, gClassInfoFor__listmapTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__mapTypeForGeneration__appendSpecificImplementation, gClassInfoFor__mapTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__sortedListTypeForGeneration__appendSpecificImplementation, gClassInfoFor__sortedListTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__enumTypeForGeneration__appendSpecificImplementation, gClassInfoFor__enumTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__mapProxyTypeForGeneration__appendSpecificImplementation, gClassInfoFor__mapProxyTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__classTypeForGeneration__appendSpecificImplementation, gClassInfoFor__classTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__structTypeForGeneration__appendSpecificImplementation, gClassInfoFor__structTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__routineImplementationForGeneration__appendSpecificImplementation, gClassInfoFor__routineImplementationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__functionImplementationForGeneration__appendSpecificImplementation, gClassInfoFor__functionImplementationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__onceFunctionDeclarationForGeneration__appendSpecificImplementation, gClassInfoFor__onceFunctionDeclarationForGeneration.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_semanticGeneration (void) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration.free () ;
  gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.free () ;
  gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticGeneration (prologueRoutineFor_semanticGeneration, epilogueRoutineFor_semanticGeneration) ;

//---------------------------------------------------------------------------*

