//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'semanticGeneration.cpp'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     october 12th, 2010, at 16h52'41"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticGeneration.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticGeneration.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of function "generateProcedure"               *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string function_generateProcedure (C_Compiler & inLexique,
                                const GGS_string  var_cas_inProcedureName,
                                const GGS_formalParameterListForGeneration   var_cas_inFormalArgumentList,
                                const GGS_semanticInstructionListForGeneration   var_cas_inInstructionList,
                                const GGS_bool  var_cas_inProcedureIsConst,
                                const GGS_string  var_cas_inCompilerTypeName,
                                const GGS_bool  var_cas_inGenerateLocationArgs,
                                const GGS_bool  var_cas_inGenerateResetTemplateString COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER function_generateProcedure at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_outGeneratedCode ;
  GGS_stringset  var_cas_unusedVariableCppNameSet = GGS_stringset ::constructor_emptySet () ;
  const GGS_bool cond_2502 = (var_cas_inGenerateResetTemplateString).operator_not () ;
  if (cond_2502.isBuiltAndTrue ()) {
    var_cas_unusedVariableCppNameSet.addAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (44))) ;
  }
  {
    GGS_formalParameterListForGeneration::cEnumerator enumerator_2538 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalParameterListForGeneration::cElement * operand_2538 = NULL ;
    while (((operand_2538 = enumerator_2538.nextObject ()))) {
      macroValidPointer (operand_2538) ;
      const GGS_bool cond_2695 = (operand_2538->mFormalArgumentPassingMode).operator_isNotEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (47))) ;
      if (cond_2695.isBuiltAndTrue ()) {
        var_cas_unusedVariableCppNameSet.addAssign_operation (operand_2538->mFormalArgumentCppName) ;
      }
    }
  }
  GGS_uint  var_cas_temporaryVariableIndex = GGS_uint (0U) ;
  GGS_string var_cas_routineBody = GGS_string ("") ;
  var_cas_routineBody.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (54)) ;
  {
    GGS_semanticInstructionListForGeneration::cEnumerator enumerator_2869 (var_cas_inInstructionList, true) ;
    const GGS_semanticInstructionListForGeneration::cElement * operand_2869 = NULL ;
    while (((operand_2869 = enumerator_2869.nextObject ()))) {
      macroValidPointer (operand_2869) ;
      { typeCategoryMethod__semanticInstructionForGeneration__generateInstruction method = findCategoryMethod__semanticInstructionForGeneration__generateInstruction (operand_2869->mInstruction.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_2869->mInstruction (HERE), var_cas_temporaryVariableIndex, var_cas_unusedVariableCppNameSet, var_cas_routineBody COMMA_SOURCE_FILE_AT_LINE (56)) ;
        }
      }
    }
  }
  var_cas_routineBody.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (58)) ;
  var_cas_outGeneratedCode = ((GGS_string ("void ")).operator_concat (var_cas_inProcedureName)).operator_concat (GGS_string (" (")) ;
  const GGS_uint  var_cas_colRef = var_cas_outGeneratedCode.reader_currentColumn () ;
  {
    GGS_formalParameterListForGeneration::cEnumerator enumerator_3206 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalParameterListForGeneration::cElement * operand_3206 = NULL ;
    while (((operand_3206 = enumerator_3206.nextObject ()))) {
      macroValidPointer (operand_3206) ;
      switch (operand_3206->mFormalArgumentPassingMode.enumValue ()) {
      case GGS_formalArgumentPassingModeAST::enum_argumentConstantIn:
        {
        var_cas_outGeneratedCode.appendCString ("const GALGAS_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3206->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (66))) ;
        var_cas_outGeneratedCode.appendCString (" & ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentInOut:
        {
        var_cas_outGeneratedCode.appendCString ("GALGAS_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3206->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (68))) ;
        var_cas_outGeneratedCode.appendCString (" & ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentOut:
        {
        var_cas_outGeneratedCode.appendCString ("GALGAS_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3206->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (70))) ;
        var_cas_outGeneratedCode.appendCString (" & ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentIn:
        {
        var_cas_outGeneratedCode.appendCString ("GALGAS_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3206->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (72))) ;
        var_cas_outGeneratedCode.appendCString (" ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::kNotBuilt:
        break ;
      }
      const GGS_bool cond_3895 = var_cas_unusedVariableCppNameSet.reader_hasKey (operand_3206->mFormalArgumentCppName) ;
      if (cond_3895.isBuiltAndTrue ()) {
        var_cas_outGeneratedCode.appendCString ("/* ") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3206->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (" */") ;
      }else if (cond_3895.isBuiltAndFalse ()) {
        var_cas_outGeneratedCode.dotAssign_operation (operand_3206->mFormalArgumentCppName) ;
      }
      var_cas_outGeneratedCode.appendCString (",\n") ;
      var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (80)) ;
    }
  }
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inCompilerTypeName) ;
  var_cas_outGeneratedCode.appendCString (" * ") ;
  const GGS_bool cond_4272 = var_cas_unusedVariableCppNameSet.reader_hasKey (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (84))) ;
  if (cond_4272.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("/* ") ;
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (85))) ;
    var_cas_outGeneratedCode.appendCString (" */") ;
  }else if (cond_4272.isBuiltAndFalse ()) {
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (87))) ;
  }
  const GGS_bool cond_4512 = var_cas_inGenerateLocationArgs ;
  if (cond_4512.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("\n") ;
    var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (91)) ;
    var_cas_outGeneratedCode.appendCString ("COMMA_UNUSED_LOCATION_ARGS") ;
  }
  var_cas_outGeneratedCode.appendCString (")") ;
  const GGS_bool cond_4615 = var_cas_inProcedureIsConst ;
  if (cond_4615.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString (" const") ;
  }
  var_cas_outGeneratedCode.appendCString (" {\n") ;
  {
      GGS_uint var_cas_IDX (true, 0) ;
    GGS_formalParameterListForGeneration::cEnumerator enumerator_4711 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalParameterListForGeneration::cElement * operand_4711 = NULL ;
    while (((operand_4711 = enumerator_4711.nextObject ()))) {
      macroValidPointer (operand_4711) ;
      switch (operand_4711->mFormalArgumentPassingMode.enumValue ()) {
      case GGS_formalArgumentPassingModeAST::enum_argumentOut:
        {
        var_cas_outGeneratedCode.appendCString ("  ") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_4711->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (".drop () ; // Release 'out' argument\n") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentConstantIn:
      case GGS_formalArgumentPassingModeAST::enum_argumentIn:
      case GGS_formalArgumentPassingModeAST::enum_argumentInOut:
        {
        }
        break ;
      case GGS_formalArgumentPassingModeAST::kNotBuilt:
        break ;
      }
      var_cas_IDX.mValue ++ ;
    }
  }
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_routineBody) ;
  const GGS_bool cond_5176 = var_cas_inGenerateResetTemplateString ;
  if (cond_5176.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("  ") ;
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (111))) ;
    var_cas_outGeneratedCode.appendCString ("->resetTemplateString () ;\n") ;
  }
  var_cas_outGeneratedCode.appendCString ("}\n"
    "\n") ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE function_generateProcedure\n") ;
  #endif
  return var_cas_outGeneratedCode ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_generateProcedure (C_Compiler & inLexique,
                           const GGS_objectlist & inEffectiveParameterArray,
                           const GGS_location & inErrorLocation
                           COMMA_LOCATION_ARGS) {
  const GGS_string arg_0 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (0) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_formalParameterListForGeneration  arg_1 = GGS_formalParameterListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (1) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_semanticInstructionListForGeneration  arg_2 = GGS_semanticInstructionListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (2) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_bool arg_3 = GGS_bool::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (3) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_4 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (4) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_bool arg_5 = GGS_bool::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (5) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_bool arg_6 = GGS_bool::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (6) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string result = function_generateProcedure (inLexique,
                            arg_0,
                            arg_1,
                            arg_2,
                            arg_3,
                            arg_4,
                            arg_5,
                            arg_6
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

static const C_galgas_type_descriptorEX *
kArgumentTypeList_generateProcedure [7] = {& kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_formalParameterListForGeneration ,
                              & kTypeDescriptor_GGS_semanticInstructionListForGeneration ,
                              & kTypeDescriptor_GGS_bool,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_bool,
                              & kTypeDescriptor_GGS_bool} ;

const C_galgas_function_descriptorEX
kFunction_descriptor_generateProcedure ("generateProcedure",
                              functionForGenericCall_generateProcedure,
                              & kTypeDescriptor_GGS_string,
                              7,
                              kArgumentTypeList_generateProcedure) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of function "generateFunction"                *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string function_generateFunction (C_Compiler & inLexique,
                                const GGS_string  var_cas_inProcedureName,
                                const GGS_formalInputParameterListForGeneration   var_cas_inFormalArgumentList,
                                const GGS_semanticInstructionListForGeneration   var_cas_inInstructionList,
                                const GGS_string  var_cas_inCompilerTypeName,
                                const GGS_string  var_cas_inResultTypeName,
                                const GGS_string  var_cas_inResultVariableCppName COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER function_generateFunction at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_outGeneratedCode ;
  GGS_stringset  var_cas_unusedVariableCppNameSet = GGS_stringset ::constructor_emptySet () ;
  var_cas_unusedVariableCppNameSet.addAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (134))) ;
  {
    GGS_formalInputParameterListForGeneration::cEnumerator enumerator_6164 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalInputParameterListForGeneration::cElement * operand_6164 = NULL ;
    while (((operand_6164 = enumerator_6164.nextObject ()))) {
      macroValidPointer (operand_6164) ;
      var_cas_unusedVariableCppNameSet.addAssign_operation (operand_6164->mFormalArgumentCppName) ;
    }
  }
  GGS_uint  var_cas_temporaryVariableIndex = GGS_uint (0U) ;
  GGS_string var_cas_routineBody = GGS_string ("") ;
  var_cas_routineBody.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (142)) ;
  {
    GGS_semanticInstructionListForGeneration::cEnumerator enumerator_6394 (var_cas_inInstructionList, true) ;
    const GGS_semanticInstructionListForGeneration::cElement * operand_6394 = NULL ;
    while (((operand_6394 = enumerator_6394.nextObject ()))) {
      macroValidPointer (operand_6394) ;
      { typeCategoryMethod__semanticInstructionForGeneration__generateInstruction method = findCategoryMethod__semanticInstructionForGeneration__generateInstruction (operand_6394->mInstruction.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_6394->mInstruction (HERE), var_cas_temporaryVariableIndex, var_cas_unusedVariableCppNameSet, var_cas_routineBody COMMA_SOURCE_FILE_AT_LINE (144)) ;
        }
      }
    }
  }
  var_cas_routineBody.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (146)) ;
  var_cas_outGeneratedCode = ((GGS_string ("GALGAS_")).operator_concat (var_cas_inResultTypeName.reader_identifierRepresentation ())).operator_concat (GGS_string (" ")) ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inProcedureName) ;
  var_cas_outGeneratedCode.appendCString (" (") ;
  const GGS_uint  var_cas_colRef = var_cas_outGeneratedCode.reader_currentColumn () ;
  {
    GGS_formalInputParameterListForGeneration::cEnumerator enumerator_6807 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalInputParameterListForGeneration::cElement * operand_6807 = NULL ;
    while (((operand_6807 = enumerator_6807.nextObject ()))) {
      macroValidPointer (operand_6807) ;
      var_cas_outGeneratedCode.appendCString ("const GALGAS_") ;
      var_cas_outGeneratedCode.dotAssign_operation (operand_6807->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (153))) ;
      var_cas_outGeneratedCode.appendCString (" & ") ;
      const GGS_bool cond_7055 = var_cas_unusedVariableCppNameSet.reader_hasKey (operand_6807->mFormalArgumentCppName) ;
      if (cond_7055.isBuiltAndTrue ()) {
        var_cas_outGeneratedCode.appendCString ("/* ") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_6807->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (" */") ;
      }else if (cond_7055.isBuiltAndFalse ()) {
        var_cas_outGeneratedCode.dotAssign_operation (operand_6807->mFormalArgumentCppName) ;
      }
      var_cas_outGeneratedCode.appendCString (",\n") ;
      var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (160)) ;
    }
  }
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inCompilerTypeName) ;
  var_cas_outGeneratedCode.appendCString (" * ") ;
  const GGS_bool cond_7432 = var_cas_unusedVariableCppNameSet.reader_hasKey (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (164))) ;
  if (cond_7432.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("/* ") ;
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (165))) ;
    var_cas_outGeneratedCode.appendCString (" */") ;
  }else if (cond_7432.isBuiltAndFalse ()) {
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (167))) ;
  }
  var_cas_outGeneratedCode.appendCString ("\n") ;
  var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (170)) ;
  var_cas_outGeneratedCode.appendCString ("COMMA_UNUSED_LOCATION_ARGS)") ;
  var_cas_outGeneratedCode.appendCString (" {\n") ;
  var_cas_outGeneratedCode.appendCString ("  GALGAS_") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inResultTypeName.reader_identifierRepresentation ()) ;
  var_cas_outGeneratedCode.appendCString (" ") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inResultVariableCppName) ;
  var_cas_outGeneratedCode.appendCString (" ; // Returned variable\n") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_routineBody) ;
  var_cas_outGeneratedCode.appendCString ("//---\n") ;
  var_cas_outGeneratedCode.appendCString ("  return ") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inResultVariableCppName) ;
  var_cas_outGeneratedCode.appendCString (" ;\n") ;
  var_cas_outGeneratedCode.appendCString ("}\n"
    "\n") ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE function_generateFunction\n") ;
  #endif
  return var_cas_outGeneratedCode ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_generateFunction (C_Compiler & inLexique,
                           const GGS_objectlist & inEffectiveParameterArray,
                           const GGS_location & inErrorLocation
                           COMMA_LOCATION_ARGS) {
  const GGS_string arg_0 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (0) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_formalInputParameterListForGeneration  arg_1 = GGS_formalInputParameterListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (1) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_semanticInstructionListForGeneration  arg_2 = GGS_semanticInstructionListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (2) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_3 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (3) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_4 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (4) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_5 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (5) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string result = function_generateFunction (inLexique,
                            arg_0,
                            arg_1,
                            arg_2,
                            arg_3,
                            arg_4,
                            arg_5
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

static const C_galgas_type_descriptorEX *
kArgumentTypeList_generateFunction [6] = {& kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_formalInputParameterListForGeneration ,
                              & kTypeDescriptor_GGS_semanticInstructionListForGeneration ,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_string} ;

const C_galgas_function_descriptorEX
kFunction_descriptor_generateFunction ("generateFunction",
                              functionForGenericCall_generateFunction,
                              & kTypeDescriptor_GGS_string,
                              6,
                              kArgumentTypeList_generateFunction) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of wrapper 'typeGenerationTemplate'             *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_typeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_typeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_typeGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_typeGenerationTemplate_0,
  0,
  gWrapperAllDirectories_typeGenerationTemplate_0
) ;

//---------------------------------------------------------------------------*
//                                                                           *
//'unifiedClassBodyForType' template of 'typeGenerationTemplate' filewrapper *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_bool& var_cas_IS_CONCRETE,
                                const GGS_constructorMap & var_cas_CONSTRUCTOR_MAP,
                                const GGS_readerMap & var_cas_READER_MAP,
                                const GGS_modifierMap & var_cas_MODIFIER_MAP,
                                const GGS_instanceMethodMap & var_cas_INSTANCE_METHOD_MAP,
                                const GGS_classMethodMap & var_cas_CLASS_METHOD_MAP,
                                const GGS_enumerationDescriptorList & var_cas_ENUMERATION_DESCRIPTOR_LIST,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_unifiedTypeMapProxyList & var_cas_ADD_ASSIGN_ARGUMENT_LIST,
                                const GGS_withAccessorMap & var_cas_WITH_ACCESSOR_MAP) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_IS_CONCRETE.isBuilt ()
    && var_cas_CONSTRUCTOR_MAP.isBuilt ()
    && var_cas_READER_MAP.isBuilt ()
    && var_cas_MODIFIER_MAP.isBuilt ()
    && var_cas_INSTANCE_METHOD_MAP.isBuilt ()
    && var_cas_CLASS_METHOD_MAP.isBuilt ()
    && var_cas_ENUMERATION_DESCRIPTOR_LIST.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_ADD_ASSIGN_ARGUMENT_LIST.isBuilt ()
    && var_cas_WITH_ACCESSOR_MAP.isBuilt () ;
  if (isBuilt) {
    result << "//-- Start of generic part --*\n"
      "\n" ;
    if ((var_cas_CONSTRUCTOR_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- GALGAS constructors\n" ;
      GGS_constructorMap::cEnumerator enumerator_159 (var_cas_CONSTRUCTOR_MAP, true) ;
      const GGS_constructorMap::cElement * operand_159 = NULL ;
      while (((operand_159 = enumerator_159.nextObject ()))) {
        macroValidPointer (operand_159) ;
        result << "  public : static GALGAS_" ;
        result << operand_159->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (7)) ;
        result << " constructor_" ;
        result << operand_159->mKey.ggs_string ().reader_identifierRepresentation () ;
        result << " (" ;
        columnMarker = result.currentColumn () ;
        GGS_unifiedTypeMapProxyList::cEnumerator enumerator_324 (operand_159->mInfo.mArgumentTypeList, true) ;
        const GGS_unifiedTypeMapProxyList::cElement * operand_324 = NULL ;
        { GGS_uint var_cas_IDX (true, 0) ;
      while (((operand_324 = enumerator_324.nextObject ()))) {
        macroValidPointer (operand_324) ;
        result << "const GALGAS_" ;
        result << operand_324->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
        result << " & inOperand" ;
        result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
        if (enumerator_324.hasNextObject ()) {
          result << ",\n" ;
          result.appendSpacesUntilColumn (columnMarker) ;
        }
        var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
      }
    }
    if ((operand_159->mInfo.mHasCompilerArgument).operator_and ((operand_159->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
      result << ",\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "C_Compiler * inCompiler\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else if (operand_159->mInfo.mHasCompilerArgument.boolValue ()) {
      result << "C_Compiler * inCompiler\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else if ((operand_159->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
      result << "\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
      result << "LOCATION_ARGS) ;\n"
        "\n" ;
    }
  }
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateCopyConstructorAndAssignmentOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (26)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- Handle copy\n"
    "  public : GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " (const GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " & inSource) ;\n"
    "  public : GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " & operator = (const GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " & inSource) ;\n"
    "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryShiftOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (32)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- << and >> shift operators\n"
    "public : VIRTUAL_IN_DEBUG GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " left_shift_operation (" ;
  columnMarker = result.currentColumn () ;
  result << "const GALGAS_uint & inShiftOperand\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "COMMA_LOCATION_ARGS) const ;\n"
    "\n"
    "public : VIRTUAL_IN_DEBUG GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " right_shift_operation (" ;
  columnMarker = result.currentColumn () ;
  result << "const GALGAS_uint & inShiftOperand\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "COMMA_LOCATION_ARGS) const ;\n"
    "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_dotAssignOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (40)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- .= operator\n"
    "  public : VIRTUAL_IN_DEBUG void dotAssign_operation (const GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " inOperand\n"
    "                                                      COMMA_LOCATION_ARGS) ;\n"
    "\n" ;
}else {
}
if ((var_cas_ADD_ASSIGN_ARGUMENT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- += operator\n"
    "  public : VIRTUAL_IN_DEBUG void addAssign_operation (" ;
  columnMarker = result.currentColumn () ;
  GGS_unifiedTypeMapProxyList::cEnumerator enumerator_2150 (var_cas_ADD_ASSIGN_ARGUMENT_LIST, true) ;
  const GGS_unifiedTypeMapProxyList::cElement * operand_2150 = NULL ;
  { GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2150 = enumerator_2150.nextObject ()))) {
  macroValidPointer (operand_2150) ;
  result << "const GALGAS_" ;
  result << operand_2150->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (50)) ;
  result << " & inOperand" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (50)) ;
  if (enumerator_2150.hasNextObject ()) {
    result << ",\n" ;
    result.appendSpacesUntilColumn (columnMarker) ;
  }
  var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryAndOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (57)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- & operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_and (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryOrOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (63)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- | operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_or (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryXorOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (69)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- ^ operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_xor (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryNotOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (75)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- not operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_not (LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryTildeOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (80)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- ~ operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_tilde (LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryConcatOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (85)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- . (concat) operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_concat (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryAddOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (91)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- + operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " add_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binarySubOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (98)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- - operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " substract_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryMulOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (105)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- * operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " multiply_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryDivOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (112)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- / operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " divide_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryModOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (119)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- mod operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " modulo_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryMinusOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (126)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- unary - operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_unary_minus (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (132)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- ++, -- operators\n"
  "  public : VIRTUAL_IN_DEBUG void increment_operation (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : VIRTUAL_IN_DEBUG void decrement_operation (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (139)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Implementation of reader 'description'\n"
  "  public : VIRTUAL_IN_DEBUG void log (const char * inMessage) const ;\n"
  "\n"
  "  public : VIRTUAL_IN_DEBUG void description (C_String & ioString,\n"
  "                                              const PMSInt32 inIndentation) const ;\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_doNotGenererateObjectCompare (inLexique COMMA_SOURCE_FILE_AT_LINE (146)))).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Comparison\n"
  "  public : enumComparisonResult objectCompare (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand) const ;\n" ;
}else {
}
result << "\n"
  "//--------------------------------- Modifiers\n" ;
GGS_modifierMap::cEnumerator enumerator_6837 (var_cas_MODIFIER_MAP, true) ;
const GGS_modifierMap::cElement * operand_6837 = NULL ;
while (((operand_6837 = enumerator_6837.nextObject ()))) {
macroValidPointer (operand_6837) ;
if ((((operand_6837->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (156)))).operator_or ((operand_6837->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (156))))).operator_or ((operand_6837->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasicFinal (inLexique COMMA_SOURCE_FILE_AT_LINE (156)))).boolValue ()) {
result << "  public : VIRTUAL_IN_DEBUG void modifier_" ;
result << operand_6837->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_7105 (operand_6837->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_7105 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7105 = enumerator_7105.nextObject ()))) {
macroValidPointer (operand_7105) ;
if ((operand_7105->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (159))).boolValue ()) {
  result << "GALGAS_" ;
  result << operand_7105->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (160)) ;
  result << " constinArgument" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (160)) ;
}else if ((operand_7105->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (161))).boolValue ()) {
  result << "GALGAS_" ;
  result << operand_7105->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (162)) ;
  result << " & ioArgument" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (162)) ;
}else if ((operand_7105->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (163))).boolValue ()) {
  result << "GALGAS_" ;
  result << operand_7105->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (164)) ;
  result << " & outArgument" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (164)) ;
}else {
  result << "GALGAS_" ;
  result << operand_7105->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
  result << " inArgument" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
}
if (enumerator_7105.hasNextObject ()) {
  result << ",\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_6837->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_6837->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_6837->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") ;\n"
  "\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Instance Methods\n" ;
GGS_instanceMethodMap::cEnumerator enumerator_8364 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_8364 = NULL ;
while (((operand_8364 = enumerator_8364.nextObject ()))) {
macroValidPointer (operand_8364) ;
if ((((operand_8364->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (192)))).operator_or ((operand_8364->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (192))))).operator_or ((operand_8364->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasicFinal (inLexique COMMA_SOURCE_FILE_AT_LINE (192)))).boolValue ()) {
result << "  public : VIRTUAL_IN_DEBUG void method_" ;
result << operand_8364->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_8630 (operand_8364->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_8630 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8630 = enumerator_8630.nextObject ()))) {
macroValidPointer (operand_8630) ;
if ((operand_8630->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (195))).boolValue ()) {
result << "GALGAS_" ;
result << operand_8630->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (196)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (196)) ;
}else if ((operand_8630->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (197))).boolValue ()) {
result << "GALGAS_" ;
result << operand_8630->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (198)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (198)) ;
}else if ((operand_8630->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (199))).boolValue ()) {
result << "GALGAS_" ;
result << operand_8630->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
}else {
result << "GALGAS_" ;
result << operand_8630->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (202)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (202)) ;
}
if (enumerator_8630.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_8364->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_8364->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_8364->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") const ;\n"
  "\n" ;
}else {
}
}
result << "//--------------------------------- Class Methods\n" ;
GGS_classMethodMap::cEnumerator enumerator_9888 (var_cas_CLASS_METHOD_MAP, true) ;
const GGS_classMethodMap::cElement * operand_9888 = NULL ;
while (((operand_9888 = enumerator_9888.nextObject ()))) {
macroValidPointer (operand_9888) ;
result << "  public : static void class_method_" ;
result << operand_9888->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_9995 (operand_9888->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_9995 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9995 = enumerator_9995.nextObject ()))) {
macroValidPointer (operand_9995) ;
if ((operand_9995->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (229))).boolValue ()) {
result << "GALGAS_" ;
result << operand_9995->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (230)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (230)) ;
}else if ((operand_9995->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (231))).boolValue ()) {
result << "GALGAS_" ;
result << operand_9995->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (232)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (232)) ;
}else if ((operand_9995->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (233))).boolValue ()) {
result << "GALGAS_" ;
result << operand_9995->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (234)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (234)) ;
}else {
result << "GALGAS_" ;
result << operand_9995->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (236)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (236)) ;
}
if (enumerator_9995.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_9888->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_9888->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_9888->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") ;\n"
  "\n" ;
}
result << "\n"
  "//--------------------------------- Readers\n" ;
GGS_readerMap::cEnumerator enumerator_11173 (var_cas_READER_MAP, true) ;
const GGS_readerMap::cElement * operand_11173 = NULL ;
while (((operand_11173 = enumerator_11173.nextObject ()))) {
macroValidPointer (operand_11173) ;
if ((((operand_11173->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (261)))).operator_or ((operand_11173->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (261))))).operator_or ((operand_11173->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasicFinal (inLexique COMMA_SOURCE_FILE_AT_LINE (261)))).boolValue ()) {
result << "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << operand_11173->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (262)) ;
result << " reader_" ;
result << operand_11173->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_11498 (operand_11173->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_11498 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_11498 = enumerator_11498.nextObject ()))) {
macroValidPointer (operand_11498) ;
result << "const GALGAS_" ;
result << operand_11498->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (264)) ;
result << " & constinOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (264)) ;
if (enumerator_11498.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_11173->mInfo.mArgumentTypeList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_11173->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
}else {
if (operand_11173->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") const ;\n"
  "\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Introspection\n"
  "  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * typeDescriptor (void) const ;\n" ;
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateEnumerationHelperMethods (inLexique COMMA_SOURCE_FILE_AT_LINE (288)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Enumeration helper methods\n"
  "  protected : VIRTUAL_IN_DEBUG void populateEnumerationArray (capCollectionElementArray & inEnumerationArray,\n"
  "                                                              const bool inAscending) const ;\n"
  "\n" ;
}else {
}
if ((var_cas_WITH_ACCESSOR_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- 'with' accessors\n" ;
GGS_withAccessorMap::cEnumerator enumerator_12672 (var_cas_WITH_ACCESSOR_MAP, true) ;
const GGS_withAccessorMap::cElement * operand_12672 = NULL ;
while (((operand_12672 = enumerator_12672.nextObject ()))) {
macroValidPointer (operand_12672) ;
result << "  public : VIRTUAL_IN_DEBUG cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * readWriteAccessForWithInstruction_" ;
result << operand_12672->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_12672->mInfo.mArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (299)) ;
result << " & inKey\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
}else {
}
if ((var_cas_ENUMERATION_DESCRIPTOR_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Friend\n"
  "\n"
  "  friend class cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n" ;
}else {
}
result << " \n"
  "} ; // End of GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " class\n"
  "\n" ;
if ((var_cas_ENUMERATION_DESCRIPTOR_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "//   Enumerator declaration                                                  *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public cGenericAbstractEnumerator {\n"
  "  public : cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inEnumeratedObject,\n"
  "     " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const bool inAscending) ;\n"
  "\n"
  "//--- Current element access\n" ;
GGS_enumerationDescriptorList::cEnumerator enumerator_13748 (var_cas_ENUMERATION_DESCRIPTOR_LIST, true) ;
const GGS_enumerationDescriptorList::cElement * operand_13748 = NULL ;
while (((operand_13748 = enumerator_13748.nextObject ()))) {
macroValidPointer (operand_13748) ;
result << "  public : GALGAS_" ;
result << operand_13748->mEnumeratedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (321)) ;
result << " current_" ;
result << operand_13748->mEnumerationName.reader_identifierRepresentation () ;
result << " (void) const ;\n" ;
}
result << "} ;\n" ;
}else {
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "\n" ;
if ((var_cas_WITH_ACCESSOR_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- 'with' accessors\n" ;
GGS_withAccessorMap::cEnumerator enumerator_14210 (var_cas_WITH_ACCESSOR_MAP, true) ;
const GGS_withAccessorMap::cElement * operand_14210 = NULL ;
while (((operand_14210 = enumerator_14210.nextObject ()))) {
macroValidPointer (operand_14210) ;
result << "cCollectionElement * readWriteAccessForWithInstruction_" ;
result << operand_14210->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & ioMap,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_14210->mInfo.mArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (336)) ;
result << " & inKey\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
}else {
}
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'genericTypeImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_genericTypeImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_unifiedTypeMapProxy & var_cas_SUPER_TYPE_INDEX) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_INDEX.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor\n"
  "kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "\"" ;
result << var_cas_TYPE_NAME ;
result << "\",\n"
  "                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
if (var_cas_SUPER_TYPE_INDEX.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (9)).boolValue ()) {
result << "NULL" ;
}else {
result << "& kTypeDescriptor_GALGAS_" ;
result << var_cas_SUPER_TYPE_INDEX.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
}
result << ") ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::typeDescriptor (void) const {\n"
  "  return & kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   'structTypeHeader1' template of 'typeGenerationTemplate' filewrapper    *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_structTypeHeader1 (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string (" struct")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "\n"
  "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
  "  : public GALGAS__root\n"
  "#endif\n"
  " {\n"
  "//--------------------------------- Public data members\n" ;
GGS_typedAttributeList::cEnumerator enumerator_580 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_580 = NULL ;
while (((operand_580 = enumerator_580.nextObject ()))) {
macroValidPointer (operand_580) ;
result << "  public : GALGAS_" ;
result << operand_580->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (15)) ;
result << " mAttribute_" ;
result << operand_580->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "\n"
  "//--------------------------------- Accessors\n"
  "  public : VIRTUAL_IN_DEBUG bool isValid (void) const ;\n"
  "  public : VIRTUAL_IN_DEBUG void drop (void) ;\n"
  "\n"
  "//--------------------------------- Default constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n"
  "//--------------------------------- Virtual destructor (in debug mode)\n"
  "  public : VIRTUAL_IN_DEBUG ~ GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n"
  "//--------------------------------- Native constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1239 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1239 = NULL ;
while (((operand_1239 = enumerator_1239.nextObject ()))) {
macroValidPointer (operand_1239) ;
result << "const GALGAS_" ;
result << operand_1239->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (31)) ;
result << " & in_" ;
result << operand_1239->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1239.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << ") ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'structTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_structTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) :\n" ;
GGS_typedAttributeList::cEnumerator enumerator_170 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_170 = NULL ;
while (((operand_170 = enumerator_170.nextObject ()))) {
macroValidPointer (operand_170) ;
result << "mAttribute_" ;
result << operand_170->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ()" ;
if (enumerator_170.hasNextObject ()) {
result << ",\n" ;
}
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::~ GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "/* GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) :\n" ;
GGS_typedAttributeList::cEnumerator enumerator_623 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_623 = NULL ;
while (((operand_623 = enumerator_623.nextObject ()))) {
macroValidPointer (operand_623) ;
result << "//mAttribute_" ;
result << operand_623->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (inSource.mAttribute_" ;
result << operand_623->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
if (enumerator_623.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << " {\n"
  "} */\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_958 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_958 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_958 = enumerator_958.nextObject ()))) {
macroValidPointer (operand_958) ;
result << "const GALGAS_" ;
result << operand_958->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (31)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (31)) ;
if (enumerator_958.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") :\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1121 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1121 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1121 = enumerator_1121.nextObject ()))) {
macroValidPointer (operand_1121) ;
result << "mAttribute_" ;
result << operand_1121->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << ")" ;
if (enumerator_1121.hasNextObject ()) {
result << ",\n" ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "/* GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator = (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1477 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1477 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1477 = enumerator_1477.nextObject ()))) {
macroValidPointer (operand_1477) ;
result << "  mAttribute_" ;
result << operand_1477->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " = inOperand.mAttribute_" ;
result << operand_1477->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  return *this ;\n"
  "} */\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1839 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1839 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1839 = enumerator_1839.nextObject ()))) {
macroValidPointer (operand_1839) ;
result << "const GALGAS_" ;
result << operand_1839->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (54)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (54)) ;
if (enumerator_1839.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " \n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (" ;
GGS_typedAttributeList::cEnumerator enumerator_2079 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2079 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2079 = enumerator_2079.nextObject ()))) {
macroValidPointer (operand_2079) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (60)) ;
result << ".isValid ()" ;
if (enumerator_2079.hasNextObject ()) {
result << " && " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_2231 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2231 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2231 = enumerator_2231.nextObject ()))) {
macroValidPointer (operand_2231) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (66)) ;
if (enumerator_2231.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand) const {\n"
  "   enumComparisonResult result = kOperandEqual ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2600 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2600 = NULL ;
while (((operand_2600 = enumerator_2600.nextObject ()))) {
macroValidPointer (operand_2600) ;
result << "  if (result == kOperandEqual) {\n"
  "    result = mAttribute_" ;
result << operand_2600->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".objectCompare (inOperand.mAttribute_" ;
result << operand_2600->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "bool GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::isValid (void) const {\n"
  "  return " ;
GGS_typedAttributeList::cEnumerator enumerator_3024 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3024 = NULL ;
while (((operand_3024 = enumerator_3024.nextObject ()))) {
macroValidPointer (operand_3024) ;
result << "mAttribute_" ;
result << operand_3024->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
if (enumerator_3024.hasNextObject ()) {
result << " && " ;
}
}
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::drop (void) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3296 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3296 = NULL ;
while (((operand_3296 = enumerator_3296.nextObject ()))) {
macroValidPointer (operand_3296) ;
result << "  mAttribute_" ;
result << operand_3296->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".drop () ;\n" ;
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "/* GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_object & inSource) :\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3585 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3585 = NULL ;
while (((operand_3585 = enumerator_3585.nextObject ()))) {
macroValidPointer (operand_3585) ;
result << "mAttribute_" ;
result << operand_3585->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ()" ;
if (enumerator_3585.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << " {\n"
  "  const GALGAS_object * object = inSource.ptrNoVerif () ;\n"
  "  if (NULL != object) {\n"
  "    macroValidObject (object, const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) object ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3940 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3940 = NULL ;
while (((operand_3940 = enumerator_3940.nextObject ()))) {
macroValidPointer (operand_3940) ;
result << "    mAttribute_" ;
result << operand_3940->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " = p->mAttribute_" ;
result << operand_3940->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "  }\n"
  "} */\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "/* GALGAS_object GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::embedObject (void) const {\n"
  "  GALGAS_object * result = NULL ;\n"
  "  if (isValid ()) {\n"
  "    macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_4390 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4390 = NULL ;
while (((operand_4390 = enumerator_4390.nextObject ()))) {
macroValidPointer (operand_4390) ;
result << "mAttribute_" ;
result << operand_4390->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_4390.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_HERE)) ;\n"
  "  }\n"
  "  return GALGAS_object (result) ;\n"
  "} */\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::log (const char * inMessage) const {\n"
  "  printf (\"LOGGING '%s': \", inMessage) ;\n"
  "  C_String s ;\n"
  "  description (s, 0) ;\n"
  "  printf (\"%s\\n\", s.cString (HERE)) ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 inIndentation) const {\n"
  "  ioString << \"<struct @" ;
result << var_cas_TYPE_NAME ;
result << ":\" ;\n"
  "  if (! isValid ()) {\n"
  "    ioString << \" not built\" ;\n"
  "  }else{\n" ;
GGS_typedAttributeList::cEnumerator enumerator_5173 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5173 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5173 = enumerator_5173.nextObject ()))) {
macroValidPointer (operand_5173) ;
result << "    mAttribute_" ;
result << operand_5173->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".description (ioString, inIndentation+1) ;\n" ;
if (enumerator_5173.hasNextObject ()) {
result << "    ioString << \", \" ;\n" ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "  ioString << \">\" ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_string GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_description (UNUSED_LOCATION_ARGS) const {\n"
  "  GALGAS_string result ;\n"
  "  if (isValid ()) {\n"
  "    C_String s ;\n"
  "    description (s, 0) ;\n"
  "    result = GALGAS_string (s) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_5709 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5709 = NULL ;
while (((operand_5709 = enumerator_5709.nextObject ()))) {
macroValidPointer (operand_5709) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_5709->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (181)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_5709->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (UNUSED_LOCATION_ARGS) const {\n"
  "  return mAttribute_" ;
result << operand_5709->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "}\n"
  "\n" ;
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    'listTypeHeader1' template of 'typeGenerationTemplate' filewrapper     *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_listTypeHeader1 (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" list")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public GALGAS_list {\n"
  "//--------------------------------- Default constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n"
  "//--------------------------------- Handle copy\n"
  "//  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) ;\n"
  "//  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & operator = (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'listTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_listTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Class for element of '@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string ("' list")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public cCollectionElement {\n"
  "//--- List attributes\n" ;
GGS_typedAttributeList::cEnumerator enumerator_549 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_549 = NULL ;
while (((operand_549 = enumerator_549.nextObject ()))) {
macroValidPointer (operand_549) ;
result << "  public : GALGAS_" ;
result << operand_549->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
result << " mAttribute_" ;
result << operand_549->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "//--- Constructor\n"
  "  public : cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_801 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_801 = NULL ;
while (((operand_801 = enumerator_801.nextObject ()))) {
macroValidPointer (operand_801) ;
result << "const GALGAS_" ;
result << operand_801->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (17)) ;
result << " & in_" ;
result << operand_801->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_801.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Virtual method for comparing elements\n"
  "  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) const ;\n"
  "\n"
  "//--- Virtual method that checks that all attributes are valid\n"
  "  public : virtual bool isValid (void) const ;\n"
  "\n"
  "//--- Virtual method that returns a copy of current object\n"
  "  public : virtual cCollectionElement * copy (void) ;\n"
  "\n"
  "//--- Description\n"
  " public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1657 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1657 = NULL ;
while (((operand_1657 = enumerator_1657.nextObject ()))) {
macroValidPointer (operand_1657) ;
result << "const GALGAS_" ;
result << operand_1657->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (40)) ;
result << " & in_" ;
result << operand_1657->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1657.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n"
  "cCollectionElement (THERE)" ;
GGS_typedAttributeList::cEnumerator enumerator_1891 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1891 = NULL ;
while (((operand_1891 = enumerator_1891.nextObject ()))) {
macroValidPointer (operand_1891) ;
result << ",\n"
  "mAttribute_" ;
result << operand_1891->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (in_" ;
result << operand_1891->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "bool cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::isValid (void) const {\n"
  "  return " ;
GGS_typedAttributeList::cEnumerator enumerator_2219 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2219 = NULL ;
while (((operand_2219 = enumerator_2219.nextObject ()))) {
macroValidPointer (operand_2219) ;
result << "mAttribute_" ;
result << operand_2219->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
if (enumerator_2219.hasNextObject ()) {
result << " && " ;
}
}
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cCollectionElement * cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::copy (void) {\n"
  "  cCollectionElement * result = NULL ;\n"
  "  macroMyNew (result, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_2626 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2626 = NULL ;
while (((operand_2626 = enumerator_2626.nextObject ()))) {
macroValidPointer (operand_2626) ;
result << "mAttribute_" ;
result << operand_2626->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_2626.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_HERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2999 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2999 = NULL ;
while (((operand_2999 = enumerator_2999.nextObject ()))) {
macroValidPointer (operand_2999) ;
result << "// mAttribute_" ;
result << operand_2999->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".description (ioString, inIndentation) ;\n" ;
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::compare (const cCollectionElement * inOperand) const {\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operand = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inOperand ;\n"
  "  enumComparisonResult result = kOperandEqual ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3498 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3498 = NULL ;
while (((operand_3498 = enumerator_3498.nextObject ()))) {
macroValidPointer (operand_3498) ;
result << "  if (kOperandEqual == result) {\n"
  "    result = mAttribute_" ;
result << operand_3498->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".objectCompare (operand->mAttribute_" ;
result << operand_3498->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) :\n"
  "GALGAS_list () {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  result.createNewEmptyList (THERE) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_listWithValue (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_4376 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4376 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4376 = enumerator_4376.nextObject ()))) {
macroValidPointer (operand_4376) ;
result << "const GALGAS_" ;
result << operand_4376->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (116)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (116)) ;
if (enumerator_4376.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (" ;
GGS_typedAttributeList::cEnumerator enumerator_4615 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4615 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4615 = enumerator_4615.nextObject ()))) {
macroValidPointer (operand_4615) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (123)) ;
result << ".isValid ()" ;
if (enumerator_4615.hasNextObject ()) {
result << " && " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "    result.createNewEmptyList (THERE) ;\n"
  "    cCollectionElement * p = NULL ;\n"
  "    macroMyNew (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_4871 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4871 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4871 = enumerator_4871.nextObject ()))) {
macroValidPointer (operand_4871) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (131)) ;
if (enumerator_4871.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "    capCollectionElement attributes ;\n"
  "    attributes.setPointer (p) ;\n"
  "    macroReleaseObject (p) ;\n"
  "    result.addObject (attributes) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::addAssign_operation (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_5288 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5288 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5288 = enumerator_5288.nextObject ()))) {
macroValidPointer (operand_5288) ;
result << "const GALGAS_" ;
result << operand_5288->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (147)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (147)) ;
if (enumerator_5288.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (isValid ()" ;
GGS_typedAttributeList::cEnumerator enumerator_5500 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5500 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5500 = enumerator_5500.nextObject ()))) {
macroValidPointer (operand_5500) ;
result << " && inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (153)) ;
result << ".isValid ()" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "    cCollectionElement * p = NULL ;\n"
  "    macroMyNew (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_5703 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5703 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5703 = enumerator_5703.nextObject ()))) {
macroValidPointer (operand_5703) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (159)) ;
if (enumerator_5703.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "    capCollectionElement attributes ;\n"
  "    attributes.setPointer (p) ;\n"
  "    macroReleaseObject (p) ;\n"
  "    addObject (attributes) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_prependValue (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_6097 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6097 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6097 = enumerator_6097.nextObject ()))) {
macroValidPointer (operand_6097) ;
result << "GALGAS_" ;
result << operand_6097->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
result << " inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
if (enumerator_6097.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (isValid ()" ;
GGS_typedAttributeList::cEnumerator enumerator_6307 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6307 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6307 = enumerator_6307.nextObject ()))) {
macroValidPointer (operand_6307) ;
result << " && inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (180)) ;
result << ".isValid ()" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "    cCollectionElement * p = NULL ;\n"
  "    macroMyNew (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_6512 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6512 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6512 = enumerator_6512.nextObject ()))) {
macroValidPointer (operand_6512) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (186)) ;
if (enumerator_6512.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "    capCollectionElement attributes ;\n"
  "    attributes.setPointer (p) ;\n"
  "    macroReleaseObject (p) ;\n"
  "    prependAttributeArray (attributes) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popFirst (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_6914 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6914 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6914 = enumerator_6914.nextObject ()))) {
macroValidPointer (operand_6914) ;
result << "GALGAS_" ;
result << operand_6914->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (201)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (201)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement attributes ;\n"
  "  removeFirstObject (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_7345 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7345 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7345 = enumerator_7345.nextObject ()))) {
macroValidPointer (operand_7345) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (211)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_7523 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7523 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7523 = enumerator_7523.nextObject ()))) {
macroValidPointer (operand_7523) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (217)) ;
result << " = p->mAttribute_" ;
result << operand_7523->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popLast (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_7821 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7821 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7821 = enumerator_7821.nextObject ()))) {
macroValidPointer (operand_7821) ;
result << "GALGAS_" ;
result << operand_7821->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (226)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (226)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement attributes ;\n"
  "  removeLastObject (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_8251 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8251 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8251 = enumerator_8251.nextObject ()))) {
macroValidPointer (operand_8251) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (236)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_8429 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8429 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8429 = enumerator_8429.nextObject ()))) {
macroValidPointer (operand_8429) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (242)) ;
result << " = p->mAttribute_" ;
result << operand_8429->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_first (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_8723 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8723 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8723 = enumerator_8723.nextObject ()))) {
macroValidPointer (operand_8723) ;
result << "GALGAS_" ;
result << operand_8723->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (251)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (251)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  capCollectionElement attributes ;\n"
  "  readFirst (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_9152 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9152 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9152 = enumerator_9152.nextObject ()))) {
macroValidPointer (operand_9152) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (261)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_9330 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9330 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9330 = enumerator_9330.nextObject ()))) {
macroValidPointer (operand_9330) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (267)) ;
result << " = p->mAttribute_" ;
result << operand_9330->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_last (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_9623 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9623 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9623 = enumerator_9623.nextObject ()))) {
macroValidPointer (operand_9623) ;
result << "GALGAS_" ;
result << operand_9623->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (276)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (276)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  capCollectionElement attributes ;\n"
  "  readLast (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_10051 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10051 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10051 = enumerator_10051.nextObject ()))) {
macroValidPointer (operand_10051) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (286)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_10229 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10229 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10229 = enumerator_10229.nextObject ()))) {
macroValidPointer (operand_10229) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (292)) ;
result << " = p->mAttribute_" ;
result << operand_10229->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator_concat (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n"
  "                     " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (isValid () && inOperand.isValid ()) {\n"
  "    result = *this ;\n"
  "    result.appendList (inOperand) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_subListWithRange (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_uint & inIndex,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_uint & inLength,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (THERE) ;\n"
  "  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_subListFromIndex (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_uint & inIndex,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (THERE) ;\n"
  "  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::dotAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " inOperand\n"
  "                          " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  appendList (inOperand) ;\n"
  "}\n"
  "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_12225 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_12225 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_12225 = enumerator_12225.nextObject ()))) {
macroValidPointer (operand_12225) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_set" ;
result << operand_12225->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ().reader_identifierRepresentation () ;
result << "AtIndex (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << operand_12225->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (340)) ;
result << " inOperand,\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_uint inIndex,\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;\n"
  "  if (NULL != p) {\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    p->mAttribute_" ;
result << operand_12225->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " = inOperand ;\n"
  "  }\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_13163 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_13163 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_13163 = enumerator_13163.nextObject ()))) {
macroValidPointer (operand_13163) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_13163->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (355)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_13163->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << "AtIndex (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_uint & inIndex,\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  GALGAS_" ;
result << operand_13163->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (360)) ;
result << " result ;\n"
  "  if (NULL != p) {\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    result = p->mAttribute_" ;
result << operand_13163->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inEnumeratedObject,\n"
  "                   " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const bool inAscending) :\n"
  "cGenericAbstractEnumerator () {\n"
  "  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inAscending) ;\n"
  "}\n"
  "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_14529 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_14529 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_14529 = enumerator_14529.nextObject ()))) {
macroValidPointer (operand_14529) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_14529->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (380)) ;
result << " cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::current_" ;
result << operand_14529->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (void) const {\n"
  "  const cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) currentObjectPtr () ;\n"
  "  macroValidObject (p, const cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  return p->mAttribute_" ;
result << operand_14529->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'sortedlistTypeHeader1' template of 'typeGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_sortedlistTypeHeader1 (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string (" sorted list")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public GALGAS_sortedlist {\n"
  "//--------------------------------- Default constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'sortedlistTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_sortedlistTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_sortDescriptorListForGeneration & var_cas_SORT_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_SORT_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Class for element of '@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string ("' sorted list")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public cSortedListElement {\n"
  "//--- List attributes\n" ;
GGS_typedAttributeList::cEnumerator enumerator_556 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_556 = NULL ;
while (((operand_556 = enumerator_556.nextObject ()))) {
macroValidPointer (operand_556) ;
result << "  public : GALGAS_" ;
result << operand_556->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
result << " mAttribute_" ;
result << operand_556->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "//--- Constructor\n"
  "  public : cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_808 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_808 = NULL ;
while (((operand_808 = enumerator_808.nextObject ()))) {
macroValidPointer (operand_808) ;
result << "const GALGAS_" ;
result << operand_808->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (17)) ;
result << " & in_" ;
result << operand_808->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_808.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Virtual method that checks that all attributes are valid\n"
  "  public : virtual bool isValid (void) const ;\n"
  "\n"
  "//--- Virtual method that returns a copy of current object\n"
  "  public : virtual cSortedListElement * copy (void) ;\n"
  "\n"
  "//--- Virtual method for comparing elements\n"
  "  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) const ;\n"
  "\n"
  "//--- Description\n"
  " public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;\n"
  "\n"
  "//--- Virtual method that comparing element for sorting\n"
  "  public : virtual enumComparisonResult compareForSorting (const cSortedListElement * inOperand) const ;\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1826 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1826 = NULL ;
while (((operand_1826 = enumerator_1826.nextObject ()))) {
macroValidPointer (operand_1826) ;
result << "const GALGAS_" ;
result << operand_1826->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (43)) ;
result << " & in_" ;
result << operand_1826->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1826.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n"
  "cSortedListElement (THERE)" ;
GGS_typedAttributeList::cEnumerator enumerator_2060 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2060 = NULL ;
while (((operand_2060 = enumerator_2060.nextObject ()))) {
macroValidPointer (operand_2060) ;
result << ",\n"
  "mAttribute_" ;
result << operand_2060->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (in_" ;
result << operand_2060->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "bool cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::isValid (void) const {\n"
  "  return " ;
GGS_typedAttributeList::cEnumerator enumerator_2388 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2388 = NULL ;
while (((operand_2388 = enumerator_2388.nextObject ()))) {
macroValidPointer (operand_2388) ;
result << "mAttribute_" ;
result << operand_2388->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
if (enumerator_2388.hasNextObject ()) {
result << " && " ;
}
}
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cSortedListElement * cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::copy (void) {\n"
  "  cSortedListElement * result = NULL ;\n"
  "  macroMyNew (result, cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_2795 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2795 = NULL ;
while (((operand_2795 = enumerator_2795.nextObject ()))) {
macroValidPointer (operand_2795) ;
result << "mAttribute_" ;
result << operand_2795->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_2795.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_HERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3168 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3168 = NULL ;
while (((operand_3168 = enumerator_3168.nextObject ()))) {
macroValidPointer (operand_3168) ;
result << "// mAttribute_" ;
result << operand_3168->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".description (ioString, inIndentation) ;\n" ;
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::compare (const cCollectionElement * inOperand) const {\n"
  "  enumComparisonResult result = kOperandNotValid ;\n"
  "  if (NULL != inOperand) {\n"
  "    result = kOperandEqual ;\n"
  "    cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operand = (cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inOperand ;\n"
  "    macroValidObject (operand, cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3800 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3800 = NULL ;
while (((operand_3800 = enumerator_3800.nextObject ()))) {
macroValidPointer (operand_3800) ;
result << "    if (kOperandEqual == result) {\n"
  "      result = mAttribute_" ;
result << operand_3800->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".objectCompare (operand->mAttribute_" ;
result << operand_3800->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "    }\n" ;
}
result << "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) :\n"
  "GALGAS_sortedlist () {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::compareForSorting (const cSortedListElement * inOperand) const {\n"
  "  enumComparisonResult result = kOperandEqual ;\n"
  "  const cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operand = (const cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inOperand ;\n"
  "  macroValidObject (operand, const cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_sortDescriptorListForGeneration::cEnumerator enumerator_4711 (var_cas_SORT_ATTRIBUTE_LIST, true) ;
const GGS_sortDescriptorListForGeneration::cElement * operand_4711 = NULL ;
while (((operand_4711 = enumerator_4711.nextObject ()))) {
macroValidPointer (operand_4711) ;
result << "  if (result == kOperandEqual) {\n"
  "    result = " ;
if (operand_4711->mAscendingOrder.boolValue ()) {
result << "mAttribute_" ;
result << operand_4711->mAttributeName.reader_identifierRepresentation () ;
result << ".objectCompare (operand->mAttribute_" ;
result << operand_4711->mAttributeName.reader_identifierRepresentation () ;
result << ")" ;
}else {
result << "operand->mAttribute_" ;
result << operand_4711->mAttributeName.reader_identifierRepresentation () ;
result << ".objectCompare (mAttribute_" ;
result << operand_4711->mAttributeName.reader_identifierRepresentation () ;
result << ")" ;
}
result << " ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptySortedList (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  result.createNewEmptySortedList (THERE) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_sortedListWithValue (" ;
const GGS_string var_cas_COL0 = GGS_string::stringWithColumnCount (result) ;
GGS_typedAttributeList::cEnumerator enumerator_5653 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5653 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5653 = enumerator_5653.nextObject ()))) {
macroValidPointer (operand_5653) ;
result << "const GALGAS_" ;
result << operand_5653->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (143)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (143)) ;
if (enumerator_5653.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL0 ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result << var_cas_COL0 ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result = constructor_emptySortedList (THERE) ;\n"
  "  cSortedListElement * p = NULL ;\n"
  "  macroMyNew (p, cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_6020 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6020 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6020 = enumerator_6020.nextObject ()))) {
macroValidPointer (operand_6020) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (151)) ;
if (enumerator_6020.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "  capSortedListElement attributes ;\n"
  "  attributes.setPointer (p) ;\n"
  "  macroReleaseObject (p) ;\n"
  "  result.addObject (attributes) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::addAssign_operation (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_6419 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6419 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6419 = enumerator_6419.nextObject ()))) {
macroValidPointer (operand_6419) ;
result << "const GALGAS_" ;
result << operand_6419->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
if (enumerator_6419.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "    " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (isValid ()) {\n"
  "    cSortedListElement * p = NULL ;\n"
  "    macroMyNew (p, cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_6734 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6734 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6734 = enumerator_6734.nextObject ()))) {
macroValidPointer (operand_6734) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (175)) ;
if (enumerator_6734.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "    capSortedListElement attributes ;\n"
  "    attributes.setPointer (p) ;\n"
  "    macroReleaseObject (p) ;\n"
  "    addObject (attributes) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::dotAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " inOperand\n"
  "                          " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  if (isValid ()) {\n"
  "    appendSortedList (inOperand) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator_concat (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n"
  "                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (isValid () && inOperand.isValid ()) {\n"
  "    result = constructor_emptySortedList (THERE) ;\n"
  "    result = *this ;\n"
  "    result.appendSortedList (inOperand) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popSmallest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_7911 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7911 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7911 = enumerator_7911.nextObject ()))) {
macroValidPointer (operand_7911) ;
result << "GALGAS_" ;
result << operand_7911->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (212)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (212)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capSortedListElement attributes ;\n"
  "  removeSmallestObject (attributes, inCompiler COMMA_THERE) ;\n"
  "  cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_8363 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8363 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8363 = enumerator_8363.nextObject ()))) {
macroValidPointer (operand_8363) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (222)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_8541 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8541 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8541 = enumerator_8541.nextObject ()))) {
macroValidPointer (operand_8541) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (228)) ;
result << " = p->mAttribute_" ;
result << operand_8541->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popGreatest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_8843 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8843 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8843 = enumerator_8843.nextObject ()))) {
macroValidPointer (operand_8843) ;
result << "GALGAS_" ;
result << operand_8843->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (237)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (237)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capSortedListElement attributes ;\n"
  "  removeGreatestObject (attributes, inCompiler COMMA_THERE) ;\n"
  "  cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_9295 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9295 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9295 = enumerator_9295.nextObject ()))) {
macroValidPointer (operand_9295) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (247)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_9473 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9473 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9473 = enumerator_9473.nextObject ()))) {
macroValidPointer (operand_9473) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (253)) ;
result << " = p->mAttribute_" ;
result << operand_9473->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_smallest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_9770 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9770 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9770 = enumerator_9770.nextObject ()))) {
macroValidPointer (operand_9770) ;
result << "GALGAS_" ;
result << operand_9770->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (262)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (262)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  capSortedListElement attributes ;\n"
  "  smallestObjectAttributeList (attributes, inCompiler COMMA_THERE) ;\n"
  "  cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_10225 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10225 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10225 = enumerator_10225.nextObject ()))) {
macroValidPointer (operand_10225) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (272)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_10403 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10403 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10403 = enumerator_10403.nextObject ()))) {
macroValidPointer (operand_10403) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (278)) ;
result << " = p->mAttribute_" ;
result << operand_10403->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_greatest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_10700 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10700 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10700 = enumerator_10700.nextObject ()))) {
macroValidPointer (operand_10700) ;
result << "GALGAS_" ;
result << operand_10700->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (287)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (287)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  capSortedListElement attributes ;\n"
  "  greatestObjectAttributeList (attributes, inCompiler COMMA_THERE) ;\n"
  "  cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_11155 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_11155 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_11155 = enumerator_11155.nextObject ()))) {
macroValidPointer (operand_11155) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (297)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_11333 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_11333 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_11333 = enumerator_11333.nextObject ()))) {
macroValidPointer (operand_11333) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (303)) ;
result << " = p->mAttribute_" ;
result << operand_11333->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inEnumeratedObject,\n"
  "                   " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const bool inAscending) :\n"
  "cGenericAbstractEnumerator () {\n"
  "  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inAscending) ;\n"
  "}\n"
  "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_11861 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_11861 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_11861 = enumerator_11861.nextObject ()))) {
macroValidPointer (operand_11861) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_11861->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (318)) ;
result << " cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::current_" ;
result << operand_11861->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (void) const {\n"
  "  const cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) currentObjectPtr () ;\n"
  "  macroValidObject (p, const cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  return p->mAttribute_" ;
result << operand_11861->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    'enumTypeHeader1' template of 'typeGenerationTemplate' filewrapper     *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_enumTypeHeader1 (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_stringlist & var_cas_CONSTANT_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_CONSTANT_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string (" enum")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "\n"
  "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
  "  : public GALGAS__root\n"
  "#endif\n"
  " {\n"
  "//--------------------------------- Default constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n"
  "//--------------------------------- Enumeration\n"
  "  public : typedef enum {\n"
  "    kNotBuilt" ;
GGS_stringlist::cEnumerator enumerator_713 (var_cas_CONSTANT_LIST, true) ;
const GGS_stringlist::cElement * operand_713 = NULL ;
while (((operand_713 = enumerator_713.nextObject ()))) {
macroValidPointer (operand_713) ;
result << ",\n"
  "    kEnum_" ;
result << operand_713->mValue.reader_identifierRepresentation () ;
}
result << "\n"
  "  } enumeration ;\n"
  "  \n"
  "//--------------------------------- Private data member\n"
  "  private : enumeration mEnum ;\n"
  "\n"
  "//--------------------------------- Accessors\n"
  "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return kNotBuilt != mEnum ; }\n"
  "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mEnum = kNotBuilt ; }\n"
  "  public : inline enumeration enumValue (void) const { return mEnum ; }\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'enumTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_enumTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_stringlist & var_cas_CONSTANT_LIST,
                                const GGS_enumMessageListForGeneration & var_cas_ENUM_MESSAGE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_CONSTANT_LIST.isBuilt ()
    && var_cas_ENUM_MESSAGE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) :\n"
  "mEnum (kNotBuilt) {\n"
  "}\n"
  "\n" ;
GGS_stringlist::cEnumerator enumerator_190 (var_cas_CONSTANT_LIST, true) ;
const GGS_stringlist::cElement * operand_190 = NULL ;
while (((operand_190 = enumerator_190.nextObject ()))) {
macroValidPointer (operand_190) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_" ;
result << operand_190->mValue.reader_identifierRepresentation () ;
result << " (UNUSED_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  result.mEnum = kEnum_" ;
result << operand_190->mValue.reader_identifierRepresentation () ;
result << " ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
GGS_enumMessageListForGeneration::cEnumerator enumerator_597 (var_cas_ENUM_MESSAGE_LIST, true) ;
const GGS_enumMessageListForGeneration::cElement * operand_597 = NULL ;
while (((operand_597 = enumerator_597.nextObject ()))) {
macroValidPointer (operand_597) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const char * gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_597->mEnumMessageName.reader_identifierRepresentation () ;
result << " [" ;
result << var_cas_CONSTANT_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (19)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (19)) ;
result << "] = {\n"
  "  \"\"" ;
GGS_enumMessageAssociationSortedListForGeneration::cEnumerator enumerator_890 (operand_597->mMessageAssociationList, true) ;
const GGS_enumMessageAssociationSortedListForGeneration::cElement * operand_890 = NULL ;
while (((operand_890 = enumerator_890.nextObject ()))) {
macroValidPointer (operand_890) ;
result << ",\n"
  "  " ;
result << operand_890->mMessage.reader_utf8Representation () ;
}
result << "\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_string GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_597->mEnumMessageName.reader_identifierRepresentation () ;
result << " (UNUSED_LOCATION_ARGS) const {\n"
  "  GALGAS_string result ;\n"
  "  if (isValid ()) {\n"
  "    result = GALGAS_string (gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_597->mEnumMessageName.reader_identifierRepresentation () ;
result << " [mEnum]) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const char * gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " [" ;
result << var_cas_CONSTANT_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (37)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (37)) ;
result << "] = {\n"
  "  \"(not built)\"" ;
GGS_stringlist::cEnumerator enumerator_1646 (var_cas_CONSTANT_LIST, true) ;
const GGS_stringlist::cElement * operand_1646 = NULL ;
while (((operand_1646 = enumerator_1646.nextObject ()))) {
macroValidPointer (operand_1646) ;
result << ",\n"
  "  " ;
result << operand_1646->mValue.reader_utf8Representation () ;
}
result << "\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 /* inIndentation */) const {\n"
  "  ioString << \"<enum @" ;
result << var_cas_TYPE_NAME ;
result << ": \" << gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " [mEnum] << \">\" ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::log (const char * inMessage) const {\n"
  "  printf (\"LOGGING '%s': \", inMessage) ;\n"
  "  C_String s ;\n"
  "  description (s, 0) ;\n"
  "  printf (\"%s\\n\", s.cString (HERE)) ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_string GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_description (UNUSED_LOCATION_ARGS) const {\n"
  "  GALGAS_string result ;\n"
  "  if (isValid ()) {\n"
  "    C_String s ;\n"
  "    description (s, 0) ;\n"
  "    result = GALGAS_string (s) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand) const {\n"
  "  enumComparisonResult result = kOperandNotValid ;\n"
  "  if (isValid () && inOperand.isValid ()) {\n"
  "    if (mEnum < inOperand.mEnum) {\n"
  "      result = kFirstOperandLowerThanSecond ;\n"
  "    }else if (mEnum > inOperand.mEnum) {\n"
  "      result = kFirstOperandGreaterThanSecond ;\n"
  "    }else{\n"
  "      result = kOperandEqual ;\n"
  "    }\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    'mapTypeHeader1' template of 'typeGenerationTemplate' filewrapper      *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_mapTypeHeader1 (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" map")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public GALGAS_map {\n"
  "//--------------------------------- Default constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n"
  "//--------------------------------- Handle copy\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) ;\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & operator = (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    'mapTypeHeader2' template of 'typeGenerationTemplate' filewrapper      *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_mapTypeHeader2 (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Class for element of '@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string ("' map")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public cMapElement {\n"
  "//--- Map attributes\n" ;
GGS_typedAttributeList::cEnumerator enumerator_527 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_527 = NULL ;
while (((operand_527 = enumerator_527.nextObject ()))) {
macroValidPointer (operand_527) ;
result << "  public : GALGAS_" ;
result << operand_527->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
result << " mAttribute_" ;
result << operand_527->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "//--- Constructor\n"
  "  public : cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_lstring & inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_802 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_802 = NULL ;
while (((operand_802 = enumerator_802.nextObject ()))) {
macroValidPointer (operand_802) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_802->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (17)) ;
result << " & in_" ;
result << operand_802->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Virtual method for comparing elements\n"
  "  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) const ;\n"
  "\n"
  "//--- Virtual method that checks that all attributes are valid\n"
  "  public : virtual bool isValid (void) const ;\n"
  "\n"
  "//--- Virtual method that returns a copy of current object\n"
  "  public : virtual cMapElement * copy (void) ;\n"
  "\n"
  "//--- Description\n"
  " public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;\n"
  "} ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'mapTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_mapTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_insertMethodListAST & var_cas_INSERT_METHOD_LIST,
                                const GGS_mapSearchMethodListAST & var_cas_SEARCH_METHOD_LIST,
                                const GGS_mapRemoveMethodListAST & var_cas_REMOVE_METHOD_LIST,
                                const GGS_bool& var_cas_HAS_INSERT_OR_REPLACE,
                                const GGS_withAccessorMap & var_cas_WITH_ACCESSOR_MAP) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_INSERT_METHOD_LIST.isBuilt ()
    && var_cas_SEARCH_METHOD_LIST.isBuilt ()
    && var_cas_REMOVE_METHOD_LIST.isBuilt ()
    && var_cas_HAS_INSERT_OR_REPLACE.isBuilt ()
    && var_cas_WITH_ACCESSOR_MAP.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_lstring & inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_208 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_208 = NULL ;
while (((operand_208 = enumerator_208.nextObject ()))) {
macroValidPointer (operand_208) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_208->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (5)) ;
result << " & in_" ;
result << operand_208->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n"
  "cMapElement (inKey COMMA_THERE)" ;
GGS_typedAttributeList::cEnumerator enumerator_434 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_434 = NULL ;
while (((operand_434 = enumerator_434.nextObject ()))) {
macroValidPointer (operand_434) ;
result << ",\n"
  "mAttribute_" ;
result << operand_434->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (in_" ;
result << operand_434->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "bool cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::isValid (void) const {\n"
  "  return mAttribute_lkey.isValid ()" ;
GGS_typedAttributeList::cEnumerator enumerator_781 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_781 = NULL ;
while (((operand_781 = enumerator_781.nextObject ()))) {
macroValidPointer (operand_781) ;
result << " && mAttribute_" ;
result << operand_781->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
}
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cMapElement * cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::copy (void) {\n"
  "  cMapElement * result = NULL ;\n"
  "  macroMyNew (result, cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (mAttribute_lkey" ;
GGS_typedAttributeList::cEnumerator enumerator_1158 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1158 = NULL ;
while (((operand_1158 = enumerator_1158.nextObject ()))) {
macroValidPointer (operand_1158) ;
result << ", mAttribute_" ;
result << operand_1158->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
}
result << " COMMA_HERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1507 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1507 = NULL ;
while (((operand_1507 = enumerator_1507.nextObject ()))) {
macroValidPointer (operand_1507) ;
result << "// mAttribute_" ;
result << operand_1507->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".description (ioString, inIndentation) ;\n" ;
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::compare (const cCollectionElement * inOperand) const {\n"
  "  cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operand = (cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inOperand ;\n"
  "  enumComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2028 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2028 = NULL ;
while (((operand_2028 = enumerator_2028.nextObject ()))) {
macroValidPointer (operand_2028) ;
result << "  if (kOperandEqual == result) {\n"
  "    result = mAttribute_" ;
result << operand_2028->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".objectCompare (operand->mAttribute_" ;
result << operand_2028->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) :\n"
  "GALGAS_map () {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) :\n"
  "GALGAS_map (inSource) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator = (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) {\n"
  "  * ((GALGAS_map *) this) = inSource ;\n"
  "  return * this ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyMap (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  result.createNewEmptyMap (THERE) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_mapWithMapToOverride (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inMapToOverride\n"
  "                                                   " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  result.createNewEmptyMap (inMapToOverride COMMA_THERE) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  overridenMap (result) ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
GGS_insertMethodListAST::cEnumerator enumerator_3885 (var_cas_INSERT_METHOD_LIST, true) ;
const GGS_insertMethodListAST::cElement * operand_3885 = NULL ;
while (((operand_3885 = enumerator_3885.nextObject ()))) {
macroValidPointer (operand_3885) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_" ;
result << operand_3885->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_lstring inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_4121 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4121 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4121 = enumerator_4121.nextObject ()))) {
macroValidPointer (operand_4121) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_4121->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (108)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (108)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = NULL ;\n"
  "  macroMyNew (p, cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_4460 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4460 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4460 = enumerator_4460.nextObject ()))) {
macroValidPointer (operand_4460) ;
result << ", inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (115)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_HERE)) ;\n"
  "    capCollectionElement attributes ;\n"
  "  attributes.setPointer (p) ;\n"
  "  macroReleaseObject (p) ;\n" ;
const GGS_uint indentation_5048 = GGS_uint (2U) ;
if (indentation_5048.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_5048.uintValue ()) ;
}
result << "const utf32 kInsertErrorMessage [" ;
result << operand_3885->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (122)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (122)) ;
result << "] = " ;
result << operand_3885->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "const utf32 kShadowErrorMessage [" ;
result << operand_3885->mShadowErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (123)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (123)) ;
result << "] = " ;
result << operand_3885->mShadowErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;\n" ;
 ;
if (indentation_5048.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_5048.uintValue ())) ;
}
result << "}\n"
  "\n" ;
}
GGS_mapSearchMethodListAST::cEnumerator enumerator_5087 (var_cas_SEARCH_METHOD_LIST, true) ;
const GGS_mapSearchMethodListAST::cElement * operand_5087 = NULL ;
while (((operand_5087 = enumerator_5087.nextObject ()))) {
macroValidPointer (operand_5087) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const utf32 kSearchErrorMessage_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_5087->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " [" ;
result << operand_5087->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (131)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (131)) ;
result << "] = " ;
result << operand_5087->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_" ;
result << operand_5087->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_lstring inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_5600 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5600 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5600 = enumerator_5600.nextObject ()))) {
macroValidPointer (operand_5600) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_5600->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (135)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (135)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n" ;
const GGS_uint indentation_6386 = GGS_uint (2U) ;
if (indentation_6386.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_6386.uintValue ()) ;
}
result << "const cCollectionElement * attributes = performSearch (inKey, inCompiler, kSearchErrorMessage_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_5087->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " COMMA_THERE) ;\n"
  "const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes ;\n"
  "if (NULL != p) {\n"
  "  macroValidObject (p, const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_6222 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6222 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6222 = enumerator_6222.nextObject ()))) {
macroValidPointer (operand_6222) ;
result << "  outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (145)) ;
result << " = p->mAttribute_" ;
result << operand_6222->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n" ;
 ;
if (indentation_6386.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_6386.uintValue ())) ;
}
result << "}\n"
  "\n" ;
}
GGS_mapRemoveMethodListAST::cEnumerator enumerator_6426 (var_cas_REMOVE_METHOD_LIST, true) ;
const GGS_mapRemoveMethodListAST::cElement * operand_6426 = NULL ;
while (((operand_6426 = enumerator_6426.nextObject ()))) {
macroValidPointer (operand_6426) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_" ;
result << operand_6426->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_lstring inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_6662 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6662 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6662 = enumerator_6662.nextObject ()))) {
macroValidPointer (operand_6662) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_6662->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (157)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (157)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
const GGS_uint indentation_7515 = GGS_uint (2U) ;
if (indentation_7515.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_7515.uintValue ()) ;
}
result << "const utf32 kRemoveErrorMessage [" ;
result << operand_6426->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (162)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (162)) ;
result << "] = " ;
result << operand_6426->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "capCollectionElement attributes ;\n"
  "performRemove (inKey, attributes, inCompiler, kRemoveErrorMessage COMMA_THERE) ;\n"
  "cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "if (NULL != p) {\n"
  "  macroValidObject (p, cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_7351 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7351 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7351 = enumerator_7351.nextObject ()))) {
macroValidPointer (operand_7351) ;
result << "  outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (169)) ;
result << " = p->mAttribute_" ;
result << operand_7351->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n" ;
 ;
if (indentation_7515.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_7515.uintValue ())) ;
}
result << "}\n"
  "\n" ;
}
if (var_cas_HAS_INSERT_OR_REPLACE.boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_insertOrReplace (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_lstring inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_7760 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7760 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7760 = enumerator_7760.nextObject ()))) {
macroValidPointer (operand_7760) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_7760->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (180)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (180)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = NULL ;\n"
  "  macroMyNew (p, cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_8060 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8060 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8060 = enumerator_8060.nextObject ()))) {
macroValidPointer (operand_8060) ;
result << ", inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (186)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_HERE)) ;\n"
  "  capCollectionElement attributes ;\n"
  "  attributes.setPointer (p) ;\n"
  "  macroReleaseObject (p) ;\n"
  "  performInsertOrReplace (attributes) ;\n"
  "}\n"
  "\n" ;
}else {
}
GGS_typedAttributeList::cEnumerator enumerator_8335 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8335 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8335 = enumerator_8335.nextObject ()))) {
macroValidPointer (operand_8335) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_8335->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (198)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_8335->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << "ForKey (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_string & inKey,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;\n"
  "  const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes ;\n"
  "  GALGAS_" ;
result << operand_8335->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (203)) ;
result << " result ;\n"
  "  if (NULL != p) {\n"
  "    macroValidObject (p, const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    result = p->mAttribute_" ;
result << operand_8335->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_typedAttributeList::cEnumerator enumerator_9328 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9328 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9328 = enumerator_9328.nextObject ()))) {
macroValidPointer (operand_9328) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_set" ;
result << operand_9328->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ().reader_identifierRepresentation () ;
result << "ForKey (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << operand_9328->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (214)) ;
result << " inAttributeValue,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_string inKey,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;\n"
  "  cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes ;\n"
  "  if (NULL != p) {\n"
  "    macroValidObject (p, cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    p->mAttribute_" ;
result << operand_9328->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " = inAttributeValue ;\n"
  "  }\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_withAccessorMap::cEnumerator enumerator_10262 (var_cas_WITH_ACCESSOR_MAP, true) ;
const GGS_withAccessorMap::cElement * operand_10262 = NULL ;
while (((operand_10262 = enumerator_10262.nextObject ()))) {
macroValidPointer (operand_10262) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::readWriteAccessForWithInstruction_" ;
result << operand_10262->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_10262->mInfo.mArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (230)) ;
result << " & inKey\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
if ((operand_10262->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (232))).operator_isEqual (GGS_string ("hasKey")).boolValue ()) {
result << "  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;\n" ;
}else {
result << "  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_10262->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " COMMA_THERE) ;\n" ;
}
result << "  cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = (cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) p ;\n"
  "  macroNullOrValidObject (result, cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inEnumeratedObject,\n"
  "                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const bool inAscending) :\n"
  "cGenericAbstractEnumerator () {\n"
  "  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inAscending) ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_lstring cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::current_lkey (void) const {\n"
  "  const cMapElement * p = (const cMapElement *) currentObjectPtr () ;\n"
  "  macroValidObject (p, const cMapElement) ;\n"
  "  return p->mAttribute_lkey ;\n"
  "}\n"
  "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_11831 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_11831 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_11831 = enumerator_11831.nextObject ()))) {
macroValidPointer (operand_11831) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_11831->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (260)) ;
result << " cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::current_" ;
result << operand_11831->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (void) const {\n"
  "  const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) currentObjectPtr () ;\n"
  "  macroValidObject (p, const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  return p->mAttribute_" ;
result << operand_11831->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'rootClassTypeHeader1' template of 'typeGenerationTemplate' filewrapper   *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_rootClassTypeHeader1 (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ALL_ATTRIBUTE_LIST,
                                const GGS_bool& var_cas_IS_ABSTRACT) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ALL_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_IS_ABSTRACT.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string (" class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "\n"
  "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
  "  : public GALGAS__root\n"
  "#endif\n"
  " {\n"
  "\n"
  "//--------------------------------- Attribute\n"
  "  protected : cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * mObjectPtr ;\n"
  "  public : inline const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * ptr (void) const { return mObjectPtr ; }\n"
  "  public : inline cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * ptr (void) { return mObjectPtr ; }\n"
  "\n"
  "//--------------------------------- Accessors\n"
  "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return NULL != mObjectPtr ; }\n"
  "  public : VIRTUAL_IN_DEBUG void drop (void) ;\n"
  "\n"
  "//--------------------------------- Default constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n"
  "//--------------------------------- Constructor from pointer\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inSourcePtr) ;\n"
  "\n"
  "//--------------------------------- Destructor\n"
  "  public : virtual ~ GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n"
  "//--------------------------------- Handle copy\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) ;\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & operator = (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) ;\n"
  "\n"
  "//--------------------------------- Reader description\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_string reader_description (UNUSED_LOCATION_ARGS) const ;\n"
  "\n" ;
if (((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).operator_and ((var_cas_IS_ABSTRACT).operator_not ()).boolValue ()) {
result << "//--------------------------------- Insulate\n"
  "  private : virtual void insulate (LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'rootClassTypeHeader2' template of 'typeGenerationTemplate' filewrapper   *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_rootClassTypeHeader2 (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ALL_ATTRIBUTE_LIST,
                                const GGS_abstractMethodDefinitionListForGeneration & var_cas_ABSTRACT_METHOD_LIST,
                                const GGS_methodDefinitionListForGeneration & var_cas_CONCRETE_METHOD_LIST,
                                const GGS_bool& var_cas_IS_ABSTRACT) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ALL_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_ABSTRACT_METHOD_LIST.isBuilt ()
    && var_cas_CONCRETE_METHOD_LIST.isBuilt ()
    && var_cas_IS_ABSTRACT.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Pointer class for @")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public cPtr_class {\n"
  "//--- Attributes\n" ;
GGS_typedAttributeList::cEnumerator enumerator_508 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_508 = NULL ;
while (((operand_508 = enumerator_508.nextObject ()))) {
macroValidPointer (operand_508) ;
result << "  protected : GALGAS_" ;
result << operand_508->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
result << " mAttribute_" ;
result << operand_508->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "//--- Constructor\n"
  "  public : cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_755 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_755 = NULL ;
while (((operand_755 = enumerator_755.nextObject ()))) {
macroValidPointer (operand_755) ;
result << "const GALGAS_" ;
result << operand_755->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (17)) ;
result << " & in_" ;
result << operand_755->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_755.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
result << ") ;\n" ;
GGS_abstractMethodDefinitionListForGeneration::cEnumerator enumerator_1051 (var_cas_ABSTRACT_METHOD_LIST, true) ;
const GGS_abstractMethodDefinitionListForGeneration::cElement * operand_1051 = NULL ;
while (((operand_1051 = enumerator_1051.nextObject ()))) {
macroValidPointer (operand_1051) ;
result << "//--- Abstract method " ;
result << operand_1051->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (28)) ;
result << "\n"
  "  private : virtual void method_" ;
result << operand_1051->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_1209 (operand_1051->mSignature, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_1209 = NULL ;
while (((operand_1209 = enumerator_1209.nextObject ()))) {
macroValidPointer (operand_1209) ;
if ((operand_1209->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (31))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_1209->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
result << " & " ;
}else if ((operand_1209->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (33))).boolValue ()) {
result << "GALGAS_" ;
result << operand_1209->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (34)) ;
result << " & " ;
}else if ((operand_1209->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (35))).boolValue ()) {
result << "GALGAS_" ;
result << operand_1209->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (36)) ;
result << " & " ;
}else if ((operand_1209->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_SOURCE_FILE_AT_LINE (37))).boolValue ()) {
result << "GALGAS_" ;
result << operand_1209->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (38)) ;
result << " " ;
}else {
}
result << operand_1209->mFormalArgumentCppName ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const = 0 ;\n"
  "\n" ;
}
GGS_methodDefinitionListForGeneration::cEnumerator enumerator_2024 (var_cas_CONCRETE_METHOD_LIST, true) ;
const GGS_methodDefinitionListForGeneration::cElement * operand_2024 = NULL ;
while (((operand_2024 = enumerator_2024.nextObject ()))) {
macroValidPointer (operand_2024) ;
result << "//--- Concrete method " ;
result << operand_2024->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (47)) ;
result << "\n"
  "  private : virtual void method_" ;
result << operand_2024->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_2182 (operand_2024->mSignature, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_2182 = NULL ;
while (((operand_2182 = enumerator_2182.nextObject ()))) {
macroValidPointer (operand_2182) ;
if ((operand_2182->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (50))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_2182->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (51)) ;
result << " & " ;
}else if ((operand_2182->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (52))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2182->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (53)) ;
result << " & " ;
}else if ((operand_2182->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (54))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2182->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (55)) ;
result << " & " ;
}else if ((operand_2182->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_SOURCE_FILE_AT_LINE (56))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2182->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (57)) ;
result << " " ;
}else {
}
result << operand_2182->mFormalArgumentCppName ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}
if ((var_cas_IS_ABSTRACT).operator_not ().boolValue ()) {
result << "//--- Description\n"
  "  public : virtual void description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 inIndentation) const ;\n"
  "\n" ;
}else {
}
result << "//--- Friend class\n"
  "  friend class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "} ;\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'inheritedClassTypeHeader1' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_inheritedClassTypeHeader1 (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_SUPER_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_BASE_CLASS_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ALL_ATTRIBUTE_LIST,
                                const GGS_bool& var_cas_IS_ABSTRACT) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_BASE_CLASS_IDENTIFIER.isBuilt ()
    && var_cas_ALL_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_IS_ABSTRACT.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string (" class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public GALGAS_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " {\n"
  "  private : typedef GALGAS_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " inherited ;\n"
  "\n"
  "//--- Constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n"
  "//--------------------------------- Constructor from pointer\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inSourcePtr) ;\n"
  "\n" ;
if (((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).operator_and ((var_cas_IS_ABSTRACT).operator_not ()).boolValue ()) {
result << "//--- Insulate\n"
  "  private : VIRTUAL_IN_DEBUG void insulate (LOCATION_ARGS) ;\n" ;
}else {
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'inheritedClassTypeHeader2' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_inheritedClassTypeHeader2 (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_SUPER_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_BASE_CLASS_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_CURRENT_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_ALL_ATTRIBUTE_LIST,
                                const GGS_bool& var_cas_IS_ABSTRACT,
                                const GGS_abstractMethodDefinitionListForGeneration & var_cas_ABSTRACT_METHOD_LIST,
                                const GGS_methodDefinitionListForGeneration & var_cas_CONCRETE_METHOD_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_BASE_CLASS_IDENTIFIER.isBuilt ()
    && var_cas_CURRENT_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_ALL_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_IS_ABSTRACT.isBuilt ()
    && var_cas_ABSTRACT_METHOD_LIST.isBuilt ()
    && var_cas_CONCRETE_METHOD_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Pointer class for @")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public cPtr_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " {\n"
  "//--- Attributes\n" ;
GGS_typedAttributeList::cEnumerator enumerator_531 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_531 = NULL ;
while (((operand_531 = enumerator_531.nextObject ()))) {
macroValidPointer (operand_531) ;
result << "  protected : GALGAS_" ;
result << operand_531->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
result << " mAttribute_" ;
result << operand_531->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "//--- Constructor\n"
  "  public : cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_778 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_778 = NULL ;
while (((operand_778 = enumerator_778.nextObject ()))) {
macroValidPointer (operand_778) ;
result << "const GALGAS_" ;
result << operand_778->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (17)) ;
result << " & in_" ;
result << operand_778->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_778.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
result << ") ;\n" ;
GGS_abstractMethodDefinitionListForGeneration::cEnumerator enumerator_1074 (var_cas_ABSTRACT_METHOD_LIST, true) ;
const GGS_abstractMethodDefinitionListForGeneration::cElement * operand_1074 = NULL ;
while (((operand_1074 = enumerator_1074.nextObject ()))) {
macroValidPointer (operand_1074) ;
result << "//--- Abstract method " ;
result << operand_1074->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (28)) ;
result << "\n"
  "  private : virtual void method_" ;
result << operand_1074->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_1232 (operand_1074->mSignature, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_1232 = NULL ;
while (((operand_1232 = enumerator_1232.nextObject ()))) {
macroValidPointer (operand_1232) ;
if ((operand_1232->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (31))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_1232->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
result << " & " ;
}else if ((operand_1232->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (33))).boolValue ()) {
result << "GALGAS_" ;
result << operand_1232->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (34)) ;
result << " & " ;
}else if ((operand_1232->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (35))).boolValue ()) {
result << "GALGAS_" ;
result << operand_1232->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (36)) ;
result << " & " ;
}else if ((operand_1232->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_SOURCE_FILE_AT_LINE (37))).boolValue ()) {
result << "GALGAS_" ;
result << operand_1232->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (38)) ;
result << " " ;
}else {
}
result << operand_1232->mFormalArgumentCppName ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const = 0 ;\n"
  "\n" ;
}
GGS_methodDefinitionListForGeneration::cEnumerator enumerator_2047 (var_cas_CONCRETE_METHOD_LIST, true) ;
const GGS_methodDefinitionListForGeneration::cElement * operand_2047 = NULL ;
while (((operand_2047 = enumerator_2047.nextObject ()))) {
macroValidPointer (operand_2047) ;
result << "//--- Concrete method " ;
result << operand_2047->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (47)) ;
result << "\n"
  "  private : virtual void method_" ;
result << operand_2047->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_2205 (operand_2047->mSignature, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_2205 = NULL ;
while (((operand_2205 = enumerator_2205.nextObject ()))) {
macroValidPointer (operand_2205) ;
if ((operand_2205->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (50))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_2205->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (51)) ;
result << " & " ;
}else if ((operand_2205->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (52))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2205->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (53)) ;
result << " & " ;
}else if ((operand_2205->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (54))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2205->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (55)) ;
result << " & " ;
}else if ((operand_2205->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_SOURCE_FILE_AT_LINE (56))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2205->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (57)) ;
result << " " ;
}else {
}
result << operand_2205->mFormalArgumentCppName ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}
if ((var_cas_IS_ABSTRACT).operator_not ().boolValue ()) {
result << "//--- Description\n"
  "  public : virtual void description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 inIndentation) const ;\n"
  "\n" ;
}else {
}
result << "\n"
  "//--- Friend class\n"
  "  friend class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "} ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'rootClassTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_rootClassTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_CURRENT_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_ALL_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_INHERITED_ATTRIBUTE_LIST,
                                const GGS_bool& var_cas_IS_ABSTRACT,
                                const GGS_abstractMethodDefinitionListForGeneration & var_cas_ABSTRACT_METHOD_LIST,
                                const GGS_methodDefinitionListForGeneration & var_cas_CONCRETE_METHOD_LIST,
                                const GGS_instanceMethodMap & var_cas_INSTANCE_METHOD_MAP) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_CURRENT_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_ALL_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_INHERITED_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_IS_ABSTRACT.isBuilt ()
    && var_cas_ABSTRACT_METHOD_LIST.isBuilt ()
    && var_cas_CONCRETE_METHOD_LIST.isBuilt ()
    && var_cas_INSTANCE_METHOD_MAP.isBuilt () ;
  if (isBuilt) {
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) :\n"
  "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
  "  GALGAS__root (),\n"
  "#endif\n"
  "mObjectPtr (NULL) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inSourcePtr) :\n"
  "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
  "  GALGAS__root (),\n"
  "#endif\n"
  "mObjectPtr (NULL) {\n"
  "  macroAssignObject (mObjectPtr, inSourcePtr) ;\n"
  "  macroNullOrValidObject (mObjectPtr, cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::~GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) {\n"
  "  macroReleaseObject (mObjectPtr) ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::drop (void) {\n"
  "  macroReleaseObject (mObjectPtr) ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) :\n"
  "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
  "  GALGAS__root (),\n"
  "#endif\n"
  "mObjectPtr (NULL) {\n"
  "  macroAssignObject (mObjectPtr, inSource.mObjectPtr) ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator = (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) {\n"
  "  macroAssignObject (mObjectPtr, inSource.mObjectPtr) ;\n"
  "  return * this ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_string GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_description (UNUSED_LOCATION_ARGS) const {\n"
  "  GALGAS_string result ;\n"
  "  if (isValid ()) {\n"
  "    C_String s ;\n"
  "    description (s, 0) ;\n"
  "    result = GALGAS_string (s) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 inIndentation) const {\n"
  "  ioString << \"<@\"\n"
  "           << typeDescriptor ()->mGalgasTypeName\n"
  "           << \":\" ;\n"
  "  if (isValid ()) {\n"
  "    mObjectPtr->description (ioString, inIndentation) ;\n"
  "  }else{\n"
  "    ioString << \"not built\" ;\n"
  "  }\n"
  "  ioString << \">\" ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::log (const char * inMessage) const {\n"
  "  printf (\"LOGGING '%s': \", inMessage) ;\n"
  "  C_String s ;\n"
  "  description (s, 0) ;\n"
  "  printf (\"%s\\n\", s.cString (HERE)) ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
if ((var_cas_CURRENT_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "enumComparisonResult GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand) const {\n"
  "  return (isValid () && inOperand.isValid ()) \? kOperandEqual : kOperandNotValid ;\n"
  "}\n"
  "\n" ;
}else {
result << "enumComparisonResult GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand) const {\n"
  "  enumComparisonResult result = (isValid () && inOperand.isValid ()) \? kOperandEqual : kOperandNotValid ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3109 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3109 = NULL ;
while (((operand_3109 = enumerator_3109.nextObject ()))) {
macroValidPointer (operand_3109) ;
result << "  if (kOperandEqual == result) {\n"
  "    result = mObjectPtr->mAttribute_" ;
result << operand_3109->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".objectCompare (inOperand.mObjectPtr->mAttribute_" ;
result << operand_3109->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n" ;
}
if (((var_cas_IS_ABSTRACT).operator_not ()).operator_and ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}else {
}
if (((var_cas_IS_ABSTRACT).operator_not ()).operator_and ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_4067 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4067 = NULL ;
while (((operand_4067 = enumerator_4067.nextObject ()))) {
macroValidPointer (operand_4067) ;
result << "const GALGAS_" ;
result << operand_4067->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (115)) ;
result << " & inAttribute_" ;
result << operand_4067->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_4067.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (" ;
GGS_typedAttributeList::cEnumerator enumerator_4428 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4428 = NULL ;
while (((operand_4428 = enumerator_4428.nextObject ()))) {
macroValidPointer (operand_4428) ;
result << "inAttribute_" ;
result << operand_4428->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
if (enumerator_4428.hasNextObject ()) {
result << " && " ;
}
}
result << ") {\n"
  "    macroMyNew (result.mObjectPtr, cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_4644 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4644 = NULL ;
while (((operand_4644 = enumerator_4644.nextObject ()))) {
macroValidPointer (operand_4644) ;
result << "inAttribute_" ;
result << operand_4644->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_4644.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_THERE)) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}else {
}
if (((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).operator_and ((var_cas_IS_ABSTRACT).operator_not ()).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (LOCATION_ARGS) {\n"
  "  if (isValid () && (mObjectPtr->retainCount () > 1)) {\n"
  "    cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * r = NULL ;\n"
  "    macroMyNew (r, cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_5219 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5219 = NULL ;
while (((operand_5219 = enumerator_5219.nextObject ()))) {
macroValidPointer (operand_5219) ;
result << "mObjectPtr->mAttribute_" ;
result << operand_5219->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_5219.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_THERE)) ;\n"
  "    macroAssignObject (mObjectPtr, r) ;\n"
  "    macroReleaseObject (r) ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}else {
}
GGS_methodDefinitionListForGeneration::cEnumerator enumerator_5482 (var_cas_CONCRETE_METHOD_LIST, true) ;
const GGS_methodDefinitionListForGeneration::cElement * operand_5482 = NULL ;
while (((operand_5482 = enumerator_5482.nextObject ()))) {
macroValidPointer (operand_5482) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << function_generateProcedure (inLexique, (((GGS_string ("cPtr_")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string ("::method_"))).operator_concat (operand_5482->mMethodName.ggs_string ().reader_identifierRepresentation ()), operand_5482->mSignature, operand_5482->mInstructionList, GGS_bool (true), GGS_string ("C_Compiler"), GGS_bool (true), GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (161)) ;
}
GGS_typedAttributeList::cEnumerator enumerator_5897 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5897 = NULL ;
while (((operand_5897 = enumerator_5897.nextObject ()))) {
macroValidPointer (operand_5897) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_5897->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (175)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_5897->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (UNUSED_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << operand_5897->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (176)) ;
result << " result ;\n"
  "  if (NULL != mObjectPtr) {\n"
  "    result = mObjectPtr->mAttribute_" ;
result << operand_5897->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
GGS_typedAttributeList::cEnumerator enumerator_6445 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6445 = NULL ;
while (((operand_6445 = enumerator_6445.nextObject ()))) {
macroValidPointer (operand_6445) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_set" ;
result << operand_6445->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << operand_6445->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (186)) ;
result << " inValue\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  if (NULL != mObjectPtr) {\n"
  "    mObjectPtr->mAttribute_" ;
result << operand_6445->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " = inValue ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}
GGS_instanceMethodMap::cEnumerator enumerator_6982 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_6982 = NULL ;
while (((operand_6982 = enumerator_6982.nextObject ()))) {
macroValidPointer (operand_6982) ;
if ((((operand_6982->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (195)))).operator_or ((operand_6982->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (195))))).operator_or ((operand_6982->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasicFinal (inLexique COMMA_SOURCE_FILE_AT_LINE (195)))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_" ;
result << operand_6982->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_7336 (operand_6982->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_7336 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7336 = enumerator_7336.nextObject ()))) {
macroValidPointer (operand_7336) ;
if ((operand_7336->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (199))).boolValue ()) {
result << "GALGAS_" ;
result << operand_7336->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
}else if ((operand_7336->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (201))).boolValue ()) {
result << "GALGAS_" ;
result << operand_7336->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (202)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (202)) ;
}else if ((operand_7336->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (203))).boolValue ()) {
result << "GALGAS_" ;
result << operand_7336->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (204)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (204)) ;
}else {
result << "GALGAS_" ;
result << operand_7336->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (206)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (206)) ;
}
if (enumerator_7336.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_6982->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_6982->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_6982->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") const {\n"
  "  if (mObjectPtr != NULL) {\n"
  "    mObjectPtr->method_" ;
result << operand_6982->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_formalParameterSignature::cEnumerator enumerator_8622 (operand_6982->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_8622 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8622 = enumerator_8622.nextObject ()))) {
macroValidPointer (operand_8622) ;
if ((operand_8622->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (229))).boolValue ()) {
result << "constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (230)) ;
result << ", " ;
}else if ((operand_8622->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (231))).boolValue ()) {
result << "ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (232)) ;
result << ", " ;
}else if ((operand_8622->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (233))).boolValue ()) {
result << "outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (234)) ;
result << ", " ;
}else {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (236)) ;
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "inCompiler COMMA_THERE) ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}else {
}
}
result << "//---------------------------------------------------------------------------*\n"
  "//" ;
result << ((GGS_string ("Pointer class for @")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_9546 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9546 = NULL ;
while (((operand_9546 = enumerator_9546.nextObject ()))) {
macroValidPointer (operand_9546) ;
result << "const GALGAS_" ;
result << operand_9546->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (251)) ;
result << " & in_" ;
result << operand_9546->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_9546.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
result << ") :\n"
  "cPtr_class (THERE)" ;
GGS_typedAttributeList::cEnumerator enumerator_9864 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9864 = NULL ;
while (((operand_9864 = enumerator_9864.nextObject ()))) {
macroValidPointer (operand_9864) ;
result << ",\n"
  "mAttribute_" ;
result << operand_9864->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (in_" ;
result << operand_9864->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
}
result << " {\n"
  "}\n" ;
if ((var_cas_IS_ABSTRACT).operator_not ().boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n" ;
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "void cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 /* inIndentation */) const {\n"
  "  ioString << \"[@" ;
result << var_cas_TYPE_NAME ;
result << "]\" ;\n"
  "}" ;
}else {
result << "void cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 inIndentation) const {\n"
  "  ioString << \"[@" ;
result << var_cas_TYPE_NAME ;
result << ":\" ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_10543 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10543 = NULL ;
while (((operand_10543 = enumerator_10543.nextObject ()))) {
macroValidPointer (operand_10543) ;
result << "  mAttribute_" ;
result << operand_10543->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".description (ioString, inIndentation+1) ;\n" ;
if (enumerator_10543.hasNextObject ()) {
result << "  ioString << \", \" ;\n" ;
}
}
result << "  ioString << \"]\" ;\n"
  "}" ;
}
}else {
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'inheritedClassTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_inheritedClassTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_SUPER_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_BASE_CLASS_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_CURRENT_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_ALL_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_INHERITED_ATTRIBUTE_LIST,
                                const GGS_bool& var_cas_IS_ABSTRACT,
                                const GGS_abstractMethodDefinitionListForGeneration & var_cas_ABSTRACT_METHOD_LIST,
                                const GGS_methodDefinitionListForGeneration & var_cas_CONCRETE_METHOD_LIST,
                                const GGS_instanceMethodMap & var_cas_INSTANCE_METHOD_MAP) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_BASE_CLASS_IDENTIFIER.isBuilt ()
    && var_cas_CURRENT_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_ALL_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_INHERITED_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_IS_ABSTRACT.isBuilt ()
    && var_cas_ABSTRACT_METHOD_LIST.isBuilt ()
    && var_cas_CONCRETE_METHOD_LIST.isBuilt ()
    && var_cas_INSTANCE_METHOD_MAP.isBuilt () ;
  if (isBuilt) {
if ((var_cas_CURRENT_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand) const {\n"
  "  return (isValid () && inOperand.isValid ()) \? kOperandEqual : kOperandNotValid ;\n"
  "}\n"
  "\n" ;
}else {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand) const {\n"
  "  enumComparisonResult result = inherited::objectCompare (inOperand) ;\n" ;
if ((var_cas_CURRENT_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "  const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) mObjectPtr ;\n"
  "  macroNullOrValidObject (p, const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * q = (const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inOperand.mObjectPtr ;\n"
  "  macroNullOrValidObject (q, const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1063 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1063 = NULL ;
while (((operand_1063 = enumerator_1063.nextObject ()))) {
macroValidPointer (operand_1063) ;
result << "  if (kOperandEqual == result) {\n"
  "    result = p->mAttribute_" ;
result << operand_1063->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".objectCompare (q->mAttribute_" ;
result << operand_1063->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
}else {
}
result << "  return result ;\n"
  "}\n"
  "\n" ;
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) :\n"
  "GALGAS_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " () {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inSourcePtr) :\n"
  "GALGAS_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " (inSourcePtr) {\n"
  "  macroNullOrValidObject (inSourcePtr, cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "/* GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_" ;
result << var_cas_BASE_CLASS_IDENTIFIER ;
result << " & inSource) :\n"
  "GALGAS_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " (inSource) {\n"
  "  macroNullOrValidObject (mObjectPtr, cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "}*/\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "/*GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_2301 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2301 = NULL ;
while (((operand_2301 = enumerator_2301.nextObject ()))) {
macroValidPointer (operand_2301) ;
result << "const GALGAS_" ;
result << operand_2301->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (49)) ;
result << " & constinAttribute_" ;
result << operand_2301->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_2301.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
result << ") :\n"
  "GALGAS_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_2662 (var_cas_INHERITED_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2662 = NULL ;
while (((operand_2662 = enumerator_2662.nextObject ()))) {
macroValidPointer (operand_2662) ;
result << "constinAttribute_" ;
result << operand_2662->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_2662.hasNextObject ()) {
result << ", " ;
}
}
if ((var_cas_INHERITED_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << " COMMA_THERE)" ;
}else {
result << "THERE)" ;
}
GGS_typedAttributeList::cEnumerator enumerator_2888 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2888 = NULL ;
while (((operand_2888 = enumerator_2888.nextObject ()))) {
macroValidPointer (operand_2888) ;
result << ",\n"
  "mAttribute_" ;
result << operand_2888->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (constinAttribute_" ;
result << operand_2888->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
}
result << " {\n"
  "}*/\n"
  "\n" ;
if (((var_cas_IS_ABSTRACT).operator_not ()).operator_and ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  macroMyNew (result.mObjectPtr, cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}else {
}
if (((var_cas_IS_ABSTRACT).operator_not ()).operator_and ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_3713 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3713 = NULL ;
while (((operand_3713 = enumerator_3713.nextObject ()))) {
macroValidPointer (operand_3713) ;
result << "const GALGAS_" ;
result << operand_3713->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (89)) ;
result << " & inAttribute_" ;
result << operand_3713->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_3713.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (" ;
GGS_typedAttributeList::cEnumerator enumerator_4074 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4074 = NULL ;
while (((operand_4074 = enumerator_4074.nextObject ()))) {
macroValidPointer (operand_4074) ;
result << "inAttribute_" ;
result << operand_4074->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
if (enumerator_4074.hasNextObject ()) {
result << " && " ;
}
}
result << ") {\n"
  "    macroMyNew (result.mObjectPtr, cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_4290 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4290 = NULL ;
while (((operand_4290 = enumerator_4290.nextObject ()))) {
macroValidPointer (operand_4290) ;
result << "inAttribute_" ;
result << operand_4290->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_4290.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_THERE)) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}else {
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "/* GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::~GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) {\n"
  "} */\n"
  "\n" ;
if (((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).operator_and ((var_cas_IS_ABSTRACT).operator_not ()).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (LOCATION_ARGS) {\n"
  "  if (isValid () && (mObjectPtr->retainCount () > 1)) {\n"
  "    cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) mObjectPtr ;\n"
  "    macroValidObject (p, cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * r = NULL ;\n"
  "    macroMyNew (r, cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_5162 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5162 = NULL ;
while (((operand_5162 = enumerator_5162.nextObject ()))) {
macroValidPointer (operand_5162) ;
result << "p->mAttribute_" ;
result << operand_5162->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_5162.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_THERE)) ;\n"
  "    macroAssignObject (mObjectPtr, r) ;\n"
  "    macroReleaseObject (r) ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}else {
}
GGS_methodDefinitionListForGeneration::cEnumerator enumerator_5416 (var_cas_CONCRETE_METHOD_LIST, true) ;
const GGS_methodDefinitionListForGeneration::cElement * operand_5416 = NULL ;
while (((operand_5416 = enumerator_5416.nextObject ()))) {
macroValidPointer (operand_5416) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << function_generateProcedure (inLexique, (((GGS_string ("cPtr_")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string ("::method_"))).operator_concat (operand_5416->mMethodName.ggs_string ().reader_identifierRepresentation ()), operand_5416->mSignature, operand_5416->mInstructionList, GGS_bool (true), GGS_string ("C_Compiler"), GGS_bool (true), GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (142)) ;
}
GGS_typedAttributeList::cEnumerator enumerator_5830 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5830 = NULL ;
while (((operand_5830 = enumerator_5830.nextObject ()))) {
macroValidPointer (operand_5830) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_5830->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (155)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_5830->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (UNUSED_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << operand_5830->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (156)) ;
result << " result ;\n"
  "  if (NULL != mObjectPtr) {\n"
  "    const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) mObjectPtr ;\n"
  "    macroValidObject (p, const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    result = p->mAttribute_" ;
result << operand_5830->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
GGS_typedAttributeList::cEnumerator enumerator_6526 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6526 = NULL ;
while (((operand_6526 = enumerator_6526.nextObject ()))) {
macroValidPointer (operand_6526) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_set" ;
result << operand_6526->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << operand_6526->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (168)) ;
result << " inValue\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  if (NULL != mObjectPtr) {\n"
  "    cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) mObjectPtr ;\n"
  "    macroValidObject (p, cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    p->mAttribute_" ;
result << operand_6526->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " = inValue ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}
GGS_instanceMethodMap::cEnumerator enumerator_7193 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_7193 = NULL ;
while (((operand_7193 = enumerator_7193.nextObject ()))) {
macroValidPointer (operand_7193) ;
if ((((operand_7193->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (179)))).operator_or ((operand_7193->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (179))))).operator_or ((operand_7193->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasicFinal (inLexique COMMA_SOURCE_FILE_AT_LINE (179)))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_" ;
result << operand_7193->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_7547 (operand_7193->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_7547 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7547 = enumerator_7547.nextObject ()))) {
macroValidPointer (operand_7547) ;
if ((operand_7547->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (183))).boolValue ()) {
result << "GALGAS_" ;
result << operand_7547->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (184)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (184)) ;
}else if ((operand_7547->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (185))).boolValue ()) {
result << "GALGAS_" ;
result << operand_7547->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (186)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (186)) ;
}else if ((operand_7547->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (187))).boolValue ()) {
result << "GALGAS_" ;
result << operand_7547->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (188)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (188)) ;
}else {
result << "GALGAS_" ;
result << operand_7547->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (190)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (190)) ;
}
if (enumerator_7547.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_7193->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_7193->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_7193->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") const {\n"
  "  if (mObjectPtr != NULL) {\n"
  "    const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) mObjectPtr ;\n"
  "    macroValidObject (p, const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    p->method_" ;
result << operand_7193->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_formalParameterSignature::cEnumerator enumerator_8985 (operand_7193->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_8985 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8985 = enumerator_8985.nextObject ()))) {
macroValidPointer (operand_8985) ;
if ((operand_8985->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (215))).boolValue ()) {
result << "constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (216)) ;
result << ", " ;
}else if ((operand_8985->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (217))).boolValue ()) {
result << "ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (218)) ;
result << ", " ;
}else if ((operand_8985->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (219))).boolValue ()) {
result << "outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (220)) ;
result << ", " ;
}else {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (222)) ;
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "inCompiler COMMA_THERE) ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}else {
}
}
result << "//---------------------------------------------------------------------------*\n"
  "//" ;
result << ((GGS_string ("Pointer class for @")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_9909 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9909 = NULL ;
while (((operand_9909 = enumerator_9909.nextObject ()))) {
macroValidPointer (operand_9909) ;
result << "const GALGAS_" ;
result << operand_9909->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (237)) ;
result << " & in_" ;
result << operand_9909->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_9909.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
result << ") :\n"
  "cPtr_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_10246 (var_cas_INHERITED_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10246 = NULL ;
while (((operand_10246 = enumerator_10246.nextObject ()))) {
macroValidPointer (operand_10246) ;
result << "in_" ;
result << operand_10246->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_10246.hasNextObject ()) {
result << ", " ;
}
}
if ((var_cas_INHERITED_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << " COMMA_THERE" ;
}else {
result << "THERE" ;
}
result << ")" ;
GGS_typedAttributeList::cEnumerator enumerator_10464 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10464 = NULL ;
while (((operand_10464 = enumerator_10464.nextObject ()))) {
macroValidPointer (operand_10464) ;
result << ",\n"
  "mAttribute_" ;
result << operand_10464->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (in_" ;
result << operand_10464->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
}
result << " {\n"
  "}\n"
  "\n" ;
if ((var_cas_IS_ABSTRACT).operator_not ().boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n" ;
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "void cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 /* inIndentation */) const {\n"
  "  ioString << \"[@" ;
result << var_cas_TYPE_NAME ;
result << "]\" ;\n"
  "}" ;
}else {
result << "void cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 inIndentation) const {\n"
  "  ioString << \"[@" ;
result << var_cas_TYPE_NAME ;
result << ":\" ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_11143 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_11143 = NULL ;
while (((operand_11143 = enumerator_11143.nextObject ()))) {
macroValidPointer (operand_11143) ;
result << "  mAttribute_" ;
result << operand_11143->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".description (ioString, inIndentation+1) ;\n" ;
if (enumerator_11143.hasNextObject ()) {
result << "  ioString << \", \" ;\n" ;
}
}
result << "  ioString << \"]\" ;\n"
  "}" ;
}
}else {
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of wrapper 'typeGenerationTemplateEX'            *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_typeGenerationTemplateEX_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_typeGenerationTemplateEX_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_typeGenerationTemplateEX (
  "",
  0,
  gWrapperAllFiles_typeGenerationTemplateEX_0,
  0,
  gWrapperAllDirectories_typeGenerationTemplateEX_0
) ;

//---------------------------------------------------------------------------*
//                                                                           *
//'listmapTypeSpecificImplementation' template of 'typeGenerationTemplateEX' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplateEX_listmapTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_ASSOCIATED_LISTTYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ASSOCIATED_LISTTYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_listmap ((GALGAS_list * (*) (LOCATION_ARGS)) GALGASap_uintlist::constructor_emptyList COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyMap (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioObject\n"
  "                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioObject->retainCount () > 1) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * source = ioObject ;\n"
  "    macroReleaseObject (ioObject) ;\n"
  "    ioObject = constructor_emptyMap (THERE) ;\n"
  "    ioObject->copyFrom (source) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void addAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_string * inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_1208 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1208 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1208 = enumerator_1208.nextObject ()))) {
macroValidPointer (operand_1208) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_1208->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioResult COMMA_THERE) ;\n"
  "    GALGAS_object * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (37)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_1564 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1564 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1564 = enumerator_1564.nextObject ()))) {
macroValidPointer (operand_1564) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (39)) ;
if (enumerator_1564.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "    ioResult->addObject (inKey, attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'mapProxyTypeSpecificImplementation' template of 'typeGenerationTemplateEX' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplateEX_mapProxyTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_mapSearchMethodListAST & var_cas_SEARCH_METHOD_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_SEARCH_METHOD_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_mapproxy (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (4)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4)) ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_null (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::class_method_makeRegularProxy (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << " & ioMap,\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_string inKey,\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & outProxy\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  outProxy.drop () ;\n"
  "  if (inKey.isValid () && ioMap.isValid ()) {\n"
  "    ioMap.insulate (HERE) ;\n"
  "    GALGAS_classMapIndex * p = NULL ;\n"
  "    macroMyNew (p, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "    outProxy = p ;\n"
  "    outProxy.ptr (HERE)->internalMakeRegularProxy (ioMap.ptr (HERE), inKey) ;\n"
  "  }\n"
  "}\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1254 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1254 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1254 = enumerator_1254.nextObject ()))) {
macroValidPointer (operand_1254) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << operand_1254->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_1254->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  GALGASap_" ;
result << operand_1254->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (34)) ;
result << " result ;\n"
  "  capCollectionElement attributeList = getAttributeList (inCompiler COMMA_THERE) ;\n"
  "  if (attributeList.ptrNoVerif () != NULL) {\n"
  "    macroValidObject (attributeList.ptrNoVerif (), cCollectionElement_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    result = ((cCollectionElement_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << " *) attributeList.ptrNoVerif ())->mAttribute_" ;
result << operand_1254->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ";\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_mapSearchMethodListAST::cEnumerator enumerator_2182 (var_cas_SEARCH_METHOD_LIST, true) ;
const GGS_mapSearchMethodListAST::cElement * operand_2182 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2182 = enumerator_2182.nextObject ()))) {
macroValidPointer (operand_2182) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_" ;
result << operand_2182->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << " & inMap,\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_lstring & inKey,\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (inMap.isValid () && inKey.isValid ()) {\n" ;
const GGS_uint indentation_3301 = GGS_uint (4U) ;
if (indentation_3301.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_3301.uintValue ()) ;
}
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = NULL ;\n"
  "macroMyNew (p, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "result = p ;\n"
  "const utf32 kSearchErrorMessage [" ;
result << operand_2182->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (56)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (56)) ;
result << "] = " ;
result << operand_2182->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "const bool ok = result.ptr (HERE)->internalSearchKey (inMap, inKey, kSearchErrorMessage, inCompiler COMMA_THERE) ;\n"
  "if (! ok) {\n"
  "  result.drop () ;\n"
  "}\n" ;
 ;
if (indentation_3301.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_3301.uintValue ())) ;
}
result << "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of wrapper 'semanticComponentGenerationTemplate'       *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_semanticComponentGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_semanticComponentGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_semanticComponentGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_semanticComponentGenerationTemplate_0,
  0,
  gWrapperAllDirectories_semanticComponentGenerationTemplate_0
) ;

//---------------------------------------------------------------------------*
//                                                                           *
//'routineDeclaration' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_routineDeclaration (C_Compiler & inLexique,
                                const GGS_string& var_cas_ROUTINE_NAME,
                                const GGS_formalParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_ROUTINE_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Routine '")).operator_concat (var_cas_ROUTINE_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void routine_" ;
result << var_cas_ROUTINE_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_488 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_488 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_488 = enumerator_488.nextObject ()))) {
macroValidPointer (operand_488) ;
if ((operand_488->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (9))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (10)) ;
result << " & constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (10)) ;
}else if ((operand_488->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (11))).boolValue ()) {
result << "GALGAS_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
}else if ((operand_488->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (13))).boolValue ()) {
result << "GALGAS_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
}else {
result << "GALGAS_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'functionDeclaration' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_functionDeclaration (C_Compiler & inLexique,
                                const GGS_string& var_cas_FUNCTION_NAME,
                                const GGS_formalInputParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST,
                                const GGS_string& var_cas_RETURN_TYPE_IDENTIFIER) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_FUNCTION_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt ()
    && var_cas_RETURN_TYPE_IDENTIFIER.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Function '")).operator_concat (var_cas_FUNCTION_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_RETURN_TYPE_IDENTIFIER ;
result << " function_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_520 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_520 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_520 = enumerator_520.nextObject ()))) {
macroValidPointer (operand_520) ;
result << "const GALGAS_" ;
result << operand_520->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
result << " & constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'routineImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_routineImplementation (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_ROUTINE_NAME,
                                const GGS_string& var_cas_ROUTINE_IMPLEMENTATION) {
  C_String result ;
  const bool isBuilt = var_cas_ROUTINE_NAME.isBuilt ()
    && var_cas_ROUTINE_IMPLEMENTATION.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Routine '")).operator_concat (var_cas_ROUTINE_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << var_cas_ROUTINE_IMPLEMENTATION ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'functionImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_functionImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_FUNCTION_NAME,
                                const GGS_string& var_cas_FUNCTION_IMPLEMENTATION,
                                const GGS_formalInputParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST,
                                const GGS_string& var_cas_RETURN_TYPE_IDENTIFIER) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_FUNCTION_NAME.isBuilt ()
    && var_cas_FUNCTION_IMPLEMENTATION.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt ()
    && var_cas_RETURN_TYPE_IDENTIFIER.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Function '")).operator_concat (var_cas_FUNCTION_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << var_cas_FUNCTION_IMPLEMENTATION ;
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "//  Function introspection                                                   *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "/*static const C_galgas_type_descriptor * functionArgs_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " [" ;
result << var_cas_FORMAL_ARGUMENT_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (12)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
result << "] = {\n" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_847 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_847 = NULL ;
while (((operand_847 = enumerator_847.nextObject ()))) {
macroValidPointer (operand_847) ;
result << "  & kTypeDescriptor_GALGAS_" ;
result << operand_847->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (15)) ;
result << ",\n" ;
}
result << "  NULL\n"
  "} ;*/\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "/*static GALGAS_object functionWithGenericHeader_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n"
  "                                                 " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "cRootObjectArray & inEffectiveParameterArray,\n"
  "                                                 " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_location & inErrorLocation\n"
  "                                                 " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  const bool ok = inCompiler->checkFunctionCallArguments (" ;
result << var_cas_FUNCTION_NAME.reader_utf8Representation () ;
result << ",\n"
  "                                                          " ;
result << var_cas_FORMAL_ARGUMENT_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (27)) ;
result << ",\n"
  "                                                          functionArgs_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << ",\n"
  "                                                          inEffectiveParameterArray,\n"
  "                                                          inErrorLocation\n"
  "                                                          COMMA_THERE) ;\n"
  "  GALGAS_object result ;\n"
  "  if (ok) {\n" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_2051 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_2051 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2051 = enumerator_2051.nextObject ()))) {
macroValidPointer (operand_2051) ;
result << "    GALGAS_" ;
result << operand_2051->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << " operand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << " = inEffectiveParameterArray.objectAtIndex (" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << " COMMA_THERE) ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "    result = function_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_2350 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_2350 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2350 = enumerator_2350.nextObject ()))) {
macroValidPointer (operand_2350) ;
result << "operand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (39)) ;
result << ", " ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "inCompiler COMMA_THERE).embedObject () ;\n"
  "  }\n"
  "  return result ;\n"
  "}*/\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "/*C_galgas_function_descriptor functionDescriptor_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << var_cas_FUNCTION_NAME.reader_utf8Representation () ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "functionWithGenericHeader_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "& kTypeDescriptor_GALGAS_" ;
result << var_cas_RETURN_TYPE_IDENTIFIER ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << var_cas_FORMAL_ARGUMENT_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (51)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "functionArgs_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << ") ; */\n"
  "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@semanticDeclarationForGeneration.appendDeclaration1'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendDeclaration1 (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_16100
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_16100 != NULL) {
var_cas_outHeader = GGS_string ("") ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendDeclaration1'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1> gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration1 ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 (typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration1.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendDeclaration1 (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1
findCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration1.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration1 (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration1.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendDeclaration1 ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@routinePrototypeDeclarationForGeneration.appendDeclaration1'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__routinePrototypeDeclarationForGeneration__appendDeclaration1 (C_Compiler & inLexique,
                                const cPtr_routinePrototypeDeclarationForGeneration * operand_16313
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_16313 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_routineDeclaration (inLexique, operand_16313->mRoutineName, operand_16313->mFormalArgumentList) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@functionPrototypeDeclarationForGeneration.appendDeclaration1'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__functionPrototypeDeclarationForGeneration__appendDeclaration1 (C_Compiler & inLexique,
                                const cPtr_functionPrototypeDeclarationForGeneration * operand_16640
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_16640 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_functionDeclaration (inLexique, operand_16640->mFunctionName, operand_16640->mFormalArgumentList, operand_16640->mReturnType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (433))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@onceFunctionDeclarationForGeneration.appendDeclaration1' *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__onceFunctionDeclarationForGeneration__appendDeclaration1 (C_Compiler & inLexique,
                                const cPtr_onceFunctionDeclarationForGeneration * operand_17008
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_17008 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_functionDeclaration (inLexique, operand_17008->mFunctionName, GGS_formalInputParameterListForGeneration ::constructor_emptyList (), operand_17008->mReturnType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (443))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@classTypeForGeneration.appendDeclaration1'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__classTypeForGeneration__appendDeclaration1 (C_Compiler & inLexique,
                                const cPtr_classTypeForGeneration * operand_17393
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_17393 != NULL) {
const GGS_bool cond_17653 = operand_17393->mSuperClass.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (450)) ;
if (cond_17653.isBuiltAndTrue ()) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_rootClassTypeHeader1 (inLexique, operand_17393->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (452)), operand_17393->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (453)), operand_17393->mAllTypedAttributeList, operand_17393->mIsAbstract) ;
}else if (cond_17653.isBuiltAndFalse ()) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_inheritedClassTypeHeader1 (inLexique, operand_17393->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (459)), operand_17393->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (460)), operand_17393->mSuperClass.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (461)), operand_17393->mBaseClass.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (462)), operand_17393->mAllTypedAttributeList, operand_17393->mIsAbstract) ;
}
var_cas_outHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (inLexique, operand_17393->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (468)), operand_17393->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (469)), operand_17393->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (470)), operand_17393->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (471)), operand_17393->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (472)), operand_17393->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (473)), operand_17393->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (474)), operand_17393->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (475)), operand_17393->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (476)), operand_17393->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (477)), operand_17393->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (478)), operand_17393->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (479)))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@mapTypeForGeneration.appendDeclaration1'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapTypeForGeneration__appendDeclaration1 (C_Compiler & inLexique,
                                const cPtr_mapTypeForGeneration * operand_18614
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_18614 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_mapTypeHeader1 (inLexique, operand_18614->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (487)), operand_18614->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (488)), operand_18614->mTypedAttributeList) ;
var_cas_outHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (inLexique, operand_18614->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (492)), operand_18614->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (493)), operand_18614->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (494)), operand_18614->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (495)), operand_18614->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (496)), operand_18614->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (497)), operand_18614->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (498)), operand_18614->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (499)), operand_18614->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (500)), operand_18614->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (501)), operand_18614->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (502)), operand_18614->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (503)))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@structTypeForGeneration.appendDeclaration1'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__structTypeForGeneration__appendDeclaration1 (C_Compiler & inLexique,
                                const cPtr_structTypeForGeneration * operand_19455
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_19455 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_structTypeHeader1 (inLexique, operand_19455->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (511)), operand_19455->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (512)), operand_19455->mTypedAttributeList) ;
var_cas_outHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (inLexique, operand_19455->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (516)), operand_19455->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (517)), operand_19455->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (518)), operand_19455->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (519)), operand_19455->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (520)), operand_19455->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (521)), operand_19455->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (522)), operand_19455->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (523)), operand_19455->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (524)), operand_19455->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (525)), operand_19455->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (526)), operand_19455->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (527)))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@listTypeForGeneration.appendDeclaration1'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__listTypeForGeneration__appendDeclaration1 (C_Compiler & inLexique,
                                const cPtr_listTypeForGeneration * operand_20297
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_20297 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_listTypeHeader1 (inLexique, operand_20297->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (535)), operand_20297->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (536)), operand_20297->mTypedAttributeList) ;
var_cas_outHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (inLexique, operand_20297->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (540)), operand_20297->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (541)), operand_20297->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (542)), operand_20297->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (543)), operand_20297->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (544)), operand_20297->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (545)), operand_20297->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (546)), operand_20297->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (547)), operand_20297->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (548)), operand_20297->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (549)), operand_20297->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (550)), operand_20297->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (551)))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category reader '@sortedListTypeForGeneration.appendDeclaration1'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__sortedListTypeForGeneration__appendDeclaration1 (C_Compiler & inLexique,
                                const cPtr_sortedListTypeForGeneration * operand_21143
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_21143 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_sortedlistTypeHeader1 (inLexique, operand_21143->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (559)), operand_21143->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (560)), operand_21143->mTypedAttributeList) ;
var_cas_outHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (inLexique, operand_21143->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (564)), operand_21143->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (565)), operand_21143->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (566)), operand_21143->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (567)), operand_21143->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (568)), operand_21143->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (569)), operand_21143->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (570)), operand_21143->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (571)), operand_21143->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (572)), operand_21143->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (573)), operand_21143->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (574)), operand_21143->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (575)))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@enumTypeForGeneration.appendDeclaration1'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__enumTypeForGeneration__appendDeclaration1 (C_Compiler & inLexique,
                                const cPtr_enumTypeForGeneration * operand_21989
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_21989 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_enumTypeHeader1 (inLexique, operand_21989->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (583)), operand_21989->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (584)), operand_21989->mConstantList) ;
var_cas_outHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (inLexique, operand_21989->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (588)), operand_21989->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (589)), operand_21989->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (590)), operand_21989->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (591)), operand_21989->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (592)), operand_21989->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (593)), operand_21989->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (594)), operand_21989->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (595)), operand_21989->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (596)), operand_21989->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (597)), operand_21989->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (598)), operand_21989->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (599)))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@semanticDeclarationForGeneration.appendDeclaration2'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendDeclaration2 (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_23137
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_23137 != NULL) {
var_cas_outHeader = GGS_string ("") ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendDeclaration2'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration2> gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration2 ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 (typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration2.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendDeclaration2 (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration2
findCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration2.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration2 (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration2.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendDeclaration2 ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@mapTypeForGeneration.appendDeclaration2'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapTypeForGeneration__appendDeclaration2 (C_Compiler & inLexique,
                                const cPtr_mapTypeForGeneration * operand_23330
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_23330 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_mapTypeHeader2 (inLexique, operand_23330->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (617)), operand_23330->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (618)), operand_23330->mTypedAttributeList) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@classTypeForGeneration.appendDeclaration2'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__classTypeForGeneration__appendDeclaration2 (C_Compiler & inLexique,
                                const cPtr_classTypeForGeneration * operand_23667
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_23667 != NULL) {
const GGS_bool cond_23973 = operand_23667->mSuperClass.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (626)) ;
if (cond_23973.isBuiltAndTrue ()) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_rootClassTypeHeader2 (inLexique, operand_23667->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (628)), operand_23667->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (629)), operand_23667->mAllTypedAttributeList, operand_23667->mAbstractMethodList, operand_23667->mMethodList, operand_23667->mIsAbstract) ;
}else if (cond_23973.isBuiltAndFalse ()) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_inheritedClassTypeHeader2 (inLexique, operand_23667->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (637)), operand_23667->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (638)), operand_23667->mSuperClass.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (639)), operand_23667->mBaseClass.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (640)), operand_23667->mTypedAttributeList, operand_23667->mAllTypedAttributeList, operand_23667->mIsAbstract, operand_23667->mAbstractMethodList, operand_23667->mMethodList) ;
}
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticDeclarationForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendTypeGenericImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_24910
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_24910 != NULL) {
var_cas_outImplementation = GGS_string ("") ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation> gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendTypeGenericImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation
findCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendTypeGenericImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticTypeForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticTypeForGeneration__appendTypeGenericImplementation (C_Compiler & inLexique,
                                const cPtr_semanticTypeForGeneration * operand_25136
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_25136 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_genericTypeImplementation (inLexique, operand_25136->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (665)), operand_25136->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (666)), operand_25136->mTypeIndex.reader_mSuperType (inLexique COMMA_SOURCE_FILE_AT_LINE (667))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticDeclarationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendSpecificImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_25827
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_25827 != NULL) {
var_cas_outImplementation = GGS_string ("") ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation> gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendSpecificImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation
findCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendSpecificImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category reader '@listmapTypeForGeneration.appendSpecificImplementation'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__listmapTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_listmapTypeForGeneration * operand_26049
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_26049 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplateEX_listmapTypeSpecificImplementation (inLexique, operand_26049->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (686)), operand_26049->mAssociatedListTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (687)), operand_26049->mAssociatedListTypedAttributeList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category reader '@mapTypeForGeneration.appendSpecificImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_mapTypeForGeneration * operand_26480
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_26480 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_mapTypeSpecificImplementation (inLexique, operand_26480->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (696)), operand_26480->mTypedAttributeList, operand_26480->mInsertMethodList, operand_26480->mSearchMethodList, operand_26480->mRemoveMethodList, operand_26480->mHasInsertOrReplaceModifier, operand_26480->mWithAccessorMap) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@sortedListTypeForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__sortedListTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_sortedListTypeForGeneration * operand_26965
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_26965 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_sortedlistTypeSpecificImplementation (inLexique, operand_26965->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (710)), operand_26965->mTypedAttributeList, operand_26965->mSortDescriptorList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@enumTypeForGeneration.appendSpecificImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__enumTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_enumTypeForGeneration * operand_27352
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_27352 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_enumTypeSpecificImplementation (inLexique, operand_27352->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (720)), operand_27352->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (721)), operand_27352->mConstantList, operand_27352->mEnumMessageList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@mapProxyTypeForGeneration.appendSpecificImplementation'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapProxyTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_mapProxyTypeForGeneration * operand_27750
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_27750 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplateEX_mapProxyTypeSpecificImplementation (inLexique, operand_27750->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (731)), operand_27750->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (732)), operand_27750->mAssociatedMapTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (733)), operand_27750->mAssociatedMapTypedAttributeList, operand_27750->mSearchMethodList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@classTypeForGeneration.appendSpecificImplementation'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__classTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_classTypeForGeneration * operand_28227
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_28227 != NULL) {
const GGS_bool cond_28733 = operand_28227->mSuperClass.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (742)) ;
if (cond_28733.isBuiltAndTrue ()) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_rootClassTypeSpecificImplementation (inLexique, operand_28227->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (744)), operand_28227->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (745)), operand_28227->mTypedAttributeList, operand_28227->mAllTypedAttributeList, operand_28227->mAllTypedAttributeList.reader_subListWithRange (inLexique, GGS_uint (0U), operand_28227->mAllTypedAttributeList.reader_length ().substract_operation (inLexique, operand_28227->mTypedAttributeList.reader_length () COMMA_SOURCE_FILE_AT_LINE (748)) COMMA_SOURCE_FILE_AT_LINE (748)), operand_28227->mIsAbstract, operand_28227->mAbstractMethodList, operand_28227->mMethodList, operand_28227->mInstanceMethodMap) ;
}else if (cond_28733.isBuiltAndFalse ()) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_inheritedClassTypeSpecificImplementation (inLexique, operand_28227->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (756)), operand_28227->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (757)), operand_28227->mSuperClass.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (758)), operand_28227->mBaseClass.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (759)), operand_28227->mTypedAttributeList, operand_28227->mAllTypedAttributeList, operand_28227->mAllTypedAttributeList.reader_subListWithRange (inLexique, GGS_uint (0U), operand_28227->mAllTypedAttributeList.reader_length ().substract_operation (inLexique, operand_28227->mTypedAttributeList.reader_length () COMMA_SOURCE_FILE_AT_LINE (762)) COMMA_SOURCE_FILE_AT_LINE (762)), operand_28227->mIsAbstract, operand_28227->mAbstractMethodList, operand_28227->mMethodList, operand_28227->mInstanceMethodMap) ;
}
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category reader '@structTypeForGeneration.appendSpecificImplementation'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__structTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_structTypeForGeneration * operand_29441
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_29441 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_structTypeSpecificImplementation (inLexique, operand_29441->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (775)), operand_29441->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (776)), operand_29441->mTypedAttributeList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@listTypeForGeneration.appendSpecificImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__listTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_listTypeForGeneration * operand_29821
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_29821 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_listTypeSpecificImplementation (inLexique, operand_29821->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (785)), operand_29821->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (786)), operand_29821->mTypedAttributeList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@routineImplementationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__routineImplementationForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_routineImplementationForGeneration * operand_30212
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_30212 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_routineImplementation (inLexique, operand_30212->mRoutineName, function_generateProcedure (inLexique, (GGS_string ("routine_")).operator_concat (operand_30212->mRoutineName.reader_identifierRepresentation ()), operand_30212->mFormalArgumentList, operand_30212->mRoutineInstructionList, GGS_bool (false), GGS_string ("C_Compiler"), GGS_bool (true), GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (796))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@functionImplementationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__functionImplementationForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_functionImplementationForGeneration * operand_30849
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_30849 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_functionImplementation (inLexique, operand_30849->mFunctionName, function_generateFunction (inLexique, (GGS_string ("function_")).operator_concat (operand_30849->mFunctionName.reader_identifierRepresentation ()), operand_30849->mFormalArgumentList, operand_30849->mFunctionInstructionList, GGS_string ("C_Compiler"), operand_30849->mReturnType.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (818)), operand_30849->mResultVariableCppName COMMA_SOURCE_FILE_AT_LINE (813)), operand_30849->mFormalArgumentList, operand_30849->mReturnType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (822))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@onceFunctionDeclarationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__onceFunctionDeclarationForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_onceFunctionDeclarationForGeneration * operand_31472
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_31472 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_functionImplementation (inLexique, operand_31472->mFunctionName, function_generateFunction (inLexique, (GGS_string ("function_")).operator_concat (operand_31472->mFunctionName.reader_identifierRepresentation ()), GGS_formalInputParameterListForGeneration ::constructor_emptyList (), operand_31472->mFunctionInstructionList, GGS_string ("C_Compiler"), operand_31472->mReturnType.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (836)), operand_31472->mResultVariableCppName COMMA_SOURCE_FILE_AT_LINE (831)), GGS_formalInputParameterListForGeneration ::constructor_emptyList (), operand_31472->mReturnType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (840))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticGeneration (void) {
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 (category_reader__semanticDeclarationForGeneration__appendDeclaration1, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__routinePrototypeDeclarationForGeneration__appendDeclaration1, gClassInfoFor__routinePrototypeDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__functionPrototypeDeclarationForGeneration__appendDeclaration1, gClassInfoFor__functionPrototypeDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__onceFunctionDeclarationForGeneration__appendDeclaration1, gClassInfoFor__onceFunctionDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__classTypeForGeneration__appendDeclaration1, gClassInfoFor__classTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__mapTypeForGeneration__appendDeclaration1, gClassInfoFor__mapTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__structTypeForGeneration__appendDeclaration1, gClassInfoFor__structTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__listTypeForGeneration__appendDeclaration1, gClassInfoFor__listTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__sortedListTypeForGeneration__appendDeclaration1, gClassInfoFor__sortedListTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__enumTypeForGeneration__appendDeclaration1, gClassInfoFor__enumTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 (category_reader__semanticDeclarationForGeneration__appendDeclaration2, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration2) category_reader__mapTypeForGeneration__appendDeclaration2, gClassInfoFor__mapTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration2) category_reader__classTypeForGeneration__appendDeclaration2, gClassInfoFor__classTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (category_reader__semanticDeclarationForGeneration__appendTypeGenericImplementation, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation) category_reader__semanticTypeForGeneration__appendTypeGenericImplementation, gClassInfoFor__semanticTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (category_reader__semanticDeclarationForGeneration__appendSpecificImplementation, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__listmapTypeForGeneration__appendSpecificImplementation, gClassInfoFor__listmapTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__mapTypeForGeneration__appendSpecificImplementation, gClassInfoFor__mapTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__sortedListTypeForGeneration__appendSpecificImplementation, gClassInfoFor__sortedListTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__enumTypeForGeneration__appendSpecificImplementation, gClassInfoFor__enumTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__mapProxyTypeForGeneration__appendSpecificImplementation, gClassInfoFor__mapProxyTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__classTypeForGeneration__appendSpecificImplementation, gClassInfoFor__classTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__structTypeForGeneration__appendSpecificImplementation, gClassInfoFor__structTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__listTypeForGeneration__appendSpecificImplementation, gClassInfoFor__listTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__routineImplementationForGeneration__appendSpecificImplementation, gClassInfoFor__routineImplementationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__functionImplementationForGeneration__appendSpecificImplementation, gClassInfoFor__functionImplementationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__onceFunctionDeclarationForGeneration__appendSpecificImplementation, gClassInfoFor__onceFunctionDeclarationForGeneration.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_semanticGeneration (void) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration1.free () ;
  gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration2.free () ;
  gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.free () ;
  gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticGeneration (prologueRoutineFor_semanticGeneration, epilogueRoutineFor_semanticGeneration) ;

//---------------------------------------------------------------------------*

