//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'semanticGeneration.cpp'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      june 17th, 2010, at 13h46'22"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticGeneration.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticGeneration.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of function "generateProcedure"               *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string function_generateProcedure (C_Compiler & inLexique,
                                const GGS_string  var_cas_inProcedureName,
                                const GGS_formalParameterListForGeneration   var_cas_inFormalArgumentList,
                                const GGS_semanticInstructionListForGeneration   var_cas_inInstructionList,
                                const GGS_bool  var_cas_inProcedureIsConst,
                                const GGS_string  var_cas_inCompilerTypeName,
                                const GGS_bool  var_cas_inGenerateLocationArgs,
                                const GGS_bool  var_cas_inGenerateResetTemplateString COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER function_generateProcedure at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_outGeneratedCode ;
  GGS_stringset  var_cas_unusedVariableCppNameSet = GGS_stringset ::constructor_emptySet () ;
  const GGS_bool cond_2502 = (var_cas_inGenerateResetTemplateString).operator_not () ;
  if (cond_2502.isBuiltAndTrue ()) {
    var_cas_unusedVariableCppNameSet.addAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (44))) ;
  }
  {
    GGS_formalParameterListForGeneration::cEnumerator enumerator_2538 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalParameterListForGeneration::cElement * operand_2538 = NULL ;
    while (((operand_2538 = enumerator_2538.nextObject ()))) {
      macroValidPointer (operand_2538) ;
      const GGS_bool cond_2695 = (operand_2538->mFormalArgumentPassingMode).operator_isNotEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (47))) ;
      if (cond_2695.isBuiltAndTrue ()) {
        var_cas_unusedVariableCppNameSet.addAssign_operation (operand_2538->mFormalArgumentCppName) ;
      }
    }
  }
  GGS_uint  var_cas_temporaryVariableIndex = GGS_uint (0U) ;
  GGS_string var_cas_routineBody = GGS_string ("") ;
  var_cas_routineBody.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (54)) ;
  {
    GGS_semanticInstructionListForGeneration::cEnumerator enumerator_2869 (var_cas_inInstructionList, true) ;
    const GGS_semanticInstructionListForGeneration::cElement * operand_2869 = NULL ;
    while (((operand_2869 = enumerator_2869.nextObject ()))) {
      macroValidPointer (operand_2869) ;
      { typeCategoryMethod__semanticInstructionForGeneration__generateInstruction method = findCategoryMethod__semanticInstructionForGeneration__generateInstruction (operand_2869->mInstruction.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_2869->mInstruction (HERE), var_cas_temporaryVariableIndex, var_cas_unusedVariableCppNameSet, var_cas_routineBody COMMA_SOURCE_FILE_AT_LINE (56)) ;
        }
      }
    }
  }
  var_cas_routineBody.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (58)) ;
  var_cas_outGeneratedCode = ((GGS_string ("void ")).operator_concat (var_cas_inProcedureName)).operator_concat (GGS_string (" (")) ;
  const GGS_uint  var_cas_colRef = var_cas_outGeneratedCode.reader_currentColumn () ;
  {
    GGS_formalParameterListForGeneration::cEnumerator enumerator_3206 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalParameterListForGeneration::cElement * operand_3206 = NULL ;
    while (((operand_3206 = enumerator_3206.nextObject ()))) {
      macroValidPointer (operand_3206) ;
      switch (operand_3206->mFormalArgumentPassingMode.enumValue ()) {
      case GGS_formalArgumentPassingModeAST::enum_argumentConstantIn:
        {
        var_cas_outGeneratedCode.appendCString ("GALGASap_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3206->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (66))) ;
        var_cas_outGeneratedCode.appendCString (" ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentInOut:
        {
        var_cas_outGeneratedCode.appendCString ("GALGASap_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3206->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (68))) ;
        var_cas_outGeneratedCode.appendCString (" & ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentOut:
        {
        var_cas_outGeneratedCode.appendCString ("GALGASap_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3206->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (70))) ;
        var_cas_outGeneratedCode.appendCString (" & ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentIn:
        {
        var_cas_outGeneratedCode.appendCString ("GALGASap_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3206->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (72))) ;
        var_cas_outGeneratedCode.appendCString (" ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::kNotBuilt:
        break ;
      }
      const GGS_bool cond_3895 = var_cas_unusedVariableCppNameSet.reader_hasKey (operand_3206->mFormalArgumentCppName) ;
      if (cond_3895.isBuiltAndTrue ()) {
        var_cas_outGeneratedCode.appendCString ("/* ") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3206->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (" */") ;
      }else if (cond_3895.isBuiltAndFalse ()) {
        var_cas_outGeneratedCode.dotAssign_operation (operand_3206->mFormalArgumentCppName) ;
      }
      var_cas_outGeneratedCode.appendCString (",\n") ;
      var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (80)) ;
    }
  }
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inCompilerTypeName) ;
  var_cas_outGeneratedCode.appendCString (" * ") ;
  const GGS_bool cond_4272 = var_cas_unusedVariableCppNameSet.reader_hasKey (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (84))) ;
  if (cond_4272.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("/* ") ;
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (85))) ;
    var_cas_outGeneratedCode.appendCString (" */") ;
  }else if (cond_4272.isBuiltAndFalse ()) {
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (87))) ;
  }
  const GGS_bool cond_4512 = var_cas_inGenerateLocationArgs ;
  if (cond_4512.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("\n") ;
    var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (91)) ;
    var_cas_outGeneratedCode.appendCString ("COMMA_UNUSED_LOCATION_ARGS") ;
  }
  var_cas_outGeneratedCode.appendCString (")") ;
  const GGS_bool cond_4615 = var_cas_inProcedureIsConst ;
  if (cond_4615.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString (" const") ;
  }
  var_cas_outGeneratedCode.appendCString (" {\n") ;
  {
      GGS_uint var_cas_IDX (true, 0) ;
    GGS_formalParameterListForGeneration::cEnumerator enumerator_4711 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalParameterListForGeneration::cElement * operand_4711 = NULL ;
    while (((operand_4711 = enumerator_4711.nextObject ()))) {
      macroValidPointer (operand_4711) ;
      switch (operand_4711->mFormalArgumentPassingMode.enumValue ()) {
      case GGS_formalArgumentPassingModeAST::enum_argumentOut:
        {
        var_cas_outGeneratedCode.appendCString ("  ") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_4711->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (".drop () ; // Release 'out' argument\n") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentConstantIn:
      case GGS_formalArgumentPassingModeAST::enum_argumentIn:
      case GGS_formalArgumentPassingModeAST::enum_argumentInOut:
        {
        }
        break ;
      case GGS_formalArgumentPassingModeAST::kNotBuilt:
        break ;
      }
      var_cas_IDX.mValue ++ ;
    }
  }
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_routineBody) ;
  const GGS_bool cond_5176 = var_cas_inGenerateResetTemplateString ;
  if (cond_5176.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("  ") ;
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (111))) ;
    var_cas_outGeneratedCode.appendCString ("->resetTemplateString () ;\n") ;
  }
  var_cas_outGeneratedCode.appendCString ("}\n"
    "\n") ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE function_generateProcedure\n") ;
  #endif
  return var_cas_outGeneratedCode ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_generateProcedure (C_Compiler & inLexique,
                           const GGS_objectlist & inEffectiveParameterArray,
                           const GGS_location & inErrorLocation
                           COMMA_LOCATION_ARGS) {
  const GGS_string arg_0 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (0) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_formalParameterListForGeneration  arg_1 = GGS_formalParameterListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (1) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_semanticInstructionListForGeneration  arg_2 = GGS_semanticInstructionListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (2) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_bool arg_3 = GGS_bool::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (3) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_4 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (4) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_bool arg_5 = GGS_bool::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (5) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_bool arg_6 = GGS_bool::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (6) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string result = function_generateProcedure (inLexique,
                            arg_0,
                            arg_1,
                            arg_2,
                            arg_3,
                            arg_4,
                            arg_5,
                            arg_6
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

static const C_galgas_type_descriptorEX *
kArgumentTypeList_generateProcedure [7] = {& kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_formalParameterListForGeneration ,
                              & kTypeDescriptor_GGS_semanticInstructionListForGeneration ,
                              & kTypeDescriptor_GGS_bool,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_bool,
                              & kTypeDescriptor_GGS_bool} ;

const C_galgas_function_descriptorEX
kFunction_descriptor_generateProcedure ("generateProcedure",
                              functionForGenericCall_generateProcedure,
                              & kTypeDescriptor_GGS_string,
                              7,
                              kArgumentTypeList_generateProcedure) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of function "generateFunction"                *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string function_generateFunction (C_Compiler & inLexique,
                                const GGS_string  var_cas_inProcedureName,
                                const GGS_formalInputParameterListForGeneration   var_cas_inFormalArgumentList,
                                const GGS_semanticInstructionListForGeneration   var_cas_inInstructionList,
                                const GGS_string  var_cas_inCompilerTypeName,
                                const GGS_string  var_cas_inResultTypeName,
                                const GGS_string  var_cas_inResultVariableCppName COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER function_generateFunction at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_outGeneratedCode ;
  GGS_stringset  var_cas_unusedVariableCppNameSet = GGS_stringset ::constructor_emptySet () ;
  var_cas_unusedVariableCppNameSet.addAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (134))) ;
  {
    GGS_formalInputParameterListForGeneration::cEnumerator enumerator_6164 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalInputParameterListForGeneration::cElement * operand_6164 = NULL ;
    while (((operand_6164 = enumerator_6164.nextObject ()))) {
      macroValidPointer (operand_6164) ;
      var_cas_unusedVariableCppNameSet.addAssign_operation (operand_6164->mFormalArgumentCppName) ;
    }
  }
  GGS_uint  var_cas_temporaryVariableIndex = GGS_uint (0U) ;
  GGS_string var_cas_routineBody = GGS_string ("") ;
  var_cas_routineBody.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (142)) ;
  {
    GGS_semanticInstructionListForGeneration::cEnumerator enumerator_6394 (var_cas_inInstructionList, true) ;
    const GGS_semanticInstructionListForGeneration::cElement * operand_6394 = NULL ;
    while (((operand_6394 = enumerator_6394.nextObject ()))) {
      macroValidPointer (operand_6394) ;
      { typeCategoryMethod__semanticInstructionForGeneration__generateInstruction method = findCategoryMethod__semanticInstructionForGeneration__generateInstruction (operand_6394->mInstruction.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_6394->mInstruction (HERE), var_cas_temporaryVariableIndex, var_cas_unusedVariableCppNameSet, var_cas_routineBody COMMA_SOURCE_FILE_AT_LINE (144)) ;
        }
      }
    }
  }
  var_cas_routineBody.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (146)) ;
  var_cas_outGeneratedCode = ((GGS_string ("GALGASap_")).operator_concat (var_cas_inResultTypeName.reader_identifierRepresentation ())).operator_concat (GGS_string (" ")) ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inProcedureName) ;
  var_cas_outGeneratedCode.appendCString (" (") ;
  const GGS_uint  var_cas_colRef = var_cas_outGeneratedCode.reader_currentColumn () ;
  {
    GGS_formalInputParameterListForGeneration::cEnumerator enumerator_6809 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalInputParameterListForGeneration::cElement * operand_6809 = NULL ;
    while (((operand_6809 = enumerator_6809.nextObject ()))) {
      macroValidPointer (operand_6809) ;
      var_cas_outGeneratedCode.appendCString ("GALGASap_") ;
      var_cas_outGeneratedCode.dotAssign_operation (operand_6809->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (153))) ;
      var_cas_outGeneratedCode.appendCString (" & ") ;
      const GGS_bool cond_7053 = var_cas_unusedVariableCppNameSet.reader_hasKey (operand_6809->mFormalArgumentCppName) ;
      if (cond_7053.isBuiltAndTrue ()) {
        var_cas_outGeneratedCode.appendCString ("/* ") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_6809->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (" */") ;
      }else if (cond_7053.isBuiltAndFalse ()) {
        var_cas_outGeneratedCode.dotAssign_operation (operand_6809->mFormalArgumentCppName) ;
      }
      var_cas_outGeneratedCode.appendCString (",\n") ;
      var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (160)) ;
    }
  }
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inCompilerTypeName) ;
  var_cas_outGeneratedCode.appendCString (" * ") ;
  const GGS_bool cond_7430 = var_cas_unusedVariableCppNameSet.reader_hasKey (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (164))) ;
  if (cond_7430.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("/* ") ;
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (165))) ;
    var_cas_outGeneratedCode.appendCString (" */") ;
  }else if (cond_7430.isBuiltAndFalse ()) {
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (167))) ;
  }
  var_cas_outGeneratedCode.appendCString ("\n") ;
  var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (170)) ;
  var_cas_outGeneratedCode.appendCString ("COMMA_UNUSED_LOCATION_ARGS)") ;
  var_cas_outGeneratedCode.appendCString (" {\n") ;
  var_cas_outGeneratedCode.appendCString ("  GALGASap_") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inResultTypeName.reader_identifierRepresentation ()) ;
  var_cas_outGeneratedCode.appendCString (" ") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inResultVariableCppName) ;
  var_cas_outGeneratedCode.appendCString (" ; // Returned variable\n") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_routineBody) ;
  var_cas_outGeneratedCode.appendCString ("//---\n") ;
  var_cas_outGeneratedCode.appendCString ("  return ") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inResultVariableCppName) ;
  var_cas_outGeneratedCode.appendCString (" ;\n") ;
  var_cas_outGeneratedCode.appendCString ("}\n"
    "\n") ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE function_generateFunction\n") ;
  #endif
  return var_cas_outGeneratedCode ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_generateFunction (C_Compiler & inLexique,
                           const GGS_objectlist & inEffectiveParameterArray,
                           const GGS_location & inErrorLocation
                           COMMA_LOCATION_ARGS) {
  const GGS_string arg_0 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (0) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_formalInputParameterListForGeneration  arg_1 = GGS_formalInputParameterListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (1) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_semanticInstructionListForGeneration  arg_2 = GGS_semanticInstructionListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (2) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_3 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (3) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_4 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (4) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_5 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (5) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string result = function_generateFunction (inLexique,
                            arg_0,
                            arg_1,
                            arg_2,
                            arg_3,
                            arg_4,
                            arg_5
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

static const C_galgas_type_descriptorEX *
kArgumentTypeList_generateFunction [6] = {& kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_formalInputParameterListForGeneration ,
                              & kTypeDescriptor_GGS_semanticInstructionListForGeneration ,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_string} ;

const C_galgas_function_descriptorEX
kFunction_descriptor_generateFunction ("generateFunction",
                              functionForGenericCall_generateFunction,
                              & kTypeDescriptor_GGS_string,
                              6,
                              kArgumentTypeList_generateFunction) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of wrapper 'semanticComponentGenerationTemplate'       *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_semanticComponentGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_semanticComponentGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_semanticComponentGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_semanticComponentGenerationTemplate_0,
  0,
  gWrapperAllDirectories_semanticComponentGenerationTemplate_0
) ;

//---------------------------------------------------------------------------*
//                                                                           *
//'autoPointerClassHeader' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_autoPointerClassHeader (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_bool& var_cas_IS_CONCRETE,
                                const GGS_unifiedTypeMapProxy & var_cas_SUPER_TYPE_INDEX,
                                const GGS_typeKindEnum& var_cas_TYPE_KIND,
                                const GGS_typedAttributeList & var_cas_CURRENT_TYPE_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_INHERITED_ATTRIBUTE_LIST,
                                const GGS_constructorMap & var_cas_CONSTRUCTOR_MAP,
                                const GGS_readerMap & var_cas_READER_MAP,
                                const GGS_modifierMap & var_cas_MODIFIER_MAP,
                                const GGS_instanceMethodMap & var_cas_INSTANCE_METHOD_MAP,
                                const GGS_classMethodMap & var_cas_CLASS_METHOD_MAP,
                                const GGS_enumerationDescriptorList & var_cas_ENUMERATION_DESCRIPTOR_LIST,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_unifiedTypeMapProxyList & var_cas_ADD_ASSIGN_ARGUMENT_LIST,
                                const GGS_nativeAttributeList & var_cas_NATIVE_ATTRIBUTE_LIST,
                                const GGS_lstringlist & var_cas_ENUM_CONSTANT_LIST,
                                const GGS_typedAttributeList & var_cas_PRIVATE_DATA_NUMBER_TYPED_LIST,
                                const GGS_withAccessorMap & var_cas_WITH_ACCESSOR_MAP) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_IS_CONCRETE.isBuilt ()
    && var_cas_SUPER_TYPE_INDEX.isBuilt ()
    && var_cas_TYPE_KIND.isBuilt ()
    && var_cas_CURRENT_TYPE_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_INHERITED_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_CONSTRUCTOR_MAP.isBuilt ()
    && var_cas_READER_MAP.isBuilt ()
    && var_cas_MODIFIER_MAP.isBuilt ()
    && var_cas_INSTANCE_METHOD_MAP.isBuilt ()
    && var_cas_CLASS_METHOD_MAP.isBuilt ()
    && var_cas_ENUMERATION_DESCRIPTOR_LIST.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_ADD_ASSIGN_ARGUMENT_LIST.isBuilt ()
    && var_cas_NATIVE_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_ENUM_CONSTANT_LIST.isBuilt ()
    && var_cas_PRIVATE_DATA_NUMBER_TYPED_LIST.isBuilt ()
    && var_cas_WITH_ACCESSOR_MAP.isBuilt () ;
  if (isBuilt) {
    result << "//---------------------------------------------------------------------------*\n"
      "//                                                                           *\n"
      "//" ;
    result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" auto ptr type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
    result << "*\n"
      "//                                                                           *\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "class GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " : public GALGASap_" ;
    result << var_cas_SUPER_TYPE_INDEX.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (7)) ;
    result << " {\n"
      "//--- Default constructor\n"
      "  public : inline GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " (void) : GALGASap_" ;
    result << var_cas_SUPER_TYPE_INDEX.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
    result << " () {}\n"
      "\n"
      "//--- Copy constructor\n"
      "  public : GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " (const GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " & inSource) ;\n"
      "\n"
      "//--- Assignment operator\n"
      "  public : GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " & operator = (const GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " & inSource) ;\n"
      "\n"
      "//--- Get pointer  \n"
      "  #ifndef DO_NOT_GENERATE_CHECKINGS\n"
      "    public : GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " * ptr (LOCATION_ARGS) ;\n"
      "    public : const GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " * ptr (LOCATION_ARGS) const ;\n"
      "  #else\n"
      "    public : inline GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " * ptr (LOCATION_ARGS) {\n"
      "      return (GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " *) mPtr ;\n"
      "    }\n"
      "    public : inline const GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " * ptr (LOCATION_ARGS) const {\n"
      "      return (const GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " *) mPtr ;\n"
      "    }\n"
      "  #endif\n"
      "\n"
      "//--- Constructor from generic object\n"
      "  public : GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " (const GALGASap_object & inSource) ;\n"
      "\n"
      "//--- Construction from pointer\n"
      "  public : GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " (GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " * inSourcePtr) ;\n"
      "\n"
      "//--- Assignment from pointer\n"
      "  public : GALGASap_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " & operator = (GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " * inSourcePtr) ;\n"
      "\n" ;
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateCppConstructorWithNativeAttributeListInAutoPointerClass (inLexique COMMA_SOURCE_FILE_AT_LINE (41)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- C++ constructor (with native attributes)\n"
        "  public : GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " (" ;
      columnMarker = result.currentColumn () ;
      GGS_nativeAttributeList::cEnumerator enumerator_1994 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
      const GGS_nativeAttributeList::cElement * operand_1994 = NULL ;
      while (((operand_1994 = enumerator_1994.nextObject ()))) {
        macroValidPointer (operand_1994) ;
        result << "const " ;
        result << operand_1994->mCppClassName ;
        if (operand_1994->mIsPointer.boolValue ()) {
          result << " *" ;
        }else {
        }
        if (operand_1994->mUseReferenceForConstructor.boolValue ()) {
          result << " &" ;
        }else {
        }
        result << " inOperand_" ;
        result << operand_1994->mAttributeName ;
        if (enumerator_1994.hasNextObject ()) {
          result << ",\n" ;
          result.appendSpacesUntilColumn (columnMarker) ;
        }
      }
      if ((var_cas_NATIVE_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
        result << "LOCATION_ARGS) ;\n"
          "\n" ;
      }else {
        result << "\n" ;
        result.appendSpacesUntilColumn (columnMarker) ;
        result << "COMMA_LOCATION_ARGS) ;\n"
          "\n" ;
      }
    }else {
    }
    if ((var_cas_TYPE_IDENTIFIER).operator_isEqual (GGS_string ("bool")).boolValue ()) {
      result << "//--------------------------------- Comparison constructor\n"
        "  public : GALGASap_bool (const enumComparisonKind,\n"
        "                          const enumComparisonResult\n"
        "                          COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else if ((var_cas_TYPE_IDENTIFIER).operator_isEqual (GGS_string ("list")).boolValue ()) {
      result << "//--------------------------------- Comparison constructor\n"
        "  public : VIRTUAL_IN_DEBUG GALGASap_uint readerCall_length (LOCATION_ARGS) ;\n"
        "\n" ;
    }else if ((var_cas_TYPE_IDENTIFIER).operator_isEqual (GGS_string ("sortedlist")).boolValue ()) {
      result << "//--------------------------------- Comparison constructor\n"
        "  public : VIRTUAL_IN_DEBUG GALGASap_uint readerCall_length (LOCATION_ARGS) ;\n"
        "\n" ;
    }else if ((var_cas_TYPE_IDENTIFIER).operator_isEqual (GGS_string ("map")).boolValue ()) {
      result << "//--------------------------------- Comparison constructor\n"
        "  public : VIRTUAL_IN_DEBUG GALGASap_bool readerCall_hasKey (GALGASap_string & inKey COMMA_LOCATION_ARGS) ;\n"
        "  public : VIRTUAL_IN_DEBUG GALGASap_uint readerCall_count (LOCATION_ARGS) ;\n"
        "  public : VIRTUAL_IN_DEBUG GALGASap_stringset readerCall_allKeys (LOCATION_ARGS) ;\n"
        "  public : VIRTUAL_IN_DEBUG GALGASap_lstringlist readerCall_allKeyList (LOCATION_ARGS) ;\n"
        "  public : VIRTUAL_IN_DEBUG GALGASap_location readerCall_locationForKey (GALGASap_string & inKey, C_Compiler * inCompiler COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryShiftOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (83)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- << and >> shift operators\n"
        "public : GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " left_shift_operation (" ;
      columnMarker = result.currentColumn () ;
      result << "GALGASap_uint & inShiftOperand\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n"
        "public : GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " right_shift_operation (" ;
      columnMarker = result.currentColumn () ;
      result << "GALGASap_uint & inShiftOperand\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_dotAssignOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (91)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- .= operator\n"
        "public : void dotAssign_operation (GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " inOperand\n"
        "                                   COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryAndOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (97)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- & operator\n"
        "  public : GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " operator_and (" ;
      columnMarker = result.currentColumn () ;
      result << "GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " & inOperand\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryOrOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (103)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- | operator\n"
        "  public : GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " operator_or (" ;
      columnMarker = result.currentColumn () ;
      result << "GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " & inOperand\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryXorOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (109)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- ^ operator\n"
        "  public : GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " operator_xor (" ;
      columnMarker = result.currentColumn () ;
      result << "GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " & inOperand\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryNotOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (115)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- & operator\n"
        "  public : GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " operator_not (LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryTildeOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (120)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- ~ operator\n"
        "  public : GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " operator_tilde (LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryConcatOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (125)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- . (concat) operator\n"
        "  public : GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " operator_concat (" ;
      columnMarker = result.currentColumn () ;
      result << "GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " & inOperand\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryAddOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (131)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- + operator\n"
        "  public : GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " add_operation (" ;
      columnMarker = result.currentColumn () ;
      result << "GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " & inOperand,\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "C_Compiler * inCompiler\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binarySubOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (138)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- - operator\n"
        "  public : GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " substract_operation (" ;
      columnMarker = result.currentColumn () ;
      result << "GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " & inOperand,\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "C_Compiler * inCompiler\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryMulOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (145)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- * operator\n"
        "  public : GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " multiply_operation (" ;
      columnMarker = result.currentColumn () ;
      result << "GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " & inOperand,\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "C_Compiler * inCompiler\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryDivOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (152)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- / operator\n"
        "  public : GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " divide_operation (" ;
      columnMarker = result.currentColumn () ;
      result << "GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " & inOperand,\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "C_Compiler * inCompiler\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryModOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (159)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- mod operator\n"
        "  public : GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " modulo_operation (" ;
      columnMarker = result.currentColumn () ;
      result << "GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " & inOperand,\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "C_Compiler * inCompiler\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryMinusOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (166)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- unary - operator\n"
        "  public : GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " operator_unary_minus (" ;
      columnMarker = result.currentColumn () ;
      result << "C_Compiler * inCompiler\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (172)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- ++, -- operators\n"
        "  public : void increment_operation (" ;
      columnMarker = result.currentColumn () ;
      result << "C_Compiler * inCompiler\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n"
        "  public : void decrement_operation (" ;
      columnMarker = result.currentColumn () ;
      result << "C_Compiler * inCompiler\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_doNotGenererateObjectCompare (inLexique COMMA_SOURCE_FILE_AT_LINE (180)))).operator_isEqual (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- Comparison\n"
        "  public : static enumComparisonResult objectCompare (const GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " & inOperand1,\n"
        "                                                      const GALGASap_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " & inOperand2) ;\n" ;
    }else {
    }
    if ((var_cas_ADD_ASSIGN_ARGUMENT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- += operator\n"
        "  public : void addAssign_operation (" ;
      columnMarker = result.currentColumn () ;
      GGS_unifiedTypeMapProxyList::cEnumerator enumerator_8189 (var_cas_ADD_ASSIGN_ARGUMENT_LIST, true) ;
      const GGS_unifiedTypeMapProxyList::cElement * operand_8189 = NULL ;
      { GGS_uint var_cas_IDX (true, 0) ;
    while (((operand_8189 = enumerator_8189.nextObject ()))) {
      macroValidPointer (operand_8189) ;
      result << "GALGASap_" ;
      result << operand_8189->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (190)) ;
      result << " inOperand" ;
      result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (190)) ;
      if (enumerator_8189.hasNextObject ()) {
        result << ",\n" ;
        result.appendSpacesUntilColumn (columnMarker) ;
      }
      var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
    }
  }
  result << "\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "COMMA_LOCATION_ARGS) ;\n" ;
}else {
}
result << "//--------------------------------- Reader invocation declaration\n" ;
GGS_readerMap::cEnumerator enumerator_8441 (var_cas_READER_MAP, true) ;
const GGS_readerMap::cElement * operand_8441 = NULL ;
while (((operand_8441 = enumerator_8441.nextObject ()))) {
  macroValidPointer (operand_8441) ;
  if (((operand_8441->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (199)))).operator_or ((operand_8441->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasicFinal (inLexique COMMA_SOURCE_FILE_AT_LINE (199)))).boolValue ()) {
    result << "public : VIRTUAL_IN_DEBUG GALGASap_" ;
    result << operand_8441->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
    result << " readerCall_" ;
    result << operand_8441->mKey.ggs_string ().reader_identifierRepresentation () ;
    result << " (" ;
    columnMarker = result.currentColumn () ;
    GGS_unifiedTypeMapProxyList::cEnumerator enumerator_8722 (operand_8441->mInfo.mArgumentTypeList, true) ;
    const GGS_unifiedTypeMapProxyList::cElement * operand_8722 = NULL ;
    { GGS_uint var_cas_IDX (true, 0) ;
  while (((operand_8722 = enumerator_8722.nextObject ()))) {
    macroValidPointer (operand_8722) ;
    result << "GALGASap_" ;
    result << operand_8722->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (202)) ;
    result << " & constinOperand" ;
    result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (202)) ;
    if (enumerator_8722.hasNextObject ()) {
      result << ",\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
    }
    var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
  }
}
if ((operand_8441->mInfo.mArgumentTypeList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
  if (operand_8441->mInfo.mHasCompilerArgument.boolValue ()) {
    result << "C_Compiler * inCompiler\n" ;
    result.appendSpacesUntilColumn (columnMarker) ;
    result << "COMMA_LOCATION_ARGS" ;
  }else {
    result << "LOCATION_ARGS" ;
  }
}else if (operand_8441->mInfo.mHasCompilerArgument.boolValue ()) {
  result << ",\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "C_Compiler * inCompiler\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "COMMA_LOCATION_ARGS" ;
}else {
  result << "\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}else {
}
}
if (((((var_cas_SUPPORTED_OPERATORS).operator_and ((function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (220))).operator_or (function_dotAssignOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (220))))).operator_isNotEqual (GGS_uint (0U))).operator_or ((var_cas_MODIFIER_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)))).operator_or ((var_cas_ADD_ASSIGN_ARGUMENT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << "//--------------------------------- Modifier utility method\n"
  "  public : void insulate (LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
result << "//--------------------------------- Modifier invocation\n" ;
GGS_modifierMap::cEnumerator enumerator_9597 (var_cas_MODIFIER_MAP, true) ;
const GGS_modifierMap::cElement * operand_9597 = NULL ;
while (((operand_9597 = enumerator_9597.nextObject ()))) {
macroValidPointer (operand_9597) ;
if ((operand_9597->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (229))).boolValue ()) {
result << "public : VIRTUAL_IN_DEBUG void modifierCall_" ;
result << operand_9597->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_9767 (operand_9597->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_9767 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9767 = enumerator_9767.nextObject ()))) {
macroValidPointer (operand_9767) ;
if ((operand_9767->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (232))).boolValue ()) {
  result << "GALGASap_" ;
  result << operand_9767->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (233)) ;
  result << " inArgument" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (233)) ;
}else if ((operand_9767->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (234))).boolValue ()) {
  result << "GALGASap_" ;
  result << operand_9767->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (235)) ;
  result << " & ioArgument" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (235)) ;
}else if ((operand_9767->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (236))).boolValue ()) {
  result << "GALGASap_" ;
  result << operand_9767->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (237)) ;
  result << " & outArgument" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (237)) ;
}else {
  result << "GALGASap_" ;
  result << operand_9767->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (239)) ;
  result << " inArgument" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (239)) ;
}
if (enumerator_9767.hasNextObject ()) {
  result << ",\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_9597->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_9597->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
}else if (operand_9597->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Instance Method Invocation\n" ;
GGS_instanceMethodMap::cEnumerator enumerator_10993 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_10993 = NULL ;
while (((operand_10993 = enumerator_10993.nextObject ()))) {
macroValidPointer (operand_10993) ;
if (((operand_10993->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (260)))).operator_or ((operand_10993->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (260)))).boolValue ()) {
result << "public : VIRTUAL_IN_DEBUG void instanceMethodCall_" ;
result << operand_10993->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_11219 (operand_10993->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_11219 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_11219 = enumerator_11219.nextObject ()))) {
macroValidPointer (operand_11219) ;
if ((operand_11219->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (263))).boolValue ()) {
result << "GALGASap_" ;
result << operand_11219->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (264)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (264)) ;
}else if ((operand_11219->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (265))).boolValue ()) {
result << "GALGASap_" ;
result << operand_11219->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (266)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (266)) ;
}else if ((operand_11219->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (267))).boolValue ()) {
result << "GALGASap_" ;
result << operand_11219->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (268)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (268)) ;
}else {
result << "GALGASap_" ;
result << operand_11219->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (270)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (270)) ;
}
if (enumerator_11219.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_10993->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_10993->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
}else if (operand_10993->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}else {
}
}
result << "} ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'autoBoxingClassHeader' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_autoBoxingClassHeader (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_bool& var_cas_IS_CONCRETE,
                                const GGS_unifiedTypeMapProxy & var_cas_SUPER_TYPE_INDEX,
                                const GGS_typeKindEnum& var_cas_TYPE_KIND,
                                const GGS_typedAttributeList & var_cas_CURRENT_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_INHERITED_ATTRIBUTE_LIST,
                                const GGS_constructorMap & var_cas_CONSTRUCTOR_MAP,
                                const GGS_readerMap & var_cas_READER_MAP,
                                const GGS_modifierMap & var_cas_MODIFIER_MAP,
                                const GGS_instanceMethodMap & var_cas_INSTANCE_METHOD_MAP,
                                const GGS_classMethodMap & var_cas_CLASS_METHOD_MAP,
                                const GGS_enumerationDescriptorList & var_cas_ENUMERATION_DESCRIPTOR_LIST,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_unifiedTypeMapProxyList & var_cas_ADD_ASSIGN_ARGUMENT_LIST,
                                const GGS_nativeAttributeList & var_cas_NATIVE_ATTRIBUTE_LIST,
                                const GGS_lstringlist & var_cas_ENUM_CONSTANT_LIST,
                                const GGS_typedAttributeList & var_cas_PRIVATE_DATA_NUMBER_TYPED_LIST,
                                const GGS_withAccessorMap & var_cas_WITH_ACCESSOR_MAP) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_IS_CONCRETE.isBuilt ()
    && var_cas_SUPER_TYPE_INDEX.isBuilt ()
    && var_cas_TYPE_KIND.isBuilt ()
    && var_cas_CURRENT_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_INHERITED_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_CONSTRUCTOR_MAP.isBuilt ()
    && var_cas_READER_MAP.isBuilt ()
    && var_cas_MODIFIER_MAP.isBuilt ()
    && var_cas_INSTANCE_METHOD_MAP.isBuilt ()
    && var_cas_CLASS_METHOD_MAP.isBuilt ()
    && var_cas_ENUMERATION_DESCRIPTOR_LIST.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_ADD_ASSIGN_ARGUMENT_LIST.isBuilt ()
    && var_cas_NATIVE_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_ENUM_CONSTANT_LIST.isBuilt ()
    && var_cas_PRIVATE_DATA_NUMBER_TYPED_LIST.isBuilt ()
    && var_cas_WITH_ACCESSOR_MAP.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" auto boxing")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " {\n"
  "//--- Public attributes\n" ;
GGS_typedAttributeList::cEnumerator enumerator_491 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_491 = NULL ;
while (((operand_491 = enumerator_491.nextObject ()))) {
macroValidPointer (operand_491) ;
result << "  public : GALGASap_" ;
result << operand_491->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
result << " mAttribute_" ;
result << operand_491->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "//--- Default constructor\n"
  "  public : GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n"
  "//--- Copy constructor\n"
  "  public : GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) ;\n"
  "\n"
  "//--- Assignment operator\n"
  "  public : GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & operator = (const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) ;\n"
  "\n"
  "//--- Virtual destructor (only in debug mode)\n"
  "  #ifndef DO_NOT_GENERATE_CHECKINGS\n"
  "    public : virtual ~GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) {}\n"
  "  #endif\n"
  "\n"
  "//--- IsValid\n"
  "  public : bool isValid (void) const ;\n"
  "\n"
  "//--- Drop\n"
  "  public : void drop (void) ;\n"
  "\n"
  "//--- Construction from root object\n"
  "  public : GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGASap_object & inSourceObject) ;\n"
  "\n"
  "//--- Assignment from root object\n"
  "  public : GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & operator = (const GALGASap_object & inSourceObject) ;\n"
  "\n"
  "//--- Return object pointer\n"
  "  public : GALGAS_object * ptrNoVerif (void) ;\n"
  "\n"
  "//--------------------------------- C++ constructor (with native attributes)\n"
  "  public : GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1691 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1691 = NULL ;
while (((operand_1691 = enumerator_1691.nextObject ()))) {
macroValidPointer (operand_1691) ;
result << "GALGASap_" ;
result << operand_1691->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (47)) ;
result << " & in_" ;
result << operand_1691->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1691.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << ") ;\n" ;
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryShiftOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (52)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- << and >> shift operators\n"
  "public : GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " left_shift_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_uint & inShiftOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "public : GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " right_shift_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_uint & inShiftOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_dotAssignOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (60)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- .= operator\n"
  "public : void dotAssign_operation (GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " inOperand\n"
  "                                   COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryAndOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (66)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- & operator\n"
  "  public : GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_and (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryOrOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (72)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- | operator\n"
  "  public : GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_or (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryXorOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (78)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- ^ operator\n"
  "  public : GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_xor (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryNotOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (84)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- & operator\n"
  "  public : GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_not (LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryTildeOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (89)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- ~ operator\n"
  "  public : GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_tilde (LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryConcatOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (94)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- . (concat) operator\n"
  "  public : GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_concat (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryAddOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (100)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- + operator\n"
  "  public : GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " add_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binarySubOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (107)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- - operator\n"
  "  public : GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " substract_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryMulOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (114)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- * operator\n"
  "  public : GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " multiply_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryDivOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (121)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- / operator\n"
  "  public : GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " divide_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryModOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (128)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- mod operator\n"
  "  public : GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " modulo_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryMinusOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (135)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- unary - operator\n"
  "  public : GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_unary_minus (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (141)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- ++, -- operators\n"
  "  public : void increment_operation (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : void decrement_operation (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((var_cas_ADD_ASSIGN_ARGUMENT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- += operator\n"
  "  public : void addAssign_operation (" ;
columnMarker = result.currentColumn () ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_6177 (var_cas_ADD_ASSIGN_ARGUMENT_LIST, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_6177 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6177 = enumerator_6177.nextObject ()))) {
macroValidPointer (operand_6177) ;
result << "GALGASap_" ;
result << operand_6177->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (153)) ;
result << " inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (153)) ;
if (enumerator_6177.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_doNotGenererateObjectCompare (inLexique COMMA_SOURCE_FILE_AT_LINE (160)))).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Comparison\n"
  "  public : static enumComparisonResult objectCompare (const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand1,\n"
  "                                                      const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand2) ;\n" ;
}else {
}
result << "//--------------------------------- Reader invocation declaration\n" ;
GGS_readerMap::cEnumerator enumerator_6763 (var_cas_READER_MAP, true) ;
const GGS_readerMap::cElement * operand_6763 = NULL ;
while (((operand_6763 = enumerator_6763.nextObject ()))) {
macroValidPointer (operand_6763) ;
if (((operand_6763->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (168)))).operator_or ((operand_6763->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasicFinal (inLexique COMMA_SOURCE_FILE_AT_LINE (168)))).boolValue ()) {
result << "public : VIRTUAL_IN_DEBUG GALGASap_" ;
result << operand_6763->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (169)) ;
result << " readerCall_" ;
result << operand_6763->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_7044 (operand_6763->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_7044 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7044 = enumerator_7044.nextObject ()))) {
macroValidPointer (operand_7044) ;
result << "GALGASap_" ;
result << operand_7044->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (171)) ;
result << " & constinOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (171)) ;
if (enumerator_7044.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_6763->mInfo.mArgumentTypeList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_6763->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
}else if (operand_6763->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}else {
}
}
result << "//--------------------------------- Modifier invocation\n" ;
GGS_modifierMap::cEnumerator enumerator_7640 (var_cas_MODIFIER_MAP, true) ;
const GGS_modifierMap::cElement * operand_7640 = NULL ;
while (((operand_7640 = enumerator_7640.nextObject ()))) {
macroValidPointer (operand_7640) ;
if ((operand_7640->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (192))).boolValue ()) {
result << "public : VIRTUAL_IN_DEBUG void modifierCall_" ;
result << operand_7640->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_7810 (operand_7640->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_7810 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7810 = enumerator_7810.nextObject ()))) {
macroValidPointer (operand_7810) ;
if ((operand_7810->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (195))).boolValue ()) {
result << "GALGASap_" ;
result << operand_7810->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (196)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (196)) ;
}else if ((operand_7810->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (197))).boolValue ()) {
result << "GALGASap_" ;
result << operand_7810->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (198)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (198)) ;
}else if ((operand_7810->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (199))).boolValue ()) {
result << "GALGASap_" ;
result << operand_7810->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
}else {
result << "GALGASap_" ;
result << operand_7810->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (202)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (202)) ;
}
if (enumerator_7810.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_7640->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_7640->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
}else if (operand_7640->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Instance Method Invocation\n" ;
GGS_instanceMethodMap::cEnumerator enumerator_9036 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_9036 = NULL ;
while (((operand_9036 = enumerator_9036.nextObject ()))) {
macroValidPointer (operand_9036) ;
if (((operand_9036->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (223)))).operator_or ((operand_9036->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (223)))).boolValue ()) {
result << "public : VIRTUAL_IN_DEBUG void instanceMethodCall_" ;
result << operand_9036->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_9262 (operand_9036->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_9262 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9262 = enumerator_9262.nextObject ()))) {
macroValidPointer (operand_9262) ;
if ((operand_9262->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (226))).boolValue ()) {
result << "GALGASap_" ;
result << operand_9262->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (227)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (227)) ;
}else if ((operand_9262->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (228))).boolValue ()) {
result << "GALGASap_" ;
result << operand_9262->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (229)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (229)) ;
}else if ((operand_9262->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (230))).boolValue ()) {
result << "GALGASap_" ;
result << operand_9262->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (231)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (231)) ;
}else {
result << "GALGASap_" ;
result << operand_9262->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (233)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (233)) ;
}
if (enumerator_9262.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_9036->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_9036->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
}else if (operand_9036->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}else {
}
}
result << "} ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'autoPointerClassImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_autoPointerClassImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_SUPER_TYPE_IDENTIFIER,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_readerMap & var_cas_READER_MAP,
                                const GGS_nativeAttributeList & var_cas_NATIVE_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_READER_MAP.isBuilt ()
    && var_cas_NATIVE_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" auto ptr type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) :\n"
  "GALGASap_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " (inSource) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGASap_object & inSource) :\n"
  "GALGASap_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " (inSource) {\n"
  "  macroNullOrValidObject (mPtr, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator = (const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) {\n"
  "  macroAssignObject (mPtr, inSource.mPtr) ;\n"
  "  return * this ;\n"
  "}\n"
  "\n" ;
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateCppConstructorWithNativeAttributeListInAutoPointerClass (inLexique COMMA_SOURCE_FILE_AT_LINE (25)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_nativeAttributeList::cEnumerator enumerator_1394 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_1394 = NULL ;
while (((operand_1394 = enumerator_1394.nextObject ()))) {
macroValidPointer (operand_1394) ;
result << "const " ;
result << operand_1394->mCppClassName ;
if (operand_1394->mIsPointer.boolValue ()) {
result << " *" ;
}else {
}
if (operand_1394->mUseReferenceForConstructor.boolValue ()) {
result << " &" ;
}else {
}
result << " inOperand_" ;
result << operand_1394->mAttributeName ;
if (enumerator_1394.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_NATIVE_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "LOCATION_ARGS) :\n" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n" ;
}
result << "GALGASap_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " (GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
GGS_nativeAttributeList::cEnumerator enumerator_1807 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_1807 = NULL ;
while (((operand_1807 = enumerator_1807.nextObject ()))) {
macroValidPointer (operand_1807) ;
result << "inOperand_" ;
result << operand_1807->mAttributeName ;
if (enumerator_1807.hasNextObject ()) {
result << ", " ;
}
}
if ((var_cas_NATIVE_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "THERE" ;
}else {
result << " COMMA_THERE" ;
}
result << ")) {\n"
  "}\n"
  "\n" ;
}else {
}
GGS_readerMap::cEnumerator enumerator_2010 (var_cas_READER_MAP, true) ;
const GGS_readerMap::cElement * operand_2010 = NULL ;
while (((operand_2010 = enumerator_2010.nextObject ()))) {
macroValidPointer (operand_2010) ;
if ((operand_2010->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (52))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << operand_2010->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (54)) ;
result << " GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::readerCall_" ;
result << operand_2010->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_2331 (operand_2010->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_2331 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2331 = enumerator_2331.nextObject ()))) {
macroValidPointer (operand_2331) ;
result << "GALGASap_" ;
result << operand_2331->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (56)) ;
result << " & inOperand_" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (56)) ;
if (enumerator_2331.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_2010->mInfo.mArgumentTypeList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_2010->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
}else if (operand_2010->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "  GALGASap_" ;
result << operand_2010->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (71)) ;
result << " result ;\n"
  "  if (isValid ()) {\n"
  "    result = ptr (HERE)->reader_" ;
result << operand_2010->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_3028 (operand_2010->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_3028 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3028 = enumerator_3028.nextObject ()))) {
macroValidPointer (operand_3028) ;
result << "inOperand_" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (75)) ;
if (enumerator_3028.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_2010->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_2010->mInfo.mHasCompilerArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_2010->mInfo.mHasCompilerArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
result << ") ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}else {
}
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::ptr (LOCATION_ARGS) {\n"
  "    macroValidObjectThere (mPtr, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    return (GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) mPtr ;\n"
  "  }\n"
  "#endif\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
  "  const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::ptr (LOCATION_ARGS) const {\n"
  "    macroValidObjectThere (mPtr, const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    return (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) mPtr ;\n"
  "  }\n"
  "#endif\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inSourcePtr) :\n"
  "GALGASap_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " (inSourcePtr) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator = (GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inSourcePtr) {\n"
  "  macroAssignObject (mPtr, inSourcePtr) ;\n"
  "  return *this ;\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'autoBoxingClassImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_autoBoxingClassImplementation (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_typedAttributeList & var_cas_CURRENT_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_CURRENT_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" auto boxing")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) :\n" ;
GGS_typedAttributeList::cEnumerator enumerator_535 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_535 = NULL ;
while (((operand_535 = enumerator_535.nextObject ()))) {
macroValidPointer (operand_535) ;
result << "mAttribute_" ;
result << operand_535->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (inSource.mAttribute_" ;
result << operand_535->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
if (enumerator_535.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGASap_object & inSource) :\n" ;
GGS_typedAttributeList::cEnumerator enumerator_909 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_909 = NULL ;
while (((operand_909 = enumerator_909.nextObject ()))) {
macroValidPointer (operand_909) ;
result << "mAttribute_" ;
result << operand_909->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ()" ;
if (enumerator_909.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << " {\n"
  "  const GALGAS_object * object = inSource.ptrNoVerif () ;\n"
  "  if (NULL != object) {\n"
  "    macroValidObject (object, const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) object ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1272 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1272 = NULL ;
while (((operand_1272 = enumerator_1272.nextObject ()))) {
macroValidPointer (operand_1272) ;
result << "    mAttribute_" ;
result << operand_1272->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " = p->mAttribute_" ;
result << operand_1272->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "  }\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'genericTypeHeader' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_genericTypeHeader (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" generic type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'genericTypeImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_genericTypeImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_unifiedTypeMapProxy & var_cas_SUPER_TYPE_INDEX) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_INDEX.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" generic type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor\n"
  "kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "\"" ;
result << var_cas_TYPE_NAME ;
result << "\",\n"
  "                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
if (var_cas_SUPER_TYPE_INDEX.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (9)).boolValue ()) {
result << "NULL" ;
}else {
result << "& kTypeDescriptor_GALGAS_" ;
result << var_cas_SUPER_TYPE_INDEX.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
}
result << ") ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::typeDescriptor (void) const {\n"
  "  return & kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'unifiedTypeHeader' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_unifiedTypeHeader (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_bool& var_cas_IS_CONCRETE,
                                const GGS_unifiedTypeMapProxy & var_cas_SUPER_TYPE_INDEX,
                                const GGS_typeKindEnum& var_cas_TYPE_KIND,
                                const GGS_typedAttributeList & var_cas_CURRENT_TYPE_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_INHERITED_ATTRIBUTE_LIST,
                                const GGS_constructorMap & var_cas_CONSTRUCTOR_MAP,
                                const GGS_readerMap & var_cas_READER_MAP,
                                const GGS_modifierMap & var_cas_MODIFIER_MAP,
                                const GGS_instanceMethodMap & var_cas_INSTANCE_METHOD_MAP,
                                const GGS_classMethodMap & var_cas_CLASS_METHOD_MAP,
                                const GGS_enumerationDescriptorList & var_cas_ENUMERATION_DESCRIPTOR_LIST,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_unifiedTypeMapProxyList & var_cas_ADD_ASSIGN_ARGUMENT_LIST,
                                const GGS_nativeAttributeList & var_cas_NATIVE_ATTRIBUTE_LIST,
                                const GGS_lstringlist & var_cas_ENUM_CONSTANT_LIST,
                                const GGS_typedAttributeList & var_cas_PRIVATE_DATA_NUMBER_TYPED_LIST,
                                const GGS_withAccessorMap & var_cas_WITH_ACCESSOR_MAP) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_IS_CONCRETE.isBuilt ()
    && var_cas_SUPER_TYPE_INDEX.isBuilt ()
    && var_cas_TYPE_KIND.isBuilt ()
    && var_cas_CURRENT_TYPE_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_INHERITED_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_CONSTRUCTOR_MAP.isBuilt ()
    && var_cas_READER_MAP.isBuilt ()
    && var_cas_MODIFIER_MAP.isBuilt ()
    && var_cas_INSTANCE_METHOD_MAP.isBuilt ()
    && var_cas_CLASS_METHOD_MAP.isBuilt ()
    && var_cas_ENUMERATION_DESCRIPTOR_LIST.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_ADD_ASSIGN_ARGUMENT_LIST.isBuilt ()
    && var_cas_NATIVE_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_ENUM_CONSTANT_LIST.isBuilt ()
    && var_cas_PRIVATE_DATA_NUMBER_TYPED_LIST.isBuilt ()
    && var_cas_WITH_ACCESSOR_MAP.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_TYPE_KIND.reader_kind (inLexique COMMA_SOURCE_FILE_AT_LINE (3)))).operator_concat (GGS_string (" type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public GALGAS_" ;
result << var_cas_SUPER_TYPE_INDEX.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
result << " {\n" ;
if ((var_cas_ENUM_CONSTANT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Enumeration type declaration\n"
  "  public : typedef enum {" ;
GGS_lstringlist::cEnumerator enumerator_842 (var_cas_ENUM_CONSTANT_LIST, true) ;
const GGS_lstringlist::cElement * operand_842 = NULL ;
while (((operand_842 = enumerator_842.nextObject ()))) {
macroValidPointer (operand_842) ;
result << "kEnum_" ;
result << operand_842->mValue.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_842.hasNextObject ()) {
result << ", " ;
}
}
result << "} enumeration ;\n"
  "\n"
  "//--------------------------------- Private attribute\n"
  "  private : enumeration mEnumValue ;\n"
  "  public : inline enumeration enumValue (void) const { return mEnumValue ; }\n"
  "\n"
  "//--------------------------------- C++ constructor (for enumeration type)\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const enumeration inValue COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateConstructorWithSelfObject (inLexique COMMA_SOURCE_FILE_AT_LINE (32)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "\n"
  "//--------------------------------- C++ constructor (for inheritance for predefined type)\n"
  "  protected : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inObject COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateCppConstructorWithNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (39)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "\n"
  "//--------------------------------- C++ constructor (with native attributes)\n"
  "  protected : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_nativeAttributeList::cEnumerator enumerator_1811 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_1811 = NULL ;
while (((operand_1811 = enumerator_1811.nextObject ()))) {
macroValidPointer (operand_1811) ;
result << "const " ;
result << operand_1811->mCppClassName ;
if (operand_1811->mIsPointer.boolValue ()) {
result << " *" ;
}else {
}
if (operand_1811->mUseReferenceForConstructor.boolValue ()) {
result << " &" ;
}else {
}
result << " inOperand_" ;
result << operand_1811->mAttributeName ;
if (enumerator_1811.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_NATIVE_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "LOCATION_ARGS) ;\n"
  "\n" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateCppConstructorWithCurrentAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (54)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "\n"
  "//--------------------------------- C++ constructor (with current attributes)\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_2373 (var_cas_CURRENT_TYPE_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2373 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2373 = enumerator_2373.nextObject ()))) {
macroValidPointer (operand_2373) ;
result << "GALGASap_" ;
result << operand_2373->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (58)) ;
result << " & inAttribute_" ;
result << operand_2373->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_2373.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((var_cas_CURRENT_TYPE_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "LOCATION_ARGS) ;\n"
  "\n" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateCppConstructorWithAllAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (68)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "\n"
  "//--------------------------------- C++ constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_2905 (var_cas_INHERITED_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2905 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2905 = enumerator_2905.nextObject ()))) {
macroValidPointer (operand_2905) ;
result << "GALGASap_" ;
result << operand_2905->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (72)) ;
result << " & inAttribute_" ;
result << operand_2905->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_2905.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((var_cas_INHERITED_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "LOCATION_ARGS) ;\n"
  "\n" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (82)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Native constructor\n"
  "  public : static GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_nativeAttributeList::cEnumerator enumerator_3447 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_3447 = NULL ;
while (((operand_3447 = enumerator_3447.nextObject ()))) {
macroValidPointer (operand_3447) ;
result << "const " ;
result << operand_3447->mCppClassName ;
if (operand_3447->mIsPointer.boolValue ()) {
result << " *" ;
}else {
}
if (operand_3447->mUseReferenceForConstructor.boolValue ()) {
result << " &" ;
}else {
}
result << " inOperand_" ;
result << operand_3447->mAttributeName ;
if (enumerator_3447.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateVirtualDestructor (inLexique COMMA_SOURCE_FILE_AT_LINE (92)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Virtual destructor\n"
  "  protected : virtual ~ GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n" ;
}else {
}
if ((var_cas_CONSTRUCTOR_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- GALGAS constructors\n" ;
GGS_constructorMap::cEnumerator enumerator_3980 (var_cas_CONSTRUCTOR_MAP, true) ;
const GGS_constructorMap::cElement * operand_3980 = NULL ;
while (((operand_3980 = enumerator_3980.nextObject ()))) {
macroValidPointer (operand_3980) ;
result << "  public : static GALGASap_" ;
result << operand_3980->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (100)) ;
result << " constructor_" ;
result << operand_3980->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_4147 (operand_3980->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_4147 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4147 = enumerator_4147.nextObject ()))) {
macroValidPointer (operand_4147) ;
result << "GALGASap_" ;
result << operand_4147->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (102)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (102)) ;
if (enumerator_4147.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_3980->mInfo.mHasCompilerArgument).operator_and ((operand_3980->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else if (operand_3980->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else if ((operand_3980->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
result << "LOCATION_ARGS) ;\n"
  "\n" ;
}
}
}else {
}
result << "//--------------------------------- No copy\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " &) ;\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & operator = (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " &) ;\n"
  "\n" ;
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (123)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Implementation of reader 'description'\n"
  "  public : virtual void description (C_String & ioString,\n"
  "                                     const PMSInt32 inIndentation) ;\n" ;
}else {
}
result << "\n"
  "//--------------------------------- Modifiers\n" ;
GGS_modifierMap::cEnumerator enumerator_5281 (var_cas_MODIFIER_MAP, true) ;
const GGS_modifierMap::cElement * operand_5281 = NULL ;
while (((operand_5281 = enumerator_5281.nextObject ()))) {
macroValidPointer (operand_5281) ;
if ((operand_5281->mInfo.mQualifier).operator_isNotEqual (GGS_methodQualifier::constructor_isInherited (inLexique COMMA_SOURCE_FILE_AT_LINE (133))).boolValue ()) {
result << "  protected : void modifier_" ;
result << operand_5281->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_5439 (operand_5281->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_5439 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5439 = enumerator_5439.nextObject ()))) {
macroValidPointer (operand_5439) ;
if ((operand_5439->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (136))).boolValue ()) {
result << "GALGASap_" ;
result << operand_5439->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (137)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (137)) ;
}else if ((operand_5439->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (138))).boolValue ()) {
result << "GALGASap_" ;
result << operand_5439->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (139)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (139)) ;
}else if ((operand_5439->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (140))).boolValue ()) {
result << "GALGASap_" ;
result << operand_5439->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (141)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (141)) ;
}else {
result << "GALGASap_" ;
result << operand_5439->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (143)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (143)) ;
}
if (enumerator_5439.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_5281->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_5281->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_5281->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") ;\n"
  "\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Instance Methods\n" ;
GGS_instanceMethodMap::cEnumerator enumerator_6706 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_6706 = NULL ;
while (((operand_6706 = enumerator_6706.nextObject ()))) {
macroValidPointer (operand_6706) ;
if ((operand_6706->mInfo.mQualifier).operator_isNotEqual (GGS_methodQualifier::constructor_isInherited (inLexique COMMA_SOURCE_FILE_AT_LINE (169))).boolValue ()) {
result << "  protected : virtual void method_" ;
result << operand_6706->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_6870 (operand_6706->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_6870 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6870 = enumerator_6870.nextObject ()))) {
macroValidPointer (operand_6870) ;
if ((operand_6870->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (172))).boolValue ()) {
result << "GALGASap_" ;
result << operand_6870->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (173)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (173)) ;
}else if ((operand_6870->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (174))).boolValue ()) {
result << "GALGASap_" ;
result << operand_6870->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (175)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (175)) ;
}else if ((operand_6870->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (176))).boolValue ()) {
result << "GALGASap_" ;
result << operand_6870->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (177)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (177)) ;
}else {
result << "GALGASap_" ;
result << operand_6870->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (179)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (179)) ;
}
if (enumerator_6870.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_6706->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_6706->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_6706->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") " ;
if (((operand_6706->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (199)))).operator_or ((operand_6706->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isOverridingAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (199)))).boolValue ()) {
result << "= 0 " ;
}else {
}
result << ";\n"
  "\n" ;
}else {
}
}
result << "//--------------------------------- Class Methods\n" ;
GGS_classMethodMap::cEnumerator enumerator_8277 (var_cas_CLASS_METHOD_MAP, true) ;
const GGS_classMethodMap::cElement * operand_8277 = NULL ;
while (((operand_8277 = enumerator_8277.nextObject ()))) {
macroValidPointer (operand_8277) ;
result << "  public : static void class_method_" ;
result << operand_8277->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_8384 (operand_8277->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_8384 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8384 = enumerator_8384.nextObject ()))) {
macroValidPointer (operand_8384) ;
if ((operand_8384->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (210))).boolValue ()) {
result << "GALGASap_" ;
result << operand_8384->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (211)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (211)) ;
}else if ((operand_8384->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (212))).boolValue ()) {
result << "GALGASap_" ;
result << operand_8384->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (213)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (213)) ;
}else if ((operand_8384->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (214))).boolValue ()) {
result << "GALGASap_" ;
result << operand_8384->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (215)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (215)) ;
}else {
result << "GALGASap_" ;
result << operand_8384->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (217)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (217)) ;
}
if (enumerator_8384.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_8277->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_8277->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_8277->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") ;\n"
  "\n" ;
}
result << "\n"
  "//--------------------------------- Readers\n" ;
GGS_readerMap::cEnumerator enumerator_9570 (var_cas_READER_MAP, true) ;
const GGS_readerMap::cElement * operand_9570 = NULL ;
while (((operand_9570 = enumerator_9570.nextObject ()))) {
macroValidPointer (operand_9570) ;
if (((operand_9570->mInfo.mQualifier).operator_isNotEqual (GGS_methodQualifier::constructor_isInherited (inLexique COMMA_SOURCE_FILE_AT_LINE (242)))).operator_and ((operand_9570->mInfo.mQualifier).operator_isNotEqual (GGS_methodQualifier::constructor_isBasicFinal (inLexique COMMA_SOURCE_FILE_AT_LINE (242)))).boolValue ()) {
result << "  protected : virtual GALGASap_" ;
result << operand_9570->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (243)) ;
result << " reader_" ;
result << operand_9570->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_9847 (operand_9570->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_9847 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9847 = enumerator_9847.nextObject ()))) {
macroValidPointer (operand_9847) ;
result << "GALGASap_" ;
result << operand_9847->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (245)) ;
result << " & constinOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (245)) ;
if (enumerator_9847.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_9570->mInfo.mArgumentTypeList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_9570->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
}else {
if (operand_9570->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") " ;
if ((operand_9570->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (262))).boolValue ()) {
result << " = 0" ;
}else {
}
result << " ;\n"
  "\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Introspection\n"
  "  public : virtual const C_galgas_type_descriptor * typeDescriptor (void) const ;\n"
  "\n"
  "//--------------------------------- Private data member(s)\n" ;
GGS_nativeAttributeList::cEnumerator enumerator_10703 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_10703 = NULL ;
while (((operand_10703 = enumerator_10703.nextObject ()))) {
macroValidPointer (operand_10703) ;
result << "  private : " ;
if (operand_10703->mIsConst.boolValue ()) {
result << "const " ;
}else {
}
result << operand_10703->mCppClassName ;
result << " " ;
if (operand_10703->mIsPointer.boolValue ()) {
result << "* " ;
}else {
}
result << operand_10703->mAttributeName ;
result << " ;\n" ;
if ((operand_10703->mGetterName.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if ((operand_10703->mIsConst).operator_not ().boolValue ()) {
result << "  public : inline " ;
result << operand_10703->mCppClassName ;
result << " " ;
if (operand_10703->mIsPointer.boolValue ()) {
result << " * " ;
}else {
}
result << operand_10703->mGetterName ;
result << " (void) { return " ;
result << operand_10703->mAttributeName ;
result << " ; }\n" ;
}else {
}
result << "  public : inline const " ;
result << operand_10703->mCppClassName ;
result << " " ;
if (operand_10703->mIsPointer.boolValue ()) {
result << " * " ;
}else {
}
result << operand_10703->mGetterName ;
result << " (void) const { return " ;
result << operand_10703->mAttributeName ;
result << " ; }\n" ;
}else {
}
}
GGS_typedAttributeList::cEnumerator enumerator_11232 (var_cas_PRIVATE_DATA_NUMBER_TYPED_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_11232 = NULL ;
while (((operand_11232 = enumerator_11232.nextObject ()))) {
macroValidPointer (operand_11232) ;
result << "  public : GALGASap_" ;
result << operand_11232->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (284)) ;
result << " mAttribute_" ;
result << operand_11232->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateEnumerationHelperMethods (inLexique COMMA_SOURCE_FILE_AT_LINE (287)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Enumeration helper methods\n"
  "  protected : virtual void populateEnumerationArray (capCollectionElementArray & inEnumerationArray,\n"
  "                                                     const bool inAscending) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateSortedListComparisonMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (294)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Abstract method for comparing two sorted list elements\n"
  "  protected : virtual enumComparisonResult compareSortedListElements (const capCollectionElement & inLeftAttributeList,\n"
  "                                                                      const capCollectionElement & inRightAttributeList) const ;\n"
  "\n" ;
}else {
}
if ((var_cas_WITH_ACCESSOR_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- 'with' accessors\n" ;
GGS_withAccessorMap::cEnumerator enumerator_12264 (var_cas_WITH_ACCESSOR_MAP, true) ;
const GGS_withAccessorMap::cElement * operand_12264 = NULL ;
while (((operand_12264 = enumerator_12264.nextObject ()))) {
macroValidPointer (operand_12264) ;
result << "  friend capCollectionElement * readWriteAccessForWithInstruction_" ;
result << operand_12264->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & ioMap,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << operand_12264->mInfo.mArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (306)) ;
result << " & inKey\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
}else {
}
if ((var_cas_ENUMERATION_DESCRIPTOR_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Enumerator declaration\n"
  "  public : class cEnumerator : public AC_GALGAS_Enumerator {\n"
  "    public : cEnumerator (GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inEnumeratedObject,\n"
  "                          const bool inAscending) ;\n"
  "\n"
  "  //--- Update attribute proxies\n"
  "    public : void updateAttributeProxies (void) ;\n"
  "  \n"
  "  //--- Current attribute proxies\n" ;
GGS_enumerationDescriptorList::cEnumerator enumerator_13043 (var_cas_ENUMERATION_DESCRIPTOR_LIST, true) ;
const GGS_enumerationDescriptorList::cElement * operand_13043 = NULL ;
while (((operand_13043 = enumerator_13043.nextObject ()))) {
macroValidPointer (operand_13043) ;
result << "    public : GALGASap_" ;
result << operand_13043->mEnumeratedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (322)) ;
result << " attribute_" ;
result << operand_13043->mEnumerationName.reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "  } ;\n" ;
}else {
}
result << "  \n"
  "\n"
  "//--- Friend class\n"
  "  friend class GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "} ;\n"
  "\n" ;
if ((var_cas_WITH_ACCESSOR_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- 'with' accessors\n" ;
GGS_withAccessorMap::cEnumerator enumerator_13410 (var_cas_WITH_ACCESSOR_MAP, true) ;
const GGS_withAccessorMap::cElement * operand_13410 = NULL ;
while (((operand_13410 = enumerator_13410.nextObject ()))) {
macroValidPointer (operand_13410) ;
result << "capCollectionElement * readWriteAccessForWithInstruction_" ;
result << operand_13410->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & ioMap,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << operand_13410->mInfo.mArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (339)) ;
result << " & inKey\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
}else {
}
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'unifiedTypeImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_unifiedTypeImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_bool& var_cas_IS_CONCRETE,
                                const GGS_unifiedTypeMapProxy & var_cas_SUPER_TYPE_INDEX,
                                const GGS_typeKindEnum& var_cas_TYPE_KIND,
                                const GGS_typedAttributeList & var_cas_CURRENT_TYPE_ATTRIBUTE_LIST,
                                const GGS_constructorMap & var_cas_CONSTRUCTOR_MAP,
                                const GGS_readerMap & var_cas_READER_MAP,
                                const GGS_modifierMap & var_cas_MODIFIER_MAP,
                                const GGS_instanceMethodMap & var_cas_INSTANCE_METHOD_MAP,
                                const GGS_classMethodMap & var_cas_CLASS_METHOD_MAP,
                                const GGS_enumerationDescriptorList & var_cas_ENUMERATION_DESCRIPTOR_LIST,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_unifiedTypeMapProxyList & var_cas_ADD_ASSIGN_ARGUMENT_LIST,
                                const GGS_nativeAttributeList & var_cas_NATIVE_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_IS_CONCRETE.isBuilt ()
    && var_cas_SUPER_TYPE_INDEX.isBuilt ()
    && var_cas_TYPE_KIND.isBuilt ()
    && var_cas_CURRENT_TYPE_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_CONSTRUCTOR_MAP.isBuilt ()
    && var_cas_READER_MAP.isBuilt ()
    && var_cas_MODIFIER_MAP.isBuilt ()
    && var_cas_INSTANCE_METHOD_MAP.isBuilt ()
    && var_cas_CLASS_METHOD_MAP.isBuilt ()
    && var_cas_ENUMERATION_DESCRIPTOR_LIST.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_ADD_ASSIGN_ARGUMENT_LIST.isBuilt ()
    && var_cas_NATIVE_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_TYPE_KIND.reader_kind (inLexique COMMA_SOURCE_FILE_AT_LINE (3)))).operator_concat (GGS_string (" type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor\n"
  "kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "\"" ;
result << var_cas_TYPE_NAME ;
result << "\",\n"
  "                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "& kTypeDescriptor_GALGAS_" ;
result << var_cas_SUPER_TYPE_INDEX.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
result << ") ;\n"
  "\n" ;
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateConstructorWithSelfObject (inLexique COMMA_SOURCE_FILE_AT_LINE (11)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inObject COMMA_LOCATION_ARGS) :\n"
  "GALGAS_" ;
result << var_cas_SUPER_TYPE_INDEX.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (15)) ;
result << " (THERE)" ;
GGS_nativeAttributeList::cEnumerator enumerator_982 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_982 = NULL ;
while (((operand_982 = enumerator_982.nextObject ()))) {
macroValidPointer (operand_982) ;
result << ",\n" ;
result << operand_982->mAttributeName ;
result << " (" ;
result << operand_982->mDefaultValue ;
result << ")" ;
}
result << " {\n"
  "  if (inObject.isValid ()) {\n" ;
GGS_nativeAttributeList::cEnumerator enumerator_1112 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_1112 = NULL ;
while (((operand_1112 = enumerator_1112.nextObject ()))) {
macroValidPointer (operand_1112) ;
result << "    " ;
result << operand_1112->mAttributeName ;
result << " = inObject.ptr (HERE)->" ;
result << operand_1112->mGetterName ;
result << " () ;\n" ;
}
result << "  }\n"
  "}\n"
  "\n" ;
}else {
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::typeDescriptor (void) const {\n"
  "  return & kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "}\n" ;
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (35)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_nativeAttributeList::cEnumerator enumerator_1706 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_1706 = NULL ;
while (((operand_1706 = enumerator_1706.nextObject ()))) {
macroValidPointer (operand_1706) ;
result << "const " ;
result << operand_1706->mCppClassName ;
if (operand_1706->mIsPointer.boolValue ()) {
result << " *" ;
}else {
}
if (operand_1706->mUseReferenceForConstructor.boolValue ()) {
result << " &" ;
}else {
}
result << " inOperand_" ;
result << operand_1706->mAttributeName ;
if (enumerator_1706.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_nativeAttributeList::cEnumerator enumerator_2043 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_2043 = NULL ;
while (((operand_2043 = enumerator_2043.nextObject ()))) {
macroValidPointer (operand_2043) ;
result << "inOperand_" ;
result << operand_2043->mAttributeName ;
if (enumerator_2043.hasNextObject ()) {
result << ", " ;
}
}
if ((var_cas_NATIVE_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "THERE" ;
}else {
result << " COMMA_THERE" ;
}
result << ")) ;\n"
  "  return GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (result) ;\n"
  "}\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_autoBoxing (inLexique COMMA_SOURCE_FILE_AT_LINE (62)))).operator_isEqual (GGS_uint (0U)).boolValue ()) {
GGS_modifierMap::cEnumerator enumerator_2341 (var_cas_MODIFIER_MAP, true) ;
const GGS_modifierMap::cElement * operand_2341 = NULL ;
while (((operand_2341 = enumerator_2341.nextObject ()))) {
macroValidPointer (operand_2341) ;
if ((operand_2341->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (64))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifierCall_" ;
result << operand_2341->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_2611 (operand_2341->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_2611 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2611 = enumerator_2611.nextObject ()))) {
macroValidPointer (operand_2611) ;
if ((operand_2611->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (68))).boolValue ()) {
result << "GALGASap_" ;
result << operand_2611->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (69)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (69)) ;
}else if ((operand_2611->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (70))).boolValue ()) {
result << "GALGASap_" ;
result << operand_2611->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (71)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (71)) ;
}else if ((operand_2611->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (72))).boolValue ()) {
result << "GALGASap_" ;
result << operand_2611->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (73)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (73)) ;
}else {
result << "GALGASap_" ;
result << operand_2611->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (75)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (75)) ;
}
if (enumerator_2611.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_2341->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_2341->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
}else if (operand_2341->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "//--- Release 'output' arguments\n" ;
GGS_formalParameterSignature::cEnumerator enumerator_3850 (operand_2341->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_3850 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3850 = enumerator_3850.nextObject ()))) {
macroValidPointer (operand_3850) ;
if ((operand_3850->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (94))).boolValue ()) {
result << "  outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (95)) ;
result << ".drop () ;\n" ;
}else {
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "//---\n"
  "  if (isValid ()) {\n"
  "    insulate (THERE) ;\n"
  "    ptr (HERE)->modifier_" ;
result << operand_2341->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_formalParameterSignature::cEnumerator enumerator_4217 (operand_2341->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_4217 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4217 = enumerator_4217.nextObject ()))) {
macroValidPointer (operand_4217) ;
if ((operand_4217->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (103))).boolValue ()) {
result << "constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (104)) ;
}else if ((operand_4217->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (105))).boolValue ()) {
result << "ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (106)) ;
}else if ((operand_4217->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (107))).boolValue ()) {
result << "outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (108)) ;
}else {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (110)) ;
}
if (enumerator_4217.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_2341->mInfo.mParameterList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_2341->mInfo.mHasCompilerArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_2341->mInfo.mHasCompilerArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
result << ") ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}else {
}
}
}else {
}
GGS_instanceMethodMap::cEnumerator enumerator_5164 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_5164 = NULL ;
while (((operand_5164 = enumerator_5164.nextObject ()))) {
macroValidPointer (operand_5164) ;
if (((operand_5164->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (135)))).operator_or ((operand_5164->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (135)))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::instanceMethodCall_" ;
result << operand_5164->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_5482 (operand_5164->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_5482 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5482 = enumerator_5482.nextObject ()))) {
macroValidPointer (operand_5482) ;
if ((operand_5482->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (139))).boolValue ()) {
result << "GALGASap_" ;
result << operand_5482->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (140)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (140)) ;
}else if ((operand_5482->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (141))).boolValue ()) {
result << "GALGASap_" ;
result << operand_5482->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (142)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (142)) ;
}else if ((operand_5482->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (143))).boolValue ()) {
result << "GALGASap_" ;
result << operand_5482->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (144)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (144)) ;
}else {
result << "GALGASap_" ;
result << operand_5482->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (146)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (146)) ;
}
if (enumerator_5482.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_5164->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_5164->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
}else if (operand_5164->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "//--- Release 'output' arguments\n" ;
GGS_formalParameterSignature::cEnumerator enumerator_6662 (operand_5164->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_6662 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6662 = enumerator_6662.nextObject ()))) {
macroValidPointer (operand_6662) ;
if ((operand_6662->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (164))).boolValue ()) {
result << "  outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (165)) ;
result << ".drop () ;\n" ;
}else {
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "//---\n"
  "  if (isValid ()) {\n"
  "    ptr (HERE)->method_" ;
result << operand_5164->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_formalParameterSignature::cEnumerator enumerator_6978 (operand_5164->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_6978 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6978 = enumerator_6978.nextObject ()))) {
macroValidPointer (operand_6978) ;
if ((operand_6978->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (172))).boolValue ()) {
result << "constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (173)) ;
}else if ((operand_6978->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (174))).boolValue ()) {
result << "ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (175)) ;
}else if ((operand_6978->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (176))).boolValue ()) {
result << "outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (177)) ;
}else {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (179)) ;
}
if (enumerator_6978.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_5164->mInfo.mParameterList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_5164->mInfo.mHasCompilerArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_5164->mInfo.mHasCompilerArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
result << ") ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}else {
}
}
if ((var_cas_ENUMERATION_DESCRIPTOR_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "//" ;
result << ((((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_TYPE_KIND.reader_kind (inLexique COMMA_SOURCE_FILE_AT_LINE (204)))).operator_concat (GGS_string (" enumeration")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator::cEnumerator (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inEnumeratedObject,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const bool inAscending) :\n"
  "AC_GALGAS_Enumerator (inEnumeratedObject.ptrNoVerif (), inAscending)" ;
GGS_enumerationDescriptorList::cEnumerator enumerator_8464 (var_cas_ENUMERATION_DESCRIPTOR_LIST, true) ;
const GGS_enumerationDescriptorList::cElement * operand_8464 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8464 = enumerator_8464.nextObject ()))) {
macroValidPointer (operand_8464) ;
result << ",\n"
  "attribute_" ;
result << operand_8464->mEnumerationName.reader_identifierRepresentation () ;
result << " ()" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator::updateAttributeProxies (void) {\n"
  "  capCollectionElement object = currentObject () ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) object.ptrNoVerif () ;\n"
  "  macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_enumerationDescriptorList::cEnumerator enumerator_9066 (var_cas_ENUMERATION_DESCRIPTOR_LIST, true) ;
const GGS_enumerationDescriptorList::cElement * operand_9066 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9066 = enumerator_9066.nextObject ()))) {
macroValidPointer (operand_9066) ;
result << "  attribute_" ;
result << operand_9066->mEnumerationName.reader_identifierRepresentation () ;
result << " = p->mAttribute_" ;
result << operand_9066->mEnumerationName.reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n" ;
}else {
}
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'predefinedTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_predefinedTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_modifierMap & var_cas_MODIFIER_MAP,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_unifiedTypeMapProxyList & var_cas_ADD_ASSIGN_ARGUMENT_LIST,
                                const GGS_nativeAttributeList & var_cas_NATIVE_ATTRIBUTE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_MODIFIER_MAP.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_ADD_ASSIGN_ARGUMENT_LIST.isBuilt ()
    && var_cas_NATIVE_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
if (((((var_cas_SUPPORTED_OPERATORS).operator_and ((function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (1))).operator_or (function_dotAssignOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (1))))).operator_isNotEqual (GGS_uint (0U))).operator_or ((var_cas_MODIFIER_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)))).operator_or ((var_cas_ADD_ASSIGN_ARGUMENT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (LOCATION_ARGS) {\n"
  "  if (ptr (HERE)->retainCount () > 1) {\n"
  "    *this = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new(" ;
GGS_nativeAttributeList::cEnumerator enumerator_436 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_436 = NULL ;
while (((operand_436 = enumerator_436.nextObject ()))) {
macroValidPointer (operand_436) ;
result << "ptr (HERE)->" ;
result << operand_436->mAttributeName ;
if (enumerator_436.hasNextObject ()) {
result << ", " ;
}
}
if ((var_cas_NATIVE_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "THERE" ;
}else {
result << " COMMA_THERE" ;
}
result << ") ;\n"
  "  }\n"
  "}\n" ;
}else {
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'enumTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_enumTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_stringlist & var_cas_CONSTANT_LIST,
                                const GGS_enumMessageListForGeneration & var_cas_ENUM_MESSAGE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_CONSTANT_LIST.isBuilt ()
    && var_cas_ENUM_MESSAGE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const enumeration inValue\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n"
  "GALGAS_enum (THERE),\n"
  "mEnumValue (inValue) {\n"
  "}\n"
  "\n" ;
GGS_stringlist::cEnumerator enumerator_304 (var_cas_CONSTANT_LIST, true) ;
const GGS_stringlist::cElement * operand_304 = NULL ;
while (((operand_304 = enumerator_304.nextObject ()))) {
macroValidPointer (operand_304) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_" ;
result << operand_304->mValue.reader_identifierRepresentation () ;
result << " (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (kEnum_" ;
result << operand_304->mValue.reader_identifierRepresentation () ;
result << " COMMA_THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
GGS_enumMessageListForGeneration::cEnumerator enumerator_761 (var_cas_ENUM_MESSAGE_LIST, true) ;
const GGS_enumMessageListForGeneration::cElement * operand_761 = NULL ;
while (((operand_761 = enumerator_761.nextObject ()))) {
macroValidPointer (operand_761) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const char * gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_761->mEnumMessageName.reader_identifierRepresentation () ;
result << " [" ;
result << var_cas_CONSTANT_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (21)) ;
result << "] = {" ;
GGS_enumMessageAssociationSortedListForGeneration::cEnumerator enumerator_1039 (operand_761->mMessageAssociationList, true) ;
const GGS_enumMessageAssociationSortedListForGeneration::cElement * operand_1039 = NULL ;
while (((operand_1039 = enumerator_1039.nextObject ()))) {
macroValidPointer (operand_1039) ;
result << "\n"
  "  " ;
result << operand_1039->mMessage.reader_utf8Representation () ;
if (enumerator_1039.hasNextObject ()) {
result << "," ;
}
}
result << "\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_string GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_761->mEnumMessageName.reader_identifierRepresentation () ;
result << " (LOCATION_ARGS) {\n"
  "  return GALGAS_string::constructor_new (gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_761->mEnumMessageName.reader_identifierRepresentation () ;
result << " [mEnumValue] COMMA_THERE) ;\n"
  "}\n"
  "\n" ;
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const char * gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " [" ;
result << var_cas_CONSTANT_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << "] = {" ;
GGS_stringlist::cEnumerator enumerator_1719 (var_cas_CONSTANT_LIST, true) ;
const GGS_stringlist::cElement * operand_1719 = NULL ;
while (((operand_1719 = enumerator_1719.nextObject ()))) {
macroValidPointer (operand_1719) ;
result << "\n"
  "  " ;
result << operand_1719->mValue.reader_utf8Representation () ;
if (enumerator_1719.hasNextObject ()) {
result << "," ;
}
}
result << "\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 /* inIndentation */) {\n"
  "  ioString << \"<enum @" ;
result << var_cas_TYPE_NAME ;
result << ": \" << gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " [mEnumValue] << \">\" ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand1,\n"
  "                        " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand2) {\n"
  "  enumComparisonResult result = kOperandNotValid ;\n"
  "  if (inOperand1.isValid () && inOperand2.isValid ()) {\n"
  "    if (inOperand1.ptr (HERE)->mEnumValue < (PMSInt32) inOperand2.ptr (HERE)->mEnumValue) {\n"
  "      result = kFirstOperandLowerThanSecond ;\n"
  "    }else if (inOperand1.ptr (HERE)->mEnumValue > (PMSInt32) inOperand2.ptr (HERE)->mEnumValue) {\n"
  "      result = kFirstOperandGreaterThanSecond ;\n"
  "    }else{\n"
  "      result = kOperandEqual ;\n"
  "    }\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'listTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_listTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Class for element of '@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string ("' list")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public cCollectionElement {\n"
  "//--- List attributes\n" ;
GGS_typedAttributeList::cEnumerator enumerator_549 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_549 = NULL ;
while (((operand_549 = enumerator_549.nextObject ()))) {
macroValidPointer (operand_549) ;
result << "  public : GALGASap_" ;
result << operand_549->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
result << " mAttribute_" ;
result << operand_549->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "//--- Constructor\n"
  "  public : cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_803 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_803 = NULL ;
while (((operand_803 = enumerator_803.nextObject ()))) {
macroValidPointer (operand_803) ;
result << "GALGASap_" ;
result << operand_803->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (17)) ;
result << " & in_" ;
result << operand_803->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_803.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Virtual method for comparing elements\n"
  "  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) ;\n"
  "\n"
  "//--- Virtual method that checks that all attributes are valid\n"
  "  public : virtual bool isValid (void) const ;\n"
  "\n"
  "//--- Virtual method that returns a copy of current object\n"
  "  public : virtual cCollectionElement * copy (void) ;\n"
  "\n"
  "//--- Description\n"
  " public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) ;\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1643 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1643 = NULL ;
while (((operand_1643 = enumerator_1643.nextObject ()))) {
macroValidPointer (operand_1643) ;
result << "GALGASap_" ;
result << operand_1643->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (40)) ;
result << " & in_" ;
result << operand_1643->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1643.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n"
  "cCollectionElement (THERE)" ;
GGS_typedAttributeList::cEnumerator enumerator_1873 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1873 = NULL ;
while (((operand_1873 = enumerator_1873.nextObject ()))) {
macroValidPointer (operand_1873) ;
result << ",\n"
  "mAttribute_" ;
result << operand_1873->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (in_" ;
result << operand_1873->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "bool cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::isValid (void) const {\n"
  "  return " ;
GGS_typedAttributeList::cEnumerator enumerator_2201 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2201 = NULL ;
while (((operand_2201 = enumerator_2201.nextObject ()))) {
macroValidPointer (operand_2201) ;
result << "mAttribute_" ;
result << operand_2201->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
if (enumerator_2201.hasNextObject ()) {
result << " && " ;
}
}
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cCollectionElement * cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::copy (void) {\n"
  "  cCollectionElement * result = NULL ;\n"
  "  macroMyNew (result, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_2608 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2608 = NULL ;
while (((operand_2608 = enumerator_2608.nextObject ()))) {
macroValidPointer (operand_2608) ;
result << "mAttribute_" ;
result << operand_2608->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_2608.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_HERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2975 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2975 = NULL ;
while (((operand_2975 = enumerator_2975.nextObject ()))) {
macroValidPointer (operand_2975) ;
result << "// mAttribute_" ;
result << operand_2975->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".description (ioString, inIndentation) ;\n" ;
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::compare (const cCollectionElement * inOperand) {\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operand = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inOperand ;\n"
  "  enumComparisonResult result = kOperandEqual ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3468 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3468 = NULL ;
while (((operand_3468 = enumerator_3468.nextObject ()))) {
macroValidPointer (operand_3468) ;
result << "  if (kOperandEqual == result) {\n"
  "    result = GALGASap_" ;
result << operand_3468->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (92)) ;
result << "::objectCompare (mAttribute_" ;
result << operand_3468->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ", operand->mAttribute_" ;
result << operand_3468->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const C_galgas_type_descriptor * kFieldList_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (100)) ;
result << "] = {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4005 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4005 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4005 = enumerator_4005.nextObject ()))) {
macroValidPointer (operand_4005) ;
result << "  & kTypeDescriptor_GALGAS_" ;
result << operand_4005->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (102)) ;
if (enumerator_4005.hasNextObject ()) {
result << ",\n" ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_list (kFieldList_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_listWithValue (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_4838 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4838 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4838 = enumerator_4838.nextObject ()))) {
macroValidPointer (operand_4838) ;
result << "GALGASap_" ;
result << operand_4838->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (126)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (126)) ;
if (enumerator_4838.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result (GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (THERE)) ;\n"
  "  cCollectionElement * p = NULL ;\n"
  "  macroMyNew (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_5218 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5218 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5218 = enumerator_5218.nextObject ()))) {
macroValidPointer (operand_5218) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (134)) ;
if (enumerator_5218.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "  capCollectionElement attributes (p) ;\n"
  "  result.ptr (HERE)->addObject (attributes) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (LOCATION_ARGS) {\n"
  "  if (ptr (HERE)->retainCount () > 1) {\n"
  "    GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " newList (GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (THERE)) ;\n"
  "    newList.ptr (HERE)->copyFrom (ptr (HERE)) ;\n"
  "    *this = newList ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::addAssign_operation (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_5937 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5937 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5937 = enumerator_5937.nextObject ()))) {
macroValidPointer (operand_5937) ;
result << "GALGASap_" ;
result << operand_5937->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (157)) ;
result << " inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (157)) ;
if (enumerator_5937.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (isValid ()) {\n"
  "    insulate (THERE) ;\n"
  "    cCollectionElement * p = NULL ;\n"
  "    macroMyNew (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_6268 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6268 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6268 = enumerator_6268.nextObject ()))) {
macroValidPointer (operand_6268) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
if (enumerator_6268.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "    capCollectionElement attributes (p) ;\n"
  "    ptr (HERE)->addObject (attributes) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_prependValue (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_6617 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6617 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6617 = enumerator_6617.nextObject ()))) {
macroValidPointer (operand_6617) ;
result << "GALGASap_" ;
result << operand_6617->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (179)) ;
result << " inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (179)) ;
if (enumerator_6617.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (" ;
GGS_typedAttributeList::cEnumerator enumerator_6819 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6819 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6819 = enumerator_6819.nextObject ()))) {
macroValidPointer (operand_6819) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (185)) ;
result << ".isValid ()" ;
if (enumerator_6819.hasNextObject ()) {
result << " && " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "    cCollectionElement * p = NULL ;\n"
  "    macroMyNew (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_7041 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7041 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7041 = enumerator_7041.nextObject ()))) {
macroValidPointer (operand_7041) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (192)) ;
if (enumerator_7041.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "    capCollectionElement attributes (p) ;\n"
  "    prependAttributeArray (attributes) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popFirst (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_7386 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7386 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7386 = enumerator_7386.nextObject ()))) {
macroValidPointer (operand_7386) ;
result << "GALGASap_" ;
result << operand_7386->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (205)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (205)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement attributes ;\n"
  "  removeFirstObject (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_7819 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7819 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7819 = enumerator_7819.nextObject ()))) {
macroValidPointer (operand_7819) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (215)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_7997 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7997 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7997 = enumerator_7997.nextObject ()))) {
macroValidPointer (operand_7997) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (221)) ;
result << " = p->mAttribute_" ;
result << operand_7997->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popLast (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_8295 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8295 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8295 = enumerator_8295.nextObject ()))) {
macroValidPointer (operand_8295) ;
result << "GALGASap_" ;
result << operand_8295->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (230)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (230)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement attributes ;\n"
  "  removeLastObject (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_8727 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8727 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8727 = enumerator_8727.nextObject ()))) {
macroValidPointer (operand_8727) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (240)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_8905 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8905 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8905 = enumerator_8905.nextObject ()))) {
macroValidPointer (operand_8905) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (246)) ;
result << " = p->mAttribute_" ;
result << operand_8905->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_first (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_9199 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9199 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9199 = enumerator_9199.nextObject ()))) {
macroValidPointer (operand_9199) ;
result << "GALGASap_" ;
result << operand_9199->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (255)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (255)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement attributes ;\n"
  "  readFirst (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_9624 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9624 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9624 = enumerator_9624.nextObject ()))) {
macroValidPointer (operand_9624) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (265)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_9802 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9802 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9802 = enumerator_9802.nextObject ()))) {
macroValidPointer (operand_9802) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (271)) ;
result << " = p->mAttribute_" ;
result << operand_9802->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_last (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_10095 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10095 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10095 = enumerator_10095.nextObject ()))) {
macroValidPointer (operand_10095) ;
result << "GALGASap_" ;
result << operand_10095->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (280)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (280)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement attributes ;\n"
  "  readLast (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_10519 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10519 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10519 = enumerator_10519.nextObject ()))) {
macroValidPointer (operand_10519) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (290)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_10697 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10697 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10697 = enumerator_10697.nextObject ()))) {
macroValidPointer (operand_10697) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (296)) ;
result << " = p->mAttribute_" ;
result << operand_10697->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator_concat (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n"
  "                     " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (isValid () && inOperand.isValid ()) {\n"
  "    result = *this ;\n"
  "    ptr (HERE)->appendList (inOperand.ptr (HERE)) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_subListWithRange (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_uint & inOperand0,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_uint & inOperand1,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (inOperand0.isValid () && inOperand1.isValid ()) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (THERE) ;\n"
  "    const bool ok = subListWithRange (result.ptr (HERE), inOperand0, inOperand1, inCompiler COMMA_THERE) ;\n"
  "    if (! ok) {\n"
  "      result.drop () ;\n"
  "    }\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_subListFromIndex (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_uint & inIndex,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (inIndex.isValid ()) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (THERE) ;\n"
  "    const bool ok = subListFromIndex (result.ptr (HERE), inIndex, inCompiler COMMA_THERE) ;\n"
  "    if (! ok) {\n"
  "      result.drop () ;\n"
  "    }\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::dotAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " inOperand\n"
  "                          " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (isValid () && inOperand.isValid ()) {\n"
  "    insulate (THERE) ;\n"
  "    ptr (HERE)->appendList (inOperand.ptr (HERE)) ;\n"
  "  }\n"
  "}\n" ;
GGS_typedAttributeList::cEnumerator enumerator_13051 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_13051 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_13051 = enumerator_13051.nextObject ()))) {
macroValidPointer (operand_13051) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_set" ;
result << operand_13051->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ().reader_identifierRepresentation () ;
result << "AtIndex (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << operand_13051->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (358)) ;
result << " inOperand,\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_uint inIndex,\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) writeObjectAccessAtIndex (inIndex, inCompiler COMMA_THERE) ;\n"
  "  if (NULL != p) {\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    p->mAttribute_" ;
result << operand_13051->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " = inOperand ;\n"
  "  }\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_13997 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_13997 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_13997 = enumerator_13997.nextObject ()))) {
macroValidPointer (operand_13997) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << operand_13997->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (373)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_13997->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << "AtIndex (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_uint & inIndex,\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  GALGASap_" ;
result << operand_13997->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (378)) ;
result << " result ;\n"
  "  if (NULL != p) {\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    result = p->mAttribute_" ;
result << operand_13997->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'listmapTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_listmapTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_ASSOCIATED_LISTTYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ASSOCIATED_LISTTYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_listmap ((GALGAS_list * (*) (LOCATION_ARGS)) GALGAS_uintlist::constructor_emptyList COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyMap (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioObject\n"
  "                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioObject->retainCount () > 1) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * source = ioObject ;\n"
  "    macroReleaseObject (ioObject) ;\n"
  "    ioObject = constructor_emptyMap (THERE) ;\n"
  "    ioObject->copyFrom (source) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void addAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_string * inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_1196 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1196 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1196 = enumerator_1196.nextObject ()))) {
macroValidPointer (operand_1196) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_1196->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioResult COMMA_THERE) ;\n"
  "    GALGAS_object * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (37)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_1546 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1546 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1546 = enumerator_1546.nextObject ()))) {
macroValidPointer (operand_1546) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (39)) ;
if (enumerator_1546.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "    ioResult->addObject (inKey, attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'mapTypeSpecificDeclaration' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_mapTypeSpecificDeclaration (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Class for element of '@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string ("' map")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public cCollectionElementForMap {\n"
  "//--- Map attributes\n" ;
GGS_typedAttributeList::cEnumerator enumerator_553 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_553 = NULL ;
while (((operand_553 = enumerator_553.nextObject ()))) {
macroValidPointer (operand_553) ;
result << "  public : GALGASap_" ;
result << operand_553->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
result << " mAttribute_" ;
result << operand_553->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "//--- Constructor\n"
  "  public : cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_lstring & inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_833 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_833 = NULL ;
while (((operand_833 = enumerator_833.nextObject ()))) {
macroValidPointer (operand_833) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << operand_833->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (17)) ;
result << " & in_" ;
result << operand_833->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Virtual method for comparing elements\n"
  "  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) ;\n"
  "\n"
  "//--- Virtual method that checks that all attributes are valid\n"
  "  public : virtual bool isValid (void) const ;\n"
  "\n"
  "//--- Virtual method that returns a copy of current object\n"
  "  public : virtual cCollectionElement * copy (void) ;\n"
  "\n"
  "//--- Description\n"
  " public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) ;\n"
  "} ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'mapTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_mapTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_insertMethodListAST & var_cas_INSERT_METHOD_LIST,
                                const GGS_mapSearchMethodListAST & var_cas_SEARCH_METHOD_LIST,
                                const GGS_mapRemoveMethodListAST & var_cas_REMOVE_METHOD_LIST,
                                const GGS_bool& var_cas_HAS_INSERT_OR_REPLACE,
                                const GGS_withAccessorMap & var_cas_WITH_ACCESSOR_MAP) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_INSERT_METHOD_LIST.isBuilt ()
    && var_cas_SEARCH_METHOD_LIST.isBuilt ()
    && var_cas_REMOVE_METHOD_LIST.isBuilt ()
    && var_cas_HAS_INSERT_OR_REPLACE.isBuilt ()
    && var_cas_WITH_ACCESSOR_MAP.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Class for element of '@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string ("' map")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_lstring & inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_554 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_554 = NULL ;
while (((operand_554 = enumerator_554.nextObject ()))) {
macroValidPointer (operand_554) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << operand_554->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
result << " & in_" ;
result << operand_554->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n"
  "cCollectionElementForMap (inKey COMMA_THERE)" ;
GGS_typedAttributeList::cEnumerator enumerator_789 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_789 = NULL ;
while (((operand_789 = enumerator_789.nextObject ()))) {
macroValidPointer (operand_789) ;
result << ",\n"
  "mAttribute_" ;
result << operand_789->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (in_" ;
result << operand_789->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "bool cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::isValid (void) const {\n"
  "  return mAttribute_lkey.isValid ()" ;
GGS_typedAttributeList::cEnumerator enumerator_1143 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1143 = NULL ;
while (((operand_1143 = enumerator_1143.nextObject ()))) {
macroValidPointer (operand_1143) ;
result << " && mAttribute_" ;
result << operand_1143->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
}
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cCollectionElement * cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::copy (void) {\n"
  "  cCollectionElement * result = NULL ;\n"
  "  macroMyNew (result, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (mAttribute_lkey" ;
GGS_typedAttributeList::cEnumerator enumerator_1548 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1548 = NULL ;
while (((operand_1548 = enumerator_1548.nextObject ()))) {
macroValidPointer (operand_1548) ;
result << ", mAttribute_" ;
result << operand_1548->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
}
result << " COMMA_HERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1898 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1898 = NULL ;
while (((operand_1898 = enumerator_1898.nextObject ()))) {
macroValidPointer (operand_1898) ;
result << "// mAttribute_" ;
result << operand_1898->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".description (ioString, inIndentation) ;\n" ;
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::compare (const cCollectionElement * inOperand) {\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operand = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inOperand ;\n"
  "  enumComparisonResult result = GALGASap_lstring::objectCompare (mAttribute_lkey, operand->mAttribute_lkey) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2453 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2453 = NULL ;
while (((operand_2453 = enumerator_2453.nextObject ()))) {
macroValidPointer (operand_2453) ;
result << "  if (kOperandEqual == result) {\n"
  "    result = GALGASap_" ;
result << operand_2453->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (58)) ;
result << "::objectCompare (mAttribute_" ;
result << operand_2453->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ", operand->mAttribute_" ;
result << operand_2453->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_map (THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyMap (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_mapWithMapToOverride (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inMapToOverride\n"
  "                                                   " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (inMapToOverride.isValid ()) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyMap (THERE) ;\n"
  "    result.ptr (HERE)->mOverridenMap = inMapToOverride ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (LOCATION_ARGS) {\n"
  "  if (ptr (HERE)->retainCount () > 1) {\n"
  "    GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " newMap (GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyMap (THERE)) ;\n"
  "    newMap.ptr (HERE)->copyFrom (ptr(HERE)) ;\n"
  "    *this = newMap ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_overriddenMap (LOCATION_ARGS) {\n"
  "  GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result = mOverridenMap ;\n"
  "  if (! result.isValid ()) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyMap (THERE) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
GGS_insertMethodListAST::cEnumerator enumerator_4506 (var_cas_INSERT_METHOD_LIST, true) ;
const GGS_insertMethodListAST::cElement * operand_4506 = NULL ;
while (((operand_4506 = enumerator_4506.nextObject ()))) {
macroValidPointer (operand_4506) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_" ;
result << operand_4506->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_lstring inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_4744 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4744 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4744 = enumerator_4744.nextObject ()))) {
macroValidPointer (operand_4744) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << operand_4744->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (114)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (114)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = NULL ;\n"
  "  macroMyNew (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_5099 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5099 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5099 = enumerator_5099.nextObject ()))) {
macroValidPointer (operand_5099) ;
result << ", inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (121)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_HERE)) ;\n"
  "  capCollectionElement attributes (p) ;\n" ;
const GGS_uint indentation_5620 = GGS_uint (2U) ;
if (indentation_5620.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_5620.uintValue ()) ;
}
result << "const utf32 kInsertErrorMessage [" ;
result << operand_4506->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (126)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (126)) ;
result << "] = " ;
result << operand_4506->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "const utf32 kShadowErrorMessage [" ;
result << operand_4506->mShadowErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (127)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (127)) ;
result << "] = " ;
result << operand_4506->mShadowErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;\n" ;
 ;
if (indentation_5620.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_5620.uintValue ())) ;
}
result << "}\n"
  "\n" ;
}
GGS_mapSearchMethodListAST::cEnumerator enumerator_5659 (var_cas_SEARCH_METHOD_LIST, true) ;
const GGS_mapSearchMethodListAST::cElement * operand_5659 = NULL ;
while (((operand_5659 = enumerator_5659.nextObject ()))) {
macroValidPointer (operand_5659) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const utf32 kSearchErrorMessage_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_5659->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " [" ;
result << operand_5659->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (135)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (135)) ;
result << "] = " ;
result << operand_5659->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_" ;
result << operand_5659->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_lstring inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_6174 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6174 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6174 = enumerator_6174.nextObject ()))) {
macroValidPointer (operand_6174) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << operand_6174->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (139)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (139)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
const GGS_uint indentation_6967 = GGS_uint (2U) ;
if (indentation_6967.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_6967.uintValue ()) ;
}
result << "capCollectionElement attributes = performSearch (inKey, inCompiler, kSearchErrorMessage_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_5659->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " COMMA_THERE) ;\n"
  "cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "if (NULL != p) {\n"
  "  macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_6803 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6803 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6803 = enumerator_6803.nextObject ()))) {
macroValidPointer (operand_6803) ;
result << "  outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (149)) ;
result << " = p->mAttribute_" ;
result << operand_6803->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n" ;
 ;
if (indentation_6967.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_6967.uintValue ())) ;
}
result << "}\n"
  "\n" ;
}
GGS_mapRemoveMethodListAST::cEnumerator enumerator_7007 (var_cas_REMOVE_METHOD_LIST, true) ;
const GGS_mapRemoveMethodListAST::cElement * operand_7007 = NULL ;
while (((operand_7007 = enumerator_7007.nextObject ()))) {
macroValidPointer (operand_7007) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_" ;
result << operand_7007->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_lstring inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_7245 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7245 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7245 = enumerator_7245.nextObject ()))) {
macroValidPointer (operand_7245) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << operand_7245->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (161)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (161)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
const GGS_uint indentation_8121 = GGS_uint (2U) ;
if (indentation_8121.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_8121.uintValue ()) ;
}
result << "const utf32 kRemoveErrorMessage [" ;
result << operand_7007->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (166)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
result << "] = " ;
result << operand_7007->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "capCollectionElement attributes ;\n"
  "performRemove (inKey, attributes, inCompiler, kRemoveErrorMessage COMMA_THERE) ;\n"
  "cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "if (NULL != p) {\n"
  "  macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_7957 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7957 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7957 = enumerator_7957.nextObject ()))) {
macroValidPointer (operand_7957) ;
result << "  outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (173)) ;
result << " = p->mAttribute_" ;
result << operand_7957->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n" ;
 ;
if (indentation_8121.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_8121.uintValue ())) ;
}
result << "}\n"
  "\n" ;
}
if (var_cas_HAS_INSERT_OR_REPLACE.boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_insertOrReplace (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_lstring * inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_8372 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8372 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8372 = enumerator_8372.nextObject ()))) {
macroValidPointer (operand_8372) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_8372->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (184)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (184)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  GALGAS_object * attributes [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (187)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (187)) ;
result << "] = {inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_8651 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8651 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8651 = enumerator_8651.nextObject ()))) {
macroValidPointer (operand_8651) ;
result << ", inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (189)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "  performInsertOrReplace (attributes) ;\n"
  "}\n"
  "\n" ;
}else {
}
GGS_typedAttributeList::cEnumerator enumerator_8803 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8803 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8803 = enumerator_8803.nextObject ()))) {
macroValidPointer (operand_8803) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << operand_8803->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (198)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_8803->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << "ForKey (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_string & inKey,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  GALGASap_" ;
result << operand_8803->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (203)) ;
result << " result ;\n"
  "  if (NULL != p) {\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    result = p->mAttribute_" ;
result << operand_8803->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_typedAttributeList::cEnumerator enumerator_9801 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9801 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9801 = enumerator_9801.nextObject ()))) {
macroValidPointer (operand_9801) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_set" ;
result << operand_9801->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ().reader_identifierRepresentation () ;
result << "ForKey (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << operand_9801->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (214)) ;
result << " inAttributeValue,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_string inKey,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;\n"
  "  if (NULL != p) {\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    p->mAttribute_" ;
result << operand_9801->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " = inAttributeValue ;\n"
  "  }\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_withAccessorMap::cEnumerator enumerator_10705 (var_cas_WITH_ACCESSOR_MAP, true) ;
const GGS_withAccessorMap::cElement * operand_10705 = NULL ;
while (((operand_10705 = enumerator_10705.nextObject ()))) {
macroValidPointer (operand_10705) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "capCollectionElement * readWriteAccessForWithInstruction_" ;
result << operand_10705->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & ioMap,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << operand_10705->mInfo.mArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (230)) ;
result << " & inKey\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement * result = NULL ;\n"
  "  if (ioMap.isValid () && inKey.isValid ()) {\n"
  "    ioMap.insulate (THERE) ;\n" ;
if ((operand_10705->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (235))).operator_isEqual (GGS_string ("hasKey")).boolValue ()) {
result << "    result = ioMap.ptr (HERE)->searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;\n" ;
}else {
result << "    result = ioMap.ptr (HERE)->searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_10705->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " COMMA_THERE) ;\n" ;
}
result << "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'sortedlistTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_sortedlistTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_sortDescriptorListForGeneration & var_cas_SORT_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_SORT_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Class for element of '@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string ("' list")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public cCollectionElement {\n"
  "//--- List attributes\n" ;
GGS_typedAttributeList::cEnumerator enumerator_549 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_549 = NULL ;
while (((operand_549 = enumerator_549.nextObject ()))) {
macroValidPointer (operand_549) ;
result << "  public : GALGASap_" ;
result << operand_549->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
result << " mAttribute_" ;
result << operand_549->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "//--- Constructor\n"
  "  public : cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_803 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_803 = NULL ;
while (((operand_803 = enumerator_803.nextObject ()))) {
macroValidPointer (operand_803) ;
result << "GALGASap_" ;
result << operand_803->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (17)) ;
result << " & in_" ;
result << operand_803->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_803.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Virtual method for comparing elements\n"
  "  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) ;\n"
  "\n"
  "//--- Virtual method that checks that all attributes are valid\n"
  "  public : virtual bool isValid (void) const ;\n"
  "\n"
  "//--- Virtual method that returns a copy of current object\n"
  "  public : virtual cCollectionElement * copy (void) ;\n"
  "\n"
  "//--- Description\n"
  " public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) ;\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1643 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1643 = NULL ;
while (((operand_1643 = enumerator_1643.nextObject ()))) {
macroValidPointer (operand_1643) ;
result << "GALGASap_" ;
result << operand_1643->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (40)) ;
result << " & in_" ;
result << operand_1643->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1643.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n"
  "cCollectionElement (THERE)" ;
GGS_typedAttributeList::cEnumerator enumerator_1873 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1873 = NULL ;
while (((operand_1873 = enumerator_1873.nextObject ()))) {
macroValidPointer (operand_1873) ;
result << ",\n"
  "mAttribute_" ;
result << operand_1873->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (in_" ;
result << operand_1873->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "bool cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::isValid (void) const {\n"
  "  return " ;
GGS_typedAttributeList::cEnumerator enumerator_2201 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2201 = NULL ;
while (((operand_2201 = enumerator_2201.nextObject ()))) {
macroValidPointer (operand_2201) ;
result << "mAttribute_" ;
result << operand_2201->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
if (enumerator_2201.hasNextObject ()) {
result << " && " ;
}
}
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cCollectionElement * cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::copy (void) {\n"
  "  cCollectionElement * result = NULL ;\n"
  "  macroMyNew (result, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_2608 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2608 = NULL ;
while (((operand_2608 = enumerator_2608.nextObject ()))) {
macroValidPointer (operand_2608) ;
result << "mAttribute_" ;
result << operand_2608->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_2608.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_HERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2975 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2975 = NULL ;
while (((operand_2975 = enumerator_2975.nextObject ()))) {
macroValidPointer (operand_2975) ;
result << "// mAttribute_" ;
result << operand_2975->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".description (ioString, inIndentation) ;\n" ;
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::compare (const cCollectionElement * inOperand) {\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operand = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inOperand ;\n"
  "  enumComparisonResult result = kOperandEqual ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3468 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3468 = NULL ;
while (((operand_3468 = enumerator_3468.nextObject ()))) {
macroValidPointer (operand_3468) ;
result << "  if (kOperandEqual == result) {\n"
  "    result = GALGASap_" ;
result << operand_3468->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (92)) ;
result << "::objectCompare (mAttribute_" ;
result << operand_3468->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ", operand->mAttribute_" ;
result << operand_3468->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const C_galgas_type_descriptor * kFieldList_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (100)) ;
result << "] = {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4005 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4005 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4005 = enumerator_4005.nextObject ()))) {
macroValidPointer (operand_4005) ;
result << "  & kTypeDescriptor_GALGAS_" ;
result << operand_4005->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (102)) ;
if (enumerator_4005.hasNextObject ()) {
result << ",\n" ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_sortedlist (kFieldList_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::compareSortedListElements (" ;
columnMarker = result.currentColumn () ;
result << "const capCollectionElement & inLeftAttributeList,\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const capCollectionElement & inRightAttributeList) const {\n"
  "  enumComparisonResult result = kOperandEqual ;\n"
  "  const cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p1 = (const cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inLeftAttributeList.ptrNoVerif () ;\n"
  "  macroValidObject (p1, const cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  const cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p2 = (const cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inRightAttributeList.ptrNoVerif () ;\n"
  "  macroValidObject (p2, const cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_sortDescriptorListForGeneration::cEnumerator enumerator_5165 (var_cas_SORT_ATTRIBUTE_LIST, true) ;
const GGS_sortDescriptorListForGeneration::cElement * operand_5165 = NULL ;
while (((operand_5165 = enumerator_5165.nextObject ()))) {
macroValidPointer (operand_5165) ;
result << "  if (result == kOperandEqual) {\n"
  "    result = " ;
if (operand_5165->mAscendingOrder.boolValue ()) {
}else {
result << "complementComparison " ;
}
result << "(GALGASap_" ;
result << operand_5165->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (126)) ;
result << "::objectCompare (p1->mAttribute_" ;
result << operand_5165->mAttributeName.reader_identifierRepresentation () ;
result << ", p2->mAttribute_" ;
result << operand_5165->mAttributeName.reader_identifierRepresentation () ;
result << ")) ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (LOCATION_ARGS) {\n"
  "  if (isValid () && (ptr (HERE)->retainCount () > 1)) {\n"
  "    GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " p (GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptySortedList (THERE)) ;\n"
  "    p.ptr (HERE)->copyFrom (ptr (HERE)) ;\n"
  "    *this = p ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptySortedList (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = NULL ;\n"
  "  macroMyNew (p, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (p) ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_sortedListWithValue (" ;
const GGS_string var_cas_COL0 = GGS_string::stringWithColumnCount (result) ;
GGS_typedAttributeList::cEnumerator enumerator_6433 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6433 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6433 = enumerator_6433.nextObject ()))) {
macroValidPointer (operand_6433) ;
result << "GALGASap_" ;
result << operand_6433->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (154)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (154)) ;
if (enumerator_6433.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL0 ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result << var_cas_COL0 ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptySortedList (THERE) ;\n"
  "  cCollectionElement * p = NULL ;\n"
  "  macroMyNew (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_6825 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6825 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6825 = enumerator_6825.nextObject ()))) {
macroValidPointer (operand_6825) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (162)) ;
if (enumerator_6825.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "  capCollectionElement attributes (p) ;\n"
  "  result.ptr (HERE)->addObject (attributes) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::addAssign_operation (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_7185 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7185 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7185 = enumerator_7185.nextObject ()))) {
macroValidPointer (operand_7185) ;
result << "GALGASap_" ;
result << operand_7185->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (175)) ;
result << " inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (175)) ;
if (enumerator_7185.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "    " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (isValid ()) {\n"
  "    insulate (HERE) ;\n"
  "    cCollectionElement * p = NULL ;\n"
  "    macroMyNew (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_7516 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7516 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7516 = enumerator_7516.nextObject ()))) {
macroValidPointer (operand_7516) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (185)) ;
if (enumerator_7516.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "    capCollectionElement attributes (p) ;\n"
  "    ptr (HERE)->addObject (attributes) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::dotAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " inOperand\n"
  "                          " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (isValid () && inOperand.isValid ()) {\n"
  "    insulate (THERE) ;\n"
  "    ptr (HERE)->appendSortedList (inOperand.ptr (HERE)) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator_concat (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n"
  "                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (isValid () && inOperand.isValid ()) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptySortedList (THERE) ;\n"
  "    result.ptr (HERE)->appendSortedList (ptr (HERE)) ;\n"
  "    result.ptr (HERE)->appendSortedList (inOperand.ptr (HERE)) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popSmallest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_8789 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8789 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8789 = enumerator_8789.nextObject ()))) {
macroValidPointer (operand_8789) ;
result << "GALGASap_" ;
result << operand_8789->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (221)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (221)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement attributes ;\n"
  "  removeSmallestObject (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_9243 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9243 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9243 = enumerator_9243.nextObject ()))) {
macroValidPointer (operand_9243) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (231)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_9421 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9421 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9421 = enumerator_9421.nextObject ()))) {
macroValidPointer (operand_9421) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (237)) ;
result << " = p->mAttribute_" ;
result << operand_9421->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popGreatest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_9723 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9723 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9723 = enumerator_9723.nextObject ()))) {
macroValidPointer (operand_9723) ;
result << "GALGASap_" ;
result << operand_9723->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (246)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (246)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement attributes ;\n"
  "  removeGreatestObject (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_10177 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10177 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10177 = enumerator_10177.nextObject ()))) {
macroValidPointer (operand_10177) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (256)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_10355 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10355 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10355 = enumerator_10355.nextObject ()))) {
macroValidPointer (operand_10355) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (262)) ;
result << " = p->mAttribute_" ;
result << operand_10355->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_smallest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_10652 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10652 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10652 = enumerator_10652.nextObject ()))) {
macroValidPointer (operand_10652) ;
result << "GALGASap_" ;
result << operand_10652->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (271)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (271)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement attributes ;\n"
  "  smallestObjectAttributeList (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_11103 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_11103 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_11103 = enumerator_11103.nextObject ()))) {
macroValidPointer (operand_11103) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (281)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_11281 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_11281 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_11281 = enumerator_11281.nextObject ()))) {
macroValidPointer (operand_11281) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (287)) ;
result << " = p->mAttribute_" ;
result << operand_11281->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_greatest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_11578 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_11578 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_11578 = enumerator_11578.nextObject ()))) {
macroValidPointer (operand_11578) ;
result << "GALGASap_" ;
result << operand_11578->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (296)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (296)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement attributes ;\n"
  "  greatestObjectAttributeList (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_12029 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_12029 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_12029 = enumerator_12029.nextObject ()))) {
macroValidPointer (operand_12029) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (306)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_12207 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_12207 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_12207 = enumerator_12207.nextObject ()))) {
macroValidPointer (operand_12207) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (312)) ;
result << " = p->mAttribute_" ;
result << operand_12207->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'structTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_structTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) :\n" ;
GGS_typedAttributeList::cEnumerator enumerator_174 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_174 = NULL ;
while (((operand_174 = enumerator_174.nextObject ()))) {
macroValidPointer (operand_174) ;
result << "mAttribute_" ;
result << operand_174->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ()" ;
if (enumerator_174.hasNextObject ()) {
result << ",\n" ;
}
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_435 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_435 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_435 = enumerator_435.nextObject ()))) {
macroValidPointer (operand_435) ;
result << "GALGASap_" ;
result << operand_435->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (15)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (15)) ;
if (enumerator_435.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " \n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n"
  "GALGAS_struct (THERE)" ;
GGS_typedAttributeList::cEnumerator enumerator_640 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_640 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_640 = enumerator_640.nextObject ()))) {
macroValidPointer (operand_640) ;
result << ",\n"
  "mAttribute_" ;
result << operand_640->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (20)) ;
result << ")" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator = (const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_990 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_990 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_990 = enumerator_990.nextObject ()))) {
macroValidPointer (operand_990) ;
result << "  mAttribute_" ;
result << operand_990->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " = inOperand.mAttribute_" ;
result << operand_990->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  return *this ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1351 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1351 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1351 = enumerator_1351.nextObject ()))) {
macroValidPointer (operand_1351) ;
result << "GALGASap_" ;
result << operand_1351->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (38)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (38)) ;
if (enumerator_1351.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " \n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (" ;
GGS_typedAttributeList::cEnumerator enumerator_1589 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1589 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1589 = enumerator_1589.nextObject ()))) {
macroValidPointer (operand_1589) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (44)) ;
result << ".isValid ()" ;
if (enumerator_1589.hasNextObject ()) {
result << " && " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "    result = GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_1743 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1743 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1743 = enumerator_1743.nextObject ()))) {
macroValidPointer (operand_1743) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (50)) ;
if (enumerator_1743.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_2006 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2006 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2006 = enumerator_2006.nextObject ()))) {
macroValidPointer (operand_2006) ;
result << "GALGASap_" ;
result << operand_2006->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (63)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (63)) ;
if (enumerator_2006.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") :\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2167 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2167 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2167 = enumerator_2167.nextObject ()))) {
macroValidPointer (operand_2167) ;
result << "mAttribute_" ;
result << operand_2167->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (69)) ;
result << ")" ;
if (enumerator_2167.hasNextObject ()) {
result << ",\n" ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::~ GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                             " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 inIndentation) {\n"
  "  ioString << \"<struct @" ;
result << var_cas_TYPE_NAME ;
result << ":\" ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2730 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2730 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2730 = enumerator_2730.nextObject ()))) {
macroValidPointer (operand_2730) ;
result << "  mAttribute_" ;
result << operand_2730->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".ptr (HERE)->description (ioString, inIndentation  + 1) ;\n" ;
if (enumerator_2730.hasNextObject ()) {
result << "  ioString << \", \" ;\n" ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  ioString << \">\" ;\n"
  "}\n"
  "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2958 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2958 = NULL ;
while (((operand_2958 = enumerator_2958.nextObject ()))) {
macroValidPointer (operand_2958) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << operand_2958->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (96)) ;
result << " GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::readerCall_" ;
result << operand_2958->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (UNUSED_LOCATION_ARGS) {\n"
  "  return mAttribute_" ;
result << operand_2958->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "}\n"
  "\n" ;
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand1,\n"
  "                        " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand2) {\n"
  "   enumComparisonResult result = kOperandEqual ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3668 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3668 = NULL ;
while (((operand_3668 = enumerator_3668.nextObject ()))) {
macroValidPointer (operand_3668) ;
result << "  if (result == kOperandEqual) {\n"
  "    result = GALGASap_" ;
result << operand_3668->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (108)) ;
result << "::objectCompare (inOperand1.mAttribute_" ;
result << operand_3668->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ", inOperand2.mAttribute_" ;
result << operand_3668->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "bool GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::isValid (void) const {\n"
  "  return " ;
GGS_typedAttributeList::cEnumerator enumerator_4167 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4167 = NULL ;
while (((operand_4167 = enumerator_4167.nextObject ()))) {
macroValidPointer (operand_4167) ;
result << "mAttribute_" ;
result << operand_4167->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
if (enumerator_4167.hasNextObject ()) {
result << " && " ;
}
}
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::drop (void) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4441 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4441 = NULL ;
while (((operand_4441 = enumerator_4441.nextObject ()))) {
macroValidPointer (operand_4441) ;
result << "  mAttribute_" ;
result << operand_4441->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".drop () ;\n" ;
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_object * GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::ptrNoVerif (void) {\n"
  "  GALGAS_object * result = NULL ;\n"
  "  if (isValid ()) {\n"
  "    macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_4819 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4819 = NULL ;
while (((operand_4819 = enumerator_4819.nextObject ()))) {
macroValidPointer (operand_4819) ;
result << "mAttribute_" ;
result << operand_4819->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_4819.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_HERE)) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'mapProxyTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_mapProxyTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_mapSearchMethodListAST & var_cas_SEARCH_METHOD_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_SEARCH_METHOD_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_mapproxy (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (4)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4)) ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_null (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::class_method_makeRegularProxy (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_string * inKey,\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << " * & ioMap,\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & outProxy\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  macroReleaseObject (outProxy) ;\n"
  "  if ((NULL != inKey) && (NULL != ioMap)) {\n"
  "    GALGAS_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << "::insulate (ioMap COMMA_HERE) ;\n"
  "    macroMyNew (outProxy, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "    outProxy->internalMakeRegularProxy (ioMap, inKey) ;\n"
  "  }\n"
  "}\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1239 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1239 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1239 = enumerator_1239.nextObject ()))) {
macroValidPointer (operand_1239) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_1239->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (30)) ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_1239->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << operand_1239->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
result << " * result = NULL ;\n"
  "  GALGAS_object * * attributeList = getAttributeList (inCompiler COMMA_THERE) ;\n"
  "  if (NULL != attributeList) {\n"
  "    result = (GALGAS_" ;
result << operand_1239->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << " *) attributeList [" ;
result << var_cas_IDX.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (35)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << "] ;\n"
  "    macroValidObject (result, GALGAS_" ;
result << operand_1239->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (36)) ;
result << ") ;\n"
  "    macroRetainObject (result) ; // A returned object is retained\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_mapSearchMethodListAST::cEnumerator enumerator_2158 (var_cas_SEARCH_METHOD_LIST, true) ;
const GGS_mapSearchMethodListAST::cElement * operand_2158 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2158 = enumerator_2158.nextObject ()))) {
macroValidPointer (operand_2158) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_" ;
result << operand_2158->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << " * inMap,\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_lstring * inKey,\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  if ((NULL != inMap) && (NULL != inKey)) {\n" ;
const GGS_uint indentation_3215 = GGS_uint (4U) ;
if (indentation_3215.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_3215.uintValue ()) ;
}
result << "macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "const utf32 kSearchErrorMessage [" ;
result << operand_2158->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (53)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (53)) ;
result << "] = " ;
result << operand_2158->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "const bool ok = result->internalSearchKey (inMap, inKey, kSearchErrorMessage, inCompiler COMMA_THERE) ;\n"
  "if (! ok) {\n"
  "  macroReleaseObject (result) ;\n"
  "}\n" ;
 ;
if (indentation_3215.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_3215.uintValue ())) ;
}
result << "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'classTypeSpecificImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_classTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_SUPER_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_CURRENT_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_ALL_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_INHERITED_ATTRIBUTE_LIST,
                                const GGS_bool& var_cas_IS_ABSTRACT,
                                const GGS_methodDefinitionListForGeneration & var_cas_CONCRETE_METHOD_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_CURRENT_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_ALL_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_INHERITED_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_IS_ABSTRACT.isBuilt ()
    && var_cas_CONCRETE_METHOD_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n" ;
if ((var_cas_CURRENT_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "enumComparisonResult GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand1,\n"
  "                        " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand2) {\n"
  "  return (inOperand1.isValid () && inOperand2.isValid ()) \? kOperandEqual : kOperandNotValid ;\n"
  "}\n"
  "\n" ;
}else {
result << "enumComparisonResult GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand1,\n"
  "                        " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand2) {\n" ;
if ((var_cas_SUPER_TYPE_IDENTIFIER).operator_isEqual (GGS_string ("class")).boolValue ()) {
result << "  enumComparisonResult result = (inOperand1.isValid () && inOperand2.isValid ()) \? kOperandEqual : kOperandNotValid ;\n" ;
}else {
result << "  enumComparisonResult result = GALGASap_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << "::objectCompare (inOperand1, inOperand2) ;\n" ;
}
GGS_typedAttributeList::cEnumerator enumerator_991 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_991 = NULL ;
while (((operand_991 = enumerator_991.nextObject ()))) {
macroValidPointer (operand_991) ;
result << "  if (kOperandEqual == result) {\n"
  "    result = GALGASap_" ;
result << operand_991->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (18)) ;
result << "::objectCompare (inOperand1.ptr (HERE)->mAttribute_" ;
result << operand_991->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ", inOperand2.ptr (HERE)->mAttribute_" ;
result << operand_991->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n" ;
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1533 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1533 = NULL ;
while (((operand_1533 = enumerator_1533.nextObject ()))) {
macroValidPointer (operand_1533) ;
result << "GALGASap_" ;
result << operand_1533->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (29)) ;
result << " & constinAttribute_" ;
result << operand_1533->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1533.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
result << ") :\n"
  "GALGAS_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_1890 (var_cas_INHERITED_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1890 = NULL ;
while (((operand_1890 = enumerator_1890.nextObject ()))) {
macroValidPointer (operand_1890) ;
result << "constinAttribute_" ;
result << operand_1890->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1890.hasNextObject ()) {
result << ", " ;
}
}
if ((var_cas_INHERITED_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << " COMMA_THERE)" ;
}else {
result << "THERE)" ;
}
GGS_typedAttributeList::cEnumerator enumerator_2116 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2116 = NULL ;
while (((operand_2116 = enumerator_2116.nextObject ()))) {
macroValidPointer (operand_2116) ;
result << ",\n"
  "mAttribute_" ;
result << operand_2116->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (constinAttribute_" ;
result << operand_2116->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
}
result << " {\n"
  "}\n"
  "\n" ;
if (((var_cas_IS_ABSTRACT).operator_not ()).operator_and ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 /* inIndentation */) {\n"
  "  ioString << \"<class @\"\n"
  "           << typeDescriptor ()->mGalgasTypeName\n"
  "           << \">\" ;\n"
  "}\n"
  "\n" ;
}else {
}
if (((var_cas_IS_ABSTRACT).operator_not ()).operator_and ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_3306 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3306 = NULL ;
while (((operand_3306 = enumerator_3306.nextObject ()))) {
macroValidPointer (operand_3306) ;
result << "GALGASap_" ;
result << operand_3306->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (76)) ;
result << " & inAttribute_" ;
result << operand_3306->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_3306.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  if (" ;
GGS_typedAttributeList::cEnumerator enumerator_3672 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3672 = NULL ;
while (((operand_3672 = enumerator_3672.nextObject ()))) {
macroValidPointer (operand_3672) ;
result << "inAttribute_" ;
result << operand_3672->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
if (enumerator_3672.hasNextObject ()) {
result << " && " ;
}
}
result << ") {\n"
  "    macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_3879 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3879 = NULL ;
while (((operand_3879 = enumerator_3879.nextObject ()))) {
macroValidPointer (operand_3879) ;
result << "inAttribute_" ;
result << operand_3879->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_3879.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_THERE)) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 /* inIndentation */) {\n"
  "  ioString << \"<class @\"\n"
  "           << typeDescriptor ()->mGalgasTypeName\n"
  "           << \":\" ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4433 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4433 = NULL ;
while (((operand_4433 = enumerator_4433.nextObject ()))) {
macroValidPointer (operand_4433) ;
result << "//  mAttribute_" ;
result << operand_4433->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << "->description (ioString, inIndentation + 1) ;\n" ;
if (enumerator_4433.hasNextObject ()) {
result << "  ioString << \", \" ;\n" ;
}
}
result << "  ioString << \">\" ;\n"
  "}\n"
  "\n" ;
}else {
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::~GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) {\n"
  "}\n"
  "\n" ;
if (((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).operator_and ((var_cas_IS_ABSTRACT).operator_not ()).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (LOCATION_ARGS) {\n"
  "  if (isValid () && (ptr (HERE)->retainCount () > 1)) {\n"
  "    GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " p = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
GGS_typedAttributeList::cEnumerator enumerator_5186 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5186 = NULL ;
while (((operand_5186 = enumerator_5186.nextObject ()))) {
macroValidPointer (operand_5186) ;
result << "ptr (HERE)->mAttribute_" ;
result << operand_5186->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_5186.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_THERE) ;\n"
  "    *this = p ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}else {
}
GGS_methodDefinitionListForGeneration::cEnumerator enumerator_5389 (var_cas_CONCRETE_METHOD_LIST, true) ;
const GGS_methodDefinitionListForGeneration::cElement * operand_5389 = NULL ;
while (((operand_5389 = enumerator_5389.nextObject ()))) {
macroValidPointer (operand_5389) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << function_generateProcedure (inLexique, (((GGS_string ("GALGAS_")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string ("::method_"))).operator_concat (operand_5389->mMethodName.ggs_string ().reader_identifierRepresentation ()), operand_5389->mSignature, operand_5389->mInstructionList, GGS_bool (false), GGS_string ("C_Compiler"), GGS_bool (true), GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (137)) ;
}
GGS_typedAttributeList::cEnumerator enumerator_5810 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5810 = NULL ;
while (((operand_5810 = enumerator_5810.nextObject ()))) {
macroValidPointer (operand_5810) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << operand_5810->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (150)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_5810->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (UNUSED_LOCATION_ARGS) {\n"
  "  return mAttribute_" ;
result << operand_5810->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "}\n"
  "\n" ;
}
if ((var_cas_IS_ABSTRACT).operator_not ().boolValue ()) {
GGS_typedAttributeList::cEnumerator enumerator_6218 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6218 = NULL ;
while (((operand_6218 = enumerator_6218.nextObject ()))) {
macroValidPointer (operand_6218) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_set" ;
result << operand_6218->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << operand_6218->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (158)) ;
result << " inValue\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  mAttribute_" ;
result << operand_6218->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " = inValue ;\n"
  "}\n"
  "\n" ;
}
}else {
}
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'routineDeclaration' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_routineDeclaration (C_Compiler & inLexique,
                                const GGS_string& var_cas_ROUTINE_NAME,
                                const GGS_formalParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_ROUTINE_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Routine '")).operator_concat (var_cas_ROUTINE_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void routine_" ;
result << var_cas_ROUTINE_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_488 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_488 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_488 = enumerator_488.nextObject ()))) {
macroValidPointer (operand_488) ;
if ((operand_488->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (9))).boolValue ()) {
result << "GALGASap_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (10)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (10)) ;
}else if ((operand_488->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (11))).boolValue ()) {
result << "GALGASap_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
}else if ((operand_488->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (13))).boolValue ()) {
result << "GALGASap_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
}else {
result << "GALGASap_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'functionDeclaration' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_functionDeclaration (C_Compiler & inLexique,
                                const GGS_string& var_cas_FUNCTION_NAME,
                                const GGS_formalInputParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST,
                                const GGS_string& var_cas_RETURN_TYPE_IDENTIFIER) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_FUNCTION_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt ()
    && var_cas_RETURN_TYPE_IDENTIFIER.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Routine '")).operator_concat (var_cas_FUNCTION_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_RETURN_TYPE_IDENTIFIER ;
result << " function_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_521 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_521 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_521 = enumerator_521.nextObject ()))) {
macroValidPointer (operand_521) ;
result << "GALGASap_" ;
result << operand_521->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
result << " & constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'routineImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_routineImplementation (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_ROUTINE_NAME,
                                const GGS_string& var_cas_ROUTINE_IMPLEMENTATION) {
  C_String result ;
  const bool isBuilt = var_cas_ROUTINE_NAME.isBuilt ()
    && var_cas_ROUTINE_IMPLEMENTATION.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Routine '")).operator_concat (var_cas_ROUTINE_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << var_cas_ROUTINE_IMPLEMENTATION ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'functionImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_functionImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_FUNCTION_NAME,
                                const GGS_string& var_cas_FUNCTION_IMPLEMENTATION,
                                const GGS_formalInputParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST,
                                const GGS_string& var_cas_RETURN_TYPE_IDENTIFIER) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_FUNCTION_NAME.isBuilt ()
    && var_cas_FUNCTION_IMPLEMENTATION.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt ()
    && var_cas_RETURN_TYPE_IDENTIFIER.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Function '")).operator_concat (var_cas_FUNCTION_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << var_cas_FUNCTION_IMPLEMENTATION ;
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "//  Introspection                                                            *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const C_galgas_type_descriptor * functionArgs_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " [" ;
result << var_cas_FORMAL_ARGUMENT_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (12)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
result << "] = {\n" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_845 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_845 = NULL ;
while (((operand_845 = enumerator_845.nextObject ()))) {
macroValidPointer (operand_845) ;
result << "  & kTypeDescriptor_GALGAS_" ;
result << operand_845->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (15)) ;
result << ",\n" ;
}
result << "  NULL\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static GALGASap_object functionWithGenericHeader_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n"
  "                                                 " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "cRootObjectArray & inEffectiveParameterArray,\n"
  "                                                 " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_location & inErrorLocation\n"
  "                                                 " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  const bool ok = inCompiler->checkFunctionCallArguments (" ;
result << var_cas_FUNCTION_NAME.reader_utf8Representation () ;
result << ",\n"
  "                                                          " ;
result << var_cas_FORMAL_ARGUMENT_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (27)) ;
result << ",\n"
  "                                                          functionArgs_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << ",\n"
  "                                                          inEffectiveParameterArray,\n"
  "                                                          inErrorLocation\n"
  "                                                          COMMA_THERE) ;\n"
  "  GALGASap_object result ;\n"
  "  if (ok) {\n" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_2045 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_2045 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2045 = enumerator_2045.nextObject ()))) {
macroValidPointer (operand_2045) ;
result << "    GALGASap_" ;
result << operand_2045->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << " operand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << " = inEffectiveParameterArray.objectAtIndex (" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << " COMMA_THERE) ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "    GALGASap_" ;
result << var_cas_RETURN_TYPE_IDENTIFIER ;
result << " r = function_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_2376 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_2376 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2376 = enumerator_2376.nextObject ()))) {
macroValidPointer (operand_2376) ;
result << "operand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (39)) ;
result << ", " ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "inCompiler COMMA_THERE) ;\n"
  "    result = r.ptrNoVerif () ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "C_galgas_function_descriptor functionDescriptor_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << var_cas_FUNCTION_NAME.reader_utf8Representation () ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "functionWithGenericHeader_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "& kTypeDescriptor_GALGAS_" ;
result << var_cas_RETURN_TYPE_IDENTIFIER ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << var_cas_FORMAL_ARGUMENT_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (52)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "functionArgs_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << ") ;\n"
  "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@semanticDeclarationForGeneration.appendDeclaration'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendDeclaration (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_16506
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_16506 != NULL) {
var_cas_outHeader = GGS_string ("") ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration> gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration (typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendDeclaration (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration
findCategoryReader__semanticDeclarationForGeneration__appendDeclaration (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendDeclaration (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendDeclaration ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@routinePrototypeDeclarationForGeneration.appendDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__routinePrototypeDeclarationForGeneration__appendDeclaration (C_Compiler & inLexique,
                                const cPtr_routinePrototypeDeclarationForGeneration * operand_16718
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_16718 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_routineDeclaration (inLexique, operand_16718->mRoutineName, operand_16718->mFormalArgumentList) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@functionPrototypeDeclarationForGeneration.appendDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__functionPrototypeDeclarationForGeneration__appendDeclaration (C_Compiler & inLexique,
                                const cPtr_functionPrototypeDeclarationForGeneration * operand_17044
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_17044 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_functionDeclaration (inLexique, operand_17044->mFunctionName, operand_17044->mFormalArgumentList, operand_17044->mReturnType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (425))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@onceFunctionDeclarationForGeneration.appendDeclaration'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__onceFunctionDeclarationForGeneration__appendDeclaration (C_Compiler & inLexique,
                                const cPtr_onceFunctionDeclarationForGeneration * operand_17411
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_17411 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_functionDeclaration (inLexique, operand_17411->mFunctionName, GGS_formalInputParameterListForGeneration ::constructor_emptyList (), operand_17411->mReturnType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (435))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@semanticTypeForGeneration.appendDeclaration'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticTypeForGeneration__appendDeclaration (C_Compiler & inLexique,
                                const cPtr_semanticTypeForGeneration * operand_17798
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_17798 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_unifiedTypeHeader (inLexique, operand_17798->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (443)), operand_17798->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (444)), operand_17798->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (445)), operand_17798->mTypeIndex.reader_mSuperType (inLexique COMMA_SOURCE_FILE_AT_LINE (446)), operand_17798->mTypeIndex.reader_mTypeKindEnum (inLexique COMMA_SOURCE_FILE_AT_LINE (447)), operand_17798->mTypeIndex.reader_mCurrentTypedAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (448)), operand_17798->mTypeIndex.reader_mInheritedTypedAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (449)), operand_17798->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (450)), operand_17798->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (451)), operand_17798->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (452)), operand_17798->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (453)), operand_17798->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (454)), operand_17798->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (455)), operand_17798->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (456)), operand_17798->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (457)), operand_17798->mTypeIndex.reader_mNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (458)), operand_17798->mTypeIndex.reader_mEnumConstantList (inLexique COMMA_SOURCE_FILE_AT_LINE (459)), operand_17798->mTypeIndex.reader_mPrivateDataMemberList (inLexique COMMA_SOURCE_FILE_AT_LINE (460)), operand_17798->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (461))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@genericTypeForGeneration.appendDeclaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__genericTypeForGeneration__appendDeclaration (C_Compiler & inLexique,
                                const cPtr_genericTypeForGeneration * operand_18753
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_18753 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_genericTypeHeader (inLexique, operand_18753->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (469)), operand_18753->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (470))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticDeclarationForGeneration.appendAutoPointerClassDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_19409
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_19409 != NULL) {
var_cas_outHeader = GGS_string ("") ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendAutoPointerClassDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration> gDispatchTableForReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration (typeCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendAutoPointerClassDeclaration (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration
findCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendAutoPointerClassDeclaration ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticTypeForGeneration.appendAutoPointerClassDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticTypeForGeneration__appendAutoPointerClassDeclaration (C_Compiler & inLexique,
                                const cPtr_semanticTypeForGeneration * operand_19622
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_19622 != NULL) {
const GGS_bool cond_19714 = (operand_19622->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (487))).operator_isEqual (GGS_string ("object")) ;
if (cond_19714.isBuiltAndTrue ()) {
var_cas_outHeader = GGS_string ("") ;
}else if (cond_19714.isBuiltAndFalse ()) {
const GGS_bool cond_20609 = ((operand_19622->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (489))).operator_and (function_autoBoxing (inLexique COMMA_SOURCE_FILE_AT_LINE (489)))).operator_isNotEqual (GGS_uint (0U)) ;
if (cond_20609.isBuiltAndTrue ()) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_autoBoxingClassHeader (inLexique, operand_19622->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (491)), operand_19622->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (492)), operand_19622->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (493)), operand_19622->mTypeIndex.reader_mSuperType (inLexique COMMA_SOURCE_FILE_AT_LINE (494)), operand_19622->mTypeIndex.reader_mTypeKindEnum (inLexique COMMA_SOURCE_FILE_AT_LINE (495)), operand_19622->mTypeIndex.reader_mCurrentTypedAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (496)), operand_19622->mTypeIndex.reader_mInheritedTypedAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (497)), operand_19622->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (498)), operand_19622->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (499)), operand_19622->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (500)), operand_19622->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (501)), operand_19622->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (502)), operand_19622->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (503)), operand_19622->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (504)), operand_19622->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (505)), operand_19622->mTypeIndex.reader_mNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (506)), operand_19622->mTypeIndex.reader_mEnumConstantList (inLexique COMMA_SOURCE_FILE_AT_LINE (507)), operand_19622->mTypeIndex.reader_mPrivateDataMemberList (inLexique COMMA_SOURCE_FILE_AT_LINE (508)), operand_19622->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (509))) ;
}else if (cond_20609.isBuiltAndFalse ()) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_autoPointerClassHeader (inLexique, operand_19622->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (513)), operand_19622->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (514)), operand_19622->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (515)), operand_19622->mTypeIndex.reader_mSuperType (inLexique COMMA_SOURCE_FILE_AT_LINE (516)), operand_19622->mTypeIndex.reader_mTypeKindEnum (inLexique COMMA_SOURCE_FILE_AT_LINE (517)), operand_19622->mTypeIndex.reader_mCurrentTypedAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (518)), operand_19622->mTypeIndex.reader_mInheritedTypedAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (519)), operand_19622->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (520)), operand_19622->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (521)), operand_19622->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (522)), operand_19622->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (523)), operand_19622->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (524)), operand_19622->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (525)), operand_19622->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (526)), operand_19622->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (527)), operand_19622->mTypeIndex.reader_mNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (528)), operand_19622->mTypeIndex.reader_mEnumConstantList (inLexique COMMA_SOURCE_FILE_AT_LINE (529)), operand_19622->mTypeIndex.reader_mPrivateDataMemberList (inLexique COMMA_SOURCE_FILE_AT_LINE (530)), operand_19622->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (531))) ;
}
}
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticDeclarationForGeneration.appendSpecificDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendSpecificDeclaration (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_21918
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_21918 != NULL) {
var_cas_outHeader = GGS_string ("") ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendSpecificDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendSpecificDeclaration> gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificDeclaration ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendSpecificDeclaration (typeCategoryReader__semanticDeclarationForGeneration__appendSpecificDeclaration inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificDeclaration.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendSpecificDeclaration (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendSpecificDeclaration
findCategoryReader__semanticDeclarationForGeneration__appendSpecificDeclaration (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendSpecificDeclaration result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificDeclaration.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificDeclaration (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendSpecificDeclaration (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificDeclaration.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendSpecificDeclaration ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category reader '@mapTypeForGeneration.appendSpecificDeclaration'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapTypeForGeneration__appendSpecificDeclaration (C_Compiler & inLexique,
                                const cPtr_mapTypeForGeneration * operand_22118
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_22118 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_mapTypeSpecificDeclaration (inLexique, operand_22118->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (550)), operand_22118->mTypedAttributeList) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticDeclarationForGeneration.appendAutoPointerClassImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_22790
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_22790 != NULL) {
var_cas_outImplementation = GGS_string ("") ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendAutoPointerClassImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation> gDispatchTableForReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation (typeCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendAutoPointerClassImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation
findCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendAutoPointerClassImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticTypeForGeneration.appendAutoPointerClassImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticTypeForGeneration__appendAutoPointerClassImplementation (C_Compiler & inLexique,
                                const cPtr_semanticTypeForGeneration * operand_23022
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_23022 != NULL) {
const GGS_bool cond_23130 = (operand_23022->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (569))).operator_isEqual (GGS_string ("object")) ;
if (cond_23130.isBuiltAndTrue ()) {
var_cas_outImplementation = GGS_string ("") ;
}else if (cond_23130.isBuiltAndFalse ()) {
const GGS_bool cond_23470 = ((operand_23022->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (571))).operator_and (function_autoBoxing (inLexique COMMA_SOURCE_FILE_AT_LINE (571)))).operator_isNotEqual (GGS_uint (0U)) ;
if (cond_23470.isBuiltAndTrue ()) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_autoBoxingClassImplementation (inLexique, operand_23022->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (573)), operand_23022->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (574)), operand_23022->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (575)), operand_23022->mTypeIndex.reader_mCurrentTypedAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (576))) ;
}else if (cond_23470.isBuiltAndFalse ()) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_autoPointerClassImplementation (inLexique, operand_23022->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (580)), operand_23022->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (581)), operand_23022->mTypeIndex.reader_mSuperType (inLexique COMMA_SOURCE_FILE_AT_LINE (582)).reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (582)), operand_23022->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (583)), operand_23022->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (584)), operand_23022->mTypeIndex.reader_mNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (585))) ;
}
}
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticDeclarationForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendTypeGenericImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_24391
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_24391 != NULL) {
var_cas_outImplementation = GGS_string ("") ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation> gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendTypeGenericImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation
findCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendTypeGenericImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticTypeForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticTypeForGeneration__appendTypeGenericImplementation (C_Compiler & inLexique,
                                const cPtr_semanticTypeForGeneration * operand_24617
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_24617 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_unifiedTypeImplementation (inLexique, operand_24617->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (605)), operand_24617->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (606)), operand_24617->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (607)), operand_24617->mTypeIndex.reader_mSuperType (inLexique COMMA_SOURCE_FILE_AT_LINE (608)), operand_24617->mTypeIndex.reader_mTypeKindEnum (inLexique COMMA_SOURCE_FILE_AT_LINE (609)), operand_24617->mTypeIndex.reader_mCurrentTypedAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (610)), operand_24617->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (611)), operand_24617->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (612)), operand_24617->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (613)), operand_24617->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (614)), operand_24617->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (615)), operand_24617->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (616)), operand_24617->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (617)), operand_24617->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (618)), operand_24617->mTypeIndex.reader_mNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (619))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@genericTypeForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__genericTypeForGeneration__appendTypeGenericImplementation (C_Compiler & inLexique,
                                const cPtr_genericTypeForGeneration * operand_25451
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_25451 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_genericTypeImplementation (inLexique, operand_25451->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (628)), operand_25451->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (629)), operand_25451->mTypeIndex.reader_mSuperType (inLexique COMMA_SOURCE_FILE_AT_LINE (630))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticDeclarationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendSpecificImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_26154
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_26154 != NULL) {
var_cas_outImplementation = GGS_string ("") ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation> gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendSpecificImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation
findCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendSpecificImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@primitiveTypeForGeneration.appendSpecificImplementation' *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__primitiveTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_primitiveTypeForGeneration * operand_26378
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_26378 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_predefinedTypeSpecificImplementation (inLexique, operand_26378->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (648)), operand_26378->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (649)), operand_26378->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (650)), operand_26378->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (651)), operand_26378->mTypeIndex.reader_mNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (652))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@listTypeForGeneration.appendSpecificImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__listTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_listTypeForGeneration * operand_26884
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_26884 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_listTypeSpecificImplementation (inLexique, operand_26884->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (660)), operand_26884->mTypedAttributeList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category reader '@listmapTypeForGeneration.appendSpecificImplementation'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__listmapTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_listmapTypeForGeneration * operand_27256
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_27256 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_listmapTypeSpecificImplementation (inLexique, operand_27256->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (669)), operand_27256->mAssociatedListTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (670)), operand_27256->mAssociatedListTypedAttributeList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category reader '@mapTypeForGeneration.appendSpecificImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_mapTypeForGeneration * operand_27698
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_27698 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_mapTypeSpecificImplementation (inLexique, operand_27698->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (679)), operand_27698->mTypedAttributeList, operand_27698->mInsertMethodList, operand_27698->mSearchMethodList, operand_27698->mRemoveMethodList, operand_27698->mHasInsertOrReplaceModifier, operand_27698->mWithAccessorMap) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@sortedListTypeForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__sortedListTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_sortedListTypeForGeneration * operand_28196
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_28196 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_sortedlistTypeSpecificImplementation (inLexique, operand_28196->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (693)), operand_28196->mTypedAttributeList, operand_28196->mSortDescriptorList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category reader '@structTypeForGeneration.appendSpecificImplementation'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__structTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_structTypeForGeneration * operand_28598
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_28598 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_structTypeSpecificImplementation (inLexique, operand_28598->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (703)), operand_28598->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (704)), operand_28598->mTypedAttributeList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@enumTypeForGeneration.appendSpecificImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__enumTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_enumTypeForGeneration * operand_28991
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_28991 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_enumTypeSpecificImplementation (inLexique, operand_28991->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (713)), operand_28991->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (714)), operand_28991->mConstantList, operand_28991->mEnumMessageList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@mapProxyTypeForGeneration.appendSpecificImplementation'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapProxyTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_mapProxyTypeForGeneration * operand_29402
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_29402 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_mapProxyTypeSpecificImplementation (inLexique, operand_29402->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (724)), operand_29402->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (725)), operand_29402->mAssociatedMapTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (726)), operand_29402->mAssociatedMapTypedAttributeList, operand_29402->mSearchMethodList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@classTypeForGeneration.appendSpecificImplementation'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__classTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_classTypeForGeneration * operand_29890
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_29890 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_classTypeSpecificImplementation (inLexique, operand_29890->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (736)), operand_29890->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (737)), ((operand_29890->mSuperClass.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (738))).isBuiltAndTrue () ? (GGS_string ("class")) : (operand_29890->mSuperClass.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (738)))), operand_29890->mTypedAttributeList, operand_29890->mAllTypedAttributeList, operand_29890->mAllTypedAttributeList.reader_subListWithRange (inLexique, GGS_uint (0U), operand_29890->mAllTypedAttributeList.reader_length ().substract_operation (inLexique, operand_29890->mTypedAttributeList.reader_length () COMMA_SOURCE_FILE_AT_LINE (741)) COMMA_SOURCE_FILE_AT_LINE (741)), operand_29890->mIsAbstract, operand_29890->mMethodList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@routineImplementationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__routineImplementationForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_routineImplementationForGeneration * operand_30561
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_30561 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_routineImplementation (inLexique, operand_30561->mRoutineName, function_generateProcedure (inLexique, (GGS_string ("routine_")).operator_concat (operand_30561->mRoutineName.reader_identifierRepresentation ()), operand_30561->mFormalArgumentList, operand_30561->mRoutineInstructionList, GGS_bool (false), GGS_string ("C_Compiler"), GGS_bool (true), GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (752))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@functionImplementationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__functionImplementationForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_functionImplementationForGeneration * operand_31198
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_31198 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_functionImplementation (inLexique, operand_31198->mFunctionName, function_generateFunction (inLexique, (GGS_string ("function_")).operator_concat (operand_31198->mFunctionName.reader_identifierRepresentation ()), operand_31198->mFormalArgumentList, operand_31198->mFunctionInstructionList, GGS_string ("C_Compiler"), operand_31198->mReturnType.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (774)), operand_31198->mResultVariableCppName COMMA_SOURCE_FILE_AT_LINE (769)), operand_31198->mFormalArgumentList, operand_31198->mReturnType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (778))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@onceFunctionDeclarationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__onceFunctionDeclarationForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_onceFunctionDeclarationForGeneration * operand_31821
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_31821 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_functionImplementation (inLexique, operand_31821->mFunctionName, function_generateFunction (inLexique, (GGS_string ("function_")).operator_concat (operand_31821->mFunctionName.reader_identifierRepresentation ()), GGS_formalInputParameterListForGeneration ::constructor_emptyList (), operand_31821->mFunctionInstructionList, GGS_string ("C_Compiler"), operand_31821->mReturnType.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (792)), operand_31821->mResultVariableCppName COMMA_SOURCE_FILE_AT_LINE (787)), GGS_formalInputParameterListForGeneration ::constructor_emptyList (), operand_31821->mReturnType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (796))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticGeneration (void) {
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration (category_reader__semanticDeclarationForGeneration__appendDeclaration, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration) category_reader__routinePrototypeDeclarationForGeneration__appendDeclaration, gClassInfoFor__routinePrototypeDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration) category_reader__functionPrototypeDeclarationForGeneration__appendDeclaration, gClassInfoFor__functionPrototypeDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration) category_reader__onceFunctionDeclarationForGeneration__appendDeclaration, gClassInfoFor__onceFunctionDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration) category_reader__semanticTypeForGeneration__appendDeclaration, gClassInfoFor__semanticTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration) category_reader__genericTypeForGeneration__appendDeclaration, gClassInfoFor__genericTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration (category_reader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration) category_reader__semanticTypeForGeneration__appendAutoPointerClassDeclaration, gClassInfoFor__semanticTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificDeclaration (category_reader__semanticDeclarationForGeneration__appendSpecificDeclaration, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificDeclaration) category_reader__mapTypeForGeneration__appendSpecificDeclaration, gClassInfoFor__mapTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation (category_reader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation) category_reader__semanticTypeForGeneration__appendAutoPointerClassImplementation, gClassInfoFor__semanticTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (category_reader__semanticDeclarationForGeneration__appendTypeGenericImplementation, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation) category_reader__semanticTypeForGeneration__appendTypeGenericImplementation, gClassInfoFor__semanticTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation) category_reader__genericTypeForGeneration__appendTypeGenericImplementation, gClassInfoFor__genericTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (category_reader__semanticDeclarationForGeneration__appendSpecificImplementation, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__primitiveTypeForGeneration__appendSpecificImplementation, gClassInfoFor__primitiveTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__listTypeForGeneration__appendSpecificImplementation, gClassInfoFor__listTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__listmapTypeForGeneration__appendSpecificImplementation, gClassInfoFor__listmapTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__mapTypeForGeneration__appendSpecificImplementation, gClassInfoFor__mapTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__sortedListTypeForGeneration__appendSpecificImplementation, gClassInfoFor__sortedListTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__structTypeForGeneration__appendSpecificImplementation, gClassInfoFor__structTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__enumTypeForGeneration__appendSpecificImplementation, gClassInfoFor__enumTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__mapProxyTypeForGeneration__appendSpecificImplementation, gClassInfoFor__mapProxyTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__classTypeForGeneration__appendSpecificImplementation, gClassInfoFor__classTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__routineImplementationForGeneration__appendSpecificImplementation, gClassInfoFor__routineImplementationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__functionImplementationForGeneration__appendSpecificImplementation, gClassInfoFor__functionImplementationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__onceFunctionDeclarationForGeneration__appendSpecificImplementation, gClassInfoFor__onceFunctionDeclarationForGeneration.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_semanticGeneration (void) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration.free () ;
  gDispatchTableForReader__semanticDeclarationForGeneration__appendAutoPointerClassDeclaration.free () ;
  gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificDeclaration.free () ;
  gDispatchTableForReader__semanticDeclarationForGeneration__appendAutoPointerClassImplementation.free () ;
  gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.free () ;
  gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticGeneration (prologueRoutineFor_semanticGeneration, epilogueRoutineFor_semanticGeneration) ;

//---------------------------------------------------------------------------*

