//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'semanticGeneration.cpp'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     october 29th, 2010, at 22h59'41"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "semanticGeneration.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticGeneration.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of function "generateProcedure"               *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string function_generateProcedure (C_CompilerEx & inLexique,
                                const GGS_string  var_cas_inProcedureName,
                                const GGS_formalParameterListForGeneration   var_cas_inFormalArgumentList,
                                const GGS_semanticInstructionListForGeneration   var_cas_inInstructionList,
                                const GGS_bool  var_cas_inProcedureIsConst,
                                const GGS_string  var_cas_inCompilerTypeName,
                                const GGS_bool  var_cas_inGenerateLocationArgs,
                                const GGS_bool  var_cas_inGenerateResetTemplateString COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER function_generateProcedure at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_outGeneratedCode ;
  GGS_stringset  var_cas_unusedVariableCppNameSet = GGS_stringset ::constructor_emptySet () ;
  const GGS_bool cond_2632 = (var_cas_inGenerateResetTemplateString).operator_not () ;
  if (cond_2632.isBuiltAndTrue ()) {
    var_cas_unusedVariableCppNameSet.addAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (46))) ;
  }
  {
    GGS_formalParameterListForGeneration::cEnumerator enumerator_2668 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalParameterListForGeneration::cElement * operand_2668 = NULL ;
    while (((operand_2668 = enumerator_2668.nextObject ()))) {
      macroValidPointer (operand_2668) ;
      const GGS_bool cond_2825 = (operand_2668->mFormalArgumentPassingMode).operator_isNotEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (49))) ;
      if (cond_2825.isBuiltAndTrue ()) {
        var_cas_unusedVariableCppNameSet.addAssign_operation (operand_2668->mFormalArgumentCppName) ;
      }
    }
  }
  GGS_uint  var_cas_temporaryVariableIndex = GGS_uint (0U) ;
  GGS_string var_cas_routineBody = GGS_string ("") ;
  var_cas_routineBody.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (56)) ;
  {
    GGS_semanticInstructionListForGeneration::cEnumerator enumerator_2999 (var_cas_inInstructionList, true) ;
    const GGS_semanticInstructionListForGeneration::cElement * operand_2999 = NULL ;
    while (((operand_2999 = enumerator_2999.nextObject ()))) {
      macroValidPointer (operand_2999) ;
      { typeCategoryMethod__semanticInstructionForGeneration__generateInstruction method = findCategoryMethod__semanticInstructionForGeneration__generateInstruction (operand_2999->mInstruction.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_2999->mInstruction (HERE), var_cas_temporaryVariableIndex, var_cas_unusedVariableCppNameSet, var_cas_routineBody COMMA_SOURCE_FILE_AT_LINE (58)) ;
        }
      }
    }
  }
  var_cas_routineBody.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (60)) ;
  var_cas_outGeneratedCode = ((GGS_string ("void ")).operator_concat (var_cas_inProcedureName)).operator_concat (GGS_string (" (")) ;
  const GGS_uint  var_cas_colRef = var_cas_outGeneratedCode.reader_currentColumn () ;
  {
    GGS_formalParameterListForGeneration::cEnumerator enumerator_3336 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalParameterListForGeneration::cElement * operand_3336 = NULL ;
    while (((operand_3336 = enumerator_3336.nextObject ()))) {
      macroValidPointer (operand_3336) ;
      switch (operand_3336->mFormalArgumentPassingMode.enumValue ()) {
      case GGS_formalArgumentPassingModeAST::enum_argumentConstantIn:
        {
        var_cas_outGeneratedCode.appendCString ("const GALGAS_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3336->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (68))) ;
        var_cas_outGeneratedCode.appendCString (" ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentInOut:
        {
        var_cas_outGeneratedCode.appendCString ("GALGAS_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3336->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (70))) ;
        var_cas_outGeneratedCode.appendCString (" & ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentOut:
        {
        var_cas_outGeneratedCode.appendCString ("GALGAS_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3336->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (72))) ;
        var_cas_outGeneratedCode.appendCString (" & ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentIn:
        {
        var_cas_outGeneratedCode.appendCString ("GALGAS_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3336->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (74))) ;
        var_cas_outGeneratedCode.appendCString (" ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::kNotBuilt:
        break ;
      }
      const GGS_bool cond_4023 = var_cas_unusedVariableCppNameSet.reader_hasKey (operand_3336->mFormalArgumentCppName) ;
      if (cond_4023.isBuiltAndTrue ()) {
        var_cas_outGeneratedCode.appendCString ("/* ") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3336->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (" */") ;
      }else if (cond_4023.isBuiltAndFalse ()) {
        var_cas_outGeneratedCode.dotAssign_operation (operand_3336->mFormalArgumentCppName) ;
      }
      var_cas_outGeneratedCode.appendCString (",\n") ;
      var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (82)) ;
    }
  }
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inCompilerTypeName) ;
  var_cas_outGeneratedCode.appendCString (" * ") ;
  const GGS_bool cond_4400 = var_cas_unusedVariableCppNameSet.reader_hasKey (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (86))) ;
  if (cond_4400.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("/* ") ;
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (87))) ;
    var_cas_outGeneratedCode.appendCString (" */") ;
  }else if (cond_4400.isBuiltAndFalse ()) {
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (89))) ;
  }
  const GGS_bool cond_4640 = var_cas_inGenerateLocationArgs ;
  if (cond_4640.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("\n") ;
    var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (93)) ;
    var_cas_outGeneratedCode.appendCString ("COMMA_UNUSED_LOCATION_ARGS") ;
  }
  var_cas_outGeneratedCode.appendCString (")") ;
  const GGS_bool cond_4743 = var_cas_inProcedureIsConst ;
  if (cond_4743.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString (" const") ;
  }
  var_cas_outGeneratedCode.appendCString (" {\n") ;
  {
    GGS_formalParameterListForGeneration::cEnumerator enumerator_4839 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalParameterListForGeneration::cElement * operand_4839 = NULL ;
    while (((operand_4839 = enumerator_4839.nextObject ()))) {
      macroValidPointer (operand_4839) ;
      switch (operand_4839->mFormalArgumentPassingMode.enumValue ()) {
      case GGS_formalArgumentPassingModeAST::enum_argumentOut:
        {
        var_cas_outGeneratedCode.appendCString ("  ") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_4839->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (".drop () ; // Release 'out' argument\n") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentConstantIn:
      case GGS_formalArgumentPassingModeAST::enum_argumentIn:
      case GGS_formalArgumentPassingModeAST::enum_argumentInOut:
        {
        }
        break ;
      case GGS_formalArgumentPassingModeAST::kNotBuilt:
        break ;
      }
    }
  }
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_routineBody) ;
  const GGS_bool cond_5294 = var_cas_inGenerateResetTemplateString ;
  if (cond_5294.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("  ") ;
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (113))) ;
    var_cas_outGeneratedCode.appendCString ("->resetTemplateString () ;\n") ;
  }
  var_cas_outGeneratedCode.appendCString ("}\n"
    "\n") ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE function_generateProcedure\n") ;
  #endif
  return var_cas_outGeneratedCode ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_generateProcedure (C_CompilerEx & inLexique,
                           const GGS_objectlist & inEffectiveParameterArray,
                           const GGS_location & inErrorLocation
                           COMMA_LOCATION_ARGS) {
  const GGS_string arg_0 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (0) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_formalParameterListForGeneration  arg_1 = GGS_formalParameterListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (1) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_semanticInstructionListForGeneration  arg_2 = GGS_semanticInstructionListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (2) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_bool arg_3 = GGS_bool::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (3) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_4 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (4) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_bool arg_5 = GGS_bool::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (5) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_bool arg_6 = GGS_bool::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (6) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string result = function_generateProcedure (inLexique,
                            arg_0,
                            arg_1,
                            arg_2,
                            arg_3,
                            arg_4,
                            arg_5,
                            arg_6
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

static const C_galgas_type_descriptorEX *
kArgumentTypeList_generateProcedure [7] = {& kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_formalParameterListForGeneration ,
                              & kTypeDescriptor_GGS_semanticInstructionListForGeneration ,
                              & kTypeDescriptor_GGS_bool,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_bool,
                              & kTypeDescriptor_GGS_bool} ;

const C_galgas_function_descriptorEX
kFunction_descriptor_generateProcedure ("generateProcedure",
                              functionForGenericCall_generateProcedure,
                              & kTypeDescriptor_GGS_string,
                              7,
                              kArgumentTypeList_generateProcedure) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of function "generateFunction"                *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string function_generateFunction (C_CompilerEx & inLexique,
                                const GGS_string  var_cas_inProcedureName,
                                const GGS_formalInputParameterListForGeneration   var_cas_inFormalArgumentList,
                                const GGS_semanticInstructionListForGeneration   var_cas_inInstructionList,
                                const GGS_string  var_cas_inCompilerTypeName,
                                const GGS_string  var_cas_inResultTypeName,
                                const GGS_string  var_cas_inResultVariableCppName,
                                const GGS_bool  var_cas_inIsStatic COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER function_generateFunction at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_outGeneratedCode ;
  var_cas_outGeneratedCode = GGS_string ("") ;
  GGS_stringset  var_cas_unusedVariableCppNameSet = GGS_stringset ::constructor_emptySet () ;
  var_cas_unusedVariableCppNameSet.addAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (138))) ;
  {
    GGS_formalInputParameterListForGeneration::cEnumerator enumerator_6330 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalInputParameterListForGeneration::cElement * operand_6330 = NULL ;
    while (((operand_6330 = enumerator_6330.nextObject ()))) {
      macroValidPointer (operand_6330) ;
      var_cas_unusedVariableCppNameSet.addAssign_operation (operand_6330->mFormalArgumentCppName) ;
    }
  }
  GGS_uint  var_cas_temporaryVariableIndex = GGS_uint (0U) ;
  GGS_string var_cas_routineBody = GGS_string ("") ;
  var_cas_routineBody.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (146)) ;
  {
    GGS_semanticInstructionListForGeneration::cEnumerator enumerator_6560 (var_cas_inInstructionList, true) ;
    const GGS_semanticInstructionListForGeneration::cElement * operand_6560 = NULL ;
    while (((operand_6560 = enumerator_6560.nextObject ()))) {
      macroValidPointer (operand_6560) ;
      { typeCategoryMethod__semanticInstructionForGeneration__generateInstruction method = findCategoryMethod__semanticInstructionForGeneration__generateInstruction (operand_6560->mInstruction.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_6560->mInstruction (HERE), var_cas_temporaryVariableIndex, var_cas_unusedVariableCppNameSet, var_cas_routineBody COMMA_SOURCE_FILE_AT_LINE (148)) ;
        }
      }
    }
  }
  var_cas_routineBody.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (150)) ;
  const GGS_bool cond_6808 = var_cas_inIsStatic ;
  if (cond_6808.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("static ") ;
  }
  var_cas_outGeneratedCode.appendCString ("GALGAS_") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inResultTypeName.reader_identifierRepresentation ()) ;
  var_cas_outGeneratedCode.appendCString (" ") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inProcedureName) ;
  var_cas_outGeneratedCode.appendCString (" (") ;
  const GGS_uint  var_cas_colRef = var_cas_outGeneratedCode.reader_currentColumn () ;
  {
    GGS_formalInputParameterListForGeneration::cEnumerator enumerator_7041 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalInputParameterListForGeneration::cElement * operand_7041 = NULL ;
    while (((operand_7041 = enumerator_7041.nextObject ()))) {
      macroValidPointer (operand_7041) ;
      var_cas_outGeneratedCode.appendCString ("const GALGAS_") ;
      var_cas_outGeneratedCode.dotAssign_operation (operand_7041->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (160))) ;
      var_cas_outGeneratedCode.appendCString (" & ") ;
      const GGS_bool cond_7289 = var_cas_unusedVariableCppNameSet.reader_hasKey (operand_7041->mFormalArgumentCppName) ;
      if (cond_7289.isBuiltAndTrue ()) {
        var_cas_outGeneratedCode.appendCString ("/* ") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_7041->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (" */") ;
      }else if (cond_7289.isBuiltAndFalse ()) {
        var_cas_outGeneratedCode.dotAssign_operation (operand_7041->mFormalArgumentCppName) ;
      }
      var_cas_outGeneratedCode.appendCString (",\n") ;
      var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (167)) ;
    }
  }
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inCompilerTypeName) ;
  var_cas_outGeneratedCode.appendCString (" * ") ;
  const GGS_bool cond_7666 = var_cas_unusedVariableCppNameSet.reader_hasKey (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (171))) ;
  if (cond_7666.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("/* ") ;
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (172))) ;
    var_cas_outGeneratedCode.appendCString (" */") ;
  }else if (cond_7666.isBuiltAndFalse ()) {
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (174))) ;
  }
  var_cas_outGeneratedCode.appendCString ("\n") ;
  var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (177)) ;
  var_cas_outGeneratedCode.appendCString ("COMMA_UNUSED_LOCATION_ARGS)") ;
  var_cas_outGeneratedCode.appendCString (" {\n") ;
  var_cas_outGeneratedCode.appendCString ("  GALGAS_") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inResultTypeName.reader_identifierRepresentation ()) ;
  var_cas_outGeneratedCode.appendCString (" ") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inResultVariableCppName) ;
  var_cas_outGeneratedCode.appendCString (" ; // Returned variable\n") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_routineBody) ;
  var_cas_outGeneratedCode.appendCString ("//---\n") ;
  var_cas_outGeneratedCode.appendCString ("  return ") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inResultVariableCppName) ;
  var_cas_outGeneratedCode.appendCString (" ;\n") ;
  var_cas_outGeneratedCode.appendCString ("}\n"
    "\n") ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE function_generateFunction\n") ;
  #endif
  return var_cas_outGeneratedCode ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_generateFunction (C_CompilerEx & inLexique,
                           const GGS_objectlist & inEffectiveParameterArray,
                           const GGS_location & inErrorLocation
                           COMMA_LOCATION_ARGS) {
  const GGS_string arg_0 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (0) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_formalInputParameterListForGeneration  arg_1 = GGS_formalInputParameterListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (1) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_semanticInstructionListForGeneration  arg_2 = GGS_semanticInstructionListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (2) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_3 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (3) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_4 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (4) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_5 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (5) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_bool arg_6 = GGS_bool::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (6) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string result = function_generateFunction (inLexique,
                            arg_0,
                            arg_1,
                            arg_2,
                            arg_3,
                            arg_4,
                            arg_5,
                            arg_6
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

static const C_galgas_type_descriptorEX *
kArgumentTypeList_generateFunction [7] = {& kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_formalInputParameterListForGeneration ,
                              & kTypeDescriptor_GGS_semanticInstructionListForGeneration ,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_bool} ;

const C_galgas_function_descriptorEX
kFunction_descriptor_generateFunction ("generateFunction",
                              functionForGenericCall_generateFunction,
                              & kTypeDescriptor_GGS_string,
                              7,
                              kArgumentTypeList_generateFunction) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of function "generateCategoryMethod"             *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string function_generateCategoryMethod (C_CompilerEx & inLexique,
                                const GGS_string  var_cas_inClassName,
                                const GGS_string  var_cas_inBaseClassName,
                                const GGS_string  var_cas_inMethodName,
                                const GGS_formalParameterListForGeneration   var_cas_inFormalArgumentList,
                                const GGS_semanticInstructionListForGeneration   var_cas_inInstructionList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER function_generateCategoryMethod at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_outGeneratedCode ;
  GGS_stringset  var_cas_unusedVariableCppNameSet = GGS_stringset ::constructor_emptySet () ;
  var_cas_unusedVariableCppNameSet.addAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (208))) ;
  var_cas_unusedVariableCppNameSet.addAssign_operation (function_selfMarkName (inLexique COMMA_SOURCE_FILE_AT_LINE (209))) ;
  {
    GGS_formalParameterListForGeneration::cEnumerator enumerator_9206 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalParameterListForGeneration::cElement * operand_9206 = NULL ;
    while (((operand_9206 = enumerator_9206.nextObject ()))) {
      macroValidPointer (operand_9206) ;
      var_cas_unusedVariableCppNameSet.addAssign_operation (operand_9206->mFormalArgumentCppName) ;
    }
  }
  GGS_uint  var_cas_temporaryVariableIndex = GGS_uint (0U) ;
  GGS_string var_cas_routineBody = GGS_string ("") ;
  var_cas_routineBody.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (216)) ;
  {
    GGS_semanticInstructionListForGeneration::cEnumerator enumerator_9436 (var_cas_inInstructionList, true) ;
    const GGS_semanticInstructionListForGeneration::cElement * operand_9436 = NULL ;
    while (((operand_9436 = enumerator_9436.nextObject ()))) {
      macroValidPointer (operand_9436) ;
      { typeCategoryMethod__semanticInstructionForGeneration__generateInstruction method = findCategoryMethod__semanticInstructionForGeneration__generateInstruction (operand_9436->mInstruction.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_9436->mInstruction (HERE), var_cas_temporaryVariableIndex, var_cas_unusedVariableCppNameSet, var_cas_routineBody COMMA_SOURCE_FILE_AT_LINE (218)) ;
        }
      }
    }
  }
  var_cas_routineBody.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (220)) ;
  var_cas_outGeneratedCode = ((((GGS_string ("static void categoryMethod_")).operator_concat (var_cas_inClassName.reader_identifierRepresentation ())).operator_concat (GGS_string ("_"))).operator_concat (var_cas_inMethodName.reader_identifierRepresentation ())).operator_concat (GGS_string (" (")) ;
  const GGS_uint  var_cas_colRef = var_cas_outGeneratedCode.reader_currentColumn () ;
  const GGS_bool cond_9958 = (var_cas_inBaseClassName).operator_isEqual (GGS_string ("")) ;
  if (cond_9958.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("const cPtr_") ;
    var_cas_outGeneratedCode.dotAssign_operation (var_cas_inClassName.reader_identifierRepresentation ()) ;
    var_cas_outGeneratedCode.appendCString (" * ") ;
  }else if (cond_9958.isBuiltAndFalse ()) {
    var_cas_outGeneratedCode.appendCString ("const cPtr_") ;
    var_cas_outGeneratedCode.dotAssign_operation (var_cas_inBaseClassName.reader_identifierRepresentation ()) ;
    var_cas_outGeneratedCode.appendCString (" * ") ;
  }
  const GGS_bool var_cas_currentObjectIsUnused = var_cas_unusedVariableCppNameSet.reader_hasKey (function_selfMarkName (inLexique COMMA_SOURCE_FILE_AT_LINE (229))) ;
  const GGS_bool cond_10236 = var_cas_currentObjectIsUnused ;
  if (cond_10236.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("/* inObject */") ;
  }else if (cond_10236.isBuiltAndFalse ()) {
    var_cas_outGeneratedCode.appendCString ("inObject") ;
  }
  {
    GGS_formalParameterListForGeneration::cEnumerator enumerator_10320 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalParameterListForGeneration::cElement * operand_10320 = NULL ;
    while (((operand_10320 = enumerator_10320.nextObject ()))) {
      macroValidPointer (operand_10320) ;
      var_cas_outGeneratedCode.appendCString (",\n") ;
      var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (238)) ;
      switch (operand_10320->mFormalArgumentPassingMode.enumValue ()) {
      case GGS_formalArgumentPassingModeAST::enum_argumentConstantIn:
        {
        var_cas_outGeneratedCode.appendCString ("const GALGAS_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_10320->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (241))) ;
        var_cas_outGeneratedCode.appendCString (" ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentInOut:
        {
        var_cas_outGeneratedCode.appendCString ("GALGAS_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_10320->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (243))) ;
        var_cas_outGeneratedCode.appendCString (" & ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentOut:
        {
        var_cas_outGeneratedCode.appendCString ("GALGAS_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_10320->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (245))) ;
        var_cas_outGeneratedCode.appendCString (" & ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentIn:
        {
        var_cas_outGeneratedCode.appendCString ("GALGAS_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_10320->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (247))) ;
        var_cas_outGeneratedCode.appendCString (" ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::kNotBuilt:
        break ;
      }
      const GGS_bool cond_11098 = var_cas_unusedVariableCppNameSet.reader_hasKey (operand_10320->mFormalArgumentCppName) ;
      if (cond_11098.isBuiltAndTrue ()) {
        var_cas_outGeneratedCode.appendCString ("/* ") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_10320->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (" */") ;
      }else if (cond_11098.isBuiltAndFalse ()) {
        var_cas_outGeneratedCode.dotAssign_operation (operand_10320->mFormalArgumentCppName) ;
      }
    }
  }
  var_cas_outGeneratedCode.appendCString (",\n") ;
  var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (257)) ;
  var_cas_outGeneratedCode.appendCString ("C_Compiler * ") ;
  const GGS_bool cond_11460 = var_cas_unusedVariableCppNameSet.reader_hasKey (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (259))) ;
  if (cond_11460.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("/* ") ;
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (260))) ;
    var_cas_outGeneratedCode.appendCString (" */") ;
  }else if (cond_11460.isBuiltAndFalse ()) {
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (262))) ;
  }
  var_cas_outGeneratedCode.appendCString ("\n") ;
  var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (265)) ;
  var_cas_outGeneratedCode.appendCString ("COMMA_UNUSED_LOCATION_ARGS") ;
  var_cas_outGeneratedCode.appendCString (") {\n") ;
  const GGS_bool cond_12221 = (var_cas_currentObjectIsUnused).operator_not () ;
  if (cond_12221.isBuiltAndTrue ()) {
    const GGS_bool cond_11907 = (var_cas_inBaseClassName).operator_isEqual (GGS_string ("")) ;
    if (cond_11907.isBuiltAndTrue ()) {
      var_cas_outGeneratedCode.appendCString ("  const cPtr_") ;
      var_cas_outGeneratedCode.dotAssign_operation (var_cas_inClassName.reader_identifierRepresentation ()) ;
      var_cas_outGeneratedCode.appendCString (" * object = inObject ;\n") ;
    }else if (cond_11907.isBuiltAndFalse ()) {
      var_cas_outGeneratedCode.appendCString ("  const cPtr_") ;
      var_cas_outGeneratedCode.dotAssign_operation (var_cas_inClassName.reader_identifierRepresentation ()) ;
      var_cas_outGeneratedCode.appendCString (" * object = (const cPtr_") ;
      var_cas_outGeneratedCode.dotAssign_operation (var_cas_inClassName.reader_identifierRepresentation ()) ;
      var_cas_outGeneratedCode.appendCString (" *) inObject ;\n") ;
    }
    var_cas_outGeneratedCode.appendCString ("  macroValidObject (object, const cPtr_") ;
    var_cas_outGeneratedCode.dotAssign_operation (var_cas_inClassName.reader_identifierRepresentation ()) ;
    var_cas_outGeneratedCode.appendCString (") ;\n") ;
  }
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_routineBody) ;
  var_cas_outGeneratedCode.appendCString ("}") ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE function_generateCategoryMethod\n") ;
  #endif
  return var_cas_outGeneratedCode ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_generateCategoryMethod (C_CompilerEx & inLexique,
                           const GGS_objectlist & inEffectiveParameterArray,
                           const GGS_location & inErrorLocation
                           COMMA_LOCATION_ARGS) {
  const GGS_string arg_0 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (0) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_1 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (1) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_2 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (2) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_formalParameterListForGeneration  arg_3 = GGS_formalParameterListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (3) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_semanticInstructionListForGeneration  arg_4 = GGS_semanticInstructionListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (4) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string result = function_generateCategoryMethod (inLexique,
                            arg_0,
                            arg_1,
                            arg_2,
                            arg_3,
                            arg_4
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

static const C_galgas_type_descriptorEX *
kArgumentTypeList_generateCategoryMethod [5] = {& kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_formalParameterListForGeneration ,
                              & kTypeDescriptor_GGS_semanticInstructionListForGeneration } ;

const C_galgas_function_descriptorEX
kFunction_descriptor_generateCategoryMethod ("generateCategoryMethod",
                              functionForGenericCall_generateCategoryMethod,
                              & kTypeDescriptor_GGS_string,
                              5,
                              kArgumentTypeList_generateCategoryMethod) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of function "generateCategoryReader"             *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string function_generateCategoryReader (C_CompilerEx & inLexique,
                                const GGS_string  var_cas_inClassName,
                                const GGS_string  var_cas_inBaseClassName,
                                const GGS_string  var_cas_inReaderName,
                                const GGS_formalInputParameterListForGeneration   var_cas_inFormalArgumentList,
                                const GGS_semanticInstructionListForGeneration   var_cas_inInstructionList,
                                const GGS_string  var_cas_inCompilerTypeName,
                                const GGS_string  var_cas_inResultTypeName,
                                const GGS_string  var_cas_inResultVariableCppName COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER function_generateCategoryReader at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_outGeneratedCode ;
  var_cas_outGeneratedCode = GGS_string ("") ;
  GGS_stringset  var_cas_unusedVariableCppNameSet = GGS_stringset ::constructor_emptySet () ;
  var_cas_unusedVariableCppNameSet.addAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (302))) ;
  var_cas_unusedVariableCppNameSet.addAssign_operation (function_selfMarkName (inLexique COMMA_SOURCE_FILE_AT_LINE (303))) ;
  {
    GGS_formalInputParameterListForGeneration::cEnumerator enumerator_13303 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalInputParameterListForGeneration::cElement * operand_13303 = NULL ;
    while (((operand_13303 = enumerator_13303.nextObject ()))) {
      macroValidPointer (operand_13303) ;
      var_cas_unusedVariableCppNameSet.addAssign_operation (operand_13303->mFormalArgumentCppName) ;
    }
  }
  GGS_uint  var_cas_temporaryVariableIndex = GGS_uint (0U) ;
  GGS_string var_cas_routineBody = GGS_string ("") ;
  var_cas_routineBody.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (310)) ;
  {
    GGS_semanticInstructionListForGeneration::cEnumerator enumerator_13533 (var_cas_inInstructionList, true) ;
    const GGS_semanticInstructionListForGeneration::cElement * operand_13533 = NULL ;
    while (((operand_13533 = enumerator_13533.nextObject ()))) {
      macroValidPointer (operand_13533) ;
      { typeCategoryMethod__semanticInstructionForGeneration__generateInstruction method = findCategoryMethod__semanticInstructionForGeneration__generateInstruction (operand_13533->mInstruction.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_13533->mInstruction (HERE), var_cas_temporaryVariableIndex, var_cas_unusedVariableCppNameSet, var_cas_routineBody COMMA_SOURCE_FILE_AT_LINE (312)) ;
        }
      }
    }
  }
  var_cas_routineBody.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (314)) ;
  var_cas_outGeneratedCode.appendCString ("static GALGAS_") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inResultTypeName.reader_identifierRepresentation ()) ;
  var_cas_outGeneratedCode.appendCString (" categoryReader_") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inClassName.reader_identifierRepresentation ()) ;
  var_cas_outGeneratedCode.appendCString ("_") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inReaderName.reader_identifierRepresentation ()) ;
  var_cas_outGeneratedCode.appendCString (" (") ;
  const GGS_uint  var_cas_colRef = var_cas_outGeneratedCode.reader_currentColumn () ;
  const GGS_bool cond_14131 = (var_cas_inBaseClassName).operator_isEqual (GGS_string ("")) ;
  if (cond_14131.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("const cPtr_") ;
    var_cas_outGeneratedCode.dotAssign_operation (var_cas_inClassName.reader_identifierRepresentation ()) ;
    var_cas_outGeneratedCode.appendCString (" * ") ;
  }else if (cond_14131.isBuiltAndFalse ()) {
    var_cas_outGeneratedCode.appendCString ("const cPtr_") ;
    var_cas_outGeneratedCode.dotAssign_operation (var_cas_inBaseClassName.reader_identifierRepresentation ()) ;
    var_cas_outGeneratedCode.appendCString (" * ") ;
  }
  const GGS_bool var_cas_currentObjectIsUnused = var_cas_unusedVariableCppNameSet.reader_hasKey (function_selfMarkName (inLexique COMMA_SOURCE_FILE_AT_LINE (324))) ;
  const GGS_bool cond_14409 = var_cas_currentObjectIsUnused ;
  if (cond_14409.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("/* inObject */") ;
  }else if (cond_14409.isBuiltAndFalse ()) {
    var_cas_outGeneratedCode.appendCString ("inObject") ;
  }
  var_cas_outGeneratedCode.appendCString (",\n") ;
  var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (331)) ;
  {
    GGS_formalInputParameterListForGeneration::cEnumerator enumerator_14580 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalInputParameterListForGeneration::cElement * operand_14580 = NULL ;
    while (((operand_14580 = enumerator_14580.nextObject ()))) {
      macroValidPointer (operand_14580) ;
      var_cas_outGeneratedCode.appendCString ("const GALGAS_") ;
      var_cas_outGeneratedCode.dotAssign_operation (operand_14580->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (334))) ;
      var_cas_outGeneratedCode.appendCString (" & ") ;
      const GGS_bool cond_14828 = var_cas_unusedVariableCppNameSet.reader_hasKey (operand_14580->mFormalArgumentCppName) ;
      if (cond_14828.isBuiltAndTrue ()) {
        var_cas_outGeneratedCode.appendCString ("/* ") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_14580->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (" */") ;
      }else if (cond_14828.isBuiltAndFalse ()) {
        var_cas_outGeneratedCode.dotAssign_operation (operand_14580->mFormalArgumentCppName) ;
      }
      var_cas_outGeneratedCode.appendCString (",\n") ;
      var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (341)) ;
    }
  }
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inCompilerTypeName) ;
  var_cas_outGeneratedCode.appendCString (" * ") ;
  const GGS_bool cond_15205 = var_cas_unusedVariableCppNameSet.reader_hasKey (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (345))) ;
  if (cond_15205.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("/* ") ;
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (346))) ;
    var_cas_outGeneratedCode.appendCString (" */") ;
  }else if (cond_15205.isBuiltAndFalse ()) {
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (348))) ;
  }
  var_cas_outGeneratedCode.appendCString ("\n") ;
  var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (351)) ;
  var_cas_outGeneratedCode.appendCString ("COMMA_UNUSED_LOCATION_ARGS)") ;
  var_cas_outGeneratedCode.appendCString (" {\n") ;
  var_cas_outGeneratedCode.appendCString ("  GALGAS_") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inResultTypeName.reader_identifierRepresentation ()) ;
  var_cas_outGeneratedCode.appendCString (" ") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inResultVariableCppName) ;
  var_cas_outGeneratedCode.appendCString (" ; // Returned variable\n") ;
  const GGS_bool cond_16161 = (var_cas_currentObjectIsUnused).operator_not () ;
  if (cond_16161.isBuiltAndTrue ()) {
    const GGS_bool cond_15847 = (var_cas_inBaseClassName).operator_isEqual (GGS_string ("")) ;
    if (cond_15847.isBuiltAndTrue ()) {
      var_cas_outGeneratedCode.appendCString ("  const cPtr_") ;
      var_cas_outGeneratedCode.dotAssign_operation (var_cas_inClassName.reader_identifierRepresentation ()) ;
      var_cas_outGeneratedCode.appendCString (" * object = inObject ;\n") ;
    }else if (cond_15847.isBuiltAndFalse ()) {
      var_cas_outGeneratedCode.appendCString ("  const cPtr_") ;
      var_cas_outGeneratedCode.dotAssign_operation (var_cas_inClassName.reader_identifierRepresentation ()) ;
      var_cas_outGeneratedCode.appendCString (" * object = (const cPtr_") ;
      var_cas_outGeneratedCode.dotAssign_operation (var_cas_inClassName.reader_identifierRepresentation ()) ;
      var_cas_outGeneratedCode.appendCString (" *) inObject ;\n") ;
    }
    var_cas_outGeneratedCode.appendCString ("  macroValidObject (object, const cPtr_") ;
    var_cas_outGeneratedCode.dotAssign_operation (var_cas_inClassName.reader_identifierRepresentation ()) ;
    var_cas_outGeneratedCode.appendCString (") ;\n") ;
  }
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_routineBody) ;
  var_cas_outGeneratedCode.appendCString ("//---\n") ;
  var_cas_outGeneratedCode.appendCString ("  return ") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inResultVariableCppName) ;
  var_cas_outGeneratedCode.appendCString (" ;\n") ;
  var_cas_outGeneratedCode.appendCString ("}\n"
    "\n") ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE function_generateCategoryReader\n") ;
  #endif
  return var_cas_outGeneratedCode ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_generateCategoryReader (C_CompilerEx & inLexique,
                           const GGS_objectlist & inEffectiveParameterArray,
                           const GGS_location & inErrorLocation
                           COMMA_LOCATION_ARGS) {
  const GGS_string arg_0 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (0) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_1 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (1) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_2 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (2) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_formalInputParameterListForGeneration  arg_3 = GGS_formalInputParameterListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (3) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_semanticInstructionListForGeneration  arg_4 = GGS_semanticInstructionListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (4) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_5 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (5) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_6 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (6) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_7 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (7) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string result = function_generateCategoryReader (inLexique,
                            arg_0,
                            arg_1,
                            arg_2,
                            arg_3,
                            arg_4,
                            arg_5,
                            arg_6,
                            arg_7
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

static const C_galgas_type_descriptorEX *
kArgumentTypeList_generateCategoryReader [8] = {& kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_formalInputParameterListForGeneration ,
                              & kTypeDescriptor_GGS_semanticInstructionListForGeneration ,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_string} ;

const C_galgas_function_descriptorEX
kFunction_descriptor_generateCategoryReader ("generateCategoryReader",
                              functionForGenericCall_generateCategoryReader,
                              & kTypeDescriptor_GGS_string,
                              8,
                              kArgumentTypeList_generateCategoryReader) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of wrapper 'typeGenerationTemplate'             *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapperEx * gWrapperAllFiles_typeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- All sub-directories of '' directory

static const cDirectoryWrapperEx * gWrapperAllDirectories_typeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- Directory ''

const cDirectoryWrapperEx gWrapperDirectory_0_typeGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_typeGenerationTemplate_0,
  0,
  gWrapperAllDirectories_typeGenerationTemplate_0
) ;

//---------------------------------------------------------------------------*
//                                                                           *
//'unifiedClassBodyForType' template of 'typeGenerationTemplate' filewrapper *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_bool& var_cas_IS_CONCRETE,
                                const GGS_constructorMap & var_cas_CONSTRUCTOR_MAP,
                                const GGS_readerMap & var_cas_READER_MAP,
                                const GGS_modifierMap & var_cas_MODIFIER_MAP,
                                const GGS_instanceMethodMap & var_cas_INSTANCE_METHOD_MAP,
                                const GGS_classMethodMap & var_cas_CLASS_METHOD_MAP,
                                const GGS_enumerationDescriptorList & var_cas_ENUMERATION_DESCRIPTOR_LIST,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_unifiedTypeMapProxyList & var_cas_ADD_ASSIGN_ARGUMENT_LIST,
                                const GGS_withAccessorMap & var_cas_WITH_ACCESSOR_MAP) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_IS_CONCRETE.isBuilt ()
    && var_cas_CONSTRUCTOR_MAP.isBuilt ()
    && var_cas_READER_MAP.isBuilt ()
    && var_cas_MODIFIER_MAP.isBuilt ()
    && var_cas_INSTANCE_METHOD_MAP.isBuilt ()
    && var_cas_CLASS_METHOD_MAP.isBuilt ()
    && var_cas_ENUMERATION_DESCRIPTOR_LIST.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_ADD_ASSIGN_ARGUMENT_LIST.isBuilt ()
    && var_cas_WITH_ACCESSOR_MAP.isBuilt () ;
  if (isBuilt) {
    result << "//-- Start of generic part --*\n"
      "\n"
      "//--------------------------------- Object cloning\n"
      "  protected : virtual AC_GALGAS_root * clonedObject (void) const ;\n"
      "\n"
      "//--------------------------------- Object extraction\n"
      "  public : static GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " extractObject (" ;
    columnMarker = result.currentColumn () ;
    result << "const GALGAS_object & inObject,\n"
      "               " ;
    result.appendSpacesUntilColumn (columnMarker) ;
    result << "C_Compiler * inCompiler,\n"
      "               " ;
    result.appendSpacesUntilColumn (columnMarker) ;
    result << "const GALGAS_location & inErrorLocation\n"
      "               " ;
    result.appendSpacesUntilColumn (columnMarker) ;
    result << "COMMA_LOCATION_ARGS) ;\n"
      "\n" ;
    if ((var_cas_CONSTRUCTOR_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- GALGAS constructors\n" ;
      GGS_constructorMap::cEnumerator enumerator_573 (var_cas_CONSTRUCTOR_MAP, true) ;
      const GGS_constructorMap::cElement * operand_573 = NULL ;
      while (((operand_573 = enumerator_573.nextObject ()))) {
        macroValidPointer (operand_573) ;
        result << "  public : static GALGAS_" ;
        result << operand_573->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
        result << " constructor_" ;
        result << operand_573->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (16)).reader_identifierRepresentation () ;
        result << " (" ;
        columnMarker = result.currentColumn () ;
        GGS_unifiedTypeMapProxyList::cEnumerator enumerator_747 (operand_573->mInfo.mArgumentTypeList, true) ;
        const GGS_unifiedTypeMapProxyList::cElement * operand_747 = NULL ;
        { GGS_uint var_cas_IDX (true, 0) ;
      while (((operand_747 = enumerator_747.nextObject ()))) {
        macroValidPointer (operand_747) ;
        result << "const GALGAS_" ;
        result << operand_747->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (18)) ;
        result << " & inOperand" ;
        result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (18)) ;
        if (enumerator_747.hasNextObject ()) {
          result << ",\n" ;
          result.appendSpacesUntilColumn (columnMarker) ;
        }
        var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
      }
    }
    if ((operand_573->mInfo.mHasCompilerArgument).operator_and ((operand_573->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
      result << ",\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "C_Compiler * inCompiler\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else if (operand_573->mInfo.mHasCompilerArgument.boolValue ()) {
      result << "C_Compiler * inCompiler\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else if ((operand_573->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
      result << "\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
      result << "LOCATION_ARGS) ;\n"
        "\n" ;
    }
  }
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateCopyConstructorAndAssignmentOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (35)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- Handle copy\n"
    "  public : GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " (const GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " & inSource) ;\n"
    "  public : GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " & operator = (const GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " & inSource) ;\n"
    "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryShiftOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (41)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- << and >> shift operators\n"
    "public : VIRTUAL_IN_DEBUG GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " left_shift_operation (" ;
  columnMarker = result.currentColumn () ;
  result << "const GALGAS_uint inShiftOperand\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "COMMA_LOCATION_ARGS) const ;\n"
    "\n"
    "public : VIRTUAL_IN_DEBUG GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " right_shift_operation (" ;
  columnMarker = result.currentColumn () ;
  result << "const GALGAS_uint inShiftOperand\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "COMMA_LOCATION_ARGS) const ;\n"
    "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_dotAssignOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (49)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- .= operator\n"
    "  public : VIRTUAL_IN_DEBUG void dotAssign_operation (const GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " inOperand\n"
    "                                                      COMMA_LOCATION_ARGS) ;\n"
    "\n" ;
}else {
}
if ((var_cas_ADD_ASSIGN_ARGUMENT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- += operator\n"
    "  public : VIRTUAL_IN_DEBUG void addAssign_operation (" ;
  columnMarker = result.currentColumn () ;
  GGS_unifiedTypeMapProxyList::cEnumerator enumerator_2569 (var_cas_ADD_ASSIGN_ARGUMENT_LIST, true) ;
  const GGS_unifiedTypeMapProxyList::cElement * operand_2569 = NULL ;
  { GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2569 = enumerator_2569.nextObject ()))) {
  macroValidPointer (operand_2569) ;
  result << "const GALGAS_" ;
  result << operand_2569->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (59)) ;
  result << " & inOperand" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (59)) ;
  if (enumerator_2569.hasNextObject ()) {
    result << ",\n" ;
    result.appendSpacesUntilColumn (columnMarker) ;
  }
  var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryAndOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (66)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- & operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_and (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryOrOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (72)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- | operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_or (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryXorOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (78)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- ^ operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_xor (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryNotOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (84)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- not operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_not (LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryTildeOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (89)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- ~ operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_tilde (LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryConcatOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (94)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- . (concat) operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_concat (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryAddOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (100)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- + operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " add_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binarySubOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (107)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- - operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " substract_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryMulOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (114)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- * operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " multiply_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryDivOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (121)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- / operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " divide_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryModOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (128)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- mod operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " modulo_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryMinusOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (135)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- unary - operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_unary_minus (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (141)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- ++, -- operators\n"
  "  public : VIRTUAL_IN_DEBUG void increment_operation (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : VIRTUAL_IN_DEBUG void decrement_operation (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (148)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Implementation of reader 'description'\n"
  "  public : VIRTUAL_IN_DEBUG void description (C_String & ioString,\n"
  "                                              const PMSInt32 inIndentation) const ;\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_doNotGenererateObjectCompare (inLexique COMMA_SOURCE_FILE_AT_LINE (154)))).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Comparison\n"
  "  public : enumComparisonResult objectCompare (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand) const ;\n" ;
}else {
}
result << "\n"
  "//--------------------------------- Modifiers\n" ;
GGS_modifierMap::cEnumerator enumerator_7178 (var_cas_MODIFIER_MAP, true) ;
const GGS_modifierMap::cElement * operand_7178 = NULL ;
while (((operand_7178 = enumerator_7178.nextObject ()))) {
macroValidPointer (operand_7178) ;
if ((((operand_7178->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (164)))).operator_or ((operand_7178->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (164))))).operator_or ((operand_7178->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasicFinal (inLexique COMMA_SOURCE_FILE_AT_LINE (164)))).boolValue ()) {
result << "  public : VIRTUAL_IN_DEBUG void modifier_" ;
result << operand_7178->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (165)).reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_7455 (operand_7178->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_7455 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7455 = enumerator_7455.nextObject ()))) {
macroValidPointer (operand_7455) ;
if ((operand_7455->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (167))).boolValue ()) {
  result << "GALGAS_" ;
  result << operand_7455->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (168)) ;
  result << " constinArgument" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (168)) ;
}else if ((operand_7455->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (169))).boolValue ()) {
  result << "GALGAS_" ;
  result << operand_7455->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (170)) ;
  result << " & ioArgument" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (170)) ;
}else if ((operand_7455->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (171))).boolValue ()) {
  result << "GALGAS_" ;
  result << operand_7455->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (172)) ;
  result << " & outArgument" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (172)) ;
}else {
  result << "GALGAS_" ;
  result << operand_7455->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
  result << " inArgument" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
}
if (enumerator_7455.hasNextObject ()) {
  result << ",\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_7178->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_7178->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_7178->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") ;\n"
  "\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Instance Methods\n" ;
GGS_instanceMethodMap::cEnumerator enumerator_8714 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_8714 = NULL ;
while (((operand_8714 = enumerator_8714.nextObject ()))) {
macroValidPointer (operand_8714) ;
if ((operand_8714->mInfo.mIsCategory).operator_not ().boolValue ()) {
if ((((operand_8714->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (201)))).operator_or ((operand_8714->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (201))))).operator_or ((operand_8714->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasicFinal (inLexique COMMA_SOURCE_FILE_AT_LINE (201)))).boolValue ()) {
result << "  public : VIRTUAL_IN_DEBUG void method_" ;
result << operand_8714->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (202)).reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_9021 (operand_8714->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_9021 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9021 = enumerator_9021.nextObject ()))) {
macroValidPointer (operand_9021) ;
if ((operand_9021->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (204))).boolValue ()) {
result << "GALGAS_" ;
result << operand_9021->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (205)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (205)) ;
}else if ((operand_9021->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (206))).boolValue ()) {
result << "GALGAS_" ;
result << operand_9021->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (207)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (207)) ;
}else if ((operand_9021->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (208))).boolValue ()) {
result << "GALGAS_" ;
result << operand_9021->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (209)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (209)) ;
}else {
result << "GALGAS_" ;
result << operand_9021->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (211)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (211)) ;
}
if (enumerator_9021.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_8714->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_8714->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_8714->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") const ;\n"
  "\n" ;
}else {
}
}else {
}
}
result << "//--------------------------------- Class Methods\n" ;
GGS_classMethodMap::cEnumerator enumerator_10344 (var_cas_CLASS_METHOD_MAP, true) ;
const GGS_classMethodMap::cElement * operand_10344 = NULL ;
while (((operand_10344 = enumerator_10344.nextObject ()))) {
macroValidPointer (operand_10344) ;
result << "  public : static void class_method_" ;
result << operand_10344->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (237)).reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_10460 (operand_10344->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_10460 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10460 = enumerator_10460.nextObject ()))) {
macroValidPointer (operand_10460) ;
if ((operand_10460->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (239))).boolValue ()) {
result << "GALGAS_" ;
result << operand_10460->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (240)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (240)) ;
}else if ((operand_10460->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (241))).boolValue ()) {
result << "GALGAS_" ;
result << operand_10460->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (242)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (242)) ;
}else if ((operand_10460->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (243))).boolValue ()) {
result << "GALGAS_" ;
result << operand_10460->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (244)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (244)) ;
}else {
result << "GALGAS_" ;
result << operand_10460->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (246)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (246)) ;
}
if (enumerator_10460.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_10344->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_10344->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_10344->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") ;\n"
  "\n" ;
}
result << "\n"
  "//--------------------------------- Readers\n" ;
GGS_readerMap::cEnumerator enumerator_11638 (var_cas_READER_MAP, true) ;
const GGS_readerMap::cElement * operand_11638 = NULL ;
while (((operand_11638 = enumerator_11638.nextObject ()))) {
macroValidPointer (operand_11638) ;
if ((operand_11638->mInfo.mIsCategory).operator_not ().boolValue ()) {
if ((((operand_11638->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (272)))).operator_or ((operand_11638->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (272))))).operator_or ((operand_11638->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasicFinal (inLexique COMMA_SOURCE_FILE_AT_LINE (272)))).boolValue ()) {
result << "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << operand_11638->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (273)) ;
result << " reader_" ;
result << operand_11638->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (273)).reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_12006 (operand_11638->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_12006 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_12006 = enumerator_12006.nextObject ()))) {
macroValidPointer (operand_12006) ;
result << "const GALGAS_" ;
result << operand_12006->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (275)) ;
result << " & constinOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (275)) ;
if (enumerator_12006.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_11638->mInfo.mArgumentTypeList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_11638->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
}else {
if (operand_11638->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") const ;\n"
  "\n" ;
}else {
}
}else {
}
}
result << "\n"
  "//--------------------------------- Introspection\n"
  "  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * staticTypeDescriptor (void) const ;\n" ;
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateEnumerationHelperMethods (inLexique COMMA_SOURCE_FILE_AT_LINE (300)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Enumeration helper methods\n"
  "  protected : VIRTUAL_IN_DEBUG void populateEnumerationArray (capCollectionElementArray & inEnumerationArray,\n"
  "                                                              const bool inAscending) const ;\n"
  "\n" ;
}else {
}
if ((var_cas_WITH_ACCESSOR_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- 'with' accessors\n" ;
GGS_withAccessorMap::cEnumerator enumerator_13229 (var_cas_WITH_ACCESSOR_MAP, true) ;
const GGS_withAccessorMap::cElement * operand_13229 = NULL ;
while (((operand_13229 = enumerator_13229.nextObject ()))) {
macroValidPointer (operand_13229) ;
result << "  public : VIRTUAL_IN_DEBUG cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * readWriteAccessForWithInstruction_" ;
result << operand_13229->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (310)).reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_13229->mInfo.mArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (311)) ;
result << " & inKey\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
}else {
}
if ((var_cas_ENUMERATION_DESCRIPTOR_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Friend\n"
  "\n"
  "  friend class cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n" ;
}else {
}
result << " \n"
  "} ; // End of GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " class\n"
  "\n" ;
if ((var_cas_ENUMERATION_DESCRIPTOR_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "//   Enumerator declaration                                                  *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public cGenericAbstractEnumerator {\n"
  "  public : cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inEnumeratedObject,\n"
  "     " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const bool inAscending) ;\n"
  "\n"
  "//--- Current element access\n" ;
GGS_enumerationDescriptorList::cEnumerator enumerator_14314 (var_cas_ENUMERATION_DESCRIPTOR_LIST, true) ;
const GGS_enumerationDescriptorList::cElement * operand_14314 = NULL ;
while (((operand_14314 = enumerator_14314.nextObject ()))) {
macroValidPointer (operand_14314) ;
result << "  public : GALGAS_" ;
result << operand_14314->mEnumeratedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (333)) ;
result << " current_" ;
result << operand_14314->mEnumerationName.reader_identifierRepresentation () ;
result << " (void) const ;\n" ;
}
result << "} ;\n" ;
}else {
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "\n" ;
if ((var_cas_WITH_ACCESSOR_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- 'with' accessors\n" ;
GGS_withAccessorMap::cEnumerator enumerator_14776 (var_cas_WITH_ACCESSOR_MAP, true) ;
const GGS_withAccessorMap::cElement * operand_14776 = NULL ;
while (((operand_14776 = enumerator_14776.nextObject ()))) {
macroValidPointer (operand_14776) ;
result << "cCollectionElement * readWriteAccessForWithInstruction_" ;
result << operand_14776->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (346)).reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & ioMap,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_14776->mInfo.mArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (348)) ;
result << " & inKey\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
}else {
}
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'genericTypeImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_genericTypeImplementation (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_unifiedTypeMapProxy & var_cas_SUPER_TYPE_INDEX,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_INDEX.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor\n"
  "kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "\"" ;
result << var_cas_TYPE_NAME ;
result << "\",\n"
  "                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
if (var_cas_SUPER_TYPE_INDEX.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (9)).boolValue ()) {
result << "NULL" ;
}else {
result << "& kTypeDescriptor_GALGAS_" ;
result << var_cas_SUPER_TYPE_INDEX.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
}
result << ") ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::staticTypeDescriptor (void) const {\n"
  "  return & kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "AC_GALGAS_root * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::clonedObject (void) const {\n"
  "  AC_GALGAS_root * result = NULL ;\n"
  "  if (isValid ()) {\n"
  "    macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (*this)) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::extractObject (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_object & inObject,\n"
  "               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler,\n"
  "               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_location & inErrorLocation\n"
  "               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inObject.embeddedObject () ;\n"
  "  if (NULL != p) {\n"
  "    if (NULL != dynamic_cast <const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *> (p)) {\n"
  "      result = *p ;\n"
  "    }else{\n"
  "      inCompiler->extractObjectError (inErrorLocation, \"" ;
result << var_cas_TYPE_NAME ;
result << "\", p->dynamicTypeDescriptor () COMMA_THERE) ;\n"
  "    }  \n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   'structTypeHeader1' template of 'typeGenerationTemplate' filewrapper    *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_structTypeHeader1 (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string (" struct")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public AC_GALGAS_root {\n"
  "//--------------------------------- Public data members\n" ;
GGS_typedAttributeList::cEnumerator enumerator_538 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_538 = NULL ;
while (((operand_538 = enumerator_538.nextObject ()))) {
macroValidPointer (operand_538) ;
result << "  public : GALGAS_" ;
result << operand_538->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
result << " mAttribute_" ;
result << operand_538->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "\n"
  "//--------------------------------- Accessors\n"
  "  public : VIRTUAL_IN_DEBUG bool isValid (void) const ;\n"
  "  public : VIRTUAL_IN_DEBUG void drop (void) ;\n"
  "\n"
  "//--------------------------------- Default constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n"
  "//--------------------------------- Virtual destructor (in debug mode)\n"
  "  public : VIRTUAL_IN_DEBUG ~ GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n"
  "//--------------------------------- Native constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1197 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1197 = NULL ;
while (((operand_1197 = enumerator_1197.nextObject ()))) {
macroValidPointer (operand_1197) ;
result << "const GALGAS_" ;
result << operand_1197->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (27)) ;
result << " & in_" ;
result << operand_1197->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1197.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << ") ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'structTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_structTypeSpecificImplementation (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) :\n" ;
GGS_typedAttributeList::cEnumerator enumerator_170 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_170 = NULL ;
while (((operand_170 = enumerator_170.nextObject ()))) {
macroValidPointer (operand_170) ;
result << "mAttribute_" ;
result << operand_170->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ()" ;
if (enumerator_170.hasNextObject ()) {
result << ",\n" ;
}
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::~ GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "/* GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) :\n" ;
GGS_typedAttributeList::cEnumerator enumerator_623 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_623 = NULL ;
while (((operand_623 = enumerator_623.nextObject ()))) {
macroValidPointer (operand_623) ;
result << "//mAttribute_" ;
result << operand_623->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (inSource.mAttribute_" ;
result << operand_623->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
if (enumerator_623.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << " {\n"
  "} */\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_958 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_958 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_958 = enumerator_958.nextObject ()))) {
macroValidPointer (operand_958) ;
result << "const GALGAS_" ;
result << operand_958->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (31)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (31)) ;
if (enumerator_958.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") :\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1121 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1121 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1121 = enumerator_1121.nextObject ()))) {
macroValidPointer (operand_1121) ;
result << "mAttribute_" ;
result << operand_1121->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << ")" ;
if (enumerator_1121.hasNextObject ()) {
result << ",\n" ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "/* GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator = (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1477 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1477 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1477 = enumerator_1477.nextObject ()))) {
macroValidPointer (operand_1477) ;
result << "  mAttribute_" ;
result << operand_1477->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " = inOperand.mAttribute_" ;
result << operand_1477->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  return *this ;\n"
  "} */\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1839 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1839 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1839 = enumerator_1839.nextObject ()))) {
macroValidPointer (operand_1839) ;
result << "const GALGAS_" ;
result << operand_1839->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (54)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (54)) ;
if (enumerator_1839.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " \n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (" ;
GGS_typedAttributeList::cEnumerator enumerator_2079 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2079 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2079 = enumerator_2079.nextObject ()))) {
macroValidPointer (operand_2079) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (60)) ;
result << ".isValid ()" ;
if (enumerator_2079.hasNextObject ()) {
result << " && " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_2231 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2231 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2231 = enumerator_2231.nextObject ()))) {
macroValidPointer (operand_2231) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (66)) ;
if (enumerator_2231.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand) const {\n"
  "   enumComparisonResult result = kOperandEqual ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2600 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2600 = NULL ;
while (((operand_2600 = enumerator_2600.nextObject ()))) {
macroValidPointer (operand_2600) ;
result << "  if (result == kOperandEqual) {\n"
  "    result = mAttribute_" ;
result << operand_2600->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".objectCompare (inOperand.mAttribute_" ;
result << operand_2600->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "bool GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::isValid (void) const {\n"
  "  return " ;
GGS_typedAttributeList::cEnumerator enumerator_3024 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3024 = NULL ;
while (((operand_3024 = enumerator_3024.nextObject ()))) {
macroValidPointer (operand_3024) ;
result << "mAttribute_" ;
result << operand_3024->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
if (enumerator_3024.hasNextObject ()) {
result << " && " ;
}
}
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::drop (void) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3296 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3296 = NULL ;
while (((operand_3296 = enumerator_3296.nextObject ()))) {
macroValidPointer (operand_3296) ;
result << "  mAttribute_" ;
result << operand_3296->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".drop () ;\n" ;
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 inIndentation) const {\n"
  "  ioString << \"<struct @" ;
result << var_cas_TYPE_NAME ;
result << ":\" ;\n"
  "  if (! isValid ()) {\n"
  "    ioString << \" not built\" ;\n"
  "  }else{\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3741 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3741 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3741 = enumerator_3741.nextObject ()))) {
macroValidPointer (operand_3741) ;
result << "    mAttribute_" ;
result << operand_3741->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".description (ioString, inIndentation+1) ;\n" ;
if (enumerator_3741.hasNextObject ()) {
result << "    ioString << \", \" ;\n" ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "  ioString << \">\" ;\n"
  "}\n"
  "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3961 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3961 = NULL ;
while (((operand_3961 = enumerator_3961.nextObject ()))) {
macroValidPointer (operand_3961) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_3961->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (125)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_3961->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (UNUSED_LOCATION_ARGS) const {\n"
  "  return mAttribute_" ;
result << operand_3961->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "}\n"
  "\n" ;
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    'listTypeHeader1' template of 'typeGenerationTemplate' filewrapper     *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_listTypeHeader1 (C_CompilerEx & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" list")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public AC_GALGAS_list {\n"
  "//--------------------------------- Default constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n"
  "//--------------------------------- Handle copy\n"
  "//  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) ;\n"
  "//  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & operator = (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'listTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_listTypeSpecificImplementation (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Class for element of '@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string ("' list")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public cCollectionElement {\n"
  "//--- List attributes\n" ;
GGS_typedAttributeList::cEnumerator enumerator_549 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_549 = NULL ;
while (((operand_549 = enumerator_549.nextObject ()))) {
macroValidPointer (operand_549) ;
result << "  public : GALGAS_" ;
result << operand_549->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
result << " mAttribute_" ;
result << operand_549->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "//--- Constructor\n"
  "  public : cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_801 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_801 = NULL ;
while (((operand_801 = enumerator_801.nextObject ()))) {
macroValidPointer (operand_801) ;
result << "const GALGAS_" ;
result << operand_801->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (17)) ;
result << " & in_" ;
result << operand_801->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_801.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Virtual method for comparing elements\n"
  "  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) const ;\n"
  "\n"
  "//--- Virtual method that checks that all attributes are valid\n"
  "  public : virtual bool isValid (void) const ;\n"
  "\n"
  "//--- Virtual method that returns a copy of current object\n"
  "  public : virtual cCollectionElement * copy (void) ;\n"
  "\n"
  "//--- Description\n"
  " public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1657 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1657 = NULL ;
while (((operand_1657 = enumerator_1657.nextObject ()))) {
macroValidPointer (operand_1657) ;
result << "const GALGAS_" ;
result << operand_1657->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (40)) ;
result << " & in_" ;
result << operand_1657->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1657.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n"
  "cCollectionElement (THERE)" ;
GGS_typedAttributeList::cEnumerator enumerator_1891 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1891 = NULL ;
while (((operand_1891 = enumerator_1891.nextObject ()))) {
macroValidPointer (operand_1891) ;
result << ",\n"
  "mAttribute_" ;
result << operand_1891->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (in_" ;
result << operand_1891->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "bool cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::isValid (void) const {\n"
  "  return " ;
GGS_typedAttributeList::cEnumerator enumerator_2219 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2219 = NULL ;
while (((operand_2219 = enumerator_2219.nextObject ()))) {
macroValidPointer (operand_2219) ;
result << "mAttribute_" ;
result << operand_2219->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
if (enumerator_2219.hasNextObject ()) {
result << " && " ;
}
}
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cCollectionElement * cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::copy (void) {\n"
  "  cCollectionElement * result = NULL ;\n"
  "  macroMyNew (result, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_2626 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2626 = NULL ;
while (((operand_2626 = enumerator_2626.nextObject ()))) {
macroValidPointer (operand_2626) ;
result << "mAttribute_" ;
result << operand_2626->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_2626.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_HERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2999 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2999 = NULL ;
while (((operand_2999 = enumerator_2999.nextObject ()))) {
macroValidPointer (operand_2999) ;
result << "// mAttribute_" ;
result << operand_2999->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".description (ioString, inIndentation) ;\n" ;
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::compare (const cCollectionElement * inOperand) const {\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operand = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inOperand ;\n"
  "  enumComparisonResult result = kOperandEqual ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3498 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3498 = NULL ;
while (((operand_3498 = enumerator_3498.nextObject ()))) {
macroValidPointer (operand_3498) ;
result << "  if (kOperandEqual == result) {\n"
  "    result = mAttribute_" ;
result << operand_3498->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".objectCompare (operand->mAttribute_" ;
result << operand_3498->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) :\n"
  "AC_GALGAS_list () {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  result.createNewEmptyList (THERE) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_listWithValue (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_4379 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4379 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4379 = enumerator_4379.nextObject ()))) {
macroValidPointer (operand_4379) ;
result << "const GALGAS_" ;
result << operand_4379->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (116)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (116)) ;
if (enumerator_4379.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (" ;
GGS_typedAttributeList::cEnumerator enumerator_4618 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4618 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4618 = enumerator_4618.nextObject ()))) {
macroValidPointer (operand_4618) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (123)) ;
result << ".isValid ()" ;
if (enumerator_4618.hasNextObject ()) {
result << " && " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "    result.createNewEmptyList (THERE) ;\n"
  "    cCollectionElement * p = NULL ;\n"
  "    macroMyNew (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_4874 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4874 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4874 = enumerator_4874.nextObject ()))) {
macroValidPointer (operand_4874) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (131)) ;
if (enumerator_4874.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "    capCollectionElement attributes ;\n"
  "    attributes.setPointer (p) ;\n"
  "    macroReleaseObject (p) ;\n"
  "    result.addObject (attributes) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::addAssign_operation (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_5291 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5291 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5291 = enumerator_5291.nextObject ()))) {
macroValidPointer (operand_5291) ;
result << "const GALGAS_" ;
result << operand_5291->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (147)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (147)) ;
if (enumerator_5291.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (isValid ()" ;
GGS_typedAttributeList::cEnumerator enumerator_5503 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5503 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5503 = enumerator_5503.nextObject ()))) {
macroValidPointer (operand_5503) ;
result << " && inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (153)) ;
result << ".isValid ()" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "    cCollectionElement * p = NULL ;\n"
  "    macroMyNew (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_5706 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5706 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5706 = enumerator_5706.nextObject ()))) {
macroValidPointer (operand_5706) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (159)) ;
if (enumerator_5706.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "    capCollectionElement attributes ;\n"
  "    attributes.setPointer (p) ;\n"
  "    macroReleaseObject (p) ;\n"
  "    addObject (attributes) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_prependValue (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_6100 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6100 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6100 = enumerator_6100.nextObject ()))) {
macroValidPointer (operand_6100) ;
result << "GALGAS_" ;
result << operand_6100->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
result << " inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
if (enumerator_6100.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (isValid ()" ;
GGS_typedAttributeList::cEnumerator enumerator_6310 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6310 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6310 = enumerator_6310.nextObject ()))) {
macroValidPointer (operand_6310) ;
result << " && inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (180)) ;
result << ".isValid ()" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "    cCollectionElement * p = NULL ;\n"
  "    macroMyNew (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_6515 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6515 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6515 = enumerator_6515.nextObject ()))) {
macroValidPointer (operand_6515) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (186)) ;
if (enumerator_6515.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "    capCollectionElement attributes ;\n"
  "    attributes.setPointer (p) ;\n"
  "    macroReleaseObject (p) ;\n"
  "    prependAttributeArray (attributes) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popFirst (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_6917 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6917 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6917 = enumerator_6917.nextObject ()))) {
macroValidPointer (operand_6917) ;
result << "GALGAS_" ;
result << operand_6917->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (201)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (201)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement attributes ;\n"
  "  removeFirstObject (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_7348 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7348 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7348 = enumerator_7348.nextObject ()))) {
macroValidPointer (operand_7348) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (211)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_7526 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7526 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7526 = enumerator_7526.nextObject ()))) {
macroValidPointer (operand_7526) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (217)) ;
result << " = p->mAttribute_" ;
result << operand_7526->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popLast (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_7824 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7824 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7824 = enumerator_7824.nextObject ()))) {
macroValidPointer (operand_7824) ;
result << "GALGAS_" ;
result << operand_7824->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (226)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (226)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement attributes ;\n"
  "  removeLastObject (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_8254 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8254 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8254 = enumerator_8254.nextObject ()))) {
macroValidPointer (operand_8254) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (236)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_8432 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8432 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8432 = enumerator_8432.nextObject ()))) {
macroValidPointer (operand_8432) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (242)) ;
result << " = p->mAttribute_" ;
result << operand_8432->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_first (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_8726 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8726 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8726 = enumerator_8726.nextObject ()))) {
macroValidPointer (operand_8726) ;
result << "GALGAS_" ;
result << operand_8726->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (251)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (251)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  capCollectionElement attributes ;\n"
  "  readFirst (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_9155 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9155 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9155 = enumerator_9155.nextObject ()))) {
macroValidPointer (operand_9155) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (261)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_9333 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9333 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9333 = enumerator_9333.nextObject ()))) {
macroValidPointer (operand_9333) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (267)) ;
result << " = p->mAttribute_" ;
result << operand_9333->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_last (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_9626 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9626 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9626 = enumerator_9626.nextObject ()))) {
macroValidPointer (operand_9626) ;
result << "GALGAS_" ;
result << operand_9626->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (276)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (276)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  capCollectionElement attributes ;\n"
  "  readLast (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_10054 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10054 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10054 = enumerator_10054.nextObject ()))) {
macroValidPointer (operand_10054) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (286)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_10232 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10232 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10232 = enumerator_10232.nextObject ()))) {
macroValidPointer (operand_10232) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (292)) ;
result << " = p->mAttribute_" ;
result << operand_10232->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator_concat (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n"
  "                     " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (isValid () && inOperand.isValid ()) {\n"
  "    result = *this ;\n"
  "    result.appendList (inOperand) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_subListWithRange (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_uint & inIndex,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_uint & inLength,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (THERE) ;\n"
  "  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_subListFromIndex (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_uint & inIndex,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (THERE) ;\n"
  "  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::dotAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " inOperand\n"
  "                          " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  appendList (inOperand) ;\n"
  "}\n"
  "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_12228 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_12228 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_12228 = enumerator_12228.nextObject ()))) {
macroValidPointer (operand_12228) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_set" ;
result << operand_12228->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ().reader_identifierRepresentation () ;
result << "AtIndex (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << operand_12228->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (340)) ;
result << " inOperand,\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_uint inIndex,\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;\n"
  "  if (NULL != p) {\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    p->mAttribute_" ;
result << operand_12228->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " = inOperand ;\n"
  "  }\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_13166 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_13166 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_13166 = enumerator_13166.nextObject ()))) {
macroValidPointer (operand_13166) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_13166->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (355)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_13166->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << "AtIndex (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_uint & inIndex,\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  GALGAS_" ;
result << operand_13166->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (360)) ;
result << " result ;\n"
  "  if (NULL != p) {\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    result = p->mAttribute_" ;
result << operand_13166->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inEnumeratedObject,\n"
  "                   " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const bool inAscending) :\n"
  "cGenericAbstractEnumerator () {\n"
  "  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inAscending) ;\n"
  "}\n"
  "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_14532 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_14532 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_14532 = enumerator_14532.nextObject ()))) {
macroValidPointer (operand_14532) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_14532->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (380)) ;
result << " cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::current_" ;
result << operand_14532->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (void) const {\n"
  "  const cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) currentObjectPtr () ;\n"
  "  macroValidObject (p, const cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  return p->mAttribute_" ;
result << operand_14532->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'sortedlistTypeHeader1' template of 'typeGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_sortedlistTypeHeader1 (C_CompilerEx & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string (" sorted list")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public AC_GALGAS_sortedlist {\n"
  "//--------------------------------- Default constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'sortedlistTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_sortedlistTypeSpecificImplementation (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_sortDescriptorListForGeneration & var_cas_SORT_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_SORT_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Class for element of '@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string ("' sorted list")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public cSortedListElement {\n"
  "//--- List attributes\n" ;
GGS_typedAttributeList::cEnumerator enumerator_556 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_556 = NULL ;
while (((operand_556 = enumerator_556.nextObject ()))) {
macroValidPointer (operand_556) ;
result << "  public : GALGAS_" ;
result << operand_556->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
result << " mAttribute_" ;
result << operand_556->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "//--- Constructor\n"
  "  public : cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_808 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_808 = NULL ;
while (((operand_808 = enumerator_808.nextObject ()))) {
macroValidPointer (operand_808) ;
result << "const GALGAS_" ;
result << operand_808->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (17)) ;
result << " & in_" ;
result << operand_808->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_808.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Virtual method that checks that all attributes are valid\n"
  "  public : virtual bool isValid (void) const ;\n"
  "\n"
  "//--- Virtual method that returns a copy of current object\n"
  "  public : virtual cSortedListElement * copy (void) ;\n"
  "\n"
  "//--- Virtual method for comparing elements\n"
  "  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) const ;\n"
  "\n"
  "//--- Description\n"
  " public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;\n"
  "\n"
  "//--- Virtual method that comparing element for sorting\n"
  "  public : virtual enumComparisonResult compareForSorting (const cSortedListElement * inOperand) const ;\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1826 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1826 = NULL ;
while (((operand_1826 = enumerator_1826.nextObject ()))) {
macroValidPointer (operand_1826) ;
result << "const GALGAS_" ;
result << operand_1826->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (43)) ;
result << " & in_" ;
result << operand_1826->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1826.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n"
  "cSortedListElement (THERE)" ;
GGS_typedAttributeList::cEnumerator enumerator_2060 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2060 = NULL ;
while (((operand_2060 = enumerator_2060.nextObject ()))) {
macroValidPointer (operand_2060) ;
result << ",\n"
  "mAttribute_" ;
result << operand_2060->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (in_" ;
result << operand_2060->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "bool cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::isValid (void) const {\n"
  "  return " ;
GGS_typedAttributeList::cEnumerator enumerator_2388 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2388 = NULL ;
while (((operand_2388 = enumerator_2388.nextObject ()))) {
macroValidPointer (operand_2388) ;
result << "mAttribute_" ;
result << operand_2388->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
if (enumerator_2388.hasNextObject ()) {
result << " && " ;
}
}
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cSortedListElement * cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::copy (void) {\n"
  "  cSortedListElement * result = NULL ;\n"
  "  macroMyNew (result, cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_2795 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2795 = NULL ;
while (((operand_2795 = enumerator_2795.nextObject ()))) {
macroValidPointer (operand_2795) ;
result << "mAttribute_" ;
result << operand_2795->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_2795.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_HERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3168 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3168 = NULL ;
while (((operand_3168 = enumerator_3168.nextObject ()))) {
macroValidPointer (operand_3168) ;
result << "// mAttribute_" ;
result << operand_3168->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".description (ioString, inIndentation) ;\n" ;
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::compare (const cCollectionElement * inOperand) const {\n"
  "  enumComparisonResult result = kOperandNotValid ;\n"
  "  if (NULL != inOperand) {\n"
  "    result = kOperandEqual ;\n"
  "    cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operand = (cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inOperand ;\n"
  "    macroValidObject (operand, cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3800 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3800 = NULL ;
while (((operand_3800 = enumerator_3800.nextObject ()))) {
macroValidPointer (operand_3800) ;
result << "    if (kOperandEqual == result) {\n"
  "      result = mAttribute_" ;
result << operand_3800->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".objectCompare (operand->mAttribute_" ;
result << operand_3800->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "    }\n" ;
}
result << "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) :\n"
  "AC_GALGAS_sortedlist () {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::compareForSorting (const cSortedListElement * inOperand) const {\n"
  "  enumComparisonResult result = kOperandEqual ;\n"
  "  const cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operand = (const cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inOperand ;\n"
  "  macroValidObject (operand, const cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_sortDescriptorListForGeneration::cEnumerator enumerator_4714 (var_cas_SORT_ATTRIBUTE_LIST, true) ;
const GGS_sortDescriptorListForGeneration::cElement * operand_4714 = NULL ;
while (((operand_4714 = enumerator_4714.nextObject ()))) {
macroValidPointer (operand_4714) ;
result << "  if (result == kOperandEqual) {\n"
  "    result = " ;
if (operand_4714->mAscendingOrder.boolValue ()) {
result << "mAttribute_" ;
result << operand_4714->mAttributeName.reader_identifierRepresentation () ;
result << ".objectCompare (operand->mAttribute_" ;
result << operand_4714->mAttributeName.reader_identifierRepresentation () ;
result << ")" ;
}else {
result << "operand->mAttribute_" ;
result << operand_4714->mAttributeName.reader_identifierRepresentation () ;
result << ".objectCompare (mAttribute_" ;
result << operand_4714->mAttributeName.reader_identifierRepresentation () ;
result << ")" ;
}
result << " ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptySortedList (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  result.createNewEmptySortedList (THERE) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_sortedListWithValue (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_5653 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5653 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5653 = enumerator_5653.nextObject ()))) {
macroValidPointer (operand_5653) ;
result << "const GALGAS_" ;
result << operand_5653->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (143)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (143)) ;
if (enumerator_5653.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result = constructor_emptySortedList (THERE) ;\n"
  "  cSortedListElement * p = NULL ;\n"
  "  macroMyNew (p, cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_6014 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6014 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6014 = enumerator_6014.nextObject ()))) {
macroValidPointer (operand_6014) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (151)) ;
if (enumerator_6014.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "  capSortedListElement attributes ;\n"
  "  attributes.setPointer (p) ;\n"
  "  macroReleaseObject (p) ;\n"
  "  result.addObject (attributes) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::addAssign_operation (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_6413 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6413 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6413 = enumerator_6413.nextObject ()))) {
macroValidPointer (operand_6413) ;
result << "const GALGAS_" ;
result << operand_6413->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
if (enumerator_6413.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "    " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (isValid ()) {\n"
  "    cSortedListElement * p = NULL ;\n"
  "    macroMyNew (p, cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_6728 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6728 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6728 = enumerator_6728.nextObject ()))) {
macroValidPointer (operand_6728) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (175)) ;
if (enumerator_6728.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "    capSortedListElement attributes ;\n"
  "    attributes.setPointer (p) ;\n"
  "    macroReleaseObject (p) ;\n"
  "    addObject (attributes) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::dotAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " inOperand\n"
  "                          " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  if (isValid ()) {\n"
  "    appendSortedList (inOperand) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator_concat (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n"
  "                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (isValid () && inOperand.isValid ()) {\n"
  "    result = constructor_emptySortedList (THERE) ;\n"
  "    result = *this ;\n"
  "    result.appendSortedList (inOperand) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popSmallest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_7905 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7905 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7905 = enumerator_7905.nextObject ()))) {
macroValidPointer (operand_7905) ;
result << "GALGAS_" ;
result << operand_7905->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (212)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (212)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capSortedListElement attributes ;\n"
  "  removeSmallestObject (attributes, inCompiler COMMA_THERE) ;\n"
  "  cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_8357 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8357 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8357 = enumerator_8357.nextObject ()))) {
macroValidPointer (operand_8357) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (222)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_8535 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8535 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8535 = enumerator_8535.nextObject ()))) {
macroValidPointer (operand_8535) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (228)) ;
result << " = p->mAttribute_" ;
result << operand_8535->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popGreatest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_8837 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8837 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8837 = enumerator_8837.nextObject ()))) {
macroValidPointer (operand_8837) ;
result << "GALGAS_" ;
result << operand_8837->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (237)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (237)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capSortedListElement attributes ;\n"
  "  removeGreatestObject (attributes, inCompiler COMMA_THERE) ;\n"
  "  cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_9289 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9289 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9289 = enumerator_9289.nextObject ()))) {
macroValidPointer (operand_9289) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (247)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_9467 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9467 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9467 = enumerator_9467.nextObject ()))) {
macroValidPointer (operand_9467) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (253)) ;
result << " = p->mAttribute_" ;
result << operand_9467->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_smallest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_9764 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9764 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9764 = enumerator_9764.nextObject ()))) {
macroValidPointer (operand_9764) ;
result << "GALGAS_" ;
result << operand_9764->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (262)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (262)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  capSortedListElement attributes ;\n"
  "  smallestObjectAttributeList (attributes, inCompiler COMMA_THERE) ;\n"
  "  cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_10219 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10219 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10219 = enumerator_10219.nextObject ()))) {
macroValidPointer (operand_10219) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (272)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_10397 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10397 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10397 = enumerator_10397.nextObject ()))) {
macroValidPointer (operand_10397) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (278)) ;
result << " = p->mAttribute_" ;
result << operand_10397->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_greatest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_10694 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10694 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10694 = enumerator_10694.nextObject ()))) {
macroValidPointer (operand_10694) ;
result << "GALGAS_" ;
result << operand_10694->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (287)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (287)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  capSortedListElement attributes ;\n"
  "  greatestObjectAttributeList (attributes, inCompiler COMMA_THERE) ;\n"
  "  cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_11149 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_11149 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_11149 = enumerator_11149.nextObject ()))) {
macroValidPointer (operand_11149) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (297)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_11327 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_11327 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_11327 = enumerator_11327.nextObject ()))) {
macroValidPointer (operand_11327) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (303)) ;
result << " = p->mAttribute_" ;
result << operand_11327->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inEnumeratedObject,\n"
  "                   " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const bool inAscending) :\n"
  "cGenericAbstractEnumerator () {\n"
  "  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inAscending) ;\n"
  "}\n"
  "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_11855 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_11855 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_11855 = enumerator_11855.nextObject ()))) {
macroValidPointer (operand_11855) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_11855->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (318)) ;
result << " cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::current_" ;
result << operand_11855->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (void) const {\n"
  "  const cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) currentObjectPtr () ;\n"
  "  macroValidObject (p, const cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  return p->mAttribute_" ;
result << operand_11855->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    'enumTypeHeader1' template of 'typeGenerationTemplate' filewrapper     *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_enumTypeHeader1 (C_CompilerEx & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_stringlist & var_cas_CONSTANT_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_CONSTANT_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string (" enum")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public AC_GALGAS_root {\n"
  "//--------------------------------- Default constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n"
  "//--------------------------------- Enumeration\n"
  "  public : typedef enum {\n"
  "    kNotBuilt" ;
GGS_stringlist::cEnumerator enumerator_671 (var_cas_CONSTANT_LIST, true) ;
const GGS_stringlist::cElement * operand_671 = NULL ;
while (((operand_671 = enumerator_671.nextObject ()))) {
macroValidPointer (operand_671) ;
result << ",\n"
  "    kEnum_" ;
result << operand_671->mValue.reader_identifierRepresentation () ;
}
result << "\n"
  "  } enumeration ;\n"
  "  \n"
  "//--------------------------------- Private data member\n"
  "  private : enumeration mEnum ;\n"
  "\n"
  "//--------------------------------- Accessors\n"
  "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return kNotBuilt != mEnum ; }\n"
  "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mEnum = kNotBuilt ; }\n"
  "  public : inline enumeration enumValue (void) const { return mEnum ; }\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'enumTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_enumTypeSpecificImplementation (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_stringlist & var_cas_CONSTANT_LIST,
                                const GGS_enumMessageListForGeneration & var_cas_ENUM_MESSAGE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_CONSTANT_LIST.isBuilt ()
    && var_cas_ENUM_MESSAGE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) :\n"
  "mEnum (kNotBuilt) {\n"
  "}\n"
  "\n" ;
GGS_stringlist::cEnumerator enumerator_190 (var_cas_CONSTANT_LIST, true) ;
const GGS_stringlist::cElement * operand_190 = NULL ;
while (((operand_190 = enumerator_190.nextObject ()))) {
macroValidPointer (operand_190) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_" ;
result << operand_190->mValue.reader_identifierRepresentation () ;
result << " (UNUSED_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  result.mEnum = kEnum_" ;
result << operand_190->mValue.reader_identifierRepresentation () ;
result << " ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
GGS_enumMessageListForGeneration::cEnumerator enumerator_597 (var_cas_ENUM_MESSAGE_LIST, true) ;
const GGS_enumMessageListForGeneration::cElement * operand_597 = NULL ;
while (((operand_597 = enumerator_597.nextObject ()))) {
macroValidPointer (operand_597) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const char * gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_597->mEnumMessageName.reader_identifierRepresentation () ;
result << " [" ;
result << var_cas_CONSTANT_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (19)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (19)) ;
result << "] = {\n"
  "  \"\"" ;
GGS_enumMessageAssociationSortedListForGeneration::cEnumerator enumerator_890 (operand_597->mMessageAssociationList, true) ;
const GGS_enumMessageAssociationSortedListForGeneration::cElement * operand_890 = NULL ;
while (((operand_890 = enumerator_890.nextObject ()))) {
macroValidPointer (operand_890) ;
result << ",\n"
  "  " ;
result << operand_890->mMessage.reader_utf8Representation () ;
}
result << "\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_string GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_597->mEnumMessageName.reader_identifierRepresentation () ;
result << " (UNUSED_LOCATION_ARGS) const {\n"
  "  GALGAS_string result ;\n"
  "  if (isValid ()) {\n"
  "    result = GALGAS_string (gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_597->mEnumMessageName.reader_identifierRepresentation () ;
result << " [mEnum]) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const char * gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " [" ;
result << var_cas_CONSTANT_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (37)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (37)) ;
result << "] = {\n"
  "  \"(not built)\"" ;
GGS_stringlist::cEnumerator enumerator_1646 (var_cas_CONSTANT_LIST, true) ;
const GGS_stringlist::cElement * operand_1646 = NULL ;
while (((operand_1646 = enumerator_1646.nextObject ()))) {
macroValidPointer (operand_1646) ;
result << ",\n"
  "  " ;
result << operand_1646->mValue.reader_utf8Representation () ;
}
result << "\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 /* inIndentation */) const {\n"
  "  ioString << \"<enum @" ;
result << var_cas_TYPE_NAME ;
result << ": \" << gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " [mEnum] << \">\" ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand) const {\n"
  "  enumComparisonResult result = kOperandNotValid ;\n"
  "  if (isValid () && inOperand.isValid ()) {\n"
  "    if (mEnum < inOperand.mEnum) {\n"
  "      result = kFirstOperandLowerThanSecond ;\n"
  "    }else if (mEnum > inOperand.mEnum) {\n"
  "      result = kFirstOperandGreaterThanSecond ;\n"
  "    }else{\n"
  "      result = kOperandEqual ;\n"
  "    }\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    'mapTypeHeader1' template of 'typeGenerationTemplate' filewrapper      *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_mapTypeHeader1 (C_CompilerEx & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" map")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public AC_GALGAS_map {\n"
  "//--------------------------------- Default constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n"
  "//--------------------------------- Handle copy\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) ;\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & operator = (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    'mapTypeHeader2' template of 'typeGenerationTemplate' filewrapper      *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_mapTypeHeader2 (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Class for element of '@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string ("' map")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public cMapElement {\n"
  "//--- Map attributes\n" ;
GGS_typedAttributeList::cEnumerator enumerator_527 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_527 = NULL ;
while (((operand_527 = enumerator_527.nextObject ()))) {
macroValidPointer (operand_527) ;
result << "  public : GALGAS_" ;
result << operand_527->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
result << " mAttribute_" ;
result << operand_527->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "//--- Constructor\n"
  "  public : cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_lstring & inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_802 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_802 = NULL ;
while (((operand_802 = enumerator_802.nextObject ()))) {
macroValidPointer (operand_802) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_802->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (17)) ;
result << " & in_" ;
result << operand_802->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Virtual method for comparing elements\n"
  "  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) const ;\n"
  "\n"
  "//--- Virtual method that checks that all attributes are valid\n"
  "  public : virtual bool isValid (void) const ;\n"
  "\n"
  "//--- Virtual method that returns a copy of current object\n"
  "  public : virtual cMapElement * copy (void) ;\n"
  "\n"
  "//--- Description\n"
  " public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;\n"
  "} ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'mapTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_mapTypeSpecificImplementation (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_insertMethodListAST & var_cas_INSERT_METHOD_LIST,
                                const GGS_mapSearchMethodListAST & var_cas_SEARCH_METHOD_LIST,
                                const GGS_mapRemoveMethodListAST & var_cas_REMOVE_METHOD_LIST,
                                const GGS_bool& var_cas_HAS_INSERT_OR_REPLACE,
                                const GGS_withAccessorMap & var_cas_WITH_ACCESSOR_MAP) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_INSERT_METHOD_LIST.isBuilt ()
    && var_cas_SEARCH_METHOD_LIST.isBuilt ()
    && var_cas_REMOVE_METHOD_LIST.isBuilt ()
    && var_cas_HAS_INSERT_OR_REPLACE.isBuilt ()
    && var_cas_WITH_ACCESSOR_MAP.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_lstring & inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_208 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_208 = NULL ;
while (((operand_208 = enumerator_208.nextObject ()))) {
macroValidPointer (operand_208) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_208->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (5)) ;
result << " & in_" ;
result << operand_208->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n"
  "cMapElement (inKey COMMA_THERE)" ;
GGS_typedAttributeList::cEnumerator enumerator_434 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_434 = NULL ;
while (((operand_434 = enumerator_434.nextObject ()))) {
macroValidPointer (operand_434) ;
result << ",\n"
  "mAttribute_" ;
result << operand_434->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (in_" ;
result << operand_434->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "bool cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::isValid (void) const {\n"
  "  return mAttribute_lkey.isValid ()" ;
GGS_typedAttributeList::cEnumerator enumerator_781 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_781 = NULL ;
while (((operand_781 = enumerator_781.nextObject ()))) {
macroValidPointer (operand_781) ;
result << " && mAttribute_" ;
result << operand_781->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
}
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cMapElement * cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::copy (void) {\n"
  "  cMapElement * result = NULL ;\n"
  "  macroMyNew (result, cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (mAttribute_lkey" ;
GGS_typedAttributeList::cEnumerator enumerator_1158 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1158 = NULL ;
while (((operand_1158 = enumerator_1158.nextObject ()))) {
macroValidPointer (operand_1158) ;
result << ", mAttribute_" ;
result << operand_1158->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
}
result << " COMMA_HERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1507 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1507 = NULL ;
while (((operand_1507 = enumerator_1507.nextObject ()))) {
macroValidPointer (operand_1507) ;
result << "// mAttribute_" ;
result << operand_1507->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".description (ioString, inIndentation) ;\n" ;
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::compare (const cCollectionElement * inOperand) const {\n"
  "  cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operand = (cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inOperand ;\n"
  "  enumComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2028 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2028 = NULL ;
while (((operand_2028 = enumerator_2028.nextObject ()))) {
macroValidPointer (operand_2028) ;
result << "  if (kOperandEqual == result) {\n"
  "    result = mAttribute_" ;
result << operand_2028->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".objectCompare (operand->mAttribute_" ;
result << operand_2028->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) :\n"
  "AC_GALGAS_map () {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) :\n"
  "AC_GALGAS_map (inSource) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator = (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) {\n"
  "  * ((AC_GALGAS_map *) this) = inSource ;\n"
  "  return * this ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyMap (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  result.createNewEmptyMap (THERE) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_mapWithMapToOverride (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inMapToOverride\n"
  "                                                   " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  result.createNewEmptyMap (inMapToOverride COMMA_THERE) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  overridenMap (result) ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
GGS_insertMethodListAST::cEnumerator enumerator_3894 (var_cas_INSERT_METHOD_LIST, true) ;
const GGS_insertMethodListAST::cElement * operand_3894 = NULL ;
while (((operand_3894 = enumerator_3894.nextObject ()))) {
macroValidPointer (operand_3894) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_" ;
result << operand_3894->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_lstring inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_4130 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4130 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4130 = enumerator_4130.nextObject ()))) {
macroValidPointer (operand_4130) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_4130->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (108)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (108)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = NULL ;\n"
  "  macroMyNew (p, cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_4469 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4469 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4469 = enumerator_4469.nextObject ()))) {
macroValidPointer (operand_4469) ;
result << ", inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (115)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_HERE)) ;\n"
  "    capCollectionElement attributes ;\n"
  "  attributes.setPointer (p) ;\n"
  "  macroReleaseObject (p) ;\n" ;
const GGS_uint indentation_5057 = GGS_uint (2U) ;
if (indentation_5057.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_5057.uintValue ()) ;
}
result << "const utf32 kInsertErrorMessage [" ;
result << operand_3894->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (122)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (122)) ;
result << "] = " ;
result << operand_3894->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "const utf32 kShadowErrorMessage [" ;
result << operand_3894->mShadowErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (123)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (123)) ;
result << "] = " ;
result << operand_3894->mShadowErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;\n" ;
 ;
if (indentation_5057.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_5057.uintValue ())) ;
}
result << "}\n"
  "\n" ;
}
GGS_mapSearchMethodListAST::cEnumerator enumerator_5096 (var_cas_SEARCH_METHOD_LIST, true) ;
const GGS_mapSearchMethodListAST::cElement * operand_5096 = NULL ;
while (((operand_5096 = enumerator_5096.nextObject ()))) {
macroValidPointer (operand_5096) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const utf32 kSearchErrorMessage_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_5096->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " [" ;
result << operand_5096->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (131)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (131)) ;
result << "] = " ;
result << operand_5096->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_" ;
result << operand_5096->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_lstring inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_5609 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5609 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5609 = enumerator_5609.nextObject ()))) {
macroValidPointer (operand_5609) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_5609->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (135)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (135)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n" ;
const GGS_uint indentation_6395 = GGS_uint (2U) ;
if (indentation_6395.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_6395.uintValue ()) ;
}
result << "const cCollectionElement * attributes = performSearch (inKey, inCompiler, kSearchErrorMessage_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_5096->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " COMMA_THERE) ;\n"
  "const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes ;\n"
  "if (NULL != p) {\n"
  "  macroValidObject (p, const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_6231 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6231 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6231 = enumerator_6231.nextObject ()))) {
macroValidPointer (operand_6231) ;
result << "  outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (145)) ;
result << " = p->mAttribute_" ;
result << operand_6231->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n" ;
 ;
if (indentation_6395.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_6395.uintValue ())) ;
}
result << "}\n"
  "\n" ;
}
GGS_mapRemoveMethodListAST::cEnumerator enumerator_6435 (var_cas_REMOVE_METHOD_LIST, true) ;
const GGS_mapRemoveMethodListAST::cElement * operand_6435 = NULL ;
while (((operand_6435 = enumerator_6435.nextObject ()))) {
macroValidPointer (operand_6435) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_" ;
result << operand_6435->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_lstring inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_6671 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6671 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6671 = enumerator_6671.nextObject ()))) {
macroValidPointer (operand_6671) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_6671->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (157)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (157)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
const GGS_uint indentation_7524 = GGS_uint (2U) ;
if (indentation_7524.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_7524.uintValue ()) ;
}
result << "const utf32 kRemoveErrorMessage [" ;
result << operand_6435->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (162)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (162)) ;
result << "] = " ;
result << operand_6435->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "capCollectionElement attributes ;\n"
  "performRemove (inKey, attributes, inCompiler, kRemoveErrorMessage COMMA_THERE) ;\n"
  "cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "if (NULL != p) {\n"
  "  macroValidObject (p, cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_7360 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7360 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7360 = enumerator_7360.nextObject ()))) {
macroValidPointer (operand_7360) ;
result << "  outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (169)) ;
result << " = p->mAttribute_" ;
result << operand_7360->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n" ;
 ;
if (indentation_7524.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_7524.uintValue ())) ;
}
result << "}\n"
  "\n" ;
}
if (var_cas_HAS_INSERT_OR_REPLACE.boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_insertOrReplace (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_lstring inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_7769 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7769 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7769 = enumerator_7769.nextObject ()))) {
macroValidPointer (operand_7769) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_7769->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (180)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (180)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = NULL ;\n"
  "  macroMyNew (p, cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_8069 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8069 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8069 = enumerator_8069.nextObject ()))) {
macroValidPointer (operand_8069) ;
result << ", inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (186)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_HERE)) ;\n"
  "  capCollectionElement attributes ;\n"
  "  attributes.setPointer (p) ;\n"
  "  macroReleaseObject (p) ;\n"
  "  performInsertOrReplace (attributes) ;\n"
  "}\n"
  "\n" ;
}else {
}
GGS_typedAttributeList::cEnumerator enumerator_8344 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8344 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8344 = enumerator_8344.nextObject ()))) {
macroValidPointer (operand_8344) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_8344->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (198)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_8344->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << "ForKey (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_string & inKey,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;\n"
  "  const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes ;\n"
  "  GALGAS_" ;
result << operand_8344->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (203)) ;
result << " result ;\n"
  "  if (NULL != p) {\n"
  "    macroValidObject (p, const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    result = p->mAttribute_" ;
result << operand_8344->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_typedAttributeList::cEnumerator enumerator_9337 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9337 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9337 = enumerator_9337.nextObject ()))) {
macroValidPointer (operand_9337) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_set" ;
result << operand_9337->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ().reader_identifierRepresentation () ;
result << "ForKey (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << operand_9337->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (214)) ;
result << " inAttributeValue,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_string inKey,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;\n"
  "  cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes ;\n"
  "  if (NULL != p) {\n"
  "    macroValidObject (p, cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    p->mAttribute_" ;
result << operand_9337->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " = inAttributeValue ;\n"
  "  }\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_withAccessorMap::cEnumerator enumerator_10271 (var_cas_WITH_ACCESSOR_MAP, true) ;
const GGS_withAccessorMap::cElement * operand_10271 = NULL ;
while (((operand_10271 = enumerator_10271.nextObject ()))) {
macroValidPointer (operand_10271) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::readWriteAccessForWithInstruction_" ;
result << operand_10271->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_10271->mInfo.mArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (230)) ;
result << " & inKey\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
if ((operand_10271->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (232))).operator_isEqual (GGS_string ("hasKey")).boolValue ()) {
result << "  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;\n" ;
}else {
result << "  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_10271->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " COMMA_THERE) ;\n" ;
}
result << "  cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = (cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) p ;\n"
  "  macroNullOrValidObject (result, cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inEnumeratedObject,\n"
  "                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const bool inAscending) :\n"
  "cGenericAbstractEnumerator () {\n"
  "  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inAscending) ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_lstring cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::current_lkey (void) const {\n"
  "  const cMapElement * p = (const cMapElement *) currentObjectPtr () ;\n"
  "  macroValidObject (p, const cMapElement) ;\n"
  "  return p->mAttribute_lkey ;\n"
  "}\n"
  "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_11840 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_11840 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_11840 = enumerator_11840.nextObject ()))) {
macroValidPointer (operand_11840) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_11840->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (260)) ;
result << " cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::current_" ;
result << operand_11840->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (void) const {\n"
  "  const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) currentObjectPtr () ;\n"
  "  macroValidObject (p, const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  return p->mAttribute_" ;
result << operand_11840->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   'classTypeHeader1' template of 'typeGenerationTemplate' filewrapper     *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_classTypeHeader1 (C_CompilerEx & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_SUPER_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ALL_ATTRIBUTE_LIST,
                                const GGS_bool& var_cas_IS_ABSTRACT) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ALL_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_IS_ABSTRACT.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string (" class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public " ;
if ((var_cas_SUPER_TYPE_IDENTIFIER).operator_isEqual (GGS_string ("")).boolValue ()) {
result << "AC_GALGAS_class" ;
}else {
result << "GALGAS_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
}
result << " {\n"
  "//--- Constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n"
  "//--------------------------------- Constructor from pointer\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inSourcePtr) ;\n"
  "\n" ;
if (((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).operator_and ((var_cas_IS_ABSTRACT).operator_not ()).boolValue ()) {
result << "//--- Insulate\n"
  "  private : VIRTUAL_IN_DEBUG void insulate (LOCATION_ARGS) ;\n" ;
}else {
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'classTypeHeader2part1' template of 'typeGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_classTypeHeader2part1 (C_CompilerEx & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_SUPER_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_CURRENT_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_ALL_ATTRIBUTE_LIST,
                                const GGS_bool& var_cas_IS_ABSTRACT,
                                const GGS_abstractMethodDefinitionListForGeneration & var_cas_ABSTRACT_METHOD_LIST,
                                const GGS_methodDefinitionListForGeneration & var_cas_CONCRETE_METHOD_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_CURRENT_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_ALL_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_IS_ABSTRACT.isBuilt ()
    && var_cas_ABSTRACT_METHOD_LIST.isBuilt ()
    && var_cas_CONCRETE_METHOD_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Pointer class for @")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public " ;
if ((var_cas_SUPER_TYPE_IDENTIFIER).operator_isEqual (GGS_string ("")).boolValue ()) {
result << "acPtr_class" ;
}else {
result << "cPtr_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
}
result << " {\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'classTypeHeader2part2' template of 'typeGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_classTypeHeader2part2 (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_SUPER_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_CURRENT_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_ALL_ATTRIBUTE_LIST,
                                const GGS_bool& var_cas_IS_ABSTRACT,
                                const GGS_abstractMethodDefinitionListForGeneration & var_cas_ABSTRACT_METHOD_LIST,
                                const GGS_methodDefinitionListForGeneration & var_cas_CONCRETE_METHOD_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_CURRENT_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_ALL_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_IS_ABSTRACT.isBuilt ()
    && var_cas_ABSTRACT_METHOD_LIST.isBuilt ()
    && var_cas_CONCRETE_METHOD_LIST.isBuilt () ;
  if (isBuilt) {
result << "//--- Attributes\n" ;
GGS_typedAttributeList::cEnumerator enumerator_53 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_53 = NULL ;
while (((operand_53 = enumerator_53.nextObject ()))) {
macroValidPointer (operand_53) ;
result << "  public : GALGAS_" ;
result << operand_53->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (4)) ;
result << " mAttribute_" ;
result << operand_53->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "//--- Constructor\n"
  "  public : cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_297 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_297 = NULL ;
while (((operand_297 = enumerator_297.nextObject ()))) {
macroValidPointer (operand_297) ;
result << "const GALGAS_" ;
result << operand_297->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (10)) ;
result << " & in_" ;
result << operand_297->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_297.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
result << ") ;\n" ;
GGS_abstractMethodDefinitionListForGeneration::cEnumerator enumerator_593 (var_cas_ABSTRACT_METHOD_LIST, true) ;
const GGS_abstractMethodDefinitionListForGeneration::cElement * operand_593 = NULL ;
while (((operand_593 = enumerator_593.nextObject ()))) {
macroValidPointer (operand_593) ;
result << "//--- Abstract method " ;
result << operand_593->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (21)) ;
result << "\n"
  "  public : virtual void method_" ;
result << operand_593->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_750 (operand_593->mSignature, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_750 = NULL ;
while (((operand_750 = enumerator_750.nextObject ()))) {
macroValidPointer (operand_750) ;
if ((operand_750->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (24))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_750->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (25)) ;
result << " " ;
}else if ((operand_750->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (26))).boolValue ()) {
result << "GALGAS_" ;
result << operand_750->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (27)) ;
result << " & " ;
}else if ((operand_750->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (28))).boolValue ()) {
result << "GALGAS_" ;
result << operand_750->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (29)) ;
result << " & " ;
}else if ((operand_750->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_SOURCE_FILE_AT_LINE (30))).boolValue ()) {
result << "GALGAS_" ;
result << operand_750->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (31)) ;
result << " " ;
}else {
}
result << operand_750->mFormalArgumentCppName ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const = 0 ;\n"
  "\n" ;
}
GGS_methodDefinitionListForGeneration::cEnumerator enumerator_1563 (var_cas_CONCRETE_METHOD_LIST, true) ;
const GGS_methodDefinitionListForGeneration::cElement * operand_1563 = NULL ;
while (((operand_1563 = enumerator_1563.nextObject ()))) {
macroValidPointer (operand_1563) ;
result << "//--- Concrete method " ;
result << operand_1563->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (40)) ;
result << "\n"
  "  public : virtual void method_" ;
result << operand_1563->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_1720 (operand_1563->mSignature, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_1720 = NULL ;
while (((operand_1720 = enumerator_1720.nextObject ()))) {
macroValidPointer (operand_1720) ;
if ((operand_1720->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (43))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_1720->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (44)) ;
result << " " ;
}else if ((operand_1720->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (45))).boolValue ()) {
result << "GALGAS_" ;
result << operand_1720->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (46)) ;
result << " & " ;
}else if ((operand_1720->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (47))).boolValue ()) {
result << "GALGAS_" ;
result << operand_1720->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (48)) ;
result << " & " ;
}else if ((operand_1720->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_SOURCE_FILE_AT_LINE (49))).boolValue ()) {
result << "GALGAS_" ;
result << operand_1720->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (50)) ;
result << " " ;
}else {
}
result << operand_1720->mFormalArgumentCppName ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}
if ((var_cas_IS_ABSTRACT).operator_not ().boolValue ()) {
result << "//--- Description\n"
  "  public : virtual void description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 inIndentation) const ;\n"
  "\n"
  "  public : virtual const C_galgas_type_descriptor * classDescriptor (void) const ;\n" ;
}else {
}
result << "\n"
  "} ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'classTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_classTypeSpecificImplementation (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_SUPER_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_CURRENT_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_ALL_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_INHERITED_ATTRIBUTE_LIST,
                                const GGS_bool& var_cas_IS_ABSTRACT,
                                const GGS_abstractMethodDefinitionListForGeneration & var_cas_ABSTRACT_METHOD_LIST,
                                const GGS_methodDefinitionListForGeneration & var_cas_CONCRETE_METHOD_LIST,
                                const GGS_instanceMethodMap & var_cas_INSTANCE_METHOD_MAP) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_CURRENT_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_ALL_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_INHERITED_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_IS_ABSTRACT.isBuilt ()
    && var_cas_ABSTRACT_METHOD_LIST.isBuilt ()
    && var_cas_CONCRETE_METHOD_LIST.isBuilt ()
    && var_cas_INSTANCE_METHOD_MAP.isBuilt () ;
  if (isBuilt) {
if ((var_cas_CURRENT_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand) const {\n"
  "  return (isValid () && inOperand.isValid ()) \? kOperandEqual : kOperandNotValid ;\n"
  "}\n"
  "\n" ;
}else {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand) const {\n" ;
if ((var_cas_SUPER_TYPE_IDENTIFIER).operator_isEqual (GGS_string ("")).boolValue ()) {
result << "  enumComparisonResult result = kOperandEqual ;\n" ;
}else {
result << "  enumComparisonResult result = " ;
if ((var_cas_SUPER_TYPE_IDENTIFIER).operator_isEqual (GGS_string ("")).boolValue ()) {
result << "AC_GALGAS_class" ;
}else {
result << "GALGAS_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
}
result << "::objectCompare (inOperand) ;\n" ;
}
if ((var_cas_CURRENT_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "  const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) mObjectPtr ;\n"
  "  macroNullOrValidObject (p, const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * q = (const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inOperand.mObjectPtr ;\n"
  "  macroNullOrValidObject (q, const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1265 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1265 = NULL ;
while (((operand_1265 = enumerator_1265.nextObject ()))) {
macroValidPointer (operand_1265) ;
result << "  if (kOperandEqual == result) {\n"
  "    result = p->mAttribute_" ;
result << operand_1265->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".objectCompare (q->mAttribute_" ;
result << operand_1265->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
}else {
}
result << "  return result ;\n"
  "}\n"
  "\n" ;
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) :\n" ;
if ((var_cas_SUPER_TYPE_IDENTIFIER).operator_isEqual (GGS_string ("")).boolValue ()) {
result << "AC_GALGAS_class" ;
}else {
result << "GALGAS_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
}
result << " () {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inSourcePtr) :\n" ;
if ((var_cas_SUPER_TYPE_IDENTIFIER).operator_isEqual (GGS_string ("")).boolValue ()) {
result << "AC_GALGAS_class" ;
}else {
result << "GALGAS_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
}
result << " (inSourcePtr) {\n"
  "  macroNullOrValidObject (inSourcePtr, const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "}\n"
  "\n" ;
if (((var_cas_IS_ABSTRACT).operator_not ()).operator_and ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  macroMyNew (result.mObjectPtr, cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}else {
}
if (((var_cas_IS_ABSTRACT).operator_not ()).operator_and ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_2837 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2837 = NULL ;
while (((operand_2837 = enumerator_2837.nextObject ()))) {
macroValidPointer (operand_2837) ;
result << "const GALGAS_" ;
result << operand_2837->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (56)) ;
result << " & inAttribute_" ;
result << operand_2837->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_2837.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (" ;
GGS_typedAttributeList::cEnumerator enumerator_3198 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3198 = NULL ;
while (((operand_3198 = enumerator_3198.nextObject ()))) {
macroValidPointer (operand_3198) ;
result << "inAttribute_" ;
result << operand_3198->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
if (enumerator_3198.hasNextObject ()) {
result << " && " ;
}
}
result << ") {\n"
  "    macroMyNew (result.mObjectPtr, cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_3414 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3414 = NULL ;
while (((operand_3414 = enumerator_3414.nextObject ()))) {
macroValidPointer (operand_3414) ;
result << "inAttribute_" ;
result << operand_3414->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_3414.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_THERE)) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}else {
}
if (((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).operator_and ((var_cas_IS_ABSTRACT).operator_not ()).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (LOCATION_ARGS) {\n"
  "  if (isValid () && (mObjectPtr->retainCount () > 1)) {\n"
  "    cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) mObjectPtr ;\n"
  "    macroValidObject (p, cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * r = NULL ;\n"
  "    macroMyNew (r, cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_4128 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4128 = NULL ;
while (((operand_4128 = enumerator_4128.nextObject ()))) {
macroValidPointer (operand_4128) ;
result << "p->mAttribute_" ;
result << operand_4128->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_4128.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_THERE)) ;\n"
  "    macroAssignObject (mObjectPtr, r) ;\n"
  "    macroReleaseObject (r) ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}else {
}
GGS_methodDefinitionListForGeneration::cEnumerator enumerator_4382 (var_cas_CONCRETE_METHOD_LIST, true) ;
const GGS_methodDefinitionListForGeneration::cElement * operand_4382 = NULL ;
while (((operand_4382 = enumerator_4382.nextObject ()))) {
macroValidPointer (operand_4382) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << function_generateProcedure (inLexique, (((GGS_string ("cPtr_")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string ("::method_"))).operator_concat (operand_4382->mMethodName.ggs_string ().reader_identifierRepresentation ()), operand_4382->mSignature, operand_4382->mInstructionList, GGS_bool (true), GGS_string ("C_Compiler"), GGS_bool (true), GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (104)) ;
}
GGS_typedAttributeList::cEnumerator enumerator_4796 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4796 = NULL ;
while (((operand_4796 = enumerator_4796.nextObject ()))) {
macroValidPointer (operand_4796) ;
if (operand_4796->mHasGetter.boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_4796->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (118)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_4796->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (UNUSED_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << operand_4796->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (119)) ;
result << " result ;\n"
  "  if (NULL != mObjectPtr) {\n"
  "    const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) mObjectPtr ;\n"
  "    macroValidObject (p, const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    result = p->mAttribute_" ;
result << operand_4796->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}else {
}
}
GGS_typedAttributeList::cEnumerator enumerator_5542 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5542 = NULL ;
while (((operand_5542 = enumerator_5542.nextObject ()))) {
macroValidPointer (operand_5542) ;
if (operand_5542->mHasSetter.boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_set" ;
result << operand_5542->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << operand_5542->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (133)) ;
result << " inValue\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  if (NULL != mObjectPtr) {\n"
  "    cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) mObjectPtr ;\n"
  "    macroValidObject (p, cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    p->mAttribute_" ;
result << operand_5542->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " = inValue ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}else {
}
}
GGS_instanceMethodMap::cEnumerator enumerator_6257 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_6257 = NULL ;
while (((operand_6257 = enumerator_6257.nextObject ()))) {
macroValidPointer (operand_6257) ;
if ((operand_6257->mInfo.mIsCategory).operator_not ().boolValue ()) {
if ((((operand_6257->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (146)))).operator_or ((operand_6257->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (146))))).operator_or ((operand_6257->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasicFinal (inLexique COMMA_SOURCE_FILE_AT_LINE (146)))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_" ;
result << operand_6257->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_6645 (operand_6257->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_6645 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6645 = enumerator_6645.nextObject ()))) {
macroValidPointer (operand_6645) ;
switch (operand_6645->mFormalArgumentPassingMode.enumValue ()) {
case GGS_formalArgumentPassingModeAST::kNotBuilt:
break ;
case GGS_formalArgumentPassingModeAST::enum_argumentConstantIn:
result << "GALGAS_" ;
result << operand_6645->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (152)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (152)) ;
break ;
case GGS_formalArgumentPassingModeAST::enum_argumentInOut:
result << "GALGAS_" ;
result << operand_6645->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (154)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (154)) ;
break ;
case GGS_formalArgumentPassingModeAST::enum_argumentOut:
result << "GALGAS_" ;
result << operand_6645->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (156)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (156)) ;
break ;
case GGS_formalArgumentPassingModeAST::enum_argumentIn:
result << "GALGAS_" ;
result << operand_6645->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (158)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (158)) ;
break ;
}
if (enumerator_6645.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_6257->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_6257->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_6257->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") const {\n"
  "  if (mObjectPtr != NULL) {\n"
  "    const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) mObjectPtr ;\n"
  "    macroValidObject (p, const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    p->method_" ;
result << operand_6257->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_formalParameterSignature::cEnumerator enumerator_7998 (operand_6257->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_7998 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7998 = enumerator_7998.nextObject ()))) {
macroValidPointer (operand_7998) ;
if ((operand_7998->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (183))).boolValue ()) {
result << "constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (184)) ;
result << ", " ;
}else if ((operand_7998->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (185))).boolValue ()) {
result << "ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (186)) ;
result << ", " ;
}else if ((operand_7998->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (187))).boolValue ()) {
result << "outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (188)) ;
result << ", " ;
}else {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (190)) ;
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "inCompiler COMMA_THERE) ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}else {
}
}else {
}
}
result << "//---------------------------------------------------------------------------*\n"
  "//" ;
result << ((GGS_string ("Pointer class for @")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_8959 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8959 = NULL ;
while (((operand_8959 = enumerator_8959.nextObject ()))) {
macroValidPointer (operand_8959) ;
result << "const GALGAS_" ;
result << operand_8959->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (206)) ;
result << " & in_" ;
result << operand_8959->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_8959.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
result << ") :\n" ;
if ((var_cas_SUPER_TYPE_IDENTIFIER).operator_isEqual (GGS_string ("")).boolValue ()) {
result << "acPtr_class" ;
}else {
result << "cPtr_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
}
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_9360 (var_cas_INHERITED_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9360 = NULL ;
while (((operand_9360 = enumerator_9360.nextObject ()))) {
macroValidPointer (operand_9360) ;
result << "in_" ;
result << operand_9360->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_9360.hasNextObject ()) {
result << ", " ;
}
}
if ((var_cas_INHERITED_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << " COMMA_THERE" ;
}else {
result << "THERE" ;
}
result << ")" ;
GGS_typedAttributeList::cEnumerator enumerator_9578 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9578 = NULL ;
while (((operand_9578 = enumerator_9578.nextObject ()))) {
macroValidPointer (operand_9578) ;
result << ",\n"
  "mAttribute_" ;
result << operand_9578->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (in_" ;
result << operand_9578->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
}
result << " {\n"
  "}\n"
  "\n" ;
if ((var_cas_IS_ABSTRACT).operator_not ().boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor * cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::classDescriptor (void) const {\n"
  "  return & kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "}\n"
  "\n" ;
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "void cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 /* inIndentation */) const {\n"
  "  ioString << \"[@" ;
result << var_cas_TYPE_NAME ;
result << "]\" ;\n"
  "}\n"
  "\n" ;
}else {
result << "void cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 inIndentation) const {\n"
  "  ioString << \"[@" ;
result << var_cas_TYPE_NAME ;
result << ":\" ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_10486 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10486 = NULL ;
while (((operand_10486 = enumerator_10486.nextObject ()))) {
macroValidPointer (operand_10486) ;
result << "  mAttribute_" ;
result << operand_10486->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".description (ioString, inIndentation+1) ;\n" ;
if (enumerator_10486.hasNextObject ()) {
result << "  ioString << \", \" ;\n" ;
}
}
result << "  ioString << \"]\" ;\n"
  "}\n"
  "\n" ;
}
}else {
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'listmapTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_listmapTypeSpecificImplementation (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_ASSOCIATED_LISTTYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ASSOCIATED_LISTTYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_listmap ((GALGAS_list * (*) (LOCATION_ARGS)) GALGASap_uintlist::constructor_emptyList COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyMap (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioObject\n"
  "                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioObject->retainCount () > 1) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * source = ioObject ;\n"
  "    macroReleaseObject (ioObject) ;\n"
  "    ioObject = constructor_emptyMap (THERE) ;\n"
  "    ioObject->copyFrom (source) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void addAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_string * inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_1208 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1208 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1208 = enumerator_1208.nextObject ()))) {
macroValidPointer (operand_1208) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_1208->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioResult COMMA_THERE) ;\n"
  "    GALGAS_object * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (37)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_1564 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1564 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1564 = enumerator_1564.nextObject ()))) {
macroValidPointer (operand_1564) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (39)) ;
if (enumerator_1564.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "    ioResult->addObject (inKey, attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'mapProxyTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_mapProxyTypeSpecificImplementation (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_mapSearchMethodListAST & var_cas_SEARCH_METHOD_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_SEARCH_METHOD_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_mapproxy (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (4)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4)) ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_null (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::class_method_makeRegularProxy (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << " & ioMap,\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_string inKey,\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & outProxy\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  outProxy.drop () ;\n"
  "  if (inKey.isValid () && ioMap.isValid ()) {\n"
  "    ioMap.insulate (HERE) ;\n"
  "    GALGAS_classMapIndex * p = NULL ;\n"
  "    macroMyNew (p, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "    outProxy = p ;\n"
  "    outProxy.ptr (HERE)->internalMakeRegularProxy (ioMap.ptr (HERE), inKey) ;\n"
  "  }\n"
  "}\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1254 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1254 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1254 = enumerator_1254.nextObject ()))) {
macroValidPointer (operand_1254) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << operand_1254->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_1254->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  GALGASap_" ;
result << operand_1254->mAttributeTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (34)) ;
result << " result ;\n"
  "  capCollectionElement attributeList = getAttributeList (inCompiler COMMA_THERE) ;\n"
  "  if (attributeList.ptrNoVerif () != NULL) {\n"
  "    macroValidObject (attributeList.ptrNoVerif (), cCollectionElement_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    result = ((cCollectionElement_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << " *) attributeList.ptrNoVerif ())->mAttribute_" ;
result << operand_1254->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ";\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_mapSearchMethodListAST::cEnumerator enumerator_2182 (var_cas_SEARCH_METHOD_LIST, true) ;
const GGS_mapSearchMethodListAST::cElement * operand_2182 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2182 = enumerator_2182.nextObject ()))) {
macroValidPointer (operand_2182) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_" ;
result << operand_2182->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << " & inMap,\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_lstring & inKey,\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (inMap.isValid () && inKey.isValid ()) {\n" ;
const GGS_uint indentation_3301 = GGS_uint (4U) ;
if (indentation_3301.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_3301.uintValue ()) ;
}
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = NULL ;\n"
  "macroMyNew (p, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "result = p ;\n"
  "const utf32 kSearchErrorMessage [" ;
result << operand_2182->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (56)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (56)) ;
result << "] = " ;
result << operand_2182->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "const bool ok = result.ptr (HERE)->internalSearchKey (inMap, inKey, kSearchErrorMessage, inCompiler COMMA_THERE) ;\n"
  "if (! ok) {\n"
  "  result.drop () ;\n"
  "}\n" ;
 ;
if (indentation_3301.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_3301.uintValue ())) ;
}
result << "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of wrapper 'semanticComponentGenerationTemplate'       *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapperEx * gWrapperAllFiles_semanticComponentGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- All sub-directories of '' directory

static const cDirectoryWrapperEx * gWrapperAllDirectories_semanticComponentGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- Directory ''

const cDirectoryWrapperEx gWrapperDirectory_0_semanticComponentGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_semanticComponentGenerationTemplate_0,
  0,
  gWrapperAllDirectories_semanticComponentGenerationTemplate_0
) ;

//---------------------------------------------------------------------------*
//                                                                           *
//'abstractCategoryReaderDeclaration' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_abstractCategoryReaderDeclaration (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_CLASS_NAME,
                                const GGS_string& var_cas_READER_NAME,
                                const GGS_formalInputParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST,
                                const GGS_unifiedTypeMapProxy & var_cas_RETURN_TYPE) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_CLASS_NAME.isBuilt ()
    && var_cas_READER_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt ()
    && var_cas_RETURN_TYPE.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((((GGS_string ("Abstract category reader '@")).operator_concat (var_cas_CLASS_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_READER_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "typedef GALGAS_" ;
result << var_cas_RETURN_TYPE.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (7)) ;
result << " (*categoryReaderSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << ") (" ;
columnMarker = result.currentColumn () ;
result << "const cPtr_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << " * inObject" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_700 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_700 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_700 = enumerator_700.nextObject ()))) {
macroValidPointer (operand_700) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_700->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
result << " & constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void enterCategoryReader_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const PMSInt32 inClassIndex,\n"
  "               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "categoryReaderSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " inMethod) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_RETURN_TYPE.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (23)) ;
result << " callCategoryReader_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const cPtr_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << " * inObject" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_1521 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_1521 = NULL ;
while (((operand_1521 = enumerator_1521.nextObject ()))) {
macroValidPointer (operand_1521) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_1521->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (26)) ;
result << " & constin_" ;
result << operand_1521->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'abstractCategoryReaderImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_abstractCategoryReaderImplementation (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_CLASS_NAME,
                                const GGS_string& var_cas_READER_NAME,
                                const GGS_formalInputParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST,
                                const GGS_unifiedTypeMapProxy & var_cas_RETURN_TYPE) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_CLASS_NAME.isBuilt ()
    && var_cas_READER_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt ()
    && var_cas_RETURN_TYPE.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((((GGS_string ("Abstract category reader '@")).operator_concat (var_cas_CLASS_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_READER_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static TC_UniqueArray <categoryReaderSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << "> gCategoryReaderTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void enterCategoryReader_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const PMSInt32 inClassIndex,\n"
  "               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "categoryReaderSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " inReader) {\n"
  "  gCategoryReaderTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << ".forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static void freeCategoryReader_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " (void) {\n"
  "  gCategoryReaderTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << ".free () ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "C_PrologueEpilogue gReader_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "NULL,\n"
  "       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "freeCategoryReader_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << ") ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_RETURN_TYPE.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (29)) ;
result << " callCategoryReader_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const cPtr_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << " * inObject" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_2091 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_2091 = NULL ;
while (((operand_2091 = enumerator_2091.nextObject ()))) {
macroValidPointer (operand_2091) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_2091->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
result << " & constin_" ;
result << operand_2091->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_RETURN_TYPE.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (36)) ;
result << " result ;\n"
  "//--- Find Reader\n"
  "  if (NULL != inObject) {\n"
  "    macroValidObject (inObject, const cPtr_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << ") ;\n"
  "    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;\n"
  "    const PMSInt32 classIndex = info->mSlotID ;\n"
  "    categoryReaderSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " f = NULL ;\n"
  "    if (classIndex < gCategoryReaderTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << ".count ()) {\n"
  "      f = gCategoryReaderTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " (classIndex COMMA_HERE) ;\n"
  "    }\n"
  "    if (NULL == f) {\n"
  "       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;\n"
  "       while ((NULL == f) && (NULL != p)) {\n"
  "         if (p->mSlotID < gCategoryReaderTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << ".count ()) {\n"
  "           f = gCategoryReaderTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " (p->mSlotID COMMA_HERE) ;\n"
  "         }\n"
  "         p = p->mSuperclassDescriptor ;\n"
  "       }\n"
  "       gCategoryReaderTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << ".forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;\n"
  "    }\n"
  "    result = f (inObject, " ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_3751 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_3751 = NULL ;
while (((operand_3751 = enumerator_3751.nextObject ()))) {
macroValidPointer (operand_3751) ;
result << "constin_" ;
result << operand_3751->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
result << ", " ;
}
result << "inCompiler COMMA_THERE) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'categoryReaderDeclaration' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_categoryReaderDeclaration (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_CLASS_NAME,
                                const GGS_string& var_cas_READER_NAME,
                                const GGS_formalInputParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST,
                                const GGS_unifiedTypeMapProxy & var_cas_RETURN_TYPE) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_CLASS_NAME.isBuilt ()
    && var_cas_READER_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt ()
    && var_cas_RETURN_TYPE.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((((GGS_string ("Category reader '@")).operator_concat (var_cas_CLASS_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_READER_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "typedef GALGAS_" ;
result << var_cas_RETURN_TYPE.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (7)) ;
result << " (*categoryReaderSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << ") (" ;
columnMarker = result.currentColumn () ;
result << "const cPtr_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << " * inObject" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_691 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_691 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_691 = enumerator_691.nextObject ()))) {
macroValidPointer (operand_691) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_691->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
result << " & constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void enterCategoryReader_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const PMSInt32 inClassIndex,\n"
  "               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "categoryReaderSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " inReader) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_RETURN_TYPE.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (23)) ;
result << " callCategoryReader_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const cPtr_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << " * inObject" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_1512 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_1512 = NULL ;
while (((operand_1512 = enumerator_1512.nextObject ()))) {
macroValidPointer (operand_1512) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_1512->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (26)) ;
result << " & constin_" ;
result << operand_1512->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'categoryReaderImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_categoryReaderImplementation (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_CLASS_NAME,
                                const GGS_string& var_cas_READER_NAME,
                                const GGS_formalInputParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST,
                                const GGS_unifiedTypeMapProxy & var_cas_RETURN_TYPE,
                                const GGS_string& var_cas_READER_IMPLEMENTATION) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_CLASS_NAME.isBuilt ()
    && var_cas_READER_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt ()
    && var_cas_RETURN_TYPE.isBuilt ()
    && var_cas_READER_IMPLEMENTATION.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((((GGS_string ("Category reader '@")).operator_concat (var_cas_CLASS_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_READER_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static TC_UniqueArray <categoryReaderSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << "> gCategoryReaderTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void enterCategoryReader_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const PMSInt32 inClassIndex,\n"
  "               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "categoryReaderSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " inReader) {\n"
  "  gCategoryReaderTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << ".forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_RETURN_TYPE.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (18)) ;
result << " callCategoryReader_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const cPtr_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << " * inObject" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_1442 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_1442 = NULL ;
while (((operand_1442 = enumerator_1442.nextObject ()))) {
macroValidPointer (operand_1442) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_1442->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (21)) ;
result << " constin_" ;
result << operand_1442->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_RETURN_TYPE.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (25)) ;
result << " result ;\n"
  "//--- Find Reader\n"
  "  if (NULL != inObject) {\n"
  "    macroValidObject (inObject, const cPtr_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << ") ;\n"
  "    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;\n"
  "    const PMSInt32 classIndex = info->mSlotID ;\n"
  "    categoryReaderSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " f = NULL ;\n"
  "    if (classIndex < gCategoryReaderTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << ".count ()) {\n"
  "      f = gCategoryReaderTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " (classIndex COMMA_HERE) ;\n"
  "    }\n"
  "    if (NULL == f) {\n"
  "       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;\n"
  "       while ((NULL == f) && (NULL != p)) {\n"
  "         if (p->mSlotID < gCategoryReaderTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << ".count ()) {\n"
  "           f = gCategoryReaderTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " (p->mSlotID COMMA_HERE) ;\n"
  "         }\n"
  "         p = p->mSuperclassDescriptor ;\n"
  "       }\n"
  "       gCategoryReaderTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << ".forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;\n"
  "    }\n"
  "    result = f (inObject, " ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_3100 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_3100 = NULL ;
while (((operand_3100 = enumerator_3100.nextObject ()))) {
macroValidPointer (operand_3100) ;
result << "constin_" ;
result << operand_3100->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
result << ", " ;
}
result << "inCompiler COMMA_THERE) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << var_cas_READER_IMPLEMENTATION ;
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static void defineCategoryReader_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " (void) {\n"
  "  enterCategoryReader_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "kTypeDescriptor_GALGAS_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << ".mSlotID,\n"
  "        " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "categoryReader_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << ") ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static void freeCategoryReader_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " (void) {\n"
  "  gCategoryReaderTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << ".free () ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "C_PrologueEpilogue gReader_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "defineCategoryReader_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << ",\n"
  "       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "freeCategoryReader_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << ") ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'overridingCategoryReaderImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_overridingCategoryReaderImplementation (C_CompilerEx & /* inLexique */,
                                const GGS_string& var_cas_CLASS_NAME,
                                const GGS_string& var_cas_READER_NAME,
                                const GGS_unifiedTypeMapProxy & var_cas_RETURN_TYPE,
                                const GGS_string& var_cas_READER_IMPLEMENTATION) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_CLASS_NAME.isBuilt ()
    && var_cas_READER_NAME.isBuilt ()
    && var_cas_RETURN_TYPE.isBuilt ()
    && var_cas_READER_IMPLEMENTATION.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((((GGS_string ("Overriding category reader '@")).operator_concat (var_cas_CLASS_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_READER_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << var_cas_READER_IMPLEMENTATION ;
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static void defineCategoryReader_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " (void) {\n"
  "  enterCategoryReader_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "kTypeDescriptor_GALGAS_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << ".mSlotID,\n"
  "        " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "categoryReader_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << ") ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "C_PrologueEpilogue gReader_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << " (defineCategoryReader_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_READER_NAME.reader_identifierRepresentation () ;
result << ", NULL) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'abstractCategoryMethodDeclaration' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_abstractCategoryMethodDeclaration (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_CLASS_NAME,
                                const GGS_string& var_cas_METHOD_NAME,
                                const GGS_formalParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_CLASS_NAME.isBuilt ()
    && var_cas_METHOD_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((((GGS_string ("Abstract category method '@")).operator_concat (var_cas_CLASS_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_METHOD_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "typedef void (*categoryMethodSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ") (" ;
columnMarker = result.currentColumn () ;
result << "const cPtr_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << " * inObject" ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_656 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_656 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_656 = enumerator_656.nextObject ()))) {
macroValidPointer (operand_656) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_656->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (11))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_656->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
}else if ((operand_656->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (13))).boolValue ()) {
result << "GALGAS_" ;
result << operand_656->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
}else if ((operand_656->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (15))).boolValue ()) {
result << "GALGAS_" ;
result << operand_656->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
}else {
result << "GALGAS_" ;
result << operand_656->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (18)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (18)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void enterCategoryMethod_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const PMSInt32 inClassIndex,\n"
  "               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "categoryMethodSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " inMethod) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void callCategoryMethod_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const cPtr_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << " * inObject" ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_2020 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_2020 = NULL ;
while (((operand_2020 = enumerator_2020.nextObject ()))) {
macroValidPointer (operand_2020) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_2020->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (34))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_2020->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << " constin_" ;
result << operand_2020->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else if ((operand_2020->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (36))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2020->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (37)) ;
result << " & io_" ;
result << operand_2020->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else if ((operand_2020->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (38))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2020->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (39)) ;
result << " & out_" ;
result << operand_2020->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else {
result << "GALGAS_" ;
result << operand_2020->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (41)) ;
result << " in_" ;
result << operand_2020->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'abstractCategoryMethodImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_abstractCategoryMethodImplementation (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_CLASS_NAME,
                                const GGS_string& var_cas_METHOD_NAME,
                                const GGS_formalParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_CLASS_NAME.isBuilt ()
    && var_cas_METHOD_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((((GGS_string ("Abstract category method '@")).operator_concat (var_cas_CLASS_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_METHOD_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static TC_UniqueArray <categoryMethodSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << "> gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void enterCategoryMethod_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const PMSInt32 inClassIndex,\n"
  "               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "categoryMethodSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " inMethod) {\n"
  "  gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ".forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static void freeCategoryMethod_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (void) {\n"
  "  gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ".free () ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "C_PrologueEpilogue gMethod_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "NULL,\n"
  "       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "freeCategoryMethod_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ") ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void callCategoryMethod_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const cPtr_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << " * inObject" ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_2047 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_2047 = NULL ;
while (((operand_2047 = enumerator_2047.nextObject ()))) {
macroValidPointer (operand_2047) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_2047->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (32))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_2047->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (33)) ;
result << " constin_" ;
result << operand_2047->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else if ((operand_2047->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (34))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2047->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << " & io_" ;
result << operand_2047->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else if ((operand_2047->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (36))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2047->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (37)) ;
result << " & out_" ;
result << operand_2047->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else {
result << "GALGAS_" ;
result << operand_2047->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (39)) ;
result << " in_" ;
result << operand_2047->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "//--- Drop output arguments\n" ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_2990 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_2990 = NULL ;
while (((operand_2990 = enumerator_2990.nextObject ()))) {
macroValidPointer (operand_2990) ;
if ((operand_2990->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (47))).boolValue ()) {
result << "  out_" ;
result << operand_2990->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
result << ".drop () ;\n" ;
}else {
}
}
result << "//--- Find method\n"
  "  if (NULL != inObject) {\n"
  "    macroValidObject (inObject, const cPtr_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << ") ;\n"
  "    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;\n"
  "    const PMSInt32 classIndex = info->mSlotID ;\n"
  "    categoryMethodSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " f = NULL ;\n"
  "    if (classIndex < gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ".count ()) {\n"
  "      f = gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (classIndex COMMA_HERE) ;\n"
  "    }\n"
  "    if (NULL == f) {\n"
  "       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;\n"
  "       while ((NULL == f) && (NULL != p)) {\n"
  "         if (p->mSlotID < gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ".count ()) {\n"
  "           f = gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (p->mSlotID COMMA_HERE) ;\n"
  "         }\n"
  "         p = p->mSuperclassDescriptor ;\n"
  "       }\n"
  "       gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ".forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;\n"
  "    }\n"
  "    f (inObject, " ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_4549 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_4549 = NULL ;
while (((operand_4549 = enumerator_4549.nextObject ()))) {
macroValidPointer (operand_4549) ;
if ((operand_4549->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (72))).boolValue ()) {
result << "constin_" ;
result << operand_4549->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else if ((operand_4549->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (74))).boolValue ()) {
result << "io_" ;
result << operand_4549->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else if ((operand_4549->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (76))).boolValue ()) {
result << "out_" ;
result << operand_4549->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else {
result << "in_" ;
result << operand_4549->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}
result << ", " ;
}
result << "inCompiler COMMA_THERE) ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'categoryMethodDeclaration' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_categoryMethodDeclaration (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_CLASS_NAME,
                                const GGS_string& var_cas_METHOD_NAME,
                                const GGS_formalParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_CLASS_NAME.isBuilt ()
    && var_cas_METHOD_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((((GGS_string ("Category method '@")).operator_concat (var_cas_CLASS_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_METHOD_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "typedef void (*categoryMethodSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ") (" ;
columnMarker = result.currentColumn () ;
result << "const cPtr_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << " * inObject" ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_647 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_647 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_647 = enumerator_647.nextObject ()))) {
macroValidPointer (operand_647) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_647->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (11))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_647->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
}else if ((operand_647->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (13))).boolValue ()) {
result << "GALGAS_" ;
result << operand_647->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
}else if ((operand_647->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (15))).boolValue ()) {
result << "GALGAS_" ;
result << operand_647->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
}else {
result << "GALGAS_" ;
result << operand_647->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (18)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (18)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void enterCategoryMethod_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const PMSInt32 inClassIndex,\n"
  "               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "categoryMethodSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " inMethod) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void callCategoryMethod_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const cPtr_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << " * inObject" ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_2011 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_2011 = NULL ;
while (((operand_2011 = enumerator_2011.nextObject ()))) {
macroValidPointer (operand_2011) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_2011->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (34))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_2011->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << " constin_" ;
result << operand_2011->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else if ((operand_2011->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (36))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2011->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (37)) ;
result << " & io_" ;
result << operand_2011->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else if ((operand_2011->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (38))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2011->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (39)) ;
result << " & out_" ;
result << operand_2011->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else {
result << "GALGAS_" ;
result << operand_2011->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (41)) ;
result << " in_" ;
result << operand_2011->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'categoryMethodImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_categoryMethodImplementation (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_CLASS_NAME,
                                const GGS_string& var_cas_METHOD_NAME,
                                const GGS_formalParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST,
                                const GGS_string& var_cas_METHOD_IMPLEMENTATION) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_CLASS_NAME.isBuilt ()
    && var_cas_METHOD_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt ()
    && var_cas_METHOD_IMPLEMENTATION.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((((GGS_string ("Category method '@")).operator_concat (var_cas_CLASS_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_METHOD_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static TC_UniqueArray <categoryMethodSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << "> gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void enterCategoryMethod_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const PMSInt32 inClassIndex,\n"
  "               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "categoryMethodSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " inMethod) {\n"
  "  gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ".forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void callCategoryMethod_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const cPtr_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << " * inObject" ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_1398 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_1398 = NULL ;
while (((operand_1398 = enumerator_1398.nextObject ()))) {
macroValidPointer (operand_1398) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_1398->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (21))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_1398->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (22)) ;
result << " constin_" ;
result << operand_1398->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else if ((operand_1398->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (23))).boolValue ()) {
result << "GALGAS_" ;
result << operand_1398->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (24)) ;
result << " & io_" ;
result << operand_1398->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else if ((operand_1398->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (25))).boolValue ()) {
result << "GALGAS_" ;
result << operand_1398->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (26)) ;
result << " & out_" ;
result << operand_1398->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else {
result << "GALGAS_" ;
result << operand_1398->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (28)) ;
result << " in_" ;
result << operand_1398->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "//--- Drop output arguments\n" ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_2341 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_2341 = NULL ;
while (((operand_2341 = enumerator_2341.nextObject ()))) {
macroValidPointer (operand_2341) ;
if ((operand_2341->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (36))).boolValue ()) {
result << "  out_" ;
result << operand_2341->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
result << ".drop () ;\n" ;
}else {
}
}
result << "//--- Find method\n"
  "  if (NULL != inObject) {\n"
  "    macroValidObject (inObject, const cPtr_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << ") ;\n"
  "    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;\n"
  "    const PMSInt32 classIndex = info->mSlotID ;\n"
  "    categoryMethodSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " f = NULL ;\n"
  "    if (classIndex < gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ".count ()) {\n"
  "      f = gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (classIndex COMMA_HERE) ;\n"
  "    }\n"
  "    if (NULL == f) {\n"
  "       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;\n"
  "       while ((NULL == f) && (NULL != p)) {\n"
  "         if (p->mSlotID < gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ".count ()) {\n"
  "           f = gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (p->mSlotID COMMA_HERE) ;\n"
  "         }\n"
  "         p = p->mSuperclassDescriptor ;\n"
  "       }\n"
  "       gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ".forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;\n"
  "    }\n"
  "    f (inObject, " ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_3900 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_3900 = NULL ;
while (((operand_3900 = enumerator_3900.nextObject ()))) {
macroValidPointer (operand_3900) ;
if ((operand_3900->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (61))).boolValue ()) {
result << "constin_" ;
result << operand_3900->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else if ((operand_3900->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (63))).boolValue ()) {
result << "io_" ;
result << operand_3900->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else if ((operand_3900->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (65))).boolValue ()) {
result << "out_" ;
result << operand_3900->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else {
result << "in_" ;
result << operand_3900->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}
result << ", " ;
}
result << "inCompiler COMMA_THERE) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << var_cas_METHOD_IMPLEMENTATION ;
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static void defineCategoryMethod_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (void) {\n"
  "  enterCategoryMethod_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "kTypeDescriptor_GALGAS_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << ".mSlotID,\n"
  "        " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "categoryMethod_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ") ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static void freeCategoryMethod_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (void) {\n"
  "  gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ".free () ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "C_PrologueEpilogue gMethod_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "defineCategoryMethod_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ",\n"
  "       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "freeCategoryMethod_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ") ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'overridingCategoryMethodImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_overridingCategoryMethodImplementation (C_CompilerEx & /* inLexique */,
                                const GGS_string& var_cas_CLASS_NAME,
                                const GGS_string& var_cas_METHOD_NAME,
                                const GGS_string& var_cas_METHOD_IMPLEMENTATION) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_CLASS_NAME.isBuilt ()
    && var_cas_METHOD_NAME.isBuilt ()
    && var_cas_METHOD_IMPLEMENTATION.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((((GGS_string ("Overriding category method '@")).operator_concat (var_cas_CLASS_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_METHOD_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << var_cas_METHOD_IMPLEMENTATION ;
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static void defineCategoryMethod_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (void) {\n"
  "  enterCategoryMethod_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "kTypeDescriptor_GALGAS_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << ".mSlotID,\n"
  "        " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "categoryMethod_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ") ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "C_PrologueEpilogue gMethod_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (defineCategoryMethod_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ", NULL) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'filewrapperDeclaration' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_filewrapperDeclaration (C_CompilerEx & /* inLexique */,
                                const GGS_stringlist & var_cas_FILE_INDEX_STRING_LIST,
                                const GGS_string& var_cas_FILEWRAPPER_NAME) {
  C_String result ;
  const bool isBuilt = var_cas_FILE_INDEX_STRING_LIST.isBuilt ()
    && var_cas_FILEWRAPPER_NAME.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Filewrapper '")).operator_concat (var_cas_FILEWRAPPER_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
GGS_stringlist::cEnumerator enumerator_437 (var_cas_FILE_INDEX_STRING_LIST, true) ;
const GGS_stringlist::cElement * operand_437 = NULL ;
while (((operand_437 = enumerator_437.nextObject ()))) {
macroValidPointer (operand_437) ;
result << "extern const char * gWrapperFileContent_" ;
result << operand_437->mValue ;
result << "_" ;
result << var_cas_FILEWRAPPER_NAME.reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "extern const cDirectoryWrapper gWrapperDirectory_0_" ;
result << var_cas_FILEWRAPPER_NAME.reader_identifierRepresentation () ;
result << " ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'filewrapperImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_filewrapperImplementation (C_CompilerEx & /* inLexique */,
                                const GGS_string& var_cas_FILEWRAPPER_NAME,
                                const GGS_string& var_cas_FILEWRAPPER_IMPLEMENTATION) {
  C_String result ;
  const bool isBuilt = var_cas_FILEWRAPPER_NAME.isBuilt ()
    && var_cas_FILEWRAPPER_IMPLEMENTATION.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Filewrapper '")).operator_concat (var_cas_FILEWRAPPER_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << var_cas_FILEWRAPPER_IMPLEMENTATION ;
result << "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'routineDeclaration' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_routineDeclaration (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_ROUTINE_NAME,
                                const GGS_formalParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_ROUTINE_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Routine '")).operator_concat (var_cas_ROUTINE_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void routine_" ;
result << var_cas_ROUTINE_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_488 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_488 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_488 = enumerator_488.nextObject ()))) {
macroValidPointer (operand_488) ;
if ((operand_488->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (9))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (10)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (10)) ;
}else if ((operand_488->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (11))).boolValue ()) {
result << "GALGAS_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
}else if ((operand_488->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (13))).boolValue ()) {
result << "GALGAS_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
}else {
result << "GALGAS_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'functionDeclaration' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_functionDeclaration (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_FUNCTION_NAME,
                                const GGS_formalInputParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST,
                                const GGS_string& var_cas_RETURN_TYPE_IDENTIFIER) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_FUNCTION_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt ()
    && var_cas_RETURN_TYPE_IDENTIFIER.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Function '")).operator_concat (var_cas_FUNCTION_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_RETURN_TYPE_IDENTIFIER ;
result << " function_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_520 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_520 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_520 = enumerator_520.nextObject ()))) {
macroValidPointer (operand_520) ;
result << "const GALGAS_" ;
result << operand_520->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
result << " & constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'routineImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_routineImplementation (C_CompilerEx & /* inLexique */,
                                const GGS_string& var_cas_ROUTINE_NAME,
                                const GGS_string& var_cas_ROUTINE_IMPLEMENTATION) {
  C_String result ;
  const bool isBuilt = var_cas_ROUTINE_NAME.isBuilt ()
    && var_cas_ROUTINE_IMPLEMENTATION.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Routine '")).operator_concat (var_cas_ROUTINE_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << var_cas_ROUTINE_IMPLEMENTATION ;
result << "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'functionImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_functionImplementation (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_FUNCTION_NAME,
                                const GGS_string& var_cas_FUNCTION_IMPLEMENTATION,
                                const GGS_formalInputParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST,
                                const GGS_string& var_cas_RETURN_TYPE_IDENTIFIER) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_FUNCTION_NAME.isBuilt ()
    && var_cas_FUNCTION_IMPLEMENTATION.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt ()
    && var_cas_RETURN_TYPE_IDENTIFIER.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Function '")).operator_concat (var_cas_FUNCTION_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << var_cas_FUNCTION_IMPLEMENTATION ;
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "//  Function introspection                                                   *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const C_galgas_type_descriptor * functionArgs_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " [" ;
result << var_cas_FORMAL_ARGUMENT_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (12)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
result << "] = {\n" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_845 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_845 = NULL ;
while (((operand_845 = enumerator_845.nextObject ()))) {
macroValidPointer (operand_845) ;
result << "  & kTypeDescriptor_GALGAS_" ;
result << operand_845->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (15)) ;
result << ",\n" ;
}
result << "  NULL\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
if ((var_cas_FORMAL_ARGUMENT_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "static GALGAS_object functionWithGenericHeader_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const cObjectArray & /* inEffectiveParameterArray */,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_location & /* inErrorLocation */\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  return function_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (inCompiler COMMA_THERE).reader_object (THERE) ;\n"
  "}\n" ;
}else {
result << "static GALGAS_object functionWithGenericHeader_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const cObjectArray & inEffectiveParameterArray,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_location & inErrorLocation\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_2041 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_2041 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2041 = enumerator_2041.nextObject ()))) {
macroValidPointer (operand_2041) ;
result << "  const GALGAS_" ;
result << operand_2041->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (36)) ;
result << " operand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (36)) ;
result << " = GALGAS_" ;
result << operand_2041->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (36)) ;
result << "::extractObject (inEffectiveParameterArray.objectAtIndex (" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (36)) ;
result << " COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  return function_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_2451 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_2451 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2451 = enumerator_2451.nextObject ()))) {
macroValidPointer (operand_2451) ;
result << "operand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (40)) ;
result << ", " ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "inCompiler COMMA_THERE).reader_object (THERE) ;\n"
  "}\n" ;
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "C_galgas_function_descriptor functionDescriptor_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << var_cas_FUNCTION_NAME.reader_utf8Representation () ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "functionWithGenericHeader_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "& kTypeDescriptor_GALGAS_" ;
result << var_cas_RETURN_TYPE_IDENTIFIER ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << var_cas_FORMAL_ARGUMENT_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (51)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "functionArgs_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << ") ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'onceFunctionImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_onceFunctionImplementation (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_FUNCTION_NAME,
                                const GGS_string& var_cas_FUNCTION_IMPLEMENTATION,
                                const GGS_formalInputParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST,
                                const GGS_string& var_cas_RETURN_TYPE_IDENTIFIER) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_FUNCTION_NAME.isBuilt ()
    && var_cas_FUNCTION_IMPLEMENTATION.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt ()
    && var_cas_RETURN_TYPE_IDENTIFIER.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Once function '")).operator_concat (var_cas_FUNCTION_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << var_cas_FUNCTION_IMPLEMENTATION ;
result << "\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "//  Function implementation                                                  *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static bool gOnceFunctionResultAvailable_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " = false ;\n"
  "static GALGAS_" ;
result << var_cas_RETURN_TYPE_IDENTIFIER ;
result << " gOnceFunctionResult_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_RETURN_TYPE_IDENTIFIER ;
result << " function_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (! gOnceFunctionResultAvailable_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << ") {\n"
  "    gOnceFunctionResult_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " = onceFunction_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (inCompiler COMMA_THERE) ;\n"
  "    gOnceFunctionResultAvailable_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " = true ;\n"
  "  }\n"
  "  return gOnceFunctionResult_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static void releaseOnceFunctionResult_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (void) {\n"
  "  gOnceFunctionResult_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << ".drop () ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "C_PrologueEpilogue gEpilgueForOnceFunction_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "NULL,\n"
  "        " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "releaseOnceFunctionResult_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << ") ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "//  Function introspection                                                   *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const C_galgas_type_descriptor * functionArgs_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " [" ;
result << var_cas_FORMAL_ARGUMENT_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (42)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (42)) ;
result << "] = {\n" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_2447 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_2447 = NULL ;
while (((operand_2447 = enumerator_2447.nextObject ()))) {
macroValidPointer (operand_2447) ;
result << "  & kTypeDescriptor_GALGAS_" ;
result << operand_2447->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (45)) ;
result << ",\n" ;
}
result << "  NULL\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
if ((var_cas_FORMAL_ARGUMENT_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "static GALGAS_object functionWithGenericHeader_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const cObjectArray & /* inEffectiveParameterArray */,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_location & /* inErrorLocation */\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  return function_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (inCompiler COMMA_THERE).reader_object (THERE) ;\n"
  "}\n" ;
}else {
result << "static GALGAS_object functionWithGenericHeader_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const cObjectArray & inEffectiveParameterArray,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_location & inErrorLocation\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_3643 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_3643 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3643 = enumerator_3643.nextObject ()))) {
macroValidPointer (operand_3643) ;
result << "  const GALGAS_" ;
result << operand_3643->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (66)) ;
result << " operand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (66)) ;
result << " = GALGAS_" ;
result << operand_3643->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (66)) ;
result << "::extractObject (inEffectiveParameterArray.objectAtIndex (" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (66)) ;
result << " COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  return function_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_4053 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_4053 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4053 = enumerator_4053.nextObject ()))) {
macroValidPointer (operand_4053) ;
result << "operand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (70)) ;
result << ", " ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "inCompiler COMMA_THERE).reader_object (THERE) ;\n"
  "}\n" ;
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "C_galgas_function_descriptor functionDescriptor_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << var_cas_FUNCTION_NAME.reader_utf8Representation () ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "functionWithGenericHeader_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "& kTypeDescriptor_GALGAS_" ;
result << var_cas_RETURN_TYPE_IDENTIFIER ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << var_cas_FORMAL_ARGUMENT_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (81)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "functionArgs_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << ") ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'filewrapperTemplateDeclaration' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_filewrapperTemplateDeclaration (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_FILEWRAPPER_NAME,
                                const GGS_string& var_cas_TEMPLATE_NAME,
                                const GGS_formalInputParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_FILEWRAPPER_NAME.isBuilt ()
    && var_cas_TEMPLATE_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((((GGS_string ("Filewrapper template '")).operator_concat (var_cas_FILEWRAPPER_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_TEMPLATE_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_string filewrapperTemplate_" ;
result << var_cas_FILEWRAPPER_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_TEMPLATE_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_621 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_621 = NULL ;
while (((operand_621 = enumerator_621.nextObject ()))) {
macroValidPointer (operand_621) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_621->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
result << " & " ;
result << operand_621->mFormalArgumentCppName ;
}
result << "\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'filewrapperTemplateImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_filewrapperTemplateImplementation (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_FILEWRAPPER_NAME,
                                const GGS_string& var_cas_TEMPLATE_NAME,
                                const GGS_formalInputParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST,
                                const GGS_bool& var_cas_USES_COMPILER_ARGUMENT,
                                const GGS_bool& var_cas_USES_COLUMN_MARKER,
                                const GGS_string& var_cas_GENERATED_INSTRUCTION_STRING) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_FILEWRAPPER_NAME.isBuilt ()
    && var_cas_TEMPLATE_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt ()
    && var_cas_USES_COMPILER_ARGUMENT.isBuilt ()
    && var_cas_USES_COLUMN_MARKER.isBuilt ()
    && var_cas_GENERATED_INSTRUCTION_STRING.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((((GGS_string ("Filewrapper template '")).operator_concat (var_cas_FILEWRAPPER_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_TEMPLATE_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_string filewrapperTemplate_" ;
result << var_cas_FILEWRAPPER_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_TEMPLATE_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * " ;
if (var_cas_USES_COMPILER_ARGUMENT.boolValue ()) {
result << function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
}else {
result << "/* " ;
result << function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
result << " */" ;
}
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_718 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_718 = NULL ;
while (((operand_718 = enumerator_718.nextObject ()))) {
macroValidPointer (operand_718) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_718->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
result << " & " ;
result << operand_718->mFormalArgumentCppName ;
}
result << "\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  C_String result ;\n" ;
if (var_cas_USES_COLUMN_MARKER.boolValue ()) {
result << "  PMUInt32 columnMarker = 0 ;\n" ;
}else {
}
const GGS_uint indentation_1059 = GGS_uint (2U) ;
if (indentation_1059.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_1059.uintValue ()) ;
}
result << var_cas_GENERATED_INSTRUCTION_STRING ;
 ;
if (indentation_1059.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_1059.uintValue ())) ;
}
result << "  return GALGAS_string (result) ;\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@semanticDeclarationForGeneration.appendDeclaration1'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendDeclaration1 (C_CompilerEx &,
                                const cPtr_semanticDeclarationForGeneration * operand_26785
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_26785 != NULL) {
var_cas_outHeader = GGS_string ("") ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendDeclaration1'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1> gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration1 ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 (typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration1.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendDeclaration1 (C_CompilerEx &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1
findCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 result = NULL ;
  if (NULL != inClassPtr) {
    if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration1.count ()) {
      result = gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration1 (inClassPtr->slotID () COMMA_HERE) ;
    }
    if (NULL == result) {
      AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
      if (superClassPtr != NULL) {
        result = findCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 (superClassPtr) ;
        gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration1.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
      }
    }
    if (NULL == result) {
      result = category_reader__semanticDeclarationForGeneration_defaultReader_appendDeclaration1 ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@routinePrototypeDeclarationForGeneration.appendDeclaration1'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__routinePrototypeDeclarationForGeneration__appendDeclaration1 (C_CompilerEx & inLexique,
                                const cPtr_routinePrototypeDeclarationForGeneration * operand_26998
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_26998 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_routineDeclaration (inLexique, operand_26998->mRoutineName, operand_26998->mFormalArgumentList) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@functionPrototypeDeclarationForGeneration.appendDeclaration1'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__functionPrototypeDeclarationForGeneration__appendDeclaration1 (C_CompilerEx & inLexique,
                                const cPtr_functionPrototypeDeclarationForGeneration * operand_27325
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_27325 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_functionDeclaration (inLexique, operand_27325->mFunctionName, operand_27325->mFormalArgumentList, operand_27325->mReturnType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (696))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@onceFunctionDeclarationForGeneration.appendDeclaration1' *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__onceFunctionDeclarationForGeneration__appendDeclaration1 (C_CompilerEx & inLexique,
                                const cPtr_onceFunctionDeclarationForGeneration * operand_27693
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_27693 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_functionDeclaration (inLexique, operand_27693->mFunctionName, GGS_formalInputParameterListForGeneration ::constructor_emptyList (), operand_27693->mReturnType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (706))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@classTypeForGeneration.appendDeclaration1'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__classTypeForGeneration__appendDeclaration1 (C_CompilerEx & inLexique,
                                const cPtr_classTypeForGeneration * operand_28078
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_28078 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_classTypeHeader1 (inLexique, operand_28078->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (714)), operand_28078->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (715)), ((operand_28078->mSuperClass.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (716))).isBuiltAndTrue () ? (GGS_string ("")) : (operand_28078->mSuperClass.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (716)))), operand_28078->mAllTypedAttributeList, operand_28078->mIsAbstract) ;
var_cas_outHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (inLexique, operand_28078->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (721)), operand_28078->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (722)), operand_28078->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (723)), operand_28078->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (724)), operand_28078->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (725)), operand_28078->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (726)), operand_28078->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (727)), operand_28078->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (728)), operand_28078->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (729)), operand_28078->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (730)), operand_28078->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (731)), operand_28078->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (732)))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@mapTypeForGeneration.appendDeclaration1'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapTypeForGeneration__appendDeclaration1 (C_CompilerEx & inLexique,
                                const cPtr_mapTypeForGeneration * operand_29023
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_29023 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_mapTypeHeader1 (inLexique, operand_29023->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (740)), operand_29023->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (741)), operand_29023->mTypedAttributeList) ;
var_cas_outHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (inLexique, operand_29023->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (745)), operand_29023->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (746)), operand_29023->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (747)), operand_29023->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (748)), operand_29023->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (749)), operand_29023->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (750)), operand_29023->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (751)), operand_29023->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (752)), operand_29023->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (753)), operand_29023->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (754)), operand_29023->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (755)), operand_29023->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (756)))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@structTypeForGeneration.appendDeclaration1'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__structTypeForGeneration__appendDeclaration1 (C_CompilerEx & inLexique,
                                const cPtr_structTypeForGeneration * operand_29864
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_29864 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_structTypeHeader1 (inLexique, operand_29864->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (764)), operand_29864->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (765)), operand_29864->mTypedAttributeList) ;
var_cas_outHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (inLexique, operand_29864->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (769)), operand_29864->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (770)), operand_29864->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (771)), operand_29864->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (772)), operand_29864->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (773)), operand_29864->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (774)), operand_29864->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (775)), operand_29864->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (776)), operand_29864->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (777)), operand_29864->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (778)), operand_29864->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (779)), operand_29864->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (780)))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@listTypeForGeneration.appendDeclaration1'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__listTypeForGeneration__appendDeclaration1 (C_CompilerEx & inLexique,
                                const cPtr_listTypeForGeneration * operand_30706
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_30706 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_listTypeHeader1 (inLexique, operand_30706->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (788)), operand_30706->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (789)), operand_30706->mTypedAttributeList) ;
var_cas_outHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (inLexique, operand_30706->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (793)), operand_30706->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (794)), operand_30706->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (795)), operand_30706->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (796)), operand_30706->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (797)), operand_30706->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (798)), operand_30706->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (799)), operand_30706->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (800)), operand_30706->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (801)), operand_30706->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (802)), operand_30706->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (803)), operand_30706->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (804)))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category reader '@sortedListTypeForGeneration.appendDeclaration1'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__sortedListTypeForGeneration__appendDeclaration1 (C_CompilerEx & inLexique,
                                const cPtr_sortedListTypeForGeneration * operand_31552
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_31552 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_sortedlistTypeHeader1 (inLexique, operand_31552->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (812)), operand_31552->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (813)), operand_31552->mTypedAttributeList) ;
var_cas_outHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (inLexique, operand_31552->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (817)), operand_31552->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (818)), operand_31552->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (819)), operand_31552->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (820)), operand_31552->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (821)), operand_31552->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (822)), operand_31552->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (823)), operand_31552->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (824)), operand_31552->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (825)), operand_31552->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (826)), operand_31552->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (827)), operand_31552->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (828)))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@enumTypeForGeneration.appendDeclaration1'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__enumTypeForGeneration__appendDeclaration1 (C_CompilerEx & inLexique,
                                const cPtr_enumTypeForGeneration * operand_32398
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_32398 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_enumTypeHeader1 (inLexique, operand_32398->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (836)), operand_32398->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (837)), operand_32398->mConstantList) ;
var_cas_outHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (inLexique, operand_32398->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (841)), operand_32398->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (842)), operand_32398->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (843)), operand_32398->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (844)), operand_32398->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (845)), operand_32398->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (846)), operand_32398->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (847)), operand_32398->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (848)), operand_32398->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (849)), operand_32398->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (850)), operand_32398->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (851)), operand_32398->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (852)))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "recursivlyEnumerateRegularFile"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_recursivlyEnumerateRegularFile (C_CompilerEx & inLexique,
                                const GGS_wrapperFileMap   var_cas_inFilewrapperFileMap,
                                const GGS_wrapperDirectoryMap   var_cas_inFilewrapperDirectoryMap,
                                GGS_stringlist  & var_cas_ioRegularFileIndexStringList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_recursivlyEnumerateRegularFile at %s:%d\n", __FILE__, __LINE__) ;
  #endif
{
GGS_wrapperFileMap::cEnumerator enumerator_33383 (var_cas_inFilewrapperFileMap, true) ;
const GGS_wrapperFileMap::cElement * operand_33383 = NULL ;
while (((operand_33383 = enumerator_33383.nextObject ()))) {
  macroValidPointer (operand_33383) ;
var_cas_ioRegularFileIndexStringList.addAssign_operation (var_cas_ioRegularFileIndexStringList.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (864))) ;
}
}
{
GGS_wrapperDirectoryMap::cEnumerator enumerator_33524 (var_cas_inFilewrapperDirectoryMap, true) ;
const GGS_wrapperDirectoryMap::cElement * operand_33524 = NULL ;
while (((operand_33524 = enumerator_33524.nextObject ()))) {
  macroValidPointer (operand_33524) ;
::routine_recursivlyEnumerateRegularFile (inLexique,  operand_33524->mInfo.mRegularFileMap,  operand_33524->mInfo.mDirectoryMap,  var_cas_ioRegularFileIndexStringList COMMA_SOURCE_FILE_AT_LINE (867)) ;
}
}
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_recursivlyEnumerateRegularFile\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@filewrapperDeclarationForGeneration.appendDeclaration1'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__filewrapperDeclarationForGeneration__appendDeclaration1 (C_CompilerEx & inLexique,
                                const cPtr_filewrapperDeclarationForGeneration * operand_33831
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_33831 != NULL) {
GGS_stringlist  var_cas_regularFileIndexStringList = GGS_stringlist ::constructor_emptyList () ;
::routine_recursivlyEnumerateRegularFile (inLexique,  operand_33831->mFilewrapperFileMap,  operand_33831->mFilewrapperDirectoryMap,  var_cas_regularFileIndexStringList COMMA_SOURCE_FILE_AT_LINE (879)) ;
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_filewrapperDeclaration (inLexique, var_cas_regularFileIndexStringList, operand_33831->mFilewrapperName) ;
{
GGS_filewrapperTemplateListForGeneration::cEnumerator enumerator_34255 (operand_33831->mFilewrapperTemplateListForGeneration, true) ;
const GGS_filewrapperTemplateListForGeneration::cElement * operand_34255 = NULL ;
while (((operand_34255 = enumerator_34255.nextObject ()))) {
  macroValidPointer (operand_34255) ;
var_cas_outHeader.dotAssign_operation (template_filewrapper_semanticComponentGenerationTemplate_filewrapperTemplateDeclaration (inLexique, operand_33831->mFilewrapperName, operand_34255->mFilewrapperTemplateName, operand_34255->mFilewrapperTemplateFormalInputParameters)) ;
}
}
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@abstractCategoryMethodForGeneration.appendDeclaration1'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__abstractCategoryMethodForGeneration__appendDeclaration1 (C_CompilerEx & inLexique,
                                const cPtr_abstractCategoryMethodForGeneration * operand_34649
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_34649 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_abstractCategoryMethodDeclaration (inLexique, operand_34649->mTypeName, operand_34649->mAbstractCategoryMethodName, operand_34649->mAbstractCategoryMethodFormalParameterList) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category reader '@categoryMethodForGeneration.appendDeclaration1'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__categoryMethodForGeneration__appendDeclaration1 (C_CompilerEx & inLexique,
                                const cPtr_categoryMethodForGeneration * operand_35030
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_35030 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_categoryMethodDeclaration (inLexique, operand_35030->mTypeName, operand_35030->mCategoryMethodName, operand_35030->mCategoryMethodFormalParameterList) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@abstractCategoryReaderForGeneration.appendDeclaration1'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__abstractCategoryReaderForGeneration__appendDeclaration1 (C_CompilerEx & inLexique,
                                const cPtr_abstractCategoryReaderForGeneration * operand_35395
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_35395 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_abstractCategoryReaderDeclaration (inLexique, operand_35395->mTypeName, operand_35395->mAbstractCategoryReaderName, operand_35395->mAbstractCategoryReaderFormalParameterList, operand_35395->mResultType) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category reader '@categoryReaderForGeneration.appendDeclaration1'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__categoryReaderForGeneration__appendDeclaration1 (C_CompilerEx & inLexique,
                                const cPtr_categoryReaderForGeneration * operand_35793
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_35793 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_categoryReaderDeclaration (inLexique, operand_35793->mTypeName, operand_35793->mCategoryReaderName, operand_35793->mCategoryReaderFormalParameterList, operand_35793->mResultType) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@semanticDeclarationForGeneration.appendDeclaration2'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendDeclaration2 (C_CompilerEx &,
                                const cPtr_semanticDeclarationForGeneration * operand_36475,
                                const GGS_string  /* var_cas_inOutputDirectory */
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_36475 != NULL) {
var_cas_outHeader = GGS_string ("") ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendDeclaration2'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration2> gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration2 ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 (typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration2.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendDeclaration2 (C_CompilerEx &,
                                const cPtr_semanticDeclarationForGeneration *,
                                const GGS_string  
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration2
findCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 result = NULL ;
  if (NULL != inClassPtr) {
    if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration2.count ()) {
      result = gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration2 (inClassPtr->slotID () COMMA_HERE) ;
    }
    if (NULL == result) {
      AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
      if (superClassPtr != NULL) {
        result = findCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 (superClassPtr) ;
        gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration2.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
      }
    }
    if (NULL == result) {
      result = category_reader__semanticDeclarationForGeneration_defaultReader_appendDeclaration2 ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@mapTypeForGeneration.appendDeclaration2'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapTypeForGeneration__appendDeclaration2 (C_CompilerEx & inLexique,
                                const cPtr_mapTypeForGeneration * operand_36706,
                                const GGS_string  /* var_cas_inOutputDirectory */
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_36706 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_mapTypeHeader2 (inLexique, operand_36706->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (958)), operand_36706->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (959)), operand_36706->mTypedAttributeList) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@classTypeForGeneration.appendDeclaration2'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__classTypeForGeneration__appendDeclaration2 (C_CompilerEx & inLexique,
                                const cPtr_classTypeForGeneration * operand_37081,
                                const GGS_string  var_cas_inOutputDirectory
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_37081 != NULL) {
const GGS_bool cond_38277 = operand_37081->mGenerateHeaderInSeparateFile ;
if (cond_38277.isBuiltAndTrue ()) {
const GGS_string var_cas_part1 = template_filewrapper_typeGenerationTemplate_classTypeHeader2part1 (inLexique, operand_37081->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (971)), operand_37081->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (972)), ((operand_37081->mSuperClass.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (973))).isBuiltAndTrue () ? (GGS_string ("")) : (operand_37081->mSuperClass.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (973)))), operand_37081->mTypedAttributeList, operand_37081->mAllTypedAttributeList, operand_37081->mIsAbstract, operand_37081->mAbstractMethodList, operand_37081->mMethodList) ;
const GGS_string var_cas_part2 = template_filewrapper_typeGenerationTemplate_classTypeHeader2part2 (inLexique, operand_37081->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (981)), operand_37081->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (982)), ((operand_37081->mSuperClass.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (983))).isBuiltAndTrue () ? (GGS_string ("")) : (operand_37081->mSuperClass.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (983)))), operand_37081->mTypedAttributeList, operand_37081->mAllTypedAttributeList, operand_37081->mIsAbstract, operand_37081->mAbstractMethodList, operand_37081->mMethodList) ;
const GGS_string var_cas_headerFileName = ((GGS_string ("separateHeaderFor_")).operator_concat (operand_37081->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (990)))).operator_concat (GGS_string (".h")) ;
GGS_string::class_method_generateFile (inLexique, var_cas_inOutputDirectory, var_cas_headerFileName, GGS_string ("//"), GGS_string ("\n"
  "\n"), var_cas_part1, GGS_string ("\n"
  "\n"), var_cas_part2 COMMA_SOURCE_FILE_AT_LINE (991)) ;
var_cas_outHeader = ((GGS_string ("#include \"")).operator_concat (var_cas_headerFileName)).operator_concat (GGS_string ("\"\n"
  "\n")) ;
}else if (cond_38277.isBuiltAndFalse ()) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_classTypeHeader2part1 (inLexique, operand_37081->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (1003)), operand_37081->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1004)), ((operand_37081->mSuperClass.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (1005))).isBuiltAndTrue () ? (GGS_string ("")) : (operand_37081->mSuperClass.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1005)))), operand_37081->mTypedAttributeList, operand_37081->mAllTypedAttributeList, operand_37081->mIsAbstract, operand_37081->mAbstractMethodList, operand_37081->mMethodList) ;
var_cas_outHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_classTypeHeader2part2 (inLexique, operand_37081->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (1013)), operand_37081->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1014)), ((operand_37081->mSuperClass.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (1015))).isBuiltAndTrue () ? (GGS_string ("")) : (operand_37081->mSuperClass.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1015)))), operand_37081->mTypedAttributeList, operand_37081->mAllTypedAttributeList, operand_37081->mIsAbstract, operand_37081->mAbstractMethodList, operand_37081->mMethodList)) ;
}
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticDeclarationForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendTypeGenericImplementation (C_CompilerEx &,
                                const cPtr_semanticDeclarationForGeneration * operand_39567
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_39567 != NULL) {
var_cas_outImplementation = GGS_string ("") ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation> gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendTypeGenericImplementation (C_CompilerEx &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation
findCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation result = NULL ;
  if (NULL != inClassPtr) {
    if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.count ()) {
      result = gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (inClassPtr->slotID () COMMA_HERE) ;
    }
    if (NULL == result) {
      AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
      if (superClassPtr != NULL) {
        result = findCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (superClassPtr) ;
        gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
      }
    }
    if (NULL == result) {
      result = category_reader__semanticDeclarationForGeneration_defaultReader_appendTypeGenericImplementation ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticTypeForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticTypeForGeneration__appendTypeGenericImplementation (C_CompilerEx & inLexique,
                                const cPtr_semanticTypeForGeneration * operand_39793
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_39793 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_genericTypeImplementation (inLexique, operand_39793->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (1040)), operand_39793->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1041)), operand_39793->mTypeIndex.reader_mSuperType (inLexique COMMA_SOURCE_FILE_AT_LINE (1042)), operand_39793->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (1043))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticDeclarationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendSpecificImplementation (C_CompilerEx &,
                                const cPtr_semanticDeclarationForGeneration * operand_40524
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_40524 != NULL) {
var_cas_outImplementation = GGS_string ("") ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation> gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendSpecificImplementation (C_CompilerEx &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation
findCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation result = NULL ;
  if (NULL != inClassPtr) {
    if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.count ()) {
      result = gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation (inClassPtr->slotID () COMMA_HERE) ;
    }
    if (NULL == result) {
      AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
      if (superClassPtr != NULL) {
        result = findCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (superClassPtr) ;
        gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
      }
    }
    if (NULL == result) {
      result = category_reader__semanticDeclarationForGeneration_defaultReader_appendSpecificImplementation ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category reader '@listmapTypeForGeneration.appendSpecificImplementation'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__listmapTypeForGeneration__appendSpecificImplementation (C_CompilerEx & inLexique,
                                const cPtr_listmapTypeForGeneration * operand_40746
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_40746 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_listmapTypeSpecificImplementation (inLexique, operand_40746->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1063)), operand_40746->mAssociatedListTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1064)), operand_40746->mAssociatedListTypedAttributeList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category reader '@mapTypeForGeneration.appendSpecificImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapTypeForGeneration__appendSpecificImplementation (C_CompilerEx & inLexique,
                                const cPtr_mapTypeForGeneration * operand_41247
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_41247 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_mapTypeSpecificImplementation (inLexique, operand_41247->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1074)), operand_41247->mTypedAttributeList, operand_41247->mInsertMethodList, operand_41247->mSearchMethodList, operand_41247->mRemoveMethodList, operand_41247->mHasInsertOrReplaceModifier, operand_41247->mWithAccessorMap) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@sortedListTypeForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__sortedListTypeForGeneration__appendSpecificImplementation (C_CompilerEx & inLexique,
                                const cPtr_sortedListTypeForGeneration * operand_41800
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_41800 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_sortedlistTypeSpecificImplementation (inLexique, operand_41800->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1089)), operand_41800->mTypedAttributeList, operand_41800->mSortDescriptorList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@enumTypeForGeneration.appendSpecificImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__enumTypeForGeneration__appendSpecificImplementation (C_CompilerEx & inLexique,
                                const cPtr_enumTypeForGeneration * operand_42263
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_42263 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_enumTypeSpecificImplementation (inLexique, operand_42263->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (1100)), operand_42263->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1101)), operand_42263->mConstantList, operand_42263->mEnumMessageList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@mapProxyTypeForGeneration.appendSpecificImplementation'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapProxyTypeForGeneration__appendSpecificImplementation (C_CompilerEx & inLexique,
                                const cPtr_mapProxyTypeForGeneration * operand_42730
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_42730 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_mapProxyTypeSpecificImplementation (inLexique, operand_42730->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (1112)), operand_42730->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1113)), operand_42730->mAssociatedMapTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1114)), operand_42730->mAssociatedMapTypedAttributeList, operand_42730->mSearchMethodList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@classTypeForGeneration.appendSpecificImplementation'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__classTypeForGeneration__appendSpecificImplementation (C_CompilerEx & inLexique,
                                const cPtr_classTypeForGeneration * operand_43278
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_43278 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_classTypeSpecificImplementation (inLexique, operand_43278->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (1125)), operand_43278->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1126)), ((operand_43278->mSuperClass.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (1127))).isBuiltAndTrue () ? (GGS_string ("")) : (operand_43278->mSuperClass.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1127)))), operand_43278->mTypedAttributeList, operand_43278->mAllTypedAttributeList, operand_43278->mAllTypedAttributeList.reader_subListWithRange (inLexique, GGS_uint (0U), operand_43278->mAllTypedAttributeList.reader_length ().substract_operation (inLexique, operand_43278->mTypedAttributeList.reader_length () COMMA_SOURCE_FILE_AT_LINE (1130)) COMMA_SOURCE_FILE_AT_LINE (1130)), operand_43278->mIsAbstract, operand_43278->mAbstractMethodList, operand_43278->mMethodList, operand_43278->mInstanceMethodMap) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category reader '@structTypeForGeneration.appendSpecificImplementation'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__structTypeForGeneration__appendSpecificImplementation (C_CompilerEx & inLexique,
                                const cPtr_structTypeForGeneration * operand_44038
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_44038 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_structTypeSpecificImplementation (inLexique, operand_44038->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (1143)), operand_44038->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1144)), operand_44038->mTypedAttributeList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@listTypeForGeneration.appendSpecificImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__listTypeForGeneration__appendSpecificImplementation (C_CompilerEx & inLexique,
                                const cPtr_listTypeForGeneration * operand_44489
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_44489 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_listTypeSpecificImplementation (inLexique, operand_44489->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (1154)), operand_44489->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1155)), operand_44489->mTypedAttributeList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@routineImplementationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__routineImplementationForGeneration__appendSpecificImplementation (C_CompilerEx & inLexique,
                                const cPtr_routineImplementationForGeneration * operand_44949
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_44949 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_routineImplementation (inLexique, operand_44949->mRoutineName, function_generateProcedure (inLexique, (GGS_string ("routine_")).operator_concat (operand_44949->mRoutineName.reader_identifierRepresentation ()), operand_44949->mFormalArgumentList, operand_44949->mRoutineInstructionList, GGS_bool (false), GGS_string ("C_Compiler"), GGS_bool (true), GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (1166))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@functionImplementationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__functionImplementationForGeneration__appendSpecificImplementation (C_CompilerEx & inLexique,
                                const cPtr_functionImplementationForGeneration * operand_45668
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_45668 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_functionImplementation (inLexique, operand_45668->mFunctionName, function_generateFunction (inLexique, (GGS_string ("function_")).operator_concat (operand_45668->mFunctionName.reader_identifierRepresentation ()), operand_45668->mFormalArgumentList, operand_45668->mFunctionInstructionList, GGS_string ("C_Compiler"), operand_45668->mReturnType.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (1189)), operand_45668->mResultVariableCppName, GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (1184)), operand_45668->mFormalArgumentList, operand_45668->mReturnType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1194))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@onceFunctionDeclarationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__onceFunctionDeclarationForGeneration__appendSpecificImplementation (C_CompilerEx & inLexique,
                                const cPtr_onceFunctionDeclarationForGeneration * operand_46403
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_46403 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_onceFunctionImplementation (inLexique, operand_46403->mFunctionName, function_generateFunction (inLexique, (GGS_string ("onceFunction_")).operator_concat (operand_46403->mFunctionName.reader_identifierRepresentation ()), GGS_formalInputParameterListForGeneration ::constructor_emptyList (), operand_46403->mFunctionInstructionList, GGS_string ("C_Compiler"), operand_46403->mReturnType.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (1209)), operand_46403->mResultVariableCppName, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (1204)), GGS_formalInputParameterListForGeneration ::constructor_emptyList (), operand_46403->mReturnType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (1214))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@abstractCategoryMethodForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__abstractCategoryMethodForGeneration__appendSpecificImplementation (C_CompilerEx & inLexique,
                                const cPtr_abstractCategoryMethodForGeneration * operand_47198
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_47198 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_abstractCategoryMethodImplementation (inLexique, operand_47198->mTypeName, operand_47198->mAbstractCategoryMethodName, operand_47198->mAbstractCategoryMethodFormalParameterList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@categoryMethodForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__categoryMethodForGeneration__appendSpecificImplementation (C_CompilerEx & inLexique,
                                const cPtr_categoryMethodForGeneration * operand_47691
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_47691 != NULL) {
const GGS_string var_cas_methodImplementation = function_generateCategoryMethod (inLexique, operand_47691->mTypeName, GGS_string (""), operand_47691->mCategoryMethodName, operand_47691->mCategoryMethodFormalParameterList, operand_47691->mSemanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1233)) ;
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_categoryMethodImplementation (inLexique, operand_47691->mTypeName, operand_47691->mCategoryMethodName, operand_47691->mCategoryMethodFormalParameterList, var_cas_methodImplementation) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@overridingCategoryMethodForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__overridingCategoryMethodForGeneration__appendSpecificImplementation (C_CompilerEx & inLexique,
                                const cPtr_overridingCategoryMethodForGeneration * operand_48390
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_48390 != NULL) {
const GGS_string var_cas_methodImplementation = function_generateCategoryMethod (inLexique, operand_48390->mTypeName, operand_48390->mBaseTypeName, operand_48390->mCategoryMethodName, operand_48390->mCategoryMethodFormalParameterList, operand_48390->mSemanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1252)) ;
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_overridingCategoryMethodImplementation (inLexique, operand_48390->mTypeName, operand_48390->mCategoryMethodName, var_cas_methodImplementation) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@abstractCategoryReaderForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__abstractCategoryReaderForGeneration__appendSpecificImplementation (C_CompilerEx & inLexique,
                                const cPtr_abstractCategoryReaderForGeneration * operand_49078
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_49078 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_abstractCategoryReaderImplementation (inLexique, operand_49078->mTypeName, operand_49078->mAbstractCategoryReaderName, operand_49078->mAbstractCategoryReaderFormalParameterList, operand_49078->mResultType) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@categoryReaderForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__categoryReaderForGeneration__appendSpecificImplementation (C_CompilerEx & inLexique,
                                const cPtr_categoryReaderForGeneration * operand_49588
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_49588 != NULL) {
const GGS_string var_cas_categoryReaderCode = function_generateCategoryReader (inLexique, operand_49588->mTypeName, GGS_string (""), operand_49588->mCategoryReaderName, operand_49588->mCategoryReaderFormalParameterList, operand_49588->mSemanticInstructionListForGeneration, GGS_string ("C_Compiler"), operand_49588->mResultType.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (1289)), operand_49588->mResultVarCppName COMMA_SOURCE_FILE_AT_LINE (1282)) ;
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_categoryReaderImplementation (inLexique, operand_49588->mTypeName, operand_49588->mCategoryReaderName, operand_49588->mCategoryReaderFormalParameterList, operand_49588->mResultType, var_cas_categoryReaderCode) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@overrideCategoryReaderForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__overrideCategoryReaderForGeneration__appendSpecificImplementation (C_CompilerEx & inLexique,
                                const cPtr_overrideCategoryReaderForGeneration * operand_50362
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_50362 != NULL) {
const GGS_string var_cas_categoryReaderCode = function_generateCategoryReader (inLexique, operand_50362->mTypeName, operand_50362->mBaseTypeName, operand_50362->mOverridingCategoryReaderName, operand_50362->mOverridingCategoryReaderFormalParameterList, operand_50362->mSemanticInstructionListForGeneration, GGS_string ("C_Compiler"), operand_50362->mResultType.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (1312)), operand_50362->mResultVarCppName COMMA_SOURCE_FILE_AT_LINE (1305)) ;
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_overridingCategoryReaderImplementation (inLexique, operand_50362->mTypeName, operand_50362->mOverridingCategoryReaderName, operand_50362->mResultType, var_cas_categoryReaderCode) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "generateWrapperContents"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generateWrapperContents (C_CompilerEx & inLexique,
                                const GGS_string  var_cas_inFilewrapperName,
                                const GGS_string  var_cas_inFilewrapperDirectory,
                                const GGS_uint   var_cas_inFilewrapperDirectoryIndex,
                                const GGS_wrapperFileMap   var_cas_inFilewrapperRegularFileMap,
                                const GGS_wrapperDirectoryMap   var_cas_inFilewrapperDirectoryMap,
                                GGS_string & var_cas_ioImplementation
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generateWrapperContents at %s:%d\n", __FILE__, __LINE__) ;
  #endif
{
GGS_wrapperFileMap::cEnumerator enumerator_51404 (var_cas_inFilewrapperRegularFileMap, true) ;
const GGS_wrapperFileMap::cElement * operand_51404 = NULL ;
while (((operand_51404 = enumerator_51404.nextObject ()))) {
  macroValidPointer (operand_51404) ;
const GGS_string var_cas_contents = GGS_string::constructor_stringWithContentsOfFile (inLexique, operand_51404->mInfo.mAbsoluteFilePath COMMA_SOURCE_FILE_AT_LINE (1335)) ;
var_cas_ioImplementation.appendCString ("//--- File '") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperDirectory) ;
var_cas_ioImplementation.appendCString ("/") ;
var_cas_ioImplementation.dotAssign_operation (operand_51404->mKey) ;
var_cas_ioImplementation.appendCString ("'\n"
  "\n"
"const char * gWrapperFileContent_") ;
var_cas_ioImplementation.dotAssign_operation (operand_51404->mInfo.mWrapperFileIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1338))) ;
var_cas_ioImplementation.appendCString ("_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperName.reader_identifierRepresentation ()) ;
var_cas_ioImplementation.appendCString (" = ") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_contents.reader_utf8Representation ()) ;
var_cas_ioImplementation.appendCString (" ;\n"
  "\n"
"static const cRegularFileWrapper gWrapperFile_") ;
var_cas_ioImplementation.dotAssign_operation (operand_51404->mInfo.mWrapperFileIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1341))) ;
var_cas_ioImplementation.appendCString ("_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperName.reader_identifierRepresentation ()) ;
var_cas_ioImplementation.appendCString (" (\n"
"  ") ;
var_cas_ioImplementation.dotAssign_operation (operand_51404->mKey.ggs_string ().reader_utf8Representation ()) ;
var_cas_ioImplementation.appendCString (",\n"
"  ") ;
var_cas_ioImplementation.dotAssign_operation (operand_51404->mKey.ggs_string ().reader_pathExtension ().reader_utf8Representation ()) ;
var_cas_ioImplementation.appendCString (",\n"
"  gWrapperFileContent_") ;
var_cas_ioImplementation.dotAssign_operation (operand_51404->mInfo.mWrapperFileIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1345))) ;
var_cas_ioImplementation.appendCString ("_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperName.reader_identifierRepresentation ()) ;
var_cas_ioImplementation.appendCString ("\n"
") ;\n"
  "\n") ;
}
}
{
GGS_wrapperDirectoryMap::cEnumerator enumerator_52246 (var_cas_inFilewrapperDirectoryMap, true) ;
const GGS_wrapperDirectoryMap::cElement * operand_52246 = NULL ;
while (((operand_52246 = enumerator_52246.nextObject ()))) {
  macroValidPointer (operand_52246) ;
::routine_generateWrapperContents (inLexique,  var_cas_inFilewrapperName,  operand_52246->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1352)),  operand_52246->mInfo.mWrapperDirectoryIndex,  operand_52246->mInfo.mRegularFileMap,  operand_52246->mInfo.mDirectoryMap,  var_cas_ioImplementation COMMA_SOURCE_FILE_AT_LINE (1350)) ;
}
}
var_cas_ioImplementation.appendCString ("//--- All files of '") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperDirectory) ;
var_cas_ioImplementation.appendCString ("' directory\n"
  "\n"
"static const cRegularFileWrapper * gWrapperAllFiles_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperName.reader_identifierRepresentation ()) ;
var_cas_ioImplementation.appendCString ("_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperDirectoryIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1362))) ;
var_cas_ioImplementation.appendCString (" [") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperRegularFileMap.reader_count ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (1363)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1363))) ;
var_cas_ioImplementation.appendCString ("] = {\n") ;
{
GGS_wrapperFileMap::cEnumerator enumerator_52834 (var_cas_inFilewrapperRegularFileMap, true) ;
const GGS_wrapperFileMap::cElement * operand_52834 = NULL ;
while (((operand_52834 = enumerator_52834.nextObject ()))) {
  macroValidPointer (operand_52834) ;
var_cas_ioImplementation.appendCString ("  & gWrapperFile_") ;
var_cas_ioImplementation.dotAssign_operation (operand_52834->mInfo.mWrapperFileIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1365))) ;
var_cas_ioImplementation.appendCString ("_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperName.reader_identifierRepresentation ()) ;
var_cas_ioImplementation.appendCString (",\n") ;
}
}
var_cas_ioImplementation.appendCString ("  NULL\n"
"} ;\n"
  "\n") ;
var_cas_ioImplementation.appendCString ("//--- All sub-directories of '") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperDirectory) ;
var_cas_ioImplementation.appendCString ("' directory\n"
  "\n"
"static const cDirectoryWrapper * gWrapperAllDirectories_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperName.reader_identifierRepresentation ()) ;
var_cas_ioImplementation.appendCString ("_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperDirectoryIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1372))) ;
var_cas_ioImplementation.appendCString (" [") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperDirectoryMap.reader_count ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (1373)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1373))) ;
var_cas_ioImplementation.appendCString ("] = {\n") ;
{
GGS_wrapperDirectoryMap::cEnumerator enumerator_53445 (var_cas_inFilewrapperDirectoryMap, true) ;
const GGS_wrapperDirectoryMap::cElement * operand_53445 = NULL ;
while (((operand_53445 = enumerator_53445.nextObject ()))) {
  macroValidPointer (operand_53445) ;
var_cas_ioImplementation.appendCString ("  & gWrapperDirectory_") ;
var_cas_ioImplementation.dotAssign_operation (operand_53445->mInfo.mWrapperDirectoryIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1375))) ;
var_cas_ioImplementation.appendCString ("_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperName.reader_identifierRepresentation ()) ;
var_cas_ioImplementation.appendCString (",\n") ;
}
}
var_cas_ioImplementation.appendCString ("  NULL\n"
"} ;\n"
  "\n") ;
var_cas_ioImplementation.appendCString ("//--- Directory '") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperDirectory) ;
var_cas_ioImplementation.appendCString ("'\n"
  "\n"
"const cDirectoryWrapper gWrapperDirectory_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperDirectoryIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1381))) ;
var_cas_ioImplementation.appendCString ("_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperName.reader_identifierRepresentation ()) ;
var_cas_ioImplementation.appendCString (" (\n"
"  ") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperDirectory.reader_utf8Representation ()) ;
var_cas_ioImplementation.appendCString (",\n"
"  ") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperRegularFileMap.reader_count ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1384))) ;
var_cas_ioImplementation.appendCString (",\n"
"  gWrapperAllFiles_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperName.reader_identifierRepresentation ()) ;
var_cas_ioImplementation.appendCString ("_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperDirectoryIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1385))) ;
var_cas_ioImplementation.appendCString (",\n"
"  ") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperDirectoryMap.reader_count ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1386))) ;
var_cas_ioImplementation.appendCString (",\n"
"  gWrapperAllDirectories_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperName.reader_identifierRepresentation ()) ;
var_cas_ioImplementation.appendCString ("_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperDirectoryIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1387))) ;
var_cas_ioImplementation.appendCString ("\n"
") ;\n"
  "\n") ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generateWrapperContents\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@filewrapperDeclarationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__filewrapperDeclarationForGeneration__appendSpecificImplementation (C_CompilerEx & inLexique,
                                const cPtr_filewrapperDeclarationForGeneration * operand_54560
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_54560 != NULL) {
GGS_string var_cas_filewrapperImplementation = GGS_string ("") ;
::routine_generateWrapperContents (inLexique,  operand_54560->mFilewrapperName,  GGS_string (""),  GGS_uint (0U),  operand_54560->mFilewrapperFileMap,  operand_54560->mFilewrapperDirectoryMap,  var_cas_filewrapperImplementation COMMA_SOURCE_FILE_AT_LINE (1395)) ;
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_filewrapperImplementation (inLexique, operand_54560->mFilewrapperName, var_cas_filewrapperImplementation) ;
{
GGS_filewrapperTemplateListForGeneration::cEnumerator enumerator_55019 (operand_54560->mFilewrapperTemplateListForGeneration, true) ;
const GGS_filewrapperTemplateListForGeneration::cElement * operand_55019 = NULL ;
while (((operand_55019 = enumerator_55019.nextObject ()))) {
  macroValidPointer (operand_55019) ;
GGS_string var_cas_generatedCodeForInstructionList = GGS_string ("") ;
GGS_uint  var_cas_temporaryVariableIndex = GGS_uint (0U) ;
GGS_stringset  var_cas_unusedVariableCppNameSet = GGS_stringset ::constructor_emptySet () ;
var_cas_unusedVariableCppNameSet.addAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (1413))) ;
GGS_bool var_cas_useColumnMarker = GGS_bool (false) ;
::routine_templateCodeGenerationForListInstruction (inLexique,  operand_55019->mTemplateInstructionListForGeneration,  var_cas_generatedCodeForInstructionList,  var_cas_temporaryVariableIndex,  var_cas_unusedVariableCppNameSet,  var_cas_useColumnMarker COMMA_SOURCE_FILE_AT_LINE (1415)) ;
var_cas_outImplementation.dotAssign_operation (template_filewrapper_semanticComponentGenerationTemplate_filewrapperTemplateImplementation (inLexique, operand_54560->mFilewrapperName, operand_55019->mFilewrapperTemplateName, operand_55019->mFilewrapperTemplateFormalInputParameters, (var_cas_unusedVariableCppNameSet.reader_hasKey (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (1427)))).operator_not (), var_cas_useColumnMarker, var_cas_generatedCodeForInstructionList)) ;
}
}
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticGeneration (void) {
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 (category_reader__semanticDeclarationForGeneration__appendDeclaration1, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__routinePrototypeDeclarationForGeneration__appendDeclaration1, gClassInfoFor__routinePrototypeDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__functionPrototypeDeclarationForGeneration__appendDeclaration1, gClassInfoFor__functionPrototypeDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__onceFunctionDeclarationForGeneration__appendDeclaration1, gClassInfoFor__onceFunctionDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__classTypeForGeneration__appendDeclaration1, gClassInfoFor__classTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__mapTypeForGeneration__appendDeclaration1, gClassInfoFor__mapTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__structTypeForGeneration__appendDeclaration1, gClassInfoFor__structTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__listTypeForGeneration__appendDeclaration1, gClassInfoFor__listTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__sortedListTypeForGeneration__appendDeclaration1, gClassInfoFor__sortedListTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__enumTypeForGeneration__appendDeclaration1, gClassInfoFor__enumTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__filewrapperDeclarationForGeneration__appendDeclaration1, gClassInfoFor__filewrapperDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__abstractCategoryMethodForGeneration__appendDeclaration1, gClassInfoFor__abstractCategoryMethodForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__categoryMethodForGeneration__appendDeclaration1, gClassInfoFor__categoryMethodForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__abstractCategoryReaderForGeneration__appendDeclaration1, gClassInfoFor__abstractCategoryReaderForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__categoryReaderForGeneration__appendDeclaration1, gClassInfoFor__categoryReaderForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 (category_reader__semanticDeclarationForGeneration__appendDeclaration2, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration2) category_reader__mapTypeForGeneration__appendDeclaration2, gClassInfoFor__mapTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration2) category_reader__classTypeForGeneration__appendDeclaration2, gClassInfoFor__classTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (category_reader__semanticDeclarationForGeneration__appendTypeGenericImplementation, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation) category_reader__semanticTypeForGeneration__appendTypeGenericImplementation, gClassInfoFor__semanticTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (category_reader__semanticDeclarationForGeneration__appendSpecificImplementation, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__listmapTypeForGeneration__appendSpecificImplementation, gClassInfoFor__listmapTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__mapTypeForGeneration__appendSpecificImplementation, gClassInfoFor__mapTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__sortedListTypeForGeneration__appendSpecificImplementation, gClassInfoFor__sortedListTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__enumTypeForGeneration__appendSpecificImplementation, gClassInfoFor__enumTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__mapProxyTypeForGeneration__appendSpecificImplementation, gClassInfoFor__mapProxyTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__classTypeForGeneration__appendSpecificImplementation, gClassInfoFor__classTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__structTypeForGeneration__appendSpecificImplementation, gClassInfoFor__structTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__listTypeForGeneration__appendSpecificImplementation, gClassInfoFor__listTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__routineImplementationForGeneration__appendSpecificImplementation, gClassInfoFor__routineImplementationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__functionImplementationForGeneration__appendSpecificImplementation, gClassInfoFor__functionImplementationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__onceFunctionDeclarationForGeneration__appendSpecificImplementation, gClassInfoFor__onceFunctionDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__abstractCategoryMethodForGeneration__appendSpecificImplementation, gClassInfoFor__abstractCategoryMethodForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__categoryMethodForGeneration__appendSpecificImplementation, gClassInfoFor__categoryMethodForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__overridingCategoryMethodForGeneration__appendSpecificImplementation, gClassInfoFor__overridingCategoryMethodForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__abstractCategoryReaderForGeneration__appendSpecificImplementation, gClassInfoFor__abstractCategoryReaderForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__categoryReaderForGeneration__appendSpecificImplementation, gClassInfoFor__categoryReaderForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__overrideCategoryReaderForGeneration__appendSpecificImplementation, gClassInfoFor__overrideCategoryReaderForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__filewrapperDeclarationForGeneration__appendSpecificImplementation, gClassInfoFor__filewrapperDeclarationForGeneration.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_semanticGeneration (void) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration1.free () ;
  gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration2.free () ;
  gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.free () ;
  gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticGeneration (prologueRoutineFor_semanticGeneration, epilogueRoutineFor_semanticGeneration) ;

//---------------------------------------------------------------------------*

