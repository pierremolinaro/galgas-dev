//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'semanticGeneration.cpp'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       may 19th, 2010, at 11h16'26"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticGeneration.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticGeneration.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of wrapper 'typeGenerationTemplate'             *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_typeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_typeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_typeGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_typeGenerationTemplate_0,
  0,
  gWrapperAllDirectories_typeGenerationTemplate_0
) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   'genericTypeHeader' template of 'typeGenerationTemplate' filewrapper    *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_genericTypeHeader (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt () ;
  if (isBuilt) {
    result << "//---------------------------------------------------------------------------*\n"
      "//                                                                           *\n"
      "//" ;
    result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" generic type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
    result << "*\n"
      "//                                                                           *\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " ;\n"
      "\n" ;
  }
  return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'genericTypeImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_genericTypeImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_unifiedTypeMapProxy & var_cas_SUPER_TYPE_INDEX) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_INDEX.isBuilt () ;
  if (isBuilt) {
    result << "//---------------------------------------------------------------------------*\n"
      "//                                                                           *\n"
      "//" ;
    result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" generic type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
    result << "*\n"
      "//                                                                           *\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "const C_galgas_type_descriptor\n"
      "kTypeDescriptor_GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " (" ;
    columnMarker = result.currentColumn () ;
    result << "\"" ;
    result << var_cas_TYPE_NAME ;
    result << "\",\n"
      "                       " ;
    result.appendSpacesUntilColumn (columnMarker) ;
    if (var_cas_SUPER_TYPE_INDEX.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (9)).boolValue ()) {
      result << "NULL" ;
    }else {
      result << "& kTypeDescriptor_GALGAS_" ;
      result << var_cas_SUPER_TYPE_INDEX.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
    }
    result << ",\n"
      "                       " ;
    result.appendSpacesUntilColumn (columnMarker) ;
    result << "NULL) ;\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "const C_galgas_type_descriptor * GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << "::typeDescriptor (void) const {\n"
      "  return & kTypeDescriptor_GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " ;\n"
      "}\n"
      "\n" ;
  }
  return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   'unifiedTypeHeader' template of 'typeGenerationTemplate' filewrapper    *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_unifiedTypeHeader (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_bool& var_cas_IS_CONCRETE,
                                const GGS_unifiedTypeMapProxy & var_cas_SUPER_TYPE_INDEX,
                                const GGS_typeKindEnum& var_cas_TYPE_KIND,
                                const GGS_typedAttributeList & var_cas_CURRENT_TYPE_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_INHERITED_ATTRIBUTE_LIST,
                                const GGS_constructorMap & var_cas_CONSTRUCTOR_MAP,
                                const GGS_readerMap & var_cas_READER_MAP,
                                const GGS_modifierMap & var_cas_MODIFIER_MAP,
                                const GGS_instanceMethodMap & var_cas_INSTANCE_METHOD_MAP,
                                const GGS_classMethodMap & var_cas_CLASS_METHOD_MAP,
                                const GGS_enumerationDescriptorList & var_cas_ENUMERATION_DESCRIPTOR_LIST,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_unifiedTypeMapProxyList & var_cas_ADD_ASSIGN_ARGUMENT_LIST,
                                const GGS_nativeAttributeList & var_cas_NATIVE_ATTRIBUTE_LIST,
                                const GGS_lstringlist & var_cas_ENUM_CONSTANT_LIST,
                                const GGS_typedAttributeList & var_cas_PRIVATE_DATA_NUMBER_TYPED_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_IS_CONCRETE.isBuilt ()
    && var_cas_SUPER_TYPE_INDEX.isBuilt ()
    && var_cas_TYPE_KIND.isBuilt ()
    && var_cas_CURRENT_TYPE_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_INHERITED_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_CONSTRUCTOR_MAP.isBuilt ()
    && var_cas_READER_MAP.isBuilt ()
    && var_cas_MODIFIER_MAP.isBuilt ()
    && var_cas_INSTANCE_METHOD_MAP.isBuilt ()
    && var_cas_CLASS_METHOD_MAP.isBuilt ()
    && var_cas_ENUMERATION_DESCRIPTOR_LIST.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_ADD_ASSIGN_ARGUMENT_LIST.isBuilt ()
    && var_cas_NATIVE_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_ENUM_CONSTANT_LIST.isBuilt ()
    && var_cas_PRIVATE_DATA_NUMBER_TYPED_LIST.isBuilt () ;
  if (isBuilt) {
    result << "//---------------------------------------------------------------------------*\n"
      "//                                                                           *\n"
      "//" ;
    result << ((((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_TYPE_KIND.reader_kind (inLexique COMMA_SOURCE_FILE_AT_LINE (3)))).operator_concat (GGS_string (" type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
    result << "*\n"
      "//                                                                           *\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " ;\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "class GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " : public GALGAS_" ;
    result << var_cas_SUPER_TYPE_INDEX.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
    result << " {\n" ;
    if ((var_cas_ENUM_CONSTANT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- Enumeration type declaration\n"
        "  private : typedef enum {" ;
      GGS_lstringlist::cEnumerator enumerator_843 (var_cas_ENUM_CONSTANT_LIST, true) ;
      const GGS_lstringlist::cElement * operand_843 = NULL ;
      while (((operand_843 = enumerator_843.nextObject ()))) {
        macroValidPointer (operand_843) ;
        result << "kEnum_" ;
        result << operand_843->mValue.ggs_string ().reader_identifierRepresentation () ;
        if (enumerator_843.hasNextObject ()) {
          result << ", " ;
        }
      }
      result << "} enumeration ;\n"
        "\n"
        "//--------------------------------- Private attribute\n"
        "  private : enumeration mEnumValue ;\n"
        "\n"
        "//--------------------------------- C++ constructor\n"
        "  public : GALGAS_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " (const enumeration inValue COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateConstructorWithSelfObject (inLexique COMMA_SOURCE_FILE_AT_LINE (31)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "\n"
        "//--------------------------------- C++ constructor\n"
        "  protected : GALGAS_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " (const GALGAS_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " * inObject COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateCppConstructorWithNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (38)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "\n"
        "//--------------------------------- C++ constructor\n"
        "  protected : GALGAS_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " (" ;
      columnMarker = result.currentColumn () ;
      GGS_nativeAttributeList::cEnumerator enumerator_1653 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
      const GGS_nativeAttributeList::cElement * operand_1653 = NULL ;
      while (((operand_1653 = enumerator_1653.nextObject ()))) {
        macroValidPointer (operand_1653) ;
        result << "const " ;
        result << operand_1653->mCppClassName ;
        if (operand_1653->mIsPointer.boolValue ()) {
          result << " *" ;
        }else {
        }
        if (operand_1653->mUseReferenceForConstructor.boolValue ()) {
          result << " &" ;
        }else {
        }
        result << " inOperand_" ;
        result << operand_1653->mAttributeName ;
        if (enumerator_1653.hasNextObject ()) {
          result << ",\n" ;
          result.appendSpacesUntilColumn (columnMarker) ;
        }
      }
      if ((var_cas_NATIVE_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
        result << "LOCATION_ARGS) ;\n"
          "\n" ;
      }else {
        result << "\n" ;
        result.appendSpacesUntilColumn (columnMarker) ;
        result << "COMMA_LOCATION_ARGS) ;\n"
          "\n" ;
      }
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateCppConstructorWithCurrentAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (53)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "\n"
        "//--------------------------------- C++ constructor\n"
        "  protected : GALGAS_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " (" ;
      columnMarker = result.currentColumn () ;
      GGS_typedAttributeList::cEnumerator enumerator_2193 (var_cas_CURRENT_TYPE_ATTRIBUTE_LIST, true) ;
      const GGS_typedAttributeList::cElement * operand_2193 = NULL ;
      { GGS_uint var_cas_IDX (true, 0) ;
    while (((operand_2193 = enumerator_2193.nextObject ()))) {
      macroValidPointer (operand_2193) ;
      result << "const GALGAS_" ;
      result << operand_2193->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (57)) ;
      result << " * inAttribute_" ;
      result << operand_2193->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
      if (enumerator_2193.hasNextObject ()) {
        result << ",\n" ;
        result.appendSpacesUntilColumn (columnMarker) ;
      }
      var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
    }
  }
  if ((var_cas_CURRENT_TYPE_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
    result << "LOCATION_ARGS) ;\n"
      "\n" ;
  }else {
    result << "\n" ;
    result.appendSpacesUntilColumn (columnMarker) ;
    result << "COMMA_LOCATION_ARGS) ;\n"
      "\n" ;
  }
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateCppConstructorWithAllAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (67)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "\n"
    "//--------------------------------- C++ constructor\n"
    "  protected : GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " (" ;
  columnMarker = result.currentColumn () ;
  GGS_typedAttributeList::cEnumerator enumerator_2732 (var_cas_INHERITED_ATTRIBUTE_LIST, true) ;
  const GGS_typedAttributeList::cElement * operand_2732 = NULL ;
  { GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2732 = enumerator_2732.nextObject ()))) {
  macroValidPointer (operand_2732) ;
  result << "const GALGAS_" ;
  result << operand_2732->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (71)) ;
  result << " * inAttribute_" ;
  result << operand_2732->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
  if (enumerator_2732.hasNextObject ()) {
    result << ",\n" ;
    result.appendSpacesUntilColumn (columnMarker) ;
  }
  var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((var_cas_INHERITED_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "LOCATION_ARGS) ;\n"
  "\n" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (81)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Native constructor\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_nativeAttributeList::cEnumerator enumerator_3278 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_3278 = NULL ;
while (((operand_3278 = enumerator_3278.nextObject ()))) {
macroValidPointer (operand_3278) ;
result << "const " ;
result << operand_3278->mCppClassName ;
if (operand_3278->mIsPointer.boolValue ()) {
  result << " *" ;
}else {
}
if (operand_3278->mUseReferenceForConstructor.boolValue ()) {
  result << " &" ;
}else {
}
result << " inOperand_" ;
result << operand_3278->mAttributeName ;
if (enumerator_3278.hasNextObject ()) {
  result << ",\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateVirtualDestructor (inLexique COMMA_SOURCE_FILE_AT_LINE (91)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Virtual destructor\n"
  "  protected : virtual ~ GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n" ;
}else {
}
if ((var_cas_CONSTRUCTOR_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- GALGAS constructors\n" ;
GGS_constructorMap::cEnumerator enumerator_3811 (var_cas_CONSTRUCTOR_MAP, true) ;
const GGS_constructorMap::cElement * operand_3811 = NULL ;
while (((operand_3811 = enumerator_3811.nextObject ()))) {
macroValidPointer (operand_3811) ;
result << "  public : static GALGAS_" ;
result << operand_3811->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (99)) ;
result << " * constructor_" ;
result << operand_3811->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_3978 (operand_3811->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_3978 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3978 = enumerator_3978.nextObject ()))) {
macroValidPointer (operand_3978) ;
result << "const GALGAS_" ;
result << operand_3978->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (101)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (101)) ;
if (enumerator_3978.hasNextObject ()) {
  result << ",\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_3811->mInfo.mHasCompilerArgument).operator_and ((operand_3811->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else if (operand_3811->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else if ((operand_3811->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
result << "LOCATION_ARGS) ;\n"
  "\n" ;
}
}
}else {
}
result << "//--------------------------------- No copy\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " &) ;\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & operator = (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " &) ;\n"
  "\n" ;
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (122)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Implementation of reader 'description'\n"
  "  public : virtual void description (C_String & ioString,\n"
  "                                     const PMSInt32 inIndentation) const ;\n" ;
}else {
}
result << "//--------------------------------- Modifier invocation\n" ;
GGS_modifierMap::cEnumerator enumerator_5132 (var_cas_MODIFIER_MAP, true) ;
const GGS_modifierMap::cElement * operand_5132 = NULL ;
while (((operand_5132 = enumerator_5132.nextObject ()))) {
macroValidPointer (operand_5132) ;
if ((operand_5132->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (130))).boolValue ()) {
result << "  friend void modifierCall_" ;
result << operand_5132->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult" ;
GGS_formalParameterSignature::cEnumerator enumerator_5325 (operand_5132->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_5325 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5325 = enumerator_5325.nextObject ()))) {
macroValidPointer (operand_5325) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_5325->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (134))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_5325->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (135)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (135)) ;
}else if ((operand_5325->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (136))).boolValue ()) {
result << "GALGAS_" ;
result << operand_5325->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (137)) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (137)) ;
}else if ((operand_5325->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (138))).boolValue ()) {
result << "GALGAS_" ;
result << operand_5325->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (139)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (139)) ;
}else {
result << "GALGAS_" ;
result << operand_5325->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (141)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (141)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_5132->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Modifiers\n" ;
GGS_modifierMap::cEnumerator enumerator_6346 (var_cas_MODIFIER_MAP, true) ;
const GGS_modifierMap::cElement * operand_6346 = NULL ;
while (((operand_6346 = enumerator_6346.nextObject ()))) {
macroValidPointer (operand_6346) ;
if ((operand_6346->mInfo.mQualifier).operator_isNotEqual (GGS_readerQualifier::constructor_isInherited (inLexique COMMA_SOURCE_FILE_AT_LINE (158))).boolValue ()) {
result << "  protected : void modifier_" ;
result << operand_6346->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_6504 (operand_6346->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_6504 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6504 = enumerator_6504.nextObject ()))) {
macroValidPointer (operand_6504) ;
if ((operand_6504->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (161))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_6504->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (162)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (162)) ;
}else if ((operand_6504->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (163))).boolValue ()) {
result << "GALGAS_" ;
result << operand_6504->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (164)) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (164)) ;
}else if ((operand_6504->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (165))).boolValue ()) {
result << "GALGAS_" ;
result << operand_6504->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
}else {
result << "GALGAS_" ;
result << operand_6504->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (168)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (168)) ;
}
if (enumerator_6504.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_6346->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_6346->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_6346->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") ;\n"
  "\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Instance Methods\n" ;
GGS_instanceMethodMap::cEnumerator enumerator_7772 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_7772 = NULL ;
while (((operand_7772 = enumerator_7772.nextObject ()))) {
macroValidPointer (operand_7772) ;
if ((operand_7772->mInfo.mQualifier).operator_isNotEqual (GGS_readerQualifier::constructor_isInherited (inLexique COMMA_SOURCE_FILE_AT_LINE (194))).boolValue ()) {
result << "  protected : virtual void method_" ;
result << operand_7772->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_7936 (operand_7772->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_7936 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7936 = enumerator_7936.nextObject ()))) {
macroValidPointer (operand_7936) ;
if ((operand_7936->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (197))).boolValue ()) {
result << "GALGAS_" ;
result << operand_7936->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (198)) ;
result << " * const inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (198)) ;
}else if ((operand_7936->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (199))).boolValue ()) {
result << "GALGAS_" ;
result << operand_7936->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
}else if ((operand_7936->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (201))).boolValue ()) {
result << "GALGAS_" ;
result << operand_7936->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (202)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (202)) ;
}else {
result << "GALGAS_" ;
result << operand_7936->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (204)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (204)) ;
}
if (enumerator_7936.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_7772->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_7772->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_7772->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") const " ;
if (((operand_7772->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (224)))).operator_or ((operand_7772->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isOverridingAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (224)))).boolValue ()) {
result << "= 0 " ;
}else {
}
result << ";\n"
  "\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Instance Method Invocation\n" ;
GGS_instanceMethodMap::cEnumerator enumerator_9368 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_9368 = NULL ;
while (((operand_9368 = enumerator_9368.nextObject ()))) {
macroValidPointer (operand_9368) ;
if (((operand_9368->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (233)))).operator_or ((operand_9368->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (233)))).boolValue ()) {
result << "  friend void instanceMethodCall_" ;
result << operand_9368->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inObject" ;
GGS_formalParameterSignature::cEnumerator enumerator_9615 (operand_9368->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_9615 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9615 = enumerator_9615.nextObject ()))) {
macroValidPointer (operand_9615) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_9615->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (237))).boolValue ()) {
result << "GALGAS_" ;
result << operand_9615->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (238)) ;
result << " * const inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (238)) ;
}else if ((operand_9615->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (239))).boolValue ()) {
result << "GALGAS_" ;
result << operand_9615->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (240)) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (240)) ;
}else if ((operand_9615->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (241))).boolValue ()) {
result << "GALGAS_" ;
result << operand_9615->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (242)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (242)) ;
}else {
result << "GALGAS_" ;
result << operand_9615->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (244)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (244)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_9368->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Class Methods\n" ;
GGS_classMethodMap::cEnumerator enumerator_10644 (var_cas_CLASS_METHOD_MAP, true) ;
const GGS_classMethodMap::cElement * operand_10644 = NULL ;
while (((operand_10644 = enumerator_10644.nextObject ()))) {
macroValidPointer (operand_10644) ;
result << "  public : static void class_method_" ;
result << operand_10644->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_10751 (operand_10644->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_10751 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10751 = enumerator_10751.nextObject ()))) {
macroValidPointer (operand_10751) ;
if ((operand_10751->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (263))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_10751->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (264)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (264)) ;
}else if ((operand_10751->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (265))).boolValue ()) {
result << "GALGAS_" ;
result << operand_10751->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (266)) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (266)) ;
}else if ((operand_10751->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (267))).boolValue ()) {
result << "GALGAS_" ;
result << operand_10751->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (268)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (268)) ;
}else {
result << "GALGAS_" ;
result << operand_10751->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (270)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (270)) ;
}
if (enumerator_10751.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_10644->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_10644->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_10644->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") ;\n"
  "\n" ;
}
result << "\n"
  "//--------------------------------- Readers\n" ;
GGS_readerMap::cEnumerator enumerator_11938 (var_cas_READER_MAP, true) ;
const GGS_readerMap::cElement * operand_11938 = NULL ;
while (((operand_11938 = enumerator_11938.nextObject ()))) {
macroValidPointer (operand_11938) ;
if ((operand_11938->mInfo.mQualifier).operator_isNotEqual (GGS_readerQualifier::constructor_isInherited (inLexique COMMA_SOURCE_FILE_AT_LINE (295))).boolValue ()) {
result << "  protected : virtual GALGAS_" ;
result << operand_11938->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (296)) ;
result << " * reader_" ;
result << operand_11938->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_12163 (operand_11938->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_12163 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_12163 = enumerator_12163.nextObject ()))) {
macroValidPointer (operand_12163) ;
result << "const GALGAS_" ;
result << operand_12163->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (298)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (298)) ;
if (enumerator_12163.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_11938->mInfo.mArgumentTypeList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_11938->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
}else {
if (operand_11938->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") const" ;
if ((operand_11938->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (315))).boolValue ()) {
result << " = 0" ;
}else {
}
result << " ;\n"
  "\n" ;
}else {
}
}
result << "//--------------------------------- Reader invocation declaration\n" ;
GGS_readerMap::cEnumerator enumerator_12885 (var_cas_READER_MAP, true) ;
const GGS_readerMap::cElement * operand_12885 = NULL ;
while (((operand_12885 = enumerator_12885.nextObject ()))) {
macroValidPointer (operand_12885) ;
if ((operand_12885->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (324))).boolValue ()) {
result << "  friend GALGAS_" ;
result << operand_12885->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (325)) ;
result << " * readerCall_" ;
result << operand_12885->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inObject" ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_13146 (operand_12885->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_13146 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_13146 = enumerator_13146.nextObject ()))) {
macroValidPointer (operand_13146) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_13146->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (328)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (328)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_12885->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}else {
}
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryAndOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (339)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- & operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operator_and (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryOrOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (346)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- | operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operator_or (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryXorOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (353)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- ^ operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operator_xor (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryNotOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (360)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- & operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operator_not (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryTildeOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (366)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- ~ operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operator_tilde (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryConcatOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (372)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- . (concat) operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operator_concat (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryAddOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (379)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- + operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * add_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binarySubOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (387)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- - operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * substract_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryMulOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (395)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- * operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * multiply_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryDivOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (403)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- / operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * divide_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryModOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (411)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- mod operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * modulo_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryMinusOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (419)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- unary - operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operator_unary_minus (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (426)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- ++, -- operators\n"
  "  public : static void increment_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static void decrement_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryShiftOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (436)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- << and >> shift operators\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * left_shift_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_uint * inShiftOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * right_shift_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_uint * inShiftOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_dotAssignOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (449)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- .= operator\n"
  "  friend void dotAssign_operation (GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult,\n"
  "                                   const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand\n"
  "                                   COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((var_cas_ADD_ASSIGN_ARGUMENT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- += operator\n"
  "  friend void addAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult" ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_19040 (var_cas_ADD_ASSIGN_ARGUMENT_LIST, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_19040 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_19040 = enumerator_19040.nextObject ()))) {
macroValidPointer (operand_19040) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_19040->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (460)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (460)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n" ;
}else {
}
if (((((var_cas_SUPPORTED_OPERATORS).operator_and ((function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (466))).operator_or (function_dotAssignOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (466))))).operator_isNotEqual (GGS_uint (0U))).operator_or ((var_cas_MODIFIER_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)))).operator_or ((var_cas_ADD_ASSIGN_ARGUMENT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << "//--------------------------------- Modifier utility method\n"
  "  public : static void insulate (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_doNotGenererateObjectCompare (inLexique COMMA_SOURCE_FILE_AT_LINE (474)))).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Comparison\n"
  "  public : static PMSInt32 objectCompare (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n"
  "                                          const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2) ;\n" ;
}else {
}
result << "\n"
  "//--------------------------------- Introspection\n"
  "  public : virtual const C_galgas_type_descriptor * typeDescriptor (void) const ;\n"
  "\n"
  "//--------------------------------- Private data member\n" ;
GGS_nativeAttributeList::cEnumerator enumerator_20075 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_20075 = NULL ;
while (((operand_20075 = enumerator_20075.nextObject ()))) {
macroValidPointer (operand_20075) ;
result << "  private : " ;
if (operand_20075->mIsPointer.boolValue ()) {
result << "const " ;
}else {
}
result << operand_20075->mCppClassName ;
result << " " ;
if (operand_20075->mIsPointer.boolValue ()) {
result << "* " ;
}else {
}
result << operand_20075->mAttributeName ;
result << " ;\n" ;
if ((operand_20075->mGetterName.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "  public : inline " ;
if (operand_20075->mIsPointer.boolValue ()) {
result << "const " ;
}else {
}
result << operand_20075->mCppClassName ;
result << " " ;
if (operand_20075->mIsPointer.boolValue ()) {
result << " * " ;
}else {
}
result << operand_20075->mGetterName ;
result << " (void) const { return " ;
result << operand_20075->mAttributeName ;
result << " ; }\n" ;
}else {
}
}
GGS_typedAttributeList::cEnumerator enumerator_20466 (var_cas_PRIVATE_DATA_NUMBER_TYPED_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_20466 = NULL ;
while (((operand_20466 = enumerator_20466.nextObject ()))) {
macroValidPointer (operand_20466) ;
result << "  protected : GALGAS_" ;
result << operand_20466->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (490)) ;
result << " * mAttribute_" ;
result << operand_20466->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateEnumerationHelperMethods (inLexique COMMA_SOURCE_FILE_AT_LINE (493)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Enumeration helper methods\n"
  "  protected : virtual void populateEnumerationArray (const GALGAS_root * ioEnumerationArray [],\n"
  "                                                     const bool inAscending) const ;\n"
  "  public : virtual PMUInt32 count (void) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateSortedListComparisonMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (501)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Abstract method for comparing two sorted list elements\n"
  "  protected : virtual PMSInt32\n"
  "  compareSortedListElements (const GALGAS_root * inLeftAttributeList [],\n"
  "                             const GALGAS_root * inRightAttributeList []) const ;\n"
  "\n" ;
}else {
}
if ((var_cas_ENUMERATION_DESCRIPTOR_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Enumerator declaration\n"
  "  public : class cEnumerator : public AC_GALGAS_Enumerator {\n"
  "    public : cEnumerator (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inEnumeratedObject,\n"
  "                          const bool inAscending) ;\n"
  "  \n"
  "  //--- Attribute access\n" ;
GGS_enumerationDescriptorList::cEnumerator enumerator_21736 (var_cas_ENUMERATION_DESCRIPTOR_LIST, true) ;
const GGS_enumerationDescriptorList::cElement * operand_21736 = NULL ;
while (((operand_21736 = enumerator_21736.nextObject ()))) {
macroValidPointer (operand_21736) ;
result << "    public : GALGAS_" ;
result << operand_21736->mEnumeratedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (517)) ;
result << " * attribute_" ;
result << operand_21736->mEnumerationName.reader_identifierRepresentation () ;
result << " (void) const ;\n" ;
}
result << "\n"
  "  } ;\n" ;
}else {
}
result << "} ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'unifiedTypeImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_unifiedTypeImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_bool& var_cas_IS_CONCRETE,
                                const GGS_unifiedTypeMapProxy & var_cas_SUPER_TYPE_INDEX,
                                const GGS_typeKindEnum& var_cas_TYPE_KIND,
                                const GGS_typedAttributeList & var_cas_CURRENT_TYPE_ATTRIBUTE_LIST,
                                const GGS_constructorMap & var_cas_CONSTRUCTOR_MAP,
                                const GGS_readerMap & var_cas_READER_MAP,
                                const GGS_modifierMap & var_cas_MODIFIER_MAP,
                                const GGS_instanceMethodMap & var_cas_INSTANCE_METHOD_MAP,
                                const GGS_classMethodMap & var_cas_CLASS_METHOD_MAP,
                                const GGS_enumerationDescriptorList & var_cas_ENUMERATION_DESCRIPTOR_LIST,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_unifiedTypeMapProxyList & var_cas_ADD_ASSIGN_ARGUMENT_LIST,
                                const GGS_nativeAttributeList & var_cas_NATIVE_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_IS_CONCRETE.isBuilt ()
    && var_cas_SUPER_TYPE_INDEX.isBuilt ()
    && var_cas_TYPE_KIND.isBuilt ()
    && var_cas_CURRENT_TYPE_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_CONSTRUCTOR_MAP.isBuilt ()
    && var_cas_READER_MAP.isBuilt ()
    && var_cas_MODIFIER_MAP.isBuilt ()
    && var_cas_INSTANCE_METHOD_MAP.isBuilt ()
    && var_cas_CLASS_METHOD_MAP.isBuilt ()
    && var_cas_ENUMERATION_DESCRIPTOR_LIST.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_ADD_ASSIGN_ARGUMENT_LIST.isBuilt ()
    && var_cas_NATIVE_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_TYPE_KIND.reader_kind (inLexique COMMA_SOURCE_FILE_AT_LINE (3)))).operator_concat (GGS_string (" type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor\n"
  "kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "\"" ;
result << var_cas_TYPE_NAME ;
result << "\",\n"
  "                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "& kTypeDescriptor_GALGAS_" ;
result << var_cas_SUPER_TYPE_INDEX.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
result << ",\n"
  "                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "(genericObjectCompareFunctionType) GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare) ;\n"
  "\n" ;
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateConstructorWithSelfObject (inLexique COMMA_SOURCE_FILE_AT_LINE (12)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inObject COMMA_LOCATION_ARGS) :\n"
  "GALGAS_" ;
result << var_cas_SUPER_TYPE_INDEX.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
result << " (THERE)" ;
GGS_nativeAttributeList::cEnumerator enumerator_1090 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_1090 = NULL ;
while (((operand_1090 = enumerator_1090.nextObject ()))) {
macroValidPointer (operand_1090) ;
result << ",\n" ;
result << operand_1090->mAttributeName ;
result << " (" ;
result << operand_1090->mDefaultValue ;
result << ")" ;
}
result << " {\n"
  "  if (NULL != inObject) {\n"
  "    macroValidObject (inObject, const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_nativeAttributeList::cEnumerator enumerator_1284 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_1284 = NULL ;
while (((operand_1284 = enumerator_1284.nextObject ()))) {
macroValidPointer (operand_1284) ;
result << "    " ;
result << operand_1284->mAttributeName ;
result << " = inObject->" ;
result << operand_1284->mGetterName ;
result << " () ;\n" ;
}
result << "  }\n"
  "}\n"
  "\n" ;
}else {
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::typeDescriptor (void) const {\n"
  "  return & kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "}\n" ;
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (37)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_nativeAttributeList::cEnumerator enumerator_1867 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_1867 = NULL ;
while (((operand_1867 = enumerator_1867.nextObject ()))) {
macroValidPointer (operand_1867) ;
result << "const " ;
result << operand_1867->mCppClassName ;
if (operand_1867->mIsPointer.boolValue ()) {
result << " *" ;
}else {
}
if (operand_1867->mUseReferenceForConstructor.boolValue ()) {
result << " &" ;
}else {
}
result << " inOperand_" ;
result << operand_1867->mAttributeName ;
if (enumerator_1867.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_nativeAttributeList::cEnumerator enumerator_2204 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_2204 = NULL ;
while (((operand_2204 = enumerator_2204.nextObject ()))) {
macroValidPointer (operand_2204) ;
result << "inOperand_" ;
result << operand_2204->mAttributeName ;
if (enumerator_2204.hasNextObject ()) {
result << ", " ;
}
}
if ((var_cas_NATIVE_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "THERE" ;
}else {
result << " COMMA_THERE" ;
}
result << ")) ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}else {
}
GGS_modifierMap::cEnumerator enumerator_2419 (var_cas_MODIFIER_MAP, true) ;
const GGS_modifierMap::cElement * operand_2419 = NULL ;
while (((operand_2419 = enumerator_2419.nextObject ()))) {
macroValidPointer (operand_2419) ;
if ((operand_2419->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (65))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void modifierCall_" ;
result << operand_2419->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult" ;
GGS_formalParameterSignature::cEnumerator enumerator_2692 (operand_2419->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_2692 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2692 = enumerator_2692.nextObject ()))) {
macroValidPointer (operand_2692) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_2692->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (70))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_2692->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (71)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (71)) ;
}else if ((operand_2692->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (72))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2692->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (73)) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (73)) ;
}else if ((operand_2692->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (74))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2692->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (75)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (75)) ;
}else {
result << "GALGAS_" ;
result << operand_2692->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (77)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (77)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_2419->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "    if (ioResult != NULL) {\n"
  "      GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioResult COMMA_THERE) ;\n"
  "      ioResult->modifier_" ;
result << operand_2419->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_formalParameterSignature::cEnumerator enumerator_3800 (operand_2419->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_3800 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3800 = enumerator_3800.nextObject ()))) {
macroValidPointer (operand_3800) ;
if ((operand_3800->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (91))).boolValue ()) {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (92)) ;
}else if ((operand_3800->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (93))).boolValue ()) {
result << "ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (94)) ;
}else if ((operand_3800->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (95))).boolValue ()) {
result << "outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (96)) ;
}else {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (98)) ;
}
if (enumerator_3800.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_2419->mInfo.mParameterList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_2419->mInfo.mHasCompilerArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_2419->mInfo.mHasCompilerArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
result << ") ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}else {
}
}
GGS_instanceMethodMap::cEnumerator enumerator_4677 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_4677 = NULL ;
while (((operand_4677 = enumerator_4677.nextObject ()))) {
macroValidPointer (operand_4677) ;
if (((operand_4677->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (122)))).operator_or ((operand_4677->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (122)))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void instanceMethodCall_" ;
result << operand_4677->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inObject" ;
GGS_formalParameterSignature::cEnumerator enumerator_5004 (operand_4677->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_5004 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5004 = enumerator_5004.nextObject ()))) {
macroValidPointer (operand_5004) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_5004->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (127))).boolValue ()) {
result << "GALGAS_" ;
result << operand_5004->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (128)) ;
result << " * const inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (128)) ;
}else if ((operand_5004->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (129))).boolValue ()) {
result << "GALGAS_" ;
result << operand_5004->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (130)) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (130)) ;
}else if ((operand_5004->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (131))).boolValue ()) {
result << "GALGAS_" ;
result << operand_5004->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (132)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (132)) ;
}else {
result << "GALGAS_" ;
result << operand_5004->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (134)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (134)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_4677->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "  if (inObject != NULL) {\n"
  "    macroRetainObjectThere (inObject) ;\n"
  "    inObject->method_" ;
result << operand_4677->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_formalParameterSignature::cEnumerator enumerator_6103 (operand_4677->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_6103 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6103 = enumerator_6103.nextObject ()))) {
macroValidPointer (operand_6103) ;
if ((operand_6103->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (148))).boolValue ()) {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (149)) ;
}else if ((operand_6103->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (150))).boolValue ()) {
result << "ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (151)) ;
}else if ((operand_6103->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (152))).boolValue ()) {
result << "outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (153)) ;
}else {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (155)) ;
}
if (enumerator_6103.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_4677->mInfo.mParameterList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_4677->mInfo.mHasCompilerArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_4677->mInfo.mHasCompilerArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
result << ") ;\n"
  "    macroReleaseObjectThere (inObject) ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}else {
}
}
GGS_readerMap::cEnumerator enumerator_7020 (var_cas_READER_MAP, true) ;
const GGS_readerMap::cElement * operand_7020 = NULL ;
while (((operand_7020 = enumerator_7020.nextObject ()))) {
macroValidPointer (operand_7020) ;
if ((operand_7020->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (180))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_7020->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (182)) ;
result << " * readerCall_" ;
result << operand_7020->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inObject" ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_7363 (operand_7020->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_7363 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7363 = enumerator_7363.nextObject ()))) {
macroValidPointer (operand_7363) ;
result << ",\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << operand_7363->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (185)) ;
result << " * inOperand_" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (185)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_7020->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "  GALGAS_" ;
result << operand_7020->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (193)) ;
result << " * result = NULL ;\n"
  "  if (inObject != NULL) {\n"
  "    result = inObject->reader_" ;
result << operand_7020->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_7878 (operand_7020->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_7878 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7878 = enumerator_7878.nextObject ()))) {
macroValidPointer (operand_7878) ;
result << "inOperand_" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (197)) ;
if (enumerator_7878.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_7020->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_7020->mInfo.mHasCompilerArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_7020->mInfo.mHasCompilerArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
result << ") ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}else {
}
}
if ((var_cas_ENUMERATION_DESCRIPTOR_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "//" ;
result << ((((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_TYPE_KIND.reader_kind (inLexique COMMA_SOURCE_FILE_AT_LINE (222)))).operator_concat (GGS_string (" enumeration")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n" ;
GGS_enumerationDescriptorList::cEnumerator enumerator_8610 (var_cas_ENUMERATION_DESCRIPTOR_LIST, true) ;
const GGS_enumerationDescriptorList::cElement * operand_8610 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8610 = enumerator_8610.nextObject ()))) {
macroValidPointer (operand_8610) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_8610->mEnumeratedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (225)) ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator::attribute_" ;
result << operand_8610->mEnumerationName.reader_identifierRepresentation () ;
result << " (void) const {\n"
  "  GALGAS_" ;
result << operand_8610->mEnumeratedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (226)) ;
result << " * result = (GALGAS_" ;
result << operand_8610->mEnumeratedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (226)) ;
result << " *) directAccess (" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (226)) ;
result << " COMMA_HERE) ;\n"
  "  macroValidObject (result, GALGAS_" ;
result << operand_8610->mEnumeratedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (227)) ;
result << ") ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
}else {
}
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'predefinedTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_predefinedTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_modifierMap & var_cas_MODIFIER_MAP,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_unifiedTypeMapProxyList & var_cas_ADD_ASSIGN_ARGUMENT_LIST,
                                const GGS_nativeAttributeList & var_cas_NATIVE_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_MODIFIER_MAP.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_ADD_ASSIGN_ARGUMENT_LIST.isBuilt ()
    && var_cas_NATIVE_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
if (((((var_cas_SUPPORTED_OPERATORS).operator_and ((function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (1))).operator_or (function_dotAssignOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (1))))).operator_isNotEqual (GGS_uint (0U))).operator_or ((var_cas_MODIFIER_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)))).operator_or ((var_cas_ADD_ASSIGN_ARGUMENT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioOperand->retainCount () > 1) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new(" ;
GGS_nativeAttributeList::cEnumerator enumerator_546 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_546 = NULL ;
while (((operand_546 = enumerator_546.nextObject ()))) {
macroValidPointer (operand_546) ;
result << "ioOperand->" ;
result << operand_546->mAttributeName ;
if (enumerator_546.hasNextObject ()) {
result << ", " ;
}
}
if ((var_cas_NATIVE_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "THERE" ;
}else {
result << " COMMA_THERE" ;
}
result << ") ;\n"
  "    macroRetainObject (p) ;\n"
  "    macroReleaseObject (ioOperand) ;\n"
  "    ioOperand = p ;\n"
  "  }\n"
  "}\n" ;
}else {
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'enumTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_enumTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_stringlist & var_cas_CONSTANT_LIST,
                                const GGS_enumMessageListForGeneration & var_cas_ENUM_MESSAGE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_CONSTANT_LIST.isBuilt ()
    && var_cas_ENUM_MESSAGE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const enumeration inValue\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n"
  "GALGAS_enum (THERE),\n"
  "mEnumValue (inValue) {\n"
  "}\n"
  "\n" ;
GGS_stringlist::cEnumerator enumerator_304 (var_cas_CONSTANT_LIST, true) ;
const GGS_stringlist::cElement * operand_304 = NULL ;
while (((operand_304 = enumerator_304.nextObject ()))) {
macroValidPointer (operand_304) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_" ;
result << operand_304->mValue.reader_identifierRepresentation () ;
result << " (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (kEnum_" ;
result << operand_304->mValue.reader_identifierRepresentation () ;
result << " COMMA_THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
GGS_enumMessageListForGeneration::cEnumerator enumerator_761 (var_cas_ENUM_MESSAGE_LIST, true) ;
const GGS_enumMessageListForGeneration::cElement * operand_761 = NULL ;
while (((operand_761 = enumerator_761.nextObject ()))) {
macroValidPointer (operand_761) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const char * gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_761->mEnumMessageName.reader_identifierRepresentation () ;
result << " [" ;
result << var_cas_CONSTANT_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (21)) ;
result << "] = {" ;
GGS_enumMessageAssociationSortedListForGeneration::cEnumerator enumerator_1039 (operand_761->mMessageAssociationList, true) ;
const GGS_enumMessageAssociationSortedListForGeneration::cElement * operand_1039 = NULL ;
while (((operand_1039 = enumerator_1039.nextObject ()))) {
macroValidPointer (operand_1039) ;
result << "\n"
  "  " ;
result << operand_1039->mMessage.reader_utf8Representation () ;
if (enumerator_1039.hasNextObject ()) {
result << "," ;
}
}
result << "\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_string * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_761->mEnumMessageName.reader_identifierRepresentation () ;
result << " (LOCATION_ARGS) const {\n"
  "  return GALGAS_string::constructor_new (gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_761->mEnumMessageName.reader_identifierRepresentation () ;
result << " [mEnumValue] COMMA_THERE) ;\n"
  "}\n"
  "\n" ;
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const char * gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " [" ;
result << var_cas_CONSTANT_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << "] = {" ;
GGS_stringlist::cEnumerator enumerator_1725 (var_cas_CONSTANT_LIST, true) ;
const GGS_stringlist::cElement * operand_1725 = NULL ;
while (((operand_1725 = enumerator_1725.nextObject ()))) {
macroValidPointer (operand_1725) ;
result << "\n"
  "  " ;
result << operand_1725->mValue.reader_utf8Representation () ;
if (enumerator_1725.hasNextObject ()) {
result << "," ;
}
}
result << "\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 /* inIndentation */) const {\n"
  "  ioString << \"<enum @" ;
result << var_cas_TYPE_NAME ;
result << ": \" << gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " [mEnumValue] << \">\" ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "PMSInt32 GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n"
  "                                      " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2) {\n"
  "  macroValidObject (inOperand1, const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  macroValidObject (inOperand2, const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  return ((PMSInt32) inOperand1->mEnumValue) - ((PMSInt32) inOperand2->mEnumValue) ;\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'listTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_listTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_list (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4)) ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_listWithValue (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_713 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_713 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_713 = enumerator_713.nextObject ()))) {
macroValidPointer (operand_713) ;
result << "const GALGAS_" ;
result << operand_713->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (19)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (19)) ;
if (enumerator_713.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (THERE) ;\n"
  "  const GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (24)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_1085 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1085 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1085 = enumerator_1085.nextObject ()))) {
macroValidPointer (operand_1085) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (26)) ;
if (enumerator_1085.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "  result->addObject (attributeArray) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioObject\n"
  "                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioObject->retainCount () > 1) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * source = ioObject ;\n"
  "    release (ioObject COMMA_THERE) ;\n"
  "    ioObject = constructor_emptyList (THERE) ;\n"
  "    retain (ioObject COMMA_THERE) ;\n"
  "    ioObject->copyFrom (source) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void addAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult" ;
GGS_typedAttributeList::cEnumerator enumerator_1853 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1853 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1853 = enumerator_1853.nextObject ()))) {
macroValidPointer (operand_1853) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_1853->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (51)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (51)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioResult COMMA_THERE) ;\n"
  "    const GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (56)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_2213 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2213 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2213 = enumerator_2213.nextObject ()))) {
macroValidPointer (operand_2213) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (58)) ;
if (enumerator_2213.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "    ioResult->addObject (attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_prependValue (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_2509 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2509 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2509 = enumerator_2509.nextObject ()))) {
macroValidPointer (operand_2509) ;
result << "const GALGAS_" ;
result << operand_2509->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (70)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (70)) ;
if (enumerator_2509.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  if (inOperand0 != NULL) {\n"
  "    const GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (75)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_2824 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2824 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2824 = enumerator_2824.nextObject ()))) {
macroValidPointer (operand_2824) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (77)) ;
if (enumerator_2824.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "    prependAttributeArray (attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popFirst (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_3118 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3118 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3118 = enumerator_3118.nextObject ()))) {
macroValidPointer (operand_3118) ;
result << "GALGAS_" ;
result << operand_3118->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (89)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (89)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  const GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (93)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_3409 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3409 = NULL ;
while (((operand_3409 = enumerator_3409.nextObject ()))) {
macroValidPointer (operand_3409) ;
result << "NULL" ;
if (enumerator_3409.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "  removeFirstObject (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3547 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3547 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3547 = enumerator_3547.nextObject ()))) {
macroValidPointer (operand_3547) ;
result << "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (100)) ;
result << " = (GALGAS_" ;
result << operand_3547->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (100)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (100)) ;
result << "] ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popLast (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_3874 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3874 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3874 = enumerator_3874.nextObject ()))) {
macroValidPointer (operand_3874) ;
result << "GALGAS_" ;
result << operand_3874->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (108)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (108)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  const GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (112)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_4165 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4165 = NULL ;
while (((operand_4165 = enumerator_4165.nextObject ()))) {
macroValidPointer (operand_4165) ;
result << "NULL" ;
if (enumerator_4165.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "  removeLastObject (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4302 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4302 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4302 = enumerator_4302.nextObject ()))) {
macroValidPointer (operand_4302) ;
result << "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (119)) ;
result << " = (GALGAS_" ;
result << operand_4302->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (119)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (119)) ;
result << "] ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_first (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_4625 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4625 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4625 = enumerator_4625.nextObject ()))) {
macroValidPointer (operand_4625) ;
result << "GALGAS_" ;
result << operand_4625->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (127)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (127)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  const GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (131)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_4922 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4922 = NULL ;
while (((operand_4922 = enumerator_4922.nextObject ()))) {
macroValidPointer (operand_4922) ;
result << "NULL" ;
if (enumerator_4922.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "  readFirst (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_5052 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5052 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5052 = enumerator_5052.nextObject ()))) {
macroValidPointer (operand_5052) ;
result << "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) ;
result << " = (GALGAS_" ;
result << operand_5052->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) ;
result << "] ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_last (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_5374 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5374 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5374 = enumerator_5374.nextObject ()))) {
macroValidPointer (operand_5374) ;
result << "GALGAS_" ;
result << operand_5374->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (146)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (146)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  const GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (150)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_5671 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5671 = NULL ;
while (((operand_5671 = enumerator_5671.nextObject ()))) {
macroValidPointer (operand_5671) ;
result << "NULL" ;
if (enumerator_5671.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "  readLast (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_5800 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5800 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5800 = enumerator_5800.nextObject ()))) {
macroValidPointer (operand_5800) ;
result << "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (157)) ;
result << " = (GALGAS_" ;
result << operand_5800->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (157)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (157)) ;
result << "] ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator_concat (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n"
  "                                                        const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2\n"
  "                                                        COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  if ((NULL != inOperand1) && (NULL != inOperand2)) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (THERE) ;\n"
  "    result->appendList (inOperand1) ;\n"
  "    result->appendList (inOperand2) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_subListWithRange (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_uint * inOperand0,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_uint * inOperand1,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  if ((inOperand0 != NULL) && (NULL != inOperand1)) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (THERE) ;\n"
  "    const bool ok = subListWithRange (result, inOperand0, inOperand1, inCompiler COMMA_THERE) ;\n"
  "    if (! ok) {\n"
  "      result = NULL ;\n"
  "    }\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_subListFromIndex (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_uint * inIndex,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  if (inIndex != NULL) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (THERE) ;\n"
  "    const bool ok = subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;\n"
  "    if (! ok) {\n"
  "      result = NULL ;\n"
  "    }\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void dotAssign_operation (GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult,\n"
  "                          const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand\n"
  "                          COMMA_LOCATION_ARGS) {\n"
  "  if ((ioResult != NULL) && (inOperand != NULL)) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioResult COMMA_THERE) ;\n"
  "    ioResult->appendList (inOperand) ;\n"
  "  }\n"
  "}\n" ;
GGS_typedAttributeList::cEnumerator enumerator_8480 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8480 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8480 = enumerator_8480.nextObject ()))) {
macroValidPointer (operand_8480) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_set" ;
result << operand_8480->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ().reader_identifierRepresentation () ;
result << "AtIndex (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << operand_8480->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (221)) ;
result << " * inOperand,\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_uint * inIndex,\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  attributeDirectWrite (inOperand, inIndex, " ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (225)) ;
result << ", inCompiler COMMA_THERE) ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_9186 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9186 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9186 = enumerator_9186.nextObject ()))) {
macroValidPointer (operand_9186) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_9186->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (232)) ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_9186->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << "AtIndex (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_uint * inIndex,\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << operand_9186->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (235)) ;
result << " * result = NULL ;\n"
  "  result = (GALGAS_" ;
result << operand_9186->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (236)) ;
result << " *) attributeDirectRead (inIndex, " ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (236)) ;
result << ", inCompiler COMMA_THERE) ;\n"
  "  macroValidObjectThere (result, GALGAS_" ;
result << operand_9186->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (237)) ;
result << ") ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator::cEnumerator (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inEnumeratedObject,\n"
  "                                             const bool inAscending) :\n"
  "AC_GALGAS_Enumerator (inEnumeratedObject, inAscending) {\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'listmapTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_listmapTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_ASSOCIATED_LISTTYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ASSOCIATED_LISTTYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_listmap ((GALGAS_list * (*) (LOCATION_ARGS)) GALGAS_uintlist::constructor_emptyList COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyMap (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioObject\n"
  "                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioObject->retainCount () > 1) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * source = ioObject ;\n"
  "    macroReleaseObjectThere (ioObject) ;\n"
  "    ioObject = constructor_emptyMap (THERE) ;\n"
  "    macroRetainObjectThere (ioObject) ;\n"
  "    ioObject->copyFrom (source) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void addAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_string * inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_1247 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1247 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1247 = enumerator_1247.nextObject ()))) {
macroValidPointer (operand_1247) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_1247->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (33)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (33)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioResult COMMA_THERE) ;\n"
  "    const GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (38)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_1607 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1607 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1607 = enumerator_1607.nextObject ()))) {
macroValidPointer (operand_1607) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (40)) ;
if (enumerator_1607.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "    ioResult->addObject (inKey, attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator::cEnumerator (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inEnumeratedObject,\n"
  "                                             const bool inAscending) :\n"
  "AC_GALGAS_Enumerator (inEnumeratedObject, inAscending) {\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'mapTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_mapTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_insertMethodListAST & var_cas_INSERT_METHOD_LIST,
                                const GGS_mapSearchMethodListAST & var_cas_SEARCH_METHOD_LIST,
                                const GGS_mapRemoveMethodListAST & var_cas_REMOVE_METHOD_LIST,
                                const GGS_bool& var_cas_HAS_INSERT_OR_REPLACE) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_INSERT_METHOD_LIST.isBuilt ()
    && var_cas_SEARCH_METHOD_LIST.isBuilt ()
    && var_cas_REMOVE_METHOD_LIST.isBuilt ()
    && var_cas_HAS_INSERT_OR_REPLACE.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_map (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (4)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4)) ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyMap (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioObject\n"
  "                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioObject->retainCount () > 1) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * source = ioObject ;\n"
  "    macroReleaseObjectThere (ioObject) ;\n"
  "    ioObject = constructor_emptyMap (THERE) ;\n"
  "    macroRetainObjectThere (ioObject) ;\n"
  "    ioObject->copyFrom (source) ;\n"
  "  }\n"
  "}\n"
  "\n" ;
GGS_insertMethodListAST::cEnumerator enumerator_1016 (var_cas_INSERT_METHOD_LIST, true) ;
const GGS_insertMethodListAST::cElement * operand_1016 = NULL ;
while (((operand_1016 = enumerator_1016.nextObject ()))) {
macroValidPointer (operand_1016) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_" ;
result << operand_1016->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_lstring * inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_1260 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1260 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1260 = enumerator_1260.nextObject ()))) {
macroValidPointer (operand_1260) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_1260->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  const GALGAS_root * attributes [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (36)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (36)) ;
result << "] = {inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_1580 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1580 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1580 = enumerator_1580.nextObject ()))) {
macroValidPointer (operand_1580) ;
result << ", inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (38)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n" ;
const GGS_uint indentation_2043 = GGS_uint (2U) ;
if (indentation_2043.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_2043.uintValue ()) ;
}
result << "const utf32 kInsertErrorMessage [" ;
result << operand_1016->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (42)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (42)) ;
result << "] = " ;
result << operand_1016->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "const utf32 kShadowErrorMessage [" ;
result << operand_1016->mShadowErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (43)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (43)) ;
result << "] = " ;
result << operand_1016->mShadowErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;\n" ;
 ;
if (indentation_2043.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_2043.uintValue ())) ;
}
result << "}\n"
  "\n" ;
}
GGS_mapSearchMethodListAST::cEnumerator enumerator_2082 (var_cas_SEARCH_METHOD_LIST, true) ;
const GGS_mapSearchMethodListAST::cElement * operand_2082 = NULL ;
while (((operand_2082 = enumerator_2082.nextObject ()))) {
macroValidPointer (operand_2082) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_" ;
result << operand_2082->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_lstring * const inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_2324 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2324 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2324 = enumerator_2324.nextObject ()))) {
macroValidPointer (operand_2324) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_2324->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (53)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (53)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n" ;
const GGS_uint indentation_3155 = GGS_uint (2U) ;
if (indentation_3155.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_3155.uintValue ()) ;
}
result << "const utf32 kSearchErrorMessage [" ;
result << operand_2082->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (58)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (58)) ;
result << "] = " ;
result << operand_2082->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "const GALGAS_root ** attributes = performSearch (inKey, inCompiler, kSearchErrorMessage COMMA_THERE) ;\n"
  "if (NULL != attributes) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2838 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2838 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2838 = enumerator_2838.nextObject ()))) {
macroValidPointer (operand_2838) ;
result << "  outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (62)) ;
result << " = (GALGAS_" ;
result << operand_2838->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (62)) ;
result << " *) attributes [" ;
result << var_cas_IDX.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (62)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (62)) ;
result << "] ;\n"
  "  macroValidObject (outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (63)) ;
result << ", GALGAS_" ;
result << operand_2838->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (63)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n" ;
 ;
if (indentation_3155.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_3155.uintValue ())) ;
}
result << "}\n"
  "\n" ;
}
GGS_mapRemoveMethodListAST::cEnumerator enumerator_3195 (var_cas_REMOVE_METHOD_LIST, true) ;
const GGS_mapRemoveMethodListAST::cElement * operand_3195 = NULL ;
while (((operand_3195 = enumerator_3195.nextObject ()))) {
macroValidPointer (operand_3195) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_" ;
result << operand_3195->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_lstring * inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_3439 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3439 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3439 = enumerator_3439.nextObject ()))) {
macroValidPointer (operand_3439) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_3439->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (75)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (75)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
const GGS_uint indentation_4311 = GGS_uint (2U) ;
if (indentation_4311.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_4311.uintValue ()) ;
}
result << "const utf32 kRemoveErrorMessage [" ;
result << operand_3195->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (80)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (80)) ;
result << "] = " ;
result << operand_3195->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "const GALGAS_root ** attributes = performRemove (inKey, inCompiler, kRemoveErrorMessage COMMA_THERE) ;\n"
  "if (NULL != attributes) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3947 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3947 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3947 = enumerator_3947.nextObject ()))) {
macroValidPointer (operand_3947) ;
result << "  outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (84)) ;
result << " = (GALGAS_" ;
result << operand_3947->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (84)) ;
result << " *) attributes [" ;
result << var_cas_IDX.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (84)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (84)) ;
result << "] ;\n"
  "  macroValidObject (outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (85)) ;
result << ", GALGAS_" ;
result << operand_3947->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (85)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  macroMyDeletePODArray (attributes) ;\n"
  "}\n" ;
 ;
if (indentation_4311.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_4311.uintValue ())) ;
}
result << "}\n"
  "\n" ;
}
if (var_cas_HAS_INSERT_OR_REPLACE.boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_insertOrReplace (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_lstring * inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_4568 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4568 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4568 = enumerator_4568.nextObject ()))) {
macroValidPointer (operand_4568) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_4568->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (97)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (97)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  const GALGAS_root * attributes [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (100)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (100)) ;
result << "] = {inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_4857 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4857 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4857 = enumerator_4857.nextObject ()))) {
macroValidPointer (operand_4857) ;
result << ", inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (102)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "  performInsertOrReplace (attributes) ;\n"
  "}\n"
  "\n" ;
}else {
}
GGS_typedAttributeList::cEnumerator enumerator_5009 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5009 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5009 = enumerator_5009.nextObject ()))) {
macroValidPointer (operand_5009) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_5009->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (111)) ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_5009->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << "ForKey (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_string * inKey,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  GALGAS_root * result = readAttributeForKey (inKey, inCompiler, " ;
result << var_cas_IDX.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (114)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (114)) ;
result << " COMMA_THERE) ;\n"
  "  macroNullOrValidObject (result, GALGAS_" ;
result << operand_5009->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (115)) ;
result << ") ;\n"
  "  return (GALGAS_" ;
result << operand_5009->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (116)) ;
result << " *) result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_typedAttributeList::cEnumerator enumerator_5798 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5798 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5798 = enumerator_5798.nextObject ()))) {
macroValidPointer (operand_5798) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_set" ;
result << operand_5798->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ().reader_identifierRepresentation () ;
result << "ForKey (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_string * inKey,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_5798->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (123)) ;
result << " * inAttributeValue,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  writeAttributeForKey (inKey, inAttributeValue, inCompiler, " ;
result << var_cas_IDX.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (126)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (126)) ;
result << " COMMA_THERE) ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator::cEnumerator (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inEnumeratedObject,\n"
  "                                             const bool inAscending) :\n"
  "AC_GALGAS_Enumerator (inEnumeratedObject, inAscending) {\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'sortedlistTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_sortedlistTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_sortDescriptorListForGeneration & var_cas_SORT_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_SORT_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_sortedlist (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4)) ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "PMSInt32 GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::compareSortedListElements (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_root * inLeftAttributeList [],\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_root * inRightAttributeList []) const {\n"
  "  PMSInt32 result = 0 ;\n" ;
GGS_sortDescriptorListForGeneration::cEnumerator enumerator_575 (var_cas_SORT_ATTRIBUTE_LIST, true) ;
const GGS_sortDescriptorListForGeneration::cElement * operand_575 = NULL ;
while (((operand_575 = enumerator_575.nextObject ()))) {
macroValidPointer (operand_575) ;
result << "  if (result == 0) {\n"
  "    result = " ;
if (operand_575->mAscendingOrder.boolValue ()) {
}else {
result << "- " ;
}
result << "genericObjectCompareFunction (inLeftAttributeList [" ;
result << operand_575->mAttributeIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
result << "], inRightAttributeList [" ;
result << operand_575->mAttributeIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
result << "]) ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioOperand\n"
  "                     " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if ((ioOperand != NULL) && (ioOperand->retainCount () > 1)) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = NULL ;\n"
  "    macroMyNew (p, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "    p->copyFrom (ioOperand) ;\n"
  "    macroAssignObject (ioOperand, p) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptySortedList (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_sortedListWithValue (" ;
const GGS_string var_cas_COL0 = GGS_string::stringWithColumnCount (result) ;
GGS_typedAttributeList::cEnumerator enumerator_1816 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1816 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1816 = enumerator_1816.nextObject ()))) {
macroValidPointer (operand_1816) ;
result << "const GALGAS_" ;
result << operand_1816->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (44)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (44)) ;
if (enumerator_1816.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL0 ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result << var_cas_COL0 ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptySortedList (THERE) ;\n"
  "  const GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (49)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_2200 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2200 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2200 = enumerator_2200.nextObject ()))) {
macroValidPointer (operand_2200) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (51)) ;
if (enumerator_2200.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "  result->addObject (attributeArray) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void addAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult" ;
GGS_typedAttributeList::cEnumerator enumerator_2509 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2509 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2509 = enumerator_2509.nextObject ()))) {
macroValidPointer (operand_2509) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_2509->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (63)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (63)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "    " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioResult COMMA_HERE) ;\n"
  "    const GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (69)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_2876 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2876 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2876 = enumerator_2876.nextObject ()))) {
macroValidPointer (operand_2876) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (71)) ;
if (enumerator_2876.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "    ioResult->addObject (attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void dotAssign_operation (GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult,\n"
  "                          const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand\n"
  "                          COMMA_LOCATION_ARGS) {\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioResult COMMA_THERE) ;\n"
  "    ioResult->appendSortedList (inOperand) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator_concat (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n"
  "                                                    " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2\n"
  "                                                    " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  if ((NULL != inOperand1) && (NULL != inOperand2)) {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptySortedList (THERE) ;\n"
  "    result->appendSortedList (inOperand1) ;\n"
  "    result->appendSortedList (inOperand2) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popSmallest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_4252 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4252 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4252 = enumerator_4252.nextObject ()))) {
macroValidPointer (operand_4252) ;
result << "GALGAS_" ;
result << operand_4252->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (108)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (108)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4475 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4475 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4475 = enumerator_4475.nextObject ()))) {
macroValidPointer (operand_4475) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (114)) ;
result << ") ;\n"
  "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (115)) ;
result << " = NULL ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  const GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (117)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_4722 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4722 = NULL ;
while (((operand_4722 = enumerator_4722.nextObject ()))) {
macroValidPointer (operand_4722) ;
result << "NULL" ;
if (enumerator_4722.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "  removeSmallestObject (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4866 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4866 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4866 = enumerator_4866.nextObject ()))) {
macroValidPointer (operand_4866) ;
result << "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (124)) ;
result << " = (GALGAS_" ;
result << operand_4866->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (124)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (124)) ;
result << "] ;\n"
  "  macroNullOrValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (125)) ;
result << ", GALGAS_" ;
result << operand_4866->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (125)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popGreatest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_5314 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5314 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5314 = enumerator_5314.nextObject ()))) {
macroValidPointer (operand_5314) ;
result << "GALGAS_" ;
result << operand_5314->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (133)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (133)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_5537 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5537 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5537 = enumerator_5537.nextObject ()))) {
macroValidPointer (operand_5537) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (139)) ;
result << ") ;\n"
  "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (140)) ;
result << " = NULL ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  const GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (142)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_5784 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5784 = NULL ;
while (((operand_5784 = enumerator_5784.nextObject ()))) {
macroValidPointer (operand_5784) ;
result << "NULL" ;
if (enumerator_5784.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "  removeGreatestObject (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_5928 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5928 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5928 = enumerator_5928.nextObject ()))) {
macroValidPointer (operand_5928) ;
result << "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (149)) ;
result << " = (GALGAS_" ;
result << operand_5928->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (149)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (149)) ;
result << "] ;\n"
  "  macroNullOrValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (150)) ;
result << ", GALGAS_" ;
result << operand_5928->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (150)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_smallest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_6371 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6371 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6371 = enumerator_6371.nextObject ()))) {
macroValidPointer (operand_6371) ;
result << "GALGAS_" ;
result << operand_6371->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (158)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (158)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_6590 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6590 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6590 = enumerator_6590.nextObject ()))) {
macroValidPointer (operand_6590) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (164)) ;
result << ") ;\n"
  "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (165)) ;
result << " = NULL ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  const GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (167)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_6837 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6837 = NULL ;
while (((operand_6837 = enumerator_6837.nextObject ()))) {
macroValidPointer (operand_6837) ;
result << "NULL" ;
if (enumerator_6837.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "  smallestObjectAttributeList (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_6986 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6986 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6986 = enumerator_6986.nextObject ()))) {
macroValidPointer (operand_6986) ;
result << "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
result << " = (GALGAS_" ;
result << operand_6986->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
result << "] ;\n"
  "  macroNullOrValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (175)) ;
result << ", GALGAS_" ;
result << operand_6986->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (175)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_greatest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_7429 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7429 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7429 = enumerator_7429.nextObject ()))) {
macroValidPointer (operand_7429) ;
result << "GALGAS_" ;
result << operand_7429->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (183)) ;
result << " * & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (183)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_7648 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7648 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7648 = enumerator_7648.nextObject ()))) {
macroValidPointer (operand_7648) ;
result << "  macroReleaseObject (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (189)) ;
result << ") ;\n"
  "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (190)) ;
result << " = NULL ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  const GALGAS_root * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (192)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_7895 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7895 = NULL ;
while (((operand_7895 = enumerator_7895.nextObject ()))) {
macroValidPointer (operand_7895) ;
result << "NULL" ;
if (enumerator_7895.hasNextObject ()) {
result << ", " ;
}
}
result << "} ;\n"
  "  greatestObjectAttributeList (attributeArray, inCompiler COMMA_THERE) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_8044 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8044 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8044 = enumerator_8044.nextObject ()))) {
macroValidPointer (operand_8044) ;
result << "  outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (199)) ;
result << " = (GALGAS_" ;
result << operand_8044->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (199)) ;
result << " *) attributeArray [" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (199)) ;
result << "] ;\n"
  "  macroNullOrValidObjectThere (outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
result << ", GALGAS_" ;
result << operand_8044->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator::cEnumerator (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inEnumeratedObject,\n"
  "           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const bool inAscending) :\n"
  "AC_GALGAS_Enumerator (inEnumeratedObject, inAscending) {\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'structTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_structTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_164 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_164 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_164 = enumerator_164.nextObject ()))) {
macroValidPointer (operand_164) ;
result << "const GALGAS_" ;
result << operand_164->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (5)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (5)) ;
if (enumerator_164.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " \n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n"
  "GALGAS_struct (THERE)" ;
GGS_typedAttributeList::cEnumerator enumerator_375 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_375 = NULL ;
while (((operand_375 = enumerator_375.nextObject ()))) {
macroValidPointer (operand_375) ;
result << ",\n"
  "mAttribute_" ;
result << operand_375->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (NULL)" ;
}
result << " {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_491 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_491 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_491 = enumerator_491.nextObject ()))) {
macroValidPointer (operand_491) ;
result << "  macroAssignObjectThere (mAttribute_" ;
result << operand_491->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ", (GALGAS_" ;
result << operand_491->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (13)) ;
result << " *) inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (13)) ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_878 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_878 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_878 = enumerator_878.nextObject ()))) {
macroValidPointer (operand_878) ;
result << "const GALGAS_" ;
result << operand_878->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (22)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (22)) ;
if (enumerator_878.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " \n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  if (" ;
GGS_typedAttributeList::cEnumerator enumerator_1120 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1120 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1120 = enumerator_1120.nextObject ()))) {
macroValidPointer (operand_1120) ;
result << "(NULL != inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (28)) ;
result << ")" ;
if (enumerator_1120.hasNextObject ()) {
result << " && " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "    macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_1282 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1282 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1282 = enumerator_1282.nextObject ()))) {
macroValidPointer (operand_1282) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (34)) ;
if (enumerator_1282.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::~ GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1562 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1562 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1562 = enumerator_1562.nextObject ()))) {
macroValidPointer (operand_1562) ;
result << "  macroReleaseObject (mAttribute_" ;
result << operand_1562->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                             " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 inIndentation) const {\n"
  "  ioString << \"<struct @" ;
result << var_cas_TYPE_NAME ;
result << ":\" ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1965 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1965 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1965 = enumerator_1965.nextObject ()))) {
macroValidPointer (operand_1965) ;
result << "  mAttribute_" ;
result << operand_1965->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << "->description (ioString, inIndentation  + 1) ;\n" ;
if (enumerator_1965.hasNextObject ()) {
result << "  ioString << \", \" ;\n" ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  ioString << \">\" ;\n"
  "}\n"
  "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2182 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2182 = NULL ;
while (((operand_2182 = enumerator_2182.nextObject ()))) {
macroValidPointer (operand_2182) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_2182->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (68)) ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_2182->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (UNUSED_LOCATION_ARGS) const {\n"
  "  return mAttribute_" ;
result << operand_2182->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "}\n"
  "\n" ;
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "PMSInt32 GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n"
  "                                      " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2) {\n"
  "  macroValidObject (inOperand1, const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  macroValidObject (inOperand2, const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  PMSInt32 result = 0 ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2997 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2997 = NULL ;
while (((operand_2997 = enumerator_2997.nextObject ()))) {
macroValidPointer (operand_2997) ;
result << "  if (result == 0) {\n"
  "    result = GALGAS_" ;
result << operand_2997->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (82)) ;
result << "::objectCompare (inOperand1->mAttribute_" ;
result << operand_2997->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ", inOperand2->mAttribute_" ;
result << operand_2997->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'mapProxyTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_mapProxyTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_mapSearchMethodListAST & var_cas_SEARCH_METHOD_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_SEARCH_METHOD_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_mapproxy (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (4)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4)) ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_null (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::class_method_makeRegularProxy (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_string * inKey,\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << " * & ioMap,\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & outProxy\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  macroReleaseObject (outProxy) ;\n"
  "  if ((NULL != inKey) && (NULL != ioMap)) {\n"
  "    GALGAS_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << "::insulate (ioMap COMMA_HERE) ;\n"
  "    macroMyNew (outProxy, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "    outProxy->internalMakeRegularProxy (ioMap, inKey) ;\n"
  "  }\n"
  "}\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1245 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1245 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1245 = enumerator_1245.nextObject ()))) {
macroValidPointer (operand_1245) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_1245->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (30)) ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_1245->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << operand_1245->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
result << " * result = NULL ;\n"
  "  const GALGAS_root * * attributeList = getAttributeList (inCompiler COMMA_THERE) ;\n"
  "  if (NULL != attributeList) {\n"
  "    result = (GALGAS_" ;
result << operand_1245->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << " *) attributeList [" ;
result << var_cas_IDX.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (35)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << "] ;\n"
  "    macroValidObject (result, GALGAS_" ;
result << operand_1245->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (36)) ;
result << ") ;\n"
  "    macroRetainObject (result) ; // A returned object is retained\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_mapSearchMethodListAST::cEnumerator enumerator_2174 (var_cas_SEARCH_METHOD_LIST, true) ;
const GGS_mapSearchMethodListAST::cElement * operand_2174 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2174 = enumerator_2174.nextObject ()))) {
macroValidPointer (operand_2174) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_" ;
result << operand_2174->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << " * inMap,\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_lstring * inKey,\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  if ((NULL != inMap) && (NULL != inKey)) {\n" ;
const GGS_uint indentation_3243 = GGS_uint (4U) ;
if (indentation_3243.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_3243.uintValue ()) ;
}
result << "macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "const utf32 kSearchErrorMessage [" ;
result << operand_2174->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (53)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (53)) ;
result << "] = " ;
result << operand_2174->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "const bool ok = result->internalSearchKey (inMap, inKey, kSearchErrorMessage, inCompiler COMMA_THERE) ;\n"
  "if (! ok) {\n"
  "  macroReleaseObject (result) ;\n"
  "}\n" ;
 ;
if (indentation_3243.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_3243.uintValue ())) ;
}
result << "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'classTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_classTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_SUPER_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_CURRENT_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_ALL_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_INHERITED_ATTRIBUTE_LIST,
                                const GGS_bool& var_cas_IS_ABSTRACT,
                                const GGS_methodDefinitionListForGeneration & var_cas_CONCRETE_METHOD_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_CURRENT_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_ALL_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_INHERITED_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_IS_ABSTRACT.isBuilt ()
    && var_cas_CONCRETE_METHOD_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n" ;
if ((var_cas_CURRENT_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "PMSInt32 GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * /* inOperand1 */,\n"
  "                                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * /* inOperand2 */) {\n"
  "  return 0 ;\n"
  "}\n"
  "\n" ;
}else {
result << "PMSInt32 GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n"
  "                                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2) {\n"
  "  macroValidObject (inOperand1, const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  macroValidObject (inOperand2, const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  PMSInt32 result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (inOperand1, inOperand2) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_862 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_862 = NULL ;
while (((operand_862 = enumerator_862.nextObject ()))) {
macroValidPointer (operand_862) ;
result << "  if (0 == result) {\n"
  "    result = GALGAS_" ;
result << operand_862->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
result << "::objectCompare (inOperand1->mAttribute_" ;
result << operand_862->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ", inOperand2->mAttribute_" ;
result << operand_862->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n" ;
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1371 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1371 = NULL ;
while (((operand_1371 = enumerator_1371.nextObject ()))) {
macroValidPointer (operand_1371) ;
result << "const GALGAS_" ;
result << operand_1371->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (27)) ;
result << " * inAttribute_" ;
result << operand_1371->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1371.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
result << ") :\n"
  "GALGAS_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_1727 (var_cas_INHERITED_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1727 = NULL ;
while (((operand_1727 = enumerator_1727.nextObject ()))) {
macroValidPointer (operand_1727) ;
result << "inAttribute_" ;
result << operand_1727->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1727.hasNextObject ()) {
result << ", " ;
}
}
if ((var_cas_INHERITED_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << " COMMA_THERE)" ;
}else {
result << "THERE)" ;
}
GGS_typedAttributeList::cEnumerator enumerator_1948 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1948 = NULL ;
while (((operand_1948 = enumerator_1948.nextObject ()))) {
macroValidPointer (operand_1948) ;
result << ",\n"
  "mAttribute_" ;
result << operand_1948->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (NULL)" ;
}
result << " {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2081 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2081 = NULL ;
while (((operand_2081 = enumerator_2081.nextObject ()))) {
macroValidPointer (operand_2081) ;
result << "  macroAssignObject (mAttribute_" ;
result << operand_2081->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ", (GALGAS_" ;
result << operand_2081->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (52)) ;
result << " *) inAttribute_" ;
result << operand_2081->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n" ;
}
result << "}\n"
  "\n" ;
if (((var_cas_IS_ABSTRACT).operator_not ()).operator_and ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * /* inCompiler */\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 /* inIndentation */) const {\n"
  "  ioString << \"<class @\"\n"
  "           << typeDescriptor ()->mGalgasTypeName\n"
  "           << \">\" ;\n"
  "}\n"
  "\n" ;
}else {
}
if (((var_cas_IS_ABSTRACT).operator_not ()).operator_and ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_3398 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3398 = NULL ;
while (((operand_3398 = enumerator_3398.nextObject ()))) {
macroValidPointer (operand_3398) ;
result << "const GALGAS_" ;
result << operand_3398->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (78)) ;
result << " * inAttribute_" ;
result << operand_3398->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_3398.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  if (" ;
GGS_typedAttributeList::cEnumerator enumerator_3768 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3768 = NULL ;
while (((operand_3768 = enumerator_3768.nextObject ()))) {
macroValidPointer (operand_3768) ;
result << "(NULL != inAttribute_" ;
result << operand_3768->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
if (enumerator_3768.hasNextObject ()) {
result << " && " ;
}
}
result << ") {\n"
  "    macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_3974 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3974 = NULL ;
while (((operand_3974 = enumerator_3974.nextObject ()))) {
macroValidPointer (operand_3974) ;
result << "inAttribute_" ;
result << operand_3974->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_3974.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_THERE)) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 inIndentation) const {\n"
  "  ioString << \"<class @\"\n"
  "           << typeDescriptor ()->mGalgasTypeName\n"
  "           << \":\" ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4528 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4528 = NULL ;
while (((operand_4528 = enumerator_4528.nextObject ()))) {
macroValidPointer (operand_4528) ;
result << "  mAttribute_" ;
result << operand_4528->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << "->description (ioString, inIndentation + 1) ;\n" ;
if (enumerator_4528.hasNextObject ()) {
result << "  ioString << \", \" ;\n" ;
}
}
result << "  ioString << \">\" ;\n"
  "}\n"
  "\n" ;
}else {
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::~GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_4910 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4910 = NULL ;
while (((operand_4910 = enumerator_4910.nextObject ()))) {
macroValidPointer (operand_4910) ;
result << "  macroReleaseObject (mAttribute_" ;
result << operand_4910->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n" ;
}
result << "}\n"
  "\n" ;
if (((var_cas_IS_ABSTRACT).operator_not ()).operator_and ((var_cas_SUPER_TYPE_IDENTIFIER).operator_isNotEqual (GGS_string ("class"))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " (UNUSED_LOCATION_ARGS) const {\n"
  "  macroRetainObject (this) ;\n"
  "  return (GALGAS_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
result << " *) this ;\n"
  "}\n"
  "\n" ;
}else {
}
GGS_methodDefinitionListForGeneration::cEnumerator enumerator_5415 (var_cas_CONCRETE_METHOD_LIST, true) ;
const GGS_methodDefinitionListForGeneration::cElement * operand_5415 = NULL ;
while (((operand_5415 = enumerator_5415.nextObject ()))) {
macroValidPointer (operand_5415) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_" ;
result << operand_5415->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_5615 (operand_5415->mSignature, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_5615 = NULL ;
while (((operand_5615 = enumerator_5615.nextObject ()))) {
macroValidPointer (operand_5615) ;
if ((operand_5615->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (139))).boolValue ()) {
result << "GALGAS_" ;
result << operand_5615->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (140)) ;
result << " * const inArgument_" ;
result << operand_5615->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}else if ((operand_5615->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (141))).boolValue ()) {
result << "GALGAS_" ;
result << operand_5615->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (142)) ;
result << " * & ioArgument_" ;
result << operand_5615->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}else if ((operand_5615->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (143))).boolValue ()) {
result << "GALGAS_" ;
result << operand_5615->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (144)) ;
result << " * & outArgument_" ;
result << operand_5615->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}else {
result << "GALGAS_" ;
result << operand_5615->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (146)) ;
result << " * inArgument_" ;
result << operand_5615->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) const {\n" ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_6711 (operand_5415->mSignature, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_6711 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6711 = enumerator_6711.nextObject ()))) {
macroValidPointer (operand_6711) ;
if ((operand_6711->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_SOURCE_FILE_AT_LINE (157))).boolValue ()) {
result << "  macroRetainObject (inArgument_" ;
result << operand_6711->mFormalArgumentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (158)) ;
result << ") ; // Retain 'in' argument\n" ;
}else {
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << function_generateRoutineBody (inLexique, operand_5415->mInstructionList COMMA_SOURCE_FILE_AT_LINE (162)) ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_7064 (operand_5415->mSignature, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_7064 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7064 = enumerator_7064.nextObject ()))) {
macroValidPointer (operand_7064) ;
if ((operand_7064->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_SOURCE_FILE_AT_LINE (165))).boolValue ()) {
result << "  macroReleaseObject (inArgument_" ;
result << operand_7064->mFormalArgumentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
result << ") ; // Release 'in' argument\n" ;
}else {
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n"
  "\n" ;
}
GGS_typedAttributeList::cEnumerator enumerator_7354 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7354 = NULL ;
while (((operand_7354 = enumerator_7354.nextObject ()))) {
macroValidPointer (operand_7354) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_7354->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_7354->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (UNUSED_LOCATION_ARGS) const {\n"
  "  macroRetainObject (mAttribute_" ;
result << operand_7354->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  return mAttribute_" ;
result << operand_7354->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "}\n"
  "\n" ;
}
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  'routineDeclaration' template of 'typeGenerationTemplate' filewrapper    *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_routineDeclaration (C_Compiler & inLexique,
                                const GGS_string& var_cas_ROUTINE_NAME,
                                const GGS_formalParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_ROUTINE_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Routine '")).operator_concat (var_cas_ROUTINE_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void routine_" ;
result << var_cas_ROUTINE_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler" ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_513 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_513 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_513 = enumerator_513.nextObject ()))) {
macroValidPointer (operand_513) ;
if ((operand_513->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (9))).boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_513->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (10)) ;
result << " * const inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (10)) ;
}else if ((operand_513->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (11))).boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_513->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
}else if ((operand_513->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (13))).boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_513->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
}else {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_513->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'routineImplementation' template of 'typeGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_routineImplementation (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_ROUTINE_NAME,
                                const GGS_string& var_cas_ROUTINE_IMPLEMENTATION) {
  C_String result ;
  const bool isBuilt = var_cas_ROUTINE_NAME.isBuilt ()
    && var_cas_ROUTINE_IMPLEMENTATION.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Routine '")).operator_concat (var_cas_ROUTINE_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << var_cas_ROUTINE_IMPLEMENTATION ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//               Implementation of function "generateRoutine"                *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string function_generateRoutine (C_Compiler & inLexique,
                                const GGS_string  var_cas_inRoutineName,
                                const GGS_formalParameterListForGeneration   var_cas_inFormalArgumentList,
                                const GGS_semanticInstructionListForGeneration   var_cas_inInstructionList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER function_generateRoutine at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_outGeneratedCode ;
var_cas_outGeneratedCode = ((GGS_string ("void routine_")).operator_concat (var_cas_inRoutineName.reader_identifierRepresentation ())).operator_concat (GGS_string (" (")) ;
const GGS_uint  var_cas_colRef = var_cas_outGeneratedCode.reader_currentColumn () ;
var_cas_outGeneratedCode.appendCString ("C_Compiler * inCompiler") ;
{
  GGS_uint var_cas_IDX (true, 0) ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_7443 (var_cas_inFormalArgumentList, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_7443 = NULL ;
while (((operand_7443 = enumerator_7443.nextObject ()))) {
  macroValidPointer (operand_7443) ;
var_cas_outGeneratedCode.appendCString (",\n") ;
var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (183)) ;
switch (operand_7443->mFormalArgumentPassingMode.enumValue ()) {
case GGS_formalArgumentPassingModeAST::enum_argumentConstantIn:
  {
var_cas_outGeneratedCode.appendCString ("GALGAS_") ;
var_cas_outGeneratedCode.dotAssign_operation (operand_7443->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (186))) ;
var_cas_outGeneratedCode.appendCString (" * const inArgument_") ;
var_cas_outGeneratedCode.dotAssign_operation (operand_7443->mFormalArgumentName.ggs_string ().reader_identifierRepresentation ()) ;
  }
  break ;
case GGS_formalArgumentPassingModeAST::enum_argumentInOut:
  {
var_cas_outGeneratedCode.appendCString ("GALGAS_") ;
var_cas_outGeneratedCode.dotAssign_operation (operand_7443->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (188))) ;
var_cas_outGeneratedCode.appendCString (" * & ioArgument_") ;
var_cas_outGeneratedCode.dotAssign_operation (operand_7443->mFormalArgumentName.ggs_string ().reader_identifierRepresentation ()) ;
  }
  break ;
case GGS_formalArgumentPassingModeAST::enum_argumentOut:
  {
var_cas_outGeneratedCode.appendCString ("GALGAS_") ;
var_cas_outGeneratedCode.dotAssign_operation (operand_7443->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (190))) ;
var_cas_outGeneratedCode.appendCString (" * & outArgument_") ;
var_cas_outGeneratedCode.dotAssign_operation (operand_7443->mFormalArgumentName.ggs_string ().reader_identifierRepresentation ()) ;
  }
  break ;
case GGS_formalArgumentPassingModeAST::enum_argumentIn:
  {
var_cas_outGeneratedCode.appendCString ("GALGAS_") ;
var_cas_outGeneratedCode.dotAssign_operation (operand_7443->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (192))) ;
var_cas_outGeneratedCode.appendCString (" * inArgument_") ;
var_cas_outGeneratedCode.dotAssign_operation (operand_7443->mFormalArgumentName.ggs_string ().reader_identifierRepresentation ()) ;
  }
  break ;
case GGS_formalArgumentPassingModeAST::kNotBuilt:
  break ;
}
  var_cas_IDX.mValue ++ ;
}
}
var_cas_outGeneratedCode.appendCString ("\n") ;
var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (196)) ;
var_cas_outGeneratedCode.appendCString ("COMMA_UNUSED_LOCATION_ARGS) {\n") ;
var_cas_outGeneratedCode.dotAssign_operation (function_generateRoutineBody (inLexique, var_cas_inInstructionList COMMA_SOURCE_FILE_AT_LINE (199))) ;
{
  GGS_uint var_cas_IDX (true, 0) ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_8637 (var_cas_inFormalArgumentList, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_8637 = NULL ;
while (((operand_8637 = enumerator_8637.nextObject ()))) {
  macroValidPointer (operand_8637) ;
const GGS_bool cond_8873 = (operand_8637->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_SOURCE_FILE_AT_LINE (202))) ;
if (cond_8873.isBuiltAndTrue ()) {
var_cas_outGeneratedCode.appendCString ("  macroReleaseObject (inArgument_") ;
var_cas_outGeneratedCode.dotAssign_operation (operand_8637->mFormalArgumentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (203))) ;
var_cas_outGeneratedCode.appendCString (") ; // Release 'in' argument\n") ;
}
  var_cas_IDX.mValue ++ ;
}
}
var_cas_outGeneratedCode.appendCString ("}\n"
  "\n") ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE function_generateRoutine\n") ;
  #endif
  return var_cas_outGeneratedCode ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_generateRoutine (C_Compiler & inLexique,
                           const GGS_objectlist & inEffectiveParameterArray,
                           const GGS_location & inErrorLocation
                           COMMA_LOCATION_ARGS) {
  const GGS_string arg_0 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (0) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_formalParameterListForGeneration  arg_1 = GGS_formalParameterListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (1) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_semanticInstructionListForGeneration  arg_2 = GGS_semanticInstructionListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (2) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string result = function_generateRoutine (inLexique,
                            arg_0,
                            arg_1,
                            arg_2
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

static const C_galgas_type_descriptorEX *
kArgumentTypeList_generateRoutine [3] = {& kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_formalParameterListForGeneration ,
                              & kTypeDescriptor_GGS_semanticInstructionListForGeneration } ;

const C_galgas_function_descriptorEX
kFunction_descriptor_generateRoutine ("generateRoutine",
                              functionForGenericCall_generateRoutine,
                              & kTypeDescriptor_GGS_string,
                              3,
                              kArgumentTypeList_generateRoutine) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@semanticDeclarationForGeneration.appendDeclaration'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendDeclaration (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_9392
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_9392 != NULL) {
var_cas_outHeader = GGS_string ("") ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration> gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration (typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendDeclaration (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration
findCategoryReader__semanticDeclarationForGeneration__appendDeclaration (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendDeclaration (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendDeclaration ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@routinePrototypeDeclarationForGeneration.appendDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__routinePrototypeDeclarationForGeneration__appendDeclaration (C_Compiler & inLexique,
                                const cPtr_routinePrototypeDeclarationForGeneration * operand_9604
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_9604 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_routineDeclaration (inLexique, operand_9604->mRoutineName, operand_9604->mFormalArgumentList) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@semanticTypeForGeneration.appendDeclaration'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticTypeForGeneration__appendDeclaration (C_Compiler & inLexique,
                                const cPtr_semanticTypeForGeneration * operand_9901
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_9901 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_unifiedTypeHeader (inLexique, operand_9901->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (232)), operand_9901->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (233)), operand_9901->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (234)), operand_9901->mTypeIndex.reader_mSuperType (inLexique COMMA_SOURCE_FILE_AT_LINE (235)), operand_9901->mTypeIndex.reader_mTypeKindEnum (inLexique COMMA_SOURCE_FILE_AT_LINE (236)), operand_9901->mTypeIndex.reader_mCurrentTypedAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (237)), operand_9901->mTypeIndex.reader_mInheritedTypedAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (238)), operand_9901->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (239)), operand_9901->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (240)), operand_9901->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (241)), operand_9901->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (242)), operand_9901->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (243)), operand_9901->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (244)), operand_9901->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (245)), operand_9901->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (246)), operand_9901->mTypeIndex.reader_mNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (247)), operand_9901->mTypeIndex.reader_mEnumConstantList (inLexique COMMA_SOURCE_FILE_AT_LINE (248)), operand_9901->mTypeIndex.reader_mPrivateDataMemberList (inLexique COMMA_SOURCE_FILE_AT_LINE (249))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@genericTypeForGeneration.appendDeclaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__genericTypeForGeneration__appendDeclaration (C_Compiler & inLexique,
                                const cPtr_genericTypeForGeneration * operand_10808
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_10808 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_genericTypeHeader (inLexique, operand_10808->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (257)), operand_10808->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (258))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticDeclarationForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendTypeGenericImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_11527
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_11527 != NULL) {
var_cas_outImplementation = GGS_string ("") ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation> gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendTypeGenericImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation
findCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendTypeGenericImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticTypeForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticTypeForGeneration__appendTypeGenericImplementation (C_Compiler & inLexique,
                                const cPtr_semanticTypeForGeneration * operand_11753
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_11753 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_unifiedTypeImplementation (inLexique, operand_11753->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (277)), operand_11753->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (278)), operand_11753->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (279)), operand_11753->mTypeIndex.reader_mSuperType (inLexique COMMA_SOURCE_FILE_AT_LINE (280)), operand_11753->mTypeIndex.reader_mTypeKindEnum (inLexique COMMA_SOURCE_FILE_AT_LINE (281)), operand_11753->mTypeIndex.reader_mCurrentTypedAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (282)), operand_11753->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (283)), operand_11753->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (284)), operand_11753->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (285)), operand_11753->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (286)), operand_11753->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (287)), operand_11753->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (288)), operand_11753->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (289)), operand_11753->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (290)), operand_11753->mTypeIndex.reader_mNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (291))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@genericTypeForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__genericTypeForGeneration__appendTypeGenericImplementation (C_Compiler & inLexique,
                                const cPtr_genericTypeForGeneration * operand_12574
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_12574 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_genericTypeImplementation (inLexique, operand_12574->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (300)), operand_12574->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (301)), operand_12574->mTypeIndex.reader_mSuperType (inLexique COMMA_SOURCE_FILE_AT_LINE (302))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticDeclarationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendSpecificImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_13264
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_13264 != NULL) {
var_cas_outImplementation = GGS_string ("") ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation> gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendSpecificImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation
findCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendSpecificImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@primitiveTypeForGeneration.appendSpecificImplementation' *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__primitiveTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_primitiveTypeForGeneration * operand_13488
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_13488 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_predefinedTypeSpecificImplementation (inLexique, operand_13488->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (320)), operand_13488->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (321)), operand_13488->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (322)), operand_13488->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (323)), operand_13488->mTypeIndex.reader_mNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (324))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@listTypeForGeneration.appendSpecificImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__listTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_listTypeForGeneration * operand_13981
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_13981 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_listTypeSpecificImplementation (inLexique, operand_13981->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (332)), operand_13981->mTypedAttributeList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category reader '@listmapTypeForGeneration.appendSpecificImplementation'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__listmapTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_listmapTypeForGeneration * operand_14340
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_14340 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_listmapTypeSpecificImplementation (inLexique, operand_14340->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (341)), operand_14340->mAssociatedListTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (342)), operand_14340->mAssociatedListTypedAttributeList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category reader '@mapTypeForGeneration.appendSpecificImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_mapTypeForGeneration * operand_14769
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_14769 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_mapTypeSpecificImplementation (inLexique, operand_14769->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (351)), operand_14769->mTypedAttributeList, operand_14769->mInsertMethodList, operand_14769->mSearchMethodList, operand_14769->mRemoveMethodList, operand_14769->mHasInsertOrReplaceModifier) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@sortedListTypeForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__sortedListTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_sortedListTypeForGeneration * operand_15232
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_15232 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_sortedlistTypeSpecificImplementation (inLexique, operand_15232->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (364)), operand_15232->mTypedAttributeList, operand_15232->mSortDescriptorList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category reader '@structTypeForGeneration.appendSpecificImplementation'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__structTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_structTypeForGeneration * operand_15621
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_15621 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_structTypeSpecificImplementation (inLexique, operand_15621->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (374)), operand_15621->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (375)), operand_15621->mTypedAttributeList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@enumTypeForGeneration.appendSpecificImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__enumTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_enumTypeForGeneration * operand_16001
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_16001 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_enumTypeSpecificImplementation (inLexique, operand_16001->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (384)), operand_16001->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (385)), operand_16001->mConstantList, operand_16001->mEnumMessageList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@mapProxyTypeForGeneration.appendSpecificImplementation'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapProxyTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_mapProxyTypeForGeneration * operand_16399
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_16399 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_mapProxyTypeSpecificImplementation (inLexique, operand_16399->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (395)), operand_16399->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (396)), operand_16399->mAssociatedMapTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (397)), operand_16399->mAssociatedMapTypedAttributeList, operand_16399->mSearchMethodList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@classTypeForGeneration.appendSpecificImplementation'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__classTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_classTypeForGeneration * operand_16874
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_16874 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_classTypeSpecificImplementation (inLexique, operand_16874->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (407)), operand_16874->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (408)), ((operand_16874->mSuperClass.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (409))).isBuiltAndTrue () ? (GGS_string ("class")) : (operand_16874->mSuperClass.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (409)))), operand_16874->mTypedAttributeList, operand_16874->mAllTypedAttributeList, operand_16874->mAllTypedAttributeList.reader_subListWithRange (inLexique, GGS_uint (0U), operand_16874->mAllTypedAttributeList.reader_length ().substract_operation (inLexique, operand_16874->mTypedAttributeList.reader_length () COMMA_SOURCE_FILE_AT_LINE (412)) COMMA_SOURCE_FILE_AT_LINE (412)), operand_16874->mIsAbstract, operand_16874->mMethodList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@routineImplementationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__routineImplementationForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_routineImplementationForGeneration * operand_17532
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_17532 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_routineImplementation (inLexique, operand_17532->mRoutineName, function_generateRoutine (inLexique, operand_17532->mRoutineName, operand_17532->mFormalArgumentList, operand_17532->mRoutineInstructionList COMMA_SOURCE_FILE_AT_LINE (423))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticGeneration (void) {
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration (category_reader__semanticDeclarationForGeneration__appendDeclaration, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration) category_reader__routinePrototypeDeclarationForGeneration__appendDeclaration, gClassInfoFor__routinePrototypeDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration) category_reader__semanticTypeForGeneration__appendDeclaration, gClassInfoFor__semanticTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration) category_reader__genericTypeForGeneration__appendDeclaration, gClassInfoFor__genericTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (category_reader__semanticDeclarationForGeneration__appendTypeGenericImplementation, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation) category_reader__semanticTypeForGeneration__appendTypeGenericImplementation, gClassInfoFor__semanticTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation) category_reader__genericTypeForGeneration__appendTypeGenericImplementation, gClassInfoFor__genericTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (category_reader__semanticDeclarationForGeneration__appendSpecificImplementation, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__primitiveTypeForGeneration__appendSpecificImplementation, gClassInfoFor__primitiveTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__listTypeForGeneration__appendSpecificImplementation, gClassInfoFor__listTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__listmapTypeForGeneration__appendSpecificImplementation, gClassInfoFor__listmapTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__mapTypeForGeneration__appendSpecificImplementation, gClassInfoFor__mapTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__sortedListTypeForGeneration__appendSpecificImplementation, gClassInfoFor__sortedListTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__structTypeForGeneration__appendSpecificImplementation, gClassInfoFor__structTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__enumTypeForGeneration__appendSpecificImplementation, gClassInfoFor__enumTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__mapProxyTypeForGeneration__appendSpecificImplementation, gClassInfoFor__mapProxyTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__classTypeForGeneration__appendSpecificImplementation, gClassInfoFor__classTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__routineImplementationForGeneration__appendSpecificImplementation, gClassInfoFor__routineImplementationForGeneration.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_semanticGeneration (void) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration.free () ;
  gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.free () ;
  gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticGeneration (prologueRoutineFor_semanticGeneration, epilogueRoutineFor_semanticGeneration) ;

//---------------------------------------------------------------------------*

