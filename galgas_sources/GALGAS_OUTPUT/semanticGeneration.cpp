//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'semanticGeneration.cpp'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     october 23th, 2010, at 16h26'22"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticGeneration.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticGeneration.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of function "generateProcedure"               *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string function_generateProcedure (C_Compiler & inLexique,
                                const GGS_string  var_cas_inProcedureName,
                                const GGS_formalParameterListForGeneration   var_cas_inFormalArgumentList,
                                const GGS_semanticInstructionListForGeneration   var_cas_inInstructionList,
                                const GGS_bool  var_cas_inProcedureIsConst,
                                const GGS_string  var_cas_inCompilerTypeName,
                                const GGS_bool  var_cas_inGenerateLocationArgs,
                                const GGS_bool  var_cas_inGenerateResetTemplateString COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER function_generateProcedure at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_outGeneratedCode ;
  GGS_stringset  var_cas_unusedVariableCppNameSet = GGS_stringset ::constructor_emptySet () ;
  const GGS_bool cond_2502 = (var_cas_inGenerateResetTemplateString).operator_not () ;
  if (cond_2502.isBuiltAndTrue ()) {
    var_cas_unusedVariableCppNameSet.addAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (44))) ;
  }
  {
    GGS_formalParameterListForGeneration::cEnumerator enumerator_2538 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalParameterListForGeneration::cElement * operand_2538 = NULL ;
    while (((operand_2538 = enumerator_2538.nextObject ()))) {
      macroValidPointer (operand_2538) ;
      const GGS_bool cond_2695 = (operand_2538->mFormalArgumentPassingMode).operator_isNotEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (47))) ;
      if (cond_2695.isBuiltAndTrue ()) {
        var_cas_unusedVariableCppNameSet.addAssign_operation (operand_2538->mFormalArgumentCppName) ;
      }
    }
  }
  GGS_uint  var_cas_temporaryVariableIndex = GGS_uint (0U) ;
  GGS_string var_cas_routineBody = GGS_string ("") ;
  var_cas_routineBody.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (54)) ;
  {
    GGS_semanticInstructionListForGeneration::cEnumerator enumerator_2869 (var_cas_inInstructionList, true) ;
    const GGS_semanticInstructionListForGeneration::cElement * operand_2869 = NULL ;
    while (((operand_2869 = enumerator_2869.nextObject ()))) {
      macroValidPointer (operand_2869) ;
      { typeCategoryMethod__semanticInstructionForGeneration__generateInstruction method = findCategoryMethod__semanticInstructionForGeneration__generateInstruction (operand_2869->mInstruction.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_2869->mInstruction (HERE), var_cas_temporaryVariableIndex, var_cas_unusedVariableCppNameSet, var_cas_routineBody COMMA_SOURCE_FILE_AT_LINE (56)) ;
        }
      }
    }
  }
  var_cas_routineBody.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (58)) ;
  var_cas_outGeneratedCode = ((GGS_string ("void ")).operator_concat (var_cas_inProcedureName)).operator_concat (GGS_string (" (")) ;
  const GGS_uint  var_cas_colRef = var_cas_outGeneratedCode.reader_currentColumn () ;
  {
    GGS_formalParameterListForGeneration::cEnumerator enumerator_3206 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalParameterListForGeneration::cElement * operand_3206 = NULL ;
    while (((operand_3206 = enumerator_3206.nextObject ()))) {
      macroValidPointer (operand_3206) ;
      switch (operand_3206->mFormalArgumentPassingMode.enumValue ()) {
      case GGS_formalArgumentPassingModeAST::enum_argumentConstantIn:
        {
        var_cas_outGeneratedCode.appendCString ("const GALGAS_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3206->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (66))) ;
        var_cas_outGeneratedCode.appendCString (" ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentInOut:
        {
        var_cas_outGeneratedCode.appendCString ("GALGAS_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3206->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (68))) ;
        var_cas_outGeneratedCode.appendCString (" & ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentOut:
        {
        var_cas_outGeneratedCode.appendCString ("GALGAS_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3206->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (70))) ;
        var_cas_outGeneratedCode.appendCString (" & ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentIn:
        {
        var_cas_outGeneratedCode.appendCString ("GALGAS_") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3206->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (72))) ;
        var_cas_outGeneratedCode.appendCString (" ") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::kNotBuilt:
        break ;
      }
      const GGS_bool cond_3893 = var_cas_unusedVariableCppNameSet.reader_hasKey (operand_3206->mFormalArgumentCppName) ;
      if (cond_3893.isBuiltAndTrue ()) {
        var_cas_outGeneratedCode.appendCString ("/* ") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_3206->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (" */") ;
      }else if (cond_3893.isBuiltAndFalse ()) {
        var_cas_outGeneratedCode.dotAssign_operation (operand_3206->mFormalArgumentCppName) ;
      }
      var_cas_outGeneratedCode.appendCString (",\n") ;
      var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (80)) ;
    }
  }
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inCompilerTypeName) ;
  var_cas_outGeneratedCode.appendCString (" * ") ;
  const GGS_bool cond_4270 = var_cas_unusedVariableCppNameSet.reader_hasKey (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (84))) ;
  if (cond_4270.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("/* ") ;
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (85))) ;
    var_cas_outGeneratedCode.appendCString (" */") ;
  }else if (cond_4270.isBuiltAndFalse ()) {
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (87))) ;
  }
  const GGS_bool cond_4510 = var_cas_inGenerateLocationArgs ;
  if (cond_4510.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("\n") ;
    var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (91)) ;
    var_cas_outGeneratedCode.appendCString ("COMMA_UNUSED_LOCATION_ARGS") ;
  }
  var_cas_outGeneratedCode.appendCString (")") ;
  const GGS_bool cond_4613 = var_cas_inProcedureIsConst ;
  if (cond_4613.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString (" const") ;
  }
  var_cas_outGeneratedCode.appendCString (" {\n") ;
  {
      GGS_uint var_cas_IDX (true, 0) ;
    GGS_formalParameterListForGeneration::cEnumerator enumerator_4709 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalParameterListForGeneration::cElement * operand_4709 = NULL ;
    while (((operand_4709 = enumerator_4709.nextObject ()))) {
      macroValidPointer (operand_4709) ;
      switch (operand_4709->mFormalArgumentPassingMode.enumValue ()) {
      case GGS_formalArgumentPassingModeAST::enum_argumentOut:
        {
        var_cas_outGeneratedCode.appendCString ("  ") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_4709->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (".drop () ; // Release 'out' argument\n") ;
        }
        break ;
      case GGS_formalArgumentPassingModeAST::enum_argumentConstantIn:
      case GGS_formalArgumentPassingModeAST::enum_argumentIn:
      case GGS_formalArgumentPassingModeAST::enum_argumentInOut:
        {
        }
        break ;
      case GGS_formalArgumentPassingModeAST::kNotBuilt:
        break ;
      }
      var_cas_IDX.mValue ++ ;
    }
  }
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_routineBody) ;
  const GGS_bool cond_5174 = var_cas_inGenerateResetTemplateString ;
  if (cond_5174.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("  ") ;
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (111))) ;
    var_cas_outGeneratedCode.appendCString ("->resetTemplateString () ;\n") ;
  }
  var_cas_outGeneratedCode.appendCString ("}\n"
    "\n") ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE function_generateProcedure\n") ;
  #endif
  return var_cas_outGeneratedCode ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_generateProcedure (C_Compiler & inLexique,
                           const GGS_objectlist & inEffectiveParameterArray,
                           const GGS_location & inErrorLocation
                           COMMA_LOCATION_ARGS) {
  const GGS_string arg_0 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (0) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_formalParameterListForGeneration  arg_1 = GGS_formalParameterListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (1) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_semanticInstructionListForGeneration  arg_2 = GGS_semanticInstructionListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (2) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_bool arg_3 = GGS_bool::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (3) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_4 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (4) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_bool arg_5 = GGS_bool::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (5) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_bool arg_6 = GGS_bool::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (6) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string result = function_generateProcedure (inLexique,
                            arg_0,
                            arg_1,
                            arg_2,
                            arg_3,
                            arg_4,
                            arg_5,
                            arg_6
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

static const C_galgas_type_descriptorEX *
kArgumentTypeList_generateProcedure [7] = {& kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_formalParameterListForGeneration ,
                              & kTypeDescriptor_GGS_semanticInstructionListForGeneration ,
                              & kTypeDescriptor_GGS_bool,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_bool,
                              & kTypeDescriptor_GGS_bool} ;

const C_galgas_function_descriptorEX
kFunction_descriptor_generateProcedure ("generateProcedure",
                              functionForGenericCall_generateProcedure,
                              & kTypeDescriptor_GGS_string,
                              7,
                              kArgumentTypeList_generateProcedure) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of function "generateFunction"                *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string function_generateFunction (C_Compiler & inLexique,
                                const GGS_string  var_cas_inProcedureName,
                                const GGS_formalInputParameterListForGeneration   var_cas_inFormalArgumentList,
                                const GGS_semanticInstructionListForGeneration   var_cas_inInstructionList,
                                const GGS_string  var_cas_inCompilerTypeName,
                                const GGS_string  var_cas_inResultTypeName,
                                const GGS_string  var_cas_inResultVariableCppName COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER function_generateFunction at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_outGeneratedCode ;
  GGS_stringset  var_cas_unusedVariableCppNameSet = GGS_stringset ::constructor_emptySet () ;
  var_cas_unusedVariableCppNameSet.addAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (134))) ;
  {
    GGS_formalInputParameterListForGeneration::cEnumerator enumerator_6162 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalInputParameterListForGeneration::cElement * operand_6162 = NULL ;
    while (((operand_6162 = enumerator_6162.nextObject ()))) {
      macroValidPointer (operand_6162) ;
      var_cas_unusedVariableCppNameSet.addAssign_operation (operand_6162->mFormalArgumentCppName) ;
    }
  }
  GGS_uint  var_cas_temporaryVariableIndex = GGS_uint (0U) ;
  GGS_string var_cas_routineBody = GGS_string ("") ;
  var_cas_routineBody.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (142)) ;
  {
    GGS_semanticInstructionListForGeneration::cEnumerator enumerator_6392 (var_cas_inInstructionList, true) ;
    const GGS_semanticInstructionListForGeneration::cElement * operand_6392 = NULL ;
    while (((operand_6392 = enumerator_6392.nextObject ()))) {
      macroValidPointer (operand_6392) ;
      { typeCategoryMethod__semanticInstructionForGeneration__generateInstruction method = findCategoryMethod__semanticInstructionForGeneration__generateInstruction (operand_6392->mInstruction.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_6392->mInstruction (HERE), var_cas_temporaryVariableIndex, var_cas_unusedVariableCppNameSet, var_cas_routineBody COMMA_SOURCE_FILE_AT_LINE (144)) ;
        }
      }
    }
  }
  var_cas_routineBody.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (146)) ;
  var_cas_outGeneratedCode = ((GGS_string ("GALGAS_")).operator_concat (var_cas_inResultTypeName.reader_identifierRepresentation ())).operator_concat (GGS_string (" ")) ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inProcedureName) ;
  var_cas_outGeneratedCode.appendCString (" (") ;
  const GGS_uint  var_cas_colRef = var_cas_outGeneratedCode.reader_currentColumn () ;
  {
    GGS_formalInputParameterListForGeneration::cEnumerator enumerator_6805 (var_cas_inFormalArgumentList, true) ;
    const GGS_formalInputParameterListForGeneration::cElement * operand_6805 = NULL ;
    while (((operand_6805 = enumerator_6805.nextObject ()))) {
      macroValidPointer (operand_6805) ;
      var_cas_outGeneratedCode.appendCString ("const GALGAS_") ;
      var_cas_outGeneratedCode.dotAssign_operation (operand_6805->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (153))) ;
      var_cas_outGeneratedCode.appendCString (" & ") ;
      const GGS_bool cond_7053 = var_cas_unusedVariableCppNameSet.reader_hasKey (operand_6805->mFormalArgumentCppName) ;
      if (cond_7053.isBuiltAndTrue ()) {
        var_cas_outGeneratedCode.appendCString ("/* ") ;
        var_cas_outGeneratedCode.dotAssign_operation (operand_6805->mFormalArgumentCppName) ;
        var_cas_outGeneratedCode.appendCString (" */") ;
      }else if (cond_7053.isBuiltAndFalse ()) {
        var_cas_outGeneratedCode.dotAssign_operation (operand_6805->mFormalArgumentCppName) ;
      }
      var_cas_outGeneratedCode.appendCString (",\n") ;
      var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (160)) ;
    }
  }
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inCompilerTypeName) ;
  var_cas_outGeneratedCode.appendCString (" * ") ;
  const GGS_bool cond_7430 = var_cas_unusedVariableCppNameSet.reader_hasKey (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (164))) ;
  if (cond_7430.isBuiltAndTrue ()) {
    var_cas_outGeneratedCode.appendCString ("/* ") ;
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (165))) ;
    var_cas_outGeneratedCode.appendCString (" */") ;
  }else if (cond_7430.isBuiltAndFalse ()) {
    var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (167))) ;
  }
  var_cas_outGeneratedCode.appendCString ("\n") ;
  var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (170)) ;
  var_cas_outGeneratedCode.appendCString ("COMMA_UNUSED_LOCATION_ARGS)") ;
  var_cas_outGeneratedCode.appendCString (" {\n") ;
  var_cas_outGeneratedCode.appendCString ("  GALGAS_") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inResultTypeName.reader_identifierRepresentation ()) ;
  var_cas_outGeneratedCode.appendCString (" ") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inResultVariableCppName) ;
  var_cas_outGeneratedCode.appendCString (" ; // Returned variable\n") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_routineBody) ;
  var_cas_outGeneratedCode.appendCString ("//---\n") ;
  var_cas_outGeneratedCode.appendCString ("  return ") ;
  var_cas_outGeneratedCode.dotAssign_operation (var_cas_inResultVariableCppName) ;
  var_cas_outGeneratedCode.appendCString (" ;\n") ;
  var_cas_outGeneratedCode.appendCString ("}\n"
    "\n") ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE function_generateFunction\n") ;
  #endif
  return var_cas_outGeneratedCode ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_generateFunction (C_Compiler & inLexique,
                           const GGS_objectlist & inEffectiveParameterArray,
                           const GGS_location & inErrorLocation
                           COMMA_LOCATION_ARGS) {
  const GGS_string arg_0 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (0) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_formalInputParameterListForGeneration  arg_1 = GGS_formalInputParameterListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (1) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_semanticInstructionListForGeneration  arg_2 = GGS_semanticInstructionListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (2) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_3 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (3) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_4 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (4) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_5 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (5) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string result = function_generateFunction (inLexique,
                            arg_0,
                            arg_1,
                            arg_2,
                            arg_3,
                            arg_4,
                            arg_5
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

static const C_galgas_type_descriptorEX *
kArgumentTypeList_generateFunction [6] = {& kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_formalInputParameterListForGeneration ,
                              & kTypeDescriptor_GGS_semanticInstructionListForGeneration ,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_string} ;

const C_galgas_function_descriptorEX
kFunction_descriptor_generateFunction ("generateFunction",
                              functionForGenericCall_generateFunction,
                              & kTypeDescriptor_GGS_string,
                              6,
                              kArgumentTypeList_generateFunction) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of wrapper 'typeGenerationTemplate'             *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapperEx * gWrapperAllFiles_typeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- All sub-directories of '' directory

static const cDirectoryWrapperEx * gWrapperAllDirectories_typeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- Directory ''

const cDirectoryWrapperEx gWrapperDirectory_0_typeGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_typeGenerationTemplate_0,
  0,
  gWrapperAllDirectories_typeGenerationTemplate_0
) ;

//---------------------------------------------------------------------------*
//                                                                           *
//'unifiedClassBodyForType' template of 'typeGenerationTemplate' filewrapper *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_bool& var_cas_IS_CONCRETE,
                                const GGS_constructorMap & var_cas_CONSTRUCTOR_MAP,
                                const GGS_readerMap & var_cas_READER_MAP,
                                const GGS_modifierMap & var_cas_MODIFIER_MAP,
                                const GGS_instanceMethodMap & var_cas_INSTANCE_METHOD_MAP,
                                const GGS_classMethodMap & var_cas_CLASS_METHOD_MAP,
                                const GGS_enumerationDescriptorList & var_cas_ENUMERATION_DESCRIPTOR_LIST,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_unifiedTypeMapProxyList & var_cas_ADD_ASSIGN_ARGUMENT_LIST,
                                const GGS_withAccessorMap & var_cas_WITH_ACCESSOR_MAP) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_IS_CONCRETE.isBuilt ()
    && var_cas_CONSTRUCTOR_MAP.isBuilt ()
    && var_cas_READER_MAP.isBuilt ()
    && var_cas_MODIFIER_MAP.isBuilt ()
    && var_cas_INSTANCE_METHOD_MAP.isBuilt ()
    && var_cas_CLASS_METHOD_MAP.isBuilt ()
    && var_cas_ENUMERATION_DESCRIPTOR_LIST.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_ADD_ASSIGN_ARGUMENT_LIST.isBuilt ()
    && var_cas_WITH_ACCESSOR_MAP.isBuilt () ;
  if (isBuilt) {
    result << "//-- Start of generic part --*\n"
      "\n"
      "//--------------------------------- Object cloning\n"
      "  protected : virtual AC_GALGAS_root * clonedObject (void) const ;\n"
      "\n"
      "//--------------------------------- Object extraction\n"
      "  public : static GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " extractObject (" ;
    columnMarker = result.currentColumn () ;
    result << "const GALGAS_object & inObject,\n"
      "               " ;
    result.appendSpacesUntilColumn (columnMarker) ;
    result << "C_Compiler * inCompiler,\n"
      "               " ;
    result.appendSpacesUntilColumn (columnMarker) ;
    result << "const GALGAS_location & inErrorLocation\n"
      "               " ;
    result.appendSpacesUntilColumn (columnMarker) ;
    result << "COMMA_LOCATION_ARGS) ;\n"
      "\n" ;
    if ((var_cas_CONSTRUCTOR_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- GALGAS constructors\n" ;
      GGS_constructorMap::cEnumerator enumerator_573 (var_cas_CONSTRUCTOR_MAP, true) ;
      const GGS_constructorMap::cElement * operand_573 = NULL ;
      while (((operand_573 = enumerator_573.nextObject ()))) {
        macroValidPointer (operand_573) ;
        result << "  public : static GALGAS_" ;
        result << operand_573->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
        result << " constructor_" ;
        result << operand_573->mKey.ggs_string ().reader_identifierRepresentation () ;
        result << " (" ;
        columnMarker = result.currentColumn () ;
        GGS_unifiedTypeMapProxyList::cEnumerator enumerator_738 (operand_573->mInfo.mArgumentTypeList, true) ;
        const GGS_unifiedTypeMapProxyList::cElement * operand_738 = NULL ;
        { GGS_uint var_cas_IDX (true, 0) ;
      while (((operand_738 = enumerator_738.nextObject ()))) {
        macroValidPointer (operand_738) ;
        result << "const GALGAS_" ;
        result << operand_738->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (18)) ;
        result << " & inOperand" ;
        result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (18)) ;
        if (enumerator_738.hasNextObject ()) {
          result << ",\n" ;
          result.appendSpacesUntilColumn (columnMarker) ;
        }
        var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
      }
    }
    if ((operand_573->mInfo.mHasCompilerArgument).operator_and ((operand_573->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
      result << ",\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "C_Compiler * inCompiler\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else if (operand_573->mInfo.mHasCompilerArgument.boolValue ()) {
      result << "C_Compiler * inCompiler\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else if ((operand_573->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
      result << "\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
      result << "LOCATION_ARGS) ;\n"
        "\n" ;
    }
  }
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateCopyConstructorAndAssignmentOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (35)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- Handle copy\n"
    "  public : GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " (const GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " & inSource) ;\n"
    "  public : GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " & operator = (const GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " & inSource) ;\n"
    "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryShiftOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (41)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- << and >> shift operators\n"
    "public : VIRTUAL_IN_DEBUG GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " left_shift_operation (" ;
  columnMarker = result.currentColumn () ;
  result << "const GALGAS_uint & inShiftOperand\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "COMMA_LOCATION_ARGS) const ;\n"
    "\n"
    "public : VIRTUAL_IN_DEBUG GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " right_shift_operation (" ;
  columnMarker = result.currentColumn () ;
  result << "const GALGAS_uint & inShiftOperand\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "COMMA_LOCATION_ARGS) const ;\n"
    "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_dotAssignOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (49)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- .= operator\n"
    "  public : VIRTUAL_IN_DEBUG void dotAssign_operation (const GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " inOperand\n"
    "                                                      COMMA_LOCATION_ARGS) ;\n"
    "\n" ;
}else {
}
if ((var_cas_ADD_ASSIGN_ARGUMENT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- += operator\n"
    "  public : VIRTUAL_IN_DEBUG void addAssign_operation (" ;
  columnMarker = result.currentColumn () ;
  GGS_unifiedTypeMapProxyList::cEnumerator enumerator_2564 (var_cas_ADD_ASSIGN_ARGUMENT_LIST, true) ;
  const GGS_unifiedTypeMapProxyList::cElement * operand_2564 = NULL ;
  { GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2564 = enumerator_2564.nextObject ()))) {
  macroValidPointer (operand_2564) ;
  result << "const GALGAS_" ;
  result << operand_2564->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (59)) ;
  result << " & inOperand" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (59)) ;
  if (enumerator_2564.hasNextObject ()) {
    result << ",\n" ;
    result.appendSpacesUntilColumn (columnMarker) ;
  }
  var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryAndOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (66)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- & operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_and (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryOrOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (72)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- | operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_or (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryXorOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (78)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- ^ operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_xor (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryNotOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (84)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- not operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_not (LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryTildeOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (89)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- ~ operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_tilde (LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryConcatOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (94)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- . (concat) operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_concat (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryAddOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (100)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- + operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " add_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binarySubOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (107)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- - operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " substract_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryMulOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (114)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- * operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " multiply_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryDivOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (121)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- / operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " divide_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryModOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (128)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- mod operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " modulo_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryMinusOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (135)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- unary - operator\n"
  "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " operator_unary_minus (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (141)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- ++, -- operators\n"
  "  public : VIRTUAL_IN_DEBUG void increment_operation (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : VIRTUAL_IN_DEBUG void decrement_operation (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (148)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Implementation of reader 'description'\n"
  "  public : VIRTUAL_IN_DEBUG void description (C_String & ioString,\n"
  "                                              const PMSInt32 inIndentation) const ;\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_doNotGenererateObjectCompare (inLexique COMMA_SOURCE_FILE_AT_LINE (154)))).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Comparison\n"
  "  public : enumComparisonResult objectCompare (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand) const ;\n" ;
}else {
}
result << "\n"
  "//--------------------------------- Modifiers\n" ;
GGS_modifierMap::cEnumerator enumerator_7173 (var_cas_MODIFIER_MAP, true) ;
const GGS_modifierMap::cElement * operand_7173 = NULL ;
while (((operand_7173 = enumerator_7173.nextObject ()))) {
macroValidPointer (operand_7173) ;
if ((((operand_7173->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (164)))).operator_or ((operand_7173->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (164))))).operator_or ((operand_7173->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasicFinal (inLexique COMMA_SOURCE_FILE_AT_LINE (164)))).boolValue ()) {
result << "  public : VIRTUAL_IN_DEBUG void modifier_" ;
result << operand_7173->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_7441 (operand_7173->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_7441 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7441 = enumerator_7441.nextObject ()))) {
macroValidPointer (operand_7441) ;
if ((operand_7441->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (167))).boolValue ()) {
  result << "GALGAS_" ;
  result << operand_7441->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (168)) ;
  result << " constinArgument" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (168)) ;
}else if ((operand_7441->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (169))).boolValue ()) {
  result << "GALGAS_" ;
  result << operand_7441->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (170)) ;
  result << " & ioArgument" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (170)) ;
}else if ((operand_7441->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (171))).boolValue ()) {
  result << "GALGAS_" ;
  result << operand_7441->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (172)) ;
  result << " & outArgument" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (172)) ;
}else {
  result << "GALGAS_" ;
  result << operand_7441->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
  result << " inArgument" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
}
if (enumerator_7441.hasNextObject ()) {
  result << ",\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_7173->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_7173->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_7173->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") ;\n"
  "\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Instance Methods\n" ;
GGS_instanceMethodMap::cEnumerator enumerator_8700 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_8700 = NULL ;
while (((operand_8700 = enumerator_8700.nextObject ()))) {
macroValidPointer (operand_8700) ;
if ((((operand_8700->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (200)))).operator_or ((operand_8700->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (200))))).operator_or ((operand_8700->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasicFinal (inLexique COMMA_SOURCE_FILE_AT_LINE (200)))).boolValue ()) {
result << "  public : VIRTUAL_IN_DEBUG void method_" ;
result << operand_8700->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_8966 (operand_8700->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_8966 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8966 = enumerator_8966.nextObject ()))) {
macroValidPointer (operand_8966) ;
if ((operand_8966->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (203))).boolValue ()) {
result << "GALGAS_" ;
result << operand_8966->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (204)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (204)) ;
}else if ((operand_8966->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (205))).boolValue ()) {
result << "GALGAS_" ;
result << operand_8966->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (206)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (206)) ;
}else if ((operand_8966->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (207))).boolValue ()) {
result << "GALGAS_" ;
result << operand_8966->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (208)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (208)) ;
}else {
result << "GALGAS_" ;
result << operand_8966->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (210)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (210)) ;
}
if (enumerator_8966.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_8700->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_8700->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_8700->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") const ;\n"
  "\n" ;
}else {
}
}
result << "//--------------------------------- Class Methods\n" ;
GGS_classMethodMap::cEnumerator enumerator_10224 (var_cas_CLASS_METHOD_MAP, true) ;
const GGS_classMethodMap::cElement * operand_10224 = NULL ;
while (((operand_10224 = enumerator_10224.nextObject ()))) {
macroValidPointer (operand_10224) ;
result << "  public : static void class_method_" ;
result << operand_10224->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_10331 (operand_10224->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_10331 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10331 = enumerator_10331.nextObject ()))) {
macroValidPointer (operand_10331) ;
if ((operand_10331->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (237))).boolValue ()) {
result << "GALGAS_" ;
result << operand_10331->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (238)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (238)) ;
}else if ((operand_10331->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (239))).boolValue ()) {
result << "GALGAS_" ;
result << operand_10331->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (240)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (240)) ;
}else if ((operand_10331->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (241))).boolValue ()) {
result << "GALGAS_" ;
result << operand_10331->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (242)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (242)) ;
}else {
result << "GALGAS_" ;
result << operand_10331->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (244)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (244)) ;
}
if (enumerator_10331.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_10224->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_10224->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_10224->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") ;\n"
  "\n" ;
}
result << "\n"
  "//--------------------------------- Readers\n" ;
GGS_readerMap::cEnumerator enumerator_11509 (var_cas_READER_MAP, true) ;
const GGS_readerMap::cElement * operand_11509 = NULL ;
while (((operand_11509 = enumerator_11509.nextObject ()))) {
macroValidPointer (operand_11509) ;
if ((((operand_11509->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (269)))).operator_or ((operand_11509->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (269))))).operator_or ((operand_11509->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasicFinal (inLexique COMMA_SOURCE_FILE_AT_LINE (269)))).boolValue ()) {
result << "  public : VIRTUAL_IN_DEBUG GALGAS_" ;
result << operand_11509->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (270)) ;
result << " reader_" ;
result << operand_11509->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_unifiedTypeMapProxyList::cEnumerator enumerator_11834 (operand_11509->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapProxyList::cElement * operand_11834 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_11834 = enumerator_11834.nextObject ()))) {
macroValidPointer (operand_11834) ;
result << "const GALGAS_" ;
result << operand_11834->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (272)) ;
result << " & constinOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (272)) ;
if (enumerator_11834.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_11509->mInfo.mArgumentTypeList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_11509->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
}else {
if (operand_11509->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") const ;\n"
  "\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Introspection\n"
  "  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * staticTypeDescriptor (void) const ;\n" ;
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateEnumerationHelperMethods (inLexique COMMA_SOURCE_FILE_AT_LINE (296)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Enumeration helper methods\n"
  "  protected : VIRTUAL_IN_DEBUG void populateEnumerationArray (capCollectionElementArray & inEnumerationArray,\n"
  "                                                              const bool inAscending) const ;\n"
  "\n" ;
}else {
}
if ((var_cas_WITH_ACCESSOR_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- 'with' accessors\n" ;
GGS_withAccessorMap::cEnumerator enumerator_13014 (var_cas_WITH_ACCESSOR_MAP, true) ;
const GGS_withAccessorMap::cElement * operand_13014 = NULL ;
while (((operand_13014 = enumerator_13014.nextObject ()))) {
macroValidPointer (operand_13014) ;
result << "  public : VIRTUAL_IN_DEBUG cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * readWriteAccessForWithInstruction_" ;
result << operand_13014->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_13014->mInfo.mArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (307)) ;
result << " & inKey\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
}else {
}
if ((var_cas_ENUMERATION_DESCRIPTOR_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Friend\n"
  "\n"
  "  friend class cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n" ;
}else {
}
result << " \n"
  "} ; // End of GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " class\n"
  "\n" ;
if ((var_cas_ENUMERATION_DESCRIPTOR_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "//   Enumerator declaration                                                  *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public cGenericAbstractEnumerator {\n"
  "  public : cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inEnumeratedObject,\n"
  "     " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const bool inAscending) ;\n"
  "\n"
  "//--- Current element access\n" ;
GGS_enumerationDescriptorList::cEnumerator enumerator_14090 (var_cas_ENUMERATION_DESCRIPTOR_LIST, true) ;
const GGS_enumerationDescriptorList::cElement * operand_14090 = NULL ;
while (((operand_14090 = enumerator_14090.nextObject ()))) {
macroValidPointer (operand_14090) ;
result << "  public : GALGAS_" ;
result << operand_14090->mEnumeratedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (329)) ;
result << " current_" ;
result << operand_14090->mEnumerationName.reader_identifierRepresentation () ;
result << " (void) const ;\n" ;
}
result << "} ;\n" ;
}else {
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "\n" ;
if ((var_cas_WITH_ACCESSOR_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- 'with' accessors\n" ;
GGS_withAccessorMap::cEnumerator enumerator_14552 (var_cas_WITH_ACCESSOR_MAP, true) ;
const GGS_withAccessorMap::cElement * operand_14552 = NULL ;
while (((operand_14552 = enumerator_14552.nextObject ()))) {
macroValidPointer (operand_14552) ;
result << "cCollectionElement * readWriteAccessForWithInstruction_" ;
result << operand_14552->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & ioMap,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_14552->mInfo.mArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (344)) ;
result << " & inKey\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
}else {
}
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'genericTypeImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_genericTypeImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_unifiedTypeMapProxy & var_cas_SUPER_TYPE_INDEX,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_INDEX.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor\n"
  "kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "\"" ;
result << var_cas_TYPE_NAME ;
result << "\",\n"
  "                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
if (var_cas_SUPER_TYPE_INDEX.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (9)).boolValue ()) {
result << "NULL" ;
}else {
result << "& kTypeDescriptor_GALGAS_" ;
result << var_cas_SUPER_TYPE_INDEX.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
}
result << ") ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::staticTypeDescriptor (void) const {\n"
  "  return & kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "AC_GALGAS_root * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::clonedObject (void) const {\n"
  "  AC_GALGAS_root * result = NULL ;\n"
  "  if (isValid ()) {\n"
  "    macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (*this)) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::extractObject (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_object & inObject,\n"
  "               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler,\n"
  "               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_location & inErrorLocation\n"
  "               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inObject.embeddedObject () ;\n"
  "  if (NULL != p) {\n"
  "    if (NULL != dynamic_cast <const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *> (p)) {\n"
  "      result = *p ;\n"
  "    }else{\n"
  "      inCompiler->extractObjectError (inErrorLocation, \"" ;
result << var_cas_TYPE_NAME ;
result << "\", p->dynamicTypeDescriptor () COMMA_THERE) ;\n"
  "    }  \n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   'structTypeHeader1' template of 'typeGenerationTemplate' filewrapper    *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_structTypeHeader1 (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string (" struct")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public AC_GALGAS_root {\n"
  "//--------------------------------- Public data members\n" ;
GGS_typedAttributeList::cEnumerator enumerator_538 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_538 = NULL ;
while (((operand_538 = enumerator_538.nextObject ()))) {
macroValidPointer (operand_538) ;
result << "  public : GALGAS_" ;
result << operand_538->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
result << " mAttribute_" ;
result << operand_538->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "\n"
  "//--------------------------------- Accessors\n"
  "  public : VIRTUAL_IN_DEBUG bool isValid (void) const ;\n"
  "  public : VIRTUAL_IN_DEBUG void drop (void) ;\n"
  "\n"
  "//--------------------------------- Default constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n"
  "//--------------------------------- Virtual destructor (in debug mode)\n"
  "  public : VIRTUAL_IN_DEBUG ~ GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n"
  "//--------------------------------- Native constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1197 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1197 = NULL ;
while (((operand_1197 = enumerator_1197.nextObject ()))) {
macroValidPointer (operand_1197) ;
result << "const GALGAS_" ;
result << operand_1197->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (27)) ;
result << " & in_" ;
result << operand_1197->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1197.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << ") ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'structTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_structTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) :\n" ;
GGS_typedAttributeList::cEnumerator enumerator_170 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_170 = NULL ;
while (((operand_170 = enumerator_170.nextObject ()))) {
macroValidPointer (operand_170) ;
result << "mAttribute_" ;
result << operand_170->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ()" ;
if (enumerator_170.hasNextObject ()) {
result << ",\n" ;
}
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::~ GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "/* GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) :\n" ;
GGS_typedAttributeList::cEnumerator enumerator_623 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_623 = NULL ;
while (((operand_623 = enumerator_623.nextObject ()))) {
macroValidPointer (operand_623) ;
result << "//mAttribute_" ;
result << operand_623->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (inSource.mAttribute_" ;
result << operand_623->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
if (enumerator_623.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << " {\n"
  "} */\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_958 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_958 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_958 = enumerator_958.nextObject ()))) {
macroValidPointer (operand_958) ;
result << "const GALGAS_" ;
result << operand_958->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (31)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (31)) ;
if (enumerator_958.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") :\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1121 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1121 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1121 = enumerator_1121.nextObject ()))) {
macroValidPointer (operand_1121) ;
result << "mAttribute_" ;
result << operand_1121->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << ")" ;
if (enumerator_1121.hasNextObject ()) {
result << ",\n" ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "/* GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator = (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1477 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1477 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1477 = enumerator_1477.nextObject ()))) {
macroValidPointer (operand_1477) ;
result << "  mAttribute_" ;
result << operand_1477->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " = inOperand.mAttribute_" ;
result << operand_1477->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  return *this ;\n"
  "} */\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1839 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1839 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1839 = enumerator_1839.nextObject ()))) {
macroValidPointer (operand_1839) ;
result << "const GALGAS_" ;
result << operand_1839->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (54)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (54)) ;
if (enumerator_1839.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " \n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (" ;
GGS_typedAttributeList::cEnumerator enumerator_2079 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2079 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2079 = enumerator_2079.nextObject ()))) {
macroValidPointer (operand_2079) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (60)) ;
result << ".isValid ()" ;
if (enumerator_2079.hasNextObject ()) {
result << " && " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "    result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_2231 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2231 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2231 = enumerator_2231.nextObject ()))) {
macroValidPointer (operand_2231) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (66)) ;
if (enumerator_2231.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand) const {\n"
  "   enumComparisonResult result = kOperandEqual ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2600 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2600 = NULL ;
while (((operand_2600 = enumerator_2600.nextObject ()))) {
macroValidPointer (operand_2600) ;
result << "  if (result == kOperandEqual) {\n"
  "    result = mAttribute_" ;
result << operand_2600->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".objectCompare (inOperand.mAttribute_" ;
result << operand_2600->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "bool GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::isValid (void) const {\n"
  "  return " ;
GGS_typedAttributeList::cEnumerator enumerator_3024 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3024 = NULL ;
while (((operand_3024 = enumerator_3024.nextObject ()))) {
macroValidPointer (operand_3024) ;
result << "mAttribute_" ;
result << operand_3024->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
if (enumerator_3024.hasNextObject ()) {
result << " && " ;
}
}
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::drop (void) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3296 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3296 = NULL ;
while (((operand_3296 = enumerator_3296.nextObject ()))) {
macroValidPointer (operand_3296) ;
result << "  mAttribute_" ;
result << operand_3296->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".drop () ;\n" ;
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 inIndentation) const {\n"
  "  ioString << \"<struct @" ;
result << var_cas_TYPE_NAME ;
result << ":\" ;\n"
  "  if (! isValid ()) {\n"
  "    ioString << \" not built\" ;\n"
  "  }else{\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3741 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3741 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3741 = enumerator_3741.nextObject ()))) {
macroValidPointer (operand_3741) ;
result << "    mAttribute_" ;
result << operand_3741->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".description (ioString, inIndentation+1) ;\n" ;
if (enumerator_3741.hasNextObject ()) {
result << "    ioString << \", \" ;\n" ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "  ioString << \">\" ;\n"
  "}\n"
  "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3961 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3961 = NULL ;
while (((operand_3961 = enumerator_3961.nextObject ()))) {
macroValidPointer (operand_3961) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_3961->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (125)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_3961->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (UNUSED_LOCATION_ARGS) const {\n"
  "  return mAttribute_" ;
result << operand_3961->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "}\n"
  "\n" ;
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    'listTypeHeader1' template of 'typeGenerationTemplate' filewrapper     *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_listTypeHeader1 (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" list")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public AC_GALGAS_list {\n"
  "//--------------------------------- Default constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n"
  "//--------------------------------- Handle copy\n"
  "//  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) ;\n"
  "//  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & operator = (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'listTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_listTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Class for element of '@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string ("' list")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public cCollectionElement {\n"
  "//--- List attributes\n" ;
GGS_typedAttributeList::cEnumerator enumerator_549 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_549 = NULL ;
while (((operand_549 = enumerator_549.nextObject ()))) {
macroValidPointer (operand_549) ;
result << "  public : GALGAS_" ;
result << operand_549->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
result << " mAttribute_" ;
result << operand_549->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "//--- Constructor\n"
  "  public : cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_801 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_801 = NULL ;
while (((operand_801 = enumerator_801.nextObject ()))) {
macroValidPointer (operand_801) ;
result << "const GALGAS_" ;
result << operand_801->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (17)) ;
result << " & in_" ;
result << operand_801->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_801.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Virtual method for comparing elements\n"
  "  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) const ;\n"
  "\n"
  "//--- Virtual method that checks that all attributes are valid\n"
  "  public : virtual bool isValid (void) const ;\n"
  "\n"
  "//--- Virtual method that returns a copy of current object\n"
  "  public : virtual cCollectionElement * copy (void) ;\n"
  "\n"
  "//--- Description\n"
  " public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1657 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1657 = NULL ;
while (((operand_1657 = enumerator_1657.nextObject ()))) {
macroValidPointer (operand_1657) ;
result << "const GALGAS_" ;
result << operand_1657->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (40)) ;
result << " & in_" ;
result << operand_1657->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1657.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n"
  "cCollectionElement (THERE)" ;
GGS_typedAttributeList::cEnumerator enumerator_1891 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1891 = NULL ;
while (((operand_1891 = enumerator_1891.nextObject ()))) {
macroValidPointer (operand_1891) ;
result << ",\n"
  "mAttribute_" ;
result << operand_1891->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (in_" ;
result << operand_1891->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "bool cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::isValid (void) const {\n"
  "  return " ;
GGS_typedAttributeList::cEnumerator enumerator_2219 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2219 = NULL ;
while (((operand_2219 = enumerator_2219.nextObject ()))) {
macroValidPointer (operand_2219) ;
result << "mAttribute_" ;
result << operand_2219->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
if (enumerator_2219.hasNextObject ()) {
result << " && " ;
}
}
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cCollectionElement * cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::copy (void) {\n"
  "  cCollectionElement * result = NULL ;\n"
  "  macroMyNew (result, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_2626 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2626 = NULL ;
while (((operand_2626 = enumerator_2626.nextObject ()))) {
macroValidPointer (operand_2626) ;
result << "mAttribute_" ;
result << operand_2626->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_2626.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_HERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2999 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2999 = NULL ;
while (((operand_2999 = enumerator_2999.nextObject ()))) {
macroValidPointer (operand_2999) ;
result << "// mAttribute_" ;
result << operand_2999->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".description (ioString, inIndentation) ;\n" ;
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::compare (const cCollectionElement * inOperand) const {\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operand = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inOperand ;\n"
  "  enumComparisonResult result = kOperandEqual ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3498 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3498 = NULL ;
while (((operand_3498 = enumerator_3498.nextObject ()))) {
macroValidPointer (operand_3498) ;
result << "  if (kOperandEqual == result) {\n"
  "    result = mAttribute_" ;
result << operand_3498->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".objectCompare (operand->mAttribute_" ;
result << operand_3498->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) :\n"
  "AC_GALGAS_list () {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  result.createNewEmptyList (THERE) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_listWithValue (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_4379 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4379 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4379 = enumerator_4379.nextObject ()))) {
macroValidPointer (operand_4379) ;
result << "const GALGAS_" ;
result << operand_4379->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (116)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (116)) ;
if (enumerator_4379.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (" ;
GGS_typedAttributeList::cEnumerator enumerator_4618 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4618 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4618 = enumerator_4618.nextObject ()))) {
macroValidPointer (operand_4618) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (123)) ;
result << ".isValid ()" ;
if (enumerator_4618.hasNextObject ()) {
result << " && " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "    result.createNewEmptyList (THERE) ;\n"
  "    cCollectionElement * p = NULL ;\n"
  "    macroMyNew (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_4874 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4874 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4874 = enumerator_4874.nextObject ()))) {
macroValidPointer (operand_4874) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (131)) ;
if (enumerator_4874.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "    capCollectionElement attributes ;\n"
  "    attributes.setPointer (p) ;\n"
  "    macroReleaseObject (p) ;\n"
  "    result.addObject (attributes) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::addAssign_operation (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_5291 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5291 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5291 = enumerator_5291.nextObject ()))) {
macroValidPointer (operand_5291) ;
result << "const GALGAS_" ;
result << operand_5291->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (147)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (147)) ;
if (enumerator_5291.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (isValid ()" ;
GGS_typedAttributeList::cEnumerator enumerator_5503 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5503 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5503 = enumerator_5503.nextObject ()))) {
macroValidPointer (operand_5503) ;
result << " && inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (153)) ;
result << ".isValid ()" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "    cCollectionElement * p = NULL ;\n"
  "    macroMyNew (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_5706 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5706 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5706 = enumerator_5706.nextObject ()))) {
macroValidPointer (operand_5706) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (159)) ;
if (enumerator_5706.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "    capCollectionElement attributes ;\n"
  "    attributes.setPointer (p) ;\n"
  "    macroReleaseObject (p) ;\n"
  "    addObject (attributes) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_prependValue (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_6100 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6100 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6100 = enumerator_6100.nextObject ()))) {
macroValidPointer (operand_6100) ;
result << "GALGAS_" ;
result << operand_6100->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
result << " inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
if (enumerator_6100.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (isValid ()" ;
GGS_typedAttributeList::cEnumerator enumerator_6310 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6310 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6310 = enumerator_6310.nextObject ()))) {
macroValidPointer (operand_6310) ;
result << " && inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (180)) ;
result << ".isValid ()" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") {\n"
  "    cCollectionElement * p = NULL ;\n"
  "    macroMyNew (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_6515 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6515 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6515 = enumerator_6515.nextObject ()))) {
macroValidPointer (operand_6515) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (186)) ;
if (enumerator_6515.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "    capCollectionElement attributes ;\n"
  "    attributes.setPointer (p) ;\n"
  "    macroReleaseObject (p) ;\n"
  "    prependAttributeArray (attributes) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popFirst (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_6917 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6917 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6917 = enumerator_6917.nextObject ()))) {
macroValidPointer (operand_6917) ;
result << "GALGAS_" ;
result << operand_6917->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (201)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (201)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement attributes ;\n"
  "  removeFirstObject (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_7348 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7348 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7348 = enumerator_7348.nextObject ()))) {
macroValidPointer (operand_7348) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (211)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_7526 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7526 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7526 = enumerator_7526.nextObject ()))) {
macroValidPointer (operand_7526) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (217)) ;
result << " = p->mAttribute_" ;
result << operand_7526->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popLast (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_7824 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7824 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7824 = enumerator_7824.nextObject ()))) {
macroValidPointer (operand_7824) ;
result << "GALGAS_" ;
result << operand_7824->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (226)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (226)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capCollectionElement attributes ;\n"
  "  removeLastObject (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_8254 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8254 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8254 = enumerator_8254.nextObject ()))) {
macroValidPointer (operand_8254) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (236)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_8432 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8432 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8432 = enumerator_8432.nextObject ()))) {
macroValidPointer (operand_8432) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (242)) ;
result << " = p->mAttribute_" ;
result << operand_8432->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_first (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_8726 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8726 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8726 = enumerator_8726.nextObject ()))) {
macroValidPointer (operand_8726) ;
result << "GALGAS_" ;
result << operand_8726->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (251)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (251)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  capCollectionElement attributes ;\n"
  "  readFirst (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_9155 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9155 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9155 = enumerator_9155.nextObject ()))) {
macroValidPointer (operand_9155) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (261)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_9333 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9333 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9333 = enumerator_9333.nextObject ()))) {
macroValidPointer (operand_9333) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (267)) ;
result << " = p->mAttribute_" ;
result << operand_9333->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_last (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_9626 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9626 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9626 = enumerator_9626.nextObject ()))) {
macroValidPointer (operand_9626) ;
result << "GALGAS_" ;
result << operand_9626->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (276)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (276)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  "  " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  capCollectionElement attributes ;\n"
  "  readLast (attributes, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_10054 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10054 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10054 = enumerator_10054.nextObject ()))) {
macroValidPointer (operand_10054) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (286)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_10232 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10232 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10232 = enumerator_10232.nextObject ()))) {
macroValidPointer (operand_10232) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (292)) ;
result << " = p->mAttribute_" ;
result << operand_10232->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator_concat (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n"
  "                     " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (isValid () && inOperand.isValid ()) {\n"
  "    result = *this ;\n"
  "    result.appendList (inOperand) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_subListWithRange (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_uint & inIndex,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_uint & inLength,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (THERE) ;\n"
  "  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_subListFromIndex (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_uint & inIndex,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result = GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyList (THERE) ;\n"
  "  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::dotAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " inOperand\n"
  "                          " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  appendList (inOperand) ;\n"
  "}\n"
  "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_12228 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_12228 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_12228 = enumerator_12228.nextObject ()))) {
macroValidPointer (operand_12228) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_set" ;
result << operand_12228->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ().reader_identifierRepresentation () ;
result << "AtIndex (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << operand_12228->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (340)) ;
result << " inOperand,\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_uint inIndex,\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;\n"
  "  if (NULL != p) {\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    p->mAttribute_" ;
result << operand_12228->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " = inOperand ;\n"
  "  }\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_13166 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_13166 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_13166 = enumerator_13166.nextObject ()))) {
macroValidPointer (operand_13166) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_13166->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (355)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_13166->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << "AtIndex (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_uint & inIndex,\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                              " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;\n"
  "  cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  GALGAS_" ;
result << operand_13166->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (360)) ;
result << " result ;\n"
  "  if (NULL != p) {\n"
  "    macroValidObject (p, cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    result = p->mAttribute_" ;
result << operand_13166->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inEnumeratedObject,\n"
  "                   " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const bool inAscending) :\n"
  "cGenericAbstractEnumerator () {\n"
  "  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inAscending) ;\n"
  "}\n"
  "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_14532 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_14532 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_14532 = enumerator_14532.nextObject ()))) {
macroValidPointer (operand_14532) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_14532->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (380)) ;
result << " cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::current_" ;
result << operand_14532->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (void) const {\n"
  "  const cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) currentObjectPtr () ;\n"
  "  macroValidObject (p, const cCollectionElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  return p->mAttribute_" ;
result << operand_14532->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'sortedlistTypeHeader1' template of 'typeGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_sortedlistTypeHeader1 (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string (" sorted list")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public AC_GALGAS_sortedlist {\n"
  "//--------------------------------- Default constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'sortedlistTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_sortedlistTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_sortDescriptorListForGeneration & var_cas_SORT_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_SORT_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Class for element of '@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string ("' sorted list")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public cSortedListElement {\n"
  "//--- List attributes\n" ;
GGS_typedAttributeList::cEnumerator enumerator_556 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_556 = NULL ;
while (((operand_556 = enumerator_556.nextObject ()))) {
macroValidPointer (operand_556) ;
result << "  public : GALGAS_" ;
result << operand_556->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
result << " mAttribute_" ;
result << operand_556->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "//--- Constructor\n"
  "  public : cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_808 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_808 = NULL ;
while (((operand_808 = enumerator_808.nextObject ()))) {
macroValidPointer (operand_808) ;
result << "const GALGAS_" ;
result << operand_808->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (17)) ;
result << " & in_" ;
result << operand_808->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_808.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Virtual method that checks that all attributes are valid\n"
  "  public : virtual bool isValid (void) const ;\n"
  "\n"
  "//--- Virtual method that returns a copy of current object\n"
  "  public : virtual cSortedListElement * copy (void) ;\n"
  "\n"
  "//--- Virtual method for comparing elements\n"
  "  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) const ;\n"
  "\n"
  "//--- Description\n"
  " public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;\n"
  "\n"
  "//--- Virtual method that comparing element for sorting\n"
  "  public : virtual enumComparisonResult compareForSorting (const cSortedListElement * inOperand) const ;\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_1826 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1826 = NULL ;
while (((operand_1826 = enumerator_1826.nextObject ()))) {
macroValidPointer (operand_1826) ;
result << "const GALGAS_" ;
result << operand_1826->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (43)) ;
result << " & in_" ;
result << operand_1826->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_1826.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n"
  "cSortedListElement (THERE)" ;
GGS_typedAttributeList::cEnumerator enumerator_2060 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2060 = NULL ;
while (((operand_2060 = enumerator_2060.nextObject ()))) {
macroValidPointer (operand_2060) ;
result << ",\n"
  "mAttribute_" ;
result << operand_2060->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (in_" ;
result << operand_2060->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "bool cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::isValid (void) const {\n"
  "  return " ;
GGS_typedAttributeList::cEnumerator enumerator_2388 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2388 = NULL ;
while (((operand_2388 = enumerator_2388.nextObject ()))) {
macroValidPointer (operand_2388) ;
result << "mAttribute_" ;
result << operand_2388->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
if (enumerator_2388.hasNextObject ()) {
result << " && " ;
}
}
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cSortedListElement * cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::copy (void) {\n"
  "  cSortedListElement * result = NULL ;\n"
  "  macroMyNew (result, cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_2795 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2795 = NULL ;
while (((operand_2795 = enumerator_2795.nextObject ()))) {
macroValidPointer (operand_2795) ;
result << "mAttribute_" ;
result << operand_2795->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_2795.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_HERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3168 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3168 = NULL ;
while (((operand_3168 = enumerator_3168.nextObject ()))) {
macroValidPointer (operand_3168) ;
result << "// mAttribute_" ;
result << operand_3168->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".description (ioString, inIndentation) ;\n" ;
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::compare (const cCollectionElement * inOperand) const {\n"
  "  enumComparisonResult result = kOperandNotValid ;\n"
  "  if (NULL != inOperand) {\n"
  "    result = kOperandEqual ;\n"
  "    cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operand = (cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inOperand ;\n"
  "    macroValidObject (operand, cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_3800 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3800 = NULL ;
while (((operand_3800 = enumerator_3800.nextObject ()))) {
macroValidPointer (operand_3800) ;
result << "    if (kOperandEqual == result) {\n"
  "      result = mAttribute_" ;
result << operand_3800->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".objectCompare (operand->mAttribute_" ;
result << operand_3800->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "    }\n" ;
}
result << "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) :\n"
  "AC_GALGAS_sortedlist () {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::compareForSorting (const cSortedListElement * inOperand) const {\n"
  "  enumComparisonResult result = kOperandEqual ;\n"
  "  const cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operand = (const cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inOperand ;\n"
  "  macroValidObject (operand, const cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_sortDescriptorListForGeneration::cEnumerator enumerator_4714 (var_cas_SORT_ATTRIBUTE_LIST, true) ;
const GGS_sortDescriptorListForGeneration::cElement * operand_4714 = NULL ;
while (((operand_4714 = enumerator_4714.nextObject ()))) {
macroValidPointer (operand_4714) ;
result << "  if (result == kOperandEqual) {\n"
  "    result = " ;
if (operand_4714->mAscendingOrder.boolValue ()) {
result << "mAttribute_" ;
result << operand_4714->mAttributeName.reader_identifierRepresentation () ;
result << ".objectCompare (operand->mAttribute_" ;
result << operand_4714->mAttributeName.reader_identifierRepresentation () ;
result << ")" ;
}else {
result << "operand->mAttribute_" ;
result << operand_4714->mAttributeName.reader_identifierRepresentation () ;
result << ".objectCompare (mAttribute_" ;
result << operand_4714->mAttributeName.reader_identifierRepresentation () ;
result << ")" ;
}
result << " ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptySortedList (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  result.createNewEmptySortedList (THERE) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_sortedListWithValue (" ;
const GGS_string var_cas_COL0 = GGS_string::stringWithColumnCount (result) ;
GGS_typedAttributeList::cEnumerator enumerator_5656 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5656 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5656 = enumerator_5656.nextObject ()))) {
macroValidPointer (operand_5656) ;
result << "const GALGAS_" ;
result << operand_5656->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (143)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (143)) ;
if (enumerator_5656.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL0 ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result << var_cas_COL0 ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result = constructor_emptySortedList (THERE) ;\n"
  "  cSortedListElement * p = NULL ;\n"
  "  macroMyNew (p, cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_6023 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6023 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6023 = enumerator_6023.nextObject ()))) {
macroValidPointer (operand_6023) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (151)) ;
if (enumerator_6023.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "  capSortedListElement attributes ;\n"
  "  attributes.setPointer (p) ;\n"
  "  macroReleaseObject (p) ;\n"
  "  result.addObject (attributes) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::addAssign_operation (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_6422 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6422 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6422 = enumerator_6422.nextObject ()))) {
macroValidPointer (operand_6422) ;
result << "const GALGAS_" ;
result << operand_6422->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
result << " & inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
if (enumerator_6422.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "    " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (isValid ()) {\n"
  "    cSortedListElement * p = NULL ;\n"
  "    macroMyNew (p, cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_6737 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6737 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6737 = enumerator_6737.nextObject ()))) {
macroValidPointer (operand_6737) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (175)) ;
if (enumerator_6737.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_THERE)) ;\n"
  "    capSortedListElement attributes ;\n"
  "    attributes.setPointer (p) ;\n"
  "    macroReleaseObject (p) ;\n"
  "    addObject (attributes) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::dotAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " inOperand\n"
  "                          " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  if (isValid ()) {\n"
  "    appendSortedList (inOperand) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator_concat (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand\n"
  "                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (isValid () && inOperand.isValid ()) {\n"
  "    result = constructor_emptySortedList (THERE) ;\n"
  "    result = *this ;\n"
  "    result.appendSortedList (inOperand) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popSmallest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_7914 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7914 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7914 = enumerator_7914.nextObject ()))) {
macroValidPointer (operand_7914) ;
result << "GALGAS_" ;
result << operand_7914->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (212)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (212)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capSortedListElement attributes ;\n"
  "  removeSmallestObject (attributes, inCompiler COMMA_THERE) ;\n"
  "  cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_8366 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8366 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8366 = enumerator_8366.nextObject ()))) {
macroValidPointer (operand_8366) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (222)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_8544 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8544 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8544 = enumerator_8544.nextObject ()))) {
macroValidPointer (operand_8544) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (228)) ;
result << " = p->mAttribute_" ;
result << operand_8544->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_popGreatest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_8846 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8846 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8846 = enumerator_8846.nextObject ()))) {
macroValidPointer (operand_8846) ;
result << "GALGAS_" ;
result << operand_8846->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (237)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (237)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  capSortedListElement attributes ;\n"
  "  removeGreatestObject (attributes, inCompiler COMMA_THERE) ;\n"
  "  cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_9298 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9298 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9298 = enumerator_9298.nextObject ()))) {
macroValidPointer (operand_9298) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (247)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_9476 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9476 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9476 = enumerator_9476.nextObject ()))) {
macroValidPointer (operand_9476) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (253)) ;
result << " = p->mAttribute_" ;
result << operand_9476->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_smallest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_9773 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9773 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9773 = enumerator_9773.nextObject ()))) {
macroValidPointer (operand_9773) ;
result << "GALGAS_" ;
result << operand_9773->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (262)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (262)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  capSortedListElement attributes ;\n"
  "  smallestObjectAttributeList (attributes, inCompiler COMMA_THERE) ;\n"
  "  cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_10228 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10228 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10228 = enumerator_10228.nextObject ()))) {
macroValidPointer (operand_10228) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (272)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_10406 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10406 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10406 = enumerator_10406.nextObject ()))) {
macroValidPointer (operand_10406) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (278)) ;
result << " = p->mAttribute_" ;
result << operand_10406->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_greatest (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_10703 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10703 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_10703 = enumerator_10703.nextObject ()))) {
macroValidPointer (operand_10703) ;
result << "GALGAS_" ;
result << operand_10703->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (287)) ;
result << " & outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (287)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  capSortedListElement attributes ;\n"
  "  greatestObjectAttributeList (attributes, inCompiler COMMA_THERE) ;\n"
  "  cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "  if (NULL == p) {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_11158 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_11158 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_11158 = enumerator_11158.nextObject ()))) {
macroValidPointer (operand_11158) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (297)) ;
result << ".drop () ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }else{\n"
  "    macroValidObject (p, cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_11336 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_11336 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_11336 = enumerator_11336.nextObject ()))) {
macroValidPointer (operand_11336) ;
result << "    outOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (303)) ;
result << " = p->mAttribute_" ;
result << operand_11336->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inEnumeratedObject,\n"
  "                   " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const bool inAscending) :\n"
  "cGenericAbstractEnumerator () {\n"
  "  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inAscending) ;\n"
  "}\n"
  "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_11864 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_11864 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_11864 = enumerator_11864.nextObject ()))) {
macroValidPointer (operand_11864) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_11864->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (318)) ;
result << " cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::current_" ;
result << operand_11864->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (void) const {\n"
  "  const cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) currentObjectPtr () ;\n"
  "  macroValidObject (p, const cSortedListElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  return p->mAttribute_" ;
result << operand_11864->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    'enumTypeHeader1' template of 'typeGenerationTemplate' filewrapper     *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_enumTypeHeader1 (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_stringlist & var_cas_CONSTANT_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_CONSTANT_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string (" enum")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public AC_GALGAS_root {\n"
  "//--------------------------------- Default constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n"
  "//--------------------------------- Enumeration\n"
  "  public : typedef enum {\n"
  "    kNotBuilt" ;
GGS_stringlist::cEnumerator enumerator_671 (var_cas_CONSTANT_LIST, true) ;
const GGS_stringlist::cElement * operand_671 = NULL ;
while (((operand_671 = enumerator_671.nextObject ()))) {
macroValidPointer (operand_671) ;
result << ",\n"
  "    kEnum_" ;
result << operand_671->mValue.reader_identifierRepresentation () ;
}
result << "\n"
  "  } enumeration ;\n"
  "  \n"
  "//--------------------------------- Private data member\n"
  "  private : enumeration mEnum ;\n"
  "\n"
  "//--------------------------------- Accessors\n"
  "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return kNotBuilt != mEnum ; }\n"
  "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mEnum = kNotBuilt ; }\n"
  "  public : inline enumeration enumValue (void) const { return mEnum ; }\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'enumTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_enumTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_stringlist & var_cas_CONSTANT_LIST,
                                const GGS_enumMessageListForGeneration & var_cas_ENUM_MESSAGE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_CONSTANT_LIST.isBuilt ()
    && var_cas_ENUM_MESSAGE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) :\n"
  "mEnum (kNotBuilt) {\n"
  "}\n"
  "\n" ;
GGS_stringlist::cEnumerator enumerator_190 (var_cas_CONSTANT_LIST, true) ;
const GGS_stringlist::cElement * operand_190 = NULL ;
while (((operand_190 = enumerator_190.nextObject ()))) {
macroValidPointer (operand_190) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_" ;
result << operand_190->mValue.reader_identifierRepresentation () ;
result << " (UNUSED_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  result.mEnum = kEnum_" ;
result << operand_190->mValue.reader_identifierRepresentation () ;
result << " ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
GGS_enumMessageListForGeneration::cEnumerator enumerator_597 (var_cas_ENUM_MESSAGE_LIST, true) ;
const GGS_enumMessageListForGeneration::cElement * operand_597 = NULL ;
while (((operand_597 = enumerator_597.nextObject ()))) {
macroValidPointer (operand_597) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const char * gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_597->mEnumMessageName.reader_identifierRepresentation () ;
result << " [" ;
result << var_cas_CONSTANT_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (19)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (19)) ;
result << "] = {\n"
  "  \"\"" ;
GGS_enumMessageAssociationSortedListForGeneration::cEnumerator enumerator_890 (operand_597->mMessageAssociationList, true) ;
const GGS_enumMessageAssociationSortedListForGeneration::cElement * operand_890 = NULL ;
while (((operand_890 = enumerator_890.nextObject ()))) {
macroValidPointer (operand_890) ;
result << ",\n"
  "  " ;
result << operand_890->mMessage.reader_utf8Representation () ;
}
result << "\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_string GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_597->mEnumMessageName.reader_identifierRepresentation () ;
result << " (UNUSED_LOCATION_ARGS) const {\n"
  "  GALGAS_string result ;\n"
  "  if (isValid ()) {\n"
  "    result = GALGAS_string (gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_597->mEnumMessageName.reader_identifierRepresentation () ;
result << " [mEnum]) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const char * gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " [" ;
result << var_cas_CONSTANT_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (37)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (37)) ;
result << "] = {\n"
  "  \"(not built)\"" ;
GGS_stringlist::cEnumerator enumerator_1646 (var_cas_CONSTANT_LIST, true) ;
const GGS_stringlist::cElement * operand_1646 = NULL ;
while (((operand_1646 = enumerator_1646.nextObject ()))) {
macroValidPointer (operand_1646) ;
result << ",\n"
  "  " ;
result << operand_1646->mValue.reader_utf8Representation () ;
}
result << "\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 /* inIndentation */) const {\n"
  "  ioString << \"<enum @" ;
result << var_cas_TYPE_NAME ;
result << ": \" << gEnumNameArrayFor_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " [mEnum] << \">\" ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand) const {\n"
  "  enumComparisonResult result = kOperandNotValid ;\n"
  "  if (isValid () && inOperand.isValid ()) {\n"
  "    if (mEnum < inOperand.mEnum) {\n"
  "      result = kFirstOperandLowerThanSecond ;\n"
  "    }else if (mEnum > inOperand.mEnum) {\n"
  "      result = kFirstOperandGreaterThanSecond ;\n"
  "    }else{\n"
  "      result = kOperandEqual ;\n"
  "    }\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    'mapTypeHeader1' template of 'typeGenerationTemplate' filewrapper      *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_mapTypeHeader1 (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" map")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public AC_GALGAS_map {\n"
  "//--------------------------------- Default constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n"
  "//--------------------------------- Handle copy\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) ;\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & operator = (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    'mapTypeHeader2' template of 'typeGenerationTemplate' filewrapper      *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_mapTypeHeader2 (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Class for element of '@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string ("' map")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public cMapElement {\n"
  "//--- Map attributes\n" ;
GGS_typedAttributeList::cEnumerator enumerator_527 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_527 = NULL ;
while (((operand_527 = enumerator_527.nextObject ()))) {
macroValidPointer (operand_527) ;
result << "  public : GALGAS_" ;
result << operand_527->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (11)) ;
result << " mAttribute_" ;
result << operand_527->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "//--- Constructor\n"
  "  public : cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_lstring & inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_802 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_802 = NULL ;
while (((operand_802 = enumerator_802.nextObject ()))) {
macroValidPointer (operand_802) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_802->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (17)) ;
result << " & in_" ;
result << operand_802->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//--- Virtual method for comparing elements\n"
  "  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) const ;\n"
  "\n"
  "//--- Virtual method that checks that all attributes are valid\n"
  "  public : virtual bool isValid (void) const ;\n"
  "\n"
  "//--- Virtual method that returns a copy of current object\n"
  "  public : virtual cMapElement * copy (void) ;\n"
  "\n"
  "//--- Description\n"
  " public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;\n"
  "} ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'mapTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_mapTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_insertMethodListAST & var_cas_INSERT_METHOD_LIST,
                                const GGS_mapSearchMethodListAST & var_cas_SEARCH_METHOD_LIST,
                                const GGS_mapRemoveMethodListAST & var_cas_REMOVE_METHOD_LIST,
                                const GGS_bool& var_cas_HAS_INSERT_OR_REPLACE,
                                const GGS_withAccessorMap & var_cas_WITH_ACCESSOR_MAP) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_INSERT_METHOD_LIST.isBuilt ()
    && var_cas_SEARCH_METHOD_LIST.isBuilt ()
    && var_cas_REMOVE_METHOD_LIST.isBuilt ()
    && var_cas_HAS_INSERT_OR_REPLACE.isBuilt ()
    && var_cas_WITH_ACCESSOR_MAP.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_lstring & inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_208 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_208 = NULL ;
while (((operand_208 = enumerator_208.nextObject ()))) {
macroValidPointer (operand_208) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_208->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (5)) ;
result << " & in_" ;
result << operand_208->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) :\n"
  "cMapElement (inKey COMMA_THERE)" ;
GGS_typedAttributeList::cEnumerator enumerator_434 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_434 = NULL ;
while (((operand_434 = enumerator_434.nextObject ()))) {
macroValidPointer (operand_434) ;
result << ",\n"
  "mAttribute_" ;
result << operand_434->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (in_" ;
result << operand_434->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
}
result << " {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "bool cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::isValid (void) const {\n"
  "  return mAttribute_lkey.isValid ()" ;
GGS_typedAttributeList::cEnumerator enumerator_781 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_781 = NULL ;
while (((operand_781 = enumerator_781.nextObject ()))) {
macroValidPointer (operand_781) ;
result << " && mAttribute_" ;
result << operand_781->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
}
result << " ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cMapElement * cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::copy (void) {\n"
  "  cMapElement * result = NULL ;\n"
  "  macroMyNew (result, cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (mAttribute_lkey" ;
GGS_typedAttributeList::cEnumerator enumerator_1158 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1158 = NULL ;
while (((operand_1158 = enumerator_1158.nextObject ()))) {
macroValidPointer (operand_1158) ;
result << ", mAttribute_" ;
result << operand_1158->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
}
result << " COMMA_HERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1507 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1507 = NULL ;
while (((operand_1507 = enumerator_1507.nextObject ()))) {
macroValidPointer (operand_1507) ;
result << "// mAttribute_" ;
result << operand_1507->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".description (ioString, inIndentation) ;\n" ;
}
result << "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::compare (const cCollectionElement * inOperand) const {\n"
  "  cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operand = (cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inOperand ;\n"
  "  enumComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_2028 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2028 = NULL ;
while (((operand_2028 = enumerator_2028.nextObject ()))) {
macroValidPointer (operand_2028) ;
result << "  if (kOperandEqual == result) {\n"
  "    result = mAttribute_" ;
result << operand_2028->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".objectCompare (operand->mAttribute_" ;
result << operand_2028->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
result << "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) :\n"
  "AC_GALGAS_map () {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) :\n"
  "AC_GALGAS_map (inSource) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::operator = (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inSource) {\n"
  "  * ((AC_GALGAS_map *) this) = inSource ;\n"
  "  return * this ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyMap (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  result.createNewEmptyMap (THERE) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_mapWithMapToOverride (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inMapToOverride\n"
  "                                                   " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  result.createNewEmptyMap (inMapToOverride COMMA_THERE) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  overridenMap (result) ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
GGS_insertMethodListAST::cEnumerator enumerator_3894 (var_cas_INSERT_METHOD_LIST, true) ;
const GGS_insertMethodListAST::cElement * operand_3894 = NULL ;
while (((operand_3894 = enumerator_3894.nextObject ()))) {
macroValidPointer (operand_3894) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_" ;
result << operand_3894->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_lstring inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_4130 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4130 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4130 = enumerator_4130.nextObject ()))) {
macroValidPointer (operand_4130) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_4130->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (108)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (108)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = NULL ;\n"
  "  macroMyNew (p, cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_4469 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4469 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4469 = enumerator_4469.nextObject ()))) {
macroValidPointer (operand_4469) ;
result << ", inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (115)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_HERE)) ;\n"
  "    capCollectionElement attributes ;\n"
  "  attributes.setPointer (p) ;\n"
  "  macroReleaseObject (p) ;\n" ;
const GGS_uint indentation_5057 = GGS_uint (2U) ;
if (indentation_5057.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_5057.uintValue ()) ;
}
result << "const utf32 kInsertErrorMessage [" ;
result << operand_3894->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (122)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (122)) ;
result << "] = " ;
result << operand_3894->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "const utf32 kShadowErrorMessage [" ;
result << operand_3894->mShadowErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (123)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (123)) ;
result << "] = " ;
result << operand_3894->mShadowErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;\n" ;
 ;
if (indentation_5057.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_5057.uintValue ())) ;
}
result << "}\n"
  "\n" ;
}
GGS_mapSearchMethodListAST::cEnumerator enumerator_5096 (var_cas_SEARCH_METHOD_LIST, true) ;
const GGS_mapSearchMethodListAST::cElement * operand_5096 = NULL ;
while (((operand_5096 = enumerator_5096.nextObject ()))) {
macroValidPointer (operand_5096) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const utf32 kSearchErrorMessage_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_5096->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " [" ;
result << operand_5096->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (131)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (131)) ;
result << "] = " ;
result << operand_5096->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_" ;
result << operand_5096->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_lstring inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_5609 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5609 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5609 = enumerator_5609.nextObject ()))) {
macroValidPointer (operand_5609) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_5609->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (135)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (135)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n" ;
const GGS_uint indentation_6395 = GGS_uint (2U) ;
if (indentation_6395.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_6395.uintValue ()) ;
}
result << "const cCollectionElement * attributes = performSearch (inKey, inCompiler, kSearchErrorMessage_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_5096->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " COMMA_THERE) ;\n"
  "const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes ;\n"
  "if (NULL != p) {\n"
  "  macroValidObject (p, const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_6231 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6231 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6231 = enumerator_6231.nextObject ()))) {
macroValidPointer (operand_6231) ;
result << "  outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (145)) ;
result << " = p->mAttribute_" ;
result << operand_6231->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n" ;
 ;
if (indentation_6395.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_6395.uintValue ())) ;
}
result << "}\n"
  "\n" ;
}
GGS_mapRemoveMethodListAST::cEnumerator enumerator_6435 (var_cas_REMOVE_METHOD_LIST, true) ;
const GGS_mapRemoveMethodListAST::cElement * operand_6435 = NULL ;
while (((operand_6435 = enumerator_6435.nextObject ()))) {
macroValidPointer (operand_6435) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_" ;
result << operand_6435->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_lstring inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_6671 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_6671 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6671 = enumerator_6671.nextObject ()))) {
macroValidPointer (operand_6671) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_6671->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (157)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (157)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
const GGS_uint indentation_7524 = GGS_uint (2U) ;
if (indentation_7524.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_7524.uintValue ()) ;
}
result << "const utf32 kRemoveErrorMessage [" ;
result << operand_6435->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (162)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (162)) ;
result << "] = " ;
result << operand_6435->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "capCollectionElement attributes ;\n"
  "performRemove (inKey, attributes, inCompiler, kRemoveErrorMessage COMMA_THERE) ;\n"
  "cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes.ptrNoVerif () ;\n"
  "if (NULL != p) {\n"
  "  macroValidObject (p, cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_7360 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7360 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7360 = enumerator_7360.nextObject ()))) {
macroValidPointer (operand_7360) ;
result << "  outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (169)) ;
result << " = p->mAttribute_" ;
result << operand_7360->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "}\n" ;
 ;
if (indentation_7524.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_7524.uintValue ())) ;
}
result << "}\n"
  "\n" ;
}
if (var_cas_HAS_INSERT_OR_REPLACE.boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_insertOrReplace (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_lstring inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_7769 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_7769 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7769 = enumerator_7769.nextObject ()))) {
macroValidPointer (operand_7769) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_" ;
result << operand_7769->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (180)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (180)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = NULL ;\n"
  "  macroMyNew (p, cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_8069 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8069 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8069 = enumerator_8069.nextObject ()))) {
macroValidPointer (operand_8069) ;
result << ", inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (186)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << " COMMA_HERE)) ;\n"
  "  capCollectionElement attributes ;\n"
  "  attributes.setPointer (p) ;\n"
  "  macroReleaseObject (p) ;\n"
  "  performInsertOrReplace (attributes) ;\n"
  "}\n"
  "\n" ;
}else {
}
GGS_typedAttributeList::cEnumerator enumerator_8344 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_8344 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8344 = enumerator_8344.nextObject ()))) {
macroValidPointer (operand_8344) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_8344->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (198)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_8344->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << "ForKey (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_string & inKey,\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;\n"
  "  const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes ;\n"
  "  GALGAS_" ;
result << operand_8344->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (203)) ;
result << " result ;\n"
  "  if (NULL != p) {\n"
  "    macroValidObject (p, const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    result = p->mAttribute_" ;
result << operand_8344->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_typedAttributeList::cEnumerator enumerator_9337 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9337 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_9337 = enumerator_9337.nextObject ()))) {
macroValidPointer (operand_9337) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_set" ;
result << operand_9337->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ().reader_identifierRepresentation () ;
result << "ForKey (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << operand_9337->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (214)) ;
result << " inAttributeValue,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGAS_string inKey,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;\n"
  "  cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) attributes ;\n"
  "  if (NULL != p) {\n"
  "    macroValidObject (p, cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    p->mAttribute_" ;
result << operand_9337->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " = inAttributeValue ;\n"
  "  }\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_withAccessorMap::cEnumerator enumerator_10271 (var_cas_WITH_ACCESSOR_MAP, true) ;
const GGS_withAccessorMap::cElement * operand_10271 = NULL ;
while (((operand_10271 = enumerator_10271.nextObject ()))) {
macroValidPointer (operand_10271) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::readWriteAccessForWithInstruction_" ;
result << operand_10271->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_10271->mInfo.mArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (230)) ;
result << " & inKey\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
if ((operand_10271->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (232))).operator_isEqual (GGS_string ("hasKey")).boolValue ()) {
result << "  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;\n" ;
}else {
result << "  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "_" ;
result << operand_10271->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " COMMA_THERE) ;\n" ;
}
result << "  cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = (cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) p ;\n"
  "  macroNullOrValidObject (result, cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inEnumeratedObject,\n"
  "                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const bool inAscending) :\n"
  "cGenericAbstractEnumerator () {\n"
  "  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inAscending) ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_lstring cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::current_lkey (void) const {\n"
  "  const cMapElement * p = (const cMapElement *) currentObjectPtr () ;\n"
  "  macroValidObject (p, const cMapElement) ;\n"
  "  return p->mAttribute_lkey ;\n"
  "}\n"
  "\n" ;
GGS_typedAttributeList::cEnumerator enumerator_11840 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_11840 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_11840 = enumerator_11840.nextObject ()))) {
macroValidPointer (operand_11840) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_11840->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (260)) ;
result << " cEnumerator_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::current_" ;
result << operand_11840->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (void) const {\n"
  "  const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) currentObjectPtr () ;\n"
  "  macroValidObject (p, const cMapElement_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  return p->mAttribute_" ;
result << operand_11840->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   'classTypeHeader1' template of 'typeGenerationTemplate' filewrapper     *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_classTypeHeader1 (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_SUPER_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ALL_ATTRIBUTE_LIST,
                                const GGS_bool& var_cas_IS_ABSTRACT) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ALL_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_IS_ABSTRACT.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("@")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string (" class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public " ;
if ((var_cas_SUPER_TYPE_IDENTIFIER).operator_isEqual (GGS_string ("")).boolValue ()) {
result << "AC_GALGAS_class" ;
}else {
result << "GALGAS_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
}
result << " {\n"
  "//--- Constructor\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) ;\n"
  "\n"
  "//--------------------------------- Constructor from pointer\n"
  "  public : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inSourcePtr) ;\n"
  "\n" ;
if (((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).operator_and ((var_cas_IS_ABSTRACT).operator_not ()).boolValue ()) {
result << "//--- Insulate\n"
  "  private : VIRTUAL_IN_DEBUG void insulate (LOCATION_ARGS) ;\n" ;
}else {
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   'classTypeHeader2' template of 'typeGenerationTemplate' filewrapper     *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_classTypeHeader2 (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_SUPER_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_CURRENT_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_ALL_ATTRIBUTE_LIST,
                                const GGS_bool& var_cas_IS_ABSTRACT,
                                const GGS_abstractMethodDefinitionListForGeneration & var_cas_ABSTRACT_METHOD_LIST,
                                const GGS_methodDefinitionListForGeneration & var_cas_CONCRETE_METHOD_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_CURRENT_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_ALL_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_IS_ABSTRACT.isBuilt ()
    && var_cas_ABSTRACT_METHOD_LIST.isBuilt ()
    && var_cas_CONCRETE_METHOD_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Pointer class for @")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " : public " ;
if ((var_cas_SUPER_TYPE_IDENTIFIER).operator_isEqual (GGS_string ("")).boolValue ()) {
result << "acPtr_class" ;
}else {
result << "cPtr_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
}
result << " {\n"
  "\n"
  "//--- Attributes\n" ;
GGS_typedAttributeList::cEnumerator enumerator_596 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_596 = NULL ;
while (((operand_596 = enumerator_596.nextObject ()))) {
macroValidPointer (operand_596) ;
result << "  public : GALGAS_" ;
result << operand_596->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
result << " mAttribute_" ;
result << operand_596->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "//--- Constructor\n"
  "  public : cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_840 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_840 = NULL ;
while (((operand_840 = enumerator_840.nextObject ()))) {
macroValidPointer (operand_840) ;
result << "const GALGAS_" ;
result << operand_840->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (18)) ;
result << " & in_" ;
result << operand_840->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_840.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
result << ") ;\n" ;
GGS_abstractMethodDefinitionListForGeneration::cEnumerator enumerator_1136 (var_cas_ABSTRACT_METHOD_LIST, true) ;
const GGS_abstractMethodDefinitionListForGeneration::cElement * operand_1136 = NULL ;
while (((operand_1136 = enumerator_1136.nextObject ()))) {
macroValidPointer (operand_1136) ;
result << "//--- Abstract method " ;
result << operand_1136->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (29)) ;
result << "\n"
  "  public : virtual void method_" ;
result << operand_1136->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_1293 (operand_1136->mSignature, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_1293 = NULL ;
while (((operand_1293 = enumerator_1293.nextObject ()))) {
macroValidPointer (operand_1293) ;
if ((operand_1293->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (32))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_1293->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (33)) ;
result << " " ;
}else if ((operand_1293->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (34))).boolValue ()) {
result << "GALGAS_" ;
result << operand_1293->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << " & " ;
}else if ((operand_1293->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (36))).boolValue ()) {
result << "GALGAS_" ;
result << operand_1293->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (37)) ;
result << " & " ;
}else if ((operand_1293->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_SOURCE_FILE_AT_LINE (38))).boolValue ()) {
result << "GALGAS_" ;
result << operand_1293->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (39)) ;
result << " " ;
}else {
}
result << operand_1293->mFormalArgumentCppName ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const = 0 ;\n"
  "\n" ;
}
GGS_methodDefinitionListForGeneration::cEnumerator enumerator_2106 (var_cas_CONCRETE_METHOD_LIST, true) ;
const GGS_methodDefinitionListForGeneration::cElement * operand_2106 = NULL ;
while (((operand_2106 = enumerator_2106.nextObject ()))) {
macroValidPointer (operand_2106) ;
result << "//--- Concrete method " ;
result << operand_2106->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (48)) ;
result << "\n"
  "  public : virtual void method_" ;
result << operand_2106->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_2263 (operand_2106->mSignature, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_2263 = NULL ;
while (((operand_2263 = enumerator_2263.nextObject ()))) {
macroValidPointer (operand_2263) ;
if ((operand_2263->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (51))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_2263->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (52)) ;
result << " " ;
}else if ((operand_2263->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (53))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2263->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (54)) ;
result << " & " ;
}else if ((operand_2263->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (55))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2263->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (56)) ;
result << " & " ;
}else if ((operand_2263->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_SOURCE_FILE_AT_LINE (57))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2263->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (58)) ;
result << " " ;
}else {
}
result << operand_2263->mFormalArgumentCppName ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const ;\n"
  "\n" ;
}
if ((var_cas_IS_ABSTRACT).operator_not ().boolValue ()) {
result << "//--- Description\n"
  "  public : virtual void description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n"
  "                           " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 inIndentation) const ;\n"
  "\n"
  "  public : virtual const C_galgas_type_descriptor * classDescriptor (void) const ;\n" ;
}else {
}
result << "\n"
  "//--- Friend class\n"
  "//  friend class GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "} ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'classTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_classTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_SUPER_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_CURRENT_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_ALL_ATTRIBUTE_LIST,
                                const GGS_typedAttributeList & var_cas_INHERITED_ATTRIBUTE_LIST,
                                const GGS_bool& var_cas_IS_ABSTRACT,
                                const GGS_abstractMethodDefinitionListForGeneration & var_cas_ABSTRACT_METHOD_LIST,
                                const GGS_methodDefinitionListForGeneration & var_cas_CONCRETE_METHOD_LIST,
                                const GGS_instanceMethodMap & var_cas_INSTANCE_METHOD_MAP) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_SUPER_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_CURRENT_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_ALL_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_INHERITED_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_IS_ABSTRACT.isBuilt ()
    && var_cas_ABSTRACT_METHOD_LIST.isBuilt ()
    && var_cas_CONCRETE_METHOD_LIST.isBuilt ()
    && var_cas_INSTANCE_METHOD_MAP.isBuilt () ;
  if (isBuilt) {
if ((var_cas_CURRENT_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand) const {\n"
  "  return (isValid () && inOperand.isValid ()) \? kOperandEqual : kOperandNotValid ;\n"
  "}\n"
  "\n" ;
}else {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "enumComparisonResult GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & inOperand) const {\n" ;
if ((var_cas_SUPER_TYPE_IDENTIFIER).operator_isEqual (GGS_string ("")).boolValue ()) {
result << "  enumComparisonResult result = kOperandEqual ;\n" ;
}else {
result << "  enumComparisonResult result = " ;
if ((var_cas_SUPER_TYPE_IDENTIFIER).operator_isEqual (GGS_string ("")).boolValue ()) {
result << "AC_GALGAS_class" ;
}else {
result << "GALGAS_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
}
result << "::objectCompare (inOperand) ;\n" ;
}
if ((var_cas_CURRENT_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "  const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) mObjectPtr ;\n"
  "  macroNullOrValidObject (p, const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "  const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * q = (const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) inOperand.mObjectPtr ;\n"
  "  macroNullOrValidObject (q, const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1265 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1265 = NULL ;
while (((operand_1265 = enumerator_1265.nextObject ()))) {
macroValidPointer (operand_1265) ;
result << "  if (kOperandEqual == result) {\n"
  "    result = p->mAttribute_" ;
result << operand_1265->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".objectCompare (q->mAttribute_" ;
result << operand_1265->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ") ;\n"
  "  }\n" ;
}
}else {
}
result << "  return result ;\n"
  "}\n"
  "\n" ;
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) :\n" ;
if ((var_cas_SUPER_TYPE_IDENTIFIER).operator_isEqual (GGS_string ("")).boolValue ()) {
result << "AC_GALGAS_class" ;
}else {
result << "GALGAS_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
}
result << " () {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inSourcePtr) :\n" ;
if ((var_cas_SUPER_TYPE_IDENTIFIER).operator_isEqual (GGS_string ("")).boolValue ()) {
result << "AC_GALGAS_class" ;
}else {
result << "GALGAS_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
}
result << " (inSourcePtr) {\n"
  "  macroNullOrValidObject (inSourcePtr, cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "}\n"
  "\n" ;
if (((var_cas_IS_ABSTRACT).operator_not ()).operator_and ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  macroMyNew (result.mObjectPtr, cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}else {
}
if (((var_cas_IS_ABSTRACT).operator_not ()).operator_and ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_2825 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_2825 = NULL ;
while (((operand_2825 = enumerator_2825.nextObject ()))) {
macroValidPointer (operand_2825) ;
result << "const GALGAS_" ;
result << operand_2825->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (56)) ;
result << " & inAttribute_" ;
result << operand_2825->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_2825.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (" ;
GGS_typedAttributeList::cEnumerator enumerator_3186 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3186 = NULL ;
while (((operand_3186 = enumerator_3186.nextObject ()))) {
macroValidPointer (operand_3186) ;
result << "inAttribute_" ;
result << operand_3186->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".isValid ()" ;
if (enumerator_3186.hasNextObject ()) {
result << " && " ;
}
}
result << ") {\n"
  "    macroMyNew (result.mObjectPtr, cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_3402 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_3402 = NULL ;
while (((operand_3402 = enumerator_3402.nextObject ()))) {
macroValidPointer (operand_3402) ;
result << "inAttribute_" ;
result << operand_3402->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_3402.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_THERE)) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}else {
}
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "/* GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::~GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (void) {\n"
  "} */\n"
  "\n" ;
if (((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).operator_and ((var_cas_IS_ABSTRACT).operator_not ()).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (LOCATION_ARGS) {\n"
  "  if (isValid () && (mObjectPtr->retainCount () > 1)) {\n"
  "    cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) mObjectPtr ;\n"
  "    macroValidObject (p, cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * r = NULL ;\n"
  "    macroMyNew (r, cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_4274 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4274 = NULL ;
while (((operand_4274 = enumerator_4274.nextObject ()))) {
macroValidPointer (operand_4274) ;
result << "p->mAttribute_" ;
result << operand_4274->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_4274.hasNextObject ()) {
result << ", " ;
}
}
result << " COMMA_THERE)) ;\n"
  "    macroAssignObject (mObjectPtr, r) ;\n"
  "    macroReleaseObject (r) ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}else {
}
GGS_methodDefinitionListForGeneration::cEnumerator enumerator_4528 (var_cas_CONCRETE_METHOD_LIST, true) ;
const GGS_methodDefinitionListForGeneration::cElement * operand_4528 = NULL ;
while (((operand_4528 = enumerator_4528.nextObject ()))) {
macroValidPointer (operand_4528) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << function_generateProcedure (inLexique, (((GGS_string ("cPtr_")).operator_concat (var_cas_TYPE_IDENTIFIER)).operator_concat (GGS_string ("::method_"))).operator_concat (operand_4528->mMethodName.ggs_string ().reader_identifierRepresentation ()), operand_4528->mSignature, operand_4528->mInstructionList, GGS_bool (true), GGS_string ("C_Compiler"), GGS_bool (true), GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (109)) ;
}
GGS_typedAttributeList::cEnumerator enumerator_4942 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_4942 = NULL ;
while (((operand_4942 = enumerator_4942.nextObject ()))) {
macroValidPointer (operand_4942) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_4942->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (122)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_4942->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (UNUSED_LOCATION_ARGS) const {\n"
  "  GALGAS_" ;
result << operand_4942->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (123)) ;
result << " result ;\n"
  "  if (NULL != mObjectPtr) {\n"
  "    const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) mObjectPtr ;\n"
  "    macroValidObject (p, const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    result = p->mAttribute_" ;
result << operand_4942->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}
GGS_typedAttributeList::cEnumerator enumerator_5638 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_5638 = NULL ;
while (((operand_5638 = enumerator_5638.nextObject ()))) {
macroValidPointer (operand_5638) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::modifier_set" ;
result << operand_5638->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << operand_5638->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (135)) ;
result << " inValue\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_UNUSED_LOCATION_ARGS) {\n"
  "  if (NULL != mObjectPtr) {\n"
  "    cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) mObjectPtr ;\n"
  "    macroValidObject (p, cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    p->mAttribute_" ;
result << operand_5638->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " = inValue ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}
GGS_instanceMethodMap::cEnumerator enumerator_6305 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_6305 = NULL ;
while (((operand_6305 = enumerator_6305.nextObject ()))) {
macroValidPointer (operand_6305) ;
if ((((operand_6305->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isAbstract (inLexique COMMA_SOURCE_FILE_AT_LINE (146)))).operator_or ((operand_6305->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (146))))).operator_or ((operand_6305->mInfo.mQualifier).operator_isEqual (GGS_methodQualifier::constructor_isBasicFinal (inLexique COMMA_SOURCE_FILE_AT_LINE (146)))).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::method_" ;
result << operand_6305->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_6659 (operand_6305->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_6659 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6659 = enumerator_6659.nextObject ()))) {
macroValidPointer (operand_6659) ;
if ((operand_6659->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (150))).boolValue ()) {
result << "GALGAS_" ;
result << operand_6659->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (151)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (151)) ;
}else if ((operand_6659->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (152))).boolValue ()) {
result << "GALGAS_" ;
result << operand_6659->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (153)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (153)) ;
}else if ((operand_6659->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (154))).boolValue ()) {
result << "GALGAS_" ;
result << operand_6659->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (155)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (155)) ;
}else {
result << "GALGAS_" ;
result << operand_6659->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (157)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (157)) ;
}
if (enumerator_6659.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_6305->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_6305->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_6305->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") const {\n"
  "  if (mObjectPtr != NULL) {\n"
  "    const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = (const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " *) mObjectPtr ;\n"
  "    macroValidObject (p, const cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    p->method_" ;
result << operand_6305->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_formalParameterSignature::cEnumerator enumerator_8097 (operand_6305->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_8097 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8097 = enumerator_8097.nextObject ()))) {
macroValidPointer (operand_8097) ;
if ((operand_8097->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (182))).boolValue ()) {
result << "constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (183)) ;
result << ", " ;
}else if ((operand_8097->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (184))).boolValue ()) {
result << "ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (185)) ;
result << ", " ;
}else if ((operand_8097->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (186))).boolValue ()) {
result << "outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (187)) ;
result << ", " ;
}else {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (189)) ;
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "inCompiler COMMA_THERE) ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}else {
}
}
result << "//---------------------------------------------------------------------------*\n"
  "//" ;
result << ((GGS_string ("Pointer class for @")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_typedAttributeList::cEnumerator enumerator_9021 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9021 = NULL ;
while (((operand_9021 = enumerator_9021.nextObject ()))) {
macroValidPointer (operand_9021) ;
result << "const GALGAS_" ;
result << operand_9021->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (204)) ;
result << " & in_" ;
result << operand_9021->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_9021.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
result << ") :\n" ;
if ((var_cas_SUPER_TYPE_IDENTIFIER).operator_isEqual (GGS_string ("")).boolValue ()) {
result << "acPtr_class" ;
}else {
result << "cPtr_" ;
result << var_cas_SUPER_TYPE_IDENTIFIER ;
}
result << " (" ;
GGS_typedAttributeList::cEnumerator enumerator_9422 (var_cas_INHERITED_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9422 = NULL ;
while (((operand_9422 = enumerator_9422.nextObject ()))) {
macroValidPointer (operand_9422) ;
result << "in_" ;
result << operand_9422->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
if (enumerator_9422.hasNextObject ()) {
result << ", " ;
}
}
if ((var_cas_INHERITED_ATTRIBUTE_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << " COMMA_THERE" ;
}else {
result << "THERE" ;
}
result << ")" ;
GGS_typedAttributeList::cEnumerator enumerator_9640 (var_cas_CURRENT_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_9640 = NULL ;
while (((operand_9640 = enumerator_9640.nextObject ()))) {
macroValidPointer (operand_9640) ;
result << ",\n"
  "mAttribute_" ;
result << operand_9640->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (in_" ;
result << operand_9640->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ")" ;
}
result << " {\n"
  "}\n"
  "\n" ;
if ((var_cas_IS_ABSTRACT).operator_not ().boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor * cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::classDescriptor (void) const {\n"
  "  return & kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "}\n"
  "\n" ;
if ((var_cas_ALL_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "void cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 /* inIndentation */) const {\n"
  "  ioString << \"[@" ;
result << var_cas_TYPE_NAME ;
result << "]\" ;\n"
  "}\n"
  "\n" ;
}else {
result << "void cPtr_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::description (" ;
columnMarker = result.currentColumn () ;
result << "C_String & ioString,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const PMSInt32 inIndentation) const {\n"
  "  ioString << \"[@" ;
result << var_cas_TYPE_NAME ;
result << ":\" ;\n" ;
GGS_typedAttributeList::cEnumerator enumerator_10548 (var_cas_ALL_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_10548 = NULL ;
while (((operand_10548 = enumerator_10548.nextObject ()))) {
macroValidPointer (operand_10548) ;
result << "  mAttribute_" ;
result << operand_10548->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ".description (ioString, inIndentation+1) ;\n" ;
if (enumerator_10548.hasNextObject ()) {
result << "  ioString << \", \" ;\n" ;
}
}
result << "  ioString << \"]\" ;\n"
  "}\n"
  "\n" ;
}
}else {
}
result << "\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'listmapTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_listmapTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_ASSOCIATED_LISTTYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ASSOCIATED_LISTTYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_listmap ((GALGAS_list * (*) (LOCATION_ARGS)) GALGASap_uintlist::constructor_emptyList COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_emptyMap (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioObject\n"
  "                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioObject->retainCount () > 1) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * source = ioObject ;\n"
  "    macroReleaseObject (ioObject) ;\n"
  "    ioObject = constructor_emptyMap (THERE) ;\n"
  "    ioObject->copyFrom (source) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void addAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_string * inKey" ;
GGS_typedAttributeList::cEnumerator enumerator_1208 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1208 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1208 = enumerator_1208.nextObject ()))) {
macroValidPointer (operand_1208) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_1208->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioResult COMMA_THERE) ;\n"
  "    GALGAS_object * attributeArray [" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (37)) ;
result << "] = {" ;
GGS_typedAttributeList::cEnumerator enumerator_1564 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1564 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1564 = enumerator_1564.nextObject ()))) {
macroValidPointer (operand_1564) ;
result << "inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (39)) ;
if (enumerator_1564.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "} ;\n"
  "    ioResult->addObject (inKey, attributeArray) ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'mapProxyTypeSpecificImplementation' template of 'typeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_typeGenerationTemplate_mapProxyTypeSpecificImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_string& var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER,
                                const GGS_typedAttributeList & var_cas_ATTRIBUTE_LIST,
                                const GGS_mapSearchMethodListAST & var_cas_SEARCH_METHOD_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_SEARCH_METHOD_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (LOCATION_ARGS) :\n"
  "GALGAS_mapproxy (" ;
result << var_cas_ATTRIBUTE_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (4)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (4)) ;
result << " COMMA_THERE) {\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_null (LOCATION_ARGS) {\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::class_method_makeRegularProxy (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << " & ioMap,\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_string inKey,\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & outProxy\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  outProxy.drop () ;\n"
  "  if (inKey.isValid () && ioMap.isValid ()) {\n"
  "    ioMap.insulate (HERE) ;\n"
  "    GALGAS_classMapIndex * p = NULL ;\n"
  "    macroMyNew (p, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "    outProxy = p ;\n"
  "    outProxy.ptr (HERE)->internalMakeRegularProxy (ioMap.ptr (HERE), inKey) ;\n"
  "  }\n"
  "}\n" ;
GGS_typedAttributeList::cEnumerator enumerator_1254 (var_cas_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_1254 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_1254 = enumerator_1254.nextObject ()))) {
macroValidPointer (operand_1254) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << operand_1254->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (32)) ;
result << " GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::reader_" ;
result << operand_1254->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler\n"
  "                                       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) const {\n"
  "  GALGASap_" ;
result << operand_1254->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (34)) ;
result << " result ;\n"
  "  capCollectionElement attributeList = getAttributeList (inCompiler COMMA_THERE) ;\n"
  "  if (attributeList.ptrNoVerif () != NULL) {\n"
  "    macroValidObject (attributeList.ptrNoVerif (), cCollectionElement_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << ") ;\n"
  "    result = ((cCollectionElement_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << " *) attributeList.ptrNoVerif ())->mAttribute_" ;
result << operand_1254->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << ";\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
GGS_mapSearchMethodListAST::cEnumerator enumerator_2182 (var_cas_SEARCH_METHOD_LIST, true) ;
const GGS_mapSearchMethodListAST::cElement * operand_2182 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2182 = enumerator_2182.nextObject ()))) {
macroValidPointer (operand_2182) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_" ;
result << operand_2182->mMethodName.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGASap_" ;
result << var_cas_ASSOCIATED_MAP_TYPE_IDENTIFIER ;
result << " & inMap,\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "GALGASap_lstring & inKey,\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  "                                                " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  GALGASap_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " result ;\n"
  "  if (inMap.isValid () && inKey.isValid ()) {\n" ;
const GGS_uint indentation_3301 = GGS_uint (4U) ;
if (indentation_3301.isBuilt ()) {
  result.incIndentation ((PMSInt32) indentation_3301.uintValue ()) ;
}
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * p = NULL ;\n"
  "macroMyNew (p, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (THERE)) ;\n"
  "result = p ;\n"
  "const utf32 kSearchErrorMessage [" ;
result << operand_2182->mErrorMessage.ggs_string ().reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (56)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (56)) ;
result << "] = " ;
result << operand_2182->mErrorMessage.ggs_string ().reader_utf32Representation () ;
result << " ;\n"
  "const bool ok = result.ptr (HERE)->internalSearchKey (inMap, inKey, kSearchErrorMessage, inCompiler COMMA_THERE) ;\n"
  "if (! ok) {\n"
  "  result.drop () ;\n"
  "}\n" ;
 ;
if (indentation_3301.isBuilt ()) {
  result.incIndentation (- ((PMSInt32) indentation_3301.uintValue ())) ;
}
result << "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of wrapper 'semanticComponentGenerationTemplate'       *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapperEx * gWrapperAllFiles_semanticComponentGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- All sub-directories of '' directory

static const cDirectoryWrapperEx * gWrapperAllDirectories_semanticComponentGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- Directory ''

const cDirectoryWrapperEx gWrapperDirectory_0_semanticComponentGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_semanticComponentGenerationTemplate_0,
  0,
  gWrapperAllDirectories_semanticComponentGenerationTemplate_0
) ;

//---------------------------------------------------------------------------*
//                                                                           *
//'abstractCategoryMethodDeclaration' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_abstractCategoryMethodDeclaration (C_Compiler & inLexique,
                                const GGS_string& var_cas_CLASS_NAME,
                                const GGS_string& var_cas_METHOD_NAME,
                                const GGS_formalParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_CLASS_NAME.isBuilt ()
    && var_cas_METHOD_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((((GGS_string ("Abstract category method '@")).operator_concat (var_cas_CLASS_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_METHOD_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "typedef void (*categoryMethodSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ") (" ;
columnMarker = result.currentColumn () ;
result << "const cPtr_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << " * inObject" ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_656 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_656 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_656 = enumerator_656.nextObject ()))) {
macroValidPointer (operand_656) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_656->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (11))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_656->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
}else if ((operand_656->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (13))).boolValue ()) {
result << "GALGAS_" ;
result << operand_656->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
}else if ((operand_656->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (15))).boolValue ()) {
result << "GALGAS_" ;
result << operand_656->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
}else {
result << "GALGAS_" ;
result << operand_656->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (18)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (18)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void enterCategoryMethod_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const PMSInt32 inClassIndex,\n"
  "               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "categoryMethodSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " inMethod) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void callCategoryMethod_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const cPtr_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << " * inObject" ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_2020 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_2020 = NULL ;
while (((operand_2020 = enumerator_2020.nextObject ()))) {
macroValidPointer (operand_2020) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_2020->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (34))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_2020->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << "  constin_" ;
result << operand_2020->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else if ((operand_2020->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (36))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2020->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (37)) ;
result << " & io_" ;
result << operand_2020->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else if ((operand_2020->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (38))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2020->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (39)) ;
result << " & out_" ;
result << operand_2020->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else {
result << "GALGAS_" ;
result << operand_2020->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (41)) ;
result << " in_" ;
result << operand_2020->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'abstractCategoryMethodImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_abstractCategoryMethodImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_CLASS_NAME,
                                const GGS_string& var_cas_METHOD_NAME,
                                const GGS_formalParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_CLASS_NAME.isBuilt ()
    && var_cas_METHOD_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((((GGS_string ("Abstract category method '@")).operator_concat (var_cas_CLASS_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_METHOD_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static TC_UniqueArray <categoryMethodSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << "> gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void enterCategoryMethod_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const PMSInt32 inClassIndex,\n"
  "               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "categoryMethodSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " inMethod) {\n"
  "  gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ".forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static void freeCategoryMethod_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (void) {\n"
  "  gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ".free () ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "C_PrologueEpilogue g_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "NULL,\n"
  "       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "freeCategoryMethod_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ") ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void callCategoryMethod_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const cPtr_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << " * inObject" ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_2041 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_2041 = NULL ;
while (((operand_2041 = enumerator_2041.nextObject ()))) {
macroValidPointer (operand_2041) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_2041->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (32))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_2041->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (33)) ;
result << "  constin_" ;
result << operand_2041->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else if ((operand_2041->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (34))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2041->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << " & io_" ;
result << operand_2041->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else if ((operand_2041->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (36))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2041->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (37)) ;
result << " & out_" ;
result << operand_2041->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else {
result << "GALGAS_" ;
result << operand_2041->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (39)) ;
result << " in_" ;
result << operand_2041->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "//--- Drop output arguments\n" ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_2985 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_2985 = NULL ;
while (((operand_2985 = enumerator_2985.nextObject ()))) {
macroValidPointer (operand_2985) ;
if ((operand_2985->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (47))).boolValue ()) {
result << "  out_" ;
result << operand_2985->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
result << ".drop () ;\n" ;
}else {
}
}
result << "//--- Find method\n"
  "  if (NULL != inObject) {\n"
  "    macroValidObject (inObject, const cPtr_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << ") ;\n"
  "    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;\n"
  "    const PMSInt32 classIndex = info->mSlotID ;\n"
  "    categoryMethodSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " f = NULL ;\n"
  "    if (classIndex < gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ".count ()) {\n"
  "      f = gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (classIndex COMMA_HERE) ;\n"
  "    }\n"
  "    if (NULL == f) {\n"
  "       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;\n"
  "       while ((NULL == f) && (NULL != p)) {\n"
  "         if (p->mSlotID < gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ".count ()) {\n"
  "           f = gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (p->mSlotID COMMA_HERE) ;\n"
  "         }\n"
  "         p = p->mSuperclassDescriptor ;\n"
  "       }\n"
  "       gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ".forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;\n"
  "    }\n"
  "    f (inObject, " ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_4544 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_4544 = NULL ;
while (((operand_4544 = enumerator_4544.nextObject ()))) {
macroValidPointer (operand_4544) ;
if ((operand_4544->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (72))).boolValue ()) {
result << "constin_" ;
result << operand_4544->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else if ((operand_4544->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (74))).boolValue ()) {
result << "io_" ;
result << operand_4544->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else if ((operand_4544->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (76))).boolValue ()) {
result << "out_" ;
result << operand_4544->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else {
result << "in_" ;
result << operand_4544->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}
result << ", " ;
}
result << "inCompiler COMMA_THERE) ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'categoryMethodDeclaration' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_categoryMethodDeclaration (C_Compiler & inLexique,
                                const GGS_string& var_cas_CLASS_NAME,
                                const GGS_string& var_cas_METHOD_NAME,
                                const GGS_formalParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_CLASS_NAME.isBuilt ()
    && var_cas_METHOD_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((((GGS_string ("Category method '@")).operator_concat (var_cas_CLASS_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_METHOD_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "typedef void (*categoryMethodSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ") (" ;
columnMarker = result.currentColumn () ;
result << "const cPtr_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << " * inObject" ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_647 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_647 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_647 = enumerator_647.nextObject ()))) {
macroValidPointer (operand_647) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_647->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (11))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_647->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
}else if ((operand_647->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (13))).boolValue ()) {
result << "GALGAS_" ;
result << operand_647->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
}else if ((operand_647->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (15))).boolValue ()) {
result << "GALGAS_" ;
result << operand_647->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
}else {
result << "GALGAS_" ;
result << operand_647->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (18)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (18)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void enterCategoryMethod_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const PMSInt32 inClassIndex,\n"
  "               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "categoryMethodSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " inMethod) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void callCategoryMethod_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const cPtr_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << " * inObject" ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_2011 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_2011 = NULL ;
while (((operand_2011 = enumerator_2011.nextObject ()))) {
macroValidPointer (operand_2011) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_2011->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (34))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_2011->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (35)) ;
result << "  constin_" ;
result << operand_2011->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else if ((operand_2011->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (36))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2011->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (37)) ;
result << " & io_" ;
result << operand_2011->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else if ((operand_2011->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (38))).boolValue ()) {
result << "GALGAS_" ;
result << operand_2011->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (39)) ;
result << " & out_" ;
result << operand_2011->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else {
result << "GALGAS_" ;
result << operand_2011->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (41)) ;
result << " in_" ;
result << operand_2011->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'categoryMethodImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_categoryMethodImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_CLASS_NAME,
                                const GGS_string& var_cas_METHOD_NAME,
                                const GGS_formalParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST,
                                const GGS_string& var_cas_METHOD_IMPLEMENTATION) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_CLASS_NAME.isBuilt ()
    && var_cas_METHOD_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt ()
    && var_cas_METHOD_IMPLEMENTATION.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((((GGS_string ("Category method '@")).operator_concat (var_cas_CLASS_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_METHOD_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static TC_UniqueArray <categoryMethodSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << "> gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void enterCategoryMethod_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const PMSInt32 inClassIndex,\n"
  "               " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "categoryMethodSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " inMethod) {\n"
  "  gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ".forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void callCategoryMethod_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const cPtr_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << " * inObject" ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_1398 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_1398 = NULL ;
while (((operand_1398 = enumerator_1398.nextObject ()))) {
macroValidPointer (operand_1398) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_1398->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (21))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_1398->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (22)) ;
result << "  constin_" ;
result << operand_1398->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else if ((operand_1398->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (23))).boolValue ()) {
result << "GALGAS_" ;
result << operand_1398->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (24)) ;
result << " & io_" ;
result << operand_1398->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else if ((operand_1398->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (25))).boolValue ()) {
result << "GALGAS_" ;
result << operand_1398->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (26)) ;
result << " & out_" ;
result << operand_1398->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else {
result << "GALGAS_" ;
result << operand_1398->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (28)) ;
result << " in_" ;
result << operand_1398->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "//--- Drop output arguments\n" ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_2342 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_2342 = NULL ;
while (((operand_2342 = enumerator_2342.nextObject ()))) {
macroValidPointer (operand_2342) ;
if ((operand_2342->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (36))).boolValue ()) {
result << "  out_" ;
result << operand_2342->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
result << ".drop () ;\n" ;
}else {
}
}
result << "//--- Find method\n"
  "  if (NULL != inObject) {\n"
  "    macroValidObject (inObject, const cPtr_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << ") ;\n"
  "    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;\n"
  "    const PMSInt32 classIndex = info->mSlotID ;\n"
  "    categoryMethodSignature_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " f = NULL ;\n"
  "    if (classIndex < gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ".count ()) {\n"
  "      f = gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (classIndex COMMA_HERE) ;\n"
  "    }\n"
  "    if (NULL == f) {\n"
  "       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;\n"
  "       while ((NULL == f) && (NULL != p)) {\n"
  "         if (p->mSlotID < gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ".count ()) {\n"
  "           f = gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (p->mSlotID COMMA_HERE) ;\n"
  "         }\n"
  "         p = p->mSuperclassDescriptor ;\n"
  "       }\n"
  "       gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ".forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;\n"
  "    }\n"
  "    f (inObject, " ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_3901 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_3901 = NULL ;
while (((operand_3901 = enumerator_3901.nextObject ()))) {
macroValidPointer (operand_3901) ;
if ((operand_3901->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (61))).boolValue ()) {
result << "constin_" ;
result << operand_3901->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else if ((operand_3901->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (63))).boolValue ()) {
result << "io_" ;
result << operand_3901->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else if ((operand_3901->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (65))).boolValue ()) {
result << "out_" ;
result << operand_3901->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}else {
result << "in_" ;
result << operand_3901->mFormalArgumentName.ggs_string ().reader_identifierRepresentation () ;
}
result << ", " ;
}
result << "inCompiler COMMA_THERE) ;\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << var_cas_METHOD_IMPLEMENTATION ;
result << "\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static void defineCategoryMethod_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (void) {\n"
  "  enterCategoryMethod_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "kTypeDescriptor_GALGAS_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << ".mSlotID,\n"
  "        " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "categoryMethod_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ") ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static void freeCategoryMethod_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (void) {\n"
  "  gCategoryMethodTable_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ".free () ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "C_PrologueEpilogue g_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "defineCategoryMethod_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ",\n"
  "       " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "freeCategoryMethod_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ") ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'overridingCategoryMethodImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_overridingCategoryMethodImplementation (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_CLASS_NAME,
                                const GGS_string& var_cas_BASE_CLASS_NAME,
                                const GGS_string& var_cas_METHOD_NAME,
                                const GGS_string& var_cas_METHOD_IMPLEMENTATION) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_CLASS_NAME.isBuilt ()
    && var_cas_BASE_CLASS_NAME.isBuilt ()
    && var_cas_METHOD_NAME.isBuilt ()
    && var_cas_METHOD_IMPLEMENTATION.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((((GGS_string ("Overriding category method '@")).operator_concat (var_cas_CLASS_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_METHOD_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << var_cas_METHOD_IMPLEMENTATION ;
result << "\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static void defineCategoryMethod_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (void) {\n"
  "  enterCategoryMethod_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "kTypeDescriptor_GALGAS_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << ".mSlotID,\n"
  "        " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "categoryMethod_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ") ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "C_PrologueEpilogue g_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << " (defineCategoryMethod_" ;
result << var_cas_CLASS_NAME.reader_identifierRepresentation () ;
result << "_" ;
result << var_cas_METHOD_NAME.reader_identifierRepresentation () ;
result << ", NULL) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'filewrapperDeclaration' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_filewrapperDeclaration (C_Compiler & /* inLexique */,
                                const GGS_stringlist & var_cas_FILE_INDEX_STRING_LIST,
                                const GGS_string& var_cas_FILEWRAPPER_NAME) {
  C_String result ;
  const bool isBuilt = var_cas_FILE_INDEX_STRING_LIST.isBuilt ()
    && var_cas_FILEWRAPPER_NAME.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Filewrapper '")).operator_concat (var_cas_FILEWRAPPER_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
GGS_stringlist::cEnumerator enumerator_437 (var_cas_FILE_INDEX_STRING_LIST, true) ;
const GGS_stringlist::cElement * operand_437 = NULL ;
while (((operand_437 = enumerator_437.nextObject ()))) {
macroValidPointer (operand_437) ;
result << "extern const char * gWrapperFileContent_" ;
result << operand_437->mValue ;
result << "_" ;
result << var_cas_FILEWRAPPER_NAME.reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "extern const cDirectoryWrapper gWrapperDirectory_0_" ;
result << var_cas_FILEWRAPPER_NAME.reader_identifierRepresentation () ;
result << " ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'filewrapperImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_filewrapperImplementation (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_FILEWRAPPER_NAME,
                                const GGS_string& var_cas_FILEWRAPPER_IMPLEMENTATION) {
  C_String result ;
  const bool isBuilt = var_cas_FILEWRAPPER_NAME.isBuilt ()
    && var_cas_FILEWRAPPER_IMPLEMENTATION.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Filewrapper '")).operator_concat (var_cas_FILEWRAPPER_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << var_cas_FILEWRAPPER_IMPLEMENTATION ;
result << "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'routineDeclaration' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_routineDeclaration (C_Compiler & inLexique,
                                const GGS_string& var_cas_ROUTINE_NAME,
                                const GGS_formalParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_ROUTINE_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Routine '")).operator_concat (var_cas_ROUTINE_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void routine_" ;
result << var_cas_ROUTINE_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_488 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_488 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_488 = enumerator_488.nextObject ()))) {
macroValidPointer (operand_488) ;
if ((operand_488->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (9))).boolValue ()) {
result << "const GALGAS_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (10)) ;
result << " constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (10)) ;
}else if ((operand_488->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_SOURCE_FILE_AT_LINE (11))).boolValue ()) {
result << "GALGAS_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
result << " & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
}else if ((operand_488->mFormalArgumentPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (13))).boolValue ()) {
result << "GALGAS_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
result << " & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (14)) ;
}else {
result << "GALGAS_" ;
result << operand_488->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
result << " inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (16)) ;
}
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n"
  " " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'functionDeclaration' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_functionDeclaration (C_Compiler & inLexique,
                                const GGS_string& var_cas_FUNCTION_NAME,
                                const GGS_formalInputParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST,
                                const GGS_string& var_cas_RETURN_TYPE_IDENTIFIER) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_FUNCTION_NAME.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt ()
    && var_cas_RETURN_TYPE_IDENTIFIER.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Function '")).operator_concat (var_cas_FUNCTION_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_RETURN_TYPE_IDENTIFIER ;
result << " function_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_520 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_520 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_520 = enumerator_520.nextObject ()))) {
macroValidPointer (operand_520) ;
result << "const GALGAS_" ;
result << operand_520->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
result << " & constinArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (9)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'routineImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_routineImplementation (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_ROUTINE_NAME,
                                const GGS_string& var_cas_ROUTINE_IMPLEMENTATION) {
  C_String result ;
  const bool isBuilt = var_cas_ROUTINE_NAME.isBuilt ()
    && var_cas_ROUTINE_IMPLEMENTATION.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Routine '")).operator_concat (var_cas_ROUTINE_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << var_cas_ROUTINE_IMPLEMENTATION ;
result << "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'functionImplementation' template of 'semanticComponentGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_semanticComponentGenerationTemplate_functionImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_FUNCTION_NAME,
                                const GGS_string& var_cas_FUNCTION_IMPLEMENTATION,
                                const GGS_formalInputParameterListForGeneration & var_cas_FORMAL_ARGUMENT_LIST,
                                const GGS_string& var_cas_RETURN_TYPE_IDENTIFIER) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_FUNCTION_NAME.isBuilt ()
    && var_cas_FUNCTION_IMPLEMENTATION.isBuilt ()
    && var_cas_FORMAL_ARGUMENT_LIST.isBuilt ()
    && var_cas_RETURN_TYPE_IDENTIFIER.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("Function '")).operator_concat (var_cas_FUNCTION_NAME)).operator_concat (GGS_string ("'")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
result << var_cas_FUNCTION_IMPLEMENTATION ;
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "//  Function introspection                                                   *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "static const C_galgas_type_descriptor * functionArgs_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " [" ;
result << var_cas_FORMAL_ARGUMENT_LIST.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (12)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (12)) ;
result << "] = {\n" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_845 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_845 = NULL ;
while (((operand_845 = enumerator_845.nextObject ()))) {
macroValidPointer (operand_845) ;
result << "  & kTypeDescriptor_GALGAS_" ;
result << operand_845->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (15)) ;
result << ",\n" ;
}
result << "  NULL\n"
  "} ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
if ((var_cas_FORMAL_ARGUMENT_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "static GALGAS_object functionWithGenericHeader_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const cObjectArray & /* inEffectiveParameterArray */,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_location & /* inErrorLocation */\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  return function_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (inCompiler COMMA_THERE).reader_object (THERE) ;\n"
  "}\n" ;
}else {
result << "static GALGAS_object functionWithGenericHeader_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "C_Compiler * inCompiler,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const cObjectArray & inEffectiveParameterArray,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_location & inErrorLocation\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_2041 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_2041 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2041 = enumerator_2041.nextObject ()))) {
macroValidPointer (operand_2041) ;
result << "  const GALGAS_" ;
result << operand_2041->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (36)) ;
result << " operand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (36)) ;
result << " = GALGAS_" ;
result << operand_2041->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (36)) ;
result << "::extractObject (inEffectiveParameterArray.objectAtIndex (" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (36)) ;
result << " COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "  return function_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
GGS_formalInputParameterListForGeneration::cEnumerator enumerator_2451 (var_cas_FORMAL_ARGUMENT_LIST, true) ;
const GGS_formalInputParameterListForGeneration::cElement * operand_2451 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2451 = enumerator_2451.nextObject ()))) {
macroValidPointer (operand_2451) ;
result << "operand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (40)) ;
result << ", " ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << "inCompiler COMMA_THERE).reader_object (THERE) ;\n"
  "}\n" ;
}
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "C_galgas_function_descriptor functionDescriptor_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << var_cas_FUNCTION_NAME.reader_utf8Representation () ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "functionWithGenericHeader_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "& kTypeDescriptor_GALGAS_" ;
result << var_cas_RETURN_TYPE_IDENTIFIER ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << var_cas_FORMAL_ARGUMENT_LIST.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (51)) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "functionArgs_" ;
result << var_cas_FUNCTION_NAME.reader_identifierRepresentation () ;
result << ") ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@semanticDeclarationForGeneration.appendDeclaration1'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendDeclaration1 (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_16137
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_16137 != NULL) {
var_cas_outHeader = GGS_string ("") ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendDeclaration1'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1> gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration1 ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 (typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration1.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendDeclaration1 (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1
findCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration1.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration1 (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration1.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendDeclaration1 ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@routinePrototypeDeclarationForGeneration.appendDeclaration1'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__routinePrototypeDeclarationForGeneration__appendDeclaration1 (C_Compiler & inLexique,
                                const cPtr_routinePrototypeDeclarationForGeneration * operand_16350
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_16350 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_routineDeclaration (inLexique, operand_16350->mRoutineName, operand_16350->mFormalArgumentList) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@functionPrototypeDeclarationForGeneration.appendDeclaration1'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__functionPrototypeDeclarationForGeneration__appendDeclaration1 (C_Compiler & inLexique,
                                const cPtr_functionPrototypeDeclarationForGeneration * operand_16677
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_16677 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_functionDeclaration (inLexique, operand_16677->mFunctionName, operand_16677->mFormalArgumentList, operand_16677->mReturnType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (439))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@onceFunctionDeclarationForGeneration.appendDeclaration1' *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__onceFunctionDeclarationForGeneration__appendDeclaration1 (C_Compiler & inLexique,
                                const cPtr_onceFunctionDeclarationForGeneration * operand_17045
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_17045 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_functionDeclaration (inLexique, operand_17045->mFunctionName, GGS_formalInputParameterListForGeneration ::constructor_emptyList (), operand_17045->mReturnType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (449))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@classTypeForGeneration.appendDeclaration1'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__classTypeForGeneration__appendDeclaration1 (C_Compiler & inLexique,
                                const cPtr_classTypeForGeneration * operand_17430
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_17430 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_classTypeHeader1 (inLexique, operand_17430->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (457)), operand_17430->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (458)), ((operand_17430->mSuperClass.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (459))).isBuiltAndTrue () ? (GGS_string ("")) : (operand_17430->mSuperClass.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (459)))), operand_17430->mAllTypedAttributeList, operand_17430->mIsAbstract) ;
var_cas_outHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (inLexique, operand_17430->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (464)), operand_17430->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (465)), operand_17430->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (466)), operand_17430->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (467)), operand_17430->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (468)), operand_17430->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (469)), operand_17430->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (470)), operand_17430->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (471)), operand_17430->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (472)), operand_17430->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (473)), operand_17430->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (474)), operand_17430->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (475)))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@mapTypeForGeneration.appendDeclaration1'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapTypeForGeneration__appendDeclaration1 (C_Compiler & inLexique,
                                const cPtr_mapTypeForGeneration * operand_18375
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_18375 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_mapTypeHeader1 (inLexique, operand_18375->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (483)), operand_18375->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (484)), operand_18375->mTypedAttributeList) ;
var_cas_outHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (inLexique, operand_18375->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (488)), operand_18375->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (489)), operand_18375->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (490)), operand_18375->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (491)), operand_18375->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (492)), operand_18375->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (493)), operand_18375->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (494)), operand_18375->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (495)), operand_18375->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (496)), operand_18375->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (497)), operand_18375->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (498)), operand_18375->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (499)))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@structTypeForGeneration.appendDeclaration1'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__structTypeForGeneration__appendDeclaration1 (C_Compiler & inLexique,
                                const cPtr_structTypeForGeneration * operand_19216
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_19216 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_structTypeHeader1 (inLexique, operand_19216->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (507)), operand_19216->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (508)), operand_19216->mTypedAttributeList) ;
var_cas_outHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (inLexique, operand_19216->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (512)), operand_19216->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (513)), operand_19216->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (514)), operand_19216->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (515)), operand_19216->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (516)), operand_19216->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (517)), operand_19216->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (518)), operand_19216->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (519)), operand_19216->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (520)), operand_19216->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (521)), operand_19216->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (522)), operand_19216->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (523)))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@listTypeForGeneration.appendDeclaration1'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__listTypeForGeneration__appendDeclaration1 (C_Compiler & inLexique,
                                const cPtr_listTypeForGeneration * operand_20058
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_20058 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_listTypeHeader1 (inLexique, operand_20058->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (531)), operand_20058->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (532)), operand_20058->mTypedAttributeList) ;
var_cas_outHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (inLexique, operand_20058->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (536)), operand_20058->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (537)), operand_20058->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (538)), operand_20058->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (539)), operand_20058->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (540)), operand_20058->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (541)), operand_20058->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (542)), operand_20058->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (543)), operand_20058->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (544)), operand_20058->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (545)), operand_20058->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (546)), operand_20058->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (547)))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category reader '@sortedListTypeForGeneration.appendDeclaration1'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__sortedListTypeForGeneration__appendDeclaration1 (C_Compiler & inLexique,
                                const cPtr_sortedListTypeForGeneration * operand_20904
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_20904 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_sortedlistTypeHeader1 (inLexique, operand_20904->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (555)), operand_20904->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (556)), operand_20904->mTypedAttributeList) ;
var_cas_outHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (inLexique, operand_20904->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (560)), operand_20904->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (561)), operand_20904->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (562)), operand_20904->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (563)), operand_20904->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (564)), operand_20904->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (565)), operand_20904->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (566)), operand_20904->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (567)), operand_20904->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (568)), operand_20904->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (569)), operand_20904->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (570)), operand_20904->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (571)))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@enumTypeForGeneration.appendDeclaration1'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__enumTypeForGeneration__appendDeclaration1 (C_Compiler & inLexique,
                                const cPtr_enumTypeForGeneration * operand_21750
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_21750 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_enumTypeHeader1 (inLexique, operand_21750->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (579)), operand_21750->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (580)), operand_21750->mConstantList) ;
var_cas_outHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (inLexique, operand_21750->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (584)), operand_21750->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (585)), operand_21750->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (586)), operand_21750->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (587)), operand_21750->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (588)), operand_21750->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (589)), operand_21750->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (590)), operand_21750->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (591)), operand_21750->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (592)), operand_21750->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (593)), operand_21750->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (594)), operand_21750->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (595)))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "recursivlyEnumerateRegularFile"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_recursivlyEnumerateRegularFile (C_Compiler & inLexique,
                                const GGS_wrapperFileSortedList   var_cas_inFilewrapperFileSortedList,
                                const GGS_wrapperDirectorySortedList   var_cas_inFilewrapperDirectorySortedList,
                                GGS_stringlist  & var_cas_ioRegularFileIndexStringList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_recursivlyEnumerateRegularFile at %s:%d\n", __FILE__, __LINE__) ;
  #endif
{
GGS_wrapperFileSortedList::cEnumerator enumerator_22770 (var_cas_inFilewrapperFileSortedList, true) ;
const GGS_wrapperFileSortedList::cElement * operand_22770 = NULL ;
while (((operand_22770 = enumerator_22770.nextObject ()))) {
  macroValidPointer (operand_22770) ;
var_cas_ioRegularFileIndexStringList.addAssign_operation (var_cas_ioRegularFileIndexStringList.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (607))) ;
}
}
{
GGS_wrapperDirectorySortedList::cEnumerator enumerator_22918 (var_cas_inFilewrapperDirectorySortedList, true) ;
const GGS_wrapperDirectorySortedList::cElement * operand_22918 = NULL ;
while (((operand_22918 = enumerator_22918.nextObject ()))) {
  macroValidPointer (operand_22918) ;
::routine_recursivlyEnumerateRegularFile (inLexique,  operand_22918->mRegularFileSortedList,  operand_22918->mDirectorySortedList,  var_cas_ioRegularFileIndexStringList COMMA_SOURCE_FILE_AT_LINE (610)) ;
}
}
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_recursivlyEnumerateRegularFile\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@filewrapperDeclarationForGeneration.appendDeclaration1'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__filewrapperDeclarationForGeneration__appendDeclaration1 (C_Compiler & inLexique,
                                const cPtr_filewrapperDeclarationForGeneration * operand_23239
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_23239 != NULL) {
GGS_stringlist  var_cas_regularFileIndexStringList = GGS_stringlist ::constructor_emptyList () ;
::routine_recursivlyEnumerateRegularFile (inLexique,  operand_23239->mFilewrapperFileSortedList,  operand_23239->mFilewrapperDirectorySortedList,  var_cas_regularFileIndexStringList COMMA_SOURCE_FILE_AT_LINE (622)) ;
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_filewrapperDeclaration (inLexique, var_cas_regularFileIndexStringList, operand_23239->mFilewrapperName) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@abstractCategoryMethodForGeneration.appendDeclaration1'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__abstractCategoryMethodForGeneration__appendDeclaration1 (C_Compiler & inLexique,
                                const cPtr_abstractCategoryMethodForGeneration * operand_23769
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_23769 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_abstractCategoryMethodDeclaration (inLexique, operand_23769->mTypeName, operand_23769->mAbstractCategoryMethodName, operand_23769->mAbstractCategoryMethodFormalParameterList) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category reader '@categoryMethodForGeneration.appendDeclaration1'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__categoryMethodForGeneration__appendDeclaration1 (C_Compiler & inLexique,
                                const cPtr_categoryMethodForGeneration * operand_24150
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_24150 != NULL) {
var_cas_outHeader = template_filewrapper_semanticComponentGenerationTemplate_categoryMethodDeclaration (inLexique, operand_24150->mTypeName, operand_24150->mCategoryMethodName, operand_24150->mCategoryMethodFormalParameterList) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@semanticDeclarationForGeneration.appendDeclaration2'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendDeclaration2 (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_24815
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_24815 != NULL) {
var_cas_outHeader = GGS_string ("") ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendDeclaration2'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration2> gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration2 ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 (typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration2.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendDeclaration2 (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration2
findCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration2.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration2 (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration2.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendDeclaration2 ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@mapTypeForGeneration.appendDeclaration2'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapTypeForGeneration__appendDeclaration2 (C_Compiler & inLexique,
                                const cPtr_mapTypeForGeneration * operand_25008
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_25008 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_mapTypeHeader2 (inLexique, operand_25008->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (667)), operand_25008->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (668)), operand_25008->mTypedAttributeList) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@classTypeForGeneration.appendDeclaration2'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__classTypeForGeneration__appendDeclaration2 (C_Compiler & inLexique,
                                const cPtr_classTypeForGeneration * operand_25345
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_25345 != NULL) {
var_cas_outHeader = template_filewrapper_typeGenerationTemplate_classTypeHeader2 (inLexique, operand_25345->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (677)), operand_25345->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (678)), ((operand_25345->mSuperClass.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (679))).isBuiltAndTrue () ? (GGS_string ("")) : (operand_25345->mSuperClass.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (679)))), operand_25345->mTypedAttributeList, operand_25345->mAllTypedAttributeList, operand_25345->mIsAbstract, operand_25345->mAbstractMethodList, operand_25345->mMethodList) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticDeclarationForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendTypeGenericImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_26260
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_26260 != NULL) {
var_cas_outImplementation = GGS_string ("") ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation> gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendTypeGenericImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation
findCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendTypeGenericImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticTypeForGeneration.appendTypeGenericImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticTypeForGeneration__appendTypeGenericImplementation (C_Compiler & inLexique,
                                const cPtr_semanticTypeForGeneration * operand_26486
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_26486 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_genericTypeImplementation (inLexique, operand_26486->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (703)), operand_26486->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (704)), operand_26486->mTypeIndex.reader_mSuperType (inLexique COMMA_SOURCE_FILE_AT_LINE (705)), operand_26486->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (706))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticDeclarationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendSpecificImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_27217
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_27217 != NULL) {
var_cas_outImplementation = GGS_string ("") ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation> gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendSpecificImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation
findCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendSpecificImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category reader '@listmapTypeForGeneration.appendSpecificImplementation'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__listmapTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_listmapTypeForGeneration * operand_27439
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_27439 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_listmapTypeSpecificImplementation (inLexique, operand_27439->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (725)), operand_27439->mAssociatedListTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (726)), operand_27439->mAssociatedListTypedAttributeList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category reader '@mapTypeForGeneration.appendSpecificImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_mapTypeForGeneration * operand_27868
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_27868 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_mapTypeSpecificImplementation (inLexique, operand_27868->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (735)), operand_27868->mTypedAttributeList, operand_27868->mInsertMethodList, operand_27868->mSearchMethodList, operand_27868->mRemoveMethodList, operand_27868->mHasInsertOrReplaceModifier, operand_27868->mWithAccessorMap) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@sortedListTypeForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__sortedListTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_sortedListTypeForGeneration * operand_28353
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_28353 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_sortedlistTypeSpecificImplementation (inLexique, operand_28353->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (749)), operand_28353->mTypedAttributeList, operand_28353->mSortDescriptorList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@enumTypeForGeneration.appendSpecificImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__enumTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_enumTypeForGeneration * operand_28740
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_28740 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_enumTypeSpecificImplementation (inLexique, operand_28740->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (759)), operand_28740->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (760)), operand_28740->mConstantList, operand_28740->mEnumMessageList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@mapProxyTypeForGeneration.appendSpecificImplementation'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__mapProxyTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_mapProxyTypeForGeneration * operand_29138
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_29138 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_mapProxyTypeSpecificImplementation (inLexique, operand_29138->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (770)), operand_29138->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (771)), operand_29138->mAssociatedMapTypeProxy.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (772)), operand_29138->mAssociatedMapTypedAttributeList, operand_29138->mSearchMethodList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@classTypeForGeneration.appendSpecificImplementation'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__classTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_classTypeForGeneration * operand_29613
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_29613 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_classTypeSpecificImplementation (inLexique, operand_29613->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (782)), operand_29613->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (783)), ((operand_29613->mSuperClass.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (784))).isBuiltAndTrue () ? (GGS_string ("")) : (operand_29613->mSuperClass.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (784)))), operand_29613->mTypedAttributeList, operand_29613->mAllTypedAttributeList, operand_29613->mAllTypedAttributeList.reader_subListWithRange (inLexique, GGS_uint (0U), operand_29613->mAllTypedAttributeList.reader_length ().substract_operation (inLexique, operand_29613->mTypedAttributeList.reader_length () COMMA_SOURCE_FILE_AT_LINE (787)) COMMA_SOURCE_FILE_AT_LINE (787)), operand_29613->mIsAbstract, operand_29613->mAbstractMethodList, operand_29613->mMethodList, operand_29613->mInstanceMethodMap) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category reader '@structTypeForGeneration.appendSpecificImplementation'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__structTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_structTypeForGeneration * operand_30303
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_30303 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_structTypeSpecificImplementation (inLexique, operand_30303->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (799)), operand_30303->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (800)), operand_30303->mTypedAttributeList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@listTypeForGeneration.appendSpecificImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__listTypeForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_listTypeForGeneration * operand_30683
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_30683 != NULL) {
var_cas_outImplementation = template_filewrapper_typeGenerationTemplate_listTypeSpecificImplementation (inLexique, operand_30683->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (809)), operand_30683->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (810)), operand_30683->mTypedAttributeList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@routineImplementationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__routineImplementationForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_routineImplementationForGeneration * operand_31074
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_31074 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_routineImplementation (inLexique, operand_31074->mRoutineName, function_generateProcedure (inLexique, (GGS_string ("routine_")).operator_concat (operand_31074->mRoutineName.reader_identifierRepresentation ()), operand_31074->mFormalArgumentList, operand_31074->mRoutineInstructionList, GGS_bool (false), GGS_string ("C_Compiler"), GGS_bool (true), GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (820))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@functionImplementationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__functionImplementationForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_functionImplementationForGeneration * operand_31711
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_31711 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_functionImplementation (inLexique, operand_31711->mFunctionName, function_generateFunction (inLexique, (GGS_string ("function_")).operator_concat (operand_31711->mFunctionName.reader_identifierRepresentation ()), operand_31711->mFormalArgumentList, operand_31711->mFunctionInstructionList, GGS_string ("C_Compiler"), operand_31711->mReturnType.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (842)), operand_31711->mResultVariableCppName COMMA_SOURCE_FILE_AT_LINE (837)), operand_31711->mFormalArgumentList, operand_31711->mReturnType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (846))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@onceFunctionDeclarationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__onceFunctionDeclarationForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_onceFunctionDeclarationForGeneration * operand_32334
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_32334 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_functionImplementation (inLexique, operand_32334->mFunctionName, function_generateFunction (inLexique, (GGS_string ("function_")).operator_concat (operand_32334->mFunctionName.reader_identifierRepresentation ()), GGS_formalInputParameterListForGeneration ::constructor_emptyList (), operand_32334->mFunctionInstructionList, GGS_string ("C_Compiler"), operand_32334->mReturnType.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (860)), operand_32334->mResultVariableCppName COMMA_SOURCE_FILE_AT_LINE (855)), GGS_formalInputParameterListForGeneration ::constructor_emptyList (), operand_32334->mReturnType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (864))) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@abstractCategoryMethodForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__abstractCategoryMethodForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_abstractCategoryMethodForGeneration * operand_33018
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_33018 != NULL) {
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_abstractCategoryMethodImplementation (inLexique, operand_33018->mTypeName, operand_33018->mAbstractCategoryMethodName, operand_33018->mAbstractCategoryMethodFormalParameterList) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of function "generateCategoryMethod"             *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string function_generateCategoryMethod (C_Compiler & inLexique,
                                const GGS_string  var_cas_inClassName,
                                const GGS_string  var_cas_inBaseClassName,
                                const GGS_string  var_cas_inMethodName,
                                const GGS_formalParameterListForGeneration   var_cas_inFormalArgumentList,
                                const GGS_typedAttributeList   var_cas_inTypedAttributeList,
                                const GGS_semanticInstructionListForGeneration   var_cas_inInstructionList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER function_generateCategoryMethod at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_outGeneratedCode ;
GGS_stringset  var_cas_unusedVariableCppNameSet = GGS_stringset ::constructor_emptySet () ;
var_cas_unusedVariableCppNameSet.addAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (895))) ;
const GGS_bool cond_34193 = (var_cas_inBaseClassName).operator_isEqual (GGS_string ("")) ;
if (cond_34193.isBuiltAndTrue ()) {
var_cas_unusedVariableCppNameSet.addAssign_operation (GGS_string ("(* inObject)")) ;
}else if (cond_34193.isBuiltAndFalse ()) {
var_cas_unusedVariableCppNameSet.addAssign_operation (GGS_string ("(* object)")) ;
}
{
GGS_typedAttributeList::cEnumerator enumerator_34283 (var_cas_inTypedAttributeList, true) ;
const GGS_typedAttributeList::cElement * operand_34283 = NULL ;
while (((operand_34283 = enumerator_34283.nextObject ()))) {
  macroValidPointer (operand_34283) ;
const GGS_bool cond_34434 = (var_cas_inBaseClassName).operator_isEqual (GGS_string ("")) ;
if (cond_34434.isBuiltAndTrue ()) {
var_cas_unusedVariableCppNameSet.addAssign_operation ((GGS_string ("inObject->mAttribute_")).operator_concat (operand_34283->mAttributeName.ggs_string ().reader_identifierRepresentation ())) ;
}else if (cond_34434.isBuiltAndFalse ()) {
var_cas_unusedVariableCppNameSet.addAssign_operation ((GGS_string ("object->mAttribute_")).operator_concat (operand_34283->mAttributeName.ggs_string ().reader_identifierRepresentation ())) ;
}
}
}
{
GGS_formalParameterListForGeneration::cEnumerator enumerator_34597 (var_cas_inFormalArgumentList, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_34597 = NULL ;
while (((operand_34597 = enumerator_34597.nextObject ()))) {
  macroValidPointer (operand_34597) ;
const GGS_bool cond_34754 = (operand_34597->mFormalArgumentPassingMode).operator_isNotEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (909))) ;
if (cond_34754.isBuiltAndTrue ()) {
var_cas_unusedVariableCppNameSet.addAssign_operation (operand_34597->mFormalArgumentCppName) ;
}
}
}
GGS_uint  var_cas_temporaryVariableIndex = GGS_uint (0U) ;
GGS_string var_cas_routineBody = GGS_string ("") ;
var_cas_routineBody.modifier_incIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (916)) ;
{
GGS_semanticInstructionListForGeneration::cEnumerator enumerator_34928 (var_cas_inInstructionList, true) ;
const GGS_semanticInstructionListForGeneration::cElement * operand_34928 = NULL ;
while (((operand_34928 = enumerator_34928.nextObject ()))) {
  macroValidPointer (operand_34928) ;
{ typeCategoryMethod__semanticInstructionForGeneration__generateInstruction method = findCategoryMethod__semanticInstructionForGeneration__generateInstruction (operand_34928->mInstruction.galgasObjectRunTimeInfo ()) ;
  if (method != NULL) {
    method (inLexique, operand_34928->mInstruction (HERE), var_cas_temporaryVariableIndex, var_cas_unusedVariableCppNameSet, var_cas_routineBody COMMA_SOURCE_FILE_AT_LINE (918)) ;
  }
}
}
}
var_cas_routineBody.modifier_decIndentation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (920)) ;
var_cas_outGeneratedCode = ((((GGS_string ("static void categoryMethod_")).operator_concat (var_cas_inClassName.reader_identifierRepresentation ())).operator_concat (GGS_string ("_"))).operator_concat (var_cas_inMethodName.reader_identifierRepresentation ())).operator_concat (GGS_string (" (")) ;
const GGS_uint  var_cas_colRef = var_cas_outGeneratedCode.reader_currentColumn () ;
const GGS_bool cond_35450 = (var_cas_inBaseClassName).operator_isEqual (GGS_string ("")) ;
if (cond_35450.isBuiltAndTrue ()) {
var_cas_outGeneratedCode.appendCString ("const cPtr_") ;
var_cas_outGeneratedCode.dotAssign_operation (var_cas_inClassName.reader_identifierRepresentation ()) ;
var_cas_outGeneratedCode.appendCString (" * ") ;
}else if (cond_35450.isBuiltAndFalse ()) {
var_cas_outGeneratedCode.appendCString ("const cPtr_") ;
var_cas_outGeneratedCode.dotAssign_operation (var_cas_inBaseClassName.reader_identifierRepresentation ()) ;
var_cas_outGeneratedCode.appendCString (" * ") ;
}
GGS_bool var_cas_currentObjectIsUnused ;
const GGS_bool cond_35706 = (var_cas_inBaseClassName).operator_isEqual (GGS_string ("")) ;
if (cond_35706.isBuiltAndTrue ()) {
var_cas_currentObjectIsUnused = var_cas_unusedVariableCppNameSet.reader_hasKey (GGS_string ("(* inObject)")) ;
}else if (cond_35706.isBuiltAndFalse ()) {
var_cas_currentObjectIsUnused = var_cas_unusedVariableCppNameSet.reader_hasKey (GGS_string ("(* object)")) ;
}
{
GGS_typedAttributeList::cEnumerator enumerator_35827 (var_cas_inTypedAttributeList, true) ;
const GGS_typedAttributeList::cElement * operand_35827 = NULL ;
while (((operand_35827 = enumerator_35827.nextObject ()))
    && (var_cas_currentObjectIsUnused.isBuiltAndTrue ())) {
  macroValidPointer (operand_35827) ;
const GGS_bool cond_36037 = (var_cas_inBaseClassName).operator_isEqual (GGS_string ("")) ;
if (cond_36037.isBuiltAndTrue ()) {
var_cas_currentObjectIsUnused = var_cas_unusedVariableCppNameSet.reader_hasKey ((GGS_string ("inObject->mAttribute_")).operator_concat (operand_35827->mAttributeName.ggs_string ().reader_identifierRepresentation ())) ;
}else if (cond_36037.isBuiltAndFalse ()) {
var_cas_currentObjectIsUnused = var_cas_unusedVariableCppNameSet.reader_hasKey ((GGS_string ("object->mAttribute_")).operator_concat (operand_35827->mAttributeName.ggs_string ().reader_identifierRepresentation ())) ;
}
}
}
const GGS_bool cond_36282 = var_cas_currentObjectIsUnused ;
if (cond_36282.isBuiltAndTrue ()) {
var_cas_outGeneratedCode.appendCString ("/* inObject */") ;
}else if (cond_36282.isBuiltAndFalse ()) {
var_cas_outGeneratedCode.appendCString ("inObject") ;
}
{
GGS_formalParameterListForGeneration::cEnumerator enumerator_36366 (var_cas_inFormalArgumentList, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_36366 = NULL ;
while (((operand_36366 = enumerator_36366.nextObject ()))) {
  macroValidPointer (operand_36366) ;
var_cas_outGeneratedCode.appendCString (",\n") ;
var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (950)) ;
switch (operand_36366->mFormalArgumentPassingMode.enumValue ()) {
case GGS_formalArgumentPassingModeAST::enum_argumentConstantIn:
  {
var_cas_outGeneratedCode.appendCString ("const GALGAS_") ;
var_cas_outGeneratedCode.dotAssign_operation (operand_36366->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (953))) ;
var_cas_outGeneratedCode.appendCString (" ") ;
  }
  break ;
case GGS_formalArgumentPassingModeAST::enum_argumentInOut:
  {
var_cas_outGeneratedCode.appendCString ("GALGAS_") ;
var_cas_outGeneratedCode.dotAssign_operation (operand_36366->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (955))) ;
var_cas_outGeneratedCode.appendCString (" & ") ;
  }
  break ;
case GGS_formalArgumentPassingModeAST::enum_argumentOut:
  {
var_cas_outGeneratedCode.appendCString ("GALGAS_") ;
var_cas_outGeneratedCode.dotAssign_operation (operand_36366->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (957))) ;
var_cas_outGeneratedCode.appendCString (" & ") ;
  }
  break ;
case GGS_formalArgumentPassingModeAST::enum_argumentIn:
  {
var_cas_outGeneratedCode.appendCString ("GALGAS_") ;
var_cas_outGeneratedCode.dotAssign_operation (operand_36366->mFormalArgumentType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (959))) ;
var_cas_outGeneratedCode.appendCString (" ") ;
  }
  break ;
case GGS_formalArgumentPassingModeAST::kNotBuilt:
  break ;
}
const GGS_bool cond_37144 = var_cas_unusedVariableCppNameSet.reader_hasKey (operand_36366->mFormalArgumentCppName) ;
if (cond_37144.isBuiltAndTrue ()) {
var_cas_outGeneratedCode.appendCString ("/* ") ;
var_cas_outGeneratedCode.dotAssign_operation (operand_36366->mFormalArgumentCppName) ;
var_cas_outGeneratedCode.appendCString (" */") ;
}else if (cond_37144.isBuiltAndFalse ()) {
var_cas_outGeneratedCode.dotAssign_operation (operand_36366->mFormalArgumentCppName) ;
}
}
}
var_cas_outGeneratedCode.appendCString (",\n") ;
var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (969)) ;
var_cas_outGeneratedCode.appendCString ("C_Compiler * ") ;
const GGS_bool cond_37506 = var_cas_unusedVariableCppNameSet.reader_hasKey (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (971))) ;
if (cond_37506.isBuiltAndTrue ()) {
var_cas_outGeneratedCode.appendCString ("/* ") ;
var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (972))) ;
var_cas_outGeneratedCode.appendCString (" */") ;
}else if (cond_37506.isBuiltAndFalse ()) {
var_cas_outGeneratedCode.dotAssign_operation (function_compilerCppName (inLexique COMMA_SOURCE_FILE_AT_LINE (974))) ;
}
var_cas_outGeneratedCode.appendCString ("\n") ;
var_cas_outGeneratedCode.modifier_appendSpacesUntilColumn (inLexique, var_cas_colRef COMMA_SOURCE_FILE_AT_LINE (977)) ;
var_cas_outGeneratedCode.appendCString ("COMMA_UNUSED_LOCATION_ARGS") ;
var_cas_outGeneratedCode.appendCString (") {\n") ;
{
  GGS_uint var_cas_IDX (true, 0) ;
GGS_formalParameterListForGeneration::cEnumerator enumerator_37793 (var_cas_inFormalArgumentList, true) ;
const GGS_formalParameterListForGeneration::cElement * operand_37793 = NULL ;
while (((operand_37793 = enumerator_37793.nextObject ()))) {
  macroValidPointer (operand_37793) ;
switch (operand_37793->mFormalArgumentPassingMode.enumValue ()) {
case GGS_formalArgumentPassingModeAST::enum_argumentOut:
  {
var_cas_outGeneratedCode.appendCString ("  ") ;
var_cas_outGeneratedCode.dotAssign_operation (operand_37793->mFormalArgumentCppName) ;
var_cas_outGeneratedCode.appendCString (".drop () ; // Release 'out' argument\n") ;
  }
  break ;
case GGS_formalArgumentPassingModeAST::enum_argumentConstantIn:
case GGS_formalArgumentPassingModeAST::enum_argumentIn:
case GGS_formalArgumentPassingModeAST::enum_argumentInOut:
  {
  }
  break ;
case GGS_formalArgumentPassingModeAST::kNotBuilt:
  break ;
}
  var_cas_IDX.mValue ++ ;
}
}
const GGS_bool cond_38447 = ((var_cas_inBaseClassName).operator_isNotEqual (GGS_string (""))).operator_and ((var_cas_currentObjectIsUnused).operator_not ()) ;
if (cond_38447.isBuiltAndTrue ()) {
var_cas_outGeneratedCode.appendCString ("  const cPtr_") ;
var_cas_outGeneratedCode.dotAssign_operation (var_cas_inClassName.reader_identifierRepresentation ()) ;
var_cas_outGeneratedCode.appendCString (" * object = (const cPtr_") ;
var_cas_outGeneratedCode.dotAssign_operation (var_cas_inClassName.reader_identifierRepresentation ()) ;
var_cas_outGeneratedCode.appendCString (" *) inObject ;\n") ;
var_cas_outGeneratedCode.appendCString ("  macroValidObject (object, const cPtr_") ;
var_cas_outGeneratedCode.dotAssign_operation (var_cas_inClassName.reader_identifierRepresentation ()) ;
var_cas_outGeneratedCode.appendCString (") ;\n") ;
}
var_cas_outGeneratedCode.dotAssign_operation (var_cas_routineBody) ;
var_cas_outGeneratedCode.appendCString ("}") ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE function_generateCategoryMethod\n") ;
  #endif
  return var_cas_outGeneratedCode ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_generateCategoryMethod (C_Compiler & inLexique,
                           const GGS_objectlist & inEffectiveParameterArray,
                           const GGS_location & inErrorLocation
                           COMMA_LOCATION_ARGS) {
  const GGS_string arg_0 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (0) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_1 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (1) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string arg_2 = GGS_string::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (2) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_formalParameterListForGeneration  arg_3 = GGS_formalParameterListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (3) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_typedAttributeList  arg_4 = GGS_typedAttributeList ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (4) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_semanticInstructionListForGeneration  arg_5 = GGS_semanticInstructionListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (5) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_string result = function_generateCategoryMethod (inLexique,
                            arg_0,
                            arg_1,
                            arg_2,
                            arg_3,
                            arg_4,
                            arg_5
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

static const C_galgas_type_descriptorEX *
kArgumentTypeList_generateCategoryMethod [6] = {& kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_string,
                              & kTypeDescriptor_GGS_formalParameterListForGeneration ,
                              & kTypeDescriptor_GGS_typedAttributeList ,
                              & kTypeDescriptor_GGS_semanticInstructionListForGeneration } ;

const C_galgas_function_descriptorEX
kFunction_descriptor_generateCategoryMethod ("generateCategoryMethod",
                              functionForGenericCall_generateCategoryMethod,
                              & kTypeDescriptor_GGS_string,
                              6,
                              kArgumentTypeList_generateCategoryMethod) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@categoryMethodForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__categoryMethodForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_categoryMethodForGeneration * operand_38690
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_38690 != NULL) {
const GGS_string var_cas_methodImplementation = function_generateCategoryMethod (inLexique, operand_38690->mTypeName, GGS_string (""), operand_38690->mCategoryMethodName, operand_38690->mCategoryMethodFormalParameterList, operand_38690->mTypedAttributeList, operand_38690->mSemanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1001)) ;
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_categoryMethodImplementation (inLexique, operand_38690->mTypeName, operand_38690->mCategoryMethodName, operand_38690->mCategoryMethodFormalParameterList, var_cas_methodImplementation) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@overridingCategoryMethodForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__overridingCategoryMethodForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_overridingCategoryMethodForGeneration * operand_39339
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_39339 != NULL) {
const GGS_string var_cas_methodImplementation = function_generateCategoryMethod (inLexique, operand_39339->mTypeName, operand_39339->mBaseTypeName, operand_39339->mCategoryMethodName, operand_39339->mCategoryMethodFormalParameterList, operand_39339->mTypedAttributeList, operand_39339->mSemanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1020)) ;
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_overridingCategoryMethodImplementation (inLexique, operand_39339->mTypeName, operand_39339->mBaseTypeName, operand_39339->mCategoryMethodName, var_cas_methodImplementation) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "generateWrapperContents"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generateWrapperContents (C_Compiler & inLexique,
                                const GGS_string  var_cas_inFilewrapperName,
                                const GGS_string  var_cas_inFilewrapperDirectory,
                                const GGS_uint   var_cas_inFilewrapperDirectoryIndex,
                                const GGS_wrapperFileSortedList   var_cas_inFilewrapperRegularFileSortedList,
                                const GGS_wrapperDirectorySortedList   var_cas_inFilewrapperDirectorySortedList,
                                GGS_string & var_cas_ioImplementation
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generateWrapperContents at %s:%d\n", __FILE__, __LINE__) ;
  #endif
{
GGS_wrapperFileSortedList::cEnumerator enumerator_40270 (var_cas_inFilewrapperRegularFileSortedList, true) ;
const GGS_wrapperFileSortedList::cElement * operand_40270 = NULL ;
while (((operand_40270 = enumerator_40270.nextObject ()))) {
  macroValidPointer (operand_40270) ;
const GGS_string var_cas_contents = GGS_string::constructor_stringWithContentsOfFile (inLexique, operand_40270->mAbsoluteFilePath COMMA_SOURCE_FILE_AT_LINE (1048)) ;
var_cas_ioImplementation.appendCString ("//--- File '") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperDirectory) ;
var_cas_ioImplementation.appendCString ("/") ;
var_cas_ioImplementation.dotAssign_operation (operand_40270->mRegularFileName) ;
var_cas_ioImplementation.appendCString ("'\n"
  "\n"
"const char * gWrapperFileContent_") ;
var_cas_ioImplementation.dotAssign_operation (operand_40270->mWrapperFileIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1051))) ;
var_cas_ioImplementation.appendCString ("_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperName.reader_identifierRepresentation ()) ;
var_cas_ioImplementation.appendCString (" = ") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_contents.reader_utf8Representation ()) ;
var_cas_ioImplementation.appendCString (" ;\n"
  "\n"
"static const cRegularFileWrapper gWrapperFile_") ;
var_cas_ioImplementation.dotAssign_operation (operand_40270->mWrapperFileIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1054))) ;
var_cas_ioImplementation.appendCString ("_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperName.reader_identifierRepresentation ()) ;
var_cas_ioImplementation.appendCString (" (\n"
"  ") ;
var_cas_ioImplementation.dotAssign_operation (operand_40270->mRegularFileName.reader_utf8Representation ()) ;
var_cas_ioImplementation.appendCString (",\n"
"  ") ;
var_cas_ioImplementation.dotAssign_operation (operand_40270->mRegularFileName.reader_pathExtension ().reader_utf8Representation ()) ;
var_cas_ioImplementation.appendCString (",\n"
"  gWrapperFileContent_") ;
var_cas_ioImplementation.dotAssign_operation (operand_40270->mWrapperFileIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1058))) ;
var_cas_ioImplementation.appendCString ("_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperName.reader_identifierRepresentation ()) ;
var_cas_ioImplementation.appendCString ("\n"
") ;\n"
  "\n") ;
}
}
{
GGS_wrapperDirectorySortedList::cEnumerator enumerator_41155 (var_cas_inFilewrapperDirectorySortedList, true) ;
const GGS_wrapperDirectorySortedList::cElement * operand_41155 = NULL ;
while (((operand_41155 = enumerator_41155.nextObject ()))) {
  macroValidPointer (operand_41155) ;
::routine_generateWrapperContents (inLexique,  var_cas_inFilewrapperName,  operand_41155->mDirectoryName,  operand_41155->mWrapperDirectoryIndex,  operand_41155->mRegularFileSortedList,  operand_41155->mDirectorySortedList,  var_cas_ioImplementation COMMA_SOURCE_FILE_AT_LINE (1063)) ;
}
}
var_cas_ioImplementation.appendCString ("//--- All files of '") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperDirectory) ;
var_cas_ioImplementation.appendCString ("' directory\n"
  "\n"
"static const cRegularFileWrapper * gWrapperAllFiles_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperName.reader_identifierRepresentation ()) ;
var_cas_ioImplementation.appendCString ("_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperDirectoryIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1075))) ;
var_cas_ioImplementation.appendCString (" [") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperRegularFileSortedList.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (1076)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1076))) ;
var_cas_ioImplementation.appendCString ("] = {\n") ;
{
GGS_wrapperFileSortedList::cEnumerator enumerator_41773 (var_cas_inFilewrapperRegularFileSortedList, true) ;
const GGS_wrapperFileSortedList::cElement * operand_41773 = NULL ;
while (((operand_41773 = enumerator_41773.nextObject ()))) {
  macroValidPointer (operand_41773) ;
var_cas_ioImplementation.appendCString ("  & gWrapperFile_") ;
var_cas_ioImplementation.dotAssign_operation (operand_41773->mWrapperFileIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1078))) ;
var_cas_ioImplementation.appendCString ("_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperName.reader_identifierRepresentation ()) ;
var_cas_ioImplementation.appendCString (",\n") ;
}
}
var_cas_ioImplementation.appendCString ("  NULL\n"
"} ;\n"
  "\n") ;
var_cas_ioImplementation.appendCString ("//--- All sub-directories of '") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperDirectory) ;
var_cas_ioImplementation.appendCString ("' directory\n"
  "\n"
"static const cDirectoryWrapper * gWrapperAllDirectories_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperName.reader_identifierRepresentation ()) ;
var_cas_ioImplementation.appendCString ("_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperDirectoryIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1085))) ;
var_cas_ioImplementation.appendCString (" [") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperDirectorySortedList.reader_length ().add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (1086)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1086))) ;
var_cas_ioImplementation.appendCString ("] = {\n") ;
{
GGS_wrapperDirectorySortedList::cEnumerator enumerator_42399 (var_cas_inFilewrapperDirectorySortedList, true) ;
const GGS_wrapperDirectorySortedList::cElement * operand_42399 = NULL ;
while (((operand_42399 = enumerator_42399.nextObject ()))) {
  macroValidPointer (operand_42399) ;
var_cas_ioImplementation.appendCString ("  & gWrapperDirectory_") ;
var_cas_ioImplementation.dotAssign_operation (operand_42399->mWrapperDirectoryIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1088))) ;
var_cas_ioImplementation.appendCString ("_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperName.reader_identifierRepresentation ()) ;
var_cas_ioImplementation.appendCString (",\n") ;
}
}
var_cas_ioImplementation.appendCString ("  NULL\n"
"} ;\n"
  "\n") ;
var_cas_ioImplementation.appendCString ("//--- Directory '") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperDirectory) ;
var_cas_ioImplementation.appendCString ("'\n"
  "\n"
"const cDirectoryWrapper gWrapperDirectory_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperDirectoryIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1094))) ;
var_cas_ioImplementation.appendCString ("_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperName.reader_identifierRepresentation ()) ;
var_cas_ioImplementation.appendCString (" (\n"
"  ") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperDirectory.reader_utf8Representation ()) ;
var_cas_ioImplementation.appendCString (",\n"
"  ") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperRegularFileSortedList.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1097))) ;
var_cas_ioImplementation.appendCString (",\n"
"  gWrapperAllFiles_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperName.reader_identifierRepresentation ()) ;
var_cas_ioImplementation.appendCString ("_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperDirectoryIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1098))) ;
var_cas_ioImplementation.appendCString (",\n"
"  ") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperDirectorySortedList.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1099))) ;
var_cas_ioImplementation.appendCString (",\n"
"  gWrapperAllDirectories_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperName.reader_identifierRepresentation ()) ;
var_cas_ioImplementation.appendCString ("_") ;
var_cas_ioImplementation.dotAssign_operation (var_cas_inFilewrapperDirectoryIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1100))) ;
var_cas_ioImplementation.appendCString ("\n"
") ;\n"
  "\n") ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generateWrapperContents\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@filewrapperDeclarationForGeneration.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__filewrapperDeclarationForGeneration__appendSpecificImplementation (C_Compiler & inLexique,
                                const cPtr_filewrapperDeclarationForGeneration * operand_43530
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_43530 != NULL) {
GGS_string var_cas_filewrapperImplementation = GGS_string ("") ;
::routine_generateWrapperContents (inLexique,  operand_43530->mFilewrapperName,  GGS_string (""),  GGS_uint (0U),  operand_43530->mFilewrapperFileSortedList,  operand_43530->mFilewrapperDirectorySortedList,  var_cas_filewrapperImplementation COMMA_SOURCE_FILE_AT_LINE (1108)) ;
var_cas_outImplementation = template_filewrapper_semanticComponentGenerationTemplate_filewrapperImplementation (inLexique, operand_43530->mFilewrapperName, var_cas_filewrapperImplementation) ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticGeneration (void) {
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 (category_reader__semanticDeclarationForGeneration__appendDeclaration1, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__routinePrototypeDeclarationForGeneration__appendDeclaration1, gClassInfoFor__routinePrototypeDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__functionPrototypeDeclarationForGeneration__appendDeclaration1, gClassInfoFor__functionPrototypeDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__onceFunctionDeclarationForGeneration__appendDeclaration1, gClassInfoFor__onceFunctionDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__classTypeForGeneration__appendDeclaration1, gClassInfoFor__classTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__mapTypeForGeneration__appendDeclaration1, gClassInfoFor__mapTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__structTypeForGeneration__appendDeclaration1, gClassInfoFor__structTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__listTypeForGeneration__appendDeclaration1, gClassInfoFor__listTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__sortedListTypeForGeneration__appendDeclaration1, gClassInfoFor__sortedListTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__enumTypeForGeneration__appendDeclaration1, gClassInfoFor__enumTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__filewrapperDeclarationForGeneration__appendDeclaration1, gClassInfoFor__filewrapperDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__abstractCategoryMethodForGeneration__appendDeclaration1, gClassInfoFor__abstractCategoryMethodForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration1) category_reader__categoryMethodForGeneration__appendDeclaration1, gClassInfoFor__categoryMethodForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 (category_reader__semanticDeclarationForGeneration__appendDeclaration2, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration2) category_reader__mapTypeForGeneration__appendDeclaration2, gClassInfoFor__mapTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 ((typeCategoryReader__semanticDeclarationForGeneration__appendDeclaration2) category_reader__classTypeForGeneration__appendDeclaration2, gClassInfoFor__classTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (category_reader__semanticDeclarationForGeneration__appendTypeGenericImplementation, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation) category_reader__semanticTypeForGeneration__appendTypeGenericImplementation, gClassInfoFor__semanticTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (category_reader__semanticDeclarationForGeneration__appendSpecificImplementation, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__listmapTypeForGeneration__appendSpecificImplementation, gClassInfoFor__listmapTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__mapTypeForGeneration__appendSpecificImplementation, gClassInfoFor__mapTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__sortedListTypeForGeneration__appendSpecificImplementation, gClassInfoFor__sortedListTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__enumTypeForGeneration__appendSpecificImplementation, gClassInfoFor__enumTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__mapProxyTypeForGeneration__appendSpecificImplementation, gClassInfoFor__mapProxyTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__classTypeForGeneration__appendSpecificImplementation, gClassInfoFor__classTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__structTypeForGeneration__appendSpecificImplementation, gClassInfoFor__structTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__listTypeForGeneration__appendSpecificImplementation, gClassInfoFor__listTypeForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__routineImplementationForGeneration__appendSpecificImplementation, gClassInfoFor__routineImplementationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__functionImplementationForGeneration__appendSpecificImplementation, gClassInfoFor__functionImplementationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__onceFunctionDeclarationForGeneration__appendSpecificImplementation, gClassInfoFor__onceFunctionDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__abstractCategoryMethodForGeneration__appendSpecificImplementation, gClassInfoFor__abstractCategoryMethodForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__categoryMethodForGeneration__appendSpecificImplementation, gClassInfoFor__categoryMethodForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__overridingCategoryMethodForGeneration__appendSpecificImplementation, gClassInfoFor__overridingCategoryMethodForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation) category_reader__filewrapperDeclarationForGeneration__appendSpecificImplementation, gClassInfoFor__filewrapperDeclarationForGeneration.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_semanticGeneration (void) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration1.free () ;
  gDispatchTableForReader__semanticDeclarationForGeneration__appendDeclaration2.free () ;
  gDispatchTableForReader__semanticDeclarationForGeneration__appendTypeGenericImplementation.free () ;
  gDispatchTableForReader__semanticDeclarationForGeneration__appendSpecificImplementation.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticGeneration (prologueRoutineFor_semanticGeneration, epilogueRoutineFor_semanticGeneration) ;

//---------------------------------------------------------------------------*

