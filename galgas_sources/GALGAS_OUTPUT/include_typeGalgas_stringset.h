//---------------------------------------------------------------------------*
//                                                                           *
//                  File 'include_typeGalgas_stringset.h'                    *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                      april 1st, 2007, at 14h44'41"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_typeGalgas_stringset'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_typeGalgas_stringset : public cPtr_AC_galgasType {
  private : typedef cPtr_AC_galgasType inherited ;
//--- START OF USER ZONE 2

public : virtual void generateAttributeGetLexicalValue (const C_String & /* inAttributeName */,
                                                        AC_OutputStream & /* inCppFile */) const {}

public : virtual void generateAttributeDeclaration (const GGS_lstring & nom,
                                                    AC_OutputStream & inHfile) const ;

public : virtual void generateAttributeInitialization (const GGS_lstring & nom,
                                                       AC_OutputStream & inCppFile) const ;

public : virtual void generateCppClassName (AC_OutputStream & fichier) const ;

//--- END OF USER ZONE 2

//--- Constructor
  public : cPtr_typeGalgas_stringset (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_typeGalgas_stringset (void) {}
  #endif

//--- Attributes
//--- Method 'getTypeName'
  public : virtual void method_getTypeName (C_Compiler &,
                                GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Method 'handleConstructorCall'
  public : virtual void method_handleConstructorCall (C_Compiler &,
                                GGS_lstring  ,
                                GGS_typeListeAttributsSemantiques & 
                                COMMA_LOCATION_ARGS) ;

//--- Method 'handleAddAssignOperatorCall'
  public : virtual void method_handleAddAssignOperatorCall (C_Compiler &,
                                GGS_location  ,
                                GGS_typeListeAttributsSemantiques & 
                                COMMA_LOCATION_ARGS) ;

//--- Method 'handleMinusAssignOperatorCall'
  public : virtual void method_handleMinusAssignOperatorCall (C_Compiler &,
                                GGS_location  ,
                                GGS_typeListeAttributsSemantiques & 
                                COMMA_LOCATION_ARGS) ;

//--- Method 'acceptForeachInstruction'
  public : virtual void method_acceptForeachInstruction (C_Compiler &,
                                GGS_lstring  ,
                                GGS_typeListeAttributsSemantiques & ,
                                GGS_localConstantBuildStyleEnum& 
                                COMMA_LOCATION_ARGS) ;

  public : virtual const char * message_messageGalgasType (void) const ;
  public : static const char * static_string_message_messageGalgasType (void) ;
//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;
} ;

//---------------------------------------------------------------------------*

