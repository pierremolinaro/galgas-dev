//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'semanticsModelBuilder.cpp'                      *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                       may 17th, 2007, at 20h23'44"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "semanticsModelBuilder.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticsModelBuilder.ggs", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//#define DEBUG_TRACE_ENABLED

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//   Implementation of production rule 'semantics_component_start_symbol'    *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticsComponentRoot semanticsModelBuilder::
semanticsModelBuilder::
pr_semantics_component_start_symbol_semanticsModelBuilder_56_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<semantics_component_start_symbol>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mSemanticsComponentName ;
  GGS_lstringlist  var_cas_mImportedComponentFileNameList ;
  GGS_semanticDeclarationList  var_cas_mSemanticDeclarationList ;
  var_cas_mSemanticDeclarationList = GGS_semanticDeclarationList::constructor_emptyList (_inLexique COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$semantics$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mSemanticsComponentName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$:$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  var_cas_mImportedComponentFileNameList = GGS_lstringlist::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semanticsModelBuilder_0 (_inLexique)) {
        case 2 : {
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$import$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_import) COMMA_HERE) ;
          switch (select_semanticsModelBuilder_1 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_importedComponentFileName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_importedComponentFileName) ;
              #ifdef DEBUG_TRACE_ENABLED
                { C_String message_ (" ?") ;
                  message_ << ' ' << _inLexique._attributeValue_tokenString () ;
                  _inLexique.didParseTerminal ("$literal_string$", message_) ;
                }
              #endif
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              var_cas_mImportedComponentFileNameList._addAssign_operation (var_cas_importedComponentFileName) ;
              } break ;
            case 2 : {
              #ifdef DEBUG_TRACE_ENABLED
                { C_String message_ ;
                  _inLexique.didParseTerminal ("$semantics$", message_) ;
                }
              #endif
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
              #ifdef DEBUG_TRACE_ENABLED
                { C_String message_ ;
                  _inLexique.didParseTerminal ("$identifier$", message_) ;
                }
              #endif
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              #ifdef DEBUG_TRACE_ENABLED
                { C_String message_ ;
                  _inLexique.didParseTerminal ("$in$", message_) ;
                }
              #endif
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              #ifdef DEBUG_TRACE_ENABLED
                { C_String message_ ;
                  _inLexique.didParseTerminal ("$literal_string$", message_) ;
                }
              #endif
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$;$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        case 3 : {
          var_cas_mSemanticDeclarationList._addModel (nt_semantic_declaration_ (_inLexique)) ;
          } break ;
        case 4 : {
          nt_obsolete_declaration_ (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$end$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$semantics$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_semanticsComponentRoot _entityInstance = GGS_semanticsComponentRoot::constructor_new (_inLexique, var_cas_mSemanticsComponentName, var_cas_mImportedComponentFileNameList, var_cas_mSemanticDeclarationList COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'attribute_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_structuredTypeAttribute semanticsModelBuilder::
semanticsModelBuilder::
pr_attribute_declaration_semanticsModelBuilder_94_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<attribute_declaration>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mAttributeTypeName ;
  GGS_lstring  var_cas_mAttributeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mAttributeTypeName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$type_name$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mAttributeName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_structuredTypeAttribute _entityInstance = GGS_structuredTypeAttribute::constructor_new (_inLexique, var_cas_mAttributeTypeName, var_cas_mAttributeName COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'formal_parameter_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_formalParameters semanticsModelBuilder::
semanticsModelBuilder::
pr_formal_parameter_list_semanticsModelBuilder_102_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<formal_parameter_list>", NULL, "") ;
  #endif
  GGS_formalParameterList  var_cas_mFormalParameterList ;
  var_cas_mFormalParameterList = GGS_formalParameterList::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semanticsModelBuilder_2 (_inLexique)) {
        case 2 : {
          var_cas_mFormalParameterList._addModel (nt_formal_parameter_ (_inLexique)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_formalParameters _entityInstance = GGS_formalParameters::constructor_new (_inLexique, var_cas_mFormalParameterList COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'formal_parameter'            *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_formalParameter semanticsModelBuilder::
semanticsModelBuilder::
pr_formal_parameter_semanticsModelBuilder_111_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<formal_parameter>", NULL, "") ;
  #endif
  GGS_formalArgumentPassingMode var_cas_mFormalParameterPassingMode ;
  GGS_lstring  var_cas_mFormalParameterTypeName ;
  GGS_lstring  var_cas_mFormalParameterName ;
  GGS_bool var_cas_mIsUnused ;
  switch (select_semanticsModelBuilder_3 (_inLexique)) {
    case 1 : {
      #ifdef DEBUG_TRACE_ENABLED
        { C_String message_ ;
          _inLexique.didParseTerminal ("$?$", message_) ;
        }
      #endif
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
      var_cas_mFormalParameterPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      #ifdef DEBUG_TRACE_ENABLED
        { C_String message_ ;
          _inLexique.didParseTerminal ("$??$", message_) ;
        }
      #endif
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
      var_cas_mFormalParameterPassingMode = GGS_formalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
      } break ;
    case 3 : {
      #ifdef DEBUG_TRACE_ENABLED
        { C_String message_ ;
          _inLexique.didParseTerminal ("$?!$", message_) ;
        }
      #endif
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_21) COMMA_HERE) ;
      var_cas_mFormalParameterPassingMode = GGS_formalArgumentPassingMode::constructor_argumentInOut (_inLexique COMMA_HERE) ;
      } break ;
    case 4 : {
      #ifdef DEBUG_TRACE_ENABLED
        { C_String message_ ;
          _inLexique.didParseTerminal ("$!$", message_) ;
        }
      #endif
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
      var_cas_mFormalParameterPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique._assignFromAttribute_tokenString (var_cas_mFormalParameterTypeName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$type_name$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semanticsModelBuilder_4 (_inLexique)) {
    case 1 : {
      var_cas_mIsUnused = GGS_bool (true, false) ;
      } break ;
    case 2 : {
      #ifdef DEBUG_TRACE_ENABLED
        { C_String message_ ;
          _inLexique.didParseTerminal ("$unused$", message_) ;
        }
      #endif
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
      var_cas_mIsUnused = GGS_bool (true, true) ;
      } break ;
    default :
      break ;
  }
  _inLexique._assignFromAttribute_tokenString (var_cas_mFormalParameterName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_formalParameter _entityInstance = GGS_formalParameter::constructor_new (_inLexique, var_cas_mFormalParameterPassingMode, var_cas_mFormalParameterTypeName, var_cas_mFormalParameterName, var_cas_mIsUnused COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_mapDeclaration semanticsModelBuilder::
semanticsModelBuilder::
pr_semantic_declaration_semanticsModelBuilder_141_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<semantic_declaration>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mMapTypeName ;
  GGS_structuredTypeAttributeList  var_cas_mAttributeList ;
  var_cas_mAttributeList = GGS_structuredTypeAttributeList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_mapMethodList  var_cas_mInsertMethodList ;
  var_cas_mInsertMethodList = GGS_mapMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_mapMethodList  var_cas_mSearchMethodList ;
  var_cas_mSearchMethodList = GGS_mapMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_mapMethodList  var_cas_mRemoveMethodList ;
  var_cas_mRemoveMethodList = GGS_mapMethodList::constructor_emptyList (_inLexique COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$map$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mMapTypeName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$type_name$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("${$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semanticsModelBuilder_5 (_inLexique)) {
        case 2 : {
          var_cas_mAttributeList._addModel (nt_attribute_declaration_ (_inLexique)) ;
          } break ;
        case 3 : {
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$insert$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
          var_cas_mInsertMethodList._addModel (nt_map_method_declaration_ (_inLexique)) ;
          } break ;
        case 4 : {
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$search$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
          var_cas_mSearchMethodList._addModel (nt_map_method_declaration_ (_inLexique)) ;
          } break ;
        case 5 : {
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$remove$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_remove) COMMA_HERE) ;
          var_cas_mRemoveMethodList._addModel (nt_map_method_declaration_ (_inLexique)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$}$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_mapDeclaration _entityInstance = GGS_mapDeclaration::constructor_new (_inLexique, var_cas_mMapTypeName, var_cas_mAttributeList, var_cas_mInsertMethodList, var_cas_mSearchMethodList, var_cas_mRemoveMethodList COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'map_method_declaration'         *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_mapMethod semanticsModelBuilder::
semanticsModelBuilder::
pr_map_method_declaration_semanticsModelBuilder_165_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<map_method_declaration>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mMethodName ;
  GGS_lstring  var_cas_mErrorMessage ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mMethodName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$error$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$message$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mErrorMessage) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$literal_string$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_mapMethod _entityInstance = GGS_mapMethod::constructor_new (_inLexique, var_cas_mMethodName, var_cas_mErrorMessage COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_classDeclaration semanticsModelBuilder::
semanticsModelBuilder::
pr_semantic_declaration_semanticsModelBuilder_179_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<semantic_declaration>", NULL, "") ;
  #endif
  GGS_bool var_cas_mIsAbstract ;
  GGS_lstring  var_cas_mClassTypeName ;
  GGS_lstring  var_cas_mSuperClassName ;
  GGS_structuredTypeAttributeList  var_cas_mAttributeList ;
  var_cas_mAttributeList = GGS_structuredTypeAttributeList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_abstractMethodDefinitionList  var_cas_mAbstractMethodList ;
  var_cas_mAbstractMethodList = GGS_abstractMethodDefinitionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_overridenMethodDefinitionList  var_cas_mOverridenMethodList ;
  var_cas_mOverridenMethodList = GGS_overridenMethodDefinitionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_classMessageDefinitionList  var_cas_mMessageList ;
  var_cas_mMessageList = GGS_classMessageDefinitionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  switch (select_semanticsModelBuilder_6 (_inLexique)) {
    case 1 : {
      var_cas_mIsAbstract = GGS_bool (true, false) ;
      } break ;
    case 2 : {
      #ifdef DEBUG_TRACE_ENABLED
        { C_String message_ ;
          _inLexique.didParseTerminal ("$abstract$", message_) ;
        }
      #endif
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
      var_cas_mIsAbstract = GGS_bool (true, true) ;
      } break ;
    default :
      break ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$class$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mClassTypeName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$type_name$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_semanticsModelBuilder_7 (_inLexique)) {
    case 1 : {
      var_cas_mSuperClassName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      #ifdef DEBUG_TRACE_ENABLED
        { C_String message_ ;
          _inLexique.didParseTerminal ("$extends$", message_) ;
        }
      #endif
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mSuperClassName) ;
      #ifdef DEBUG_TRACE_ENABLED
        { C_String message_ (" ?") ;
          message_ << ' ' << _inLexique._attributeValue_tokenString () ;
          _inLexique.didParseTerminal ("$type_name$", message_) ;
        }
      #endif
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("${$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semanticsModelBuilder_8 (_inLexique)) {
        case 2 : {
          var_cas_mAttributeList._addModel (nt_attribute_declaration_ (_inLexique)) ;
          } break ;
        case 3 : {
          var_cas_mAbstractMethodList._addModel (nt_class_abstract_method_declaration_ (_inLexique)) ;
          } break ;
        case 4 : {
          var_cas_mOverridenMethodList._addModel (nt_class_overriden_method_declaration_ (_inLexique)) ;
          } break ;
        case 5 : {
          var_cas_mMessageList._addModel (nt_class_message_declaration_ (_inLexique)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$}$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_classDeclaration _entityInstance = GGS_classDeclaration::constructor_new (_inLexique, var_cas_mIsAbstract, var_cas_mClassTypeName, var_cas_mSuperClassName, var_cas_mAttributeList, var_cas_mAbstractMethodList, var_cas_mOverridenMethodList, var_cas_mMessageList COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'class_message_declaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_classMessageDefinition semanticsModelBuilder::
semanticsModelBuilder::
pr_class_message_declaration_semanticsModelBuilder_212_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<class_message_declaration>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mMessageName ;
  GGS_lstring  var_cas_mMessageValue ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$message$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mMessageName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mMessageValue) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$literal_string$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_classMessageDefinition _entityInstance = GGS_classMessageDefinition::constructor_new (_inLexique, var_cas_mMessageName, var_cas_mMessageValue COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of production rule 'class_abstract_method_declaration'    *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_abstractMethodDefinition semanticsModelBuilder::
semanticsModelBuilder::
pr_class_abstract_method_declaration_semanticsModelBuilder_221_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<class_abstract_method_declaration>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mMethodName ;
  GGS_formalParameters  var_cas_mSignature ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$abstract$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$method$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mMethodName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  var_cas_mSignature = nt_formal_parameter_list_ (_inLexique) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_abstractMethodDefinition _entityInstance = GGS_abstractMethodDefinition::constructor_new (_inLexique, var_cas_mMethodName, var_cas_mSignature COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of production rule 'class_overriden_method_declaration'   *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_overridenMethodDefinition semanticsModelBuilder::
semanticsModelBuilder::
pr_class_overriden_method_declaration_semanticsModelBuilder_231_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<class_overriden_method_declaration>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mMethodName ;
  GGS_formalParameters  var_cas_mSignature ;
  GGS_semanticInstructions  var_cas_mInstructionList ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$override$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_override) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$method$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mMethodName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  var_cas_mSignature = nt_formal_parameter_list_ (_inLexique) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$:$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  var_cas_mInstructionList = nt_semantic_instruction_list_ (_inLexique) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$end$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$method$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_overridenMethodDefinition _entityInstance = GGS_overridenMethodDefinition::constructor_new (_inLexique, var_cas_mMethodName, var_cas_mSignature, var_cas_mInstructionList COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'obsolete_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
semanticsModelBuilder::
pr_obsolete_declaration_semanticsModelBuilder_245_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<obsolete_declaration>", NULL, "") ;
  #endif
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$map$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$type_name$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$class$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semanticsModelBuilder_9 (_inLexique)) {
        case 2 : {
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$insert$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$identifier$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$error$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$message$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$literal_string$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$;$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        case 3 : {
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$search$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$identifier$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$error$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$message$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$literal_string$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$;$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        case 4 : {
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$type_name$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$identifier$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$;$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        case 5 : {
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$block$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_block) COMMA_HERE) ;
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$identifier$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$:$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$($", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
              switch (select_repeat_semanticsModelBuilder_10 (_inLexique)) {
                case 2 : {
                  #ifdef DEBUG_TRACE_ENABLED
                    { C_String message_ ;
                      _inLexique.didParseTerminal ("$?$", message_) ;
                    }
                  #endif
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  #ifdef DEBUG_TRACE_ENABLED
                    { C_String message_ ;
                      _inLexique.didParseTerminal ("$type_name$", message_) ;
                    }
                  #endif
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
                  #ifdef DEBUG_TRACE_ENABLED
                    { C_String message_ ;
                      _inLexique.didParseTerminal ("$identifier$", message_) ;
                    }
                  #endif
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$)$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$:$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$($", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
              switch (select_repeat_semanticsModelBuilder_11 (_inLexique)) {
                case 2 : {
                  #ifdef DEBUG_TRACE_ENABLED
                    { C_String message_ ;
                      _inLexique.didParseTerminal ("$?$", message_) ;
                    }
                  #endif
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  #ifdef DEBUG_TRACE_ENABLED
                    { C_String message_ ;
                      _inLexique.didParseTerminal ("$type_name$", message_) ;
                    }
                  #endif
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
                  #ifdef DEBUG_TRACE_ENABLED
                    { C_String message_ ;
                      _inLexique.didParseTerminal ("$identifier$", message_) ;
                    }
                  #endif
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$)$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$;$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$}$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_listDeclaration semanticsModelBuilder::
semanticsModelBuilder::
pr_semantic_declaration_semanticsModelBuilder_302_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<semantic_declaration>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mListTypeName ;
  GGS_structuredTypeAttributeList  var_cas_mAttributeList ;
  var_cas_mAttributeList = GGS_structuredTypeAttributeList::constructor_emptyList (_inLexique COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$list$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mListTypeName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$type_name$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("${$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semanticsModelBuilder_12 (_inLexique)) {
        case 2 : {
          var_cas_mAttributeList._addModel (nt_attribute_declaration_ (_inLexique)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$}$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_listDeclaration _entityInstance = GGS_listDeclaration::constructor_new (_inLexique, var_cas_mListTypeName, var_cas_mAttributeList COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_enumDeclaration semanticsModelBuilder::
semanticsModelBuilder::
pr_semantic_declaration_semanticsModelBuilder_319_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<semantic_declaration>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mEnumTypeName ;
  GGS_lstringlist  var_cas_mConstantList ;
  GGS_enumMessageList  var_cas_mEnumMessageList ;
  var_cas_mEnumMessageList = GGS_enumMessageList::constructor_emptyList (_inLexique COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$enum$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_enum) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mEnumTypeName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$type_name$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("${$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  var_cas_mConstantList = GGS_lstringlist::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_constantName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_constantName) ;
        #ifdef DEBUG_TRACE_ENABLED
          { C_String message_ (" ?") ;
            message_ << ' ' << _inLexique._attributeValue_tokenString () ;
            _inLexique.didParseTerminal ("$identifier$", message_) ;
          }
        #endif
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        var_cas_mConstantList._addAssign_operation (var_cas_constantName) ;
      switch (select_repeat_semanticsModelBuilder_13 (_inLexique)) {
        case 2 : {
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$,$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$}$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("${$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semanticsModelBuilder_14 (_inLexique)) {
        case 2 : {
          var_cas_mEnumMessageList._addModel (nt_enum_message_declaration_ (_inLexique)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$}$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_enumDeclaration _entityInstance = GGS_enumDeclaration::constructor_new (_inLexique, var_cas_mEnumTypeName, var_cas_mConstantList, var_cas_mEnumMessageList COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'enum_message_declaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_enumMessage semanticsModelBuilder::
semanticsModelBuilder::
pr_enum_message_declaration_semanticsModelBuilder_342_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<enum_message_declaration>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mEnumMessageName ;
  GGS_enumMessageAssociationList  var_cas_mMessageAssociationList ;
  var_cas_mMessageAssociationList = GGS_enumMessageAssociationList::constructor_emptyList (_inLexique COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$message$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mEnumMessageName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$:$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        var_cas_mMessageAssociationList._addModel (nt_enum_message_association_ (_inLexique)) ;
      switch (select_repeat_semanticsModelBuilder_15 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$end$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$message$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_enumMessage _entityInstance = GGS_enumMessage::constructor_new (_inLexique, var_cas_mEnumMessageName, var_cas_mMessageAssociationList COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'enum_message_association'        *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_enumMessageAssociation semanticsModelBuilder::
semanticsModelBuilder::
pr_enum_message_association_semanticsModelBuilder_357_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<enum_message_association>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mConstantName ;
  GGS_lstring  var_cas_mMessage ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mConstantName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$->$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mMessage) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$literal_string$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_enumMessageAssociation _entityInstance = GGS_enumMessageAssociation::constructor_new (_inLexique, var_cas_mConstantName, var_cas_mMessage COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_routineDeclaration semanticsModelBuilder::
semanticsModelBuilder::
pr_semantic_declaration_semanticsModelBuilder_370_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<semantic_declaration>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mRoutineName ;
  GGS_formalParameters  var_cas_mFormalParameters ;
  GGS_semanticInstructions  var_cas_mRoutineInstructions ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$routine$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mRoutineName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  var_cas_mFormalParameters = nt_formal_parameter_list_ (_inLexique) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$:$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  var_cas_mRoutineInstructions = nt_semantic_instruction_list_ (_inLexique) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$end$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$routine$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_routineDeclaration _entityInstance = GGS_routineDeclaration::constructor_new (_inLexique, var_cas_mRoutineName, var_cas_mFormalParameters, var_cas_mRoutineInstructions COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*

