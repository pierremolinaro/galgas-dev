//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'semanticsModelBuilder.cpp'                      *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       may 9th, 2009, at 12h37'47"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "semanticsModelBuilder.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticsModelBuilder.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//   Implementation of production rule 'semantics_component_start_symbol'    *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_semantics_component_start_symbol_semanticsModelBuilder_57_39_ (galgas_scanner & _inLexique,
                                GGS_semanticsComponentRoot  &var_cas_outSemanticsComponentRoot) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  GGS_lstring  var_cas_mSemanticsComponentName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mSemanticsComponentName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_lstringlist  var_cas_mImportedComponentFileNameList ;
  var_cas_mImportedComponentFileNameList = GGS_lstringlist ::constructor_emptyList () ;
  GGS_semanticDeclarationStruct var_cas_mSemanticDeclarations ;
  var_cas_mSemanticDeclarations = GGS_semanticDeclarationStruct::constructor_new (GGS_semanticDeclarationList ::constructor_emptyList (), GGS_abstractCategoryMethodListMap::constructor_emptyMap (), GGS_categoryMethodListMap::constructor_emptyMap (), GGS_overridingCategoryMethodListMap::constructor_emptyMap ()) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_repeat_semanticsModelBuilder_0 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_import) COMMA_HERE) ;
          switch (select_semanticsModelBuilder_1 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_importedComponentFileName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_importedComponentFileName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              var_cas_mImportedComponentFileNameList._addAssign_operation (var_cas_importedComponentFileName) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              } break ;
            case 3 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              } break ;
            case 4 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_option) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        case 3 : {
          nt_semantic_declaration_ (_inLexique, var_cas_mSemanticDeclarations) ;
          } break ;
        case 4 : {
          nt_obsolete_declaration_ (_inLexique) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  GGS_location  var_cas_endOfSourceFile ;
  var_cas_endOfSourceFile = GGS_location (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_outSemanticsComponentRoot = GGS_semanticsComponentRoot ::constructor_new (_inLexique, var_cas_mSemanticsComponentName, var_cas_mImportedComponentFileNameList, var_cas_mSemanticDeclarations, var_cas_endOfSourceFile COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'attribute_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_attribute_declaration_semanticsModelBuilder_123_28_ (galgas_scanner & _inLexique,
                                GGS_attributeInCollectionList  &var_cas_ioAttributeInCollectionList) {
  GGS_lstring  var_cas_mAttributeTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mAttributeTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  GGS_lstring  var_cas_mAttributeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mAttributeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_ioAttributeInCollectionList._addAssign_operation (var_cas_mAttributeTypeName, var_cas_mAttributeName) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_semantic_declaration_semanticsModelBuilder_136_27_ (galgas_scanner & _inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_listmap) COMMA_HERE) ;
  GGS_lstring  var_cas_mListmapTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mListmapTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
  GGS_lstring  var_cas_mAssociatedListTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mAssociatedListTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mSemanticDeclarationList._addAssign_operation (GGS_listmapDeclaration ::constructor_new (_inLexique, var_cas_mListmapTypeName, var_cas_mAssociatedListTypeName COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'obsolete_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_obsolete_declaration_semanticsModelBuilder_158_27_ (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'map_method_declaration'         *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_map_method_declaration_semanticsModelBuilder_170_29_ (galgas_scanner & _inLexique,
                                GGS_mapMethodList  &var_cas_ioMapMethodList) {
  GGS_lstring  var_cas_mMethodName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mMethodName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  GGS_lstring  var_cas_mErrorMessage ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mErrorMessage) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  GGS_lstring  var_cas_mShadowErrorMessage ;
  switch (select_semanticsModelBuilder_2 (_inLexique)) {
    case 1 : {
      var_cas_mShadowErrorMessage = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mShadowErrorMessage) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_ioMapMethodList._addAssign_operation (var_cas_mMethodName, var_cas_mErrorMessage, var_cas_mShadowErrorMessage) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_semantic_declaration_semanticsModelBuilder_200_27_ (galgas_scanner & _inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  GGS_lstring  var_cas_mMapTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mMapTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  GGS_lstring  var_cas_mAssociatedEnumTypeName ;
  GGS_lstring  var_cas_mAssociatedTerminaisonMethodName ;
  switch (select_semanticsModelBuilder_3 (_inLexique)) {
    case 1 : {
      var_cas_mAssociatedEnumTypeName = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
      var_cas_mAssociatedTerminaisonMethodName = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mAssociatedEnumTypeName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mAssociatedTerminaisonMethodName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_attributeInCollectionList  var_cas_mAttributeList ;
  var_cas_mAttributeList = GGS_attributeInCollectionList ::constructor_emptyList () ;
  GGS_mapMethodList  var_cas_mInsertMethodList ;
  var_cas_mInsertMethodList = GGS_mapMethodList ::constructor_emptyList () ;
  GGS_mapMethodList  var_cas_mSearchMethodList ;
  var_cas_mSearchMethodList = GGS_mapMethodList ::constructor_emptyList () ;
  GGS_mapMethodList  var_cas_mRemoveMethodList ;
  var_cas_mRemoveMethodList = GGS_mapMethodList ::constructor_emptyList () ;
  { bool syntaxRepeat_4 = true ;
    while (syntaxRepeat_4) {
      switch (select_repeat_semanticsModelBuilder_4 (_inLexique)) {
        case 2 : {
          nt_attribute_declaration_ (_inLexique, var_cas_mAttributeList) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
          nt_map_method_declaration_ (_inLexique, var_cas_mInsertMethodList) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
          nt_map_method_declaration_ (_inLexique, var_cas_mSearchMethodList) ;
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_remove) COMMA_HERE) ;
          nt_map_method_declaration_ (_inLexique, var_cas_mRemoveMethodList) ;
          } break ;
        default :
          syntaxRepeat_4 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mSemanticDeclarationList._addAssign_operation (GGS_mapDeclaration ::constructor_new (_inLexique, var_cas_mMapTypeName, var_cas_mAssociatedEnumTypeName, var_cas_mAssociatedTerminaisonMethodName, var_cas_mAttributeList, var_cas_mInsertMethodList, var_cas_mSearchMethodList, var_cas_mRemoveMethodList COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'obsolete_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_obsolete_declaration_semanticsModelBuilder_256_27_ (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mapindex) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_semantic_declaration_semanticsModelBuilder_264_27_ (galgas_scanner & _inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mapindex) COMMA_HERE) ;
  GGS_lstring  var_cas_mMapIndexName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mMapIndexName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
  GGS_lstring  var_cas_mMapTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mMapTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
  GGS_lstring  var_cas_mSearchMethodName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mSearchMethodName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  GGS_lstring  var_cas_mSearchMethodErrorMessage ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mSearchMethodErrorMessage) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mSemanticDeclarationList._addAssign_operation (GGS_mapindexDeclaration ::constructor_new (_inLexique, var_cas_mMapIndexName, var_cas_mMapTypeName, var_cas_mSearchMethodName, var_cas_mSearchMethodErrorMessage COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'obsolete_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_obsolete_declaration_semanticsModelBuilder_294_27_ (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  { bool syntaxRepeat_5 = true ;
    while (syntaxRepeat_5) {
      switch (select_repeat_semanticsModelBuilder_5 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_block) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
          { bool syntaxRepeat_6 = true ;
            while (syntaxRepeat_6) {
              switch (select_repeat_semanticsModelBuilder_6 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_6 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
          { bool syntaxRepeat_7 = true ;
            while (syntaxRepeat_7) {
              switch (select_repeat_semanticsModelBuilder_7 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_7 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_5 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'class_message_declaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_class_message_declaration_semanticsModelBuilder_351_32_ (galgas_scanner & _inLexique,
                                GGS_classMessageDefinitionList  &var_cas_ioClassMessageDefinitionList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  GGS_lstring  var_cas_mMessageName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mMessageName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_lstring  var_cas_mMessageValue ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mMessageValue) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_ioClassMessageDefinitionList._addAssign_operation (var_cas_mMessageName, var_cas_mMessageValue) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of production rule 'class_abstract_method_declaration'    *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_class_abstract_method_declaration_semanticsModelBuilder_367_40_ (galgas_scanner & _inLexique,
                                GGS_abstractMethodDefinitionList  &var_cas_ioAbstractMethodDefinitionList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  GGS_lstring  var_cas_mMethodName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mMethodName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_formalParameterList  var_cas_mSignature ;
  nt_formal_parameter_list_ (_inLexique, var_cas_mSignature) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_ioAbstractMethodDefinitionList._addAssign_operation (var_cas_mMethodName, var_cas_mSignature) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of production rule 'class_overriden_method_declaration'   *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_class_overriden_method_declaration_semanticsModelBuilder_387_41_ (galgas_scanner & _inLexique,
                                GGS_overridenMethodDefinitionList  &var_cas_ioOverridenMethodDefinitionList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_override) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  GGS_lstring  var_cas_mMethodName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mMethodName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_formalParameterList  var_cas_mSignature ;
  nt_formal_parameter_list_ (_inLexique, var_cas_mSignature) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_semanticInstructionList  var_cas_mInstructionList ;
  nt_semantic_instruction_list_ (_inLexique, var_cas_mInstructionList) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_ioOverridenMethodDefinitionList._addAssign_operation (var_cas_mMethodName, var_cas_mSignature, var_cas_mInstructionList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'class_method_declaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_class_method_declaration_semanticsModelBuilder_414_31_ (galgas_scanner & _inLexique,
                                GGS_methodDefinitionList  &var_cas_ioMethodDefinitionList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  GGS_lstring  var_cas_mMethodName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mMethodName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_formalParameterList  var_cas_mSignature ;
  nt_formal_parameter_list_ (_inLexique, var_cas_mSignature) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_semanticInstructionList  var_cas_mInstructionList ;
  nt_semantic_instruction_list_ (_inLexique, var_cas_mInstructionList) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_ioMethodDefinitionList._addAssign_operation (var_cas_mMethodName, var_cas_mSignature, var_cas_mInstructionList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'lazy_attribute_declaration'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_lazy_attribute_declaration_semanticsModelBuilder_438_33_ (galgas_scanner & _inLexique,
                                GGS_lazyAttributeList  &var_cas_ioLazyAttributeList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_lazy) COMMA_HERE) ;
  GGS_attributeInCollectionList  var_cas_attributeTypeAndNameList ;
  var_cas_attributeTypeAndNameList = GGS_attributeInCollectionList ::constructor_emptyList () ;
  { bool syntaxRepeat_8 = true ;
    while (syntaxRepeat_8) {
        GGS_lstring  var_cas_attributeTypeName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_attributeTypeName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
        GGS_lstring  var_cas_attributeName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_attributeName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        var_cas_attributeTypeAndNameList._addAssign_operation (var_cas_attributeTypeName, var_cas_attributeName) ;
      switch (select_repeat_semanticsModelBuilder_8 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_8 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_semanticInstructionList  var_cas_mInstructionList ;
  nt_semantic_instruction_list_ (_inLexique, var_cas_mInstructionList) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_lazy) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_ioLazyAttributeList._addAssign_operation (GGS_location (_inLexique), var_cas_attributeTypeAndNameList, var_cas_mInstructionList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_semantic_declaration_semanticsModelBuilder_462_27_ (galgas_scanner & _inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  GGS_bool var_cas_mIsAbstract ;
  switch (select_semanticsModelBuilder_9 (_inLexique)) {
    case 1 : {
      var_cas_mIsAbstract = GGS_bool (false) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
      var_cas_mIsAbstract = GGS_bool (true) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  GGS_lstring  var_cas_mClassTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mClassTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  GGS_lstring  var_cas_mSuperClassName ;
  switch (select_semanticsModelBuilder_10 (_inLexique)) {
    case 1 : {
      var_cas_mSuperClassName = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mSuperClassName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_string var_cas_mClassMessage ;
  var_cas_mClassMessage = GGS_string ("") ;
  GGS_attributeInCollectionList  var_cas_mAttributeList ;
  var_cas_mAttributeList = GGS_attributeInCollectionList ::constructor_emptyList () ;
  GGS_abstractMethodDefinitionList  var_cas_mAbstractMethodList ;
  var_cas_mAbstractMethodList = GGS_abstractMethodDefinitionList ::constructor_emptyList () ;
  GGS_overridenMethodDefinitionList  var_cas_mOverridenMethodList ;
  var_cas_mOverridenMethodList = GGS_overridenMethodDefinitionList ::constructor_emptyList () ;
  GGS_methodDefinitionList  var_cas_mMethodList ;
  var_cas_mMethodList = GGS_methodDefinitionList ::constructor_emptyList () ;
  GGS_classMessageDefinitionList  var_cas_mMessageList ;
  var_cas_mMessageList = GGS_classMessageDefinitionList ::constructor_emptyList () ;
  GGS_lazyAttributeList  var_cas_mLazyAttributeList ;
  var_cas_mLazyAttributeList = GGS_lazyAttributeList ::constructor_emptyList () ;
  { bool syntaxRepeat_11 = true ;
    while (syntaxRepeat_11) {
      switch (select_repeat_semanticsModelBuilder_11 (_inLexique)) {
        case 2 : {
          nt_attribute_declaration_ (_inLexique, var_cas_mAttributeList) ;
          } break ;
        case 3 : {
          nt_class_abstract_method_declaration_ (_inLexique, var_cas_mAbstractMethodList) ;
          } break ;
        case 4 : {
          nt_class_overriden_method_declaration_ (_inLexique, var_cas_mOverridenMethodList) ;
          } break ;
        case 5 : {
          nt_class_method_declaration_ (_inLexique, var_cas_mMethodList) ;
          } break ;
        case 6 : {
          nt_class_message_declaration_ (_inLexique, var_cas_mMessageList) ;
          } break ;
        case 7 : {
          nt_lazy_attribute_declaration_ (_inLexique, var_cas_mLazyAttributeList) ;
          } break ;
        case 8 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
          if (((var_cas_mClassMessage.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (505)))._operator_strictSup (GGS_uint (0U))).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("the class message is already defined") COMMA_SOURCE_FILE_AT_LINE (507)) ;
          }
          GGS_lstring  var_cas_classMessage ;
          _inLexique._assignFromAttribute_tokenString (var_cas_classMessage) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
          if (((var_cas_classMessage.ggs_string ().reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (510)))._operator_isEqual (GGS_uint (0U))).isBuiltAndTrue ()) {
            var_cas_classMessage.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("the class message string should be not empty") COMMA_SOURCE_FILE_AT_LINE (512)) ;
          }
          var_cas_mClassMessage = var_cas_classMessage.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (513)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_11 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mSemanticDeclarationList._addAssign_operation (GGS_classDeclaration ::constructor_new (_inLexique, var_cas_mIsAbstract, var_cas_mClassTypeName, var_cas_mSuperClassName, var_cas_mAttributeList, var_cas_mAbstractMethodList, var_cas_mOverridenMethodList, var_cas_mMethodList, var_cas_mMessageList, var_cas_mLazyAttributeList, var_cas_mClassMessage COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_semantic_declaration_semanticsModelBuilder_538_27_ (galgas_scanner & _inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_struct) COMMA_HERE) ;
  GGS_lstring  var_cas_mListTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mListTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_attributeInCollectionList  var_cas_mAttributeList ;
  var_cas_mAttributeList = GGS_attributeInCollectionList ::constructor_emptyList () ;
  { bool syntaxRepeat_12 = true ;
    while (syntaxRepeat_12) {
      switch (select_repeat_semanticsModelBuilder_12 (_inLexique)) {
        case 2 : {
          nt_attribute_declaration_ (_inLexique, var_cas_mAttributeList) ;
          } break ;
        default :
          syntaxRepeat_12 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mSemanticDeclarationList._addAssign_operation (GGS_structDeclaration ::constructor_new (_inLexique, var_cas_mListTypeName, var_cas_mAttributeList COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_semantic_declaration_semanticsModelBuilder_562_27_ (galgas_scanner & _inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  GGS_lstring  var_cas_mListTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mListTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_attributeInCollectionList  var_cas_mAttributeList ;
  var_cas_mAttributeList = GGS_attributeInCollectionList ::constructor_emptyList () ;
  { bool syntaxRepeat_13 = true ;
    while (syntaxRepeat_13) {
      switch (select_repeat_semanticsModelBuilder_13 (_inLexique)) {
        case 2 : {
          nt_attribute_declaration_ (_inLexique, var_cas_mAttributeList) ;
          } break ;
        default :
          syntaxRepeat_13 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mSemanticDeclarationList._addAssign_operation (GGS_listDeclaration ::constructor_new (_inLexique, var_cas_mListTypeName, var_cas_mAttributeList COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'obsolete_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_obsolete_declaration_semanticsModelBuilder_582_27_ (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'obsolete_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_obsolete_declaration_semanticsModelBuilder_594_27_ (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_sortedlist) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'sortedlist_sort_descriptor'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_sortedlist_sort_descriptor_semanticsModelBuilder_606_33_ (galgas_scanner & _inLexique,
                                GGS_sortedListSortDescriptorList  &var_cas_ioSortedListSortDescriptorList) {
  GGS_lstring  var_cas_mSortedAttributeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mSortedAttributeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_bool var_cas_mAscending ;
  switch (select_semanticsModelBuilder_14 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
      var_cas_mAscending = GGS_bool (true) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
      var_cas_mAscending = GGS_bool (false) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioSortedListSortDescriptorList._addAssign_operation (var_cas_mSortedAttributeName, var_cas_mAscending) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_semantic_declaration_semanticsModelBuilder_621_27_ (galgas_scanner & _inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_sortedlist) COMMA_HERE) ;
  GGS_lstring  var_cas_mSortedListTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mSortedListTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_attributeInCollectionList  var_cas_mAttributeList ;
  var_cas_mAttributeList = GGS_attributeInCollectionList ::constructor_emptyList () ;
  { bool syntaxRepeat_15 = true ;
    while (syntaxRepeat_15) {
      switch (select_repeat_semanticsModelBuilder_15 (_inLexique)) {
        case 2 : {
          nt_attribute_declaration_ (_inLexique, var_cas_mAttributeList) ;
          } break ;
        default :
          syntaxRepeat_15 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_sortedListSortDescriptorList  var_cas_mSortDescriptorList ;
  var_cas_mSortDescriptorList = GGS_sortedListSortDescriptorList ::constructor_emptyList () ;
  { bool syntaxRepeat_16 = true ;
    while (syntaxRepeat_16) {
        nt_sortedlist_sort_descriptor_ (_inLexique, var_cas_mSortDescriptorList) ;
      switch (select_repeat_semanticsModelBuilder_16 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_16 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mSemanticDeclarationList._addAssign_operation (GGS_sortedListDeclaration ::constructor_new (_inLexique, var_cas_mSortedListTypeName, var_cas_mAttributeList, var_cas_mSortDescriptorList COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'enum_message_declaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_enum_message_declaration_semanticsModelBuilder_658_31_ (galgas_scanner & _inLexique,
                                GGS_enumMessageList  &var_cas_ioEnumMessageList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
  GGS_lstring  var_cas_mEnumMessageName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mEnumMessageName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_enumMessageAssociationList  var_cas_mMessageAssociationList ;
  var_cas_mMessageAssociationList = GGS_enumMessageAssociationList ::constructor_emptyList () ;
  { bool syntaxRepeat_17 = true ;
    while (syntaxRepeat_17) {
        GGS_lstring  var_cas_mConstantName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_mConstantName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
        GGS_lstring  var_cas_mMessage ;
        _inLexique._assignFromAttribute_tokenString (var_cas_mMessage) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
        var_cas_mMessageAssociationList._addAssign_operation (var_cas_mConstantName, var_cas_mMessage) ;
      switch (select_repeat_semanticsModelBuilder_17 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_17 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_reader) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_ioEnumMessageList._addAssign_operation (var_cas_mEnumMessageName, var_cas_mMessageAssociationList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'enum_case_message'            *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_enum_case_message_semanticsModelBuilder_686_24_ (galgas_scanner & _inLexique,
                                GGS_enumCaseMessage  &var_cas_outCaseMessage) {
  switch (select_semanticsModelBuilder_18 (_inLexique)) {
    case 1 : {
      var_cas_outCaseMessage = GGS_enumCaseMessage ::constructor_new (_inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
      GGS_lstring  var_cas_mLocationParameterName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mLocationParameterName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      GGS_lstring  var_cas_mMessage ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mMessage) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
      var_cas_outCaseMessage = GGS_enumCaseErrorMessage ::constructor_new (_inLexique, var_cas_mLocationParameterName, var_cas_mMessage COMMA_HERE) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_warning) COMMA_HERE) ;
      GGS_lstring  var_cas_mLocationParameterName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mLocationParameterName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      GGS_lstring  var_cas_mMessage ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mMessage) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
      var_cas_outCaseMessage = GGS_enumCaseWarningMessage ::constructor_new (_inLexique, var_cas_mLocationParameterName, var_cas_mMessage COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'enum_modifier'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_enum_modifier_semanticsModelBuilder_710_20_ (galgas_scanner & _inLexique,
                                GGS_enumModifierList  &var_cas_ioEnumModifierList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_modifier) COMMA_HERE) ;
  GGS_lstring  var_cas_mModifierName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mModifierName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
  GGS_lstring  var_cas_typeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  if (((var_cas_typeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (715)))._operator_isNotEqual (GGS_string ("location"))).isBuiltAndTrue ()) {
    var_cas_typeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("only '@location' type is allowed here") COMMA_SOURCE_FILE_AT_LINE (717)) ;
  }
  GGS_lstring  var_cas_mLocationFormalArgumentName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mLocationFormalArgumentName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_enumModifierCaseList  var_cas_mEnumModifierCaseList ;
  var_cas_mEnumModifierCaseList = GGS_enumModifierCaseList ::constructor_emptyList () ;
  { bool syntaxRepeat_19 = true ;
    while (syntaxRepeat_19) {
        GGS_lstring  var_cas_mSourceConstantName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_mSourceConstantName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
        GGS_lstring  var_cas_mTargetConstantName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_mTargetConstantName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        GGS_enumCaseMessage  var_cas_mEnumModifierCaseMessage ;
        nt_enum_case_message_ (_inLexique, var_cas_mEnumModifierCaseMessage) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
        var_cas_mEnumModifierCaseList._addAssign_operation (var_cas_mSourceConstantName, var_cas_mTargetConstantName, var_cas_mEnumModifierCaseMessage) ;
      switch (select_repeat_semanticsModelBuilder_19 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_19 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  var_cas_ioEnumModifierList._addAssign_operation (var_cas_mModifierName, var_cas_mLocationFormalArgumentName, var_cas_mEnumModifierCaseList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'enum_method'               *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_enum_method_semanticsModelBuilder_745_18_ (galgas_scanner & _inLexique,
                                GGS_enumMethodList  &var_cas_ioEnumMethodList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  GGS_lstring  var_cas_mMethodName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mMethodName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
  GGS_lstring  var_cas_typeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  if (((var_cas_typeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (750)))._operator_isNotEqual (GGS_string ("location"))).isBuiltAndTrue ()) {
    var_cas_typeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("only '@location' type is allowed here") COMMA_SOURCE_FILE_AT_LINE (752)) ;
  }
  GGS_lstring  var_cas_mLocationFormalArgumentName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mLocationFormalArgumentName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_enumMethodCaseList  var_cas_mEnumMethodCaseList ;
  var_cas_mEnumMethodCaseList = GGS_enumMethodCaseList ::constructor_emptyList () ;
  { bool syntaxRepeat_20 = true ;
    while (syntaxRepeat_20) {
        GGS_lstring  var_cas_mConstantName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_mConstantName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        GGS_enumCaseMessage  var_cas_caseMessage ;
        nt_enum_case_message_ (_inLexique, var_cas_caseMessage) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
        var_cas_mEnumMethodCaseList._addAssign_operation (var_cas_mConstantName, var_cas_caseMessage) ;
      switch (select_repeat_semanticsModelBuilder_20 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_20 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  var_cas_ioEnumMethodList._addAssign_operation (var_cas_mMethodName, var_cas_mLocationFormalArgumentName, var_cas_mEnumMethodCaseList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'enum_operator'              *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_enum_operator_semanticsModelBuilder_778_20_ (galgas_scanner & _inLexique,
                                GGS_enumOperatorList  &var_cas_ioEnumOperatorList) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_operator) COMMA_HERE) ;
  GGS_lstring  var_cas_mOperatorName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mOperatorName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
  GGS_lstring  var_cas_typeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  if (((var_cas_typeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (783)))._operator_isNotEqual (GGS_string ("location"))).isBuiltAndTrue ()) {
    var_cas_typeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("only '@location' type is allowed here") COMMA_SOURCE_FILE_AT_LINE (785)) ;
  }
  GGS_lstring  var_cas_mLocationFormalArgumentName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mLocationFormalArgumentName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_enumOperatorCaseList  var_cas_mEnumOperatorCaseList ;
  var_cas_mEnumOperatorCaseList = GGS_enumOperatorCaseList ::constructor_emptyList () ;
  { bool syntaxRepeat_21 = true ;
    while (syntaxRepeat_21) {
        GGS_lstring  var_cas_mLeftConstantName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_mLeftConstantName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
        GGS_lstring  var_cas_mRightConstantName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_mRightConstantName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
        GGS_lstring  var_cas_mResultConstantName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_mResultConstantName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        GGS_enumCaseMessage  var_cas_caseMessage ;
        nt_enum_case_message_ (_inLexique, var_cas_caseMessage) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
        var_cas_mEnumOperatorCaseList._addAssign_operation (var_cas_mLeftConstantName, var_cas_mRightConstantName, var_cas_mResultConstantName, var_cas_caseMessage) ;
      switch (select_repeat_semanticsModelBuilder_21 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_21 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  var_cas_ioEnumOperatorList._addAssign_operation (var_cas_mOperatorName, var_cas_mLocationFormalArgumentName, var_cas_mEnumOperatorCaseList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_semantic_declaration_semanticsModelBuilder_816_27_ (galgas_scanner & _inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_enum) COMMA_HERE) ;
  GGS_lstring  var_cas_mEnumTypeName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mEnumTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_lstringlist  var_cas_mConstructorConstantList ;
  var_cas_mConstructorConstantList = GGS_lstringlist ::constructor_emptyList () ;
  GGS_lstringlist  var_cas_mConstantList ;
  var_cas_mConstantList = GGS_lstringlist ::constructor_emptyList () ;
  { bool syntaxRepeat_22 = true ;
    while (syntaxRepeat_22) {
        switch (select_semanticsModelBuilder_23 (_inLexique)) {
          case 1 : {
            { bool syntaxRepeat_24 = true ;
              while (syntaxRepeat_24) {
                  GGS_lstring  var_cas_constantName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_constantName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  var_cas_mConstantList._addAssign_operation (var_cas_constantName) ;
                switch (select_repeat_semanticsModelBuilder_24 (_inLexique)) {
                  case 2 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                    } break ;
                  default :
                    syntaxRepeat_24 = false ;
                    break ;
                }
              }
            }
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constructor) COMMA_HERE) ;
            { bool syntaxRepeat_25 = true ;
              while (syntaxRepeat_25) {
                  GGS_lstring  var_cas_constantName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_constantName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  var_cas_mConstructorConstantList._addAssign_operation (var_cas_constantName) ;
                switch (select_repeat_semanticsModelBuilder_25 (_inLexique)) {
                  case 2 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                    } break ;
                  default :
                    syntaxRepeat_25 = false ;
                    break ;
                }
              }
            }
            } break ;
          default :
            break ;
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      switch (select_repeat_semanticsModelBuilder_22 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_22 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_enumMessageList  var_cas_mEnumMessageList ;
  var_cas_mEnumMessageList = GGS_enumMessageList ::constructor_emptyList () ;
  GGS_enumModifierList  var_cas_mEnumModifierList ;
  var_cas_mEnumModifierList = GGS_enumModifierList ::constructor_emptyList () ;
  GGS_enumMethodList  var_cas_mEnumMethodList ;
  var_cas_mEnumMethodList = GGS_enumMethodList ::constructor_emptyList () ;
  GGS_enumOperatorList  var_cas_mEnumOperatorList ;
  var_cas_mEnumOperatorList = GGS_enumOperatorList ::constructor_emptyList () ;
  { bool syntaxRepeat_26 = true ;
    while (syntaxRepeat_26) {
      switch (select_repeat_semanticsModelBuilder_26 (_inLexique)) {
        case 2 : {
          nt_enum_message_declaration_ (_inLexique, var_cas_mEnumMessageList) ;
          } break ;
        case 3 : {
          nt_enum_modifier_ (_inLexique, var_cas_mEnumModifierList) ;
          } break ;
        case 4 : {
          nt_enum_method_ (_inLexique, var_cas_mEnumMethodList) ;
          } break ;
        case 5 : {
          nt_enum_operator_ (_inLexique, var_cas_mEnumOperatorList) ;
          } break ;
        default :
          syntaxRepeat_26 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mSemanticDeclarationList._addAssign_operation (GGS_enumDeclaration ::constructor_new (_inLexique, var_cas_mEnumTypeName, var_cas_mConstructorConstantList, var_cas_mConstantList, var_cas_mEnumMessageList, var_cas_mEnumModifierList, var_cas_mEnumMethodList, var_cas_mEnumOperatorList COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_semantic_declaration_semanticsModelBuilder_880_27_ (galgas_scanner & _inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_filewrapper) COMMA_HERE) ;
  GGS_lstring  var_cas_mFilewrapperName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mFilewrapperName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
  GGS_lstring  var_cas_mFilewrapperPath ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mFilewrapperPath) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_lstringlist  var_cas_mFilewrapperExtensionList ;
  var_cas_mFilewrapperExtensionList = GGS_lstringlist ::constructor_emptyList () ;
  { bool syntaxRepeat_27 = true ;
    while (syntaxRepeat_27) {
        GGS_lstring  var_cas_extension ;
        _inLexique._assignFromAttribute_tokenString (var_cas_extension) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
        var_cas_mFilewrapperExtensionList._addAssign_operation (var_cas_extension) ;
      switch (select_repeat_semanticsModelBuilder_27 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_27 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_filewrapperTemplateList  var_cas_mFilewrapperTemplateList ;
  var_cas_mFilewrapperTemplateList = GGS_filewrapperTemplateList ::constructor_emptyList () ;
  { bool syntaxRepeat_28 = true ;
    while (syntaxRepeat_28) {
      switch (select_repeat_semanticsModelBuilder_28 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_template) COMMA_HERE) ;
          GGS_lstring  var_cas_mFilewrapperTemplateName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_mFilewrapperTemplateName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_lstring  var_cas_mFilewrapperTemplatePath ;
          _inLexique._assignFromAttribute_tokenString (var_cas_mFilewrapperTemplatePath) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
          GGS_formalInputParameterList  var_cas_mFilewrapperTemplateFormalInputParameters ;
          nt_formal_input_parameter_list_ (_inLexique, var_cas_mFilewrapperTemplateFormalInputParameters) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          var_cas_mFilewrapperTemplateList._addAssign_operation (var_cas_mFilewrapperTemplateName, var_cas_mFilewrapperTemplatePath, var_cas_mFilewrapperTemplateFormalInputParameters) ;
          } break ;
        default :
          syntaxRepeat_28 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mSemanticDeclarationList._addAssign_operation (GGS_filewrapperDeclaration ::constructor_new (_inLexique, var_cas_mFilewrapperName, var_cas_mFilewrapperPath, var_cas_mFilewrapperExtensionList, var_cas_mFilewrapperTemplateList COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_semantic_declaration_semanticsModelBuilder_928_27_ (galgas_scanner & _inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  GGS_lstring  var_cas_mClassName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
  GGS_lstring  var_cas_mMethodName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mMethodName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_formalParameterList  var_cas_mFormalParameterList ;
  nt_formal_parameter_list_ (_inLexique, var_cas_mFormalParameterList) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mAbstractCategoryMethodListMap._addAssign_operation (var_cas_mClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (939)), var_cas_mMethodName, var_cas_mFormalParameterList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_semantic_declaration_semanticsModelBuilder_948_27_ (galgas_scanner & _inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  GGS_lstring  var_cas_mClassName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
  GGS_lstring  var_cas_mMethodName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mMethodName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_formalParameterList  var_cas_mFormalParameterList ;
  nt_formal_parameter_list_ (_inLexique, var_cas_mFormalParameterList) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_semanticInstructionList  var_cas_mRoutineInstructionList ;
  nt_semantic_instruction_list_ (_inLexique, var_cas_mRoutineInstructionList) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mCategoryMethodListMap._addAssign_operation (var_cas_mClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (964)), var_cas_mMethodName, var_cas_mFormalParameterList, var_cas_mRoutineInstructionList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticsModelBuilder::
pr_semantic_declaration_semanticsModelBuilder_977_27_ (galgas_scanner & _inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_override) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  GGS_lstring  var_cas_mClassName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mClassName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
  GGS_lstring  var_cas_mMethodName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mMethodName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_formalParameterList  var_cas_mFormalParameterList ;
  nt_formal_parameter_list_ (_inLexique, var_cas_mFormalParameterList) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_semanticInstructionList  var_cas_mRoutineInstructionList ;
  nt_semantic_instruction_list_ (_inLexique, var_cas_mRoutineInstructionList) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_method) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mOverridingCategoryMethodListMap._addAssign_operation (var_cas_mClassName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (994)), var_cas_mMethodName, var_cas_mFormalParameterList, var_cas_mRoutineInstructionList) ;
}

//---------------------------------------------------------------------------*

