//-----------------------------------------------------------------------------*
//                                                                             *
//                    File 'programComponentCompilation.h'                     *
//                         Generated by version 2.5.8                          *
//                        may 23th, 2014, at 11h18'11"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef programComponentCompilation_ENTITIES_DEFINED
#define programComponentCompilation_ENTITIES_DEFINED

//-----------------------------------------------------------------------------*

#include "galgas2/predefined-types.h"

//-----------------------------------------------------------------------------*

#include "semanticAnalysisOfSyntaxComponent.h"
#include "syntaxSignature.h"
#include "semanticsCompilation.h"
#include "allASTTypes.h"
#include "lexiqueTypesForAST.h"
#include "semanticsTypesForAST.h"
#include "optionTypesForAST.h"
#include "guiTypesForAST.h"
#include "syntaxMetamodel.h"
#include "grammarMetamodel.h"
#include "optionSemantics.h"
#include "programMetamodel.h"
#include "predefinedTypes.h"
#include "semanticGeneration.h"
#include "semanticInstructionGeneration.h"
#include "semanticExpressionGeneration.h"
#include "semanticAnalysis.h"
#include "semanticInstructionsAnalysis.h"
#include "semanticExpressionAnalysis.h"
#include "semanticsDecoratedTypes.h"
#include "semanticContext.h"
#include "semanticsClassMethods.h"
#include "semanticsTypes.h"
#include "semanticsInstanceMethods.h"
#include "semanticsModifiers.h"
#include "semanticsReaders.h"
#include "semanticsConstructors.h"
#include "optionCompilation.h"
#include "templateAnalysis.h"
#include "templateTypesForAST.h"
#include "templateDecoratedTypes.h"
#include "templateCodeGeneration.h"
#include "grammarCompilation.h"
#include "grammarSemantics.h"
#include "lexiqueCompilation.h"
#include "lexiqueGeneration.h"
#include "predefinedLexicalActions.h"
#include "lexiqueSemantics.h"
#include "lexiqueCocoaGeneration.h"

//-----------------------------------------------------------------------------*


//-----------------------------------------------------------------------------*
//                                                                             *
//                  Routine 'compileProgramComponentFromAST'                   *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileProgramComponentFromAST (const GALGAS_lstring constinArgument0,
                                             const GALGAS_string constinArgument1,
                                             const GALGAS_programComponentAST constinArgument2,
                                             GALGAS_parsedComponentStruct & ioArgument3,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//               Routine 'compileProgramComponentFromSourceFile'               *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileProgramComponentFromSourceFile (const GALGAS_lstring constinArgument0,
                                                    const GALGAS_string constinArgument1,
                                                    GALGAS_parsedComponentStruct & ioArgument2,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

#endif
