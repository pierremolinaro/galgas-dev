//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'templateTypesForAST.h'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     november 3rd, 2010, at 14h15'20"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef templateTypesForAST_DEFINED
#define templateTypesForAST_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_templateInstructionAST ;
class cPtr_templateInstructionAST ;
class GGS_templateInstructionListAST ;
class GGS_templateExpressionAST ;
class cPtr_templateExpressionAST ;
class GGS_templateExpressionListAST ;
class GGS_templateReaderCallInExpressionAST ;
class cPtr_templateReaderCallInExpressionAST ;
class GGS_templateConstructorAST ;
class cPtr_templateConstructorAST ;
class GGS_templateFileWrapperWithStaticPathAST ;
class cPtr_templateFileWrapperWithStaticPathAST ;
class GGS_templateFileWrapperTemplateCallAST ;
class cPtr_templateFileWrapperTemplateCallAST ;
class GGS_templateCategoryTemplateCallAST ;
class cPtr_templateCategoryTemplateCallAST ;
class GGS_templateAndOperationAST ;
class cPtr_templateAndOperationAST ;
class GGS_templateOrOperationAST ;
class cPtr_templateOrOperationAST ;
class GGS_templateXorOperationAST ;
class cPtr_templateXorOperationAST ;
class GGS_templateConcatOperationAST ;
class cPtr_templateConcatOperationAST ;
class GGS_templateTrueBoolAST ;
class cPtr_templateTrueBoolAST ;
class GGS_templateFalseBoolAST ;
class cPtr_templateFalseBoolAST ;
class GGS_templateLiteralStringExpressionAST ;
class cPtr_templateLiteralStringExpressionAST ;
class GGS_templateLiteralUIntExpressionAST ;
class cPtr_templateLiteralUIntExpressionAST ;
class GGS_templateLiteralSIntExpressionAST ;
class cPtr_templateLiteralSIntExpressionAST ;
class GGS_templateLiteralUInt64ExpressionAST ;
class cPtr_templateLiteralUInt64ExpressionAST ;
class GGS_templateLiteralSInt64ExpressionAST ;
class cPtr_templateLiteralSInt64ExpressionAST ;
class GGS_templateLiteralCharExpressionAST ;
class cPtr_templateLiteralCharExpressionAST ;
class GGS_templateLiteralDoubleExpressionAST ;
class cPtr_templateLiteralDoubleExpressionAST ;
class GGS_templateIfThenElseExpressionAST ;
class cPtr_templateIfThenElseExpressionAST ;
class GGS_templateNotOperatorAST ;
class cPtr_templateNotOperatorAST ;
class GGS_templateLogicalNegateAST ;
class cPtr_templateLogicalNegateAST ;
class GGS_templateOptionAccessAST ;
class cPtr_templateOptionAccessAST ;
class GGS_templateFunctionCallAST ;
class cPtr_templateFunctionCallAST ;
class GGS_templateVarInExpressionAST ;
class cPtr_templateVarInExpressionAST ;
class GGS_templateAddOperationAST ;
class cPtr_templateAddOperationAST ;
class GGS_templateSubOperationAST ;
class cPtr_templateSubOperationAST ;
class GGS_templateMultiplyOperationAST ;
class cPtr_templateMultiplyOperationAST ;
class GGS_templateDivideOperationAST ;
class cPtr_templateDivideOperationAST ;
class GGS_templateModuloOperationAST ;
class cPtr_templateModuloOperationAST ;
class GGS_templateUnaryMinusOperationAST ;
class cPtr_templateUnaryMinusOperationAST ;
class GGS_templateEqualTestAST ;
class cPtr_templateEqualTestAST ;
class GGS_templateNonEqualTestAST ;
class cPtr_templateNonEqualTestAST ;
class GGS_templateStrictInfTestAST ;
class cPtr_templateStrictInfTestAST ;
class GGS_templateInfOrEqualTestAST ;
class cPtr_templateInfOrEqualTestAST ;
class GGS_templateStrictSupTestAST ;
class cPtr_templateStrictSupTestAST ;
class GGS_templateSupOrEqualTestAST ;
class cPtr_templateSupOrEqualTestAST ;
class GGS_templateLeftShiftOperationAST ;
class cPtr_templateLeftShiftOperationAST ;
class GGS_templateRightShiftOperationAST ;
class cPtr_templateRightShiftOperationAST ;
class GGS_templateClassToTypeOperandAST ;
class cPtr_templateClassToTypeOperandAST ;
class GGS_templateInstructionStringAST ;
class cPtr_templateInstructionStringAST ;
class GGS_templateInstructionExpressionAST ;
class cPtr_templateInstructionExpressionAST ;
class GGS_templateBlockInstructionAST ;
class cPtr_templateBlockInstructionAST ;
class GGS_templateInstructionGetColumnLocationAST ;
class cPtr_templateInstructionGetColumnLocationAST ;
class GGS_templateInstructionGotoColumnLocationAST ;
class cPtr_templateInstructionGotoColumnLocationAST ;
class GGS_templateInstructionForeachAST ;
class cPtr_templateInstructionForeachAST ;
class GGS_templateInstructionIfBranchListAST ;
class GGS_templateInstructionIfAST ;
class cPtr_templateInstructionIfAST ;
class GGS_templateInstructionSwitchBranchListAST ;
class GGS_templateInstructionSwitchAST ;
class cPtr_templateInstructionSwitchAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_templateInstructionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_templateInstructionAST : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_templateInstructionAST (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_templateInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateInstructionAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateInstructionAST * getPtr (void) const {
    return (cPtr_templateInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateInstructionAST *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateInstructionAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__templateInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@templateInstructionListAST'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_templateInstructionListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateInstructionListAST ;

//---------------------------------------------------------------------------*

class GGS_templateInstructionListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_templateInstructionListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_templateInstructionListAST constructor_emptyList (void) ;
  public : static GGS_templateInstructionListAST constructor_listWithValue (const GGS_templateInstructionAST & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_templateInstructionListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_templateInstructionListAST
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_templateInstructionListAST
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_templateInstructionListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_templateInstructionAST & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_templateInstructionAST & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_templateInstructionAST & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_templateInstructionAST & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_templateInstructionListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_templateInstructionAST & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_templateInstructionListAST operator_concat (const GGS_templateInstructionListAST & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_templateInstructionAST & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_templateInstructionAST & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_templateInstructionAST & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_templateInstructionAST 
  reader_mInstructionAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMInstructionAtIndex (C_CompilerEx & inLexique,
                              const GGS_templateInstructionAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateInstructionListAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_templateInstructionListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_templateInstructionAST   & _mInstruction (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_templateExpressionAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_templateExpressionAST : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_templateExpressionAST (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_templateExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateExpressionAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateExpressionAST * getPtr (void) const {
    return (cPtr_templateExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateExpressionAST *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateExpressionAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__templateExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@templateExpressionListAST'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_templateExpressionListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateExpressionListAST ;

//---------------------------------------------------------------------------*

class GGS_templateExpressionListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_templateExpressionListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_templateExpressionListAST constructor_emptyList (void) ;
  public : static GGS_templateExpressionListAST constructor_listWithValue (const GGS_templateExpressionAST & argument_0,
                                const GGS_location & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_templateExpressionListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_templateExpressionListAST
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_templateExpressionListAST
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_templateExpressionListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_templateExpressionAST & _out_0,
                              GGS_location & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_templateExpressionAST & _out_0,
                             GGS_location & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_templateExpressionAST & _out_0,
                                GGS_location & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_templateExpressionAST & _out_0,
                                 GGS_location & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_templateExpressionListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_templateExpressionAST & argument_0,
                                const GGS_location & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_templateExpressionListAST operator_concat (const GGS_templateExpressionListAST & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_templateExpressionAST & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_templateExpressionAST & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_templateExpressionAST & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_templateExpressionAST 
  reader_mExpressionAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_location 
  reader_mEndOfExpressionLocationAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMExpressionAtIndex (C_CompilerEx & inLexique,
                              const GGS_templateExpressionAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMEndOfExpressionLocationAtIndex (C_CompilerEx & inLexique,
                              const GGS_location  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateExpressionListAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_templateExpressionListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_templateExpressionAST   & _mExpression (LOCATION_ARGS) const ;
    public : /* const */ GGS_location   & _mEndOfExpressionLocation (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS class 'GGS_templateReaderCallInExpressionAST'            *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateReaderCallInExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_templateReaderCallInExpressionAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateReaderCallInExpressionAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateReaderCallInExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateReaderCallInExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateReaderCallInExpressionAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateReaderCallInExpressionAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_templateExpressionAST & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_templateExpressionListAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateReaderCallInExpressionAST * getPtr (void) const {
    return (cPtr_templateReaderCallInExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_templateExpressionAST  reader_mReceiverExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mReaderName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionListAST  reader_mExpressionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateReaderCallInExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateReaderCallInExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateReaderCallInExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateReaderCallInExpressionAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateReaderCallInExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_templateConstructorAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateConstructorAST ;

//---------------------------------------------------------------------------*

class GGS_templateConstructorAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateConstructorAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateConstructorAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateConstructorAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateConstructorAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateConstructorAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_templateExpressionListAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateConstructorAST * getPtr (void) const {
    return (cPtr_templateConstructorAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTypeName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mConstructorName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionListAST  reader_mExpressionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateConstructorAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateConstructorAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateConstructorAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateConstructorAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateConstructorAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//         GALGAS class 'GGS_templateFileWrapperWithStaticPathAST'           *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateFileWrapperWithStaticPathAST ;

//---------------------------------------------------------------------------*

class GGS_templateFileWrapperWithStaticPathAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateFileWrapperWithStaticPathAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateFileWrapperWithStaticPathAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateFileWrapperWithStaticPathAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateFileWrapperWithStaticPathAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateFileWrapperWithStaticPathAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_uint & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateFileWrapperWithStaticPathAST * getPtr (void) const {
    return (cPtr_templateFileWrapperWithStaticPathAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mFileWrapperName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mFileIndex (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateFileWrapperWithStaticPathAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateFileWrapperWithStaticPathAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateFileWrapperWithStaticPathAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateFileWrapperWithStaticPathAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateFileWrapperWithStaticPathAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//          GALGAS class 'GGS_templateFileWrapperTemplateCallAST'            *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateFileWrapperTemplateCallAST ;

//---------------------------------------------------------------------------*

class GGS_templateFileWrapperTemplateCallAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateFileWrapperTemplateCallAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateFileWrapperTemplateCallAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateFileWrapperTemplateCallAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateFileWrapperTemplateCallAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateFileWrapperTemplateCallAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_templateExpressionListAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateFileWrapperTemplateCallAST * getPtr (void) const {
    return (cPtr_templateFileWrapperTemplateCallAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mFileWrapperName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mTemplateName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionListAST  reader_mOutExpressionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateFileWrapperTemplateCallAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateFileWrapperTemplateCallAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateFileWrapperTemplateCallAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateFileWrapperTemplateCallAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateFileWrapperTemplateCallAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_templateCategoryTemplateCallAST'             *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateCategoryTemplateCallAST ;

//---------------------------------------------------------------------------*

class GGS_templateCategoryTemplateCallAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateCategoryTemplateCallAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateCategoryTemplateCallAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateCategoryTemplateCallAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateCategoryTemplateCallAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateCategoryTemplateCallAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_templateExpressionAST & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_templateExpressionListAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateCategoryTemplateCallAST * getPtr (void) const {
    return (cPtr_templateCategoryTemplateCallAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_templateExpressionAST  reader_mExpressionValue (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mTemplateName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionListAST  reader_mOutExpressionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateCategoryTemplateCallAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateCategoryTemplateCallAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateCategoryTemplateCallAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateCategoryTemplateCallAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateCategoryTemplateCallAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_templateAndOperationAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateAndOperationAST ;

//---------------------------------------------------------------------------*

class GGS_templateAndOperationAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateAndOperationAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateAndOperationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateAndOperationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateAndOperationAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateAndOperationAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_templateExpressionAST & argument_1,
                                const GGS_templateExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateAndOperationAST * getPtr (void) const {
    return (cPtr_templateAndOperationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateAndOperationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateAndOperationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateAndOperationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateAndOperationAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateAndOperationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_templateOrOperationAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateOrOperationAST ;

//---------------------------------------------------------------------------*

class GGS_templateOrOperationAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateOrOperationAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateOrOperationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateOrOperationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateOrOperationAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateOrOperationAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_templateExpressionAST & argument_1,
                                const GGS_templateExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateOrOperationAST * getPtr (void) const {
    return (cPtr_templateOrOperationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateOrOperationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateOrOperationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateOrOperationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateOrOperationAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateOrOperationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_templateXorOperationAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateXorOperationAST ;

//---------------------------------------------------------------------------*

class GGS_templateXorOperationAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateXorOperationAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateXorOperationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateXorOperationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateXorOperationAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateXorOperationAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_templateExpressionAST & argument_1,
                                const GGS_templateExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateXorOperationAST * getPtr (void) const {
    return (cPtr_templateXorOperationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateXorOperationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateXorOperationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateXorOperationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateXorOperationAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateXorOperationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_templateConcatOperationAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateConcatOperationAST ;

//---------------------------------------------------------------------------*

class GGS_templateConcatOperationAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateConcatOperationAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateConcatOperationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateConcatOperationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateConcatOperationAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateConcatOperationAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_templateExpressionAST & argument_1,
                                const GGS_templateExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateConcatOperationAST * getPtr (void) const {
    return (cPtr_templateConcatOperationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateConcatOperationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateConcatOperationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateConcatOperationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateConcatOperationAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateConcatOperationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_templateTrueBoolAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateTrueBoolAST ;

//---------------------------------------------------------------------------*

class GGS_templateTrueBoolAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateTrueBoolAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateTrueBoolAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateTrueBoolAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateTrueBoolAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateTrueBoolAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateTrueBoolAST * getPtr (void) const {
    return (cPtr_templateTrueBoolAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateTrueBoolAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateTrueBoolAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateTrueBoolAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateTrueBoolAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateTrueBoolAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_templateFalseBoolAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateFalseBoolAST ;

//---------------------------------------------------------------------------*

class GGS_templateFalseBoolAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateFalseBoolAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateFalseBoolAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateFalseBoolAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateFalseBoolAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateFalseBoolAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateFalseBoolAST * getPtr (void) const {
    return (cPtr_templateFalseBoolAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateFalseBoolAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateFalseBoolAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateFalseBoolAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateFalseBoolAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateFalseBoolAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//          GALGAS class 'GGS_templateLiteralStringExpressionAST'            *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateLiteralStringExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_templateLiteralStringExpressionAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateLiteralStringExpressionAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateLiteralStringExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateLiteralStringExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateLiteralStringExpressionAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateLiteralStringExpressionAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_stringlist & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateLiteralStringExpressionAST * getPtr (void) const {
    return (cPtr_templateLiteralStringExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_stringlist  reader_mLiteralStringList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_mLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateLiteralStringExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateLiteralStringExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateLiteralStringExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateLiteralStringExpressionAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateLiteralStringExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS class 'GGS_templateLiteralUIntExpressionAST'             *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateLiteralUIntExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_templateLiteralUIntExpressionAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateLiteralUIntExpressionAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateLiteralUIntExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateLiteralUIntExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateLiteralUIntExpressionAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateLiteralUIntExpressionAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_luint & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateLiteralUIntExpressionAST * getPtr (void) const {
    return (cPtr_templateLiteralUIntExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_luint  reader_mLiteralInt (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateLiteralUIntExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateLiteralUIntExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateLiteralUIntExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateLiteralUIntExpressionAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateLiteralUIntExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS class 'GGS_templateLiteralSIntExpressionAST'             *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateLiteralSIntExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_templateLiteralSIntExpressionAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateLiteralSIntExpressionAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateLiteralSIntExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateLiteralSIntExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateLiteralSIntExpressionAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateLiteralSIntExpressionAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_lsint & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateLiteralSIntExpressionAST * getPtr (void) const {
    return (cPtr_templateLiteralSIntExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lsint  reader_mLiteralInt (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateLiteralSIntExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateLiteralSIntExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateLiteralSIntExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateLiteralSIntExpressionAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateLiteralSIntExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//          GALGAS class 'GGS_templateLiteralUInt64ExpressionAST'            *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateLiteralUInt64ExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_templateLiteralUInt64ExpressionAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateLiteralUInt64ExpressionAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateLiteralUInt64ExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateLiteralUInt64ExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateLiteralUInt64ExpressionAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateLiteralUInt64ExpressionAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_luint64 & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateLiteralUInt64ExpressionAST * getPtr (void) const {
    return (cPtr_templateLiteralUInt64ExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_luint64  reader_mLiteralInt (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateLiteralUInt64ExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateLiteralUInt64ExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateLiteralUInt64ExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateLiteralUInt64ExpressionAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateLiteralUInt64ExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//          GALGAS class 'GGS_templateLiteralSInt64ExpressionAST'            *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateLiteralSInt64ExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_templateLiteralSInt64ExpressionAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateLiteralSInt64ExpressionAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateLiteralSInt64ExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateLiteralSInt64ExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateLiteralSInt64ExpressionAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateLiteralSInt64ExpressionAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_lsint64 & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateLiteralSInt64ExpressionAST * getPtr (void) const {
    return (cPtr_templateLiteralSInt64ExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lsint64  reader_mLiteralInt (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateLiteralSInt64ExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateLiteralSInt64ExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateLiteralSInt64ExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateLiteralSInt64ExpressionAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateLiteralSInt64ExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS class 'GGS_templateLiteralCharExpressionAST'             *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateLiteralCharExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_templateLiteralCharExpressionAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateLiteralCharExpressionAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateLiteralCharExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateLiteralCharExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateLiteralCharExpressionAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateLiteralCharExpressionAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_lchar & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateLiteralCharExpressionAST * getPtr (void) const {
    return (cPtr_templateLiteralCharExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lchar  reader_mLiteralChar (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateLiteralCharExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateLiteralCharExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateLiteralCharExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateLiteralCharExpressionAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateLiteralCharExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//          GALGAS class 'GGS_templateLiteralDoubleExpressionAST'            *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateLiteralDoubleExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_templateLiteralDoubleExpressionAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateLiteralDoubleExpressionAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateLiteralDoubleExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateLiteralDoubleExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateLiteralDoubleExpressionAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateLiteralDoubleExpressionAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_ldouble & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateLiteralDoubleExpressionAST * getPtr (void) const {
    return (cPtr_templateLiteralDoubleExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_ldouble  reader_mLiteralDouble (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateLiteralDoubleExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateLiteralDoubleExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateLiteralDoubleExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateLiteralDoubleExpressionAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateLiteralDoubleExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_templateIfThenElseExpressionAST'             *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateIfThenElseExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_templateIfThenElseExpressionAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateIfThenElseExpressionAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateIfThenElseExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateIfThenElseExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateIfThenElseExpressionAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateIfThenElseExpressionAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_templateExpressionAST & argument_1,
                                const GGS_templateExpressionAST & argument_2,
                                const GGS_templateExpressionAST & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateIfThenElseExpressionAST * getPtr (void) const {
    return (cPtr_templateIfThenElseExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mIfExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mThenExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mElseExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateIfThenElseExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateIfThenElseExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateIfThenElseExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateIfThenElseExpressionAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateIfThenElseExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_templateNotOperatorAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateNotOperatorAST ;

//---------------------------------------------------------------------------*

class GGS_templateNotOperatorAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateNotOperatorAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateNotOperatorAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateNotOperatorAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateNotOperatorAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateNotOperatorAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_templateExpressionAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateNotOperatorAST * getPtr (void) const {
    return (cPtr_templateNotOperatorAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateNotOperatorAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateNotOperatorAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateNotOperatorAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateNotOperatorAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateNotOperatorAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_templateLogicalNegateAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateLogicalNegateAST ;

//---------------------------------------------------------------------------*

class GGS_templateLogicalNegateAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateLogicalNegateAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateLogicalNegateAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateLogicalNegateAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateLogicalNegateAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateLogicalNegateAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_templateExpressionAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateLogicalNegateAST * getPtr (void) const {
    return (cPtr_templateLogicalNegateAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateLogicalNegateAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateLogicalNegateAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateLogicalNegateAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateLogicalNegateAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateLogicalNegateAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_templateOptionAccessAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateOptionAccessAST ;

//---------------------------------------------------------------------------*

class GGS_templateOptionAccessAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateOptionAccessAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateOptionAccessAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateOptionAccessAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateOptionAccessAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateOptionAccessAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateOptionAccessAST * getPtr (void) const {
    return (cPtr_templateOptionAccessAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mOptionComponentName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mOptionName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mReaderName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateOptionAccessAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateOptionAccessAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateOptionAccessAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateOptionAccessAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateOptionAccessAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_templateFunctionCallAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateFunctionCallAST ;

//---------------------------------------------------------------------------*

class GGS_templateFunctionCallAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateFunctionCallAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateFunctionCallAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateFunctionCallAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateFunctionCallAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateFunctionCallAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_templateExpressionListAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateFunctionCallAST * getPtr (void) const {
    return (cPtr_templateFunctionCallAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mFunctionName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionListAST  reader_mExpressionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateFunctionCallAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateFunctionCallAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateFunctionCallAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateFunctionCallAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateFunctionCallAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_templateVarInExpressionAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateVarInExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_templateVarInExpressionAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateVarInExpressionAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateVarInExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateVarInExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateVarInExpressionAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateVarInExpressionAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateVarInExpressionAST * getPtr (void) const {
    return (cPtr_templateVarInExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mVarName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mStructAttributeList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateVarInExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateVarInExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateVarInExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateVarInExpressionAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateVarInExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_templateAddOperationAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateAddOperationAST ;

//---------------------------------------------------------------------------*

class GGS_templateAddOperationAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateAddOperationAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateAddOperationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateAddOperationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateAddOperationAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateAddOperationAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_templateExpressionAST & argument_1,
                                const GGS_templateExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateAddOperationAST * getPtr (void) const {
    return (cPtr_templateAddOperationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateAddOperationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateAddOperationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateAddOperationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateAddOperationAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateAddOperationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_templateSubOperationAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateSubOperationAST ;

//---------------------------------------------------------------------------*

class GGS_templateSubOperationAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateSubOperationAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateSubOperationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateSubOperationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateSubOperationAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateSubOperationAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_templateExpressionAST & argument_1,
                                const GGS_templateExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateSubOperationAST * getPtr (void) const {
    return (cPtr_templateSubOperationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateSubOperationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateSubOperationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateSubOperationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateSubOperationAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateSubOperationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_templateMultiplyOperationAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateMultiplyOperationAST ;

//---------------------------------------------------------------------------*

class GGS_templateMultiplyOperationAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateMultiplyOperationAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateMultiplyOperationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateMultiplyOperationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateMultiplyOperationAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateMultiplyOperationAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_templateExpressionAST & argument_1,
                                const GGS_templateExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateMultiplyOperationAST * getPtr (void) const {
    return (cPtr_templateMultiplyOperationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateMultiplyOperationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateMultiplyOperationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateMultiplyOperationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateMultiplyOperationAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateMultiplyOperationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_templateDivideOperationAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateDivideOperationAST ;

//---------------------------------------------------------------------------*

class GGS_templateDivideOperationAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateDivideOperationAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateDivideOperationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateDivideOperationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateDivideOperationAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateDivideOperationAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_templateExpressionAST & argument_1,
                                const GGS_templateExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateDivideOperationAST * getPtr (void) const {
    return (cPtr_templateDivideOperationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateDivideOperationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateDivideOperationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateDivideOperationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateDivideOperationAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateDivideOperationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_templateModuloOperationAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateModuloOperationAST ;

//---------------------------------------------------------------------------*

class GGS_templateModuloOperationAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateModuloOperationAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateModuloOperationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateModuloOperationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateModuloOperationAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateModuloOperationAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_templateExpressionAST & argument_1,
                                const GGS_templateExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateModuloOperationAST * getPtr (void) const {
    return (cPtr_templateModuloOperationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateModuloOperationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateModuloOperationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateModuloOperationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateModuloOperationAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateModuloOperationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_templateUnaryMinusOperationAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateUnaryMinusOperationAST ;

//---------------------------------------------------------------------------*

class GGS_templateUnaryMinusOperationAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateUnaryMinusOperationAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateUnaryMinusOperationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateUnaryMinusOperationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateUnaryMinusOperationAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateUnaryMinusOperationAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_templateExpressionAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateUnaryMinusOperationAST * getPtr (void) const {
    return (cPtr_templateUnaryMinusOperationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateUnaryMinusOperationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateUnaryMinusOperationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateUnaryMinusOperationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateUnaryMinusOperationAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateUnaryMinusOperationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_templateEqualTestAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateEqualTestAST ;

//---------------------------------------------------------------------------*

class GGS_templateEqualTestAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateEqualTestAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateEqualTestAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateEqualTestAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateEqualTestAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateEqualTestAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_templateExpressionAST & argument_1,
                                const GGS_templateExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateEqualTestAST * getPtr (void) const {
    return (cPtr_templateEqualTestAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateEqualTestAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateEqualTestAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateEqualTestAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateEqualTestAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateEqualTestAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_templateNonEqualTestAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateNonEqualTestAST ;

//---------------------------------------------------------------------------*

class GGS_templateNonEqualTestAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateNonEqualTestAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateNonEqualTestAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateNonEqualTestAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateNonEqualTestAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateNonEqualTestAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_templateExpressionAST & argument_1,
                                const GGS_templateExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateNonEqualTestAST * getPtr (void) const {
    return (cPtr_templateNonEqualTestAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateNonEqualTestAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateNonEqualTestAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateNonEqualTestAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateNonEqualTestAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateNonEqualTestAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_templateStrictInfTestAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateStrictInfTestAST ;

//---------------------------------------------------------------------------*

class GGS_templateStrictInfTestAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateStrictInfTestAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateStrictInfTestAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateStrictInfTestAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateStrictInfTestAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateStrictInfTestAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_templateExpressionAST & argument_1,
                                const GGS_templateExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateStrictInfTestAST * getPtr (void) const {
    return (cPtr_templateStrictInfTestAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateStrictInfTestAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateStrictInfTestAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateStrictInfTestAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateStrictInfTestAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateStrictInfTestAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_templateInfOrEqualTestAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateInfOrEqualTestAST ;

//---------------------------------------------------------------------------*

class GGS_templateInfOrEqualTestAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateInfOrEqualTestAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateInfOrEqualTestAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateInfOrEqualTestAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateInfOrEqualTestAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateInfOrEqualTestAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_templateExpressionAST & argument_1,
                                const GGS_templateExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateInfOrEqualTestAST * getPtr (void) const {
    return (cPtr_templateInfOrEqualTestAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateInfOrEqualTestAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateInfOrEqualTestAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateInfOrEqualTestAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateInfOrEqualTestAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateInfOrEqualTestAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_templateStrictSupTestAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateStrictSupTestAST ;

//---------------------------------------------------------------------------*

class GGS_templateStrictSupTestAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateStrictSupTestAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateStrictSupTestAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateStrictSupTestAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateStrictSupTestAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateStrictSupTestAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_templateExpressionAST & argument_1,
                                const GGS_templateExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateStrictSupTestAST * getPtr (void) const {
    return (cPtr_templateStrictSupTestAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateStrictSupTestAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateStrictSupTestAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateStrictSupTestAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateStrictSupTestAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateStrictSupTestAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_templateSupOrEqualTestAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateSupOrEqualTestAST ;

//---------------------------------------------------------------------------*

class GGS_templateSupOrEqualTestAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateSupOrEqualTestAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateSupOrEqualTestAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateSupOrEqualTestAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateSupOrEqualTestAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateSupOrEqualTestAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_templateExpressionAST & argument_1,
                                const GGS_templateExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateSupOrEqualTestAST * getPtr (void) const {
    return (cPtr_templateSupOrEqualTestAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateSupOrEqualTestAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateSupOrEqualTestAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateSupOrEqualTestAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateSupOrEqualTestAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateSupOrEqualTestAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_templateLeftShiftOperationAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateLeftShiftOperationAST ;

//---------------------------------------------------------------------------*

class GGS_templateLeftShiftOperationAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateLeftShiftOperationAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateLeftShiftOperationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateLeftShiftOperationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateLeftShiftOperationAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateLeftShiftOperationAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_templateExpressionAST & argument_1,
                                const GGS_templateExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateLeftShiftOperationAST * getPtr (void) const {
    return (cPtr_templateLeftShiftOperationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateLeftShiftOperationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateLeftShiftOperationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateLeftShiftOperationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateLeftShiftOperationAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateLeftShiftOperationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_templateRightShiftOperationAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateRightShiftOperationAST ;

//---------------------------------------------------------------------------*

class GGS_templateRightShiftOperationAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateRightShiftOperationAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateRightShiftOperationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateRightShiftOperationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateRightShiftOperationAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateRightShiftOperationAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_templateExpressionAST & argument_1,
                                const GGS_templateExpressionAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateRightShiftOperationAST * getPtr (void) const {
    return (cPtr_templateRightShiftOperationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateRightShiftOperationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateRightShiftOperationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateRightShiftOperationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateRightShiftOperationAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateRightShiftOperationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_templateClassToTypeOperandAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateClassToTypeOperandAST ;

//---------------------------------------------------------------------------*

class GGS_templateClassToTypeOperandAST : public GGS_templateExpressionAST {
//--- Default constructor
  public : inline GGS_templateClassToTypeOperandAST (void) :
  GGS_templateExpressionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateClassToTypeOperandAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateClassToTypeOperandAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateClassToTypeOperandAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateClassToTypeOperandAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateClassToTypeOperandAST * getPtr (void) const {
    return (cPtr_templateClassToTypeOperandAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTypeName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateClassToTypeOperandAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateClassToTypeOperandAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateClassToTypeOperandAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateClassToTypeOperandAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateClassToTypeOperandAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_templateInstructionStringAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateInstructionStringAST ;

//---------------------------------------------------------------------------*

class GGS_templateInstructionStringAST : public GGS_templateInstructionAST {
//--- Default constructor
  public : inline GGS_templateInstructionStringAST (void) :
  GGS_templateInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateInstructionStringAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateInstructionStringAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateInstructionStringAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateInstructionStringAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateInstructionStringAST * getPtr (void) const {
    return (cPtr_templateInstructionStringAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_string reader_mTemplateString (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateInstructionStringAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateInstructionStringAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateInstructionStringAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateInstructionStringAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateInstructionStringAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS class 'GGS_templateInstructionExpressionAST'             *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateInstructionExpressionAST ;

//---------------------------------------------------------------------------*

class GGS_templateInstructionExpressionAST : public GGS_templateInstructionAST {
//--- Default constructor
  public : inline GGS_templateInstructionExpressionAST (void) :
  GGS_templateInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateInstructionExpressionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateInstructionExpressionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateInstructionExpressionAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateInstructionExpressionAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_templateExpressionAST & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateInstructionExpressionAST * getPtr (void) const {
    return (cPtr_templateInstructionExpressionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_templateExpressionAST  reader_mExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_mLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateInstructionExpressionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateInstructionExpressionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateInstructionExpressionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateInstructionExpressionAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateInstructionExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_templateBlockInstructionAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateBlockInstructionAST ;

//---------------------------------------------------------------------------*

class GGS_templateBlockInstructionAST : public GGS_templateInstructionAST {
//--- Default constructor
  public : inline GGS_templateBlockInstructionAST (void) :
  GGS_templateInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateBlockInstructionAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateBlockInstructionAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateBlockInstructionAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateBlockInstructionAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_templateExpressionAST & argument_0,
                                const GGS_location & argument_1,
                                const GGS_templateInstructionListAST & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateBlockInstructionAST * getPtr (void) const {
    return (cPtr_templateBlockInstructionAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_templateExpressionAST  reader_mExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_mLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateInstructionListAST  reader_mBlockInstructionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateBlockInstructionAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateBlockInstructionAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateBlockInstructionAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateBlockInstructionAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateBlockInstructionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//        GALGAS class 'GGS_templateInstructionGetColumnLocationAST'         *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateInstructionGetColumnLocationAST ;

//---------------------------------------------------------------------------*

class GGS_templateInstructionGetColumnLocationAST : public GGS_templateInstructionAST {
//--- Default constructor
  public : inline GGS_templateInstructionGetColumnLocationAST (void) :
  GGS_templateInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateInstructionGetColumnLocationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateInstructionGetColumnLocationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateInstructionGetColumnLocationAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateInstructionGetColumnLocationAST constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateInstructionGetColumnLocationAST * getPtr (void) const {
    return (cPtr_templateInstructionGetColumnLocationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateInstructionGetColumnLocationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateInstructionGetColumnLocationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateInstructionGetColumnLocationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateInstructionGetColumnLocationAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateInstructionGetColumnLocationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//       GALGAS class 'GGS_templateInstructionGotoColumnLocationAST'         *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateInstructionGotoColumnLocationAST ;

//---------------------------------------------------------------------------*

class GGS_templateInstructionGotoColumnLocationAST : public GGS_templateInstructionAST {
//--- Default constructor
  public : inline GGS_templateInstructionGotoColumnLocationAST (void) :
  GGS_templateInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateInstructionGotoColumnLocationAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateInstructionGotoColumnLocationAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateInstructionGotoColumnLocationAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateInstructionGotoColumnLocationAST constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateInstructionGotoColumnLocationAST * getPtr (void) const {
    return (cPtr_templateInstructionGotoColumnLocationAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateInstructionGotoColumnLocationAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateInstructionGotoColumnLocationAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateInstructionGotoColumnLocationAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateInstructionGotoColumnLocationAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateInstructionGotoColumnLocationAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_templateInstructionForeachAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateInstructionForeachAST ;

//---------------------------------------------------------------------------*

class GGS_templateInstructionForeachAST : public GGS_templateInstructionAST {
//--- Default constructor
  public : inline GGS_templateInstructionForeachAST (void) :
  GGS_templateInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateInstructionForeachAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateInstructionForeachAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateInstructionForeachAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateInstructionForeachAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_bool& argument_0,
                                const GGS_templateExpressionAST & argument_1,
                                const GGS_string& argument_2,
                                const GGS_templateInstructionListAST & argument_3,
                                const GGS_templateInstructionListAST & argument_4,
                                const GGS_lstring & argument_5,
                                const GGS_templateInstructionListAST & argument_6,
                                const GGS_templateInstructionListAST & argument_7
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateInstructionForeachAST * getPtr (void) const {
    return (cPtr_templateInstructionForeachAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_bool reader_mIsAscending (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateExpressionAST  reader_mExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_mPrefix (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateInstructionListAST  reader_mBeforeInstructionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateInstructionListAST  reader_mDoInstructionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mIndexIdentifier (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateInstructionListAST  reader_mBetweenInstructionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateInstructionListAST  reader_mAfterInstructionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateInstructionForeachAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateInstructionForeachAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateInstructionForeachAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateInstructionForeachAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateInstructionForeachAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                list '@templateInstructionIfBranchListAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_templateInstructionIfBranchListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateInstructionIfBranchListAST ;

//---------------------------------------------------------------------------*

class GGS_templateInstructionIfBranchListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_templateInstructionIfBranchListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_templateInstructionIfBranchListAST constructor_emptyList (void) ;
  public : static GGS_templateInstructionIfBranchListAST constructor_listWithValue (const GGS_templateExpressionAST & argument_0,
                                const GGS_templateInstructionListAST & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_templateInstructionIfBranchListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_templateInstructionIfBranchListAST
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_templateInstructionIfBranchListAST
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_templateInstructionIfBranchListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_templateExpressionAST & _out_0,
                              GGS_templateInstructionListAST & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_templateExpressionAST & _out_0,
                             GGS_templateInstructionListAST & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_templateExpressionAST & _out_0,
                                GGS_templateInstructionListAST & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_templateExpressionAST & _out_0,
                                 GGS_templateInstructionListAST & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_templateInstructionIfBranchListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_templateExpressionAST & argument_0,
                                const GGS_templateInstructionListAST & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_templateInstructionIfBranchListAST operator_concat (const GGS_templateInstructionIfBranchListAST & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_templateExpressionAST & argument_0,
                                const GGS_templateInstructionListAST & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_templateExpressionAST & argument_0,
                                const GGS_templateInstructionListAST & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_templateExpressionAST & argument_0,
                                const GGS_templateInstructionListAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_templateExpressionAST 
  reader_mExpressionAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_templateInstructionListAST 
  reader_mInstructionListAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMExpressionAtIndex (C_CompilerEx & inLexique,
                              const GGS_templateExpressionAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_CompilerEx & inLexique,
                              const GGS_templateInstructionListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateInstructionIfBranchListAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_templateInstructionIfBranchListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_templateExpressionAST   & _mExpression (LOCATION_ARGS) const ;
    public : /* const */ GGS_templateInstructionListAST   & _mInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_templateInstructionIfAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateInstructionIfAST ;

//---------------------------------------------------------------------------*

class GGS_templateInstructionIfAST : public GGS_templateInstructionAST {
//--- Default constructor
  public : inline GGS_templateInstructionIfAST (void) :
  GGS_templateInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateInstructionIfAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateInstructionIfAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateInstructionIfAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateInstructionIfAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_templateInstructionIfBranchListAST & argument_0,
                                const GGS_templateInstructionListAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateInstructionIfAST * getPtr (void) const {
    return (cPtr_templateInstructionIfAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_templateInstructionIfBranchListAST  reader_mTemplateInstructionIfBranchList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateInstructionListAST  reader_mElseInstructionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateInstructionIfAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateInstructionIfAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateInstructionIfAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateInstructionIfAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateInstructionIfAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//              list '@templateInstructionSwitchBranchListAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_templateInstructionSwitchBranchListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateInstructionSwitchBranchListAST ;

//---------------------------------------------------------------------------*

class GGS_templateInstructionSwitchBranchListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_templateInstructionSwitchBranchListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_templateInstructionSwitchBranchListAST constructor_emptyList (void) ;
  public : static GGS_templateInstructionSwitchBranchListAST constructor_listWithValue (const GGS_lstringlist & argument_0,
                                const GGS_templateInstructionListAST & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_templateInstructionSwitchBranchListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_templateInstructionSwitchBranchListAST
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_templateInstructionSwitchBranchListAST
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_templateInstructionSwitchBranchListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_lstringlist & _out_0,
                              GGS_templateInstructionListAST & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_lstringlist & _out_0,
                             GGS_templateInstructionListAST & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_lstringlist & _out_0,
                                GGS_templateInstructionListAST & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_lstringlist & _out_0,
                                 GGS_templateInstructionListAST & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_templateInstructionSwitchBranchListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstringlist & argument_0,
                                const GGS_templateInstructionListAST & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_templateInstructionSwitchBranchListAST operator_concat (const GGS_templateInstructionSwitchBranchListAST & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_lstringlist & argument_0,
                                const GGS_templateInstructionListAST & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstringlist & argument_0,
                                const GGS_templateInstructionListAST & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstringlist & argument_0,
                                const GGS_templateInstructionListAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstringlist 
  reader_mConstantListAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_templateInstructionListAST 
  reader_mInstructionListAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMConstantListAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstringlist  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_CompilerEx & inLexique,
                              const GGS_templateInstructionListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateInstructionSwitchBranchListAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_templateInstructionSwitchBranchListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstringlist   & _mConstantList (LOCATION_ARGS) const ;
    public : /* const */ GGS_templateInstructionListAST   & _mInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_templateInstructionSwitchAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateInstructionSwitchAST ;

//---------------------------------------------------------------------------*

class GGS_templateInstructionSwitchAST : public GGS_templateInstructionAST {
//--- Default constructor
  public : inline GGS_templateInstructionSwitchAST (void) :
  GGS_templateInstructionAST () {}

//--- Pointer assignment constructor
  public : GGS_templateInstructionSwitchAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateInstructionSwitchAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateInstructionSwitchAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateInstructionSwitchAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_templateExpressionAST & argument_0,
                                const GGS_templateInstructionSwitchBranchListAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateInstructionSwitchAST * getPtr (void) const {
    return (cPtr_templateInstructionSwitchAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_templateExpressionAST  reader_mSwitchExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_templateInstructionSwitchBranchListAST  reader_mTemplateInstructionSwitchBranchList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateInstructionSwitchAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateInstructionSwitchAST * operator () (LOCATION_ARGS) const {
      return (cPtr_templateInstructionSwitchAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateInstructionSwitchAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateInstructionSwitchAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_templateInstructionAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateInstructionAST : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_templateInstructionAST (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@templateInstructionListAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_templateInstructionListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_templateInstructionAST  mInstruction ;
//--- Constructor
  public : elementOf_GGS_templateInstructionListAST (const GGS_templateInstructionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_templateInstructionListAST * nextObject (void) const { return (elementOf_GGS_templateInstructionListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_templateInstructionListAST * previousObject (void) const { return (elementOf_GGS_templateInstructionListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_templateInstructionListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_templateExpressionAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateExpressionAST : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_templateExpressionAST (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@templateExpressionListAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_templateExpressionListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_templateExpressionAST  mExpression ;
  public : GGS_location  mEndOfExpressionLocation ;
//--- Constructor
  public : elementOf_GGS_templateExpressionListAST (const GGS_templateExpressionAST & ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_templateExpressionListAST * nextObject (void) const { return (elementOf_GGS_templateExpressionListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_templateExpressionListAST * previousObject (void) const { return (elementOf_GGS_templateExpressionListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_templateExpressionListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//         abstract class 'cPtr_templateReaderCallInExpressionAST'           *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateReaderCallInExpressionAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateReaderCallInExpressionAST (const GGS_templateExpressionAST & ,
                                const GGS_lstring & ,
                                const GGS_templateExpressionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_templateExpressionAST  mReceiverExpression ;
  public : GGS_lstring  mReaderName ;
  public : GGS_templateExpressionListAST  mExpressionList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_templateConstructorAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateConstructorAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateConstructorAST (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_templateExpressionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mTypeName ;
  public : GGS_lstring  mConstructorName ;
  public : GGS_templateExpressionListAST  mExpressionList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//        abstract class 'cPtr_templateFileWrapperWithStaticPathAST'         *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateFileWrapperWithStaticPathAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateFileWrapperWithStaticPathAST (const GGS_lstring & ,
                                const GGS_uint & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mFileWrapperName ;
  public : GGS_uint  mFileIndex ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//         abstract class 'cPtr_templateFileWrapperTemplateCallAST'          *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateFileWrapperTemplateCallAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateFileWrapperTemplateCallAST (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_templateExpressionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mFileWrapperName ;
  public : GGS_lstring  mTemplateName ;
  public : GGS_templateExpressionListAST  mOutExpressionList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          abstract class 'cPtr_templateCategoryTemplateCallAST'            *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateCategoryTemplateCallAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateCategoryTemplateCallAST (const GGS_templateExpressionAST & ,
                                const GGS_lstring & ,
                                const GGS_templateExpressionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_templateExpressionAST  mExpressionValue ;
  public : GGS_lstring  mTemplateName ;
  public : GGS_templateExpressionListAST  mOutExpressionList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_templateAndOperationAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateAndOperationAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateAndOperationAST (const GGS_location & ,
                                const GGS_templateExpressionAST & ,
                                const GGS_templateExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_templateExpressionAST  mLeftExpression ;
  public : GGS_templateExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_templateOrOperationAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateOrOperationAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateOrOperationAST (const GGS_location & ,
                                const GGS_templateExpressionAST & ,
                                const GGS_templateExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_templateExpressionAST  mLeftExpression ;
  public : GGS_templateExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_templateXorOperationAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateXorOperationAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateXorOperationAST (const GGS_location & ,
                                const GGS_templateExpressionAST & ,
                                const GGS_templateExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_templateExpressionAST  mLeftExpression ;
  public : GGS_templateExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_templateConcatOperationAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateConcatOperationAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateConcatOperationAST (const GGS_location & ,
                                const GGS_templateExpressionAST & ,
                                const GGS_templateExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_templateExpressionAST  mLeftExpression ;
  public : GGS_templateExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_templateTrueBoolAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateTrueBoolAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateTrueBoolAST (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mLocation ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_templateFalseBoolAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateFalseBoolAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateFalseBoolAST (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mLocation ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//         abstract class 'cPtr_templateLiteralStringExpressionAST'          *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateLiteralStringExpressionAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateLiteralStringExpressionAST (const GGS_stringlist & ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_stringlist  mLiteralStringList ;
  public : GGS_location  mLocation ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          abstract class 'cPtr_templateLiteralUIntExpressionAST'           *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateLiteralUIntExpressionAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateLiteralUIntExpressionAST (const GGS_luint & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_luint  mLiteralInt ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          abstract class 'cPtr_templateLiteralSIntExpressionAST'           *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateLiteralSIntExpressionAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateLiteralSIntExpressionAST (const GGS_lsint & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lsint  mLiteralInt ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//         abstract class 'cPtr_templateLiteralUInt64ExpressionAST'          *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateLiteralUInt64ExpressionAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateLiteralUInt64ExpressionAST (const GGS_luint64 & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_luint64  mLiteralInt ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//         abstract class 'cPtr_templateLiteralSInt64ExpressionAST'          *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateLiteralSInt64ExpressionAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateLiteralSInt64ExpressionAST (const GGS_lsint64 & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lsint64  mLiteralInt ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          abstract class 'cPtr_templateLiteralCharExpressionAST'           *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateLiteralCharExpressionAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateLiteralCharExpressionAST (const GGS_lchar & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lchar  mLiteralChar ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//         abstract class 'cPtr_templateLiteralDoubleExpressionAST'          *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateLiteralDoubleExpressionAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateLiteralDoubleExpressionAST (const GGS_ldouble & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_ldouble  mLiteralDouble ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          abstract class 'cPtr_templateIfThenElseExpressionAST'            *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateIfThenElseExpressionAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateIfThenElseExpressionAST (const GGS_location & ,
                                const GGS_templateExpressionAST & ,
                                const GGS_templateExpressionAST & ,
                                const GGS_templateExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_templateExpressionAST  mIfExpression ;
  public : GGS_templateExpressionAST  mThenExpression ;
  public : GGS_templateExpressionAST  mElseExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_templateNotOperatorAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateNotOperatorAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateNotOperatorAST (const GGS_location & ,
                                const GGS_templateExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_templateExpressionAST  mExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_templateLogicalNegateAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateLogicalNegateAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateLogicalNegateAST (const GGS_location & ,
                                const GGS_templateExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_templateExpressionAST  mExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_templateOptionAccessAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateOptionAccessAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateOptionAccessAST (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mOptionComponentName ;
  public : GGS_lstring  mOptionName ;
  public : GGS_lstring  mReaderName ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_templateFunctionCallAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateFunctionCallAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateFunctionCallAST (const GGS_lstring & ,
                                const GGS_templateExpressionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mFunctionName ;
  public : GGS_templateExpressionListAST  mExpressionList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_templateVarInExpressionAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateVarInExpressionAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateVarInExpressionAST (const GGS_lstring & ,
                                const GGS_lstringlist & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mVarName ;
  public : GGS_lstringlist  mStructAttributeList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_templateAddOperationAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateAddOperationAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateAddOperationAST (const GGS_location & ,
                                const GGS_templateExpressionAST & ,
                                const GGS_templateExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_templateExpressionAST  mLeftExpression ;
  public : GGS_templateExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_templateSubOperationAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateSubOperationAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateSubOperationAST (const GGS_location & ,
                                const GGS_templateExpressionAST & ,
                                const GGS_templateExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_templateExpressionAST  mLeftExpression ;
  public : GGS_templateExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            abstract class 'cPtr_templateMultiplyOperationAST'             *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateMultiplyOperationAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateMultiplyOperationAST (const GGS_location & ,
                                const GGS_templateExpressionAST & ,
                                const GGS_templateExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_templateExpressionAST  mLeftExpression ;
  public : GGS_templateExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_templateDivideOperationAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateDivideOperationAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateDivideOperationAST (const GGS_location & ,
                                const GGS_templateExpressionAST & ,
                                const GGS_templateExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_templateExpressionAST  mLeftExpression ;
  public : GGS_templateExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_templateModuloOperationAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateModuloOperationAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateModuloOperationAST (const GGS_location & ,
                                const GGS_templateExpressionAST & ,
                                const GGS_templateExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_templateExpressionAST  mLeftExpression ;
  public : GGS_templateExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           abstract class 'cPtr_templateUnaryMinusOperationAST'            *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateUnaryMinusOperationAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateUnaryMinusOperationAST (const GGS_location & ,
                                const GGS_templateExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_templateExpressionAST  mExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_templateEqualTestAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateEqualTestAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateEqualTestAST (const GGS_location & ,
                                const GGS_templateExpressionAST & ,
                                const GGS_templateExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_templateExpressionAST  mLeftExpression ;
  public : GGS_templateExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_templateNonEqualTestAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateNonEqualTestAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateNonEqualTestAST (const GGS_location & ,
                                const GGS_templateExpressionAST & ,
                                const GGS_templateExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_templateExpressionAST  mLeftExpression ;
  public : GGS_templateExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_templateStrictInfTestAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateStrictInfTestAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateStrictInfTestAST (const GGS_location & ,
                                const GGS_templateExpressionAST & ,
                                const GGS_templateExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_templateExpressionAST  mLeftExpression ;
  public : GGS_templateExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_templateInfOrEqualTestAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateInfOrEqualTestAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateInfOrEqualTestAST (const GGS_location & ,
                                const GGS_templateExpressionAST & ,
                                const GGS_templateExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_templateExpressionAST  mLeftExpression ;
  public : GGS_templateExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_templateStrictSupTestAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateStrictSupTestAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateStrictSupTestAST (const GGS_location & ,
                                const GGS_templateExpressionAST & ,
                                const GGS_templateExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_templateExpressionAST  mLeftExpression ;
  public : GGS_templateExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_templateSupOrEqualTestAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateSupOrEqualTestAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateSupOrEqualTestAST (const GGS_location & ,
                                const GGS_templateExpressionAST & ,
                                const GGS_templateExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_templateExpressionAST  mLeftExpression ;
  public : GGS_templateExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           abstract class 'cPtr_templateLeftShiftOperationAST'             *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateLeftShiftOperationAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateLeftShiftOperationAST (const GGS_location & ,
                                const GGS_templateExpressionAST & ,
                                const GGS_templateExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_templateExpressionAST  mLeftExpression ;
  public : GGS_templateExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           abstract class 'cPtr_templateRightShiftOperationAST'            *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateRightShiftOperationAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateRightShiftOperationAST (const GGS_location & ,
                                const GGS_templateExpressionAST & ,
                                const GGS_templateExpressionAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_templateExpressionAST  mLeftExpression ;
  public : GGS_templateExpressionAST  mRightExpression ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           abstract class 'cPtr_templateClassToTypeOperandAST'             *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateClassToTypeOperandAST : public cPtr_templateExpressionAST {
  private : typedef cPtr_templateExpressionAST inherited ;
//--- Constructor
  public : cPtr_templateClassToTypeOperandAST (const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mTypeName ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            abstract class 'cPtr_templateInstructionStringAST'             *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateInstructionStringAST : public cPtr_templateInstructionAST {
  private : typedef cPtr_templateInstructionAST inherited ;
//--- Constructor
  public : cPtr_templateInstructionStringAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_string mTemplateString ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          abstract class 'cPtr_templateInstructionExpressionAST'           *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateInstructionExpressionAST : public cPtr_templateInstructionAST {
  private : typedef cPtr_templateInstructionAST inherited ;
//--- Constructor
  public : cPtr_templateInstructionExpressionAST (const GGS_templateExpressionAST & ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_templateExpressionAST  mExpression ;
  public : GGS_location  mLocation ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            abstract class 'cPtr_templateBlockInstructionAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateBlockInstructionAST : public cPtr_templateInstructionAST {
  private : typedef cPtr_templateInstructionAST inherited ;
//--- Constructor
  public : cPtr_templateBlockInstructionAST (const GGS_templateExpressionAST & ,
                                const GGS_location & ,
                                const GGS_templateInstructionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_templateExpressionAST  mExpression ;
  public : GGS_location  mLocation ;
  public : GGS_templateInstructionListAST  mBlockInstructionList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//      abstract class 'cPtr_templateInstructionGetColumnLocationAST'        *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateInstructionGetColumnLocationAST : public cPtr_templateInstructionAST {
  private : typedef cPtr_templateInstructionAST inherited ;
//--- Constructor
  public : cPtr_templateInstructionGetColumnLocationAST (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//      abstract class 'cPtr_templateInstructionGotoColumnLocationAST'       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateInstructionGotoColumnLocationAST : public cPtr_templateInstructionAST {
  private : typedef cPtr_templateInstructionAST inherited ;
//--- Constructor
  public : cPtr_templateInstructionGotoColumnLocationAST (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           abstract class 'cPtr_templateInstructionForeachAST'             *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateInstructionForeachAST : public cPtr_templateInstructionAST {
  private : typedef cPtr_templateInstructionAST inherited ;
//--- Constructor
  public : cPtr_templateInstructionForeachAST (const GGS_bool& ,
                                const GGS_templateExpressionAST & ,
                                const GGS_string& ,
                                const GGS_templateInstructionListAST & ,
                                const GGS_templateInstructionListAST & ,
                                const GGS_lstring & ,
                                const GGS_templateInstructionListAST & ,
                                const GGS_templateInstructionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_bool mIsAscending ;
  public : GGS_templateExpressionAST  mExpression ;
  public : GGS_string mPrefix ;
  public : GGS_templateInstructionListAST  mBeforeInstructionList ;
  public : GGS_templateInstructionListAST  mDoInstructionList ;
  public : GGS_lstring  mIndexIdentifier ;
  public : GGS_templateInstructionListAST  mBetweenInstructionList ;
  public : GGS_templateInstructionListAST  mAfterInstructionList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Element of list '@templateInstructionIfBranchListAST'            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_templateInstructionIfBranchListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_templateExpressionAST  mExpression ;
  public : GGS_templateInstructionListAST  mInstructionList ;
//--- Constructor
  public : elementOf_GGS_templateInstructionIfBranchListAST (const GGS_templateExpressionAST & ,
                                const GGS_templateInstructionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_templateInstructionIfBranchListAST * nextObject (void) const { return (elementOf_GGS_templateInstructionIfBranchListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_templateInstructionIfBranchListAST * previousObject (void) const { return (elementOf_GGS_templateInstructionIfBranchListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_templateInstructionIfBranchListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_templateInstructionIfAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateInstructionIfAST : public cPtr_templateInstructionAST {
  private : typedef cPtr_templateInstructionAST inherited ;
//--- Constructor
  public : cPtr_templateInstructionIfAST (const GGS_templateInstructionIfBranchListAST & ,
                                const GGS_templateInstructionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_templateInstructionIfBranchListAST  mTemplateInstructionIfBranchList ;
  public : GGS_templateInstructionListAST  mElseInstructionList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Element of list '@templateInstructionSwitchBranchListAST'          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_templateInstructionSwitchBranchListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstringlist  mConstantList ;
  public : GGS_templateInstructionListAST  mInstructionList ;
//--- Constructor
  public : elementOf_GGS_templateInstructionSwitchBranchListAST (const GGS_lstringlist & ,
                                const GGS_templateInstructionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_templateInstructionSwitchBranchListAST * nextObject (void) const { return (elementOf_GGS_templateInstructionSwitchBranchListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_templateInstructionSwitchBranchListAST * previousObject (void) const { return (elementOf_GGS_templateInstructionSwitchBranchListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_templateInstructionSwitchBranchListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            abstract class 'cPtr_templateInstructionSwitchAST'             *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_templateInstructionSwitchAST : public cPtr_templateInstructionAST {
  private : typedef cPtr_templateInstructionAST inherited ;
//--- Constructor
  public : cPtr_templateInstructionSwitchAST (const GGS_templateExpressionAST & ,
                                const GGS_templateInstructionSwitchBranchListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_templateExpressionAST  mSwitchExpression ;
  public : GGS_templateInstructionSwitchBranchListAST  mTemplateInstructionSwitchBranchList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*

#endif
