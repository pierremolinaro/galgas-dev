//---------------------------------------------------------------------------*
//                                                                           *
//                   File 'semanticExpressionAnalysis.h'                     *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       june 4th, 2010, at 12h7'55"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef semanticExpressionAnalysis_DEFINED
#define semanticExpressionAnalysis_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

// Include imported semantics
#include "semanticsDecoratedTypes.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_variableMap ;
class GGS_predefinedTypes ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Map '@variableMap'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_variableMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_variableMap ;

//---------------------------------------------------------------------------*

class GGS_variableMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_variableMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_variableMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_variableMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_variableMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_variableMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_variableMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_variableMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Check Automaton State Method
  public : void method_checkAutomatonStates (C_Compiler & inLexique,
                                             const GGS_location & inErrorLocation                                             COMMA_LOCATION_ARGS) const ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertNonMutableAttribute [] ;

  public : static const utf32 kInsertMessage_insertUndefinedLocalVariable [] ;

  public : static const utf32 kInsertMessage_insertDefinedLocalVariable [] ;

  public : static const utf32 kInsertMessage_insertLocalConstant [] ;

  public : static const utf32 kInsertMessage_insertUsedLocalConstant [] ;

  public : static const utf32 kInsertMessage_insertInputFormalArgument [] ;

  public : static const utf32 kInsertMessage_insertInputFormalArgumentDeclaredAsUnused [] ;

  public : static const utf32 kInsertMessage_insertConstantInputFormalArgument [] ;

  public : static const utf32 kInsertMessage_insertConstantInputFormalArgumentDeclaredAsUnused [] ;

  public : static const utf32 kInsertMessage_insertOutputFormalArgument [] ;

  public : static const utf32 kInsertMessage_insertInputOutputFormalArgument [] ;

  public : static const utf32 kInsertMessage_insertInputOutputFormalArgumentDeclaredAsUnused [] ;

//--- 'insertNonMutableAttribute' Insert Modifier
  public : void modifier_insertNonMutableAttribute (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_unifiedTypeMapProxy &  inParameter0,
                                const GGS_string&  inParameter1 COMMA_LOCATION_ARGS) ;

//--- 'insertUndefinedLocalVariable' Insert Modifier
  public : void modifier_insertUndefinedLocalVariable (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_unifiedTypeMapProxy &  inParameter0,
                                const GGS_string&  inParameter1 COMMA_LOCATION_ARGS) ;

//--- 'insertDefinedLocalVariable' Insert Modifier
  public : void modifier_insertDefinedLocalVariable (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_unifiedTypeMapProxy &  inParameter0,
                                const GGS_string&  inParameter1 COMMA_LOCATION_ARGS) ;

//--- 'insertLocalConstant' Insert Modifier
  public : void modifier_insertLocalConstant (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_unifiedTypeMapProxy &  inParameter0,
                                const GGS_string&  inParameter1 COMMA_LOCATION_ARGS) ;

//--- 'insertUsedLocalConstant' Insert Modifier
  public : void modifier_insertUsedLocalConstant (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_unifiedTypeMapProxy &  inParameter0,
                                const GGS_string&  inParameter1 COMMA_LOCATION_ARGS) ;

//--- 'insertInputFormalArgument' Insert Modifier
  public : void modifier_insertInputFormalArgument (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_unifiedTypeMapProxy &  inParameter0,
                                const GGS_string&  inParameter1 COMMA_LOCATION_ARGS) ;

//--- 'insertInputFormalArgumentDeclaredAsUnused' Insert Modifier
  public : void modifier_insertInputFormalArgumentDeclaredAsUnused (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_unifiedTypeMapProxy &  inParameter0,
                                const GGS_string&  inParameter1 COMMA_LOCATION_ARGS) ;

//--- 'insertConstantInputFormalArgument' Insert Modifier
  public : void modifier_insertConstantInputFormalArgument (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_unifiedTypeMapProxy &  inParameter0,
                                const GGS_string&  inParameter1 COMMA_LOCATION_ARGS) ;

//--- 'insertConstantInputFormalArgumentDeclaredAsUnused' Insert Modifier
  public : void modifier_insertConstantInputFormalArgumentDeclaredAsUnused (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_unifiedTypeMapProxy &  inParameter0,
                                const GGS_string&  inParameter1 COMMA_LOCATION_ARGS) ;

//--- 'insertOutputFormalArgument' Insert Modifier
  public : void modifier_insertOutputFormalArgument (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_unifiedTypeMapProxy &  inParameter0,
                                const GGS_string&  inParameter1 COMMA_LOCATION_ARGS) ;

//--- 'insertInputOutputFormalArgument' Insert Modifier
  public : void modifier_insertInputOutputFormalArgument (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_unifiedTypeMapProxy &  inParameter0,
                                const GGS_string&  inParameter1 COMMA_LOCATION_ARGS) ;

//--- 'insertInputOutputFormalArgumentDeclaredAsUnused' Insert Modifier
  public : void modifier_insertInputOutputFormalArgumentDeclaredAsUnused (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_unifiedTypeMapProxy &  inParameter0,
                                const GGS_string&  inParameter1 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchForReadAccess [] ;

  public : static const utf32 kSearchMessage_searchForWriteAccess [] ;

  public : static const utf32 kSearchMessage_searchForReadWriteAccess [] ;

  public : static const utf32 kSearchMessage_searchForDropAccess [] ;

//--- 'searchForReadAccess' Search Method
  public : void modifier_searchForReadAccess (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_unifiedTypeMapProxy   & outParameter0,
                                GGS_string  & outParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchForWriteAccess' Search Method
  public : void modifier_searchForWriteAccess (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_unifiedTypeMapProxy   & outParameter0,
                                GGS_string  & outParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchForReadWriteAccess' Search Method
  public : void modifier_searchForReadWriteAccess (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_unifiedTypeMapProxy   & outParameter0,
                                GGS_string  & outParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchForDropAccess' Search Method
  public : void modifier_searchForDropAccess (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_unifiedTypeMapProxy   & outParameter0,
                                GGS_string  & outParameter1 COMMA_LOCATION_ARGS) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_unifiedTypeMapProxy & inParameter0,
                                   const GGS_string& inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_unifiedTypeMapProxy & outParameter0,
                                   GGS_string& outParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_variableMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_variableMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_variableMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
  public : GGS_stringset reader_stringSetWithKeysOfUsedLocalConstantState (C_Compiler & inLexique
                                                          COMMA_LOCATION_ARGS) const ;
  public : GGS_stringset reader_stringSetWithKeysOfLocalConstantState (C_Compiler & inLexique
                                                          COMMA_LOCATION_ARGS) const ;
  public : GGS_stringset reader_stringSetWithKeysOfUndefinedLocalVariableState (C_Compiler & inLexique
                                                          COMMA_LOCATION_ARGS) const ;
  public : GGS_stringset reader_stringSetWithKeysOfDefinedLocalVariableState (C_Compiler & inLexique
                                                          COMMA_LOCATION_ARGS) const ;
  public : GGS_stringset reader_stringSetWithKeysOfUsedLocalVariableState (C_Compiler & inLexique
                                                          COMMA_LOCATION_ARGS) const ;
  public : GGS_stringset reader_stringSetWithKeysOfDroppedLocalVariableState (C_Compiler & inLexique
                                                          COMMA_LOCATION_ARGS) const ;
  public : GGS_stringset reader_stringSetWithKeysOfUndefinedOutputFormalArgumentState (C_Compiler & inLexique
                                                          COMMA_LOCATION_ARGS) const ;
  public : GGS_stringset reader_stringSetWithKeysOfDefinedOutputFormalArgumentState (C_Compiler & inLexique
                                                          COMMA_LOCATION_ARGS) const ;
  public : GGS_stringset reader_stringSetWithKeysOfUnusedInputOutputFormalArgumentState (C_Compiler & inLexique
                                                          COMMA_LOCATION_ARGS) const ;
  public : GGS_stringset reader_stringSetWithKeysOfUsedInputOutputFormalArgumentState (C_Compiler & inLexique
                                                          COMMA_LOCATION_ARGS) const ;
  public : GGS_stringset reader_stringSetWithKeysOfDroppedInputOutputFormalArgumentState (C_Compiler & inLexique
                                                          COMMA_LOCATION_ARGS) const ;
  public : GGS_stringset reader_stringSetWithKeysOfInputOutputFormalArgumentDeclaredAsUnusedState (C_Compiler & inLexique
                                                          COMMA_LOCATION_ARGS) const ;
  public : GGS_stringset reader_stringSetWithKeysOfConstantInputFormalArgumentState (C_Compiler & inLexique
                                                          COMMA_LOCATION_ARGS) const ;
  public : GGS_stringset reader_stringSetWithKeysOfUsedConstantInputFormalArgumentState (C_Compiler & inLexique
                                                          COMMA_LOCATION_ARGS) const ;
  public : GGS_stringset reader_stringSetWithKeysOfConstantInputFormalArgumentDeclaredAsUnusedState (C_Compiler & inLexique
                                                          COMMA_LOCATION_ARGS) const ;
  public : GGS_stringset reader_stringSetWithKeysOfInputFormalParameterState (C_Compiler & inLexique
                                                          COMMA_LOCATION_ARGS) const ;
  public : GGS_stringset reader_stringSetWithKeysOfUsedInputFormalArgumentState (C_Compiler & inLexique
                                                          COMMA_LOCATION_ARGS) const ;
  public : GGS_stringset reader_stringSetWithKeysOfDroppedInputFormalArgumentState (C_Compiler & inLexique
                                                          COMMA_LOCATION_ARGS) const ;
  public : GGS_stringset reader_stringSetWithKeysOfInputFormalArgumentDeclaredAsUnusedState (C_Compiler & inLexique
                                                          COMMA_LOCATION_ARGS) const ;
  public : GGS_stringset reader_stringSetWithKeysOfCurrentInstanceAttributeState (C_Compiler & inLexique
                                                          COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_variableMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_variableMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_unifiedTypeMapProxy   & _mTypeProxy (LOCATION_ARGS) const ;
    public : /* const */ GGS_string  & _mCppName (LOCATION_ARGS) const ;
  } ;
//--- Override 'selectBlock'
  public : void modifier_beginOverrideForSelectBlock (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- Override 'repeatBlock'
  public : void modifier_beginOverrideForRepeatBlock (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

  public : void modifier_endBranch (C_Compiler & inCompiler,
                                    const GGS_location & inErrorLocation
                                    COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'checkAssignmentTypes'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkAssignmentTypes (C_Compiler &,
                                const GGS_unifiedTypeMapProxy  ,
                                const GGS_unifiedTypeMapProxy  ,
                                const GGS_location   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@semanticExpressionAST.analyzeSemanticExpression'     *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__semanticExpressionAST__analyzeSemanticExpression)  (C_Compiler & inLexique,
                                const cPtr_semanticExpressionAST * inObjectPtr,
                                const GGS_semanticContext  var_cas_inSemanticContext,
                                const GGS_predefinedTypes  var_cas_inPredefinedTypes,
                                GGS_variableMap  & var_cas_ioVariableMap,
                                GGS_semanticExpressionForGeneration  & var_cas_outExpression
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticExpressionAST__analyzeSemanticExpression (typeCategoryMethod__semanticExpressionAST__analyzeSemanticExpression inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticExpressionAST__analyzeSemanticExpression
findCategoryMethod__semanticExpressionAST__analyzeSemanticExpression (AC_galgasClassRunTimeInformationEX * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Routine 'analyzeConstructorInvocation'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeConstructorInvocation (C_Compiler &,
                                const GGS_semanticContext ,
                                const GGS_predefinedTypes ,
                                GGS_variableMap  &,
                                const GGS_lstring  ,
                                const GGS_lstring  ,
                                const GGS_semanticExpressionListAST  ,
                                GGS_unifiedTypeMapProxy  &,
                                GGS_semanticExpressionListForGeneration  &,
                                GGS_bool & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'checkDiadicOperator'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkDiadicOperator (C_Compiler &,
                                const GGS_unifiedTypeMapProxy  ,
                                const GGS_unifiedTypeMapProxy  ,
                                const GGS_bool ,
                                const GGS_string ,
                                const GGS_location  ,
                                GGS_semanticExpressionForGeneration  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@variableMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class e_variableMap {
  public : GGS_unifiedTypeMapProxy  mTypeProxy ;
  public : GGS_string mCppName ;

  public : e_variableMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_variableMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_variableMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_variableMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_variableMap * nextObject (void) const { return (elementOf_GGS_variableMap *) mNextItem ; }
  public : inline elementOf_GGS_variableMap * infObject (void) const { return (elementOf_GGS_variableMap *) mInfPtr ; }
  public : inline elementOf_GGS_variableMap * supObject (void) const { return (elementOf_GGS_variableMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_variableMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Declarations for 'predefinedTypes' struct                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_predefinedTypes ;

//---------------------------------------------------------------------------*

class GGS_predefinedTypes : public GGS__root {
//--- Default constructor
  public : GGS_predefinedTypes (void) ;

//--- Virtual destructor
  public : virtual ~GGS_predefinedTypes (void) ;

//--- Handle 'drop' instruction
  public : void drop (void) ;

//--- Method 'isBuilt'
  public : bool isBuilt (void) const ;

//--- Support for method call handling in GALGAS
  public : inline const GGS_predefinedTypes * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
  public : inline GGS_predefinedTypes * operator () (UNUSED_LOCATION_ARGS) { return this ; }

//--- Comparison
  public : GGS_bool operator_isEqual (const GGS_predefinedTypes & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_predefinedTypes & inOperand) const ;

//--- Reader 'description'
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_predefinedTypes castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Galgas 'new' destructor
  public : static GGS_predefinedTypes constructor_new (const GGS_unifiedTypeMapProxy & argument_0,
                 const GGS_unifiedTypeMapProxy & argument_1,
                 const GGS_unifiedTypeMapProxy & argument_2,
                 const GGS_unifiedTypeMapProxy & argument_3,
                 const GGS_unifiedTypeMapProxy & argument_4,
                 const GGS_unifiedTypeMapProxy & argument_5,
                 const GGS_unifiedTypeMapProxy & argument_6,
                 const GGS_unifiedTypeMapProxy & argument_7,
                 const GGS_unifiedTypeMapProxy & argument_8,
                 const GGS_unifiedTypeMapProxy & argument_9,
                 const GGS_unifiedTypeMapProxy & argument_10,
                 const GGS_unifiedTypeMapProxy & argument_11,
                 const GGS_unifiedTypeMapProxy & argument_12,
                 const GGS_unifiedTypeMapProxy & argument_13,
                 const GGS_unifiedTypeMapProxy & argument_14,
                 const GGS_unifiedTypeMapProxy & argument_15,
                 const GGS_unifiedTypeMapProxy & argument_16) ;

//--- Readers
  public : inline GGS_unifiedTypeMapProxy 
  reader_mLocationType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mLocationType ;
  }

  public : inline GGS_unifiedTypeMapProxy 
  reader_mBoolType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mBoolType ;
  }

  public : inline GGS_unifiedTypeMapProxy 
  reader_mCharType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mCharType ;
  }

  public : inline GGS_unifiedTypeMapProxy 
  reader_mStringType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mStringType ;
  }

  public : inline GGS_unifiedTypeMapProxy 
  reader_mUIntType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mUIntType ;
  }

  public : inline GGS_unifiedTypeMapProxy 
  reader_mSIntType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mSIntType ;
  }

  public : inline GGS_unifiedTypeMapProxy 
  reader_mUInt64Type (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mUInt64Type ;
  }

  public : inline GGS_unifiedTypeMapProxy 
  reader_mSInt64Type (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mSInt64Type ;
  }

  public : inline GGS_unifiedTypeMapProxy 
  reader_mDoubleType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mDoubleType ;
  }

  public : inline GGS_unifiedTypeMapProxy 
  reader_mLBoolType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mLBoolType ;
  }

  public : inline GGS_unifiedTypeMapProxy 
  reader_mLCharType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mLCharType ;
  }

  public : inline GGS_unifiedTypeMapProxy 
  reader_mLStringType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mLStringType ;
  }

  public : inline GGS_unifiedTypeMapProxy 
  reader_mLUIntType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mLUIntType ;
  }

  public : inline GGS_unifiedTypeMapProxy 
  reader_mLSIntType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mLSIntType ;
  }

  public : inline GGS_unifiedTypeMapProxy 
  reader_mLUInt64Type (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mLUInt64Type ;
  }

  public : inline GGS_unifiedTypeMapProxy 
  reader_mLSInt64Type (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mLSInt64Type ;
  }

  public : inline GGS_unifiedTypeMapProxy 
  reader_mLDoubleType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mLDoubleType ;
  }

//--- Attributes
  public : GGS_unifiedTypeMapProxy  mLocationType ;
  public : GGS_unifiedTypeMapProxy  mBoolType ;
  public : GGS_unifiedTypeMapProxy  mCharType ;
  public : GGS_unifiedTypeMapProxy  mStringType ;
  public : GGS_unifiedTypeMapProxy  mUIntType ;
  public : GGS_unifiedTypeMapProxy  mSIntType ;
  public : GGS_unifiedTypeMapProxy  mUInt64Type ;
  public : GGS_unifiedTypeMapProxy  mSInt64Type ;
  public : GGS_unifiedTypeMapProxy  mDoubleType ;
  public : GGS_unifiedTypeMapProxy  mLBoolType ;
  public : GGS_unifiedTypeMapProxy  mLCharType ;
  public : GGS_unifiedTypeMapProxy  mLStringType ;
  public : GGS_unifiedTypeMapProxy  mLUIntType ;
  public : GGS_unifiedTypeMapProxy  mLSIntType ;
  public : GGS_unifiedTypeMapProxy  mLUInt64Type ;
  public : GGS_unifiedTypeMapProxy  mLSInt64Type ;
  public : GGS_unifiedTypeMapProxy  mLDoubleType ;
} ;

//---------------------------------------------------------------------------*

#endif
