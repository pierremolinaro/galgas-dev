//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'semanticsCompilation.cpp'                       *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      march 14th, 2010, at 15h44'55"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticsCompilation.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticsCompilation.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//             Include directives generated by grammar includes              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "semanticsSLRgrammar.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
// Virtual Table for category method '@semanticDeclarationAST.enterTypeEX'   *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticDeclarationAST__enterTypeEX> gDispatchTableForMethod__semanticDeclarationAST__enterTypeEX ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticDeclarationAST__enterTypeEX (typeCategoryMethod__semanticDeclarationAST__enterTypeEX inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticDeclarationAST__enterTypeEX.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticDeclarationAST__enterTypeEX
findCategoryMethod__semanticDeclarationAST__enterTypeEX (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticDeclarationAST__enterTypeEX result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticDeclarationAST__enterTypeEX.count ()) {
    result = gDispatchTableForMethod__semanticDeclarationAST__enterTypeEX (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticDeclarationAST__enterTypeEX (superClassPtr) ;
      gDispatchTableForMethod__semanticDeclarationAST__enterTypeEX.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@mapDeclarationAST.enterTypeEX'              *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapDeclarationAST__enterTypeEX (C_Compiler & inLexique,
                                const cPtr_mapDeclarationAST * operand_2642,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2642 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_2778 (operand_2642->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_2778 = NULL ;
      while (((operand_2778 = enumerator_2778.nextObject ()))) {
        macroValidPointer (operand_2778) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_2778->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (53)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_2778->mAttributeName) ;
      }
    }
    GGS_mapMethodMap  var_cas_insertMethodMap = GGS_mapMethodMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_mapMethodListAST::cEnumerator enumerator_3103 (operand_2642->mInsertMethodList, true) ;
      const GGS_mapMethodListAST::cElement * operand_3103 = NULL ;
      while (((operand_3103 = enumerator_3103.nextObject ()))) {
        macroValidPointer (operand_3103) ;
        const GGS_bool cond_3262 = var_cas_insertMethodMap.reader_hasKey (operand_3103->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (59))) ;
        if (cond_3262.isBuiltAndTrue ()) {
          operand_3103->mMethodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_3103->mMethodName)).operator_concat (GGS_string ("' insert method is already declared")) COMMA_SOURCE_FILE_AT_LINE (61)) ;
        }else if (cond_3262.isBuiltAndFalse ()) {
          var_cas_insertMethodMap.modifier_insertKey (inLexique, operand_3103->mMethodName, operand_3103->mErrorMessage COMMA_SOURCE_FILE_AT_LINE (62)) ;
        }
      }
    }
    GGS_mapMethodMap  var_cas_removeMethodMap = GGS_mapMethodMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_mapMethodListAST::cEnumerator enumerator_3457 (operand_2642->mRemoveMethodList, true) ;
      const GGS_mapMethodListAST::cElement * operand_3457 = NULL ;
      while (((operand_3457 = enumerator_3457.nextObject ()))) {
        macroValidPointer (operand_3457) ;
        const GGS_bool cond_3617 = var_cas_removeMethodMap.reader_hasKey (operand_3457->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (68))) ;
        if (cond_3617.isBuiltAndTrue ()) {
          operand_3457->mMethodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_3457->mMethodName)).operator_concat (GGS_string ("' remove method is already declared")) COMMA_SOURCE_FILE_AT_LINE (70)) ;
        }else if (cond_3617.isBuiltAndFalse ()) {
          const GGS_bool cond_3776 = var_cas_insertMethodMap.reader_hasKey (operand_3457->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (70))) ;
          if (cond_3776.isBuiltAndTrue ()) {
            operand_3457->mMethodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_3457->mMethodName)).operator_concat (GGS_string ("' method is already declared as insert method")) COMMA_SOURCE_FILE_AT_LINE (72)) ;
          }else if (cond_3776.isBuiltAndFalse ()) {
            var_cas_removeMethodMap.modifier_insertKey (inLexique, operand_3457->mMethodName, operand_3457->mErrorMessage COMMA_SOURCE_FILE_AT_LINE (73)) ;
          }
        }
      }
    }
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_3988 (operand_2642->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_3988 = NULL ;
      while (((operand_3988 = enumerator_3988.nextObject ()))) {
        macroValidPointer (operand_3988) ;
        const GGS_string var_cas_accessorName = ((GGS_string ("set")).operator_concat (operand_3988->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ())).operator_concat (GGS_string ("ForKey")) ;
        const GGS_bool cond_4303 = var_cas_removeMethodMap.reader_hasKey (var_cas_accessorName) ;
        if (cond_4303.isBuiltAndTrue ()) {
          operand_3988->mAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_accessorName)).operator_concat (GGS_string ("' remove method name is incompatible with accessor of '"))).operator_concat (operand_3988->mAttributeName)).operator_concat (GGS_string ("' attribute")) COMMA_SOURCE_FILE_AT_LINE (81)) ;
        }else if (cond_4303.isBuiltAndFalse ()) {
          const GGS_bool cond_4499 = var_cas_insertMethodMap.reader_hasKey (var_cas_accessorName) ;
          if (cond_4499.isBuiltAndTrue ()) {
            operand_3988->mAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_accessorName)).operator_concat (GGS_string ("' insert method name is incompatible with accessor of '"))).operator_concat (operand_3988->mAttributeName)).operator_concat (GGS_string ("' attribute")) COMMA_SOURCE_FILE_AT_LINE (83)) ;
          }
        }
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_mapType ::constructor_new (inLexique, operand_2642->mMapTypeName, var_cas_attributeList, var_cas_insertMethodMap, var_cas_removeMethodMap COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_2642->mMapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (92)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@mapindexDeclarationAST.enterTypeEX'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapindexDeclarationAST__enterTypeEX (C_Compiler & inLexique,
                                const cPtr_mapindexDeclarationAST * operand_4875,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4875 != NULL) {
    GGS_typeMapIndex  var_cas_mapTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_4875->mAssociatedMapTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_mapTypeIndex COMMA_SOURCE_FILE_AT_LINE (102)) ;
    GGS_ACGalgasType  var_cas_t = GGS_mapindexType ::constructor_new (inLexique, operand_4875->mMapIndexTypeName, var_cas_mapTypeIndex COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_4875->mMapIndexTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (108)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@enumDeclarationAST.enterTypeEX'              *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__enumDeclarationAST__enterTypeEX (C_Compiler & inLexique,
                                const cPtr_enumDeclarationAST * operand_5402,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5402 != NULL) {
    GGS_enumConstructorMap  var_cas_enumConstructorMap = GGS_enumConstructorMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_lstringlist::cEnumerator enumerator_5546 (operand_5402->mConstantList, true) ;
      const GGS_lstringlist::cElement * operand_5546 = NULL ;
      while (((operand_5546 = enumerator_5546.nextObject ()))) {
        macroValidPointer (operand_5546) ;
        var_cas_enumConstructorMap.modifier_insertKey (inLexique, operand_5546->mValue COMMA_SOURCE_FILE_AT_LINE (119)) ;
      }
    }
    GGS_stringset  var_cas_allConstantSet = GGS_stringset ::constructor_emptySet () ;
    {
      GGS_lstringlist::cEnumerator enumerator_5713 (operand_5402->mConstantList, true) ;
      const GGS_lstringlist::cElement * operand_5713 = NULL ;
      while (((operand_5713 = enumerator_5713.nextObject ()))) {
        macroValidPointer (operand_5713) ;
        var_cas_allConstantSet.addAssign_operation (operand_5713->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (124))) ;
      }
    }
    GGS_enumMessageMap  var_cas_enumMessageMap = GGS_enumMessageMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_enumMessageListAST::cEnumerator enumerator_5867 (operand_5402->mEnumMessageList, true) ;
      const GGS_enumMessageListAST::cElement * operand_5867 = NULL ;
      while (((operand_5867 = enumerator_5867.nextObject ()))) {
        macroValidPointer (operand_5867) ;
        var_cas_enumMessageMap.modifier_insertKey (inLexique, operand_5867->mEnumMessageName COMMA_SOURCE_FILE_AT_LINE (129)) ;
        GGS_stringset  var_cas_messageConstantSet = GGS_stringset ::constructor_emptySet () ;
        {
          GGS_enumMessageAssociationListAST::cEnumerator enumerator_6070 (operand_5867->mMessageAssociationList, true) ;
          const GGS_enumMessageAssociationListAST::cElement * operand_6070 = NULL ;
          while (((operand_6070 = enumerator_6070.nextObject ()))) {
            macroValidPointer (operand_6070) ;
            const GGS_bool cond_6257 = var_cas_messageConstantSet.reader_hasKey (operand_6070->mConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (133))) ;
            if (cond_6257.isBuiltAndTrue ()) {
              operand_6070->mConstantName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_6070->mConstantName)).operator_concat (GGS_string ("' is already named for this message definition")) COMMA_SOURCE_FILE_AT_LINE (135)) ;
            }else if (cond_6257.isBuiltAndFalse ()) {
              const GGS_bool cond_6388 = (var_cas_allConstantSet.reader_hasKey (operand_6070->mConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (135)))).operator_not () ;
              if (cond_6388.isBuiltAndTrue ()) {
                operand_6070->mConstantName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("this constant is not declared") COMMA_SOURCE_FILE_AT_LINE (137)) ;
              }
            }
            var_cas_messageConstantSet.addAssign_operation (operand_6070->mConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (138))) ;
          }
        }
        {
          GGS_stringset::cEnumerator enumerator_6555 (var_cas_messageConstantSet, true) ;
          while (enumerator_6555.hasCurrentObject ()) {
            const GGS_bool cond_6716 = (var_cas_allConstantSet.reader_hasKey (enumerator_6555._key (HERE))).operator_not () ;
            if (cond_6716.isBuiltAndTrue ()) {
              operand_5867->mEnumMessageName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this message definition does not name the '")).operator_concat (enumerator_6555._key (HERE))).operator_concat (GGS_string ("' constant")) COMMA_SOURCE_FILE_AT_LINE (144)) ;
            }
            enumerator_6555.next () ;
          }
        }
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_enumType ::constructor_new (inLexique, operand_5402->mEnumTypeName, var_cas_enumConstructorMap, var_cas_enumMessageMap COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_5402->mEnumTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (153)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@filewrapperDeclarationAST.enterTypeEX'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__filewrapperDeclarationAST__enterTypeEX (C_Compiler & inLexique,
                                const cPtr_filewrapperDeclarationAST * operand_7099,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7099 != NULL) {
    GGS_filewrapperTemplateMapEXX  var_cas_filewrapperTemplateMap = GGS_filewrapperTemplateMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_filewrapperTemplateListAST::cEnumerator enumerator_7242 (operand_7099->mFilewrapperTemplateList, true) ;
      const GGS_filewrapperTemplateListAST::cElement * operand_7242 = NULL ;
      while (((operand_7242 = enumerator_7242.nextObject ()))) {
        macroValidPointer (operand_7242) ;
        GGS_signature  var_cas_templateSignature = GGS_signature ::constructor_emptyList () ;
        {
          GGS_formalInputParameterListAST::cEnumerator enumerator_7346 (operand_7242->mFilewrapperTemplateFormalInputParameters, true) ;
          const GGS_formalInputParameterListAST::cElement * operand_7346 = NULL ;
          while (((operand_7346 = enumerator_7346.nextObject ()))) {
            macroValidPointer (operand_7346) ;
            GGS_typeMapIndex  var_cas_parameterTypeIndex ;
            GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_7346->mFormalParameterTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (166)) ;
            var_cas_templateSignature.addAssign_operation (var_cas_parameterTypeIndex, operand_7346->mFormalParameterName, GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_HERE)) ;
          }
        }
        var_cas_filewrapperTemplateMap.modifier_insertKey (inLexique, operand_7242->mFilewrapperTemplateName, var_cas_templateSignature, operand_7242->mFilewrapperTemplatePath COMMA_SOURCE_FILE_AT_LINE (173)) ;
      }
    }
    var_cas_ioSemanticContext.mFilewrapperMap.modifier_insertKey (inLexique, operand_7099->mFilewrapperName, operand_7099->mFilewrapperPath, operand_7099->mFilewrapperExtensionList, var_cas_filewrapperTemplateMap COMMA_SOURCE_FILE_AT_LINE (179)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@sortedListDeclarationAST.enterTypeEX'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sortedListDeclarationAST__enterTypeEX (C_Compiler & inLexique,
                                const cPtr_sortedListDeclarationAST * operand_8127,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8127 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_8263 (operand_8127->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_8263 = NULL ;
      while (((operand_8263 = enumerator_8263.nextObject ()))) {
        macroValidPointer (operand_8263) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_8263->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (196)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_8263->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_listGalgasType ::constructor_new (inLexique, operand_8127->mSortedListTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_8127->mSortedListTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (204)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@structDeclarationAST.enterTypeEX'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__structDeclarationAST__enterTypeEX (C_Compiler & inLexique,
                                const cPtr_structDeclarationAST * operand_8820,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8820 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_8956 (operand_8820->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_8956 = NULL ;
      while (((operand_8956 = enumerator_8956.nextObject ()))) {
        macroValidPointer (operand_8956) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_8956->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (216)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_8956->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_structGalgasType ::constructor_new (inLexique, operand_8820->mStructTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_8820->mStructTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (224)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@listDeclarationAST.enterTypeEX'              *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listDeclarationAST__enterTypeEX (C_Compiler & inLexique,
                                const cPtr_listDeclarationAST * operand_9505,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9505 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_9641 (operand_9505->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_9641 = NULL ;
      while (((operand_9641 = enumerator_9641.nextObject ()))) {
        macroValidPointer (operand_9641) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_9641->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (236)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_9641->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_listGalgasType ::constructor_new (inLexique, operand_9505->mListTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_9505->mListTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (244)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@classDeclarationAST.enterTypeEX'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__classDeclarationAST__enterTypeEX (C_Compiler & inLexique,
                                const cPtr_classDeclarationAST * operand_10185,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10185 != NULL) {
    GGS_typeMapIndex  var_cas_superClassIndex ;
    const GGS_bool cond_10380 = (operand_10185->mSuperClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (254))).operator_isEqual (GGS_string ("")) ;
    if (cond_10380.isBuiltAndTrue ()) {
      var_cas_superClassIndex = GGS_typeMapIndex ::constructor_null (inLexique COMMA_HERE) ;
    }else if (cond_10380.isBuiltAndFalse ()) {
      GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_10185->mSuperClassName, var_cas_ioSemanticContext.mTypeMap, var_cas_superClassIndex COMMA_SOURCE_FILE_AT_LINE (257)) ;
      GGS_typeMapIndex  var_cas_classIndex ;
      GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_10185->mClassTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_classIndex COMMA_SOURCE_FILE_AT_LINE (260)) ;
      var_cas_ioSemanticContext.mDescendantClassListMap.addAssign_operation (operand_10185->mSuperClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (261)), var_cas_classIndex) ;
    }
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_10843 (operand_10185->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_10843 = NULL ;
      while (((operand_10843 = enumerator_10843.nextObject ()))) {
        macroValidPointer (operand_10843) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_10843->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (267)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_10843->mAttributeName) ;
      }
    }
    GGS_classMethodList  var_cas_methodList = GGS_classMethodList ::constructor_emptyList () ;
    GGS_classGalgasType  var_cas_t = GGS_classGalgasType ::constructor_new (inLexique, operand_10185->mIsAbstract, operand_10185->mClassTypeName, var_cas_superClassIndex, var_cas_attributeList, var_cas_methodList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_10185->mClassTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (280)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@externRoutineDeclarationAST.enterTypeEX'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externRoutineDeclarationAST__enterTypeEX (C_Compiler & inLexique,
                                const cPtr_externRoutineDeclarationAST * operand_11519,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11519 != NULL) {
    GGS_signature  var_cas_routineSignature = GGS_signature ::constructor_emptyList () ;
    {
      GGS_formalParameterListAST::cEnumerator enumerator_11693 (operand_11519->mFormalParameterList, true) ;
      const GGS_formalParameterListAST::cElement * operand_11693 = NULL ;
      while (((operand_11693 = enumerator_11693.nextObject ()))) {
        macroValidPointer (operand_11693) ;
        GGS_typeMapIndex  var_cas_parameterTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_11693->mFormalParameterTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (292)) ;
        var_cas_routineSignature.addAssign_operation (var_cas_parameterTypeIndex, operand_11693->mFormalParameterName, operand_11693->mFormalParameterPassingMode) ;
      }
    }
    var_cas_ioSemanticContext.mRoutineMap.modifier_insertKey (inLexique, operand_11519->mRoutineName, var_cas_routineSignature COMMA_SOURCE_FILE_AT_LINE (296)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@externFunctionDeclarationAST.enterTypeEX'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externFunctionDeclarationAST__enterTypeEX (C_Compiler & inLexique,
                                const cPtr_externFunctionDeclarationAST * operand_12227,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12227 != NULL) {
    GGS_signature  var_cas_functionSignature = GGS_signature ::constructor_emptyList () ;
    {
      GGS_formalParameterListAST::cEnumerator enumerator_12403 (operand_12227->mFormalParameterList, true) ;
      const GGS_formalParameterListAST::cElement * operand_12403 = NULL ;
      while (((operand_12403 = enumerator_12403.nextObject ()))) {
        macroValidPointer (operand_12403) ;
        GGS_typeMapIndex  var_cas_parameterTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_12403->mFormalParameterTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (308)) ;
        var_cas_functionSignature.addAssign_operation (var_cas_parameterTypeIndex, operand_12403->mFormalParameterName, operand_12403->mFormalParameterPassingMode) ;
      }
    }
    GGS_typeMapIndex  var_cas_resultTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_12227->mResultTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (313)) ;
    var_cas_ioSemanticContext.mFunctionMap.modifier_insertKey (inLexique, operand_12227->mFunctionName, var_cas_functionSignature, var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (315)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@lazyFunctionDeclarationAST.enterTypeEX'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lazyFunctionDeclarationAST__enterTypeEX (C_Compiler & inLexique,
                                const cPtr_lazyFunctionDeclarationAST * operand_13108,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13108 != NULL) {
    GGS_typeMapIndex  var_cas_resultTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_13108->mResultTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (325)) ;
    var_cas_ioSemanticContext.mFunctionMap.modifier_insertKey (inLexique, operand_13108->mFunctionName, GGS_signature ::constructor_emptyList (), var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (327)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@listmapDeclarationAST.enterTypeEX'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listmapDeclarationAST__enterTypeEX (C_Compiler & inLexique,
                                const cPtr_listmapDeclarationAST * operand_13586,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13586 != NULL) {
    GGS_typeMapIndex  var_cas_associatedListTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_13586->mAssociatedListTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_associatedListTypeIndex COMMA_SOURCE_FILE_AT_LINE (336)) ;
    GGS_ACGalgasType  var_cas_t = GGS_listmapGalgasType ::constructor_new (inLexique, operand_13586->mListmapTypeName, var_cas_associatedListTypeIndex COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_13586->mListmapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (342)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "buildSemanticContextEX"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildSemanticContextEX (C_Compiler & inLexique,
                                const GGS_semanticDeclarationListAST   var_cas_inSemanticDeclarationList,
                                const GGS_location   var_cas_inEndOfSourceFile,
                                GGS_semanticContextEX & var_cas_outSemanticContext COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_buildSemanticContextEX at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_typeMap  var_cas_typeMap = function_constructBuiltinTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (353)) ;
  var_cas_outSemanticContext = GGS_semanticContextEX::constructor_new (var_cas_typeMap, GGS_routineMapEX ::constructor_emptyMap (inLexique COMMA_HERE), GGS_functionMapEX ::constructor_emptyMap (inLexique COMMA_HERE), GGS_descendantClassListMapEX::constructor_emptyMap (), GGS_filewrapperMapEXX ::constructor_emptyMap (inLexique COMMA_HERE)) ;
  {
    GGS_semanticDeclarationListAST::cEnumerator enumerator_14623 (var_cas_inSemanticDeclarationList, true) ;
    const GGS_semanticDeclarationListAST::cElement * operand_14623 = NULL ;
    while (((operand_14623 = enumerator_14623.nextObject ()))) {
      macroValidPointer (operand_14623) ;
      const GGS_semanticDeclarationAST  temp_14664 = operand_14623->mSemanticDeclaration ;
      if (temp_14664.isBuilt ()) {
        typeCategoryMethod__semanticDeclarationAST__enterTypeEX method = findCategoryMethod__semanticDeclarationAST__enterTypeEX (temp_14664.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, temp_14664 (HERE), var_cas_outSemanticContext COMMA_SOURCE_FILE_AT_LINE (364)) ;
        }
      }
    }
  }
  const GGS_bool cond_15435 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_15435.isBuiltAndTrue ()) {
    GGS_stringlist  var_cas_undefinedClasses = var_cas_outSemanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (368)).reader_unsolvedIndexKeyStringList (inLexique COMMA_SOURCE_FILE_AT_LINE (368)) ;
    const GGS_bool cond_15132 = (var_cas_undefinedClasses.reader_length ()).operator_isEqual (GGS_uint (1U)) ;
    if (cond_15132.isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage = GGS_string ("there is 1 undefined type:") ;
      {
        GGS_stringlist::cEnumerator enumerator_15008 (var_cas_undefinedClasses, true) ;
        const GGS_stringlist::cElement * operand_15008 = NULL ;
        while (((operand_15008 = enumerator_15008.nextObject ()))) {
          macroValidPointer (operand_15008) ;
          var_cas_errorMessage.appendCString ("\n"
            "-  @") ;
          var_cas_errorMessage.dotAssign_operation (operand_15008->mValue) ;
        }
      }
      var_cas_inEndOfSourceFile.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (375)) ;
    }else if (cond_15132.isBuiltAndFalse ()) {
      const GGS_bool cond_15424 = (var_cas_undefinedClasses.reader_length ()).operator_strictSup (GGS_uint (1U)) ;
      if (cond_15424.isBuiltAndTrue ()) {
        GGS_string var_cas_errorMessage = ((GGS_string ("there are ")).operator_concat (var_cas_undefinedClasses.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (376)))).operator_concat (GGS_string (" undefined types:")) ;
        {
          GGS_stringlist::cEnumerator enumerator_15302 (var_cas_undefinedClasses, true) ;
          const GGS_stringlist::cElement * operand_15302 = NULL ;
          while (((operand_15302 = enumerator_15302.nextObject ()))) {
            macroValidPointer (operand_15302) ;
            var_cas_errorMessage.appendCString ("\n"
              "-  @") ;
            var_cas_errorMessage.dotAssign_operation (operand_15302->mValue) ;
          }
        }
        var_cas_inEndOfSourceFile.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (381)) ;
      }
    }
  }
  const GGS_bool cond_15809 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_15809.isBuiltAndTrue ()) {
    {
      GGS_typeMap::cEnumerator enumerator_15674 (var_cas_outSemanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (388)), true) ;
      const GGS_typeMap::cElement * operand_15674 = NULL ;
      while (((operand_15674 = enumerator_15674.nextObject ()))) {
        macroValidPointer (operand_15674) ;
        const GGS_ACGalgasType  temp_15743 = operand_15674->mInfo.mType ;
        if (temp_15743.isBuilt ()) {
          temp_15743 (HERE)->method_checkTypeCrossReferences (inLexique, var_cas_outSemanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (389)).reader_count () COMMA_SOURCE_FILE_AT_LINE (389)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_buildSemanticContextEX\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@semanticInstructionAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis> gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis (typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis
findCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis.count ()) {
    result = gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis (superClassPtr) ;
      gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableDeclarationAST.instructionSemanticAnalysis' *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclarationAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localVariableDeclarationAST * operand_16491,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16491 != NULL) {
    inLexique.printMessage (GGS_string ("@localVariableDeclarationAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (409)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableDeclarationWithInitializationAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclarationWithInitializationAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localVariableDeclarationWithInitializationAST * operand_16798,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16798 != NULL) {
    inLexique.printMessage (GGS_string ("@localVariableDeclarationWithInitializationAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (417)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableDeclarationWithAssignmentAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclarationWithAssignmentAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localVariableDeclarationWithAssignmentAST * operand_17119,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17119 != NULL) {
    inLexique.printMessage (GGS_string ("@localVariableDeclarationWithAssignmentAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (425)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localConstantDeclarationWithSourceExpressionAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localConstantDeclarationWithSourceExpressionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localConstantDeclarationWithSourceExpressionAST * operand_17443,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17443 != NULL) {
    inLexique.printMessage (GGS_string ("@localConstantDeclarationWithSourceExpressionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (434)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localConstantDeclarationWithConstructorCallAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localConstantDeclarationWithConstructorCallAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localConstantDeclarationWithConstructorCallAST * operand_17771,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17771 != NULL) {
    inLexique.printMessage (GGS_string ("@localConstantDeclarationWithConstructorCallAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (442)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@assignmentInstructionAST.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__assignmentInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_assignmentInstructionAST * operand_18076,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18076 != NULL) {
    inLexique.printMessage (GGS_string ("@assignmentInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (450)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@appendInstructionAST.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__appendInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_appendInstructionAST * operand_18355,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18355 != NULL) {
    inLexique.printMessage (GGS_string ("@appendInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (458)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@sendInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sendInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_sendInstructionAST * operand_18628,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18628 != NULL) {
    inLexique.printMessage (GGS_string ("@sendInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (466)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@foreachInstructionAST.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__foreachInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_foreachInstructionAST * operand_18902,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18902 != NULL) {
    inLexique.printMessage (GGS_string ("@foreachInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (474)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@ifInstructionAST.instructionSemanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__ifInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_ifInstructionAST * operand_19174,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19174 != NULL) {
    inLexique.printMessage (GGS_string ("@ifInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (482)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@methodCallInstructionAST.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__methodCallInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_methodCallInstructionAST * operand_19449,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19449 != NULL) {
    inLexique.printMessage (GGS_string ("@methodCallInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (490)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@modifierCallInstructionAST.instructionSemanticAnalysis'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__modifierCallInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_modifierCallInstructionAST * operand_19734,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19734 != NULL) {
    inLexique.printMessage (GGS_string ("@modifierCallInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (498)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@errorInstructionAST.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__errorInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_errorInstructionAST * operand_20014,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20014 != NULL) {
    inLexique.printMessage (GGS_string ("@errorInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (506)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@warningInstructionAST.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__warningInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_warningInstructionAST * operand_20289,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20289 != NULL) {
    inLexique.printMessage (GGS_string ("@warningInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (514)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@routineCallInstructionAST.instructionSemanticAnalysis'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__routineCallInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_routineCallInstructionAST * operand_20570,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20570 != NULL) {
    inLexique.printMessage (GGS_string ("@routineCallInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (522)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@matchInstructionAST.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__matchInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_matchInstructionAST * operand_20849,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20849 != NULL) {
    inLexique.printMessage (GGS_string ("@matchInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (530)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@castInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__castInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_castInstructionAST * operand_21121,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21121 != NULL) {
    inLexique.printMessage (GGS_string ("@castInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (538)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@addInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__addInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_addInstructionAST * operand_21391,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21391 != NULL) {
    inLexique.printMessage (GGS_string ("@addInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (546)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@removeInstructionAST.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__removeInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_removeInstructionAST * operand_21663,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21663 != NULL) {
    inLexique.printMessage (GGS_string ("@removeInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (554)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@incrementInstructionAST.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__incrementInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_incrementInstructionAST * operand_21941,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21941 != NULL) {
    inLexique.printMessage (GGS_string ("@incrementInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (562)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@decrementInstructionAST.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__decrementInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_decrementInstructionAST * operand_22222,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22222 != NULL) {
    inLexique.printMessage (GGS_string ("@decrementInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (570)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@loopInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__loopInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_loopInstructionAST * operand_22498,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22498 != NULL) {
    inLexique.printMessage (GGS_string ("@loopInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (578)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@messageInstructionAST.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__messageInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_messageInstructionAST * operand_22772,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22772 != NULL) {
    inLexique.printMessage (GGS_string ("@messageInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (586)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@logInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__logInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_logInstructionAST * operand_23045,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23045 != NULL) {
    inLexique.printMessage (GGS_string ("@logInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (594)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@grammarInstructionAST.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__grammarInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_grammarInstructionAST * operand_23318,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23318 != NULL) {
    inLexique.printMessage (GGS_string ("@grammarInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (602)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@withInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__withInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_withInstructionAST * operand_23592,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23592 != NULL) {
    inLexique.printMessage (GGS_string ("@withInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (610)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@switchInstructionAST.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__switchInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_switchInstructionAST * operand_23865,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23865 != NULL) {
    inLexique.printMessage (GGS_string ("@switchInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (618)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@typeMethodInstructionAST.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__typeMethodInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_typeMethodInstructionAST * operand_24144,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_24144 != NULL) {
    inLexique.printMessage (GGS_string ("@typeMethodInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (626)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@semanticDeclarationAST.semanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticDeclarationAST__semanticAnalysis> gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticDeclarationAST__semanticAnalysis (typeCategoryMethod__semanticDeclarationAST__semanticAnalysis inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticDeclarationAST__semanticAnalysis
findCategoryMethod__semanticDeclarationAST__semanticAnalysis (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticDeclarationAST__semanticAnalysis result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis.count ()) {
    result = gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticDeclarationAST__semanticAnalysis (superClassPtr) ;
      gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@mapDeclarationAST.semanticAnalysis'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_mapDeclarationAST * operand_24908,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_24908 != NULL) {
    inLexique.printMessage (GGS_string ("@mapDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (644)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@mapindexDeclarationAST.semanticAnalysis'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapindexDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_mapindexDeclarationAST * operand_25160,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25160 != NULL) {
    inLexique.printMessage (GGS_string ("@mapindexDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (652)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@enumDeclarationAST.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__enumDeclarationAST__semanticAnalysis (C_Compiler &,
                                const cPtr_enumDeclarationAST * operand_25413,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25413 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@filewrapperDeclarationAST.semanticAnalysis'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__filewrapperDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_filewrapperDeclarationAST * operand_25635,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25635 != NULL) {
    inLexique.printMessage (GGS_string ("@filewrapperDeclarationAST.semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (668)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@sortedListDeclarationAST.semanticAnalysis'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sortedListDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_sortedListDeclarationAST * operand_25897,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25897 != NULL) {
    inLexique.printMessage (GGS_string ("@sortedListDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (676)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@structDeclarationAST.semanticAnalysis'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__structDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_structDeclarationAST * operand_26154,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26154 != NULL) {
    inLexique.printMessage (GGS_string ("@structDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (684)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@listDeclarationAST.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_listDeclarationAST * operand_26405,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26405 != NULL) {
    inLexique.printMessage (GGS_string ("@listDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (692)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@classDeclarationAST.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__classDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_classDeclarationAST * operand_26655,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26655 != NULL) {
    inLexique.printMessage (GGS_string ("@classDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (700)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@externRoutineDeclarationAST.semanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externRoutineDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_externRoutineDeclarationAST * operand_26914,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26914 != NULL) {
    inLexique.printMessage (GGS_string ("@externRoutineDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (708)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@routineDeclarationAST.semanticAnalysis'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__routineDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_routineDeclarationAST * operand_27175,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_27175 != NULL) {
    inLexique.printMessage (GGS_string ("@routineDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (716)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@externFunctionDeclarationAST.semanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externFunctionDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_externFunctionDeclarationAST * operand_27561,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_27561 != NULL) {
    inLexique.printMessage (GGS_string ("@externFunctionDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (727)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@functionDeclarationAST.semanticAnalysis'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__functionDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_functionDeclarationAST * operand_27824,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_27824 != NULL) {
    inLexique.printMessage (GGS_string ("@functionDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (735)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@lazyFunctionDeclarationAST.semanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lazyFunctionDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_lazyFunctionDeclarationAST * operand_28210,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_28210 != NULL) {
    inLexique.printMessage (GGS_string ("@lazyFunctionDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (746)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@listmapDeclarationAST.semanticAnalysis'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listmapDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_listmapDeclarationAST * operand_28470,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_28470 != NULL) {
    inLexique.printMessage (GGS_string ("@listmapDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (754)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "parseSemanticComponent"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_parseSemanticComponent (C_Compiler & inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct,
                                GGS_semanticsComponentAST  & var_cas_outSemanticsComponentRoot COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_parseSemanticComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_basename = var_cas_inSourceFile.ggs_string ().reader_lastPathComponent ().reader_stringByDeletingPathExtension () ;
  GGS_lstring  var_cas_basenameKey = GGS_lstring ::constructor_new (inLexique, var_cas_basename, GGS_location (inLexique) COMMA_HERE) ;
  const GGS_bool cond_29484 = var_cas_ioParsedComponentStruct.reader_mParsedSemanticsComponentMap (inLexique COMMA_SOURCE_FILE_AT_LINE (770)).reader_hasKey (var_cas_basename) ;
  if (cond_29484.isBuiltAndTrue ()) {
    const GGS_parsedSemanticsComponentMap  temp_29434 = var_cas_ioParsedComponentStruct.reader_mParsedSemanticsComponentMap (inLexique COMMA_SOURCE_FILE_AT_LINE (771)) ;
    if (temp_29434.isBuilt ()) {
      temp_29434 (HERE)->method_searchKey (inLexique, var_cas_basenameKey, var_cas_outSemanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (771)) ;
    }
  }else if (cond_29484.isBuiltAndFalse ()) {
    const GGS_string _depExtension = GGS_string ("") ;
    const GGS_string _depPath = GGS_string ("") ;
    if (_depExtension.isBuilt () && _depPath.isBuilt ()) {
      C_Grammar_semanticsSLRgrammar::_performSourceFileParsing_ (inLexique,
                                    _depExtension.string (),
                                    _depPath.string (),
                                    NULL,
                                    var_cas_inSourceFile,
                                    var_cas_outSemanticsComponentRoot
                                    COMMA_SOURCE_FILE_AT_LINE (773)) ;
    }
    var_cas_ioParsedComponentStruct.mParsedSemanticsComponentMap.modifier_insertKey (inLexique, var_cas_basenameKey, var_cas_outSemanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (774)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_parseSemanticComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "recursivelyImportSemanticComponent"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_recursivelyImportSemanticComponent (C_Compiler & inLexique,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct,
                                GGS_semanticDeclarationListAST  & var_cas_ioSemanticDeclarationList,
                                GGS_stringset  & var_cas_ioParsedFileSet,
                                const GGS_lstringlist   var_cas_inListOfFilesToParse,
                                const GGS_string  var_cas_inDirectory COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_recursivelyImportSemanticComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  {
    GGS_lstringlist::cEnumerator enumerator_30057 (var_cas_inListOfFilesToParse, true) ;
    const GGS_lstringlist::cElement * operand_30057 = NULL ;
    while (((operand_30057 = enumerator_30057.nextObject ()))) {
      macroValidPointer (operand_30057) ;
      const GGS_bool cond_30985 = (var_cas_ioParsedFileSet.reader_hasKey (operand_30057->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (788)))).operator_not () ;
      if (cond_30985.isBuiltAndTrue ()) {
        var_cas_ioParsedFileSet.addAssign_operation (operand_30057->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (789))) ;
        GGS_string var_cas_extension = operand_30057->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (790)).reader_pathExtension () ;
        const GGS_bool cond_30972 = (var_cas_extension).operator_isEqual (GGS_string ("gSemantics")) ;
        if (cond_30972.isBuiltAndTrue ()) {
          GGS_lstring  var_cas_filePath = GGS_lstring ::constructor_new (inLexique, operand_30057->mValue.ggs_string ().reader_absolutePathFromPath (var_cas_inDirectory), operand_30057->mValue.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (794)) COMMA_HERE) ;
          GGS_semanticsComponentAST  var_cas_semanticsComponentRoot ;
          ::routine_parseSemanticComponent (inLexique,  var_cas_filePath,  var_cas_ioParsedComponentStruct,  var_cas_semanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (797)) ;
          var_cas_ioSemanticDeclarationList = (var_cas_ioSemanticDeclarationList).operator_concat (var_cas_semanticsComponentRoot.reader_mSemanticDeclarations (inLexique COMMA_SOURCE_FILE_AT_LINE (802)).reader_mSemanticDeclarationList (inLexique COMMA_SOURCE_FILE_AT_LINE (802))) ;
          ::routine_recursivelyImportSemanticComponent (inLexique,  var_cas_ioParsedComponentStruct,  var_cas_ioSemanticDeclarationList,  var_cas_ioParsedFileSet,  var_cas_semanticsComponentRoot.reader_mImportedComponentFileNameList (inLexique COMMA_SOURCE_FILE_AT_LINE (807)),  var_cas_inDirectory COMMA_SOURCE_FILE_AT_LINE (803)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_recursivelyImportSemanticComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "compileSemanticsComponent"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileSemanticsComponent (C_Compiler & inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                const GGS_string  /* var_cas_inOutputDirectory */,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_compileSemanticsComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_semanticsComponentAST  var_cas_semanticsComponentRoot ;
  ::routine_parseSemanticComponent (inLexique,  var_cas_inSourceFile,  var_cas_ioParsedComponentStruct,  var_cas_semanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (824)) ;
  const GGS_string var_cas_basename = var_cas_inSourceFile.ggs_string ().reader_lastPathComponent ().reader_stringByDeletingPathExtension () ;
  const GGS_lstring  var_cas_componentName = var_cas_semanticsComponentRoot.reader_mSemanticsComponentName (inLexique COMMA_SOURCE_FILE_AT_LINE (831)) ;
  const GGS_bool cond_31875 = (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (832))).operator_isNotEqual (var_cas_basename) ;
  if (cond_31875.isBuiltAndTrue ()) {
    var_cas_componentName.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, ((((GGS_string ("GALGAS checks "
      "the component name ('")).operator_concat (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (834)))).operator_concat (GGS_string ("') against the source file base name ('"))).operator_concat (var_cas_basename)).operator_concat (GGS_string ("'): they should be identical")) COMMA_SOURCE_FILE_AT_LINE (836)) ;
  }
  GGS_semanticDeclarationListAST  var_cas_semanticDeclarationList = var_cas_semanticsComponentRoot.reader_mSemanticDeclarations (inLexique COMMA_SOURCE_FILE_AT_LINE (839)).reader_mSemanticDeclarationList (inLexique COMMA_SOURCE_FILE_AT_LINE (839)) ;
  GGS_stringset  var_cas_parsedFileSet = GGS_stringset ::constructor_setWithString (var_cas_inSourceFile.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (840))) ;
  ::routine_recursivelyImportSemanticComponent (inLexique,  var_cas_ioParsedComponentStruct,  var_cas_semanticDeclarationList,  var_cas_parsedFileSet,  var_cas_semanticsComponentRoot.reader_mImportedComponentFileNameList (inLexique COMMA_SOURCE_FILE_AT_LINE (845)),  var_cas_inSourceFile.ggs_string ().reader_stringByDeletingLastPathComponent () COMMA_SOURCE_FILE_AT_LINE (841)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_compileSemanticsComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticsCompilation (void) {
  enterCategoryMethod__semanticDeclarationAST__enterTypeEX ((typeCategoryMethod__semanticDeclarationAST__enterTypeEX) category_method__mapDeclarationAST__enterTypeEX, gClassInfoFor__mapDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterTypeEX ((typeCategoryMethod__semanticDeclarationAST__enterTypeEX) category_method__mapindexDeclarationAST__enterTypeEX, gClassInfoFor__mapindexDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterTypeEX ((typeCategoryMethod__semanticDeclarationAST__enterTypeEX) category_method__enumDeclarationAST__enterTypeEX, gClassInfoFor__enumDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterTypeEX ((typeCategoryMethod__semanticDeclarationAST__enterTypeEX) category_method__filewrapperDeclarationAST__enterTypeEX, gClassInfoFor__filewrapperDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterTypeEX ((typeCategoryMethod__semanticDeclarationAST__enterTypeEX) category_method__sortedListDeclarationAST__enterTypeEX, gClassInfoFor__sortedListDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterTypeEX ((typeCategoryMethod__semanticDeclarationAST__enterTypeEX) category_method__structDeclarationAST__enterTypeEX, gClassInfoFor__structDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterTypeEX ((typeCategoryMethod__semanticDeclarationAST__enterTypeEX) category_method__listDeclarationAST__enterTypeEX, gClassInfoFor__listDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterTypeEX ((typeCategoryMethod__semanticDeclarationAST__enterTypeEX) category_method__classDeclarationAST__enterTypeEX, gClassInfoFor__classDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterTypeEX ((typeCategoryMethod__semanticDeclarationAST__enterTypeEX) category_method__externRoutineDeclarationAST__enterTypeEX, gClassInfoFor__externRoutineDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterTypeEX ((typeCategoryMethod__semanticDeclarationAST__enterTypeEX) category_method__externFunctionDeclarationAST__enterTypeEX, gClassInfoFor__externFunctionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterTypeEX ((typeCategoryMethod__semanticDeclarationAST__enterTypeEX) category_method__lazyFunctionDeclarationAST__enterTypeEX, gClassInfoFor__lazyFunctionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterTypeEX ((typeCategoryMethod__semanticDeclarationAST__enterTypeEX) category_method__listmapDeclarationAST__enterTypeEX, gClassInfoFor__listmapDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localVariableDeclarationAST__instructionSemanticAnalysis, gClassInfoFor__localVariableDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localVariableDeclarationWithInitializationAST__instructionSemanticAnalysis, gClassInfoFor__localVariableDeclarationWithInitializationAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localVariableDeclarationWithAssignmentAST__instructionSemanticAnalysis, gClassInfoFor__localVariableDeclarationWithAssignmentAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localConstantDeclarationWithSourceExpressionAST__instructionSemanticAnalysis, gClassInfoFor__localConstantDeclarationWithSourceExpressionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localConstantDeclarationWithConstructorCallAST__instructionSemanticAnalysis, gClassInfoFor__localConstantDeclarationWithConstructorCallAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__assignmentInstructionAST__instructionSemanticAnalysis, gClassInfoFor__assignmentInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__appendInstructionAST__instructionSemanticAnalysis, gClassInfoFor__appendInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__sendInstructionAST__instructionSemanticAnalysis, gClassInfoFor__sendInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__foreachInstructionAST__instructionSemanticAnalysis, gClassInfoFor__foreachInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__ifInstructionAST__instructionSemanticAnalysis, gClassInfoFor__ifInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__methodCallInstructionAST__instructionSemanticAnalysis, gClassInfoFor__methodCallInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__modifierCallInstructionAST__instructionSemanticAnalysis, gClassInfoFor__modifierCallInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__errorInstructionAST__instructionSemanticAnalysis, gClassInfoFor__errorInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__warningInstructionAST__instructionSemanticAnalysis, gClassInfoFor__warningInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__routineCallInstructionAST__instructionSemanticAnalysis, gClassInfoFor__routineCallInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__matchInstructionAST__instructionSemanticAnalysis, gClassInfoFor__matchInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__castInstructionAST__instructionSemanticAnalysis, gClassInfoFor__castInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__addInstructionAST__instructionSemanticAnalysis, gClassInfoFor__addInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__removeInstructionAST__instructionSemanticAnalysis, gClassInfoFor__removeInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__incrementInstructionAST__instructionSemanticAnalysis, gClassInfoFor__incrementInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__decrementInstructionAST__instructionSemanticAnalysis, gClassInfoFor__decrementInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__loopInstructionAST__instructionSemanticAnalysis, gClassInfoFor__loopInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__messageInstructionAST__instructionSemanticAnalysis, gClassInfoFor__messageInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__logInstructionAST__instructionSemanticAnalysis, gClassInfoFor__logInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__grammarInstructionAST__instructionSemanticAnalysis, gClassInfoFor__grammarInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__withInstructionAST__instructionSemanticAnalysis, gClassInfoFor__withInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__switchInstructionAST__instructionSemanticAnalysis, gClassInfoFor__switchInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__typeMethodInstructionAST__instructionSemanticAnalysis, gClassInfoFor__typeMethodInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__mapDeclarationAST__semanticAnalysis, gClassInfoFor__mapDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__mapindexDeclarationAST__semanticAnalysis, gClassInfoFor__mapindexDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__enumDeclarationAST__semanticAnalysis, gClassInfoFor__enumDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__filewrapperDeclarationAST__semanticAnalysis, gClassInfoFor__filewrapperDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__sortedListDeclarationAST__semanticAnalysis, gClassInfoFor__sortedListDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__structDeclarationAST__semanticAnalysis, gClassInfoFor__structDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__listDeclarationAST__semanticAnalysis, gClassInfoFor__listDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__classDeclarationAST__semanticAnalysis, gClassInfoFor__classDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__externRoutineDeclarationAST__semanticAnalysis, gClassInfoFor__externRoutineDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__routineDeclarationAST__semanticAnalysis, gClassInfoFor__routineDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__externFunctionDeclarationAST__semanticAnalysis, gClassInfoFor__externFunctionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__functionDeclarationAST__semanticAnalysis, gClassInfoFor__functionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__lazyFunctionDeclarationAST__semanticAnalysis, gClassInfoFor__lazyFunctionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__listmapDeclarationAST__semanticAnalysis, gClassInfoFor__listmapDeclarationAST.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_semanticsCompilation (void) {
  gDispatchTableForMethod__semanticDeclarationAST__enterTypeEX.free () ;
  gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis.free () ;
  gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticsCompilation (prologueRoutineFor_semanticsCompilation, epilogueRoutineFor_semanticsCompilation) ;

//---------------------------------------------------------------------------*

