//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'semanticsCompilation.cpp'                       *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      march 10th, 2010, at 23h34'13"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticsCompilation.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticsCompilation.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//             Include directives generated by grammar includes              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "semanticsSLRgrammar.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
// Virtual Table for category method '@semanticDeclarationAST.enterTypeEX'   *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticDeclarationAST__enterTypeEX> gDispatchTableForMethod__semanticDeclarationAST__enterTypeEX ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticDeclarationAST__enterTypeEX (typeCategoryMethod__semanticDeclarationAST__enterTypeEX inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticDeclarationAST__enterTypeEX.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticDeclarationAST__enterTypeEX
findCategoryMethod__semanticDeclarationAST__enterTypeEX (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticDeclarationAST__enterTypeEX result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticDeclarationAST__enterTypeEX.count ()) {
    result = gDispatchTableForMethod__semanticDeclarationAST__enterTypeEX (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticDeclarationAST__enterTypeEX (superClassPtr) ;
      gDispatchTableForMethod__semanticDeclarationAST__enterTypeEX.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@mapDeclarationAST.enterTypeEX'              *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapDeclarationAST__enterTypeEX (C_Compiler & inLexique,
                                const cPtr_mapDeclarationAST * operand_2638,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2638 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_2774 (operand_2638->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_2774 = NULL ;
      while (((operand_2774 = enumerator_2774.nextObject ()))) {
        macroValidPointer (operand_2774) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_2774->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (53)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_2774->mAttributeName) ;
      }
    }
    GGS_mapMethodMap  var_cas_insertMethodMap = GGS_mapMethodMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_mapMethodListAST::cEnumerator enumerator_3099 (operand_2638->mInsertMethodList, true) ;
      const GGS_mapMethodListAST::cElement * operand_3099 = NULL ;
      while (((operand_3099 = enumerator_3099.nextObject ()))) {
        macroValidPointer (operand_3099) ;
        const GGS_bool cond_3258 = var_cas_insertMethodMap.reader_hasKey (operand_3099->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (59))) ;
        if (cond_3258.isBuiltAndTrue ()) {
          operand_3099->mMethodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_3099->mMethodName)).operator_concat (GGS_string ("' insert method is already declared")) COMMA_SOURCE_FILE_AT_LINE (61)) ;
        }else if (cond_3258.isBuiltAndFalse ()) {
          var_cas_insertMethodMap.modifier_insertKey (inLexique, operand_3099->mMethodName, operand_3099->mErrorMessage COMMA_SOURCE_FILE_AT_LINE (62)) ;
        }
      }
    }
    GGS_mapMethodMap  var_cas_removeMethodMap = GGS_mapMethodMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_mapMethodListAST::cEnumerator enumerator_3453 (operand_2638->mRemoveMethodList, true) ;
      const GGS_mapMethodListAST::cElement * operand_3453 = NULL ;
      while (((operand_3453 = enumerator_3453.nextObject ()))) {
        macroValidPointer (operand_3453) ;
        const GGS_bool cond_3613 = var_cas_removeMethodMap.reader_hasKey (operand_3453->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (68))) ;
        if (cond_3613.isBuiltAndTrue ()) {
          operand_3453->mMethodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_3453->mMethodName)).operator_concat (GGS_string ("' remove method is already declared")) COMMA_SOURCE_FILE_AT_LINE (70)) ;
        }else if (cond_3613.isBuiltAndFalse ()) {
          const GGS_bool cond_3772 = var_cas_insertMethodMap.reader_hasKey (operand_3453->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (70))) ;
          if (cond_3772.isBuiltAndTrue ()) {
            operand_3453->mMethodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_3453->mMethodName)).operator_concat (GGS_string ("' method is already declared as insert method")) COMMA_SOURCE_FILE_AT_LINE (72)) ;
          }else if (cond_3772.isBuiltAndFalse ()) {
            var_cas_removeMethodMap.modifier_insertKey (inLexique, operand_3453->mMethodName, operand_3453->mErrorMessage COMMA_SOURCE_FILE_AT_LINE (73)) ;
          }
        }
      }
    }
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_3984 (operand_2638->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_3984 = NULL ;
      while (((operand_3984 = enumerator_3984.nextObject ()))) {
        macroValidPointer (operand_3984) ;
        const GGS_string var_cas_accessorName = ((GGS_string ("set")).operator_concat (operand_3984->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ())).operator_concat (GGS_string ("ForKey")) ;
        const GGS_bool cond_4299 = var_cas_removeMethodMap.reader_hasKey (var_cas_accessorName) ;
        if (cond_4299.isBuiltAndTrue ()) {
          operand_3984->mAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_accessorName)).operator_concat (GGS_string ("' remove method name is incompatible with accessor of '"))).operator_concat (operand_3984->mAttributeName)).operator_concat (GGS_string ("' attribute")) COMMA_SOURCE_FILE_AT_LINE (81)) ;
        }else if (cond_4299.isBuiltAndFalse ()) {
          const GGS_bool cond_4495 = var_cas_insertMethodMap.reader_hasKey (var_cas_accessorName) ;
          if (cond_4495.isBuiltAndTrue ()) {
            operand_3984->mAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_accessorName)).operator_concat (GGS_string ("' insert method name is incompatible with accessor of '"))).operator_concat (operand_3984->mAttributeName)).operator_concat (GGS_string ("' attribute")) COMMA_SOURCE_FILE_AT_LINE (83)) ;
          }
        }
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_mapType ::constructor_new (inLexique, operand_2638->mMapTypeName, var_cas_attributeList, var_cas_insertMethodMap, var_cas_removeMethodMap COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_2638->mMapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (92)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@mapindexDeclarationAST.enterTypeEX'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapindexDeclarationAST__enterTypeEX (C_Compiler & inLexique,
                                const cPtr_mapindexDeclarationAST * operand_4871,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4871 != NULL) {
    GGS_typeMapIndex  var_cas_mapTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_4871->mAssociatedMapTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_mapTypeIndex COMMA_SOURCE_FILE_AT_LINE (102)) ;
    GGS_ACGalgasType  var_cas_t = GGS_mapindexType ::constructor_new (inLexique, operand_4871->mMapIndexTypeName, var_cas_mapTypeIndex COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_4871->mMapIndexTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (108)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@enumDeclarationAST.enterTypeEX'              *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__enumDeclarationAST__enterTypeEX (C_Compiler & inLexique,
                                const cPtr_enumDeclarationAST * operand_5398,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5398 != NULL) {
    GGS_enumConstructorMap  var_cas_enumConstructorMap = GGS_enumConstructorMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_lstringlist::cEnumerator enumerator_5542 (operand_5398->mConstantList, true) ;
      const GGS_lstringlist::cElement * operand_5542 = NULL ;
      while (((operand_5542 = enumerator_5542.nextObject ()))) {
        macroValidPointer (operand_5542) ;
        var_cas_enumConstructorMap.modifier_insertKey (inLexique, operand_5542->mValue COMMA_SOURCE_FILE_AT_LINE (119)) ;
      }
    }
    GGS_stringset  var_cas_allConstantSet = GGS_stringset ::constructor_emptySet () ;
    {
      GGS_lstringlist::cEnumerator enumerator_5709 (operand_5398->mConstantList, true) ;
      const GGS_lstringlist::cElement * operand_5709 = NULL ;
      while (((operand_5709 = enumerator_5709.nextObject ()))) {
        macroValidPointer (operand_5709) ;
        var_cas_allConstantSet.addAssign_operation (operand_5709->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (124))) ;
      }
    }
    GGS_enumMessageMap  var_cas_enumMessageMap = GGS_enumMessageMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_enumMessageListAST::cEnumerator enumerator_5863 (operand_5398->mEnumMessageList, true) ;
      const GGS_enumMessageListAST::cElement * operand_5863 = NULL ;
      while (((operand_5863 = enumerator_5863.nextObject ()))) {
        macroValidPointer (operand_5863) ;
        var_cas_enumMessageMap.modifier_insertKey (inLexique, operand_5863->mEnumMessageName COMMA_SOURCE_FILE_AT_LINE (129)) ;
        GGS_stringset  var_cas_messageConstantSet = GGS_stringset ::constructor_emptySet () ;
        {
          GGS_enumMessageAssociationListAST::cEnumerator enumerator_6066 (operand_5863->mMessageAssociationList, true) ;
          const GGS_enumMessageAssociationListAST::cElement * operand_6066 = NULL ;
          while (((operand_6066 = enumerator_6066.nextObject ()))) {
            macroValidPointer (operand_6066) ;
            const GGS_bool cond_6253 = var_cas_messageConstantSet.reader_hasKey (operand_6066->mConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (133))) ;
            if (cond_6253.isBuiltAndTrue ()) {
              operand_6066->mConstantName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_6066->mConstantName)).operator_concat (GGS_string ("' is already named for this message definition")) COMMA_SOURCE_FILE_AT_LINE (135)) ;
            }else if (cond_6253.isBuiltAndFalse ()) {
              const GGS_bool cond_6384 = (var_cas_allConstantSet.reader_hasKey (operand_6066->mConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (135)))).operator_not () ;
              if (cond_6384.isBuiltAndTrue ()) {
                operand_6066->mConstantName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("this constant is not declared") COMMA_SOURCE_FILE_AT_LINE (137)) ;
              }
            }
            var_cas_messageConstantSet.addAssign_operation (operand_6066->mConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (138))) ;
          }
        }
        {
          GGS_stringset::cEnumerator enumerator_6551 (var_cas_messageConstantSet, true) ;
          while (enumerator_6551.hasCurrentObject ()) {
            const GGS_bool cond_6712 = (var_cas_allConstantSet.reader_hasKey (enumerator_6551._key (HERE))).operator_not () ;
            if (cond_6712.isBuiltAndTrue ()) {
              operand_5863->mEnumMessageName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this message definition does not name the '")).operator_concat (enumerator_6551._key (HERE))).operator_concat (GGS_string ("' constant")) COMMA_SOURCE_FILE_AT_LINE (144)) ;
            }
            enumerator_6551.next () ;
          }
        }
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_enumType ::constructor_new (inLexique, operand_5398->mEnumTypeName, var_cas_enumConstructorMap, var_cas_enumMessageMap COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_5398->mEnumTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (153)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@filewrapperDeclarationAST.enterTypeEX'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__filewrapperDeclarationAST__enterTypeEX (C_Compiler & inLexique,
                                const cPtr_filewrapperDeclarationAST * operand_7095,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7095 != NULL) {
    GGS_filewrapperTemplateMapEXX  var_cas_filewrapperTemplateMap = GGS_filewrapperTemplateMapEXX ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_filewrapperTemplateListAST::cEnumerator enumerator_7238 (operand_7095->mFilewrapperTemplateList, true) ;
      const GGS_filewrapperTemplateListAST::cElement * operand_7238 = NULL ;
      while (((operand_7238 = enumerator_7238.nextObject ()))) {
        macroValidPointer (operand_7238) ;
        GGS_signature  var_cas_templateSignature = GGS_signature ::constructor_emptyList () ;
        {
          GGS_formalInputParameterListAST::cEnumerator enumerator_7342 (operand_7238->mFilewrapperTemplateFormalInputParameters, true) ;
          const GGS_formalInputParameterListAST::cElement * operand_7342 = NULL ;
          while (((operand_7342 = enumerator_7342.nextObject ()))) {
            macroValidPointer (operand_7342) ;
            GGS_typeMapIndex  var_cas_parameterTypeIndex ;
            GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_7342->mFormalParameterTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (166)) ;
            var_cas_templateSignature.addAssign_operation (var_cas_parameterTypeIndex, operand_7342->mFormalParameterName, GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_HERE)) ;
          }
        }
        var_cas_filewrapperTemplateMap.modifier_insertKey (inLexique, operand_7238->mFilewrapperTemplateName, var_cas_templateSignature, operand_7238->mFilewrapperTemplatePath COMMA_SOURCE_FILE_AT_LINE (173)) ;
      }
    }
    var_cas_ioSemanticContext.mFilewrapperMap.modifier_insertKey (inLexique, operand_7095->mFilewrapperName, operand_7095->mFilewrapperPath, operand_7095->mFilewrapperExtensionList, var_cas_filewrapperTemplateMap COMMA_SOURCE_FILE_AT_LINE (179)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@sortedListDeclarationAST.enterTypeEX'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sortedListDeclarationAST__enterTypeEX (C_Compiler & inLexique,
                                const cPtr_sortedListDeclarationAST * operand_8123,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8123 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_8259 (operand_8123->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_8259 = NULL ;
      while (((operand_8259 = enumerator_8259.nextObject ()))) {
        macroValidPointer (operand_8259) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_8259->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (196)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_8259->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_listGalgasType ::constructor_new (inLexique, operand_8123->mSortedListTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_8123->mSortedListTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (204)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@structDeclarationAST.enterTypeEX'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__structDeclarationAST__enterTypeEX (C_Compiler & inLexique,
                                const cPtr_structDeclarationAST * operand_8816,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8816 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_8952 (operand_8816->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_8952 = NULL ;
      while (((operand_8952 = enumerator_8952.nextObject ()))) {
        macroValidPointer (operand_8952) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_8952->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (216)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_8952->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_structGalgasType ::constructor_new (inLexique, operand_8816->mStructTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_8816->mStructTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (224)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@listDeclarationAST.enterTypeEX'              *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listDeclarationAST__enterTypeEX (C_Compiler & inLexique,
                                const cPtr_listDeclarationAST * operand_9501,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9501 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_9637 (operand_9501->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_9637 = NULL ;
      while (((operand_9637 = enumerator_9637.nextObject ()))) {
        macroValidPointer (operand_9637) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_9637->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (236)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_9637->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_listGalgasType ::constructor_new (inLexique, operand_9501->mListTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_9501->mListTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (244)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@classDeclarationAST.enterTypeEX'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__classDeclarationAST__enterTypeEX (C_Compiler & inLexique,
                                const cPtr_classDeclarationAST * operand_10181,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10181 != NULL) {
    GGS_typeMapIndex  var_cas_superClassIndex ;
    const GGS_bool cond_10376 = (operand_10181->mSuperClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (254))).operator_isEqual (GGS_string ("")) ;
    if (cond_10376.isBuiltAndTrue ()) {
      var_cas_superClassIndex = GGS_typeMapIndex ::constructor_null (inLexique COMMA_HERE) ;
    }else if (cond_10376.isBuiltAndFalse ()) {
      GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_10181->mSuperClassName, var_cas_ioSemanticContext.mTypeMap, var_cas_superClassIndex COMMA_SOURCE_FILE_AT_LINE (257)) ;
      GGS_typeMapIndex  var_cas_classIndex ;
      GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_10181->mClassTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_classIndex COMMA_SOURCE_FILE_AT_LINE (260)) ;
      var_cas_ioSemanticContext.mDescendantClassListMap.addAssign_operation (operand_10181->mSuperClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (261)), var_cas_classIndex) ;
    }
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_10839 (operand_10181->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_10839 = NULL ;
      while (((operand_10839 = enumerator_10839.nextObject ()))) {
        macroValidPointer (operand_10839) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_10839->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (267)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_10839->mAttributeName) ;
      }
    }
    GGS_classMethodList  var_cas_methodList = GGS_classMethodList ::constructor_emptyList () ;
    GGS_classGalgasType  var_cas_t = GGS_classGalgasType ::constructor_new (inLexique, operand_10181->mIsAbstract, operand_10181->mClassTypeName, var_cas_superClassIndex, var_cas_attributeList, var_cas_methodList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_10181->mClassTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (280)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@externRoutineDeclarationAST.enterTypeEX'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externRoutineDeclarationAST__enterTypeEX (C_Compiler & inLexique,
                                const cPtr_externRoutineDeclarationAST * operand_11515,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11515 != NULL) {
    GGS_signature  var_cas_routineSignature = GGS_signature ::constructor_emptyList () ;
    {
      GGS_formalParameterListAST::cEnumerator enumerator_11689 (operand_11515->mFormalParameterList, true) ;
      const GGS_formalParameterListAST::cElement * operand_11689 = NULL ;
      while (((operand_11689 = enumerator_11689.nextObject ()))) {
        macroValidPointer (operand_11689) ;
        GGS_typeMapIndex  var_cas_parameterTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_11689->mFormalParameterTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (292)) ;
        var_cas_routineSignature.addAssign_operation (var_cas_parameterTypeIndex, operand_11689->mFormalParameterName, operand_11689->mFormalParameterPassingMode) ;
      }
    }
    var_cas_ioSemanticContext.mRoutineMap.modifier_insertKey (inLexique, operand_11515->mRoutineName, var_cas_routineSignature COMMA_SOURCE_FILE_AT_LINE (296)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@externFunctionDeclarationAST.enterTypeEX'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externFunctionDeclarationAST__enterTypeEX (C_Compiler & inLexique,
                                const cPtr_externFunctionDeclarationAST * operand_12223,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12223 != NULL) {
    GGS_signature  var_cas_functionSignature = GGS_signature ::constructor_emptyList () ;
    {
      GGS_formalParameterListAST::cEnumerator enumerator_12399 (operand_12223->mFormalParameterList, true) ;
      const GGS_formalParameterListAST::cElement * operand_12399 = NULL ;
      while (((operand_12399 = enumerator_12399.nextObject ()))) {
        macroValidPointer (operand_12399) ;
        GGS_typeMapIndex  var_cas_parameterTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_12399->mFormalParameterTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (308)) ;
        var_cas_functionSignature.addAssign_operation (var_cas_parameterTypeIndex, operand_12399->mFormalParameterName, operand_12399->mFormalParameterPassingMode) ;
      }
    }
    GGS_typeMapIndex  var_cas_resultTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_12223->mResultTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (313)) ;
    var_cas_ioSemanticContext.mFunctionMap.modifier_insertKey (inLexique, operand_12223->mFunctionName, var_cas_functionSignature, var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (315)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@lazyFunctionDeclarationAST.enterTypeEX'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lazyFunctionDeclarationAST__enterTypeEX (C_Compiler & inLexique,
                                const cPtr_lazyFunctionDeclarationAST * operand_13104,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13104 != NULL) {
    GGS_typeMapIndex  var_cas_resultTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_13104->mResultTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (325)) ;
    var_cas_ioSemanticContext.mFunctionMap.modifier_insertKey (inLexique, operand_13104->mFunctionName, GGS_signature ::constructor_emptyList (), var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (327)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@listmapDeclarationAST.enterTypeEX'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listmapDeclarationAST__enterTypeEX (C_Compiler & inLexique,
                                const cPtr_listmapDeclarationAST * operand_13582,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13582 != NULL) {
    GGS_typeMapIndex  var_cas_associatedListTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_13582->mAssociatedListTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_associatedListTypeIndex COMMA_SOURCE_FILE_AT_LINE (336)) ;
    GGS_ACGalgasType  var_cas_t = GGS_listmapGalgasType ::constructor_new (inLexique, operand_13582->mListmapTypeName, var_cas_associatedListTypeIndex COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_13582->mListmapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (342)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "buildSemanticContextEX"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildSemanticContextEX (C_Compiler & inLexique,
                                const GGS_semanticDeclarationListAST   var_cas_inSemanticDeclarationList,
                                const GGS_location   var_cas_inEndOfSourceFile,
                                GGS_semanticContextEX & var_cas_outSemanticContext COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_buildSemanticContextEX at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_typeMap  var_cas_typeMap = function_constructBuiltinTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (353)) ;
  var_cas_outSemanticContext = GGS_semanticContextEX::constructor_new (var_cas_typeMap, GGS_routineMapEX ::constructor_emptyMap (inLexique COMMA_HERE), GGS_functionMapEX ::constructor_emptyMap (inLexique COMMA_HERE), GGS_descendantClassListMapEX::constructor_emptyMap (), GGS_filewrapperMapEXX ::constructor_emptyMap (inLexique COMMA_HERE)) ;
  {
    GGS_semanticDeclarationListAST::cEnumerator enumerator_14619 (var_cas_inSemanticDeclarationList, true) ;
    const GGS_semanticDeclarationListAST::cElement * operand_14619 = NULL ;
    while (((operand_14619 = enumerator_14619.nextObject ()))) {
      macroValidPointer (operand_14619) ;
      const GGS_semanticDeclarationAST  temp_14660 = operand_14619->mSemanticDeclaration ;
      if (temp_14660.isBuilt ()) {
        typeCategoryMethod__semanticDeclarationAST__enterTypeEX method = findCategoryMethod__semanticDeclarationAST__enterTypeEX (temp_14660.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, temp_14660 (HERE), var_cas_outSemanticContext COMMA_SOURCE_FILE_AT_LINE (364)) ;
        }
      }
    }
  }
  const GGS_bool cond_15431 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_15431.isBuiltAndTrue ()) {
    GGS_stringlist  var_cas_undefinedClasses = var_cas_outSemanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (368)).reader_unsolvedIndexKeyStringList (inLexique COMMA_SOURCE_FILE_AT_LINE (368)) ;
    const GGS_bool cond_15128 = (var_cas_undefinedClasses.reader_length ()).operator_isEqual (GGS_uint (1U)) ;
    if (cond_15128.isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage = GGS_string ("there is 1 undefined type:") ;
      {
        GGS_stringlist::cEnumerator enumerator_15004 (var_cas_undefinedClasses, true) ;
        const GGS_stringlist::cElement * operand_15004 = NULL ;
        while (((operand_15004 = enumerator_15004.nextObject ()))) {
          macroValidPointer (operand_15004) ;
          var_cas_errorMessage.appendCString ("\n"
            "-  @") ;
          var_cas_errorMessage.dotAssign_operation (operand_15004->mValue) ;
        }
      }
      var_cas_inEndOfSourceFile.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (375)) ;
    }else if (cond_15128.isBuiltAndFalse ()) {
      const GGS_bool cond_15420 = (var_cas_undefinedClasses.reader_length ()).operator_strictSup (GGS_uint (1U)) ;
      if (cond_15420.isBuiltAndTrue ()) {
        GGS_string var_cas_errorMessage = ((GGS_string ("there are ")).operator_concat (var_cas_undefinedClasses.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (376)))).operator_concat (GGS_string (" undefined types:")) ;
        {
          GGS_stringlist::cEnumerator enumerator_15298 (var_cas_undefinedClasses, true) ;
          const GGS_stringlist::cElement * operand_15298 = NULL ;
          while (((operand_15298 = enumerator_15298.nextObject ()))) {
            macroValidPointer (operand_15298) ;
            var_cas_errorMessage.appendCString ("\n"
              "-  @") ;
            var_cas_errorMessage.dotAssign_operation (operand_15298->mValue) ;
          }
        }
        var_cas_inEndOfSourceFile.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (381)) ;
      }
    }
  }
  const GGS_bool cond_15805 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_15805.isBuiltAndTrue ()) {
    {
      GGS_typeMap::cEnumerator enumerator_15670 (var_cas_outSemanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (388)), true) ;
      const GGS_typeMap::cElement * operand_15670 = NULL ;
      while (((operand_15670 = enumerator_15670.nextObject ()))) {
        macroValidPointer (operand_15670) ;
        const GGS_ACGalgasType  temp_15739 = operand_15670->mInfo.mType ;
        if (temp_15739.isBuilt ()) {
          temp_15739 (HERE)->method_checkTypeCrossReferences (inLexique, var_cas_outSemanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (389)).reader_count () COMMA_SOURCE_FILE_AT_LINE (389)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_buildSemanticContextEX\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@semanticInstructionAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis> gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis (typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis
findCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis.count ()) {
    result = gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis (superClassPtr) ;
      gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableDeclarationAST.instructionSemanticAnalysis' *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclarationAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localVariableDeclarationAST * operand_16487,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16487 != NULL) {
    inLexique.printMessage (GGS_string ("@localVariableDeclarationAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (409)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableDeclarationWithInitializationAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclarationWithInitializationAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localVariableDeclarationWithInitializationAST * operand_16794,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16794 != NULL) {
    inLexique.printMessage (GGS_string ("@localVariableDeclarationWithInitializationAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (417)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableDeclarationWithAssignmentAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclarationWithAssignmentAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localVariableDeclarationWithAssignmentAST * operand_17115,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17115 != NULL) {
    inLexique.printMessage (GGS_string ("@localVariableDeclarationWithAssignmentAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (425)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localConstantDeclarationWithSourceExpressionAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localConstantDeclarationWithSourceExpressionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localConstantDeclarationWithSourceExpressionAST * operand_17439,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17439 != NULL) {
    inLexique.printMessage (GGS_string ("@localConstantDeclarationWithSourceExpressionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (434)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localConstantDeclarationWithConstructorCallAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localConstantDeclarationWithConstructorCallAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localConstantDeclarationWithConstructorCallAST * operand_17767,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17767 != NULL) {
    inLexique.printMessage (GGS_string ("@localConstantDeclarationWithConstructorCallAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (442)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@assignmentInstructionAST.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__assignmentInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_assignmentInstructionAST * operand_18072,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18072 != NULL) {
    inLexique.printMessage (GGS_string ("@assignmentInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (450)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@appendInstructionAST.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__appendInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_appendInstructionAST * operand_18351,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18351 != NULL) {
    inLexique.printMessage (GGS_string ("@appendInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (458)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@sendInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sendInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_sendInstructionAST * operand_18624,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18624 != NULL) {
    inLexique.printMessage (GGS_string ("@sendInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (466)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@foreachInstructionAST.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__foreachInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_foreachInstructionAST * operand_18898,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18898 != NULL) {
    inLexique.printMessage (GGS_string ("@foreachInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (474)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@ifInstructionAST.instructionSemanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__ifInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_ifInstructionAST * operand_19170,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19170 != NULL) {
    inLexique.printMessage (GGS_string ("@ifInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (482)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@methodCallInstructionAST.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__methodCallInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_methodCallInstructionAST * operand_19445,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19445 != NULL) {
    inLexique.printMessage (GGS_string ("@methodCallInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (490)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@modifierCallInstructionAST.instructionSemanticAnalysis'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__modifierCallInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_modifierCallInstructionAST * operand_19730,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19730 != NULL) {
    inLexique.printMessage (GGS_string ("@modifierCallInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (498)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@errorInstructionAST.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__errorInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_errorInstructionAST * operand_20010,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20010 != NULL) {
    inLexique.printMessage (GGS_string ("@errorInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (506)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@warningInstructionAST.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__warningInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_warningInstructionAST * operand_20285,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20285 != NULL) {
    inLexique.printMessage (GGS_string ("@warningInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (514)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@routineCallInstructionAST.instructionSemanticAnalysis'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__routineCallInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_routineCallInstructionAST * operand_20566,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20566 != NULL) {
    inLexique.printMessage (GGS_string ("@routineCallInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (522)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@matchInstructionAST.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__matchInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_matchInstructionAST * operand_20845,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20845 != NULL) {
    inLexique.printMessage (GGS_string ("@matchInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (530)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@castInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__castInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_castInstructionAST * operand_21117,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21117 != NULL) {
    inLexique.printMessage (GGS_string ("@castInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (538)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@addInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__addInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_addInstructionAST * operand_21387,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21387 != NULL) {
    inLexique.printMessage (GGS_string ("@addInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (546)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@removeInstructionAST.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__removeInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_removeInstructionAST * operand_21659,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21659 != NULL) {
    inLexique.printMessage (GGS_string ("@removeInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (554)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@incrementInstructionAST.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__incrementInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_incrementInstructionAST * operand_21937,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21937 != NULL) {
    inLexique.printMessage (GGS_string ("@incrementInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (562)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@decrementInstructionAST.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__decrementInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_decrementInstructionAST * operand_22218,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22218 != NULL) {
    inLexique.printMessage (GGS_string ("@decrementInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (570)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@loopInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__loopInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_loopInstructionAST * operand_22494,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22494 != NULL) {
    inLexique.printMessage (GGS_string ("@loopInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (578)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@messageInstructionAST.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__messageInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_messageInstructionAST * operand_22768,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22768 != NULL) {
    inLexique.printMessage (GGS_string ("@messageInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (586)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@logInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__logInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_logInstructionAST * operand_23041,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23041 != NULL) {
    inLexique.printMessage (GGS_string ("@logInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (594)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@grammarInstructionAST.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__grammarInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_grammarInstructionAST * operand_23314,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23314 != NULL) {
    inLexique.printMessage (GGS_string ("@grammarInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (602)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@withInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__withInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_withInstructionAST * operand_23588,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23588 != NULL) {
    inLexique.printMessage (GGS_string ("@withInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (610)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@switchInstructionAST.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__switchInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_switchInstructionAST * operand_23861,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23861 != NULL) {
    inLexique.printMessage (GGS_string ("@switchInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (618)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@typeMethodInstructionAST.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__typeMethodInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_typeMethodInstructionAST * operand_24140,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_24140 != NULL) {
    inLexique.printMessage (GGS_string ("@typeMethodInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (626)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@semanticDeclarationAST.semanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticDeclarationAST__semanticAnalysis> gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticDeclarationAST__semanticAnalysis (typeCategoryMethod__semanticDeclarationAST__semanticAnalysis inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticDeclarationAST__semanticAnalysis
findCategoryMethod__semanticDeclarationAST__semanticAnalysis (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticDeclarationAST__semanticAnalysis result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis.count ()) {
    result = gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticDeclarationAST__semanticAnalysis (superClassPtr) ;
      gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@mapDeclarationAST.semanticAnalysis'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_mapDeclarationAST * operand_24904,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_24904 != NULL) {
    inLexique.printMessage (GGS_string ("@mapDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (644)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@mapindexDeclarationAST.semanticAnalysis'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapindexDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_mapindexDeclarationAST * operand_25156,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25156 != NULL) {
    inLexique.printMessage (GGS_string ("@mapindexDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (652)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@enumDeclarationAST.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__enumDeclarationAST__semanticAnalysis (C_Compiler &,
                                const cPtr_enumDeclarationAST * operand_25409,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25409 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@filewrapperDeclarationAST.semanticAnalysis'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__filewrapperDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_filewrapperDeclarationAST * operand_25631,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25631 != NULL) {
    inLexique.printMessage (GGS_string ("@filewrapperDeclarationAST.semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (668)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@sortedListDeclarationAST.semanticAnalysis'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sortedListDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_sortedListDeclarationAST * operand_25893,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25893 != NULL) {
    inLexique.printMessage (GGS_string ("@sortedListDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (676)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@structDeclarationAST.semanticAnalysis'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__structDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_structDeclarationAST * operand_26150,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26150 != NULL) {
    inLexique.printMessage (GGS_string ("@structDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (684)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@listDeclarationAST.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_listDeclarationAST * operand_26401,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26401 != NULL) {
    inLexique.printMessage (GGS_string ("@listDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (692)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@classDeclarationAST.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__classDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_classDeclarationAST * operand_26651,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26651 != NULL) {
    inLexique.printMessage (GGS_string ("@classDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (700)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@externRoutineDeclarationAST.semanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externRoutineDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_externRoutineDeclarationAST * operand_26910,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26910 != NULL) {
    inLexique.printMessage (GGS_string ("@externRoutineDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (708)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@routineDeclarationAST.semanticAnalysis'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__routineDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_routineDeclarationAST * operand_27171,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_27171 != NULL) {
    inLexique.printMessage (GGS_string ("@routineDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (716)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@externFunctionDeclarationAST.semanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externFunctionDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_externFunctionDeclarationAST * operand_27557,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_27557 != NULL) {
    inLexique.printMessage (GGS_string ("@externFunctionDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (727)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@functionDeclarationAST.semanticAnalysis'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__functionDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_functionDeclarationAST * operand_27820,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_27820 != NULL) {
    inLexique.printMessage (GGS_string ("@functionDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (735)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@lazyFunctionDeclarationAST.semanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lazyFunctionDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_lazyFunctionDeclarationAST * operand_28206,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_28206 != NULL) {
    inLexique.printMessage (GGS_string ("@lazyFunctionDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (746)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@listmapDeclarationAST.semanticAnalysis'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listmapDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_listmapDeclarationAST * operand_28466,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_28466 != NULL) {
    inLexique.printMessage (GGS_string ("@listmapDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (754)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "parseSemanticComponent"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_parseSemanticComponent (C_Compiler & inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct,
                                GGS_semanticsComponentAST  & var_cas_outSemanticsComponentRoot COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_parseSemanticComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_basename = var_cas_inSourceFile.ggs_string ().reader_lastPathComponent ().reader_stringByDeletingPathExtension () ;
  GGS_lstring  var_cas_basenameKey = GGS_lstring ::constructor_new (inLexique, var_cas_basename, GGS_location (inLexique) COMMA_HERE) ;
  const GGS_bool cond_29480 = var_cas_ioParsedComponentStruct.reader_mParsedSemanticsComponentMap (inLexique COMMA_SOURCE_FILE_AT_LINE (770)).reader_hasKey (var_cas_basename) ;
  if (cond_29480.isBuiltAndTrue ()) {
    const GGS_parsedSemanticsComponentMap  temp_29430 = var_cas_ioParsedComponentStruct.reader_mParsedSemanticsComponentMap (inLexique COMMA_SOURCE_FILE_AT_LINE (771)) ;
    if (temp_29430.isBuilt ()) {
      temp_29430 (HERE)->method_searchKey (inLexique, var_cas_basenameKey, var_cas_outSemanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (771)) ;
    }
  }else if (cond_29480.isBuiltAndFalse ()) {
    const GGS_string _depExtension = GGS_string ("") ;
    const GGS_string _depPath = GGS_string ("") ;
    if (_depExtension.isBuilt () && _depPath.isBuilt ()) {
      C_Grammar_semanticsSLRgrammar::_performSourceFileParsing_ (inLexique,
                                    _depExtension.string (),
                                    _depPath.string (),
                                    NULL,
                                    var_cas_inSourceFile,
                                    var_cas_outSemanticsComponentRoot
                                    COMMA_SOURCE_FILE_AT_LINE (773)) ;
    }
    var_cas_ioParsedComponentStruct.mParsedSemanticsComponentMap.modifier_insertKey (inLexique, var_cas_basenameKey, var_cas_outSemanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (774)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_parseSemanticComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "recursivelyImportSemanticComponent"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_recursivelyImportSemanticComponent (C_Compiler & inLexique,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct,
                                GGS_semanticDeclarationListAST  & var_cas_ioSemanticDeclarationList,
                                GGS_stringset  & var_cas_ioParsedFileSet,
                                const GGS_lstringlist   var_cas_inListOfFilesToParse,
                                const GGS_string  var_cas_inDirectory COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_recursivelyImportSemanticComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  {
    GGS_lstringlist::cEnumerator enumerator_30053 (var_cas_inListOfFilesToParse, true) ;
    const GGS_lstringlist::cElement * operand_30053 = NULL ;
    while (((operand_30053 = enumerator_30053.nextObject ()))) {
      macroValidPointer (operand_30053) ;
      const GGS_bool cond_30981 = (var_cas_ioParsedFileSet.reader_hasKey (operand_30053->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (788)))).operator_not () ;
      if (cond_30981.isBuiltAndTrue ()) {
        var_cas_ioParsedFileSet.addAssign_operation (operand_30053->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (789))) ;
        GGS_string var_cas_extension = operand_30053->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (790)).reader_pathExtension () ;
        const GGS_bool cond_30968 = (var_cas_extension).operator_isEqual (GGS_string ("gSemantics")) ;
        if (cond_30968.isBuiltAndTrue ()) {
          GGS_lstring  var_cas_filePath = GGS_lstring ::constructor_new (inLexique, operand_30053->mValue.ggs_string ().reader_absolutePathFromPath (var_cas_inDirectory), operand_30053->mValue.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (794)) COMMA_HERE) ;
          GGS_semanticsComponentAST  var_cas_semanticsComponentRoot ;
          ::routine_parseSemanticComponent (inLexique,  var_cas_filePath,  var_cas_ioParsedComponentStruct,  var_cas_semanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (797)) ;
          var_cas_ioSemanticDeclarationList = (var_cas_ioSemanticDeclarationList).operator_concat (var_cas_semanticsComponentRoot.reader_mSemanticDeclarations (inLexique COMMA_SOURCE_FILE_AT_LINE (802)).reader_mSemanticDeclarationList (inLexique COMMA_SOURCE_FILE_AT_LINE (802))) ;
          ::routine_recursivelyImportSemanticComponent (inLexique,  var_cas_ioParsedComponentStruct,  var_cas_ioSemanticDeclarationList,  var_cas_ioParsedFileSet,  var_cas_semanticsComponentRoot.reader_mImportedComponentFileNameList (inLexique COMMA_SOURCE_FILE_AT_LINE (807)),  var_cas_inDirectory COMMA_SOURCE_FILE_AT_LINE (803)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_recursivelyImportSemanticComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "compileSemanticsComponent"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileSemanticsComponent (C_Compiler & inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                const GGS_string  var_cas_inOutputDirectory,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_compileSemanticsComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_semanticsComponentAST  var_cas_semanticsComponentRoot ;
  ::routine_parseSemanticComponent (inLexique,  var_cas_inSourceFile,  var_cas_ioParsedComponentStruct,  var_cas_semanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (824)) ;
  const GGS_string var_cas_basename = var_cas_inSourceFile.ggs_string ().reader_lastPathComponent ().reader_stringByDeletingPathExtension () ;
  const GGS_lstring  var_cas_componentName = var_cas_semanticsComponentRoot.reader_mSemanticsComponentName (inLexique COMMA_SOURCE_FILE_AT_LINE (831)) ;
  const GGS_bool cond_31871 = (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (832))).operator_isNotEqual (var_cas_basename) ;
  if (cond_31871.isBuiltAndTrue ()) {
    var_cas_componentName.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, ((((GGS_string ("GALGAS checks "
      "the component name ('")).operator_concat (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (834)))).operator_concat (GGS_string ("') against the source file base name ('"))).operator_concat (var_cas_basename)).operator_concat (GGS_string ("'): they should be identical")) COMMA_SOURCE_FILE_AT_LINE (836)) ;
  }
  GGS_semanticDeclarationListAST  var_cas_semanticDeclarationList = var_cas_semanticsComponentRoot.reader_mSemanticDeclarations (inLexique COMMA_SOURCE_FILE_AT_LINE (839)).reader_mSemanticDeclarationList (inLexique COMMA_SOURCE_FILE_AT_LINE (839)) ;
  GGS_stringset  var_cas_parsedFileSet = GGS_stringset ::constructor_setWithString (var_cas_inSourceFile.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (840))) ;
  ::routine_recursivelyImportSemanticComponent (inLexique,  var_cas_ioParsedComponentStruct,  var_cas_semanticDeclarationList,  var_cas_parsedFileSet,  var_cas_semanticsComponentRoot.reader_mImportedComponentFileNameList (inLexique COMMA_SOURCE_FILE_AT_LINE (845)),  var_cas_inSourceFile.ggs_string ().reader_stringByDeletingLastPathComponent () COMMA_SOURCE_FILE_AT_LINE (841)) ;
  GGS_semanticContextEX var_cas_semanticContextEX ;
  ::routine_buildSemanticContextEX (inLexique,  var_cas_semanticDeclarationList,  var_cas_semanticsComponentRoot.reader_mEndOfSourceFile (inLexique COMMA_SOURCE_FILE_AT_LINE (850)),  var_cas_semanticContextEX COMMA_SOURCE_FILE_AT_LINE (850)) ;
  GGS_semanticContext var_cas_semanticContext ;
  ::routine_buildSemanticContext (inLexique,  var_cas_semanticDeclarationList,  var_cas_semanticsComponentRoot.reader_mEndOfSourceFile (inLexique COMMA_SOURCE_FILE_AT_LINE (852)),  var_cas_semanticContext COMMA_SOURCE_FILE_AT_LINE (852)) ;
  const GGS_bool cond_32998 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_32998.isBuiltAndTrue ()) {
    {
      GGS_typeMap::cEnumerator enumerator_32764 (var_cas_semanticContextEX.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (855)), true) ;
      const GGS_typeMap::cElement * operand_32764 = NULL ;
      while (((operand_32764 = enumerator_32764.nextObject ()))) {
        macroValidPointer (operand_32764) ;
        GGS_constructorMapEXX  var_cas_constructorMap = (findCategoryReader__ACGalgasType__constructorMap (operand_32764->mInfo.mType (HERE)->galgasRTTI ()) (inLexique, operand_32764->mInfo.mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (856))) ;
        GGS_readerMapEXX  var_cas_readerMap = (findCategoryReader__ACGalgasType__readerMap (operand_32764->mInfo.mType (HERE)->galgasRTTI ()) (inLexique, operand_32764->mInfo.mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (857))) ;
        GGS_modifierMapEXX  var_cas_modifierMap = (findCategoryReader__ACGalgasType__modifierMap (operand_32764->mInfo.mType (HERE)->galgasRTTI ()) (inLexique, operand_32764->mInfo.mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (858))) ;
      }
    }
  }
  {
    GGS_semanticDeclarationListAST::cEnumerator enumerator_33088 (var_cas_semanticDeclarationList, true) ;
    const GGS_semanticDeclarationListAST::cElement * operand_33088 = NULL ;
    while (((operand_33088 = enumerator_33088.nextObject ()))) {
      macroValidPointer (operand_33088) ;
      const GGS_semanticDeclarationAST  temp_33134 = operand_33088->mSemanticDeclaration ;
      if (temp_33134.isBuilt ()) {
        typeCategoryMethod__semanticDeclarationAST__semanticAnalysis method = findCategoryMethod__semanticDeclarationAST__semanticAnalysis (temp_33134.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, temp_33134 (HERE), var_cas_semanticContextEX COMMA_SOURCE_FILE_AT_LINE (863)) ;
        }
      }
    }
  }
  GGS_semanticDeclarationSortedListForGeneration  var_cas_declarationSortedListForGeneration = GGS_semanticDeclarationSortedListForGeneration ::constructor_emptySortedList () ;
  {
    GGS_semanticDeclarationListAST::cEnumerator enumerator_33384 (var_cas_semanticDeclarationList, true) ;
    const GGS_semanticDeclarationListAST::cElement * operand_33384 = NULL ;
    while (((operand_33384 = enumerator_33384.nextObject ()))) {
      macroValidPointer (operand_33384) ;
      const GGS_semanticDeclarationAST  temp_33440 = operand_33384->mSemanticDeclaration ;
      if (temp_33440.isBuilt ()) {
        typeCategoryMethod__semanticDeclarationAST__decorateAbstractSyntaxTree method = findCategoryMethod__semanticDeclarationAST__decorateAbstractSyntaxTree (temp_33440.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, temp_33440 (HERE), var_cas_semanticContextEX, var_cas_declarationSortedListForGeneration COMMA_SOURCE_FILE_AT_LINE (870)) ;
        }
      }
    }
  }
  const GGS_bool cond_34629 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_34629.isBuiltAndTrue ()) {
    GGS_stringlist  var_cas_predeclarationList = GGS_stringlist ::constructor_emptyList () ;
    {
      GGS_semanticDeclarationSortedListForGeneration::cEnumerator enumerator_33691 (var_cas_declarationSortedListForGeneration, true) ;
      const GGS_semanticDeclarationSortedListForGeneration::cElement * operand_33691 = NULL ;
      while (((operand_33691 = enumerator_33691.nextObject ()))) {
        macroValidPointer (operand_33691) ;
      }
    }
    GGS_string var_cas_headerString = template_filewrapper_typeGenerationTemplate_semanticFileHeader (inLexique, var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (882)), var_cas_predeclarationList) ;
    GGS_string var_cas_implementationString = template_filewrapper_typeGenerationTemplate_semanticFileImplementation (inLexique, var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (886))) ;
    {
      GGS_semanticDeclarationListAST::cEnumerator enumerator_34037 (var_cas_semanticDeclarationList, true) ;
      const GGS_semanticDeclarationListAST::cElement * operand_34037 = NULL ;
      while (((operand_34037 = enumerator_34037.nextObject ()))) {
        macroValidPointer (operand_34037) ;
        const GGS_semanticDeclarationAST  temp_34081 = operand_34037->mSemanticDeclaration ;
        if (temp_34081.isBuilt ()) {
          typeCategoryMethod__semanticDeclarationAST__generateCode method = findCategoryMethod__semanticDeclarationAST__generateCode (temp_34081.galgasObjectRunTimeInfo ()) ;
          if (method != NULL) {
            method (inLexique, temp_34081 (HERE), var_cas_semanticContextEX, var_cas_headerString, var_cas_implementationString COMMA_SOURCE_FILE_AT_LINE (889)) ;
          }
        }
      }
    }
    GGS_string::class_method_generateFile (inLexique, var_cas_inOutputDirectory, (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (897))).operator_concat (GGS_string (".h")), GGS_string ("//"), GGS_string ("\n"
      "\n"), var_cas_headerString, GGS_string ("\n"
      "\n"), GGS_string ("#endif\n") COMMA_SOURCE_FILE_AT_LINE (895)) ;
    GGS_string::class_method_generateFile (inLexique, var_cas_inOutputDirectory, (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (906))).operator_concat (GGS_string (".cpp")), GGS_string ("//"), GGS_string ("\n"
      "\n"), var_cas_implementationString, GGS_string ("\n"
      "\n"), GGS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (904)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_compileSemanticsComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticsCompilation (void) {
  enterCategoryMethod__semanticDeclarationAST__enterTypeEX ((typeCategoryMethod__semanticDeclarationAST__enterTypeEX) category_method__mapDeclarationAST__enterTypeEX, gClassInfoFor__mapDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterTypeEX ((typeCategoryMethod__semanticDeclarationAST__enterTypeEX) category_method__mapindexDeclarationAST__enterTypeEX, gClassInfoFor__mapindexDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterTypeEX ((typeCategoryMethod__semanticDeclarationAST__enterTypeEX) category_method__enumDeclarationAST__enterTypeEX, gClassInfoFor__enumDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterTypeEX ((typeCategoryMethod__semanticDeclarationAST__enterTypeEX) category_method__filewrapperDeclarationAST__enterTypeEX, gClassInfoFor__filewrapperDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterTypeEX ((typeCategoryMethod__semanticDeclarationAST__enterTypeEX) category_method__sortedListDeclarationAST__enterTypeEX, gClassInfoFor__sortedListDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterTypeEX ((typeCategoryMethod__semanticDeclarationAST__enterTypeEX) category_method__structDeclarationAST__enterTypeEX, gClassInfoFor__structDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterTypeEX ((typeCategoryMethod__semanticDeclarationAST__enterTypeEX) category_method__listDeclarationAST__enterTypeEX, gClassInfoFor__listDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterTypeEX ((typeCategoryMethod__semanticDeclarationAST__enterTypeEX) category_method__classDeclarationAST__enterTypeEX, gClassInfoFor__classDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterTypeEX ((typeCategoryMethod__semanticDeclarationAST__enterTypeEX) category_method__externRoutineDeclarationAST__enterTypeEX, gClassInfoFor__externRoutineDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterTypeEX ((typeCategoryMethod__semanticDeclarationAST__enterTypeEX) category_method__externFunctionDeclarationAST__enterTypeEX, gClassInfoFor__externFunctionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterTypeEX ((typeCategoryMethod__semanticDeclarationAST__enterTypeEX) category_method__lazyFunctionDeclarationAST__enterTypeEX, gClassInfoFor__lazyFunctionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterTypeEX ((typeCategoryMethod__semanticDeclarationAST__enterTypeEX) category_method__listmapDeclarationAST__enterTypeEX, gClassInfoFor__listmapDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localVariableDeclarationAST__instructionSemanticAnalysis, gClassInfoFor__localVariableDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localVariableDeclarationWithInitializationAST__instructionSemanticAnalysis, gClassInfoFor__localVariableDeclarationWithInitializationAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localVariableDeclarationWithAssignmentAST__instructionSemanticAnalysis, gClassInfoFor__localVariableDeclarationWithAssignmentAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localConstantDeclarationWithSourceExpressionAST__instructionSemanticAnalysis, gClassInfoFor__localConstantDeclarationWithSourceExpressionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localConstantDeclarationWithConstructorCallAST__instructionSemanticAnalysis, gClassInfoFor__localConstantDeclarationWithConstructorCallAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__assignmentInstructionAST__instructionSemanticAnalysis, gClassInfoFor__assignmentInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__appendInstructionAST__instructionSemanticAnalysis, gClassInfoFor__appendInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__sendInstructionAST__instructionSemanticAnalysis, gClassInfoFor__sendInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__foreachInstructionAST__instructionSemanticAnalysis, gClassInfoFor__foreachInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__ifInstructionAST__instructionSemanticAnalysis, gClassInfoFor__ifInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__methodCallInstructionAST__instructionSemanticAnalysis, gClassInfoFor__methodCallInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__modifierCallInstructionAST__instructionSemanticAnalysis, gClassInfoFor__modifierCallInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__errorInstructionAST__instructionSemanticAnalysis, gClassInfoFor__errorInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__warningInstructionAST__instructionSemanticAnalysis, gClassInfoFor__warningInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__routineCallInstructionAST__instructionSemanticAnalysis, gClassInfoFor__routineCallInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__matchInstructionAST__instructionSemanticAnalysis, gClassInfoFor__matchInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__castInstructionAST__instructionSemanticAnalysis, gClassInfoFor__castInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__addInstructionAST__instructionSemanticAnalysis, gClassInfoFor__addInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__removeInstructionAST__instructionSemanticAnalysis, gClassInfoFor__removeInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__incrementInstructionAST__instructionSemanticAnalysis, gClassInfoFor__incrementInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__decrementInstructionAST__instructionSemanticAnalysis, gClassInfoFor__decrementInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__loopInstructionAST__instructionSemanticAnalysis, gClassInfoFor__loopInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__messageInstructionAST__instructionSemanticAnalysis, gClassInfoFor__messageInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__logInstructionAST__instructionSemanticAnalysis, gClassInfoFor__logInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__grammarInstructionAST__instructionSemanticAnalysis, gClassInfoFor__grammarInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__withInstructionAST__instructionSemanticAnalysis, gClassInfoFor__withInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__switchInstructionAST__instructionSemanticAnalysis, gClassInfoFor__switchInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__typeMethodInstructionAST__instructionSemanticAnalysis, gClassInfoFor__typeMethodInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__mapDeclarationAST__semanticAnalysis, gClassInfoFor__mapDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__mapindexDeclarationAST__semanticAnalysis, gClassInfoFor__mapindexDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__enumDeclarationAST__semanticAnalysis, gClassInfoFor__enumDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__filewrapperDeclarationAST__semanticAnalysis, gClassInfoFor__filewrapperDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__sortedListDeclarationAST__semanticAnalysis, gClassInfoFor__sortedListDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__structDeclarationAST__semanticAnalysis, gClassInfoFor__structDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__listDeclarationAST__semanticAnalysis, gClassInfoFor__listDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__classDeclarationAST__semanticAnalysis, gClassInfoFor__classDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__externRoutineDeclarationAST__semanticAnalysis, gClassInfoFor__externRoutineDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__routineDeclarationAST__semanticAnalysis, gClassInfoFor__routineDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__externFunctionDeclarationAST__semanticAnalysis, gClassInfoFor__externFunctionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__functionDeclarationAST__semanticAnalysis, gClassInfoFor__functionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__lazyFunctionDeclarationAST__semanticAnalysis, gClassInfoFor__lazyFunctionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__listmapDeclarationAST__semanticAnalysis, gClassInfoFor__listmapDeclarationAST.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_semanticsCompilation (void) {
  gDispatchTableForMethod__semanticDeclarationAST__enterTypeEX.free () ;
  gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis.free () ;
  gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticsCompilation (prologueRoutineFor_semanticsCompilation, epilogueRoutineFor_semanticsCompilation) ;

//---------------------------------------------------------------------------*

