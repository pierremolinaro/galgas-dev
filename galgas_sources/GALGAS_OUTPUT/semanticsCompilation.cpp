//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'semanticsCompilation.cpp'                       *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      march 9th, 2010, at 19h13'40"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticsCompilation.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticsCompilation.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//             Include directives generated by grammar includes              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "semanticsSLRgrammar.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//  Virtual Table for category method '@semanticDeclarationAST.enterType'    *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticDeclarationAST__enterType> gDispatchTableForMethod__semanticDeclarationAST__enterType ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticDeclarationAST__enterType (typeCategoryMethod__semanticDeclarationAST__enterType inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticDeclarationAST__enterType.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticDeclarationAST__enterType
findCategoryMethod__semanticDeclarationAST__enterType (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticDeclarationAST__enterType result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticDeclarationAST__enterType.count ()) {
    result = gDispatchTableForMethod__semanticDeclarationAST__enterType (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticDeclarationAST__enterType (superClassPtr) ;
      gDispatchTableForMethod__semanticDeclarationAST__enterType.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Category method '@mapDeclarationAST.enterType'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_mapDeclarationAST * operand_2504,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2504 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_2638 (operand_2504->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_2638 = NULL ;
      while (((operand_2638 = enumerator_2638.nextObject ()))) {
        macroValidPointer (operand_2638) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_2638->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (51)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_2638->mAttributeName) ;
      }
    }
    GGS_mapMethodMap  var_cas_insertMethodMap = GGS_mapMethodMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_mapMethodListAST::cEnumerator enumerator_2963 (operand_2504->mInsertMethodList, true) ;
      const GGS_mapMethodListAST::cElement * operand_2963 = NULL ;
      while (((operand_2963 = enumerator_2963.nextObject ()))) {
        macroValidPointer (operand_2963) ;
        const GGS_bool cond_3122 = var_cas_insertMethodMap.reader_hasKey (operand_2963->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (57))) ;
        if (cond_3122.isBuiltAndTrue ()) {
          operand_2963->mMethodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_2963->mMethodName)).operator_concat (GGS_string ("' insert method is already declared")) COMMA_SOURCE_FILE_AT_LINE (59)) ;
        }else if (cond_3122.isBuiltAndFalse ()) {
          var_cas_insertMethodMap.modifier_insertKey (inLexique, operand_2963->mMethodName, operand_2963->mErrorMessage COMMA_SOURCE_FILE_AT_LINE (60)) ;
        }
      }
    }
    GGS_mapMethodMap  var_cas_removeMethodMap = GGS_mapMethodMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_mapMethodListAST::cEnumerator enumerator_3317 (operand_2504->mRemoveMethodList, true) ;
      const GGS_mapMethodListAST::cElement * operand_3317 = NULL ;
      while (((operand_3317 = enumerator_3317.nextObject ()))) {
        macroValidPointer (operand_3317) ;
        const GGS_bool cond_3477 = var_cas_removeMethodMap.reader_hasKey (operand_3317->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (66))) ;
        if (cond_3477.isBuiltAndTrue ()) {
          operand_3317->mMethodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_3317->mMethodName)).operator_concat (GGS_string ("' remove method is already declared")) COMMA_SOURCE_FILE_AT_LINE (68)) ;
        }else if (cond_3477.isBuiltAndFalse ()) {
          const GGS_bool cond_3636 = var_cas_insertMethodMap.reader_hasKey (operand_3317->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (68))) ;
          if (cond_3636.isBuiltAndTrue ()) {
            operand_3317->mMethodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_3317->mMethodName)).operator_concat (GGS_string ("' method is already declared as insert method")) COMMA_SOURCE_FILE_AT_LINE (70)) ;
          }else if (cond_3636.isBuiltAndFalse ()) {
            var_cas_removeMethodMap.modifier_insertKey (inLexique, operand_3317->mMethodName, operand_3317->mErrorMessage COMMA_SOURCE_FILE_AT_LINE (71)) ;
          }
        }
      }
    }
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_3848 (operand_2504->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_3848 = NULL ;
      while (((operand_3848 = enumerator_3848.nextObject ()))) {
        macroValidPointer (operand_3848) ;
        const GGS_string var_cas_accessorName = ((GGS_string ("set")).operator_concat (operand_3848->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ())).operator_concat (GGS_string ("ForKey")) ;
        const GGS_bool cond_4163 = var_cas_removeMethodMap.reader_hasKey (var_cas_accessorName) ;
        if (cond_4163.isBuiltAndTrue ()) {
          operand_3848->mAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_accessorName)).operator_concat (GGS_string ("' remove method name is incompatible with accessor of '"))).operator_concat (operand_3848->mAttributeName)).operator_concat (GGS_string ("' attribute")) COMMA_SOURCE_FILE_AT_LINE (79)) ;
        }else if (cond_4163.isBuiltAndFalse ()) {
          const GGS_bool cond_4359 = var_cas_insertMethodMap.reader_hasKey (var_cas_accessorName) ;
          if (cond_4359.isBuiltAndTrue ()) {
            operand_3848->mAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_accessorName)).operator_concat (GGS_string ("' insert method name is incompatible with accessor of '"))).operator_concat (operand_3848->mAttributeName)).operator_concat (GGS_string ("' attribute")) COMMA_SOURCE_FILE_AT_LINE (81)) ;
          }
        }
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_mapType ::constructor_new (inLexique, operand_2504->mMapTypeName, var_cas_attributeList, var_cas_insertMethodMap, var_cas_removeMethodMap COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_2504->mMapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (90)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@mapindexDeclarationAST.enterType'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapindexDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_mapindexDeclarationAST * operand_4733,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4733 != NULL) {
    GGS_typeMapIndex  var_cas_mapTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_4733->mMapTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_mapTypeIndex COMMA_SOURCE_FILE_AT_LINE (100)) ;
    GGS_ACGalgasType  var_cas_t = GGS_mapindexType ::constructor_new (inLexique, operand_4733->mMapIndexTypeName, var_cas_mapTypeIndex, operand_4733->mSearchMethodName COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_4733->mMapIndexTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (107)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@enumDeclarationAST.enterType'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__enumDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_enumDeclarationAST * operand_5269,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5269 != NULL) {
    GGS_enumConstructorMap  var_cas_enumConstructorMap = GGS_enumConstructorMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_lstringlist::cEnumerator enumerator_5411 (operand_5269->mConstantList, true) ;
      const GGS_lstringlist::cElement * operand_5411 = NULL ;
      while (((operand_5411 = enumerator_5411.nextObject ()))) {
        macroValidPointer (operand_5411) ;
        var_cas_enumConstructorMap.modifier_insertKey (inLexique, operand_5411->mValue COMMA_SOURCE_FILE_AT_LINE (118)) ;
      }
    }
    GGS_stringset  var_cas_allConstantSet = GGS_stringset ::constructor_emptySet () ;
    {
      GGS_lstringlist::cEnumerator enumerator_5578 (operand_5269->mConstantList, true) ;
      const GGS_lstringlist::cElement * operand_5578 = NULL ;
      while (((operand_5578 = enumerator_5578.nextObject ()))) {
        macroValidPointer (operand_5578) ;
        var_cas_allConstantSet.addAssign_operation (operand_5578->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (123))) ;
      }
    }
    GGS_enumMessageMap  var_cas_enumMessageMap = GGS_enumMessageMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_enumMessageListAST::cEnumerator enumerator_5732 (operand_5269->mEnumMessageList, true) ;
      const GGS_enumMessageListAST::cElement * operand_5732 = NULL ;
      while (((operand_5732 = enumerator_5732.nextObject ()))) {
        macroValidPointer (operand_5732) ;
        var_cas_enumMessageMap.modifier_insertKey (inLexique, operand_5732->mEnumMessageName COMMA_SOURCE_FILE_AT_LINE (128)) ;
        GGS_stringset  var_cas_messageConstantSet = GGS_stringset ::constructor_emptySet () ;
        {
          GGS_enumMessageAssociationListAST::cEnumerator enumerator_5935 (operand_5732->mMessageAssociationList, true) ;
          const GGS_enumMessageAssociationListAST::cElement * operand_5935 = NULL ;
          while (((operand_5935 = enumerator_5935.nextObject ()))) {
            macroValidPointer (operand_5935) ;
            const GGS_bool cond_6122 = var_cas_messageConstantSet.reader_hasKey (operand_5935->mConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (132))) ;
            if (cond_6122.isBuiltAndTrue ()) {
              operand_5935->mConstantName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_5935->mConstantName)).operator_concat (GGS_string ("' is already named for this message definition")) COMMA_SOURCE_FILE_AT_LINE (134)) ;
            }else if (cond_6122.isBuiltAndFalse ()) {
              const GGS_bool cond_6253 = (var_cas_allConstantSet.reader_hasKey (operand_5935->mConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (134)))).operator_not () ;
              if (cond_6253.isBuiltAndTrue ()) {
                operand_5935->mConstantName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("this constant is not declared") COMMA_SOURCE_FILE_AT_LINE (136)) ;
              }
            }
            var_cas_messageConstantSet.addAssign_operation (operand_5935->mConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (137))) ;
          }
        }
        {
          GGS_stringset::cEnumerator enumerator_6420 (var_cas_messageConstantSet, true) ;
          while (enumerator_6420.hasCurrentObject ()) {
            const GGS_bool cond_6581 = (var_cas_allConstantSet.reader_hasKey (enumerator_6420._key (HERE))).operator_not () ;
            if (cond_6581.isBuiltAndTrue ()) {
              operand_5732->mEnumMessageName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this message definition does not name the '")).operator_concat (enumerator_6420._key (HERE))).operator_concat (GGS_string ("' constant")) COMMA_SOURCE_FILE_AT_LINE (143)) ;
            }
            enumerator_6420.next () ;
          }
        }
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_enumType ::constructor_new (inLexique, operand_5269->mEnumTypeName, var_cas_enumConstructorMap, var_cas_enumMessageMap COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_5269->mEnumTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (152)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@filewrapperDeclarationAST.enterType'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__filewrapperDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_filewrapperDeclarationAST * operand_6962,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_6962 != NULL) {
    GGS_filewrapperTemplateMap  var_cas_filewrapperTemplateMap = GGS_filewrapperTemplateMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_filewrapperTemplateListAST::cEnumerator enumerator_7100 (operand_6962->mFilewrapperTemplateList, true) ;
      const GGS_filewrapperTemplateListAST::cElement * operand_7100 = NULL ;
      while (((operand_7100 = enumerator_7100.nextObject ()))) {
        macroValidPointer (operand_7100) ;
        GGS_signature  var_cas_templateSignature = GGS_signature ::constructor_emptyList () ;
        {
          GGS_formalInputParameterListAST::cEnumerator enumerator_7204 (operand_7100->mFilewrapperTemplateFormalInputParameters, true) ;
          const GGS_formalInputParameterListAST::cElement * operand_7204 = NULL ;
          while (((operand_7204 = enumerator_7204.nextObject ()))) {
            macroValidPointer (operand_7204) ;
            GGS_typeMapIndex  var_cas_parameterTypeIndex ;
            GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_7204->mFormalParameterTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (165)) ;
            var_cas_templateSignature.addAssign_operation (var_cas_parameterTypeIndex, operand_7204->mFormalParameterName, GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_HERE)) ;
          }
        }
        var_cas_filewrapperTemplateMap.modifier_insertKey (inLexique, operand_7100->mFilewrapperTemplateName, var_cas_templateSignature, operand_7100->mFilewrapperTemplatePath COMMA_SOURCE_FILE_AT_LINE (172)) ;
      }
    }
    var_cas_ioSemanticContext.mFilewrapperMap.modifier_insertKey (inLexique, operand_6962->mFilewrapperName, operand_6962->mFilewrapperPath, operand_6962->mFilewrapperExtensionList, var_cas_filewrapperTemplateMap COMMA_SOURCE_FILE_AT_LINE (178)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@sortedListDeclarationAST.enterType'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sortedListDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_sortedListDeclarationAST * operand_7983,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7983 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_8117 (operand_7983->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_8117 = NULL ;
      while (((operand_8117 = enumerator_8117.nextObject ()))) {
        macroValidPointer (operand_8117) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_8117->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (195)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_8117->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_listGalgasType ::constructor_new (inLexique, operand_7983->mSortedListTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_7983->mSortedListTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (203)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@structDeclarationAST.enterType'              *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__structDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_structDeclarationAST * operand_8672,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8672 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_8806 (operand_8672->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_8806 = NULL ;
      while (((operand_8806 = enumerator_8806.nextObject ()))) {
        macroValidPointer (operand_8806) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_8806->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (215)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_8806->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_structGalgasType ::constructor_new (inLexique, operand_8672->mStructTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_8672->mStructTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (223)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@listDeclarationAST.enterType'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_listDeclarationAST * operand_9353,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9353 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_9487 (operand_9353->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_9487 = NULL ;
      while (((operand_9487 = enumerator_9487.nextObject ()))) {
        macroValidPointer (operand_9487) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_9487->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (235)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_9487->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_listGalgasType ::constructor_new (inLexique, operand_9353->mListTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_9353->mListTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (243)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@classDeclarationAST.enterType'              *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__classDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_classDeclarationAST * operand_10029,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10029 != NULL) {
    GGS_typeMapIndex  var_cas_superClassIndex ;
    const GGS_bool cond_10222 = (operand_10029->mSuperClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (253))).operator_isEqual (GGS_string ("")) ;
    if (cond_10222.isBuiltAndTrue ()) {
      var_cas_superClassIndex = GGS_typeMapIndex ::constructor_null (inLexique COMMA_HERE) ;
    }else if (cond_10222.isBuiltAndFalse ()) {
      GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_10029->mSuperClassName, var_cas_ioSemanticContext.mTypeMap, var_cas_superClassIndex COMMA_SOURCE_FILE_AT_LINE (256)) ;
      GGS_typeMapIndex  var_cas_classIndex ;
      GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_10029->mClassTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_classIndex COMMA_SOURCE_FILE_AT_LINE (259)) ;
      var_cas_ioSemanticContext.mDescendantClassListMap.addAssign_operation (operand_10029->mSuperClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (260)), var_cas_classIndex) ;
    }
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_10685 (operand_10029->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_10685 = NULL ;
      while (((operand_10685 = enumerator_10685.nextObject ()))) {
        macroValidPointer (operand_10685) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_10685->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (266)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_10685->mAttributeName) ;
      }
    }
    GGS_classMethodList  var_cas_methodList = GGS_classMethodList ::constructor_emptyList () ;
    GGS_classGalgasType  var_cas_t = GGS_classGalgasType ::constructor_new (inLexique, operand_10029->mIsAbstract, operand_10029->mClassTypeName, var_cas_superClassIndex, var_cas_attributeList, var_cas_methodList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_10029->mClassTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (279)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@externRoutineDeclarationAST.enterType'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externRoutineDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_externRoutineDeclarationAST * operand_11359,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11359 != NULL) {
    GGS_signature  var_cas_routineSignature = GGS_signature ::constructor_emptyList () ;
    {
      GGS_formalParameterListAST::cEnumerator enumerator_11531 (operand_11359->mFormalParameterList, true) ;
      const GGS_formalParameterListAST::cElement * operand_11531 = NULL ;
      while (((operand_11531 = enumerator_11531.nextObject ()))) {
        macroValidPointer (operand_11531) ;
        GGS_typeMapIndex  var_cas_parameterTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_11531->mFormalParameterTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (291)) ;
        var_cas_routineSignature.addAssign_operation (var_cas_parameterTypeIndex, operand_11531->mFormalParameterName, operand_11531->mFormalParameterPassingMode) ;
      }
    }
    var_cas_ioSemanticContext.mRoutineMap.modifier_insertKey (inLexique, operand_11359->mRoutineName, var_cas_routineSignature COMMA_SOURCE_FILE_AT_LINE (295)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@externFunctionDeclarationAST.enterType'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externFunctionDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_externFunctionDeclarationAST * operand_12063,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12063 != NULL) {
    GGS_signature  var_cas_functionSignature = GGS_signature ::constructor_emptyList () ;
    {
      GGS_formalParameterListAST::cEnumerator enumerator_12237 (operand_12063->mFormalParameterList, true) ;
      const GGS_formalParameterListAST::cElement * operand_12237 = NULL ;
      while (((operand_12237 = enumerator_12237.nextObject ()))) {
        macroValidPointer (operand_12237) ;
        GGS_typeMapIndex  var_cas_parameterTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_12237->mFormalParameterTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (307)) ;
        var_cas_functionSignature.addAssign_operation (var_cas_parameterTypeIndex, operand_12237->mFormalParameterName, operand_12237->mFormalParameterPassingMode) ;
      }
    }
    GGS_typeMapIndex  var_cas_resultTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_12063->mResultTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (312)) ;
    var_cas_ioSemanticContext.mFunctionMap.modifier_insertKey (inLexique, operand_12063->mFunctionName, var_cas_functionSignature, var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (314)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@lazyFunctionDeclarationAST.enterType'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lazyFunctionDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_lazyFunctionDeclarationAST * operand_12940,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12940 != NULL) {
    GGS_typeMapIndex  var_cas_resultTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_12940->mResultTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (324)) ;
    var_cas_ioSemanticContext.mFunctionMap.modifier_insertKey (inLexique, operand_12940->mFunctionName, GGS_signature ::constructor_emptyList (), var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (326)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@listmapDeclarationAST.enterType'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listmapDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_listmapDeclarationAST * operand_13414,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13414 != NULL) {
    GGS_typeMapIndex  var_cas_associatedListTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_13414->mAssociatedListTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_associatedListTypeIndex COMMA_SOURCE_FILE_AT_LINE (335)) ;
    GGS_ACGalgasType  var_cas_t = GGS_listmapGalgasType ::constructor_new (inLexique, operand_13414->mListmapTypeName, var_cas_associatedListTypeIndex COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_13414->mListmapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (341)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "buildSemanticContext"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildSemanticContext (C_Compiler & inLexique,
                                const GGS_semanticDeclarationListAST   var_cas_inSemanticDeclarationList,
                                const GGS_location   var_cas_inEndOfSourceFile,
                                GGS_semanticContext & var_cas_outSemanticContext COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_buildSemanticContext at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_typeMap  var_cas_typeMap = function_constructBuiltinTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (352)) ;
  var_cas_outSemanticContext = GGS_semanticContext::constructor_new (var_cas_typeMap, GGS_routineMap ::constructor_emptyMap (inLexique COMMA_HERE), GGS_functionMap ::constructor_emptyMap (inLexique COMMA_HERE), GGS_descendantClassListMap::constructor_emptyMap (), GGS_filewrapperMap ::constructor_emptyMap (inLexique COMMA_HERE)) ;
  {
    GGS_semanticDeclarationListAST::cEnumerator enumerator_14434 (var_cas_inSemanticDeclarationList, true) ;
    const GGS_semanticDeclarationListAST::cElement * operand_14434 = NULL ;
    while (((operand_14434 = enumerator_14434.nextObject ()))) {
      macroValidPointer (operand_14434) ;
      const GGS_semanticDeclarationAST  temp_14473 = operand_14434->mSemanticDeclaration ;
      if (temp_14473.isBuilt ()) {
        typeCategoryMethod__semanticDeclarationAST__enterType method = findCategoryMethod__semanticDeclarationAST__enterType (temp_14473.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, temp_14473 (HERE), var_cas_outSemanticContext COMMA_SOURCE_FILE_AT_LINE (363)) ;
        }
      }
    }
  }
  const GGS_bool cond_15244 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_15244.isBuiltAndTrue ()) {
    GGS_stringlist  var_cas_undefinedClasses = var_cas_outSemanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (367)).reader_unsolvedIndexKeyStringList (inLexique COMMA_SOURCE_FILE_AT_LINE (367)) ;
    const GGS_bool cond_14941 = (var_cas_undefinedClasses.reader_length ()).operator_isEqual (GGS_uint (1U)) ;
    if (cond_14941.isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage = GGS_string ("there is 1 undefined type:") ;
      {
        GGS_stringlist::cEnumerator enumerator_14817 (var_cas_undefinedClasses, true) ;
        const GGS_stringlist::cElement * operand_14817 = NULL ;
        while (((operand_14817 = enumerator_14817.nextObject ()))) {
          macroValidPointer (operand_14817) ;
          var_cas_errorMessage.appendCString ("\n"
            "-  @") ;
          var_cas_errorMessage.dotAssign_operation (operand_14817->mValue) ;
        }
      }
      var_cas_inEndOfSourceFile.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (374)) ;
    }else if (cond_14941.isBuiltAndFalse ()) {
      const GGS_bool cond_15233 = (var_cas_undefinedClasses.reader_length ()).operator_strictSup (GGS_uint (1U)) ;
      if (cond_15233.isBuiltAndTrue ()) {
        GGS_string var_cas_errorMessage = ((GGS_string ("there are ")).operator_concat (var_cas_undefinedClasses.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (375)))).operator_concat (GGS_string (" undefined types:")) ;
        {
          GGS_stringlist::cEnumerator enumerator_15111 (var_cas_undefinedClasses, true) ;
          const GGS_stringlist::cElement * operand_15111 = NULL ;
          while (((operand_15111 = enumerator_15111.nextObject ()))) {
            macroValidPointer (operand_15111) ;
            var_cas_errorMessage.appendCString ("\n"
              "-  @") ;
            var_cas_errorMessage.dotAssign_operation (operand_15111->mValue) ;
          }
        }
        var_cas_inEndOfSourceFile.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (380)) ;
      }
    }
  }
  const GGS_bool cond_15618 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_15618.isBuiltAndTrue ()) {
    {
      GGS_typeMap::cEnumerator enumerator_15483 (var_cas_outSemanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (387)), true) ;
      const GGS_typeMap::cElement * operand_15483 = NULL ;
      while (((operand_15483 = enumerator_15483.nextObject ()))) {
        macroValidPointer (operand_15483) ;
        const GGS_ACGalgasType  temp_15552 = operand_15483->mInfo.mType ;
        if (temp_15552.isBuilt ()) {
          temp_15552 (HERE)->method_checkTypeCrossReferences (inLexique, var_cas_outSemanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (388)).reader_count () COMMA_SOURCE_FILE_AT_LINE (388)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_buildSemanticContext\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@semanticInstructionAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis> gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis (typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis
findCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis.count ()) {
    result = gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis (superClassPtr) ;
      gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableDeclarationAST.instructionSemanticAnalysis' *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclarationAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localVariableDeclarationAST * operand_16298,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16298 != NULL) {
    inLexique.printMessage (GGS_string ("@localVariableDeclarationAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (408)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableDeclarationWithInitializationAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclarationWithInitializationAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localVariableDeclarationWithInitializationAST * operand_16603,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16603 != NULL) {
    inLexique.printMessage (GGS_string ("@localVariableDeclarationWithInitializationAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (416)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableDeclarationWithAssignmentAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclarationWithAssignmentAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localVariableDeclarationWithAssignmentAST * operand_16922,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16922 != NULL) {
    inLexique.printMessage (GGS_string ("@localVariableDeclarationWithAssignmentAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (424)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localConstantDeclarationWithSourceExpressionAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localConstantDeclarationWithSourceExpressionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localConstantDeclarationWithSourceExpressionAST * operand_17244,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17244 != NULL) {
    inLexique.printMessage (GGS_string ("@localConstantDeclarationWithSourceExpressionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (433)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localConstantDeclarationWithConstructorCallAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localConstantDeclarationWithConstructorCallAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localConstantDeclarationWithConstructorCallAST * operand_17570,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17570 != NULL) {
    inLexique.printMessage (GGS_string ("@localConstantDeclarationWithConstructorCallAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (441)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@assignmentInstructionAST.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__assignmentInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_assignmentInstructionAST * operand_17873,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17873 != NULL) {
    inLexique.printMessage (GGS_string ("@assignmentInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (449)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@appendInstructionAST.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__appendInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_appendInstructionAST * operand_18150,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18150 != NULL) {
    inLexique.printMessage (GGS_string ("@appendInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (457)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@sendInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sendInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_sendInstructionAST * operand_18421,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18421 != NULL) {
    inLexique.printMessage (GGS_string ("@sendInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (465)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@foreachInstructionAST.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__foreachInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_foreachInstructionAST * operand_18693,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18693 != NULL) {
    inLexique.printMessage (GGS_string ("@foreachInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (473)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@ifInstructionAST.instructionSemanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__ifInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_ifInstructionAST * operand_18963,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18963 != NULL) {
    inLexique.printMessage (GGS_string ("@ifInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (481)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@methodCallInstructionAST.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__methodCallInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_methodCallInstructionAST * operand_19236,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19236 != NULL) {
    inLexique.printMessage (GGS_string ("@methodCallInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (489)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@modifierCallInstructionAST.instructionSemanticAnalysis'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__modifierCallInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_modifierCallInstructionAST * operand_19519,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19519 != NULL) {
    inLexique.printMessage (GGS_string ("@modifierCallInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (497)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@errorInstructionAST.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__errorInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_errorInstructionAST * operand_19797,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19797 != NULL) {
    inLexique.printMessage (GGS_string ("@errorInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (505)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@warningInstructionAST.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__warningInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_warningInstructionAST * operand_20070,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20070 != NULL) {
    inLexique.printMessage (GGS_string ("@warningInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (513)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@routineCallInstructionAST.instructionSemanticAnalysis'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__routineCallInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_routineCallInstructionAST * operand_20349,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20349 != NULL) {
    inLexique.printMessage (GGS_string ("@routineCallInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (521)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@matchInstructionAST.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__matchInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_matchInstructionAST * operand_20626,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20626 != NULL) {
    inLexique.printMessage (GGS_string ("@matchInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (529)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@castInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__castInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_castInstructionAST * operand_20896,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20896 != NULL) {
    inLexique.printMessage (GGS_string ("@castInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (537)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@addInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__addInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_addInstructionAST * operand_21164,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21164 != NULL) {
    inLexique.printMessage (GGS_string ("@addInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (545)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@removeInstructionAST.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__removeInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_removeInstructionAST * operand_21434,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21434 != NULL) {
    inLexique.printMessage (GGS_string ("@removeInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (553)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@incrementInstructionAST.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__incrementInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_incrementInstructionAST * operand_21710,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21710 != NULL) {
    inLexique.printMessage (GGS_string ("@incrementInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (561)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@decrementInstructionAST.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__decrementInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_decrementInstructionAST * operand_21989,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21989 != NULL) {
    inLexique.printMessage (GGS_string ("@decrementInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (569)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@loopInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__loopInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_loopInstructionAST * operand_22263,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22263 != NULL) {
    inLexique.printMessage (GGS_string ("@loopInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (577)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@messageInstructionAST.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__messageInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_messageInstructionAST * operand_22535,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22535 != NULL) {
    inLexique.printMessage (GGS_string ("@messageInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (585)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@logInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__logInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_logInstructionAST * operand_22806,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22806 != NULL) {
    inLexique.printMessage (GGS_string ("@logInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (593)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@grammarInstructionAST.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__grammarInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_grammarInstructionAST * operand_23077,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23077 != NULL) {
    inLexique.printMessage (GGS_string ("@grammarInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (601)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@withInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__withInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_withInstructionAST * operand_23349,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23349 != NULL) {
    inLexique.printMessage (GGS_string ("@withInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (609)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@switchInstructionAST.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__switchInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_switchInstructionAST * operand_23620,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23620 != NULL) {
    inLexique.printMessage (GGS_string ("@switchInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (617)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@typeMethodInstructionAST.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__typeMethodInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_typeMethodInstructionAST * operand_23897,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23897 != NULL) {
    inLexique.printMessage (GGS_string ("@typeMethodInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (625)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@semanticDeclarationAST.semanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticDeclarationAST__semanticAnalysis> gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticDeclarationAST__semanticAnalysis (typeCategoryMethod__semanticDeclarationAST__semanticAnalysis inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticDeclarationAST__semanticAnalysis
findCategoryMethod__semanticDeclarationAST__semanticAnalysis (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticDeclarationAST__semanticAnalysis result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis.count ()) {
    result = gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticDeclarationAST__semanticAnalysis (superClassPtr) ;
      gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@mapDeclarationAST.semanticAnalysis'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_mapDeclarationAST * operand_24657,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_24657 != NULL) {
    inLexique.printMessage (GGS_string ("@mapDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (643)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@mapindexDeclarationAST.semanticAnalysis'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapindexDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_mapindexDeclarationAST * operand_24907,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_24907 != NULL) {
    inLexique.printMessage (GGS_string ("@mapindexDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (651)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@enumDeclarationAST.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__enumDeclarationAST__semanticAnalysis (C_Compiler &,
                                const cPtr_enumDeclarationAST * operand_25158,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25158 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@filewrapperDeclarationAST.semanticAnalysis'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__filewrapperDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_filewrapperDeclarationAST * operand_25378,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25378 != NULL) {
    inLexique.printMessage (GGS_string ("@filewrapperDeclarationAST.semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (667)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@sortedListDeclarationAST.semanticAnalysis'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sortedListDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_sortedListDeclarationAST * operand_25638,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25638 != NULL) {
    inLexique.printMessage (GGS_string ("@sortedListDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (675)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@structDeclarationAST.semanticAnalysis'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__structDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_structDeclarationAST * operand_25893,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25893 != NULL) {
    inLexique.printMessage (GGS_string ("@structDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (683)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@listDeclarationAST.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_listDeclarationAST * operand_26142,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26142 != NULL) {
    inLexique.printMessage (GGS_string ("@listDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (691)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@classDeclarationAST.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__classDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_classDeclarationAST * operand_26390,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26390 != NULL) {
    inLexique.printMessage (GGS_string ("@classDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (699)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@externRoutineDeclarationAST.semanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externRoutineDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_externRoutineDeclarationAST * operand_26647,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26647 != NULL) {
    inLexique.printMessage (GGS_string ("@externRoutineDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (707)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@routineDeclarationAST.semanticAnalysis'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__routineDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_routineDeclarationAST * operand_26906,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26906 != NULL) {
    inLexique.printMessage (GGS_string ("@routineDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (715)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@externFunctionDeclarationAST.semanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externFunctionDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_externFunctionDeclarationAST * operand_27290,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_27290 != NULL) {
    inLexique.printMessage (GGS_string ("@externFunctionDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (726)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@functionDeclarationAST.semanticAnalysis'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__functionDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_functionDeclarationAST * operand_27551,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_27551 != NULL) {
    inLexique.printMessage (GGS_string ("@functionDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (734)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@lazyFunctionDeclarationAST.semanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lazyFunctionDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_lazyFunctionDeclarationAST * operand_27935,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_27935 != NULL) {
    inLexique.printMessage (GGS_string ("@lazyFunctionDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (745)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@listmapDeclarationAST.semanticAnalysis'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listmapDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_listmapDeclarationAST * operand_28193,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_28193 != NULL) {
    inLexique.printMessage (GGS_string ("@listmapDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (753)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "parseSemanticComponent"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_parseSemanticComponent (C_Compiler & inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct,
                                GGS_semanticsComponentAST  & var_cas_outSemanticsComponentRoot COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_parseSemanticComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_basename = var_cas_inSourceFile.ggs_string ().reader_lastPathComponent ().reader_stringByDeletingPathExtension () ;
  GGS_lstring  var_cas_basenameKey = GGS_lstring ::constructor_new (inLexique, var_cas_basename, GGS_location (inLexique) COMMA_HERE) ;
  const GGS_bool cond_29205 = var_cas_ioParsedComponentStruct.reader_mParsedSemanticsComponentMap (inLexique COMMA_SOURCE_FILE_AT_LINE (769)).reader_hasKey (var_cas_basename) ;
  if (cond_29205.isBuiltAndTrue ()) {
    const GGS_parsedSemanticsComponentMap  temp_29155 = var_cas_ioParsedComponentStruct.reader_mParsedSemanticsComponentMap (inLexique COMMA_SOURCE_FILE_AT_LINE (770)) ;
    if (temp_29155.isBuilt ()) {
      temp_29155 (HERE)->method_searchKey (inLexique, var_cas_basenameKey, var_cas_outSemanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (770)) ;
    }
  }else if (cond_29205.isBuiltAndFalse ()) {
    const GGS_string _depExtension = GGS_string ("") ;
    const GGS_string _depPath = GGS_string ("") ;
    if (_depExtension.isBuilt () && _depPath.isBuilt ()) {
      C_Grammar_semanticsSLRgrammar::_performSourceFileParsing_ (inLexique,
                                    _depExtension.string (),
                                    _depPath.string (),
                                    NULL,
                                    var_cas_inSourceFile,
                                    var_cas_outSemanticsComponentRoot
                                    COMMA_SOURCE_FILE_AT_LINE (772)) ;
    }
    var_cas_ioParsedComponentStruct.mParsedSemanticsComponentMap.modifier_insertKey (inLexique, var_cas_basenameKey, var_cas_outSemanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (773)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_parseSemanticComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "recursivelyImportSemanticComponent"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_recursivelyImportSemanticComponent (C_Compiler & inLexique,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct,
                                GGS_semanticDeclarationListAST  & var_cas_ioSemanticDeclarationList,
                                GGS_stringset  & var_cas_ioParsedFileSet,
                                const GGS_lstringlist   var_cas_inListOfFilesToParse,
                                const GGS_string  var_cas_inDirectory COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_recursivelyImportSemanticComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  {
    GGS_lstringlist::cEnumerator enumerator_29778 (var_cas_inListOfFilesToParse, true) ;
    const GGS_lstringlist::cElement * operand_29778 = NULL ;
    while (((operand_29778 = enumerator_29778.nextObject ()))) {
      macroValidPointer (operand_29778) ;
      const GGS_bool cond_30706 = (var_cas_ioParsedFileSet.reader_hasKey (operand_29778->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (787)))).operator_not () ;
      if (cond_30706.isBuiltAndTrue ()) {
        var_cas_ioParsedFileSet.addAssign_operation (operand_29778->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (788))) ;
        GGS_string var_cas_extension = operand_29778->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (789)).reader_pathExtension () ;
        const GGS_bool cond_30693 = (var_cas_extension).operator_isEqual (GGS_string ("gSemantics")) ;
        if (cond_30693.isBuiltAndTrue ()) {
          GGS_lstring  var_cas_filePath = GGS_lstring ::constructor_new (inLexique, operand_29778->mValue.ggs_string ().reader_absolutePathFromPath (var_cas_inDirectory), operand_29778->mValue.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (793)) COMMA_HERE) ;
          GGS_semanticsComponentAST  var_cas_semanticsComponentRoot ;
          ::routine_parseSemanticComponent (inLexique,  var_cas_filePath,  var_cas_ioParsedComponentStruct,  var_cas_semanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (796)) ;
          var_cas_ioSemanticDeclarationList = (var_cas_ioSemanticDeclarationList).operator_concat (var_cas_semanticsComponentRoot.reader_mSemanticDeclarations (inLexique COMMA_SOURCE_FILE_AT_LINE (801)).reader_mSemanticDeclarationList (inLexique COMMA_SOURCE_FILE_AT_LINE (801))) ;
          ::routine_recursivelyImportSemanticComponent (inLexique,  var_cas_ioParsedComponentStruct,  var_cas_ioSemanticDeclarationList,  var_cas_ioParsedFileSet,  var_cas_semanticsComponentRoot.reader_mImportedComponentFileNameList (inLexique COMMA_SOURCE_FILE_AT_LINE (806)),  var_cas_inDirectory COMMA_SOURCE_FILE_AT_LINE (802)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_recursivelyImportSemanticComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "compileSemanticsComponent"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileSemanticsComponent (C_Compiler & inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                const GGS_string  var_cas_inOutputDirectory,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_compileSemanticsComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_semanticsComponentAST  var_cas_semanticsComponentRoot ;
  ::routine_parseSemanticComponent (inLexique,  var_cas_inSourceFile,  var_cas_ioParsedComponentStruct,  var_cas_semanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (823)) ;
  const GGS_string var_cas_basename = var_cas_inSourceFile.ggs_string ().reader_lastPathComponent ().reader_stringByDeletingPathExtension () ;
  const GGS_lstring  var_cas_componentName = var_cas_semanticsComponentRoot.reader_mSemanticsComponentName (inLexique COMMA_SOURCE_FILE_AT_LINE (830)) ;
  const GGS_bool cond_31596 = (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (831))).operator_isNotEqual (var_cas_basename) ;
  if (cond_31596.isBuiltAndTrue ()) {
    var_cas_componentName.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, ((((GGS_string ("GALGAS checks "
      "the component name ('")).operator_concat (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (833)))).operator_concat (GGS_string ("') against the source file base name ('"))).operator_concat (var_cas_basename)).operator_concat (GGS_string ("'): they should be identical")) COMMA_SOURCE_FILE_AT_LINE (835)) ;
  }
  GGS_semanticDeclarationListAST  var_cas_semanticDeclarationList = var_cas_semanticsComponentRoot.reader_mSemanticDeclarations (inLexique COMMA_SOURCE_FILE_AT_LINE (838)).reader_mSemanticDeclarationList (inLexique COMMA_SOURCE_FILE_AT_LINE (838)) ;
  GGS_stringset  var_cas_parsedFileSet = GGS_stringset ::constructor_setWithString (var_cas_inSourceFile.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (839))) ;
  ::routine_recursivelyImportSemanticComponent (inLexique,  var_cas_ioParsedComponentStruct,  var_cas_semanticDeclarationList,  var_cas_parsedFileSet,  var_cas_semanticsComponentRoot.reader_mImportedComponentFileNameList (inLexique COMMA_SOURCE_FILE_AT_LINE (844)),  var_cas_inSourceFile.ggs_string ().reader_stringByDeletingLastPathComponent () COMMA_SOURCE_FILE_AT_LINE (840)) ;
  GGS_semanticContext var_cas_semanticContext ;
  ::routine_buildSemanticContext (inLexique,  var_cas_semanticDeclarationList,  var_cas_semanticsComponentRoot.reader_mEndOfSourceFile (inLexique COMMA_SOURCE_FILE_AT_LINE (849)),  var_cas_semanticContext COMMA_SOURCE_FILE_AT_LINE (849)) ;
  const GGS_bool cond_32557 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_32557.isBuiltAndTrue ()) {
    {
      GGS_typeMap::cEnumerator enumerator_32334 (var_cas_semanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (852)), true) ;
      const GGS_typeMap::cElement * operand_32334 = NULL ;
      while (((operand_32334 = enumerator_32334.nextObject ()))) {
        macroValidPointer (operand_32334) ;
        GGS_constructorMap  var_cas_constructorMap = (findCategoryReader__ACGalgasType__constructorMap (operand_32334->mInfo.mType (HERE)->galgasRTTI ()) (inLexique, operand_32334->mInfo.mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (853))) ;
        GGS_readerMap  var_cas_readerMap = (findCategoryReader__ACGalgasType__readerMap (operand_32334->mInfo.mType (HERE)->galgasRTTI ()) (inLexique, operand_32334->mInfo.mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (854))) ;
        GGS_modifierMap  var_cas_modifierMap = (findCategoryReader__ACGalgasType__modifierMap (operand_32334->mInfo.mType (HERE)->galgasRTTI ()) (inLexique, operand_32334->mInfo.mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (855))) ;
      }
    }
  }
  {
    GGS_semanticDeclarationListAST::cEnumerator enumerator_32647 (var_cas_semanticDeclarationList, true) ;
    const GGS_semanticDeclarationListAST::cElement * operand_32647 = NULL ;
    while (((operand_32647 = enumerator_32647.nextObject ()))) {
      macroValidPointer (operand_32647) ;
      const GGS_semanticDeclarationAST  temp_32693 = operand_32647->mSemanticDeclaration ;
      if (temp_32693.isBuilt ()) {
        typeCategoryMethod__semanticDeclarationAST__semanticAnalysis method = findCategoryMethod__semanticDeclarationAST__semanticAnalysis (temp_32693.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, temp_32693 (HERE), var_cas_semanticContext COMMA_SOURCE_FILE_AT_LINE (860)) ;
        }
      }
    }
  }
  GGS_semanticDeclarationSortedListForGeneration  var_cas_declarationSortedListForGeneration = GGS_semanticDeclarationSortedListForGeneration ::constructor_emptySortedList () ;
  {
    GGS_semanticDeclarationListAST::cEnumerator enumerator_32941 (var_cas_semanticDeclarationList, true) ;
    const GGS_semanticDeclarationListAST::cElement * operand_32941 = NULL ;
    while (((operand_32941 = enumerator_32941.nextObject ()))) {
      macroValidPointer (operand_32941) ;
      const GGS_semanticDeclarationAST  temp_32997 = operand_32941->mSemanticDeclaration ;
      if (temp_32997.isBuilt ()) {
        typeCategoryMethod__semanticDeclarationAST__decorateAbstractSyntaxTree method = findCategoryMethod__semanticDeclarationAST__decorateAbstractSyntaxTree (temp_32997.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, temp_32997 (HERE), var_cas_semanticContext, var_cas_declarationSortedListForGeneration COMMA_SOURCE_FILE_AT_LINE (867)) ;
        }
      }
    }
  }
  const GGS_bool cond_34182 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_34182.isBuiltAndTrue ()) {
    GGS_stringlist  var_cas_predeclarationList = GGS_stringlist ::constructor_emptyList () ;
    {
      GGS_semanticDeclarationSortedListForGeneration::cEnumerator enumerator_33246 (var_cas_declarationSortedListForGeneration, true) ;
      const GGS_semanticDeclarationSortedListForGeneration::cElement * operand_33246 = NULL ;
      while (((operand_33246 = enumerator_33246.nextObject ()))) {
        macroValidPointer (operand_33246) ;
      }
    }
    GGS_string var_cas_headerString = template_filewrapper_typeGenerationTemplate_semanticFileHeader (inLexique, var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (879)), var_cas_predeclarationList) ;
    GGS_string var_cas_implementationString = template_filewrapper_typeGenerationTemplate_semanticFileImplementation (inLexique, var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (883))) ;
    {
      GGS_semanticDeclarationListAST::cEnumerator enumerator_33592 (var_cas_semanticDeclarationList, true) ;
      const GGS_semanticDeclarationListAST::cElement * operand_33592 = NULL ;
      while (((operand_33592 = enumerator_33592.nextObject ()))) {
        macroValidPointer (operand_33592) ;
        const GGS_semanticDeclarationAST  temp_33636 = operand_33592->mSemanticDeclaration ;
        if (temp_33636.isBuilt ()) {
          typeCategoryMethod__semanticDeclarationAST__generateCode method = findCategoryMethod__semanticDeclarationAST__generateCode (temp_33636.galgasObjectRunTimeInfo ()) ;
          if (method != NULL) {
            method (inLexique, temp_33636 (HERE), var_cas_semanticContext, var_cas_headerString, var_cas_implementationString COMMA_SOURCE_FILE_AT_LINE (886)) ;
          }
        }
      }
    }
    GGS_string::class_method_generateFile (inLexique, var_cas_inOutputDirectory, (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (894))).operator_concat (GGS_string (".h")), GGS_string ("//"), GGS_string ("\n"
      "\n"), var_cas_headerString, GGS_string ("\n"
      "\n"), GGS_string ("#endif\n") COMMA_SOURCE_FILE_AT_LINE (892)) ;
    GGS_string::class_method_generateFile (inLexique, var_cas_inOutputDirectory, (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (903))).operator_concat (GGS_string (".cpp")), GGS_string ("//"), GGS_string ("\n"
      "\n"), var_cas_implementationString, GGS_string ("\n"
      "\n"), GGS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (901)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_compileSemanticsComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticsCompilation (void) {
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__mapDeclarationAST__enterType, gClassInfoFor__mapDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__mapindexDeclarationAST__enterType, gClassInfoFor__mapindexDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__enumDeclarationAST__enterType, gClassInfoFor__enumDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__filewrapperDeclarationAST__enterType, gClassInfoFor__filewrapperDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__sortedListDeclarationAST__enterType, gClassInfoFor__sortedListDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__structDeclarationAST__enterType, gClassInfoFor__structDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__listDeclarationAST__enterType, gClassInfoFor__listDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__classDeclarationAST__enterType, gClassInfoFor__classDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__externRoutineDeclarationAST__enterType, gClassInfoFor__externRoutineDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__externFunctionDeclarationAST__enterType, gClassInfoFor__externFunctionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__lazyFunctionDeclarationAST__enterType, gClassInfoFor__lazyFunctionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__listmapDeclarationAST__enterType, gClassInfoFor__listmapDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localVariableDeclarationAST__instructionSemanticAnalysis, gClassInfoFor__localVariableDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localVariableDeclarationWithInitializationAST__instructionSemanticAnalysis, gClassInfoFor__localVariableDeclarationWithInitializationAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localVariableDeclarationWithAssignmentAST__instructionSemanticAnalysis, gClassInfoFor__localVariableDeclarationWithAssignmentAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localConstantDeclarationWithSourceExpressionAST__instructionSemanticAnalysis, gClassInfoFor__localConstantDeclarationWithSourceExpressionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localConstantDeclarationWithConstructorCallAST__instructionSemanticAnalysis, gClassInfoFor__localConstantDeclarationWithConstructorCallAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__assignmentInstructionAST__instructionSemanticAnalysis, gClassInfoFor__assignmentInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__appendInstructionAST__instructionSemanticAnalysis, gClassInfoFor__appendInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__sendInstructionAST__instructionSemanticAnalysis, gClassInfoFor__sendInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__foreachInstructionAST__instructionSemanticAnalysis, gClassInfoFor__foreachInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__ifInstructionAST__instructionSemanticAnalysis, gClassInfoFor__ifInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__methodCallInstructionAST__instructionSemanticAnalysis, gClassInfoFor__methodCallInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__modifierCallInstructionAST__instructionSemanticAnalysis, gClassInfoFor__modifierCallInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__errorInstructionAST__instructionSemanticAnalysis, gClassInfoFor__errorInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__warningInstructionAST__instructionSemanticAnalysis, gClassInfoFor__warningInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__routineCallInstructionAST__instructionSemanticAnalysis, gClassInfoFor__routineCallInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__matchInstructionAST__instructionSemanticAnalysis, gClassInfoFor__matchInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__castInstructionAST__instructionSemanticAnalysis, gClassInfoFor__castInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__addInstructionAST__instructionSemanticAnalysis, gClassInfoFor__addInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__removeInstructionAST__instructionSemanticAnalysis, gClassInfoFor__removeInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__incrementInstructionAST__instructionSemanticAnalysis, gClassInfoFor__incrementInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__decrementInstructionAST__instructionSemanticAnalysis, gClassInfoFor__decrementInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__loopInstructionAST__instructionSemanticAnalysis, gClassInfoFor__loopInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__messageInstructionAST__instructionSemanticAnalysis, gClassInfoFor__messageInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__logInstructionAST__instructionSemanticAnalysis, gClassInfoFor__logInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__grammarInstructionAST__instructionSemanticAnalysis, gClassInfoFor__grammarInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__withInstructionAST__instructionSemanticAnalysis, gClassInfoFor__withInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__switchInstructionAST__instructionSemanticAnalysis, gClassInfoFor__switchInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__typeMethodInstructionAST__instructionSemanticAnalysis, gClassInfoFor__typeMethodInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__mapDeclarationAST__semanticAnalysis, gClassInfoFor__mapDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__mapindexDeclarationAST__semanticAnalysis, gClassInfoFor__mapindexDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__enumDeclarationAST__semanticAnalysis, gClassInfoFor__enumDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__filewrapperDeclarationAST__semanticAnalysis, gClassInfoFor__filewrapperDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__sortedListDeclarationAST__semanticAnalysis, gClassInfoFor__sortedListDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__structDeclarationAST__semanticAnalysis, gClassInfoFor__structDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__listDeclarationAST__semanticAnalysis, gClassInfoFor__listDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__classDeclarationAST__semanticAnalysis, gClassInfoFor__classDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__externRoutineDeclarationAST__semanticAnalysis, gClassInfoFor__externRoutineDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__routineDeclarationAST__semanticAnalysis, gClassInfoFor__routineDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__externFunctionDeclarationAST__semanticAnalysis, gClassInfoFor__externFunctionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__functionDeclarationAST__semanticAnalysis, gClassInfoFor__functionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__lazyFunctionDeclarationAST__semanticAnalysis, gClassInfoFor__lazyFunctionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__listmapDeclarationAST__semanticAnalysis, gClassInfoFor__listmapDeclarationAST.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_semanticsCompilation (void) {
  gDispatchTableForMethod__semanticDeclarationAST__enterType.free () ;
  gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis.free () ;
  gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticsCompilation (prologueRoutineFor_semanticsCompilation, epilogueRoutineFor_semanticsCompilation) ;

//---------------------------------------------------------------------------*

