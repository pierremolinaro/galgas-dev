//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'semanticsCompilation.cpp'                       *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     january 31th, 2010, at 16h8'36"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticsCompilation.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticsCompilation.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//             Include directives generated by grammar includes              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "semanticsSLRgrammar.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//    Virtual Table for category method '@semanticDeclaration.enterType'     *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticDeclaration__enterType> gDispatchTableForMethod__semanticDeclaration__enterType ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticDeclaration__enterType (typeCategoryMethod__semanticDeclaration__enterType inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticDeclaration__enterType.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticDeclaration__enterType
findCategoryMethod__semanticDeclaration__enterType (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticDeclaration__enterType result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticDeclaration__enterType.count ()) {
    result = gDispatchTableForMethod__semanticDeclaration__enterType (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticDeclaration__enterType (superClassPtr) ;
      gDispatchTableForMethod__semanticDeclaration__enterType.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//               Category method '@mapDeclaration.enterType'                 *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_mapDeclaration * operand_2434,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2434 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionList::cEnumerator enumerator_2568 (operand_2434->mAttributeList, true) ;
      const GGS_attributeInCollectionList::cElement * operand_2568 = NULL ;
      while (((operand_2568 = enumerator_2568.nextObject ()))) {
        macroValidPointer (operand_2568) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_2568->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (49)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_2568->mAttributeName) ;
      }
    }
    GGS_mapMethodMap  var_cas_insertMethodMap = GGS_mapMethodMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_mapMethodList::cEnumerator enumerator_2893 (operand_2434->mInsertMethodList, true) ;
      const GGS_mapMethodList::cElement * operand_2893 = NULL ;
      while (((operand_2893 = enumerator_2893.nextObject ()))) {
        macroValidPointer (operand_2893) ;
        const GGS_bool cond_3052 = var_cas_insertMethodMap.reader_hasKey (operand_2893->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (55))) ;
        if (cond_3052.isBuiltAndTrue ()) {
          operand_2893->mMethodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_2893->mMethodName)).operator_concat (GGS_string ("' insert method is already declared")) COMMA_SOURCE_FILE_AT_LINE (57)) ;
        }else if (cond_3052.isBuiltAndFalse ()) {
          var_cas_insertMethodMap.modifier_insertKey (inLexique, operand_2893->mMethodName, operand_2893->mErrorMessage COMMA_SOURCE_FILE_AT_LINE (58)) ;
        }
      }
    }
    GGS_mapMethodMap  var_cas_removeMethodMap = GGS_mapMethodMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_mapMethodList::cEnumerator enumerator_3247 (operand_2434->mRemoveMethodList, true) ;
      const GGS_mapMethodList::cElement * operand_3247 = NULL ;
      while (((operand_3247 = enumerator_3247.nextObject ()))) {
        macroValidPointer (operand_3247) ;
        const GGS_bool cond_3407 = var_cas_removeMethodMap.reader_hasKey (operand_3247->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (64))) ;
        if (cond_3407.isBuiltAndTrue ()) {
          operand_3247->mMethodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_3247->mMethodName)).operator_concat (GGS_string ("' remove method is already declared")) COMMA_SOURCE_FILE_AT_LINE (66)) ;
        }else if (cond_3407.isBuiltAndFalse ()) {
          const GGS_bool cond_3566 = var_cas_insertMethodMap.reader_hasKey (operand_3247->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (66))) ;
          if (cond_3566.isBuiltAndTrue ()) {
            operand_3247->mMethodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_3247->mMethodName)).operator_concat (GGS_string ("' method is already declared as insert method")) COMMA_SOURCE_FILE_AT_LINE (68)) ;
          }else if (cond_3566.isBuiltAndFalse ()) {
            var_cas_removeMethodMap.modifier_insertKey (inLexique, operand_3247->mMethodName, operand_3247->mErrorMessage COMMA_SOURCE_FILE_AT_LINE (69)) ;
          }
        }
      }
    }
    {
      GGS_attributeInCollectionList::cEnumerator enumerator_3778 (operand_2434->mAttributeList, true) ;
      const GGS_attributeInCollectionList::cElement * operand_3778 = NULL ;
      while (((operand_3778 = enumerator_3778.nextObject ()))) {
        macroValidPointer (operand_3778) ;
        const GGS_string var_cas_accessorName = ((GGS_string ("set")).operator_concat (operand_3778->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ())).operator_concat (GGS_string ("ForKey")) ;
        const GGS_bool cond_4093 = var_cas_removeMethodMap.reader_hasKey (var_cas_accessorName) ;
        if (cond_4093.isBuiltAndTrue ()) {
          operand_3778->mAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_accessorName)).operator_concat (GGS_string ("' remove method name is incompatible with accessor of '"))).operator_concat (operand_3778->mAttributeName)).operator_concat (GGS_string ("' attribute")) COMMA_SOURCE_FILE_AT_LINE (77)) ;
        }else if (cond_4093.isBuiltAndFalse ()) {
          const GGS_bool cond_4289 = var_cas_insertMethodMap.reader_hasKey (var_cas_accessorName) ;
          if (cond_4289.isBuiltAndTrue ()) {
            operand_3778->mAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_accessorName)).operator_concat (GGS_string ("' insert method name is incompatible with accessor of '"))).operator_concat (operand_3778->mAttributeName)).operator_concat (GGS_string ("' attribute")) COMMA_SOURCE_FILE_AT_LINE (79)) ;
          }
        }
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_mapType ::constructor_new (inLexique, operand_2434->mMapTypeName, var_cas_attributeList, var_cas_insertMethodMap, var_cas_removeMethodMap COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_2434->mMapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (88)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@mapindexDeclaration.enterType'              *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapindexDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_mapindexDeclaration * operand_4660,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4660 != NULL) {
    GGS_typeMapIndex  var_cas_mapTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_4660->mMapTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_mapTypeIndex COMMA_SOURCE_FILE_AT_LINE (98)) ;
    GGS_ACGalgasType  var_cas_t = GGS_mapindexType ::constructor_new (inLexique, operand_4660->mMapIndexTypeName, var_cas_mapTypeIndex, operand_4660->mSearchMethodName COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_4660->mMapIndexTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (105)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//               Category method '@enumDeclaration.enterType'                *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__enumDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_enumDeclaration * operand_5193,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5193 != NULL) {
    GGS_enumConstructorMap  var_cas_enumConstructorMap = GGS_enumConstructorMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_lstringlist::cEnumerator enumerator_5346 (operand_5193->mConstructorConstantList, true) ;
      const GGS_lstringlist::cElement * operand_5346 = NULL ;
      while (((operand_5346 = enumerator_5346.nextObject ()))) {
        macroValidPointer (operand_5346) ;
        var_cas_enumConstructorMap.modifier_insertKey (inLexique, operand_5346->mValue COMMA_SOURCE_FILE_AT_LINE (116)) ;
      }
    }
    GGS_stringset  var_cas_allConstantSet = GGS_stringset ::constructor_emptySet () ;
    {
      GGS_lstringlist::cEnumerator enumerator_5524 (operand_5193->mConstructorConstantList, true) ;
      const GGS_lstringlist::cElement * operand_5524 = NULL ;
      while (((operand_5524 = enumerator_5524.nextObject ()))) {
        macroValidPointer (operand_5524) ;
        var_cas_allConstantSet.addAssign_operation (operand_5524->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (121))) ;
      }
    }
    {
      GGS_lstringlist::cEnumerator enumerator_5608 (operand_5193->mConstantList, true) ;
      const GGS_lstringlist::cElement * operand_5608 = NULL ;
      while (((operand_5608 = enumerator_5608.nextObject ()))) {
        macroValidPointer (operand_5608) ;
        const GGS_bool cond_5757 = var_cas_allConstantSet.reader_hasKey (operand_5608->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (124))) ;
        if (cond_5757.isBuiltAndTrue ()) {
          operand_5608->mValue.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_5608->mValue)).operator_concat (GGS_string ("' is already defined for this enumeration")) COMMA_SOURCE_FILE_AT_LINE (126)) ;
        }
        var_cas_allConstantSet.addAssign_operation (operand_5608->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (127))) ;
      }
    }
    GGS_enumMessageMap  var_cas_enumMessageMap = GGS_enumMessageMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_enumMessageList::cEnumerator enumerator_5913 (operand_5193->mEnumMessageList, true) ;
      const GGS_enumMessageList::cElement * operand_5913 = NULL ;
      while (((operand_5913 = enumerator_5913.nextObject ()))) {
        macroValidPointer (operand_5913) ;
        var_cas_enumMessageMap.modifier_insertKey (inLexique, operand_5913->mEnumMessageName COMMA_SOURCE_FILE_AT_LINE (132)) ;
        GGS_stringset  var_cas_messageConstantSet = GGS_stringset ::constructor_emptySet () ;
        {
          GGS_enumMessageAssociationList::cEnumerator enumerator_6116 (operand_5913->mMessageAssociationList, true) ;
          const GGS_enumMessageAssociationList::cElement * operand_6116 = NULL ;
          while (((operand_6116 = enumerator_6116.nextObject ()))) {
            macroValidPointer (operand_6116) ;
            const GGS_bool cond_6303 = var_cas_messageConstantSet.reader_hasKey (operand_6116->mConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (136))) ;
            if (cond_6303.isBuiltAndTrue ()) {
              operand_6116->mConstantName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_6116->mConstantName)).operator_concat (GGS_string ("' is already named for this message definition")) COMMA_SOURCE_FILE_AT_LINE (138)) ;
            }else if (cond_6303.isBuiltAndFalse ()) {
              const GGS_bool cond_6434 = (var_cas_allConstantSet.reader_hasKey (operand_6116->mConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (138)))).operator_not () ;
              if (cond_6434.isBuiltAndTrue ()) {
                operand_6116->mConstantName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("this constant is not declared") COMMA_SOURCE_FILE_AT_LINE (140)) ;
              }
            }
            var_cas_messageConstantSet.addAssign_operation (operand_6116->mConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (141))) ;
          }
        }
        {
          GGS_stringset::cEnumerator enumerator_6601 (var_cas_messageConstantSet, true) ;
          while (enumerator_6601.hasCurrentObject ()) {
            const GGS_bool cond_6762 = (var_cas_allConstantSet.reader_hasKey (enumerator_6601._key (HERE))).operator_not () ;
            if (cond_6762.isBuiltAndTrue ()) {
              operand_5913->mEnumMessageName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this message definition does not name the '")).operator_concat (enumerator_6601._key (HERE))).operator_concat (GGS_string ("' constant")) COMMA_SOURCE_FILE_AT_LINE (147)) ;
            }
            enumerator_6601.next () ;
          }
        }
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_enumType ::constructor_new (inLexique, operand_5193->mEnumTypeName, var_cas_enumConstructorMap, var_cas_enumMessageMap COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_5193->mEnumTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (156)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@filewrapperDeclaration.enterType'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__filewrapperDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_filewrapperDeclaration * operand_7140,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7140 != NULL) {
    GGS_filewrapperTemplateMap  var_cas_filewrapperTemplateMap = GGS_filewrapperTemplateMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_filewrapperTemplateList::cEnumerator enumerator_7278 (operand_7140->mFilewrapperTemplateList, true) ;
      const GGS_filewrapperTemplateList::cElement * operand_7278 = NULL ;
      while (((operand_7278 = enumerator_7278.nextObject ()))) {
        macroValidPointer (operand_7278) ;
        GGS_signature  var_cas_templateSignature = GGS_signature ::constructor_emptyList () ;
        {
          GGS_formalInputParameterList::cEnumerator enumerator_7382 (operand_7278->mFilewrapperTemplateFormalInputParameters, true) ;
          const GGS_formalInputParameterList::cElement * operand_7382 = NULL ;
          while (((operand_7382 = enumerator_7382.nextObject ()))) {
            macroValidPointer (operand_7382) ;
            GGS_typeMapIndex  var_cas_parameterTypeIndex ;
            GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_7382->mFormalParameterTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (169)) ;
            var_cas_templateSignature.addAssign_operation (var_cas_parameterTypeIndex, operand_7382->mFormalParameterName, GGS_formalArgumentPassingMode::constructor_argumentIn (inLexique COMMA_HERE)) ;
          }
        }
        var_cas_filewrapperTemplateMap.modifier_insertKey (inLexique, operand_7278->mFilewrapperTemplateName, var_cas_templateSignature, operand_7278->mFilewrapperTemplatePath COMMA_SOURCE_FILE_AT_LINE (176)) ;
      }
    }
    var_cas_ioSemanticContext.mFilewrapperMap.modifier_insertKey (inLexique, operand_7140->mFilewrapperName, operand_7140->mFilewrapperPath, operand_7140->mFilewrapperExtensionList, var_cas_filewrapperTemplateMap COMMA_SOURCE_FILE_AT_LINE (182)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@sortedListDeclaration.enterType'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sortedListDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_sortedListDeclaration * operand_8155,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8155 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionList::cEnumerator enumerator_8289 (operand_8155->mAttributeList, true) ;
      const GGS_attributeInCollectionList::cElement * operand_8289 = NULL ;
      while (((operand_8289 = enumerator_8289.nextObject ()))) {
        macroValidPointer (operand_8289) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_8289->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (199)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_8289->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_listGalgasType ::constructor_new (inLexique, operand_8155->mSortedListTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_8155->mSortedListTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (207)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Category method '@structDeclaration.enterType'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__structDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_structDeclaration * operand_8841,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8841 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionList::cEnumerator enumerator_8975 (operand_8841->mAttributeList, true) ;
      const GGS_attributeInCollectionList::cElement * operand_8975 = NULL ;
      while (((operand_8975 = enumerator_8975.nextObject ()))) {
        macroValidPointer (operand_8975) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_8975->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (219)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_8975->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_structGalgasType ::constructor_new (inLexique, operand_8841->mStructTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_8841->mStructTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (227)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//               Category method '@listDeclaration.enterType'                *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_listDeclaration * operand_9519,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9519 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionList::cEnumerator enumerator_9653 (operand_9519->mAttributeList, true) ;
      const GGS_attributeInCollectionList::cElement * operand_9653 = NULL ;
      while (((operand_9653 = enumerator_9653.nextObject ()))) {
        macroValidPointer (operand_9653) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_9653->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (239)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_9653->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_listGalgasType ::constructor_new (inLexique, operand_9519->mListTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_9519->mListTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (247)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Category method '@classDeclaration.enterType'                *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__classDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_classDeclaration * operand_10192,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10192 != NULL) {
    GGS_typeMapIndex  var_cas_superClassIndex ;
    const GGS_bool cond_10385 = (operand_10192->mSuperClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (257))).operator_isEqual (GGS_string ("")) ;
    if (cond_10385.isBuiltAndTrue ()) {
      var_cas_superClassIndex = GGS_typeMapIndex ::constructor_null (inLexique COMMA_HERE) ;
    }else if (cond_10385.isBuiltAndFalse ()) {
      GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_10192->mSuperClassName, var_cas_ioSemanticContext.mTypeMap, var_cas_superClassIndex COMMA_SOURCE_FILE_AT_LINE (260)) ;
      GGS_typeMapIndex  var_cas_classIndex ;
      GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_10192->mClassTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_classIndex COMMA_SOURCE_FILE_AT_LINE (263)) ;
      var_cas_ioSemanticContext.mDescendantClassListMap.addAssign_operation (operand_10192->mSuperClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (264)), var_cas_classIndex) ;
    }
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionList::cEnumerator enumerator_10848 (operand_10192->mAttributeList, true) ;
      const GGS_attributeInCollectionList::cElement * operand_10848 = NULL ;
      while (((operand_10848 = enumerator_10848.nextObject ()))) {
        macroValidPointer (operand_10848) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_10848->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (270)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_10848->mAttributeName) ;
      }
    }
    GGS_classMethodList  var_cas_methodList = GGS_classMethodList ::constructor_emptyList () ;
    GGS_classGalgasType  var_cas_t = GGS_classGalgasType ::constructor_new (inLexique, operand_10192->mIsAbstract, operand_10192->mClassTypeName, var_cas_superClassIndex, var_cas_attributeList, var_cas_methodList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_10192->mClassTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (283)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@externRoutineDeclaration.enterType'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externRoutineDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_externRoutineDeclaration * operand_11519,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11519 != NULL) {
    GGS_signature  var_cas_routineSignature = GGS_signature ::constructor_emptyList () ;
    {
      GGS_formalParameterList::cEnumerator enumerator_11691 (operand_11519->mFormalParameterList, true) ;
      const GGS_formalParameterList::cElement * operand_11691 = NULL ;
      while (((operand_11691 = enumerator_11691.nextObject ()))) {
        macroValidPointer (operand_11691) ;
        GGS_typeMapIndex  var_cas_parameterTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_11691->mFormalParameterTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (295)) ;
        var_cas_routineSignature.addAssign_operation (var_cas_parameterTypeIndex, operand_11691->mFormalParameterName, operand_11691->mFormalParameterPassingMode) ;
      }
    }
    var_cas_ioSemanticContext.mRoutineMap.modifier_insertKey (inLexique, operand_11519->mRoutineName, var_cas_routineSignature COMMA_SOURCE_FILE_AT_LINE (299)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@externFunctionDeclaration.enterType'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externFunctionDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_externFunctionDeclaration * operand_12220,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12220 != NULL) {
    GGS_signature  var_cas_functionSignature = GGS_signature ::constructor_emptyList () ;
    {
      GGS_formalParameterList::cEnumerator enumerator_12394 (operand_12220->mFormalParameterList, true) ;
      const GGS_formalParameterList::cElement * operand_12394 = NULL ;
      while (((operand_12394 = enumerator_12394.nextObject ()))) {
        macroValidPointer (operand_12394) ;
        GGS_typeMapIndex  var_cas_parameterTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_12394->mFormalParameterTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (311)) ;
        var_cas_functionSignature.addAssign_operation (var_cas_parameterTypeIndex, operand_12394->mFormalParameterName, operand_12394->mFormalParameterPassingMode) ;
      }
    }
    GGS_typeMapIndex  var_cas_resultTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_12220->mResultTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (316)) ;
    var_cas_ioSemanticContext.mFunctionMap.modifier_insertKey (inLexique, operand_12220->mFunctionName, var_cas_functionSignature, var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (318)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@onceFunctionDeclaration.enterType'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__onceFunctionDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_onceFunctionDeclaration * operand_13094,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13094 != NULL) {
    GGS_typeMapIndex  var_cas_resultTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_13094->mResultTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (328)) ;
    var_cas_ioSemanticContext.mFunctionMap.modifier_insertKey (inLexique, operand_13094->mFunctionName, GGS_signature ::constructor_emptyList (), var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (330)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@listmapDeclaration.enterType'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listmapDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_listmapDeclaration * operand_13565,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13565 != NULL) {
    GGS_typeMapIndex  var_cas_associatedListTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_13565->mAssociatedListTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_associatedListTypeIndex COMMA_SOURCE_FILE_AT_LINE (339)) ;
    GGS_ACGalgasType  var_cas_t = GGS_listmapGalgasType ::constructor_new (inLexique, operand_13565->mListmapTypeName, var_cas_associatedListTypeIndex COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_13565->mListmapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (345)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "buildSemanticContext"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildSemanticContext (C_Compiler & inLexique,
                                const GGS_semanticDeclarationList   var_cas_inSemanticDeclarationList,
                                const GGS_location   var_cas_inEndOfSourceFile,
                                GGS_semanticContext & var_cas_outSemanticContext COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_buildSemanticContext at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_typeMap  var_cas_typeMap = function_constructBuiltinTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (356)) ;
  var_cas_outSemanticContext = GGS_semanticContext::constructor_new (var_cas_typeMap, GGS_routineMap ::constructor_emptyMap (inLexique COMMA_HERE), GGS_functionMap ::constructor_emptyMap (inLexique COMMA_HERE), GGS_descendantClassListMap::constructor_emptyMap (), GGS_filewrapperMap ::constructor_emptyMap (inLexique COMMA_HERE)) ;
  {
    GGS_semanticDeclarationList::cEnumerator enumerator_14582 (var_cas_inSemanticDeclarationList, true) ;
    const GGS_semanticDeclarationList::cElement * operand_14582 = NULL ;
    while (((operand_14582 = enumerator_14582.nextObject ()))) {
      macroValidPointer (operand_14582) ;
      const GGS_semanticDeclaration  temp_14621 = operand_14582->mSemanticDeclaration ;
      if (temp_14621.isBuilt ()) {
        typeCategoryMethod__semanticDeclaration__enterType method = findCategoryMethod__semanticDeclaration__enterType (temp_14621.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, temp_14621 (HERE), var_cas_outSemanticContext COMMA_SOURCE_FILE_AT_LINE (367)) ;
        }
      }
    }
  }
  const GGS_bool cond_15392 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_15392.isBuiltAndTrue ()) {
    GGS_stringlist  var_cas_undefinedClasses = var_cas_outSemanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (371)).reader_unsolvedIndexKeyStringList (inLexique COMMA_SOURCE_FILE_AT_LINE (371)) ;
    const GGS_bool cond_15089 = (var_cas_undefinedClasses.reader_length ()).operator_isEqual (GGS_uint (1U)) ;
    if (cond_15089.isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage = GGS_string ("there is 1 undefined type:") ;
      {
        GGS_stringlist::cEnumerator enumerator_14965 (var_cas_undefinedClasses, true) ;
        const GGS_stringlist::cElement * operand_14965 = NULL ;
        while (((operand_14965 = enumerator_14965.nextObject ()))) {
          macroValidPointer (operand_14965) ;
          var_cas_errorMessage.appendCString ("\n"
            "-  @") ;
          var_cas_errorMessage.dotAssign_operation (operand_14965->mValue) ;
        }
      }
      var_cas_inEndOfSourceFile.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (378)) ;
    }else if (cond_15089.isBuiltAndFalse ()) {
      const GGS_bool cond_15381 = (var_cas_undefinedClasses.reader_length ()).operator_strictSup (GGS_uint (1U)) ;
      if (cond_15381.isBuiltAndTrue ()) {
        GGS_string var_cas_errorMessage = ((GGS_string ("there are ")).operator_concat (var_cas_undefinedClasses.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (379)))).operator_concat (GGS_string (" undefined types:")) ;
        {
          GGS_stringlist::cEnumerator enumerator_15259 (var_cas_undefinedClasses, true) ;
          const GGS_stringlist::cElement * operand_15259 = NULL ;
          while (((operand_15259 = enumerator_15259.nextObject ()))) {
            macroValidPointer (operand_15259) ;
            var_cas_errorMessage.appendCString ("\n"
              "-  @") ;
            var_cas_errorMessage.dotAssign_operation (operand_15259->mValue) ;
          }
        }
        var_cas_inEndOfSourceFile.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (384)) ;
      }
    }
  }
  const GGS_bool cond_15766 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_15766.isBuiltAndTrue ()) {
    {
      GGS_typeMap::cEnumerator enumerator_15631 (var_cas_outSemanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (391)), true) ;
      const GGS_typeMap::cElement * operand_15631 = NULL ;
      while (((operand_15631 = enumerator_15631.nextObject ()))) {
        macroValidPointer (operand_15631) ;
        const GGS_ACGalgasType  temp_15700 = operand_15631->mInfo.mType ;
        if (temp_15700.isBuilt ()) {
          temp_15700 (HERE)->method_checkTypeCrossReferences (inLexique, var_cas_outSemanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (392)).reader_count () COMMA_SOURCE_FILE_AT_LINE (392)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_buildSemanticContext\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@semanticInstruction.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis> gDispatchTableForMethod__semanticInstruction__instructionSemanticAnalysis ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis (typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticInstruction__instructionSemanticAnalysis.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis
findCategoryMethod__semanticInstruction__instructionSemanticAnalysis (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticInstruction__instructionSemanticAnalysis.count ()) {
    result = gDispatchTableForMethod__semanticInstruction__instructionSemanticAnalysis (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticInstruction__instructionSemanticAnalysis (superClassPtr) ;
      gDispatchTableForMethod__semanticInstruction__instructionSemanticAnalysis.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@localVariableDeclaration.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclaration__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localVariableDeclaration * operand_16440,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16440 != NULL) {
    inLexique.printMessage (GGS_string ("@localVariableDeclaration instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (412)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableDeclarationWithInitialization.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclarationWithInitialization__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localVariableDeclarationWithInitialization * operand_16739,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16739 != NULL) {
    inLexique.printMessage (GGS_string ("@localVariableDeclarationWithInitialization instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (420)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableDeclarationWithAssignment.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclarationWithAssignment__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localVariableDeclarationWithAssignment * operand_17052,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17052 != NULL) {
    inLexique.printMessage (GGS_string ("@localVariableDeclarationWithAssignment instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (428)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localConstantDeclarationWithSourceExpression.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localConstantDeclarationWithSourceExpression__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localConstantDeclarationWithSourceExpression * operand_17368,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17368 != NULL) {
    inLexique.printMessage (GGS_string ("@localConstantDeclarationWithSourceExpression instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (437)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localConstantDeclarationWithConstructorCall.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localConstantDeclarationWithConstructorCall__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localConstantDeclarationWithConstructorCall * operand_17688,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17688 != NULL) {
    inLexique.printMessage (GGS_string ("@localConstantDeclarationWithConstructorCall instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (445)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@assignmentInstruction.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__assignmentInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_assignmentInstruction * operand_17985,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17985 != NULL) {
    inLexique.printMessage (GGS_string ("@assignmentInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (453)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@appendInstruction.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__appendInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_appendInstruction * operand_18256,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18256 != NULL) {
    inLexique.printMessage (GGS_string ("@appendInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (461)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@sendInstruction.instructionSemanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sendInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_sendInstruction * operand_18521,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18521 != NULL) {
    inLexique.printMessage (GGS_string ("@sendInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (469)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@foreachInstruction.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__foreachInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_foreachInstruction * operand_18787,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18787 != NULL) {
    inLexique.printMessage (GGS_string ("@foreachInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (477)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@ifInstruction.instructionSemanticAnalysis'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__ifInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_ifInstruction * operand_19051,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19051 != NULL) {
    inLexique.printMessage (GGS_string ("@ifInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (485)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@methodCallInstruction.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__methodCallInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_methodCallInstruction * operand_19318,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19318 != NULL) {
    inLexique.printMessage (GGS_string ("@methodCallInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (493)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@modifierCallInstruction.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__modifierCallInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_modifierCallInstruction * operand_19595,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19595 != NULL) {
    inLexique.printMessage (GGS_string ("@modifierCallInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (501)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@errorInstruction.instructionSemanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__errorInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_errorInstruction * operand_19867,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19867 != NULL) {
    inLexique.printMessage (GGS_string ("@errorInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (509)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@warningInstruction.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__warningInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_warningInstruction * operand_20134,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20134 != NULL) {
    inLexique.printMessage (GGS_string ("@warningInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (517)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@routineCallInstruction.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__routineCallInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_routineCallInstruction * operand_20407,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20407 != NULL) {
    inLexique.printMessage (GGS_string ("@routineCallInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (525)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@matchInstruction.instructionSemanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__matchInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_matchInstruction * operand_20678,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20678 != NULL) {
    inLexique.printMessage (GGS_string ("@matchInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (533)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@castInstruction.instructionSemanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__castInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_castInstruction * operand_20942,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20942 != NULL) {
    inLexique.printMessage (GGS_string ("@castInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (541)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@addInstruction.instructionSemanticAnalysis'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__addInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_addInstruction * operand_21204,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21204 != NULL) {
    inLexique.printMessage (GGS_string ("@addInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (549)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@removeInstruction.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__removeInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_removeInstruction * operand_21468,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21468 != NULL) {
    inLexique.printMessage (GGS_string ("@removeInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (557)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@incrementInstruction.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__incrementInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_incrementInstruction * operand_21738,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21738 != NULL) {
    inLexique.printMessage (GGS_string ("@incrementInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (565)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@decrementInstruction.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__decrementInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_decrementInstruction * operand_22011,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22011 != NULL) {
    inLexique.printMessage (GGS_string ("@decrementInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (573)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@loopInstruction.instructionSemanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__loopInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_loopInstruction * operand_22279,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22279 != NULL) {
    inLexique.printMessage (GGS_string ("@loopInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (581)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@messageInstruction.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__messageInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_messageInstruction * operand_22545,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22545 != NULL) {
    inLexique.printMessage (GGS_string ("@messageInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (589)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@logInstruction.instructionSemanticAnalysis'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__logInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_logInstruction * operand_22810,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22810 != NULL) {
    inLexique.printMessage (GGS_string ("@logInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (597)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@grammarInstruction.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__grammarInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_grammarInstruction * operand_23075,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23075 != NULL) {
    inLexique.printMessage (GGS_string ("@grammarInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (605)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@withInstruction.instructionSemanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__withInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_withInstruction * operand_23341,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23341 != NULL) {
    inLexique.printMessage (GGS_string ("@withInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (613)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@switchInstruction.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__switchInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_switchInstruction * operand_23606,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23606 != NULL) {
    inLexique.printMessage (GGS_string ("@switchInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (621)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@typeMethodInstruction.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__typeMethodInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_typeMethodInstruction * operand_23877,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23877 != NULL) {
    inLexique.printMessage (GGS_string ("@typeMethodInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (629)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@semanticDeclaration.semanticAnalysis'  *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticDeclaration__semanticAnalysis> gDispatchTableForMethod__semanticDeclaration__semanticAnalysis ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticDeclaration__semanticAnalysis (typeCategoryMethod__semanticDeclaration__semanticAnalysis inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticDeclaration__semanticAnalysis.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticDeclaration__semanticAnalysis
findCategoryMethod__semanticDeclaration__semanticAnalysis (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticDeclaration__semanticAnalysis result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticDeclaration__semanticAnalysis.count ()) {
    result = gDispatchTableForMethod__semanticDeclaration__semanticAnalysis (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticDeclaration__semanticAnalysis (superClassPtr) ;
      gDispatchTableForMethod__semanticDeclaration__semanticAnalysis.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@mapDeclaration.semanticAnalysis'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_mapDeclaration * operand_24704,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_24704 != NULL) {
    inLexique.printMessage (GGS_string ("@mapDeclaration semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (651)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@mapindexDeclaration.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapindexDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_mapindexDeclaration * operand_25024,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25024 != NULL) {
    inLexique.printMessage (GGS_string ("@mapindexDeclaration semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (661)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@enumDeclaration.semanticAnalysis'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__enumDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_enumDeclaration * operand_25345,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25345 != NULL) {
    inLexique.printMessage (GGS_string ("@enumDeclaration semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (671)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@filewrapperDeclaration.semanticAnalysis'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__filewrapperDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_filewrapperDeclaration * operand_25669,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25669 != NULL) {
    inLexique.printMessage (GGS_string ("@filewrapperDeclaration.semanticAnalysis [in semanticCompilation.gSemantics]\n") COMMA_SOURCE_FILE_AT_LINE (681)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@sortedListDeclaration.semanticAnalysis'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sortedListDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_sortedListDeclaration * operand_26035,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26035 != NULL) {
    inLexique.printMessage (GGS_string ("@sortedListDeclaration semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (691)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@structDeclaration.semanticAnalysis'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__structDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_structDeclaration * operand_26360,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26360 != NULL) {
    inLexique.printMessage (GGS_string ("@structDeclaration semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (701)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@listDeclaration.semanticAnalysis'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_listDeclaration * operand_26679,
                                GGS_semanticContext & var_cas_ioSemanticContext,
                                GGS_string & var_cas_ioHeaderString,
                                GGS_string & var_cas_ioImplementationString
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26679 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionList::cEnumerator enumerator_26852 (operand_26679->mAttributeList, true) ;
      const GGS_attributeInCollectionList::cElement * operand_26852 = NULL ;
      while (((operand_26852 = enumerator_26852.nextObject ()))) {
        macroValidPointer (operand_26852) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_26852->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (714)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_26852->mAttributeName) ;
      }
    }
    GGS_listDeclaration  var_cas_tt = operand_26679 ;
    var_cas_ioHeaderString.dotAssign_operation (template_filewrapper_typeGenerationTemplate_listTypeHeader (inLexique, var_cas_tt.reader_mListTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (722)).ggs_string ().reader_identifierRepresentation (), var_cas_attributeList)) ;
    var_cas_ioImplementationString.dotAssign_operation (template_filewrapper_typeGenerationTemplate_listTypeImplementation (inLexique, var_cas_tt.reader_mListTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (726)).ggs_string ().reader_identifierRepresentation (), var_cas_attributeList)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@classDeclaration.semanticAnalysis'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__classDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_classDeclaration * operand_27595,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_27595 != NULL) {
    inLexique.printMessage (GGS_string ("@classDeclaration semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (738)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@externRoutineDeclaration.semanticAnalysis'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externRoutineDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_externRoutineDeclaration * operand_27922,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_27922 != NULL) {
    inLexique.printMessage (GGS_string ("@externRoutineDeclaration semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (748)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@routineDeclaration.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__routineDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_routineDeclaration * operand_28251,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_28251 != NULL) {
    inLexique.printMessage (GGS_string ("@routineDeclaration semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (758)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@externFunctionDeclaration.semanticAnalysis'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externFunctionDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_externFunctionDeclaration * operand_28705,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_28705 != NULL) {
    inLexique.printMessage (GGS_string ("@externFunctionDeclaration semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (771)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@functionDeclaration.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__functionDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_functionDeclaration * operand_29036,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_29036 != NULL) {
    inLexique.printMessage (GGS_string ("@functionDeclaration semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (781)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@onceFunctionDeclaration.semanticAnalysis'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__onceFunctionDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_onceFunctionDeclaration * operand_29490,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_29490 != NULL) {
    inLexique.printMessage (GGS_string ("@onceFunctionDeclaration semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (794)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@listmapDeclaration.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listmapDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_listmapDeclaration * operand_29818,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */,
                                GGS_string & /* var_cas_ioHeaderString */,
                                GGS_string & /* var_cas_ioImplementationString */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_29818 != NULL) {
    inLexique.printMessage (GGS_string ("@listmapDeclaration semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (804)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "parseSemanticComponent"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_parseSemanticComponent (C_Compiler & inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct,
                                GGS_semanticsComponentRoot  & var_cas_outSemanticsComponentRoot COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_parseSemanticComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_basename = var_cas_inSourceFile.ggs_string ().reader_lastPathComponent ().reader_stringByDeletingPathExtension () ;
  GGS_lstring  var_cas_basenameKey = GGS_lstring ::constructor_new (inLexique, var_cas_basename, GGS_location (inLexique) COMMA_HERE) ;
  const GGS_bool cond_30904 = var_cas_ioParsedComponentStruct.reader_mParsedSemanticsComponentMap (inLexique COMMA_SOURCE_FILE_AT_LINE (820)).reader_hasKey (var_cas_basename) ;
  if (cond_30904.isBuiltAndTrue ()) {
    const GGS_parsedSemanticsComponentMap  temp_30854 = var_cas_ioParsedComponentStruct.reader_mParsedSemanticsComponentMap (inLexique COMMA_SOURCE_FILE_AT_LINE (821)) ;
    if (temp_30854.isBuilt ()) {
      temp_30854 (HERE)->method_searchKey (inLexique, var_cas_basenameKey, var_cas_outSemanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (821)) ;
    }
  }else if (cond_30904.isBuiltAndFalse ()) {
    const GGS_string _depExtension = GGS_string ("") ;
    const GGS_string _depPath = GGS_string ("") ;
    if (_depExtension.isBuilt () && _depPath.isBuilt ()) {
      semanticsSLRgrammar::_performSourceFileParsing_ (inLexique,
                                    _depExtension.string (),
                                    _depPath.string (),
                                    NULL,
                                    var_cas_inSourceFile,
                                    var_cas_outSemanticsComponentRoot
                                    COMMA_SOURCE_FILE_AT_LINE (823)) ;
    }
    var_cas_ioParsedComponentStruct.mParsedSemanticsComponentMap.modifier_insertKey (inLexique, var_cas_basenameKey, var_cas_outSemanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (824)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_parseSemanticComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "recursivelyImportSemanticComponent"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_recursivelyImportSemanticComponent (C_Compiler & inLexique,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct,
                                GGS_semanticDeclarationList  & var_cas_ioSemanticDeclarationList,
                                GGS_stringset  & var_cas_ioParsedFileSet,
                                const GGS_lstringlist   var_cas_inListOfFilesToParse,
                                const GGS_string  var_cas_inDirectory COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_recursivelyImportSemanticComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  {
    GGS_lstringlist::cEnumerator enumerator_31474 (var_cas_inListOfFilesToParse, true) ;
    const GGS_lstringlist::cElement * operand_31474 = NULL ;
    while (((operand_31474 = enumerator_31474.nextObject ()))) {
      macroValidPointer (operand_31474) ;
      const GGS_bool cond_32403 = (var_cas_ioParsedFileSet.reader_hasKey (operand_31474->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (838)))).operator_not () ;
      if (cond_32403.isBuiltAndTrue ()) {
        var_cas_ioParsedFileSet.addAssign_operation (operand_31474->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (839))) ;
        GGS_string var_cas_extension = operand_31474->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (840)).reader_pathExtension () ;
        const GGS_bool cond_32390 = (var_cas_extension).operator_isEqual (GGS_string ("gSemantics")) ;
        if (cond_32390.isBuiltAndTrue ()) {
          GGS_lstring  var_cas_filePath = GGS_lstring ::constructor_new (inLexique, operand_31474->mValue.ggs_string ().reader_absolutePathFromPath (var_cas_inDirectory), operand_31474->mValue.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (844)) COMMA_HERE) ;
          GGS_semanticsComponentRoot  var_cas_semanticsComponentRoot ;
          ::routine_parseSemanticComponent (inLexique,  var_cas_filePath,  var_cas_ioParsedComponentStruct,  var_cas_semanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (847)) ;
          var_cas_ioSemanticDeclarationList = (var_cas_ioSemanticDeclarationList).operator_concat (var_cas_semanticsComponentRoot.reader_mSemanticDeclarations (inLexique COMMA_SOURCE_FILE_AT_LINE (852)).reader_mSemanticDeclarationList (inLexique COMMA_SOURCE_FILE_AT_LINE (852))) ;
          ::routine_recursivelyImportSemanticComponent (inLexique,  var_cas_ioParsedComponentStruct,  var_cas_ioSemanticDeclarationList,  var_cas_ioParsedFileSet,  var_cas_semanticsComponentRoot.reader_mImportedComponentFileNameList (inLexique COMMA_SOURCE_FILE_AT_LINE (857)),  var_cas_inDirectory COMMA_SOURCE_FILE_AT_LINE (853)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_recursivelyImportSemanticComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "compileSemanticsComponent"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileSemanticsComponent (C_Compiler & inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                const GGS_string  var_cas_inOutputDirectory,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_compileSemanticsComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_semanticsComponentRoot  var_cas_semanticsComponentRoot ;
  ::routine_parseSemanticComponent (inLexique,  var_cas_inSourceFile,  var_cas_ioParsedComponentStruct,  var_cas_semanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (874)) ;
  const GGS_string var_cas_basename = var_cas_inSourceFile.ggs_string ().reader_lastPathComponent ().reader_stringByDeletingPathExtension () ;
  const GGS_lstring  var_cas_componentName = var_cas_semanticsComponentRoot.reader_mSemanticsComponentName (inLexique COMMA_SOURCE_FILE_AT_LINE (881)) ;
  const GGS_bool cond_33294 = (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (882))).operator_isNotEqual (var_cas_basename) ;
  if (cond_33294.isBuiltAndTrue ()) {
    var_cas_componentName.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, ((((GGS_string ("GALGAS checks "
      "the component name ('")).operator_concat (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (884)))).operator_concat (GGS_string ("') against the source file base name ('"))).operator_concat (var_cas_basename)).operator_concat (GGS_string ("'): they should be identical")) COMMA_SOURCE_FILE_AT_LINE (886)) ;
  }
  GGS_semanticDeclarationList  var_cas_semanticDeclarationList = var_cas_semanticsComponentRoot.reader_mSemanticDeclarations (inLexique COMMA_SOURCE_FILE_AT_LINE (889)).reader_mSemanticDeclarationList (inLexique COMMA_SOURCE_FILE_AT_LINE (889)) ;
  GGS_stringset  var_cas_parsedFileSet = GGS_stringset ::constructor_setWithString (var_cas_inSourceFile.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (890))) ;
  ::routine_recursivelyImportSemanticComponent (inLexique,  var_cas_ioParsedComponentStruct,  var_cas_semanticDeclarationList,  var_cas_parsedFileSet,  var_cas_semanticsComponentRoot.reader_mImportedComponentFileNameList (inLexique COMMA_SOURCE_FILE_AT_LINE (895)),  var_cas_inSourceFile.ggs_string ().reader_stringByDeletingLastPathComponent () COMMA_SOURCE_FILE_AT_LINE (891)) ;
  GGS_semanticContext var_cas_semanticContext ;
  ::routine_buildSemanticContext (inLexique,  var_cas_semanticDeclarationList,  var_cas_semanticsComponentRoot.reader_mEndOfSourceFile (inLexique COMMA_SOURCE_FILE_AT_LINE (900)),  var_cas_semanticContext COMMA_SOURCE_FILE_AT_LINE (900)) ;
  const GGS_bool cond_34252 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_34252.isBuiltAndTrue ()) {
    {
      GGS_typeMap::cEnumerator enumerator_34029 (var_cas_semanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (903)), true) ;
      const GGS_typeMap::cElement * operand_34029 = NULL ;
      while (((operand_34029 = enumerator_34029.nextObject ()))) {
        macroValidPointer (operand_34029) ;
        GGS_constructorMap  var_cas_constructorMap = (findCategoryReader__ACGalgasType__constructorMap (operand_34029->mInfo.mType (HERE)->galgasRTTI ()) (inLexique, operand_34029->mInfo.mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (904))) ;
        GGS_readerMap  var_cas_readerMap = (findCategoryReader__ACGalgasType__readerMap (operand_34029->mInfo.mType (HERE)->galgasRTTI ()) (inLexique, operand_34029->mInfo.mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (905))) ;
        GGS_modifierMap  var_cas_modifierMap = (findCategoryReader__ACGalgasType__modifierMap (operand_34029->mInfo.mType (HERE)->galgasRTTI ()) (inLexique, operand_34029->mInfo.mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (906))) ;
      }
    }
  }
  GGS_string var_cas_headerString = template_filewrapper_typeGenerationTemplate_semanticFileHeader (inLexique, var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (911))) ;
  GGS_string var_cas_implementationString = template_filewrapper_typeGenerationTemplate_semanticFileImplementation (inLexique, var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (914))) ;
  {
    GGS_semanticDeclarationList::cEnumerator enumerator_34568 (var_cas_semanticDeclarationList, true) ;
    const GGS_semanticDeclarationList::cElement * operand_34568 = NULL ;
    while (((operand_34568 = enumerator_34568.nextObject ()))) {
      macroValidPointer (operand_34568) ;
      const GGS_semanticDeclaration  temp_34614 = operand_34568->mSemanticDeclaration ;
      if (temp_34614.isBuilt ()) {
        typeCategoryMethod__semanticDeclaration__semanticAnalysis method = findCategoryMethod__semanticDeclaration__semanticAnalysis (temp_34614.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, temp_34614 (HERE), var_cas_semanticContext, var_cas_headerString, var_cas_implementationString COMMA_SOURCE_FILE_AT_LINE (917)) ;
        }
      }
    }
  }
  GGS_string::class_method_generateFile (inLexique, var_cas_inOutputDirectory, (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (926))).operator_concat (GGS_string (".h")), GGS_string ("//"), GGS_string ("\n"
    "\n"), var_cas_headerString, GGS_string ("\n"
    "\n"), GGS_string ("#endif\n") COMMA_SOURCE_FILE_AT_LINE (924)) ;
  GGS_string::class_method_generateFile (inLexique, var_cas_inOutputDirectory, (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (935))).operator_concat (GGS_string (".cpp")), GGS_string ("//"), GGS_string ("\n"
    "\n"), var_cas_implementationString, GGS_string ("\n"
    "\n"), GGS_string ("#endif\n") COMMA_SOURCE_FILE_AT_LINE (933)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_compileSemanticsComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticsCompilation (void) {
  enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__mapDeclaration__enterType, gClassInfoFor__mapDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__mapindexDeclaration__enterType, gClassInfoFor__mapindexDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__enumDeclaration__enterType, gClassInfoFor__enumDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__filewrapperDeclaration__enterType, gClassInfoFor__filewrapperDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__sortedListDeclaration__enterType, gClassInfoFor__sortedListDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__structDeclaration__enterType, gClassInfoFor__structDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__listDeclaration__enterType, gClassInfoFor__listDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__classDeclaration__enterType, gClassInfoFor__classDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__externRoutineDeclaration__enterType, gClassInfoFor__externRoutineDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__externFunctionDeclaration__enterType, gClassInfoFor__externFunctionDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__onceFunctionDeclaration__enterType, gClassInfoFor__onceFunctionDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__listmapDeclaration__enterType, gClassInfoFor__listmapDeclaration.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__localVariableDeclaration__instructionSemanticAnalysis, gClassInfoFor__localVariableDeclaration.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__localVariableDeclarationWithInitialization__instructionSemanticAnalysis, gClassInfoFor__localVariableDeclarationWithInitialization.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__localVariableDeclarationWithAssignment__instructionSemanticAnalysis, gClassInfoFor__localVariableDeclarationWithAssignment.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__localConstantDeclarationWithSourceExpression__instructionSemanticAnalysis, gClassInfoFor__localConstantDeclarationWithSourceExpression.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__localConstantDeclarationWithConstructorCall__instructionSemanticAnalysis, gClassInfoFor__localConstantDeclarationWithConstructorCall.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__assignmentInstruction__instructionSemanticAnalysis, gClassInfoFor__assignmentInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__appendInstruction__instructionSemanticAnalysis, gClassInfoFor__appendInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__sendInstruction__instructionSemanticAnalysis, gClassInfoFor__sendInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__foreachInstruction__instructionSemanticAnalysis, gClassInfoFor__foreachInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__ifInstruction__instructionSemanticAnalysis, gClassInfoFor__ifInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__methodCallInstruction__instructionSemanticAnalysis, gClassInfoFor__methodCallInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__modifierCallInstruction__instructionSemanticAnalysis, gClassInfoFor__modifierCallInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__errorInstruction__instructionSemanticAnalysis, gClassInfoFor__errorInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__warningInstruction__instructionSemanticAnalysis, gClassInfoFor__warningInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__routineCallInstruction__instructionSemanticAnalysis, gClassInfoFor__routineCallInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__matchInstruction__instructionSemanticAnalysis, gClassInfoFor__matchInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__castInstruction__instructionSemanticAnalysis, gClassInfoFor__castInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__addInstruction__instructionSemanticAnalysis, gClassInfoFor__addInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__removeInstruction__instructionSemanticAnalysis, gClassInfoFor__removeInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__incrementInstruction__instructionSemanticAnalysis, gClassInfoFor__incrementInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__decrementInstruction__instructionSemanticAnalysis, gClassInfoFor__decrementInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__loopInstruction__instructionSemanticAnalysis, gClassInfoFor__loopInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__messageInstruction__instructionSemanticAnalysis, gClassInfoFor__messageInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__logInstruction__instructionSemanticAnalysis, gClassInfoFor__logInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__grammarInstruction__instructionSemanticAnalysis, gClassInfoFor__grammarInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__withInstruction__instructionSemanticAnalysis, gClassInfoFor__withInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__switchInstruction__instructionSemanticAnalysis, gClassInfoFor__switchInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__typeMethodInstruction__instructionSemanticAnalysis, gClassInfoFor__typeMethodInstruction.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__mapDeclaration__semanticAnalysis, gClassInfoFor__mapDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__mapindexDeclaration__semanticAnalysis, gClassInfoFor__mapindexDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__enumDeclaration__semanticAnalysis, gClassInfoFor__enumDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__filewrapperDeclaration__semanticAnalysis, gClassInfoFor__filewrapperDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__sortedListDeclaration__semanticAnalysis, gClassInfoFor__sortedListDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__structDeclaration__semanticAnalysis, gClassInfoFor__structDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__listDeclaration__semanticAnalysis, gClassInfoFor__listDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__classDeclaration__semanticAnalysis, gClassInfoFor__classDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__externRoutineDeclaration__semanticAnalysis, gClassInfoFor__externRoutineDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__routineDeclaration__semanticAnalysis, gClassInfoFor__routineDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__externFunctionDeclaration__semanticAnalysis, gClassInfoFor__externFunctionDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__functionDeclaration__semanticAnalysis, gClassInfoFor__functionDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__onceFunctionDeclaration__semanticAnalysis, gClassInfoFor__onceFunctionDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__listmapDeclaration__semanticAnalysis, gClassInfoFor__listmapDeclaration.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_semanticsCompilation (void) {
  gDispatchTableForMethod__semanticDeclaration__enterType.free () ;
  gDispatchTableForMethod__semanticInstruction__instructionSemanticAnalysis.free () ;
  gDispatchTableForMethod__semanticDeclaration__semanticAnalysis.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticsCompilation (prologueRoutineFor_semanticsCompilation, epilogueRoutineFor_semanticsCompilation) ;

//---------------------------------------------------------------------------*

