//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'semanticsCompilation.cpp'                       *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      june 10th, 2008, at 17h45'50"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "semanticsCompilation.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticsCompilation.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//             Include directives generated by grammar includes              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "semanticsSLRgrammar.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "recursivelyImportSemanticComponent"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_recursivelyImportSemanticComponent (C_Compiler & _inLexique,
                                GGS_semanticDeclarationList  & var_cas_ioSemanticDeclarationList,
                                GGS_stringset  & var_cas_ioParsedFileSet,
                                const GGS_lstringlist   var_cas_inListOfFilesToParse,
                                const GGS_string  var_cas_inDirectory COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_recursivelyImportSemanticComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  {
    GGS_lstringlist::cEnumerator enumerator_2041 (var_cas_inListOfFilesToParse, true) ;
    const GGS_lstringlist::cElement * operand_2041 = NULL ;
    while (((operand_2041 = (GGS_lstringlist::cElement *) enumerator_2041.nextObject ()))) {
      macroValidPointer (operand_2041) ;
      if (((var_cas_ioParsedFileSet.reader_hasKey (_inLexique, operand_2041->mValue.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (36)) COMMA_SOURCE_FILE_AT_LINE (36)))._operator_not ()).isBuiltAndTrue ()) {
        var_cas_ioParsedFileSet._addAssign_operation (operand_2041->mValue.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (37))) ;
        GGS_string var_cas_extension ;
        var_cas_extension = operand_2041->mValue.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (38)).reader_pathExtension (_inLexique COMMA_SOURCE_FILE_AT_LINE (38)) ;
        if (((var_cas_extension)._operator_isEqual (GGS_string (true, "gSemantics"))).isBuiltAndTrue ()) {
          GGS_lstring  var_cas_filePath ;
          var_cas_filePath = GGS_lstring ::constructor_new (_inLexique, operand_2041->mValue.ggs_string ().reader_absolutePathFromPath (_inLexique, var_cas_inDirectory COMMA_SOURCE_FILE_AT_LINE (41)), operand_2041->mValue.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (42)) COMMA_HERE) ;
          GGS_semanticsComponentRoot  var_cas_semanticsComponentRoot ;
          GGS_location  automatic_var_0 ;
          semanticsSLRgrammar::_performSourceFileParsing_ (_inLexique,
                                          NULL,
                                          var_cas_filePath,
                                          automatic_var_0,
                                          var_cas_semanticsComponentRoot
                                          COMMA_SOURCE_FILE_AT_LINE (45)) ;
          var_cas_ioSemanticDeclarationList = (var_cas_ioSemanticDeclarationList)._operator_concat (var_cas_semanticsComponentRoot.reader_mSemanticDeclarationList (_inLexique COMMA_SOURCE_FILE_AT_LINE (46))) ;
          ::routine_recursivelyImportSemanticComponent (_inLexique,  var_cas_ioSemanticDeclarationList,  var_cas_ioParsedFileSet,  var_cas_semanticsComponentRoot.reader_mImportedComponentFileNameList (_inLexique COMMA_SOURCE_FILE_AT_LINE (50)),  var_cas_inDirectory COMMA_SOURCE_FILE_AT_LINE (46)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_recursivelyImportSemanticComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "compileSemanticsComponent"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileSemanticsComponent (C_Compiler & _inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                const GGS_string  /* var_cas_inOutputDirectory */ COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_compileSemanticsComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_semanticsComponentRoot  var_cas_semanticsComponentRoot ;
  GGS_location  var_cas_endOfSourceFile ;
  semanticsSLRgrammar::_performSourceFileParsing_ (_inLexique,
                                  NULL,
                                  var_cas_inSourceFile,
                                  var_cas_endOfSourceFile,
                                  var_cas_semanticsComponentRoot
                                  COMMA_SOURCE_FILE_AT_LINE (67)) ;
  GGS_semanticDeclarationList  var_cas_semanticDeclarationList ;
  var_cas_semanticDeclarationList = var_cas_semanticsComponentRoot.reader_mSemanticDeclarationList (_inLexique COMMA_SOURCE_FILE_AT_LINE (69)) ;
  GGS_stringset  var_cas_parsedFileSet ;
  var_cas_parsedFileSet = GGS_stringset ::constructor_setWithString (_inLexique, var_cas_inSourceFile.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (70)) COMMA_HERE) ;
  ::routine_recursivelyImportSemanticComponent (_inLexique,  var_cas_semanticDeclarationList,  var_cas_parsedFileSet,  var_cas_semanticsComponentRoot.reader_mImportedComponentFileNameList (_inLexique COMMA_SOURCE_FILE_AT_LINE (74)),  var_cas_inSourceFile.ggs_string ().reader_stringByDeletingLastPathComponent (_inLexique COMMA_SOURCE_FILE_AT_LINE (75)) COMMA_SOURCE_FILE_AT_LINE (70)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_compileSemanticsComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*

