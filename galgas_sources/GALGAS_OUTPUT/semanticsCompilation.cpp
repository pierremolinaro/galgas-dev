//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'semanticsCompilation.cpp'                       *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                    december 10th, 2009, at 16h28'46"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticsCompilation.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticsCompilation.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//             Include directives generated by grammar includes              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "semanticsSLRgrammar.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "constructBuiltinTypeMap"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_constructBuiltinTypeMap (C_Compiler & inLexique,
                                GGS_typeMap  & var_cas_outTypeMap COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_constructBuiltinTypeMap at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outTypeMap = GGS_typeMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  var_cas_outTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("string"), GGS_location (inLexique) COMMA_HERE), GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (37)) ;
  var_cas_outTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("char"), GGS_location (inLexique) COMMA_HERE), GGS_charGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (38)) ;
  var_cas_outTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("bool"), GGS_location (inLexique) COMMA_HERE), GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (39)) ;
  var_cas_outTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("uint"), GGS_location (inLexique) COMMA_HERE), GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (40)) ;
  var_cas_outTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("sint"), GGS_location (inLexique) COMMA_HERE), GGS_sintGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (41)) ;
  var_cas_outTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("uint64"), GGS_location (inLexique) COMMA_HERE), GGS_uint64GalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (42)) ;
  var_cas_outTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("sint64"), GGS_location (inLexique) COMMA_HERE), GGS_sint64GalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (43)) ;
  var_cas_outTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("double"), GGS_location (inLexique) COMMA_HERE), GGS_doubleGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (44)) ;
  var_cas_outTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("lstring"), GGS_location (inLexique) COMMA_HERE), GGS_lstringGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (45)) ;
  var_cas_outTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("lchar"), GGS_location (inLexique) COMMA_HERE), GGS_lcharGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (46)) ;
  var_cas_outTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("lbool"), GGS_location (inLexique) COMMA_HERE), GGS_lboolGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (47)) ;
  var_cas_outTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("luint"), GGS_location (inLexique) COMMA_HERE), GGS_luintGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (48)) ;
  var_cas_outTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("lsint"), GGS_location (inLexique) COMMA_HERE), GGS_lsintGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (49)) ;
  var_cas_outTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("luint64"), GGS_location (inLexique) COMMA_HERE), GGS_luint64GalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (50)) ;
  var_cas_outTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("lsint64"), GGS_location (inLexique) COMMA_HERE), GGS_lsint64GalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (51)) ;
  var_cas_outTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("ldouble"), GGS_location (inLexique) COMMA_HERE), GGS_ldoubleGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (52)) ;
  var_cas_outTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("binaryset"), GGS_location (inLexique) COMMA_HERE), GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (53)) ;
  var_cas_outTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("stringset"), GGS_location (inLexique) COMMA_HERE), GGS_stringsetGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (54)) ;
  var_cas_outTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("location"), GGS_location (inLexique) COMMA_HERE), GGS_locationGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (55)) ;
  GGS_attributeList  var_cas_lstringAttribute = GGS_attributeList ::constructor_emptyList () ;
  GGS_typeMapIndex  var_cas_lstringIndex ;
  GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("lstring"), GGS_location (inLexique) COMMA_HERE), var_cas_outTypeMap, var_cas_lstringIndex COMMA_SOURCE_FILE_AT_LINE (59)) ;
  var_cas_lstringAttribute.addAssign_operation (var_cas_lstringIndex, GGS_lstring ::constructor_new (inLexique, GGS_string ("mValue"), GGS_location (inLexique) COMMA_HERE)) ;
  GGS_lstring  var_cas_lstringlist = GGS_lstring ::constructor_new (inLexique, GGS_string ("lstringlist"), GGS_location (inLexique) COMMA_HERE) ;
  var_cas_outTypeMap.modifier_insertKey (inLexique, var_cas_lstringlist, GGS_listGalgasType ::constructor_new (inLexique, var_cas_lstringlist, var_cas_lstringAttribute COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (62)) ;
  GGS_attributeList  var_cas_stringAttribute = GGS_attributeList ::constructor_emptyList () ;
  GGS_typeMapIndex  var_cas_stringIndex ;
  GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("string"), GGS_location (inLexique) COMMA_HERE), var_cas_outTypeMap, var_cas_stringIndex COMMA_SOURCE_FILE_AT_LINE (66)) ;
  var_cas_stringAttribute.addAssign_operation (var_cas_stringIndex, GGS_lstring ::constructor_new (inLexique, GGS_string ("mValue"), GGS_location (inLexique) COMMA_HERE)) ;
  GGS_lstring  var_cas_stringlist = GGS_lstring ::constructor_new (inLexique, GGS_string ("stringlist"), GGS_location (inLexique) COMMA_HERE) ;
  var_cas_outTypeMap.modifier_insertKey (inLexique, var_cas_stringlist, GGS_listGalgasType ::constructor_new (inLexique, var_cas_stringlist, var_cas_stringAttribute COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (69)) ;
  GGS_attributeList  var_cas_uint64Attribute = GGS_attributeList ::constructor_emptyList () ;
  GGS_typeMapIndex  var_cas_uint64Index ;
  GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("uint64"), GGS_location (inLexique) COMMA_HERE), var_cas_outTypeMap, var_cas_uint64Index COMMA_SOURCE_FILE_AT_LINE (73)) ;
  var_cas_uint64Attribute.addAssign_operation (var_cas_uint64Index, GGS_lstring ::constructor_new (inLexique, GGS_string ("mValue"), GGS_location (inLexique) COMMA_HERE)) ;
  GGS_lstring  var_cas_uint64list = GGS_lstring ::constructor_new (inLexique, GGS_string ("uint64list"), GGS_location (inLexique) COMMA_HERE) ;
  var_cas_outTypeMap.modifier_insertKey (inLexique, var_cas_uint64list, GGS_listGalgasType ::constructor_new (inLexique, var_cas_uint64list, var_cas_uint64Attribute COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (76)) ;
  GGS_attributeList  var_cas_luintAttribute = GGS_attributeList ::constructor_emptyList () ;
  GGS_typeMapIndex  var_cas_luintIndex ;
  GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("luint"), GGS_location (inLexique) COMMA_HERE), var_cas_outTypeMap, var_cas_luintIndex COMMA_SOURCE_FILE_AT_LINE (80)) ;
  var_cas_luintAttribute.addAssign_operation (var_cas_luintIndex, GGS_lstring ::constructor_new (inLexique, GGS_string ("mValue"), GGS_location (inLexique) COMMA_HERE)) ;
  GGS_lstring  var_cas_luintlist = GGS_lstring ::constructor_new (inLexique, GGS_string ("luintlist"), GGS_location (inLexique) COMMA_HERE) ;
  var_cas_outTypeMap.modifier_insertKey (inLexique, var_cas_luintlist, GGS_listGalgasType ::constructor_new (inLexique, var_cas_luintlist, var_cas_luintAttribute COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (83)) ;
  GGS_attributeList  var_cas_uintAttribute = GGS_attributeList ::constructor_emptyList () ;
  GGS_typeMapIndex  var_cas_uintIndex ;
  GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("uint"), GGS_location (inLexique) COMMA_HERE), var_cas_outTypeMap, var_cas_uintIndex COMMA_SOURCE_FILE_AT_LINE (87)) ;
  var_cas_uintAttribute.addAssign_operation (var_cas_uintIndex, GGS_lstring ::constructor_new (inLexique, GGS_string ("mValue"), GGS_location (inLexique) COMMA_HERE)) ;
  GGS_lstring  var_cas_uintlist = GGS_lstring ::constructor_new (inLexique, GGS_string ("uintlist"), GGS_location (inLexique) COMMA_HERE) ;
  var_cas_outTypeMap.modifier_insertKey (inLexique, var_cas_uintlist, GGS_listGalgasType ::constructor_new (inLexique, var_cas_uintlist, var_cas_uintAttribute COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (90)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_constructBuiltinTypeMap\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Virtual Table for category method '@semanticDeclaration.enterType'     *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticDeclaration__enterType> gDispatchTableForMethod__semanticDeclaration__enterType ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticDeclaration__enterType (typeCategoryMethod__semanticDeclaration__enterType inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticDeclaration__enterType.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticDeclaration__enterType
findCategoryMethod__semanticDeclaration__enterType (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__semanticDeclaration__enterType result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticDeclaration__enterType.count ()) {
    result = gDispatchTableForMethod__semanticDeclaration__enterType (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticDeclaration__enterType (superClassPtr) ;
      gDispatchTableForMethod__semanticDeclaration__enterType.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//               Category method '@mapDeclaration.enterType'                 *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_mapDeclaration * operand_6540,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_6540 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionList::cEnumerator enumerator_6674 (operand_6540->mAttributeList, true) ;
      const GGS_attributeInCollectionList::cElement * operand_6674 = NULL ;
      while (((operand_6674 = enumerator_6674.nextObject ()))) {
        macroValidPointer (operand_6674) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_6674->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (113)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_6674->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_mapType ::constructor_new (inLexique, operand_6540->mMapTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_6540->mMapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (121)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@mapindexDeclaration.enterType'              *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapindexDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_mapindexDeclaration * operand_7207,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7207 != NULL) {
    GGS_typeMapIndex  var_cas_mapTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_7207->mMapTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_mapTypeIndex COMMA_SOURCE_FILE_AT_LINE (131)) ;
    GGS_ACGalgasType  var_cas_t = GGS_mapindexType ::constructor_new (inLexique, operand_7207->mMapIndexTypeName, var_cas_mapTypeIndex, operand_7207->mSearchMethodName COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_7207->mMapIndexTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (138)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//               Category method '@enumDeclaration.enterType'                *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__enumDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_enumDeclaration * operand_7740,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7740 != NULL) {
    GGS_enumConstructorMap  var_cas_enumConstructorMap = GGS_enumConstructorMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_lstringlist::cEnumerator enumerator_7893 (operand_7740->mConstructorConstantList, true) ;
      const GGS_lstringlist::cElement * operand_7893 = NULL ;
      while (((operand_7893 = enumerator_7893.nextObject ()))) {
        macroValidPointer (operand_7893) ;
        var_cas_enumConstructorMap.modifier_insertKey (inLexique, operand_7893->mValue COMMA_SOURCE_FILE_AT_LINE (149)) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_enumType ::constructor_new (inLexique, operand_7740->mEnumTypeName, var_cas_enumConstructorMap COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_7740->mEnumTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (156)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@filewrapperDeclaration.enterType'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__filewrapperDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_filewrapperDeclaration * operand_8278,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8278 != NULL) {
    inLexique.printMessage (GGS_string ("@filewrapperDeclaration.enterType [in semanticCompilation.gSemantics]\n") COMMA_SOURCE_FILE_AT_LINE (164)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@sortedListDeclaration.enterType'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sortedListDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_sortedListDeclaration * operand_8554,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8554 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionList::cEnumerator enumerator_8688 (operand_8554->mAttributeList, true) ;
      const GGS_attributeInCollectionList::cElement * operand_8688 = NULL ;
      while (((operand_8688 = enumerator_8688.nextObject ()))) {
        macroValidPointer (operand_8688) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_8688->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (176)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_8688->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_listGalgasType ::constructor_new (inLexique, operand_8554->mSortedListTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_8554->mSortedListTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (184)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Category method '@structDeclaration.enterType'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__structDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_structDeclaration * operand_9240,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9240 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionList::cEnumerator enumerator_9374 (operand_9240->mAttributeList, true) ;
      const GGS_attributeInCollectionList::cElement * operand_9374 = NULL ;
      while (((operand_9374 = enumerator_9374.nextObject ()))) {
        macroValidPointer (operand_9374) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_9374->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (196)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_9374->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_structGalgasType ::constructor_new (inLexique, operand_9240->mStructTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_9240->mStructTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (204)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//               Category method '@listDeclaration.enterType'                *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_listDeclaration * operand_9918,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9918 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionList::cEnumerator enumerator_10052 (operand_9918->mAttributeList, true) ;
      const GGS_attributeInCollectionList::cElement * operand_10052 = NULL ;
      while (((operand_10052 = enumerator_10052.nextObject ()))) {
        macroValidPointer (operand_10052) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_10052->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (216)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_10052->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_listGalgasType ::constructor_new (inLexique, operand_9918->mListTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_9918->mListTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (224)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Category method '@classDeclaration.enterType'                *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__classDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_classDeclaration * operand_10591,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10591 != NULL) {
    GGS_typeMapIndex  var_cas_superClassIndex ;
    const GGS_bool cond_10784 = (operand_10591->mSuperClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (234))).operator_isEqual (GGS_string ("")) ;
    if (cond_10784.isBuiltAndTrue ()) {
      var_cas_superClassIndex = GGS_typeMapIndex ::constructor_null (inLexique COMMA_HERE) ;
    }else if (cond_10784.isBuiltAndFalse ()) {
      GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_10591->mSuperClassName, var_cas_ioSemanticContext.mTypeMap, var_cas_superClassIndex COMMA_SOURCE_FILE_AT_LINE (237)) ;
      GGS_typeMapIndex  var_cas_classIndex ;
      GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_10591->mClassTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_classIndex COMMA_SOURCE_FILE_AT_LINE (240)) ;
      var_cas_ioSemanticContext.mDescendantClassListMap.addAssign_operation (operand_10591->mSuperClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (241)), var_cas_classIndex) ;
    }
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionList::cEnumerator enumerator_11247 (operand_10591->mAttributeList, true) ;
      const GGS_attributeInCollectionList::cElement * operand_11247 = NULL ;
      while (((operand_11247 = enumerator_11247.nextObject ()))) {
        macroValidPointer (operand_11247) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_11247->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (247)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_11247->mAttributeName) ;
      }
    }
    GGS_classMethodList  var_cas_methodList = GGS_classMethodList ::constructor_emptyList () ;
    GGS_classGalgasType  var_cas_t = GGS_classGalgasType ::constructor_new (inLexique, operand_10591->mIsAbstract, operand_10591->mClassTypeName, var_cas_superClassIndex, var_cas_attributeList, var_cas_methodList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_10591->mClassTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (260)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@externRoutineDeclaration.enterType'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externRoutineDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_externRoutineDeclaration * operand_11918,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11918 != NULL) {
    GGS_signature  var_cas_routineSignature = GGS_signature ::constructor_emptyList () ;
    {
      GGS_formalParameterList::cEnumerator enumerator_12090 (operand_11918->mFormalParameterList, true) ;
      const GGS_formalParameterList::cElement * operand_12090 = NULL ;
      while (((operand_12090 = enumerator_12090.nextObject ()))) {
        macroValidPointer (operand_12090) ;
        GGS_typeMapIndex  var_cas_parameterTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_12090->mFormalParameterTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (272)) ;
        var_cas_routineSignature.addAssign_operation (var_cas_parameterTypeIndex, operand_12090->mFormalParameterName, operand_12090->mFormalParameterPassingMode) ;
      }
    }
    var_cas_ioSemanticContext.mRoutineMap.modifier_insertKey (inLexique, operand_11918->mRoutineName, var_cas_routineSignature COMMA_SOURCE_FILE_AT_LINE (276)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@externFunctionDeclaration.enterType'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externFunctionDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_externFunctionDeclaration * operand_12619,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12619 != NULL) {
    GGS_signature  var_cas_functionSignature = GGS_signature ::constructor_emptyList () ;
    {
      GGS_formalParameterList::cEnumerator enumerator_12793 (operand_12619->mFormalParameterList, true) ;
      const GGS_formalParameterList::cElement * operand_12793 = NULL ;
      while (((operand_12793 = enumerator_12793.nextObject ()))) {
        macroValidPointer (operand_12793) ;
        GGS_typeMapIndex  var_cas_parameterTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_12793->mFormalParameterTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (288)) ;
        var_cas_functionSignature.addAssign_operation (var_cas_parameterTypeIndex, operand_12793->mFormalParameterName, operand_12793->mFormalParameterPassingMode) ;
      }
    }
    GGS_typeMapIndex  var_cas_resultTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_12619->mResultTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (293)) ;
    var_cas_ioSemanticContext.mFunctionMap.modifier_insertKey (inLexique, operand_12619->mFunctionName, var_cas_functionSignature, var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (295)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@onceFunctionDeclaration.enterType'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__onceFunctionDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_onceFunctionDeclaration * operand_13493,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13493 != NULL) {
    GGS_typeMapIndex  var_cas_resultTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_13493->mResultTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (305)) ;
    var_cas_ioSemanticContext.mFunctionMap.modifier_insertKey (inLexique, operand_13493->mFunctionName, GGS_signature ::constructor_emptyList (), var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (307)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@listmapDeclaration.enterType'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listmapDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_listmapDeclaration * operand_13964,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13964 != NULL) {
    GGS_typeMapIndex  var_cas_associatedListTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_13964->mAssociatedListTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_associatedListTypeIndex COMMA_SOURCE_FILE_AT_LINE (316)) ;
    GGS_ACGalgasType  var_cas_t = GGS_listmapGalgasType ::constructor_new (inLexique, operand_13964->mListmapTypeName, var_cas_associatedListTypeIndex COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_13964->mListmapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (322)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "buildSemanticContext"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildSemanticContext (C_Compiler & inLexique,
                                const GGS_semanticDeclarationList   var_cas_inSemanticDeclarationList,
                                const GGS_location   var_cas_inEndOfSourceFile,
                                GGS_semanticContext & var_cas_outSemanticContext COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_buildSemanticContext at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_typeMap  var_cas_typeMap ;
  ::routine_constructBuiltinTypeMap (inLexique,  var_cas_typeMap COMMA_SOURCE_FILE_AT_LINE (334)) ;
  var_cas_outSemanticContext = GGS_semanticContext::constructor_new (var_cas_typeMap, GGS_routineMap ::constructor_emptyMap (inLexique COMMA_HERE), GGS_functionMap ::constructor_emptyMap (inLexique COMMA_HERE), GGS_descendantClassListMap::constructor_emptyMap ()) ;
  {
    GGS_semanticDeclarationList::cEnumerator enumerator_14956 (var_cas_inSemanticDeclarationList, true) ;
    const GGS_semanticDeclarationList::cElement * operand_14956 = NULL ;
    while (((operand_14956 = enumerator_14956.nextObject ()))) {
      macroValidPointer (operand_14956) ;
      const GGS_semanticDeclaration  temp_14995 = operand_14956->mSemanticDeclaration ;
      if (temp_14995.isBuilt ()) {
        typeCategoryMethod__semanticDeclaration__enterType method = findCategoryMethod__semanticDeclaration__enterType (temp_14995.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, temp_14995 (HERE), var_cas_outSemanticContext COMMA_SOURCE_FILE_AT_LINE (344)) ;
        }
      }
    }
  }
  const GGS_bool cond_15766 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_15766.isBuiltAndTrue ()) {
    GGS_stringlist  var_cas_undefinedClasses = var_cas_outSemanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (348)).reader_unsolvedIndexKeyStringList (inLexique COMMA_SOURCE_FILE_AT_LINE (348)) ;
    const GGS_bool cond_15463 = (var_cas_undefinedClasses.reader_length ()).operator_isEqual (GGS_uint (1U)) ;
    if (cond_15463.isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage = GGS_string ("there is 1 undefined type:") ;
      {
        GGS_stringlist::cEnumerator enumerator_15339 (var_cas_undefinedClasses, true) ;
        const GGS_stringlist::cElement * operand_15339 = NULL ;
        while (((operand_15339 = enumerator_15339.nextObject ()))) {
          macroValidPointer (operand_15339) ;
          var_cas_errorMessage.appendCString ("\n"
            "-  @") ;
          var_cas_errorMessage.dotAssign_operation (operand_15339->mValue) ;
        }
      }
      var_cas_inEndOfSourceFile.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (355)) ;
    }else if (cond_15463.isBuiltAndFalse ()) {
      const GGS_bool cond_15755 = (var_cas_undefinedClasses.reader_length ()).operator_strictSup (GGS_uint (1U)) ;
      if (cond_15755.isBuiltAndTrue ()) {
        GGS_string var_cas_errorMessage = ((GGS_string ("there are ")).operator_concat (var_cas_undefinedClasses.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (356)))).operator_concat (GGS_string (" undefined types:")) ;
        {
          GGS_stringlist::cEnumerator enumerator_15633 (var_cas_undefinedClasses, true) ;
          const GGS_stringlist::cElement * operand_15633 = NULL ;
          while (((operand_15633 = enumerator_15633.nextObject ()))) {
            macroValidPointer (operand_15633) ;
            var_cas_errorMessage.appendCString ("\n"
              "-  @") ;
            var_cas_errorMessage.dotAssign_operation (operand_15633->mValue) ;
          }
        }
        var_cas_inEndOfSourceFile.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (361)) ;
      }
    }
  }
  const GGS_bool cond_16140 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_16140.isBuiltAndTrue ()) {
    {
      GGS_typeMap::cEnumerator enumerator_16005 (var_cas_outSemanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (368)), true) ;
      const GGS_typeMap::cElement * operand_16005 = NULL ;
      while (((operand_16005 = enumerator_16005.nextObject ()))) {
        macroValidPointer (operand_16005) ;
        const GGS_ACGalgasType  temp_16074 = operand_16005->mInfo.mType ;
        if (temp_16074.isBuilt ()) {
          temp_16074 (HERE)->method_checkTypeCrossReferences (inLexique, var_cas_outSemanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (369)).reader_count () COMMA_SOURCE_FILE_AT_LINE (369)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_buildSemanticContext\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@semanticInstruction.semanticAnalysis'  *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticInstruction__semanticAnalysis> gDispatchTableForMethod__semanticInstruction__semanticAnalysis ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticInstruction__semanticAnalysis (typeCategoryMethod__semanticInstruction__semanticAnalysis inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticInstruction__semanticAnalysis.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticInstruction__semanticAnalysis
findCategoryMethod__semanticInstruction__semanticAnalysis (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__semanticInstruction__semanticAnalysis result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticInstruction__semanticAnalysis.count ()) {
    result = gDispatchTableForMethod__semanticInstruction__semanticAnalysis (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticInstruction__semanticAnalysis (superClassPtr) ;
      gDispatchTableForMethod__semanticInstruction__semanticAnalysis.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@localVariableDeclaration.semanticAnalysis'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclaration__semanticAnalysis (C_Compiler &,
                                const cPtr_localVariableDeclaration * operand_16792,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16792 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableDeclarationWithInitialization.semanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclarationWithInitialization__semanticAnalysis (C_Compiler &,
                                const cPtr_localVariableDeclarationWithInitialization * operand_17010,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17010 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableDeclarationWithAssignment.semanticAnalysis' *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclarationWithAssignment__semanticAnalysis (C_Compiler &,
                                const cPtr_localVariableDeclarationWithAssignment * operand_17224,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17224 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localConstantDeclarationWithSourceExpression.semanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localConstantDeclarationWithSourceExpression__semanticAnalysis (C_Compiler &,
                                const cPtr_localConstantDeclarationWithSourceExpression * operand_17445,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17445 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localConstantDeclarationWithConstructorCall.semanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localConstantDeclarationWithConstructorCall__semanticAnalysis (C_Compiler &,
                                const cPtr_localConstantDeclarationWithConstructorCall * operand_17664,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17664 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@assignmentInstruction.semanticAnalysis'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__assignmentInstruction__semanticAnalysis (C_Compiler &,
                                const cPtr_assignmentInstruction * operand_17861,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17861 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@appendInstruction.semanticAnalysis'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__appendInstruction__semanticAnalysis (C_Compiler &,
                                const cPtr_appendInstruction * operand_18054,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18054 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@sendInstruction.semanticAnalysis'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sendInstruction__semanticAnalysis (C_Compiler &,
                                const cPtr_sendInstruction * operand_18245,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18245 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@foreachInstruction.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__foreachInstruction__semanticAnalysis (C_Compiler &,
                                const cPtr_foreachInstruction * operand_18439,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18439 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@ifInstruction.semanticAnalysis'              *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__ifInstruction__semanticAnalysis (C_Compiler &,
                                const cPtr_ifInstruction * operand_18628,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18628 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@methodCallInstruction.semanticAnalysis'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__methodCallInstruction__semanticAnalysis (C_Compiler &,
                                const cPtr_methodCallInstruction * operand_18825,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18825 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@modifierCallInstruction.semanticAnalysis'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__modifierCallInstruction__semanticAnalysis (C_Compiler &,
                                const cPtr_modifierCallInstruction * operand_19024,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19024 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@errorInstruction.semanticAnalysis'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__errorInstruction__semanticAnalysis (C_Compiler &,
                                const cPtr_errorInstruction * operand_19216,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19216 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@warningInstruction.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__warningInstruction__semanticAnalysis (C_Compiler &,
                                const cPtr_warningInstruction * operand_19410,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19410 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@routineCallInstruction.semanticAnalysis'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__routineCallInstruction__semanticAnalysis (C_Compiler &,
                                const cPtr_routineCallInstruction * operand_19608,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19608 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@matchInstruction.semanticAnalysis'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__matchInstruction__semanticAnalysis (C_Compiler &,
                                const cPtr_matchInstruction * operand_19800,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19800 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@castInstruction.semanticAnalysis'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__castInstruction__semanticAnalysis (C_Compiler &,
                                const cPtr_castInstruction * operand_19991,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19991 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@addInstruction.semanticAnalysis'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__addInstruction__semanticAnalysis (C_Compiler &,
                                const cPtr_addInstruction * operand_20181,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20181 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@removeInstruction.semanticAnalysis'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__removeInstruction__semanticAnalysis (C_Compiler &,
                                const cPtr_removeInstruction * operand_20374,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20374 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@incrementInstruction.semanticAnalysis'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__incrementInstruction__semanticAnalysis (C_Compiler &,
                                const cPtr_incrementInstruction * operand_20570,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20570 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@decrementInstruction.semanticAnalysis'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__decrementInstruction__semanticAnalysis (C_Compiler &,
                                const cPtr_decrementInstruction * operand_20766,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20766 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@loopInstruction.semanticAnalysis'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__loopInstruction__semanticAnalysis (C_Compiler &,
                                const cPtr_loopInstruction * operand_20957,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20957 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@messageInstruction.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__messageInstruction__semanticAnalysis (C_Compiler &,
                                const cPtr_messageInstruction * operand_21151,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21151 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@logInstruction.semanticAnalysis'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__logInstruction__semanticAnalysis (C_Compiler &,
                                const cPtr_logInstruction * operand_21341,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21341 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@grammarInstruction.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__grammarInstruction__semanticAnalysis (C_Compiler &,
                                const cPtr_grammarInstruction * operand_21535,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21535 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@withInstruction.semanticAnalysis'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__withInstruction__semanticAnalysis (C_Compiler &,
                                const cPtr_withInstruction * operand_21726,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21726 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@switchInstruction.semanticAnalysis'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__switchInstruction__semanticAnalysis (C_Compiler &,
                                const cPtr_switchInstruction * operand_21919,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21919 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@typeMethodInstruction.semanticAnalysis'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__typeMethodInstruction__semanticAnalysis (C_Compiler &,
                                const cPtr_typeMethodInstruction * operand_22116,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22116 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@semanticDeclaration.semanticAnalysis'  *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticDeclaration__semanticAnalysis> gDispatchTableForMethod__semanticDeclaration__semanticAnalysis ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticDeclaration__semanticAnalysis (typeCategoryMethod__semanticDeclaration__semanticAnalysis inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticDeclaration__semanticAnalysis.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticDeclaration__semanticAnalysis
findCategoryMethod__semanticDeclaration__semanticAnalysis (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__semanticDeclaration__semanticAnalysis result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticDeclaration__semanticAnalysis.count ()) {
    result = gDispatchTableForMethod__semanticDeclaration__semanticAnalysis (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticDeclaration__semanticAnalysis (superClassPtr) ;
      gDispatchTableForMethod__semanticDeclaration__semanticAnalysis.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@mapDeclaration.semanticAnalysis'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapDeclaration__semanticAnalysis (C_Compiler &,
                                const cPtr_mapDeclaration * operand_22800,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22800 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@mapindexDeclaration.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapindexDeclaration__semanticAnalysis (C_Compiler &,
                                const cPtr_mapindexDeclaration * operand_22995,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22995 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@enumDeclaration.semanticAnalysis'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__enumDeclaration__semanticAnalysis (C_Compiler &,
                                const cPtr_enumDeclaration * operand_23186,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23186 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@filewrapperDeclaration.semanticAnalysis'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__filewrapperDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_filewrapperDeclaration * operand_23384,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23384 != NULL) {
    inLexique.printMessage (GGS_string ("@filewrapperDeclaration.semanticAnalysis [in semanticCompilation.gSemantics]\n") COMMA_SOURCE_FILE_AT_LINE (617)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@sortedListDeclaration.semanticAnalysis'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sortedListDeclaration__semanticAnalysis (C_Compiler &,
                                const cPtr_sortedListDeclaration * operand_23674,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23674 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@structDeclaration.semanticAnalysis'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__structDeclaration__semanticAnalysis (C_Compiler &,
                                const cPtr_structDeclaration * operand_23867,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23867 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@listDeclaration.semanticAnalysis'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listDeclaration__semanticAnalysis (C_Compiler &,
                                const cPtr_listDeclaration * operand_24058,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_24058 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@classDeclaration.semanticAnalysis'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__classDeclaration__semanticAnalysis (C_Compiler &,
                                const cPtr_classDeclaration * operand_24250,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_24250 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@externRoutineDeclaration.semanticAnalysis'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externRoutineDeclaration__semanticAnalysis (C_Compiler &,
                                const cPtr_externRoutineDeclaration * operand_24450,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_24450 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@routineDeclaration.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__routineDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_routineDeclaration * operand_24644,
                                const GGS_semanticContext  var_cas_inSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_24644 != NULL) {
    {
      GGS_semanticInstructionList::cEnumerator enumerator_24719 (operand_24644->mRoutineInstructionList, true) ;
      const GGS_semanticInstructionList::cElement * operand_24719 = NULL ;
      while (((operand_24719 = enumerator_24719.nextObject ()))) {
        macroValidPointer (operand_24719) ;
        const GGS_semanticInstruction  temp_24757 = operand_24719->mInstruction ;
        if (temp_24757.isBuilt ()) {
          typeCategoryMethod__semanticInstruction__semanticAnalysis method = findCategoryMethod__semanticInstruction__semanticAnalysis (temp_24757.galgasObjectRunTimeInfo ()) ;
          if (method != NULL) {
            method (inLexique, temp_24757 (HERE), var_cas_inSemanticContext COMMA_SOURCE_FILE_AT_LINE (661)) ;
          }
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@externFunctionDeclaration.semanticAnalysis'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externFunctionDeclaration__semanticAnalysis (C_Compiler &,
                                const cPtr_externFunctionDeclaration * operand_24948,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_24948 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@functionDeclaration.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__functionDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_functionDeclaration * operand_25143,
                                const GGS_semanticContext  var_cas_inSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25143 != NULL) {
    {
      GGS_semanticInstructionList::cEnumerator enumerator_25219 (operand_25143->mFunctionInstructionList, true) ;
      const GGS_semanticInstructionList::cElement * operand_25219 = NULL ;
      while (((operand_25219 = enumerator_25219.nextObject ()))) {
        macroValidPointer (operand_25219) ;
        const GGS_semanticInstruction  temp_25257 = operand_25219->mInstruction ;
        if (temp_25257.isBuilt ()) {
          typeCategoryMethod__semanticInstruction__semanticAnalysis method = findCategoryMethod__semanticInstruction__semanticAnalysis (temp_25257.galgasObjectRunTimeInfo ()) ;
          if (method != NULL) {
            method (inLexique, temp_25257 (HERE), var_cas_inSemanticContext COMMA_SOURCE_FILE_AT_LINE (678)) ;
          }
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@onceFunctionDeclaration.semanticAnalysis'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__onceFunctionDeclaration__semanticAnalysis (C_Compiler &,
                                const cPtr_onceFunctionDeclaration * operand_25446,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25446 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@listmapDeclaration.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listmapDeclaration__semanticAnalysis (C_Compiler &,
                                const cPtr_listmapDeclaration * operand_25640,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25640 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "parseSemanticComponent"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_parseSemanticComponent (C_Compiler & inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct,
                                GGS_semanticsComponentRoot  & var_cas_outSemanticsComponentRoot COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_parseSemanticComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_basename = var_cas_inSourceFile.ggs_string ().reader_lastPathComponent ().reader_stringByDeletingPathExtension () ;
  GGS_lstring  var_cas_basenameKey = GGS_lstring ::constructor_new (inLexique, var_cas_basename, GGS_location (inLexique) COMMA_HERE) ;
  const GGS_bool cond_26597 = var_cas_ioParsedComponentStruct.reader_mParsedSemanticsComponentMap (inLexique COMMA_SOURCE_FILE_AT_LINE (709)).reader_hasKey (var_cas_basename) ;
  if (cond_26597.isBuiltAndTrue ()) {
    const GGS_parsedSemanticsComponentMap  temp_26547 = var_cas_ioParsedComponentStruct.reader_mParsedSemanticsComponentMap (inLexique COMMA_SOURCE_FILE_AT_LINE (710)) ;
    if (temp_26547.isBuilt ()) {
      temp_26547 (HERE)->method_searchKey (inLexique, var_cas_basenameKey, var_cas_outSemanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (710)) ;
    }
  }else if (cond_26597.isBuiltAndFalse ()) {
    const GGS_string _depExtension = GGS_string ("") ;
    const GGS_string _depPath = GGS_string ("") ;
    if (_depExtension.isBuilt () && _depPath.isBuilt ()) {
      semanticsSLRgrammar::_performSourceFileParsing_ (inLexique,
                                    _depExtension.string (),
                                    _depPath.string (),
                                    NULL,
                                    var_cas_inSourceFile,
                                    var_cas_outSemanticsComponentRoot
                                    COMMA_SOURCE_FILE_AT_LINE (712)) ;
    }
    var_cas_ioParsedComponentStruct.mParsedSemanticsComponentMap.modifier_insertKey (inLexique, var_cas_basenameKey, var_cas_outSemanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (713)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_parseSemanticComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "recursivelyImportSemanticComponent"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_recursivelyImportSemanticComponent (C_Compiler & inLexique,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct,
                                GGS_semanticDeclarationList  & var_cas_ioSemanticDeclarationList,
                                GGS_stringset  & var_cas_ioParsedFileSet,
                                const GGS_lstringlist   var_cas_inListOfFilesToParse,
                                const GGS_string  var_cas_inDirectory COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_recursivelyImportSemanticComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  {
    GGS_lstringlist::cEnumerator enumerator_27167 (var_cas_inListOfFilesToParse, true) ;
    const GGS_lstringlist::cElement * operand_27167 = NULL ;
    while (((operand_27167 = enumerator_27167.nextObject ()))) {
      macroValidPointer (operand_27167) ;
      const GGS_bool cond_28096 = (var_cas_ioParsedFileSet.reader_hasKey (operand_27167->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (727)))).operator_not () ;
      if (cond_28096.isBuiltAndTrue ()) {
        var_cas_ioParsedFileSet.addAssign_operation (operand_27167->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (728))) ;
        GGS_string var_cas_extension = operand_27167->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (729)).reader_pathExtension () ;
        const GGS_bool cond_28083 = (var_cas_extension).operator_isEqual (GGS_string ("gSemantics")) ;
        if (cond_28083.isBuiltAndTrue ()) {
          GGS_lstring  var_cas_filePath = GGS_lstring ::constructor_new (inLexique, operand_27167->mValue.ggs_string ().reader_absolutePathFromPath (var_cas_inDirectory), operand_27167->mValue.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (733)) COMMA_HERE) ;
          GGS_semanticsComponentRoot  var_cas_semanticsComponentRoot ;
          ::routine_parseSemanticComponent (inLexique,  var_cas_filePath,  var_cas_ioParsedComponentStruct,  var_cas_semanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (736)) ;
          var_cas_ioSemanticDeclarationList = (var_cas_ioSemanticDeclarationList).operator_concat (var_cas_semanticsComponentRoot.reader_mSemanticDeclarations (inLexique COMMA_SOURCE_FILE_AT_LINE (741)).reader_mSemanticDeclarationList (inLexique COMMA_SOURCE_FILE_AT_LINE (741))) ;
          ::routine_recursivelyImportSemanticComponent (inLexique,  var_cas_ioParsedComponentStruct,  var_cas_ioSemanticDeclarationList,  var_cas_ioParsedFileSet,  var_cas_semanticsComponentRoot.reader_mImportedComponentFileNameList (inLexique COMMA_SOURCE_FILE_AT_LINE (746)),  var_cas_inDirectory COMMA_SOURCE_FILE_AT_LINE (742)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_recursivelyImportSemanticComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "compileSemanticsComponent"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileSemanticsComponent (C_Compiler & inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                const GGS_string  /* var_cas_inOutputDirectory */,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_compileSemanticsComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_semanticsComponentRoot  var_cas_semanticsComponentRoot ;
  ::routine_parseSemanticComponent (inLexique,  var_cas_inSourceFile,  var_cas_ioParsedComponentStruct,  var_cas_semanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (763)) ;
  const GGS_string var_cas_basename = var_cas_inSourceFile.ggs_string ().reader_lastPathComponent ().reader_stringByDeletingPathExtension () ;
  const GGS_lstring  var_cas_componentName = var_cas_semanticsComponentRoot.reader_mSemanticsComponentName (inLexique COMMA_SOURCE_FILE_AT_LINE (770)) ;
  const GGS_bool cond_28994 = (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (771))).operator_isNotEqual (var_cas_basename) ;
  if (cond_28994.isBuiltAndTrue ()) {
    var_cas_componentName.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, ((((GGS_string ("GALGAS checks "
      "the component name ('")).operator_concat (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (773)))).operator_concat (GGS_string ("') against the source file base name ('"))).operator_concat (var_cas_basename)).operator_concat (GGS_string ("'): they should be identical")) COMMA_SOURCE_FILE_AT_LINE (775)) ;
  }
  GGS_semanticDeclarationList  var_cas_semanticDeclarationList = var_cas_semanticsComponentRoot.reader_mSemanticDeclarations (inLexique COMMA_SOURCE_FILE_AT_LINE (778)).reader_mSemanticDeclarationList (inLexique COMMA_SOURCE_FILE_AT_LINE (778)) ;
  GGS_stringset  var_cas_parsedFileSet = GGS_stringset ::constructor_setWithString (var_cas_inSourceFile.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (779))) ;
  ::routine_recursivelyImportSemanticComponent (inLexique,  var_cas_ioParsedComponentStruct,  var_cas_semanticDeclarationList,  var_cas_parsedFileSet,  var_cas_semanticsComponentRoot.reader_mImportedComponentFileNameList (inLexique COMMA_SOURCE_FILE_AT_LINE (784)),  var_cas_inSourceFile.ggs_string ().reader_stringByDeletingLastPathComponent () COMMA_SOURCE_FILE_AT_LINE (780)) ;
  GGS_semanticContext var_cas_semanticContext ;
  ::routine_buildSemanticContext (inLexique,  var_cas_semanticDeclarationList,  var_cas_semanticsComponentRoot.reader_mEndOfSourceFile (inLexique COMMA_SOURCE_FILE_AT_LINE (789)),  var_cas_semanticContext COMMA_SOURCE_FILE_AT_LINE (789)) ;
  {
    GGS_semanticDeclarationList::cEnumerator enumerator_29717 (var_cas_semanticDeclarationList, true) ;
    const GGS_semanticDeclarationList::cElement * operand_29717 = NULL ;
    while (((operand_29717 = enumerator_29717.nextObject ()))) {
      macroValidPointer (operand_29717) ;
      const GGS_semanticDeclaration  temp_29763 = operand_29717->mSemanticDeclaration ;
      if (temp_29763.isBuilt ()) {
        typeCategoryMethod__semanticDeclaration__semanticAnalysis method = findCategoryMethod__semanticDeclaration__semanticAnalysis (temp_29763.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, temp_29763 (HERE), var_cas_semanticContext COMMA_SOURCE_FILE_AT_LINE (792)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_compileSemanticsComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticsCompilation (void) {
 enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__mapDeclaration__enterType, gClassInfoFor__mapDeclaration.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__mapindexDeclaration__enterType, gClassInfoFor__mapindexDeclaration.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__enumDeclaration__enterType, gClassInfoFor__enumDeclaration.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__filewrapperDeclaration__enterType, gClassInfoFor__filewrapperDeclaration.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__sortedListDeclaration__enterType, gClassInfoFor__sortedListDeclaration.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__structDeclaration__enterType, gClassInfoFor__structDeclaration.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__listDeclaration__enterType, gClassInfoFor__listDeclaration.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__classDeclaration__enterType, gClassInfoFor__classDeclaration.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__externRoutineDeclaration__enterType, gClassInfoFor__externRoutineDeclaration.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__externFunctionDeclaration__enterType, gClassInfoFor__externFunctionDeclaration.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__onceFunctionDeclaration__enterType, gClassInfoFor__onceFunctionDeclaration.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__listmapDeclaration__enterType, gClassInfoFor__listmapDeclaration.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__localVariableDeclaration__semanticAnalysis, gClassInfoFor__localVariableDeclaration.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__localVariableDeclarationWithInitialization__semanticAnalysis, gClassInfoFor__localVariableDeclarationWithInitialization.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__localVariableDeclarationWithAssignment__semanticAnalysis, gClassInfoFor__localVariableDeclarationWithAssignment.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__localConstantDeclarationWithSourceExpression__semanticAnalysis, gClassInfoFor__localConstantDeclarationWithSourceExpression.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__localConstantDeclarationWithConstructorCall__semanticAnalysis, gClassInfoFor__localConstantDeclarationWithConstructorCall.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__assignmentInstruction__semanticAnalysis, gClassInfoFor__assignmentInstruction.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__appendInstruction__semanticAnalysis, gClassInfoFor__appendInstruction.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__sendInstruction__semanticAnalysis, gClassInfoFor__sendInstruction.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__foreachInstruction__semanticAnalysis, gClassInfoFor__foreachInstruction.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__ifInstruction__semanticAnalysis, gClassInfoFor__ifInstruction.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__methodCallInstruction__semanticAnalysis, gClassInfoFor__methodCallInstruction.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__modifierCallInstruction__semanticAnalysis, gClassInfoFor__modifierCallInstruction.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__errorInstruction__semanticAnalysis, gClassInfoFor__errorInstruction.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__warningInstruction__semanticAnalysis, gClassInfoFor__warningInstruction.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__routineCallInstruction__semanticAnalysis, gClassInfoFor__routineCallInstruction.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__matchInstruction__semanticAnalysis, gClassInfoFor__matchInstruction.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__castInstruction__semanticAnalysis, gClassInfoFor__castInstruction.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__addInstruction__semanticAnalysis, gClassInfoFor__addInstruction.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__removeInstruction__semanticAnalysis, gClassInfoFor__removeInstruction.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__incrementInstruction__semanticAnalysis, gClassInfoFor__incrementInstruction.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__decrementInstruction__semanticAnalysis, gClassInfoFor__decrementInstruction.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__loopInstruction__semanticAnalysis, gClassInfoFor__loopInstruction.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__messageInstruction__semanticAnalysis, gClassInfoFor__messageInstruction.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__logInstruction__semanticAnalysis, gClassInfoFor__logInstruction.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__grammarInstruction__semanticAnalysis, gClassInfoFor__grammarInstruction.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__withInstruction__semanticAnalysis, gClassInfoFor__withInstruction.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__switchInstruction__semanticAnalysis, gClassInfoFor__switchInstruction.slotID ()) ;
 enterCategoryMethod__semanticInstruction__semanticAnalysis ((typeCategoryMethod__semanticInstruction__semanticAnalysis) category_method__typeMethodInstruction__semanticAnalysis, gClassInfoFor__typeMethodInstruction.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__mapDeclaration__semanticAnalysis, gClassInfoFor__mapDeclaration.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__mapindexDeclaration__semanticAnalysis, gClassInfoFor__mapindexDeclaration.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__enumDeclaration__semanticAnalysis, gClassInfoFor__enumDeclaration.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__filewrapperDeclaration__semanticAnalysis, gClassInfoFor__filewrapperDeclaration.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__sortedListDeclaration__semanticAnalysis, gClassInfoFor__sortedListDeclaration.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__structDeclaration__semanticAnalysis, gClassInfoFor__structDeclaration.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__listDeclaration__semanticAnalysis, gClassInfoFor__listDeclaration.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__classDeclaration__semanticAnalysis, gClassInfoFor__classDeclaration.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__externRoutineDeclaration__semanticAnalysis, gClassInfoFor__externRoutineDeclaration.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__routineDeclaration__semanticAnalysis, gClassInfoFor__routineDeclaration.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__externFunctionDeclaration__semanticAnalysis, gClassInfoFor__externFunctionDeclaration.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__functionDeclaration__semanticAnalysis, gClassInfoFor__functionDeclaration.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__onceFunctionDeclaration__semanticAnalysis, gClassInfoFor__onceFunctionDeclaration.slotID ()) ;
 enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__listmapDeclaration__semanticAnalysis, gClassInfoFor__listmapDeclaration.slotID ()) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogueAction prologueEpilogueObjectFor_semanticsCompilation (prologueRoutineFor_semanticsCompilation,
                                   NULL) ;

//---------------------------------------------------------------------------*

