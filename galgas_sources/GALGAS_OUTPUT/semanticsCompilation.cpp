//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'semanticsCompilation.cpp'                       *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     february 7th, 2010, at 15h54'4"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticsCompilation.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticsCompilation.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//             Include directives generated by grammar includes              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "semanticsSLRgrammar.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//    Virtual Table for category method '@semanticDeclaration.enterType'     *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticDeclaration__enterType> gDispatchTableForMethod__semanticDeclaration__enterType ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticDeclaration__enterType (typeCategoryMethod__semanticDeclaration__enterType inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticDeclaration__enterType.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticDeclaration__enterType
findCategoryMethod__semanticDeclaration__enterType (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticDeclaration__enterType result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticDeclaration__enterType.count ()) {
    result = gDispatchTableForMethod__semanticDeclaration__enterType (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticDeclaration__enterType (superClassPtr) ;
      gDispatchTableForMethod__semanticDeclaration__enterType.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//               Category method '@mapDeclaration.enterType'                 *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_mapDeclaration * operand_2398,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2398 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionList::cEnumerator enumerator_2532 (operand_2398->mAttributeList, true) ;
      const GGS_attributeInCollectionList::cElement * operand_2532 = NULL ;
      while (((operand_2532 = enumerator_2532.nextObject ()))) {
        macroValidPointer (operand_2532) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_2532->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (49)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_2532->mAttributeName) ;
      }
    }
    GGS_mapMethodMap  var_cas_insertMethodMap = GGS_mapMethodMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_mapMethodList::cEnumerator enumerator_2857 (operand_2398->mInsertMethodList, true) ;
      const GGS_mapMethodList::cElement * operand_2857 = NULL ;
      while (((operand_2857 = enumerator_2857.nextObject ()))) {
        macroValidPointer (operand_2857) ;
        const GGS_bool cond_3016 = var_cas_insertMethodMap.reader_hasKey (operand_2857->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (55))) ;
        if (cond_3016.isBuiltAndTrue ()) {
          operand_2857->mMethodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_2857->mMethodName)).operator_concat (GGS_string ("' insert method is already declared")) COMMA_SOURCE_FILE_AT_LINE (57)) ;
        }else if (cond_3016.isBuiltAndFalse ()) {
          var_cas_insertMethodMap.modifier_insertKey (inLexique, operand_2857->mMethodName, operand_2857->mErrorMessage COMMA_SOURCE_FILE_AT_LINE (58)) ;
        }
      }
    }
    GGS_mapMethodMap  var_cas_removeMethodMap = GGS_mapMethodMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_mapMethodList::cEnumerator enumerator_3211 (operand_2398->mRemoveMethodList, true) ;
      const GGS_mapMethodList::cElement * operand_3211 = NULL ;
      while (((operand_3211 = enumerator_3211.nextObject ()))) {
        macroValidPointer (operand_3211) ;
        const GGS_bool cond_3371 = var_cas_removeMethodMap.reader_hasKey (operand_3211->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (64))) ;
        if (cond_3371.isBuiltAndTrue ()) {
          operand_3211->mMethodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_3211->mMethodName)).operator_concat (GGS_string ("' remove method is already declared")) COMMA_SOURCE_FILE_AT_LINE (66)) ;
        }else if (cond_3371.isBuiltAndFalse ()) {
          const GGS_bool cond_3530 = var_cas_insertMethodMap.reader_hasKey (operand_3211->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (66))) ;
          if (cond_3530.isBuiltAndTrue ()) {
            operand_3211->mMethodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_3211->mMethodName)).operator_concat (GGS_string ("' method is already declared as insert method")) COMMA_SOURCE_FILE_AT_LINE (68)) ;
          }else if (cond_3530.isBuiltAndFalse ()) {
            var_cas_removeMethodMap.modifier_insertKey (inLexique, operand_3211->mMethodName, operand_3211->mErrorMessage COMMA_SOURCE_FILE_AT_LINE (69)) ;
          }
        }
      }
    }
    {
      GGS_attributeInCollectionList::cEnumerator enumerator_3742 (operand_2398->mAttributeList, true) ;
      const GGS_attributeInCollectionList::cElement * operand_3742 = NULL ;
      while (((operand_3742 = enumerator_3742.nextObject ()))) {
        macroValidPointer (operand_3742) ;
        const GGS_string var_cas_accessorName = ((GGS_string ("set")).operator_concat (operand_3742->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ())).operator_concat (GGS_string ("ForKey")) ;
        const GGS_bool cond_4057 = var_cas_removeMethodMap.reader_hasKey (var_cas_accessorName) ;
        if (cond_4057.isBuiltAndTrue ()) {
          operand_3742->mAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_accessorName)).operator_concat (GGS_string ("' remove method name is incompatible with accessor of '"))).operator_concat (operand_3742->mAttributeName)).operator_concat (GGS_string ("' attribute")) COMMA_SOURCE_FILE_AT_LINE (77)) ;
        }else if (cond_4057.isBuiltAndFalse ()) {
          const GGS_bool cond_4253 = var_cas_insertMethodMap.reader_hasKey (var_cas_accessorName) ;
          if (cond_4253.isBuiltAndTrue ()) {
            operand_3742->mAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_accessorName)).operator_concat (GGS_string ("' insert method name is incompatible with accessor of '"))).operator_concat (operand_3742->mAttributeName)).operator_concat (GGS_string ("' attribute")) COMMA_SOURCE_FILE_AT_LINE (79)) ;
          }
        }
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_mapType ::constructor_new (inLexique, operand_2398->mMapTypeName, var_cas_attributeList, var_cas_insertMethodMap, var_cas_removeMethodMap COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_2398->mMapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (88)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@mapindexDeclaration.enterType'              *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapindexDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_mapindexDeclaration * operand_4624,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4624 != NULL) {
    GGS_typeMapIndex  var_cas_mapTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_4624->mMapTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_mapTypeIndex COMMA_SOURCE_FILE_AT_LINE (98)) ;
    GGS_ACGalgasType  var_cas_t = GGS_mapindexType ::constructor_new (inLexique, operand_4624->mMapIndexTypeName, var_cas_mapTypeIndex, operand_4624->mSearchMethodName COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_4624->mMapIndexTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (105)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//               Category method '@enumDeclaration.enterType'                *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__enumDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_enumDeclaration * operand_5157,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5157 != NULL) {
    GGS_enumConstructorMap  var_cas_enumConstructorMap = GGS_enumConstructorMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_lstringlist::cEnumerator enumerator_5299 (operand_5157->mConstantList, true) ;
      const GGS_lstringlist::cElement * operand_5299 = NULL ;
      while (((operand_5299 = enumerator_5299.nextObject ()))) {
        macroValidPointer (operand_5299) ;
        var_cas_enumConstructorMap.modifier_insertKey (inLexique, operand_5299->mValue COMMA_SOURCE_FILE_AT_LINE (116)) ;
      }
    }
    GGS_stringset  var_cas_allConstantSet = GGS_stringset ::constructor_emptySet () ;
    {
      GGS_lstringlist::cEnumerator enumerator_5466 (operand_5157->mConstantList, true) ;
      const GGS_lstringlist::cElement * operand_5466 = NULL ;
      while (((operand_5466 = enumerator_5466.nextObject ()))) {
        macroValidPointer (operand_5466) ;
        var_cas_allConstantSet.addAssign_operation (operand_5466->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (121))) ;
      }
    }
    GGS_enumMessageMap  var_cas_enumMessageMap = GGS_enumMessageMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_enumMessageList::cEnumerator enumerator_5620 (operand_5157->mEnumMessageList, true) ;
      const GGS_enumMessageList::cElement * operand_5620 = NULL ;
      while (((operand_5620 = enumerator_5620.nextObject ()))) {
        macroValidPointer (operand_5620) ;
        var_cas_enumMessageMap.modifier_insertKey (inLexique, operand_5620->mEnumMessageName COMMA_SOURCE_FILE_AT_LINE (126)) ;
        GGS_stringset  var_cas_messageConstantSet = GGS_stringset ::constructor_emptySet () ;
        {
          GGS_enumMessageAssociationList::cEnumerator enumerator_5823 (operand_5620->mMessageAssociationList, true) ;
          const GGS_enumMessageAssociationList::cElement * operand_5823 = NULL ;
          while (((operand_5823 = enumerator_5823.nextObject ()))) {
            macroValidPointer (operand_5823) ;
            const GGS_bool cond_6010 = var_cas_messageConstantSet.reader_hasKey (operand_5823->mConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (130))) ;
            if (cond_6010.isBuiltAndTrue ()) {
              operand_5823->mConstantName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_5823->mConstantName)).operator_concat (GGS_string ("' is already named for this message definition")) COMMA_SOURCE_FILE_AT_LINE (132)) ;
            }else if (cond_6010.isBuiltAndFalse ()) {
              const GGS_bool cond_6141 = (var_cas_allConstantSet.reader_hasKey (operand_5823->mConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (132)))).operator_not () ;
              if (cond_6141.isBuiltAndTrue ()) {
                operand_5823->mConstantName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("this constant is not declared") COMMA_SOURCE_FILE_AT_LINE (134)) ;
              }
            }
            var_cas_messageConstantSet.addAssign_operation (operand_5823->mConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (135))) ;
          }
        }
        {
          GGS_stringset::cEnumerator enumerator_6308 (var_cas_messageConstantSet, true) ;
          while (enumerator_6308.hasCurrentObject ()) {
            const GGS_bool cond_6469 = (var_cas_allConstantSet.reader_hasKey (enumerator_6308._key (HERE))).operator_not () ;
            if (cond_6469.isBuiltAndTrue ()) {
              operand_5620->mEnumMessageName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this message definition does not name the '")).operator_concat (enumerator_6308._key (HERE))).operator_concat (GGS_string ("' constant")) COMMA_SOURCE_FILE_AT_LINE (141)) ;
            }
            enumerator_6308.next () ;
          }
        }
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_enumType ::constructor_new (inLexique, operand_5157->mEnumTypeName, var_cas_enumConstructorMap, var_cas_enumMessageMap COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_5157->mEnumTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (150)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@filewrapperDeclaration.enterType'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__filewrapperDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_filewrapperDeclaration * operand_6847,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_6847 != NULL) {
    GGS_filewrapperTemplateMap  var_cas_filewrapperTemplateMap = GGS_filewrapperTemplateMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_filewrapperTemplateList::cEnumerator enumerator_6985 (operand_6847->mFilewrapperTemplateList, true) ;
      const GGS_filewrapperTemplateList::cElement * operand_6985 = NULL ;
      while (((operand_6985 = enumerator_6985.nextObject ()))) {
        macroValidPointer (operand_6985) ;
        GGS_signature  var_cas_templateSignature = GGS_signature ::constructor_emptyList () ;
        {
          GGS_formalInputParameterList::cEnumerator enumerator_7089 (operand_6985->mFilewrapperTemplateFormalInputParameters, true) ;
          const GGS_formalInputParameterList::cElement * operand_7089 = NULL ;
          while (((operand_7089 = enumerator_7089.nextObject ()))) {
            macroValidPointer (operand_7089) ;
            GGS_typeMapIndex  var_cas_parameterTypeIndex ;
            GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_7089->mFormalParameterTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (163)) ;
            var_cas_templateSignature.addAssign_operation (var_cas_parameterTypeIndex, operand_7089->mFormalParameterName, GGS_formalArgumentPassingMode::constructor_argumentIn (inLexique COMMA_HERE)) ;
          }
        }
        var_cas_filewrapperTemplateMap.modifier_insertKey (inLexique, operand_6985->mFilewrapperTemplateName, var_cas_templateSignature, operand_6985->mFilewrapperTemplatePath COMMA_SOURCE_FILE_AT_LINE (170)) ;
      }
    }
    var_cas_ioSemanticContext.mFilewrapperMap.modifier_insertKey (inLexique, operand_6847->mFilewrapperName, operand_6847->mFilewrapperPath, operand_6847->mFilewrapperExtensionList, var_cas_filewrapperTemplateMap COMMA_SOURCE_FILE_AT_LINE (176)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@sortedListDeclaration.enterType'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sortedListDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_sortedListDeclaration * operand_7862,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7862 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionList::cEnumerator enumerator_7996 (operand_7862->mAttributeList, true) ;
      const GGS_attributeInCollectionList::cElement * operand_7996 = NULL ;
      while (((operand_7996 = enumerator_7996.nextObject ()))) {
        macroValidPointer (operand_7996) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_7996->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (193)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_7996->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_listGalgasType ::constructor_new (inLexique, operand_7862->mSortedListTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_7862->mSortedListTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (201)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Category method '@structDeclaration.enterType'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__structDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_structDeclaration * operand_8548,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8548 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionList::cEnumerator enumerator_8682 (operand_8548->mAttributeList, true) ;
      const GGS_attributeInCollectionList::cElement * operand_8682 = NULL ;
      while (((operand_8682 = enumerator_8682.nextObject ()))) {
        macroValidPointer (operand_8682) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_8682->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (213)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_8682->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_structGalgasType ::constructor_new (inLexique, operand_8548->mStructTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_8548->mStructTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (221)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//               Category method '@listDeclaration.enterType'                *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_listDeclaration * operand_9226,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9226 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionList::cEnumerator enumerator_9360 (operand_9226->mAttributeList, true) ;
      const GGS_attributeInCollectionList::cElement * operand_9360 = NULL ;
      while (((operand_9360 = enumerator_9360.nextObject ()))) {
        macroValidPointer (operand_9360) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_9360->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (233)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_9360->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_listGalgasType ::constructor_new (inLexique, operand_9226->mListTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_9226->mListTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (241)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Category method '@classDeclaration.enterType'                *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__classDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_classDeclaration * operand_9899,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9899 != NULL) {
    GGS_typeMapIndex  var_cas_superClassIndex ;
    const GGS_bool cond_10092 = (operand_9899->mSuperClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (251))).operator_isEqual (GGS_string ("")) ;
    if (cond_10092.isBuiltAndTrue ()) {
      var_cas_superClassIndex = GGS_typeMapIndex ::constructor_null (inLexique COMMA_HERE) ;
    }else if (cond_10092.isBuiltAndFalse ()) {
      GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_9899->mSuperClassName, var_cas_ioSemanticContext.mTypeMap, var_cas_superClassIndex COMMA_SOURCE_FILE_AT_LINE (254)) ;
      GGS_typeMapIndex  var_cas_classIndex ;
      GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_9899->mClassTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_classIndex COMMA_SOURCE_FILE_AT_LINE (257)) ;
      var_cas_ioSemanticContext.mDescendantClassListMap.addAssign_operation (operand_9899->mSuperClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (258)), var_cas_classIndex) ;
    }
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionList::cEnumerator enumerator_10555 (operand_9899->mAttributeList, true) ;
      const GGS_attributeInCollectionList::cElement * operand_10555 = NULL ;
      while (((operand_10555 = enumerator_10555.nextObject ()))) {
        macroValidPointer (operand_10555) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_10555->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (264)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_10555->mAttributeName) ;
      }
    }
    GGS_classMethodList  var_cas_methodList = GGS_classMethodList ::constructor_emptyList () ;
    GGS_classGalgasType  var_cas_t = GGS_classGalgasType ::constructor_new (inLexique, operand_9899->mIsAbstract, operand_9899->mClassTypeName, var_cas_superClassIndex, var_cas_attributeList, var_cas_methodList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_9899->mClassTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (277)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@externRoutineDeclaration.enterType'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externRoutineDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_externRoutineDeclaration * operand_11226,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11226 != NULL) {
    GGS_signature  var_cas_routineSignature = GGS_signature ::constructor_emptyList () ;
    {
      GGS_formalParameterList::cEnumerator enumerator_11398 (operand_11226->mFormalParameterList, true) ;
      const GGS_formalParameterList::cElement * operand_11398 = NULL ;
      while (((operand_11398 = enumerator_11398.nextObject ()))) {
        macroValidPointer (operand_11398) ;
        GGS_typeMapIndex  var_cas_parameterTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_11398->mFormalParameterTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (289)) ;
        var_cas_routineSignature.addAssign_operation (var_cas_parameterTypeIndex, operand_11398->mFormalParameterName, operand_11398->mFormalParameterPassingMode) ;
      }
    }
    var_cas_ioSemanticContext.mRoutineMap.modifier_insertKey (inLexique, operand_11226->mRoutineName, var_cas_routineSignature COMMA_SOURCE_FILE_AT_LINE (293)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@externFunctionDeclaration.enterType'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externFunctionDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_externFunctionDeclaration * operand_11927,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11927 != NULL) {
    GGS_signature  var_cas_functionSignature = GGS_signature ::constructor_emptyList () ;
    {
      GGS_formalParameterList::cEnumerator enumerator_12101 (operand_11927->mFormalParameterList, true) ;
      const GGS_formalParameterList::cElement * operand_12101 = NULL ;
      while (((operand_12101 = enumerator_12101.nextObject ()))) {
        macroValidPointer (operand_12101) ;
        GGS_typeMapIndex  var_cas_parameterTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_12101->mFormalParameterTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (305)) ;
        var_cas_functionSignature.addAssign_operation (var_cas_parameterTypeIndex, operand_12101->mFormalParameterName, operand_12101->mFormalParameterPassingMode) ;
      }
    }
    GGS_typeMapIndex  var_cas_resultTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_11927->mResultTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (310)) ;
    var_cas_ioSemanticContext.mFunctionMap.modifier_insertKey (inLexique, operand_11927->mFunctionName, var_cas_functionSignature, var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (312)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@onceFunctionDeclaration.enterType'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__onceFunctionDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_onceFunctionDeclaration * operand_12801,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12801 != NULL) {
    GGS_typeMapIndex  var_cas_resultTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_12801->mResultTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (322)) ;
    var_cas_ioSemanticContext.mFunctionMap.modifier_insertKey (inLexique, operand_12801->mFunctionName, GGS_signature ::constructor_emptyList (), var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (324)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@listmapDeclaration.enterType'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listmapDeclaration__enterType (C_Compiler & inLexique,
                                const cPtr_listmapDeclaration * operand_13272,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13272 != NULL) {
    GGS_typeMapIndex  var_cas_associatedListTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_13272->mAssociatedListTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_associatedListTypeIndex COMMA_SOURCE_FILE_AT_LINE (333)) ;
    GGS_ACGalgasType  var_cas_t = GGS_listmapGalgasType ::constructor_new (inLexique, operand_13272->mListmapTypeName, var_cas_associatedListTypeIndex COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_13272->mListmapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (339)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "buildSemanticContext"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildSemanticContext (C_Compiler & inLexique,
                                const GGS_semanticDeclarationList   var_cas_inSemanticDeclarationList,
                                const GGS_location   var_cas_inEndOfSourceFile,
                                GGS_semanticContext & var_cas_outSemanticContext COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_buildSemanticContext at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_typeMap  var_cas_typeMap = function_constructBuiltinTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (350)) ;
  var_cas_outSemanticContext = GGS_semanticContext::constructor_new (var_cas_typeMap, GGS_routineMap ::constructor_emptyMap (inLexique COMMA_HERE), GGS_functionMap ::constructor_emptyMap (inLexique COMMA_HERE), GGS_descendantClassListMap::constructor_emptyMap (), GGS_filewrapperMap ::constructor_emptyMap (inLexique COMMA_HERE)) ;
  {
    GGS_semanticDeclarationList::cEnumerator enumerator_14289 (var_cas_inSemanticDeclarationList, true) ;
    const GGS_semanticDeclarationList::cElement * operand_14289 = NULL ;
    while (((operand_14289 = enumerator_14289.nextObject ()))) {
      macroValidPointer (operand_14289) ;
      const GGS_semanticDeclaration  temp_14328 = operand_14289->mSemanticDeclaration ;
      if (temp_14328.isBuilt ()) {
        typeCategoryMethod__semanticDeclaration__enterType method = findCategoryMethod__semanticDeclaration__enterType (temp_14328.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, temp_14328 (HERE), var_cas_outSemanticContext COMMA_SOURCE_FILE_AT_LINE (361)) ;
        }
      }
    }
  }
  const GGS_bool cond_15099 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_15099.isBuiltAndTrue ()) {
    GGS_stringlist  var_cas_undefinedClasses = var_cas_outSemanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (365)).reader_unsolvedIndexKeyStringList (inLexique COMMA_SOURCE_FILE_AT_LINE (365)) ;
    const GGS_bool cond_14796 = (var_cas_undefinedClasses.reader_length ()).operator_isEqual (GGS_uint (1U)) ;
    if (cond_14796.isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage = GGS_string ("there is 1 undefined type:") ;
      {
        GGS_stringlist::cEnumerator enumerator_14672 (var_cas_undefinedClasses, true) ;
        const GGS_stringlist::cElement * operand_14672 = NULL ;
        while (((operand_14672 = enumerator_14672.nextObject ()))) {
          macroValidPointer (operand_14672) ;
          var_cas_errorMessage.appendCString ("\n"
            "-  @") ;
          var_cas_errorMessage.dotAssign_operation (operand_14672->mValue) ;
        }
      }
      var_cas_inEndOfSourceFile.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (372)) ;
    }else if (cond_14796.isBuiltAndFalse ()) {
      const GGS_bool cond_15088 = (var_cas_undefinedClasses.reader_length ()).operator_strictSup (GGS_uint (1U)) ;
      if (cond_15088.isBuiltAndTrue ()) {
        GGS_string var_cas_errorMessage = ((GGS_string ("there are ")).operator_concat (var_cas_undefinedClasses.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (373)))).operator_concat (GGS_string (" undefined types:")) ;
        {
          GGS_stringlist::cEnumerator enumerator_14966 (var_cas_undefinedClasses, true) ;
          const GGS_stringlist::cElement * operand_14966 = NULL ;
          while (((operand_14966 = enumerator_14966.nextObject ()))) {
            macroValidPointer (operand_14966) ;
            var_cas_errorMessage.appendCString ("\n"
              "-  @") ;
            var_cas_errorMessage.dotAssign_operation (operand_14966->mValue) ;
          }
        }
        var_cas_inEndOfSourceFile.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (378)) ;
      }
    }
  }
  const GGS_bool cond_15473 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_15473.isBuiltAndTrue ()) {
    {
      GGS_typeMap::cEnumerator enumerator_15338 (var_cas_outSemanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (385)), true) ;
      const GGS_typeMap::cElement * operand_15338 = NULL ;
      while (((operand_15338 = enumerator_15338.nextObject ()))) {
        macroValidPointer (operand_15338) ;
        const GGS_ACGalgasType  temp_15407 = operand_15338->mInfo.mType ;
        if (temp_15407.isBuilt ()) {
          temp_15407 (HERE)->method_checkTypeCrossReferences (inLexique, var_cas_outSemanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (386)).reader_count () COMMA_SOURCE_FILE_AT_LINE (386)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_buildSemanticContext\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@semanticInstruction.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis> gDispatchTableForMethod__semanticInstruction__instructionSemanticAnalysis ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis (typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticInstruction__instructionSemanticAnalysis.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis
findCategoryMethod__semanticInstruction__instructionSemanticAnalysis (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticInstruction__instructionSemanticAnalysis.count ()) {
    result = gDispatchTableForMethod__semanticInstruction__instructionSemanticAnalysis (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticInstruction__instructionSemanticAnalysis (superClassPtr) ;
      gDispatchTableForMethod__semanticInstruction__instructionSemanticAnalysis.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@localVariableDeclaration.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclaration__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localVariableDeclaration * operand_16147,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16147 != NULL) {
    inLexique.printMessage (GGS_string ("@localVariableDeclaration instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (406)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableDeclarationWithInitialization.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclarationWithInitialization__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localVariableDeclarationWithInitialization * operand_16446,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16446 != NULL) {
    inLexique.printMessage (GGS_string ("@localVariableDeclarationWithInitialization instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (414)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableDeclarationWithAssignment.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclarationWithAssignment__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localVariableDeclarationWithAssignment * operand_16759,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16759 != NULL) {
    inLexique.printMessage (GGS_string ("@localVariableDeclarationWithAssignment instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (422)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localConstantDeclarationWithSourceExpression.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localConstantDeclarationWithSourceExpression__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localConstantDeclarationWithSourceExpression * operand_17075,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17075 != NULL) {
    inLexique.printMessage (GGS_string ("@localConstantDeclarationWithSourceExpression instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (431)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localConstantDeclarationWithConstructorCall.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localConstantDeclarationWithConstructorCall__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localConstantDeclarationWithConstructorCall * operand_17395,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17395 != NULL) {
    inLexique.printMessage (GGS_string ("@localConstantDeclarationWithConstructorCall instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (439)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@assignmentInstruction.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__assignmentInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_assignmentInstruction * operand_17692,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17692 != NULL) {
    inLexique.printMessage (GGS_string ("@assignmentInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (447)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@appendInstruction.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__appendInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_appendInstruction * operand_17963,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17963 != NULL) {
    inLexique.printMessage (GGS_string ("@appendInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (455)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@sendInstruction.instructionSemanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sendInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_sendInstruction * operand_18228,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18228 != NULL) {
    inLexique.printMessage (GGS_string ("@sendInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (463)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@foreachInstruction.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__foreachInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_foreachInstruction * operand_18494,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18494 != NULL) {
    inLexique.printMessage (GGS_string ("@foreachInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (471)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@ifInstruction.instructionSemanticAnalysis'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__ifInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_ifInstruction * operand_18758,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18758 != NULL) {
    inLexique.printMessage (GGS_string ("@ifInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (479)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@methodCallInstruction.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__methodCallInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_methodCallInstruction * operand_19025,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19025 != NULL) {
    inLexique.printMessage (GGS_string ("@methodCallInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (487)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@modifierCallInstruction.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__modifierCallInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_modifierCallInstruction * operand_19302,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19302 != NULL) {
    inLexique.printMessage (GGS_string ("@modifierCallInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (495)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@errorInstruction.instructionSemanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__errorInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_errorInstruction * operand_19574,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19574 != NULL) {
    inLexique.printMessage (GGS_string ("@errorInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (503)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@warningInstruction.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__warningInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_warningInstruction * operand_19841,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19841 != NULL) {
    inLexique.printMessage (GGS_string ("@warningInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (511)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@routineCallInstruction.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__routineCallInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_routineCallInstruction * operand_20114,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20114 != NULL) {
    inLexique.printMessage (GGS_string ("@routineCallInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (519)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@matchInstruction.instructionSemanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__matchInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_matchInstruction * operand_20385,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20385 != NULL) {
    inLexique.printMessage (GGS_string ("@matchInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (527)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@castInstruction.instructionSemanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__castInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_castInstruction * operand_20649,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20649 != NULL) {
    inLexique.printMessage (GGS_string ("@castInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (535)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@addInstruction.instructionSemanticAnalysis'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__addInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_addInstruction * operand_20911,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20911 != NULL) {
    inLexique.printMessage (GGS_string ("@addInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (543)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@removeInstruction.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__removeInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_removeInstruction * operand_21175,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21175 != NULL) {
    inLexique.printMessage (GGS_string ("@removeInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (551)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@incrementInstruction.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__incrementInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_incrementInstruction * operand_21445,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21445 != NULL) {
    inLexique.printMessage (GGS_string ("@incrementInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (559)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@decrementInstruction.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__decrementInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_decrementInstruction * operand_21718,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21718 != NULL) {
    inLexique.printMessage (GGS_string ("@decrementInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (567)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@loopInstruction.instructionSemanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__loopInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_loopInstruction * operand_21986,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21986 != NULL) {
    inLexique.printMessage (GGS_string ("@loopInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (575)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@messageInstruction.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__messageInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_messageInstruction * operand_22252,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22252 != NULL) {
    inLexique.printMessage (GGS_string ("@messageInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (583)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@logInstruction.instructionSemanticAnalysis'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__logInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_logInstruction * operand_22517,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22517 != NULL) {
    inLexique.printMessage (GGS_string ("@logInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (591)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@grammarInstruction.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__grammarInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_grammarInstruction * operand_22782,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22782 != NULL) {
    inLexique.printMessage (GGS_string ("@grammarInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (599)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@withInstruction.instructionSemanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__withInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_withInstruction * operand_23048,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23048 != NULL) {
    inLexique.printMessage (GGS_string ("@withInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (607)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@switchInstruction.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__switchInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_switchInstruction * operand_23313,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23313 != NULL) {
    inLexique.printMessage (GGS_string ("@switchInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (615)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@typeMethodInstruction.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__typeMethodInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_typeMethodInstruction * operand_23584,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23584 != NULL) {
    inLexique.printMessage (GGS_string ("@typeMethodInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (623)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@semanticDeclaration.semanticAnalysis'  *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticDeclaration__semanticAnalysis> gDispatchTableForMethod__semanticDeclaration__semanticAnalysis ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticDeclaration__semanticAnalysis (typeCategoryMethod__semanticDeclaration__semanticAnalysis inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticDeclaration__semanticAnalysis.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticDeclaration__semanticAnalysis
findCategoryMethod__semanticDeclaration__semanticAnalysis (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticDeclaration__semanticAnalysis result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticDeclaration__semanticAnalysis.count ()) {
    result = gDispatchTableForMethod__semanticDeclaration__semanticAnalysis (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticDeclaration__semanticAnalysis (superClassPtr) ;
      gDispatchTableForMethod__semanticDeclaration__semanticAnalysis.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@mapDeclaration.semanticAnalysis'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_mapDeclaration * operand_24335,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_24335 != NULL) {
    inLexique.printMessage (GGS_string ("@mapDeclaration semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (641)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@mapindexDeclaration.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapindexDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_mapindexDeclaration * operand_24579,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_24579 != NULL) {
    inLexique.printMessage (GGS_string ("@mapindexDeclaration semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (649)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@enumDeclaration.semanticAnalysis'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__enumDeclaration__semanticAnalysis (C_Compiler &,
                                const cPtr_enumDeclaration * operand_24824,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_24824 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@filewrapperDeclaration.semanticAnalysis'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__filewrapperDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_filewrapperDeclaration * operand_25041,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25041 != NULL) {
    inLexique.printMessage (GGS_string ("@filewrapperDeclaration.semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (665)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@sortedListDeclaration.semanticAnalysis'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sortedListDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_sortedListDeclaration * operand_25295,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25295 != NULL) {
    inLexique.printMessage (GGS_string ("@sortedListDeclaration semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (673)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@structDeclaration.semanticAnalysis'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__structDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_structDeclaration * operand_25544,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25544 != NULL) {
    inLexique.printMessage (GGS_string ("@structDeclaration semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (681)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@listDeclaration.semanticAnalysis'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_listDeclaration * operand_25787,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25787 != NULL) {
    inLexique.printMessage (GGS_string ("@listDeclaration semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (689)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@classDeclaration.semanticAnalysis'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__classDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_classDeclaration * operand_26029,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26029 != NULL) {
    inLexique.printMessage (GGS_string ("@classDeclaration semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (697)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@externRoutineDeclaration.semanticAnalysis'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externRoutineDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_externRoutineDeclaration * operand_26280,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26280 != NULL) {
    inLexique.printMessage (GGS_string ("@externRoutineDeclaration semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (705)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@routineDeclaration.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__routineDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_routineDeclaration * operand_26533,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26533 != NULL) {
    inLexique.printMessage (GGS_string ("@routineDeclaration semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (713)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@externFunctionDeclaration.semanticAnalysis'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externFunctionDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_externFunctionDeclaration * operand_26911,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26911 != NULL) {
    inLexique.printMessage (GGS_string ("@externFunctionDeclaration semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (724)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@functionDeclaration.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__functionDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_functionDeclaration * operand_27166,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_27166 != NULL) {
    inLexique.printMessage (GGS_string ("@functionDeclaration semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (732)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@onceFunctionDeclaration.semanticAnalysis'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__onceFunctionDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_onceFunctionDeclaration * operand_27544,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_27544 != NULL) {
    inLexique.printMessage (GGS_string ("@onceFunctionDeclaration semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (743)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@listmapDeclaration.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listmapDeclaration__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_listmapDeclaration * operand_27796,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_27796 != NULL) {
    inLexique.printMessage (GGS_string ("@listmapDeclaration semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (751)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "parseSemanticComponent"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_parseSemanticComponent (C_Compiler & inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct,
                                GGS_semanticsComponentRoot  & var_cas_outSemanticsComponentRoot COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_parseSemanticComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_basename = var_cas_inSourceFile.ggs_string ().reader_lastPathComponent ().reader_stringByDeletingPathExtension () ;
  GGS_lstring  var_cas_basenameKey = GGS_lstring ::constructor_new (inLexique, var_cas_basename, GGS_location (inLexique) COMMA_HERE) ;
  const GGS_bool cond_28806 = var_cas_ioParsedComponentStruct.reader_mParsedSemanticsComponentMap (inLexique COMMA_SOURCE_FILE_AT_LINE (767)).reader_hasKey (var_cas_basename) ;
  if (cond_28806.isBuiltAndTrue ()) {
    const GGS_parsedSemanticsComponentMap  temp_28756 = var_cas_ioParsedComponentStruct.reader_mParsedSemanticsComponentMap (inLexique COMMA_SOURCE_FILE_AT_LINE (768)) ;
    if (temp_28756.isBuilt ()) {
      temp_28756 (HERE)->method_searchKey (inLexique, var_cas_basenameKey, var_cas_outSemanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (768)) ;
    }
  }else if (cond_28806.isBuiltAndFalse ()) {
    const GGS_string _depExtension = GGS_string ("") ;
    const GGS_string _depPath = GGS_string ("") ;
    if (_depExtension.isBuilt () && _depPath.isBuilt ()) {
      semanticsSLRgrammar::_performSourceFileParsing_ (inLexique,
                                    _depExtension.string (),
                                    _depPath.string (),
                                    NULL,
                                    var_cas_inSourceFile,
                                    var_cas_outSemanticsComponentRoot
                                    COMMA_SOURCE_FILE_AT_LINE (770)) ;
    }
    var_cas_ioParsedComponentStruct.mParsedSemanticsComponentMap.modifier_insertKey (inLexique, var_cas_basenameKey, var_cas_outSemanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (771)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_parseSemanticComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "recursivelyImportSemanticComponent"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_recursivelyImportSemanticComponent (C_Compiler & inLexique,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct,
                                GGS_semanticDeclarationList  & var_cas_ioSemanticDeclarationList,
                                GGS_stringset  & var_cas_ioParsedFileSet,
                                const GGS_lstringlist   var_cas_inListOfFilesToParse,
                                const GGS_string  var_cas_inDirectory COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_recursivelyImportSemanticComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  {
    GGS_lstringlist::cEnumerator enumerator_29376 (var_cas_inListOfFilesToParse, true) ;
    const GGS_lstringlist::cElement * operand_29376 = NULL ;
    while (((operand_29376 = enumerator_29376.nextObject ()))) {
      macroValidPointer (operand_29376) ;
      const GGS_bool cond_30305 = (var_cas_ioParsedFileSet.reader_hasKey (operand_29376->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (785)))).operator_not () ;
      if (cond_30305.isBuiltAndTrue ()) {
        var_cas_ioParsedFileSet.addAssign_operation (operand_29376->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (786))) ;
        GGS_string var_cas_extension = operand_29376->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (787)).reader_pathExtension () ;
        const GGS_bool cond_30292 = (var_cas_extension).operator_isEqual (GGS_string ("gSemantics")) ;
        if (cond_30292.isBuiltAndTrue ()) {
          GGS_lstring  var_cas_filePath = GGS_lstring ::constructor_new (inLexique, operand_29376->mValue.ggs_string ().reader_absolutePathFromPath (var_cas_inDirectory), operand_29376->mValue.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (791)) COMMA_HERE) ;
          GGS_semanticsComponentRoot  var_cas_semanticsComponentRoot ;
          ::routine_parseSemanticComponent (inLexique,  var_cas_filePath,  var_cas_ioParsedComponentStruct,  var_cas_semanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (794)) ;
          var_cas_ioSemanticDeclarationList = (var_cas_ioSemanticDeclarationList).operator_concat (var_cas_semanticsComponentRoot.reader_mSemanticDeclarations (inLexique COMMA_SOURCE_FILE_AT_LINE (799)).reader_mSemanticDeclarationList (inLexique COMMA_SOURCE_FILE_AT_LINE (799))) ;
          ::routine_recursivelyImportSemanticComponent (inLexique,  var_cas_ioParsedComponentStruct,  var_cas_ioSemanticDeclarationList,  var_cas_ioParsedFileSet,  var_cas_semanticsComponentRoot.reader_mImportedComponentFileNameList (inLexique COMMA_SOURCE_FILE_AT_LINE (804)),  var_cas_inDirectory COMMA_SOURCE_FILE_AT_LINE (800)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_recursivelyImportSemanticComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "compileSemanticsComponent"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileSemanticsComponent (C_Compiler & inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                const GGS_string  var_cas_inOutputDirectory,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_compileSemanticsComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_semanticsComponentRoot  var_cas_semanticsComponentRoot ;
  ::routine_parseSemanticComponent (inLexique,  var_cas_inSourceFile,  var_cas_ioParsedComponentStruct,  var_cas_semanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (821)) ;
  const GGS_string var_cas_basename = var_cas_inSourceFile.ggs_string ().reader_lastPathComponent ().reader_stringByDeletingPathExtension () ;
  const GGS_lstring  var_cas_componentName = var_cas_semanticsComponentRoot.reader_mSemanticsComponentName (inLexique COMMA_SOURCE_FILE_AT_LINE (828)) ;
  const GGS_bool cond_31196 = (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (829))).operator_isNotEqual (var_cas_basename) ;
  if (cond_31196.isBuiltAndTrue ()) {
    var_cas_componentName.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, ((((GGS_string ("GALGAS checks "
      "the component name ('")).operator_concat (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (831)))).operator_concat (GGS_string ("') against the source file base name ('"))).operator_concat (var_cas_basename)).operator_concat (GGS_string ("'): they should be identical")) COMMA_SOURCE_FILE_AT_LINE (833)) ;
  }
  GGS_semanticDeclarationList  var_cas_semanticDeclarationList = var_cas_semanticsComponentRoot.reader_mSemanticDeclarations (inLexique COMMA_SOURCE_FILE_AT_LINE (836)).reader_mSemanticDeclarationList (inLexique COMMA_SOURCE_FILE_AT_LINE (836)) ;
  GGS_stringset  var_cas_parsedFileSet = GGS_stringset ::constructor_setWithString (var_cas_inSourceFile.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (837))) ;
  ::routine_recursivelyImportSemanticComponent (inLexique,  var_cas_ioParsedComponentStruct,  var_cas_semanticDeclarationList,  var_cas_parsedFileSet,  var_cas_semanticsComponentRoot.reader_mImportedComponentFileNameList (inLexique COMMA_SOURCE_FILE_AT_LINE (842)),  var_cas_inSourceFile.ggs_string ().reader_stringByDeletingLastPathComponent () COMMA_SOURCE_FILE_AT_LINE (838)) ;
  GGS_semanticContext var_cas_semanticContext ;
  ::routine_buildSemanticContext (inLexique,  var_cas_semanticDeclarationList,  var_cas_semanticsComponentRoot.reader_mEndOfSourceFile (inLexique COMMA_SOURCE_FILE_AT_LINE (847)),  var_cas_semanticContext COMMA_SOURCE_FILE_AT_LINE (847)) ;
  const GGS_bool cond_32154 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_32154.isBuiltAndTrue ()) {
    {
      GGS_typeMap::cEnumerator enumerator_31931 (var_cas_semanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (850)), true) ;
      const GGS_typeMap::cElement * operand_31931 = NULL ;
      while (((operand_31931 = enumerator_31931.nextObject ()))) {
        macroValidPointer (operand_31931) ;
        GGS_constructorMap  var_cas_constructorMap = (findCategoryReader__ACGalgasType__constructorMap (operand_31931->mInfo.mType (HERE)->galgasRTTI ()) (inLexique, operand_31931->mInfo.mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (851))) ;
        GGS_readerMap  var_cas_readerMap = (findCategoryReader__ACGalgasType__readerMap (operand_31931->mInfo.mType (HERE)->galgasRTTI ()) (inLexique, operand_31931->mInfo.mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (852))) ;
        GGS_modifierMap  var_cas_modifierMap = (findCategoryReader__ACGalgasType__modifierMap (operand_31931->mInfo.mType (HERE)->galgasRTTI ()) (inLexique, operand_31931->mInfo.mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (853))) ;
      }
    }
  }
  {
    GGS_semanticDeclarationList::cEnumerator enumerator_32224 (var_cas_semanticDeclarationList, true) ;
    const GGS_semanticDeclarationList::cElement * operand_32224 = NULL ;
    while (((operand_32224 = enumerator_32224.nextObject ()))) {
      macroValidPointer (operand_32224) ;
      const GGS_semanticDeclaration  temp_32270 = operand_32224->mSemanticDeclaration ;
      if (temp_32270.isBuilt ()) {
        typeCategoryMethod__semanticDeclaration__semanticAnalysis method = findCategoryMethod__semanticDeclaration__semanticAnalysis (temp_32270.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, temp_32270 (HERE), var_cas_semanticContext COMMA_SOURCE_FILE_AT_LINE (858)) ;
        }
      }
    }
  }
  GGS_string var_cas_headerString = template_filewrapper_typeGenerationTemplate_semanticFileHeader (inLexique, var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (864)), var_cas_semanticDeclarationList) ;
  GGS_string var_cas_implementationString = template_filewrapper_typeGenerationTemplate_semanticFileImplementation (inLexique, var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (868))) ;
  {
    GGS_semanticDeclarationList::cEnumerator enumerator_32656 (var_cas_semanticDeclarationList, true) ;
    const GGS_semanticDeclarationList::cElement * operand_32656 = NULL ;
    while (((operand_32656 = enumerator_32656.nextObject ()))) {
      macroValidPointer (operand_32656) ;
      const GGS_semanticDeclaration  temp_32698 = operand_32656->mSemanticDeclaration ;
      if (temp_32698.isBuilt ()) {
        typeCategoryMethod__semanticDeclaration__generateCode method = findCategoryMethod__semanticDeclaration__generateCode (temp_32698.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, temp_32698 (HERE), var_cas_semanticContext, var_cas_headerString, var_cas_implementationString COMMA_SOURCE_FILE_AT_LINE (871)) ;
        }
      }
    }
  }
  GGS_string::class_method_generateFile (inLexique, var_cas_inOutputDirectory, (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (879))).operator_concat (GGS_string (".h")), GGS_string ("//"), GGS_string ("\n"
    "\n"), var_cas_headerString, GGS_string ("\n"
    "\n"), GGS_string ("#endif\n") COMMA_SOURCE_FILE_AT_LINE (877)) ;
  GGS_string::class_method_generateFile (inLexique, var_cas_inOutputDirectory, (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (888))).operator_concat (GGS_string (".cpp")), GGS_string ("//"), GGS_string ("\n"
    "\n"), var_cas_implementationString, GGS_string ("\n"
    "\n"), GGS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (886)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_compileSemanticsComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticsCompilation (void) {
  enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__mapDeclaration__enterType, gClassInfoFor__mapDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__mapindexDeclaration__enterType, gClassInfoFor__mapindexDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__enumDeclaration__enterType, gClassInfoFor__enumDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__filewrapperDeclaration__enterType, gClassInfoFor__filewrapperDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__sortedListDeclaration__enterType, gClassInfoFor__sortedListDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__structDeclaration__enterType, gClassInfoFor__structDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__listDeclaration__enterType, gClassInfoFor__listDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__classDeclaration__enterType, gClassInfoFor__classDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__externRoutineDeclaration__enterType, gClassInfoFor__externRoutineDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__externFunctionDeclaration__enterType, gClassInfoFor__externFunctionDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__onceFunctionDeclaration__enterType, gClassInfoFor__onceFunctionDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__enterType ((typeCategoryMethod__semanticDeclaration__enterType) category_method__listmapDeclaration__enterType, gClassInfoFor__listmapDeclaration.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__localVariableDeclaration__instructionSemanticAnalysis, gClassInfoFor__localVariableDeclaration.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__localVariableDeclarationWithInitialization__instructionSemanticAnalysis, gClassInfoFor__localVariableDeclarationWithInitialization.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__localVariableDeclarationWithAssignment__instructionSemanticAnalysis, gClassInfoFor__localVariableDeclarationWithAssignment.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__localConstantDeclarationWithSourceExpression__instructionSemanticAnalysis, gClassInfoFor__localConstantDeclarationWithSourceExpression.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__localConstantDeclarationWithConstructorCall__instructionSemanticAnalysis, gClassInfoFor__localConstantDeclarationWithConstructorCall.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__assignmentInstruction__instructionSemanticAnalysis, gClassInfoFor__assignmentInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__appendInstruction__instructionSemanticAnalysis, gClassInfoFor__appendInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__sendInstruction__instructionSemanticAnalysis, gClassInfoFor__sendInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__foreachInstruction__instructionSemanticAnalysis, gClassInfoFor__foreachInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__ifInstruction__instructionSemanticAnalysis, gClassInfoFor__ifInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__methodCallInstruction__instructionSemanticAnalysis, gClassInfoFor__methodCallInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__modifierCallInstruction__instructionSemanticAnalysis, gClassInfoFor__modifierCallInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__errorInstruction__instructionSemanticAnalysis, gClassInfoFor__errorInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__warningInstruction__instructionSemanticAnalysis, gClassInfoFor__warningInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__routineCallInstruction__instructionSemanticAnalysis, gClassInfoFor__routineCallInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__matchInstruction__instructionSemanticAnalysis, gClassInfoFor__matchInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__castInstruction__instructionSemanticAnalysis, gClassInfoFor__castInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__addInstruction__instructionSemanticAnalysis, gClassInfoFor__addInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__removeInstruction__instructionSemanticAnalysis, gClassInfoFor__removeInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__incrementInstruction__instructionSemanticAnalysis, gClassInfoFor__incrementInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__decrementInstruction__instructionSemanticAnalysis, gClassInfoFor__decrementInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__loopInstruction__instructionSemanticAnalysis, gClassInfoFor__loopInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__messageInstruction__instructionSemanticAnalysis, gClassInfoFor__messageInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__logInstruction__instructionSemanticAnalysis, gClassInfoFor__logInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__grammarInstruction__instructionSemanticAnalysis, gClassInfoFor__grammarInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__withInstruction__instructionSemanticAnalysis, gClassInfoFor__withInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__switchInstruction__instructionSemanticAnalysis, gClassInfoFor__switchInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstruction__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstruction__instructionSemanticAnalysis) category_method__typeMethodInstruction__instructionSemanticAnalysis, gClassInfoFor__typeMethodInstruction.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__mapDeclaration__semanticAnalysis, gClassInfoFor__mapDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__mapindexDeclaration__semanticAnalysis, gClassInfoFor__mapindexDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__enumDeclaration__semanticAnalysis, gClassInfoFor__enumDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__filewrapperDeclaration__semanticAnalysis, gClassInfoFor__filewrapperDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__sortedListDeclaration__semanticAnalysis, gClassInfoFor__sortedListDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__structDeclaration__semanticAnalysis, gClassInfoFor__structDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__listDeclaration__semanticAnalysis, gClassInfoFor__listDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__classDeclaration__semanticAnalysis, gClassInfoFor__classDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__externRoutineDeclaration__semanticAnalysis, gClassInfoFor__externRoutineDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__routineDeclaration__semanticAnalysis, gClassInfoFor__routineDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__externFunctionDeclaration__semanticAnalysis, gClassInfoFor__externFunctionDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__functionDeclaration__semanticAnalysis, gClassInfoFor__functionDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__onceFunctionDeclaration__semanticAnalysis, gClassInfoFor__onceFunctionDeclaration.slotID ()) ;
  enterCategoryMethod__semanticDeclaration__semanticAnalysis ((typeCategoryMethod__semanticDeclaration__semanticAnalysis) category_method__listmapDeclaration__semanticAnalysis, gClassInfoFor__listmapDeclaration.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_semanticsCompilation (void) {
  gDispatchTableForMethod__semanticDeclaration__enterType.free () ;
  gDispatchTableForMethod__semanticInstruction__instructionSemanticAnalysis.free () ;
  gDispatchTableForMethod__semanticDeclaration__semanticAnalysis.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticsCompilation (prologueRoutineFor_semanticsCompilation, epilogueRoutineFor_semanticsCompilation) ;

//---------------------------------------------------------------------------*

