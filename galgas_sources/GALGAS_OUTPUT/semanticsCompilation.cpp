//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'semanticsCompilation.cpp'                       *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      march 10th, 2010, at 17h42'58"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticsCompilation.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticsCompilation.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//             Include directives generated by grammar includes              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "semanticsSLRgrammar.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//  Virtual Table for category method '@semanticDeclarationAST.enterType'    *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticDeclarationAST__enterType> gDispatchTableForMethod__semanticDeclarationAST__enterType ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticDeclarationAST__enterType (typeCategoryMethod__semanticDeclarationAST__enterType inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticDeclarationAST__enterType.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticDeclarationAST__enterType
findCategoryMethod__semanticDeclarationAST__enterType (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticDeclarationAST__enterType result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticDeclarationAST__enterType.count ()) {
    result = gDispatchTableForMethod__semanticDeclarationAST__enterType (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticDeclarationAST__enterType (superClassPtr) ;
      gDispatchTableForMethod__semanticDeclarationAST__enterType.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Category method '@mapDeclarationAST.enterType'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_mapDeclarationAST * operand_2506,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2506 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_2642 (operand_2506->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_2642 = NULL ;
      while (((operand_2642 = enumerator_2642.nextObject ()))) {
        macroValidPointer (operand_2642) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_2642->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (51)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_2642->mAttributeName) ;
      }
    }
    GGS_mapMethodMap  var_cas_insertMethodMap = GGS_mapMethodMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_mapMethodListAST::cEnumerator enumerator_2967 (operand_2506->mInsertMethodList, true) ;
      const GGS_mapMethodListAST::cElement * operand_2967 = NULL ;
      while (((operand_2967 = enumerator_2967.nextObject ()))) {
        macroValidPointer (operand_2967) ;
        const GGS_bool cond_3126 = var_cas_insertMethodMap.reader_hasKey (operand_2967->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (57))) ;
        if (cond_3126.isBuiltAndTrue ()) {
          operand_2967->mMethodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_2967->mMethodName)).operator_concat (GGS_string ("' insert method is already declared")) COMMA_SOURCE_FILE_AT_LINE (59)) ;
        }else if (cond_3126.isBuiltAndFalse ()) {
          var_cas_insertMethodMap.modifier_insertKey (inLexique, operand_2967->mMethodName, operand_2967->mErrorMessage COMMA_SOURCE_FILE_AT_LINE (60)) ;
        }
      }
    }
    GGS_mapMethodMap  var_cas_removeMethodMap = GGS_mapMethodMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_mapMethodListAST::cEnumerator enumerator_3321 (operand_2506->mRemoveMethodList, true) ;
      const GGS_mapMethodListAST::cElement * operand_3321 = NULL ;
      while (((operand_3321 = enumerator_3321.nextObject ()))) {
        macroValidPointer (operand_3321) ;
        const GGS_bool cond_3481 = var_cas_removeMethodMap.reader_hasKey (operand_3321->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (66))) ;
        if (cond_3481.isBuiltAndTrue ()) {
          operand_3321->mMethodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_3321->mMethodName)).operator_concat (GGS_string ("' remove method is already declared")) COMMA_SOURCE_FILE_AT_LINE (68)) ;
        }else if (cond_3481.isBuiltAndFalse ()) {
          const GGS_bool cond_3640 = var_cas_insertMethodMap.reader_hasKey (operand_3321->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (68))) ;
          if (cond_3640.isBuiltAndTrue ()) {
            operand_3321->mMethodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_3321->mMethodName)).operator_concat (GGS_string ("' method is already declared as insert method")) COMMA_SOURCE_FILE_AT_LINE (70)) ;
          }else if (cond_3640.isBuiltAndFalse ()) {
            var_cas_removeMethodMap.modifier_insertKey (inLexique, operand_3321->mMethodName, operand_3321->mErrorMessage COMMA_SOURCE_FILE_AT_LINE (71)) ;
          }
        }
      }
    }
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_3852 (operand_2506->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_3852 = NULL ;
      while (((operand_3852 = enumerator_3852.nextObject ()))) {
        macroValidPointer (operand_3852) ;
        const GGS_string var_cas_accessorName = ((GGS_string ("set")).operator_concat (operand_3852->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ())).operator_concat (GGS_string ("ForKey")) ;
        const GGS_bool cond_4167 = var_cas_removeMethodMap.reader_hasKey (var_cas_accessorName) ;
        if (cond_4167.isBuiltAndTrue ()) {
          operand_3852->mAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_accessorName)).operator_concat (GGS_string ("' remove method name is incompatible with accessor of '"))).operator_concat (operand_3852->mAttributeName)).operator_concat (GGS_string ("' attribute")) COMMA_SOURCE_FILE_AT_LINE (79)) ;
        }else if (cond_4167.isBuiltAndFalse ()) {
          const GGS_bool cond_4363 = var_cas_insertMethodMap.reader_hasKey (var_cas_accessorName) ;
          if (cond_4363.isBuiltAndTrue ()) {
            operand_3852->mAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_accessorName)).operator_concat (GGS_string ("' insert method name is incompatible with accessor of '"))).operator_concat (operand_3852->mAttributeName)).operator_concat (GGS_string ("' attribute")) COMMA_SOURCE_FILE_AT_LINE (81)) ;
          }
        }
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_mapType ::constructor_new (inLexique, operand_2506->mMapTypeName, var_cas_attributeList, var_cas_insertMethodMap, var_cas_removeMethodMap COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_2506->mMapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (90)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@mapindexDeclarationAST.enterType'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapindexDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_mapindexDeclarationAST * operand_4737,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4737 != NULL) {
    GGS_typeMapIndex  var_cas_mapTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_4737->mMapTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_mapTypeIndex COMMA_SOURCE_FILE_AT_LINE (100)) ;
    GGS_ACGalgasType  var_cas_t = GGS_mapindexType ::constructor_new (inLexique, operand_4737->mMapIndexTypeName, var_cas_mapTypeIndex COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_4737->mMapIndexTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (106)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@enumDeclarationAST.enterType'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__enumDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_enumDeclarationAST * operand_5252,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5252 != NULL) {
    GGS_enumConstructorMap  var_cas_enumConstructorMap = GGS_enumConstructorMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_lstringlist::cEnumerator enumerator_5396 (operand_5252->mConstantList, true) ;
      const GGS_lstringlist::cElement * operand_5396 = NULL ;
      while (((operand_5396 = enumerator_5396.nextObject ()))) {
        macroValidPointer (operand_5396) ;
        var_cas_enumConstructorMap.modifier_insertKey (inLexique, operand_5396->mValue COMMA_SOURCE_FILE_AT_LINE (117)) ;
      }
    }
    GGS_stringset  var_cas_allConstantSet = GGS_stringset ::constructor_emptySet () ;
    {
      GGS_lstringlist::cEnumerator enumerator_5563 (operand_5252->mConstantList, true) ;
      const GGS_lstringlist::cElement * operand_5563 = NULL ;
      while (((operand_5563 = enumerator_5563.nextObject ()))) {
        macroValidPointer (operand_5563) ;
        var_cas_allConstantSet.addAssign_operation (operand_5563->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (122))) ;
      }
    }
    GGS_enumMessageMap  var_cas_enumMessageMap = GGS_enumMessageMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_enumMessageListAST::cEnumerator enumerator_5717 (operand_5252->mEnumMessageList, true) ;
      const GGS_enumMessageListAST::cElement * operand_5717 = NULL ;
      while (((operand_5717 = enumerator_5717.nextObject ()))) {
        macroValidPointer (operand_5717) ;
        var_cas_enumMessageMap.modifier_insertKey (inLexique, operand_5717->mEnumMessageName COMMA_SOURCE_FILE_AT_LINE (127)) ;
        GGS_stringset  var_cas_messageConstantSet = GGS_stringset ::constructor_emptySet () ;
        {
          GGS_enumMessageAssociationListAST::cEnumerator enumerator_5920 (operand_5717->mMessageAssociationList, true) ;
          const GGS_enumMessageAssociationListAST::cElement * operand_5920 = NULL ;
          while (((operand_5920 = enumerator_5920.nextObject ()))) {
            macroValidPointer (operand_5920) ;
            const GGS_bool cond_6107 = var_cas_messageConstantSet.reader_hasKey (operand_5920->mConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (131))) ;
            if (cond_6107.isBuiltAndTrue ()) {
              operand_5920->mConstantName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_5920->mConstantName)).operator_concat (GGS_string ("' is already named for this message definition")) COMMA_SOURCE_FILE_AT_LINE (133)) ;
            }else if (cond_6107.isBuiltAndFalse ()) {
              const GGS_bool cond_6238 = (var_cas_allConstantSet.reader_hasKey (operand_5920->mConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (133)))).operator_not () ;
              if (cond_6238.isBuiltAndTrue ()) {
                operand_5920->mConstantName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("this constant is not declared") COMMA_SOURCE_FILE_AT_LINE (135)) ;
              }
            }
            var_cas_messageConstantSet.addAssign_operation (operand_5920->mConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (136))) ;
          }
        }
        {
          GGS_stringset::cEnumerator enumerator_6405 (var_cas_messageConstantSet, true) ;
          while (enumerator_6405.hasCurrentObject ()) {
            const GGS_bool cond_6566 = (var_cas_allConstantSet.reader_hasKey (enumerator_6405._key (HERE))).operator_not () ;
            if (cond_6566.isBuiltAndTrue ()) {
              operand_5717->mEnumMessageName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this message definition does not name the '")).operator_concat (enumerator_6405._key (HERE))).operator_concat (GGS_string ("' constant")) COMMA_SOURCE_FILE_AT_LINE (142)) ;
            }
            enumerator_6405.next () ;
          }
        }
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_enumType ::constructor_new (inLexique, operand_5252->mEnumTypeName, var_cas_enumConstructorMap, var_cas_enumMessageMap COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_5252->mEnumTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (151)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@filewrapperDeclarationAST.enterType'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__filewrapperDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_filewrapperDeclarationAST * operand_6947,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_6947 != NULL) {
    GGS_filewrapperTemplateMap  var_cas_filewrapperTemplateMap = GGS_filewrapperTemplateMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_filewrapperTemplateListAST::cEnumerator enumerator_7087 (operand_6947->mFilewrapperTemplateList, true) ;
      const GGS_filewrapperTemplateListAST::cElement * operand_7087 = NULL ;
      while (((operand_7087 = enumerator_7087.nextObject ()))) {
        macroValidPointer (operand_7087) ;
        GGS_signature  var_cas_templateSignature = GGS_signature ::constructor_emptyList () ;
        {
          GGS_formalInputParameterListAST::cEnumerator enumerator_7191 (operand_7087->mFilewrapperTemplateFormalInputParameters, true) ;
          const GGS_formalInputParameterListAST::cElement * operand_7191 = NULL ;
          while (((operand_7191 = enumerator_7191.nextObject ()))) {
            macroValidPointer (operand_7191) ;
            GGS_typeMapIndex  var_cas_parameterTypeIndex ;
            GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_7191->mFormalParameterTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (164)) ;
            var_cas_templateSignature.addAssign_operation (var_cas_parameterTypeIndex, operand_7191->mFormalParameterName, GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_HERE)) ;
          }
        }
        var_cas_filewrapperTemplateMap.modifier_insertKey (inLexique, operand_7087->mFilewrapperTemplateName, var_cas_templateSignature, operand_7087->mFilewrapperTemplatePath COMMA_SOURCE_FILE_AT_LINE (171)) ;
      }
    }
    var_cas_ioSemanticContext.mFilewrapperMap.modifier_insertKey (inLexique, operand_6947->mFilewrapperName, operand_6947->mFilewrapperPath, operand_6947->mFilewrapperExtensionList, var_cas_filewrapperTemplateMap COMMA_SOURCE_FILE_AT_LINE (177)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@sortedListDeclarationAST.enterType'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sortedListDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_sortedListDeclarationAST * operand_7970,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7970 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_8106 (operand_7970->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_8106 = NULL ;
      while (((operand_8106 = enumerator_8106.nextObject ()))) {
        macroValidPointer (operand_8106) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_8106->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (194)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_8106->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_listGalgasType ::constructor_new (inLexique, operand_7970->mSortedListTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_7970->mSortedListTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (202)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@structDeclarationAST.enterType'              *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__structDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_structDeclarationAST * operand_8661,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8661 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_8797 (operand_8661->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_8797 = NULL ;
      while (((operand_8797 = enumerator_8797.nextObject ()))) {
        macroValidPointer (operand_8797) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_8797->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (214)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_8797->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_structGalgasType ::constructor_new (inLexique, operand_8661->mStructTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_8661->mStructTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (222)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@listDeclarationAST.enterType'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_listDeclarationAST * operand_9344,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9344 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_9480 (operand_9344->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_9480 = NULL ;
      while (((operand_9480 = enumerator_9480.nextObject ()))) {
        macroValidPointer (operand_9480) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_9480->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (234)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_9480->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_listGalgasType ::constructor_new (inLexique, operand_9344->mListTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_9344->mListTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (242)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@classDeclarationAST.enterType'              *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__classDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_classDeclarationAST * operand_10022,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10022 != NULL) {
    GGS_typeMapIndex  var_cas_superClassIndex ;
    const GGS_bool cond_10217 = (operand_10022->mSuperClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (252))).operator_isEqual (GGS_string ("")) ;
    if (cond_10217.isBuiltAndTrue ()) {
      var_cas_superClassIndex = GGS_typeMapIndex ::constructor_null (inLexique COMMA_HERE) ;
    }else if (cond_10217.isBuiltAndFalse ()) {
      GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_10022->mSuperClassName, var_cas_ioSemanticContext.mTypeMap, var_cas_superClassIndex COMMA_SOURCE_FILE_AT_LINE (255)) ;
      GGS_typeMapIndex  var_cas_classIndex ;
      GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_10022->mClassTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_classIndex COMMA_SOURCE_FILE_AT_LINE (258)) ;
      var_cas_ioSemanticContext.mDescendantClassListMap.addAssign_operation (operand_10022->mSuperClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (259)), var_cas_classIndex) ;
    }
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_10680 (operand_10022->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_10680 = NULL ;
      while (((operand_10680 = enumerator_10680.nextObject ()))) {
        macroValidPointer (operand_10680) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_10680->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (265)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_10680->mAttributeName) ;
      }
    }
    GGS_classMethodList  var_cas_methodList = GGS_classMethodList ::constructor_emptyList () ;
    GGS_classGalgasType  var_cas_t = GGS_classGalgasType ::constructor_new (inLexique, operand_10022->mIsAbstract, operand_10022->mClassTypeName, var_cas_superClassIndex, var_cas_attributeList, var_cas_methodList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_10022->mClassTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (278)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@externRoutineDeclarationAST.enterType'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externRoutineDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_externRoutineDeclarationAST * operand_11354,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11354 != NULL) {
    GGS_signature  var_cas_routineSignature = GGS_signature ::constructor_emptyList () ;
    {
      GGS_formalParameterListAST::cEnumerator enumerator_11528 (operand_11354->mFormalParameterList, true) ;
      const GGS_formalParameterListAST::cElement * operand_11528 = NULL ;
      while (((operand_11528 = enumerator_11528.nextObject ()))) {
        macroValidPointer (operand_11528) ;
        GGS_typeMapIndex  var_cas_parameterTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_11528->mFormalParameterTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (290)) ;
        var_cas_routineSignature.addAssign_operation (var_cas_parameterTypeIndex, operand_11528->mFormalParameterName, operand_11528->mFormalParameterPassingMode) ;
      }
    }
    var_cas_ioSemanticContext.mRoutineMap.modifier_insertKey (inLexique, operand_11354->mRoutineName, var_cas_routineSignature COMMA_SOURCE_FILE_AT_LINE (294)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@externFunctionDeclarationAST.enterType'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externFunctionDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_externFunctionDeclarationAST * operand_12060,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12060 != NULL) {
    GGS_signature  var_cas_functionSignature = GGS_signature ::constructor_emptyList () ;
    {
      GGS_formalParameterListAST::cEnumerator enumerator_12236 (operand_12060->mFormalParameterList, true) ;
      const GGS_formalParameterListAST::cElement * operand_12236 = NULL ;
      while (((operand_12236 = enumerator_12236.nextObject ()))) {
        macroValidPointer (operand_12236) ;
        GGS_typeMapIndex  var_cas_parameterTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_12236->mFormalParameterTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (306)) ;
        var_cas_functionSignature.addAssign_operation (var_cas_parameterTypeIndex, operand_12236->mFormalParameterName, operand_12236->mFormalParameterPassingMode) ;
      }
    }
    GGS_typeMapIndex  var_cas_resultTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_12060->mResultTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (311)) ;
    var_cas_ioSemanticContext.mFunctionMap.modifier_insertKey (inLexique, operand_12060->mFunctionName, var_cas_functionSignature, var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (313)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@lazyFunctionDeclarationAST.enterType'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lazyFunctionDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_lazyFunctionDeclarationAST * operand_12939,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12939 != NULL) {
    GGS_typeMapIndex  var_cas_resultTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_12939->mResultTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (323)) ;
    var_cas_ioSemanticContext.mFunctionMap.modifier_insertKey (inLexique, operand_12939->mFunctionName, GGS_signature ::constructor_emptyList (), var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (325)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@listmapDeclarationAST.enterType'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listmapDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_listmapDeclarationAST * operand_13415,
                                GGS_semanticContextEX & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13415 != NULL) {
    GGS_typeMapIndex  var_cas_associatedListTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_13415->mAssociatedListTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_associatedListTypeIndex COMMA_SOURCE_FILE_AT_LINE (334)) ;
    GGS_ACGalgasType  var_cas_t = GGS_listmapGalgasType ::constructor_new (inLexique, operand_13415->mListmapTypeName, var_cas_associatedListTypeIndex COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_13415->mListmapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (340)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "buildSemanticContext"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildSemanticContext (C_Compiler & inLexique,
                                const GGS_semanticDeclarationListAST   var_cas_inSemanticDeclarationList,
                                const GGS_location   var_cas_inEndOfSourceFile,
                                GGS_semanticContextEX & var_cas_outSemanticContext COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_buildSemanticContext at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_typeMap  var_cas_typeMap = function_constructBuiltinTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (351)) ;
  var_cas_outSemanticContext = GGS_semanticContextEX::constructor_new (var_cas_typeMap, GGS_routineMap ::constructor_emptyMap (inLexique COMMA_HERE), GGS_functionMap ::constructor_emptyMap (inLexique COMMA_HERE), GGS_descendantClassListMap::constructor_emptyMap (), GGS_filewrapperMap ::constructor_emptyMap (inLexique COMMA_HERE)) ;
  {
    GGS_semanticDeclarationListAST::cEnumerator enumerator_14441 (var_cas_inSemanticDeclarationList, true) ;
    const GGS_semanticDeclarationListAST::cElement * operand_14441 = NULL ;
    while (((operand_14441 = enumerator_14441.nextObject ()))) {
      macroValidPointer (operand_14441) ;
      const GGS_semanticDeclarationAST  temp_14480 = operand_14441->mSemanticDeclaration ;
      if (temp_14480.isBuilt ()) {
        typeCategoryMethod__semanticDeclarationAST__enterType method = findCategoryMethod__semanticDeclarationAST__enterType (temp_14480.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, temp_14480 (HERE), var_cas_outSemanticContext COMMA_SOURCE_FILE_AT_LINE (362)) ;
        }
      }
    }
  }
  const GGS_bool cond_15251 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_15251.isBuiltAndTrue ()) {
    GGS_stringlist  var_cas_undefinedClasses = var_cas_outSemanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (366)).reader_unsolvedIndexKeyStringList (inLexique COMMA_SOURCE_FILE_AT_LINE (366)) ;
    const GGS_bool cond_14948 = (var_cas_undefinedClasses.reader_length ()).operator_isEqual (GGS_uint (1U)) ;
    if (cond_14948.isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage = GGS_string ("there is 1 undefined type:") ;
      {
        GGS_stringlist::cEnumerator enumerator_14824 (var_cas_undefinedClasses, true) ;
        const GGS_stringlist::cElement * operand_14824 = NULL ;
        while (((operand_14824 = enumerator_14824.nextObject ()))) {
          macroValidPointer (operand_14824) ;
          var_cas_errorMessage.appendCString ("\n"
            "-  @") ;
          var_cas_errorMessage.dotAssign_operation (operand_14824->mValue) ;
        }
      }
      var_cas_inEndOfSourceFile.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (373)) ;
    }else if (cond_14948.isBuiltAndFalse ()) {
      const GGS_bool cond_15240 = (var_cas_undefinedClasses.reader_length ()).operator_strictSup (GGS_uint (1U)) ;
      if (cond_15240.isBuiltAndTrue ()) {
        GGS_string var_cas_errorMessage = ((GGS_string ("there are ")).operator_concat (var_cas_undefinedClasses.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (374)))).operator_concat (GGS_string (" undefined types:")) ;
        {
          GGS_stringlist::cEnumerator enumerator_15118 (var_cas_undefinedClasses, true) ;
          const GGS_stringlist::cElement * operand_15118 = NULL ;
          while (((operand_15118 = enumerator_15118.nextObject ()))) {
            macroValidPointer (operand_15118) ;
            var_cas_errorMessage.appendCString ("\n"
              "-  @") ;
            var_cas_errorMessage.dotAssign_operation (operand_15118->mValue) ;
          }
        }
        var_cas_inEndOfSourceFile.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (379)) ;
      }
    }
  }
  const GGS_bool cond_15625 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_15625.isBuiltAndTrue ()) {
    {
      GGS_typeMap::cEnumerator enumerator_15490 (var_cas_outSemanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (386)), true) ;
      const GGS_typeMap::cElement * operand_15490 = NULL ;
      while (((operand_15490 = enumerator_15490.nextObject ()))) {
        macroValidPointer (operand_15490) ;
        const GGS_ACGalgasType  temp_15559 = operand_15490->mInfo.mType ;
        if (temp_15559.isBuilt ()) {
          temp_15559 (HERE)->method_checkTypeCrossReferences (inLexique, var_cas_outSemanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (387)).reader_count () COMMA_SOURCE_FILE_AT_LINE (387)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_buildSemanticContext\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@semanticInstructionAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis> gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis (typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis
findCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis.count ()) {
    result = gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis (superClassPtr) ;
      gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableDeclarationAST.instructionSemanticAnalysis' *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclarationAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localVariableDeclarationAST * operand_16307,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16307 != NULL) {
    inLexique.printMessage (GGS_string ("@localVariableDeclarationAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (407)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableDeclarationWithInitializationAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclarationWithInitializationAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localVariableDeclarationWithInitializationAST * operand_16614,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16614 != NULL) {
    inLexique.printMessage (GGS_string ("@localVariableDeclarationWithInitializationAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (415)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableDeclarationWithAssignmentAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclarationWithAssignmentAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localVariableDeclarationWithAssignmentAST * operand_16935,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16935 != NULL) {
    inLexique.printMessage (GGS_string ("@localVariableDeclarationWithAssignmentAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (423)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localConstantDeclarationWithSourceExpressionAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localConstantDeclarationWithSourceExpressionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localConstantDeclarationWithSourceExpressionAST * operand_17259,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17259 != NULL) {
    inLexique.printMessage (GGS_string ("@localConstantDeclarationWithSourceExpressionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (432)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localConstantDeclarationWithConstructorCallAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localConstantDeclarationWithConstructorCallAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localConstantDeclarationWithConstructorCallAST * operand_17587,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17587 != NULL) {
    inLexique.printMessage (GGS_string ("@localConstantDeclarationWithConstructorCallAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (440)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@assignmentInstructionAST.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__assignmentInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_assignmentInstructionAST * operand_17892,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17892 != NULL) {
    inLexique.printMessage (GGS_string ("@assignmentInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (448)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@appendInstructionAST.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__appendInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_appendInstructionAST * operand_18171,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18171 != NULL) {
    inLexique.printMessage (GGS_string ("@appendInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (456)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@sendInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sendInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_sendInstructionAST * operand_18444,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18444 != NULL) {
    inLexique.printMessage (GGS_string ("@sendInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (464)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@foreachInstructionAST.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__foreachInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_foreachInstructionAST * operand_18718,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18718 != NULL) {
    inLexique.printMessage (GGS_string ("@foreachInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (472)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@ifInstructionAST.instructionSemanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__ifInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_ifInstructionAST * operand_18990,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18990 != NULL) {
    inLexique.printMessage (GGS_string ("@ifInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (480)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@methodCallInstructionAST.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__methodCallInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_methodCallInstructionAST * operand_19265,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19265 != NULL) {
    inLexique.printMessage (GGS_string ("@methodCallInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (488)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@modifierCallInstructionAST.instructionSemanticAnalysis'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__modifierCallInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_modifierCallInstructionAST * operand_19550,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19550 != NULL) {
    inLexique.printMessage (GGS_string ("@modifierCallInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (496)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@errorInstructionAST.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__errorInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_errorInstructionAST * operand_19830,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19830 != NULL) {
    inLexique.printMessage (GGS_string ("@errorInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (504)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@warningInstructionAST.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__warningInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_warningInstructionAST * operand_20105,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20105 != NULL) {
    inLexique.printMessage (GGS_string ("@warningInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (512)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@routineCallInstructionAST.instructionSemanticAnalysis'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__routineCallInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_routineCallInstructionAST * operand_20386,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20386 != NULL) {
    inLexique.printMessage (GGS_string ("@routineCallInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (520)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@matchInstructionAST.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__matchInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_matchInstructionAST * operand_20665,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20665 != NULL) {
    inLexique.printMessage (GGS_string ("@matchInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (528)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@castInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__castInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_castInstructionAST * operand_20937,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20937 != NULL) {
    inLexique.printMessage (GGS_string ("@castInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (536)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@addInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__addInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_addInstructionAST * operand_21207,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21207 != NULL) {
    inLexique.printMessage (GGS_string ("@addInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (544)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@removeInstructionAST.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__removeInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_removeInstructionAST * operand_21479,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21479 != NULL) {
    inLexique.printMessage (GGS_string ("@removeInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (552)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@incrementInstructionAST.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__incrementInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_incrementInstructionAST * operand_21757,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21757 != NULL) {
    inLexique.printMessage (GGS_string ("@incrementInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (560)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@decrementInstructionAST.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__decrementInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_decrementInstructionAST * operand_22038,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22038 != NULL) {
    inLexique.printMessage (GGS_string ("@decrementInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (568)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@loopInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__loopInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_loopInstructionAST * operand_22314,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22314 != NULL) {
    inLexique.printMessage (GGS_string ("@loopInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (576)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@messageInstructionAST.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__messageInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_messageInstructionAST * operand_22588,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22588 != NULL) {
    inLexique.printMessage (GGS_string ("@messageInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (584)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@logInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__logInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_logInstructionAST * operand_22861,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22861 != NULL) {
    inLexique.printMessage (GGS_string ("@logInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (592)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@grammarInstructionAST.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__grammarInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_grammarInstructionAST * operand_23134,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23134 != NULL) {
    inLexique.printMessage (GGS_string ("@grammarInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (600)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@withInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__withInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_withInstructionAST * operand_23408,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23408 != NULL) {
    inLexique.printMessage (GGS_string ("@withInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (608)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@switchInstructionAST.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__switchInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_switchInstructionAST * operand_23681,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23681 != NULL) {
    inLexique.printMessage (GGS_string ("@switchInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (616)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@typeMethodInstructionAST.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__typeMethodInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_typeMethodInstructionAST * operand_23960,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23960 != NULL) {
    inLexique.printMessage (GGS_string ("@typeMethodInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (624)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@semanticDeclarationAST.semanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticDeclarationAST__semanticAnalysis> gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticDeclarationAST__semanticAnalysis (typeCategoryMethod__semanticDeclarationAST__semanticAnalysis inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticDeclarationAST__semanticAnalysis
findCategoryMethod__semanticDeclarationAST__semanticAnalysis (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticDeclarationAST__semanticAnalysis result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis.count ()) {
    result = gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticDeclarationAST__semanticAnalysis (superClassPtr) ;
      gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@mapDeclarationAST.semanticAnalysis'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_mapDeclarationAST * operand_24724,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_24724 != NULL) {
    inLexique.printMessage (GGS_string ("@mapDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (642)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@mapindexDeclarationAST.semanticAnalysis'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapindexDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_mapindexDeclarationAST * operand_24976,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_24976 != NULL) {
    inLexique.printMessage (GGS_string ("@mapindexDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (650)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@enumDeclarationAST.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__enumDeclarationAST__semanticAnalysis (C_Compiler &,
                                const cPtr_enumDeclarationAST * operand_25229,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25229 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@filewrapperDeclarationAST.semanticAnalysis'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__filewrapperDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_filewrapperDeclarationAST * operand_25451,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25451 != NULL) {
    inLexique.printMessage (GGS_string ("@filewrapperDeclarationAST.semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (666)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@sortedListDeclarationAST.semanticAnalysis'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sortedListDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_sortedListDeclarationAST * operand_25713,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25713 != NULL) {
    inLexique.printMessage (GGS_string ("@sortedListDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (674)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@structDeclarationAST.semanticAnalysis'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__structDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_structDeclarationAST * operand_25970,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25970 != NULL) {
    inLexique.printMessage (GGS_string ("@structDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (682)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@listDeclarationAST.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_listDeclarationAST * operand_26221,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26221 != NULL) {
    inLexique.printMessage (GGS_string ("@listDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (690)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@classDeclarationAST.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__classDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_classDeclarationAST * operand_26471,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26471 != NULL) {
    inLexique.printMessage (GGS_string ("@classDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (698)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@externRoutineDeclarationAST.semanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externRoutineDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_externRoutineDeclarationAST * operand_26730,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26730 != NULL) {
    inLexique.printMessage (GGS_string ("@externRoutineDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (706)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@routineDeclarationAST.semanticAnalysis'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__routineDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_routineDeclarationAST * operand_26991,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26991 != NULL) {
    inLexique.printMessage (GGS_string ("@routineDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (714)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@externFunctionDeclarationAST.semanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externFunctionDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_externFunctionDeclarationAST * operand_27377,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_27377 != NULL) {
    inLexique.printMessage (GGS_string ("@externFunctionDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (725)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@functionDeclarationAST.semanticAnalysis'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__functionDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_functionDeclarationAST * operand_27640,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_27640 != NULL) {
    inLexique.printMessage (GGS_string ("@functionDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (733)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@lazyFunctionDeclarationAST.semanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lazyFunctionDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_lazyFunctionDeclarationAST * operand_28026,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_28026 != NULL) {
    inLexique.printMessage (GGS_string ("@lazyFunctionDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (744)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@listmapDeclarationAST.semanticAnalysis'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listmapDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_listmapDeclarationAST * operand_28286,
                                GGS_semanticContextEX & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_28286 != NULL) {
    inLexique.printMessage (GGS_string ("@listmapDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (752)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "parseSemanticComponent"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_parseSemanticComponent (C_Compiler & inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct,
                                GGS_semanticsComponentAST  & var_cas_outSemanticsComponentRoot COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_parseSemanticComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_basename = var_cas_inSourceFile.ggs_string ().reader_lastPathComponent ().reader_stringByDeletingPathExtension () ;
  GGS_lstring  var_cas_basenameKey = GGS_lstring ::constructor_new (inLexique, var_cas_basename, GGS_location (inLexique) COMMA_HERE) ;
  const GGS_bool cond_29300 = var_cas_ioParsedComponentStruct.reader_mParsedSemanticsComponentMap (inLexique COMMA_SOURCE_FILE_AT_LINE (768)).reader_hasKey (var_cas_basename) ;
  if (cond_29300.isBuiltAndTrue ()) {
    const GGS_parsedSemanticsComponentMap  temp_29250 = var_cas_ioParsedComponentStruct.reader_mParsedSemanticsComponentMap (inLexique COMMA_SOURCE_FILE_AT_LINE (769)) ;
    if (temp_29250.isBuilt ()) {
      temp_29250 (HERE)->method_searchKey (inLexique, var_cas_basenameKey, var_cas_outSemanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (769)) ;
    }
  }else if (cond_29300.isBuiltAndFalse ()) {
    const GGS_string _depExtension = GGS_string ("") ;
    const GGS_string _depPath = GGS_string ("") ;
    if (_depExtension.isBuilt () && _depPath.isBuilt ()) {
      C_Grammar_semanticsSLRgrammar::_performSourceFileParsing_ (inLexique,
                                    _depExtension.string (),
                                    _depPath.string (),
                                    NULL,
                                    var_cas_inSourceFile,
                                    var_cas_outSemanticsComponentRoot
                                    COMMA_SOURCE_FILE_AT_LINE (771)) ;
    }
    var_cas_ioParsedComponentStruct.mParsedSemanticsComponentMap.modifier_insertKey (inLexique, var_cas_basenameKey, var_cas_outSemanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (772)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_parseSemanticComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "recursivelyImportSemanticComponent"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_recursivelyImportSemanticComponent (C_Compiler & inLexique,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct,
                                GGS_semanticDeclarationListAST  & var_cas_ioSemanticDeclarationList,
                                GGS_stringset  & var_cas_ioParsedFileSet,
                                const GGS_lstringlist   var_cas_inListOfFilesToParse,
                                const GGS_string  var_cas_inDirectory COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_recursivelyImportSemanticComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  {
    GGS_lstringlist::cEnumerator enumerator_29873 (var_cas_inListOfFilesToParse, true) ;
    const GGS_lstringlist::cElement * operand_29873 = NULL ;
    while (((operand_29873 = enumerator_29873.nextObject ()))) {
      macroValidPointer (operand_29873) ;
      const GGS_bool cond_30801 = (var_cas_ioParsedFileSet.reader_hasKey (operand_29873->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (786)))).operator_not () ;
      if (cond_30801.isBuiltAndTrue ()) {
        var_cas_ioParsedFileSet.addAssign_operation (operand_29873->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (787))) ;
        GGS_string var_cas_extension = operand_29873->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (788)).reader_pathExtension () ;
        const GGS_bool cond_30788 = (var_cas_extension).operator_isEqual (GGS_string ("gSemantics")) ;
        if (cond_30788.isBuiltAndTrue ()) {
          GGS_lstring  var_cas_filePath = GGS_lstring ::constructor_new (inLexique, operand_29873->mValue.ggs_string ().reader_absolutePathFromPath (var_cas_inDirectory), operand_29873->mValue.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (792)) COMMA_HERE) ;
          GGS_semanticsComponentAST  var_cas_semanticsComponentRoot ;
          ::routine_parseSemanticComponent (inLexique,  var_cas_filePath,  var_cas_ioParsedComponentStruct,  var_cas_semanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (795)) ;
          var_cas_ioSemanticDeclarationList = (var_cas_ioSemanticDeclarationList).operator_concat (var_cas_semanticsComponentRoot.reader_mSemanticDeclarations (inLexique COMMA_SOURCE_FILE_AT_LINE (800)).reader_mSemanticDeclarationList (inLexique COMMA_SOURCE_FILE_AT_LINE (800))) ;
          ::routine_recursivelyImportSemanticComponent (inLexique,  var_cas_ioParsedComponentStruct,  var_cas_ioSemanticDeclarationList,  var_cas_ioParsedFileSet,  var_cas_semanticsComponentRoot.reader_mImportedComponentFileNameList (inLexique COMMA_SOURCE_FILE_AT_LINE (805)),  var_cas_inDirectory COMMA_SOURCE_FILE_AT_LINE (801)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_recursivelyImportSemanticComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "compileSemanticsComponent"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileSemanticsComponent (C_Compiler & inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                const GGS_string  var_cas_inOutputDirectory,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_compileSemanticsComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_semanticsComponentAST  var_cas_semanticsComponentRoot ;
  ::routine_parseSemanticComponent (inLexique,  var_cas_inSourceFile,  var_cas_ioParsedComponentStruct,  var_cas_semanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (822)) ;
  const GGS_string var_cas_basename = var_cas_inSourceFile.ggs_string ().reader_lastPathComponent ().reader_stringByDeletingPathExtension () ;
  const GGS_lstring  var_cas_componentName = var_cas_semanticsComponentRoot.reader_mSemanticsComponentName (inLexique COMMA_SOURCE_FILE_AT_LINE (829)) ;
  const GGS_bool cond_31691 = (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (830))).operator_isNotEqual (var_cas_basename) ;
  if (cond_31691.isBuiltAndTrue ()) {
    var_cas_componentName.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, ((((GGS_string ("GALGAS checks "
      "the component name ('")).operator_concat (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (832)))).operator_concat (GGS_string ("') against the source file base name ('"))).operator_concat (var_cas_basename)).operator_concat (GGS_string ("'): they should be identical")) COMMA_SOURCE_FILE_AT_LINE (834)) ;
  }
  GGS_semanticDeclarationListAST  var_cas_semanticDeclarationList = var_cas_semanticsComponentRoot.reader_mSemanticDeclarations (inLexique COMMA_SOURCE_FILE_AT_LINE (837)).reader_mSemanticDeclarationList (inLexique COMMA_SOURCE_FILE_AT_LINE (837)) ;
  GGS_stringset  var_cas_parsedFileSet = GGS_stringset ::constructor_setWithString (var_cas_inSourceFile.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (838))) ;
  ::routine_recursivelyImportSemanticComponent (inLexique,  var_cas_ioParsedComponentStruct,  var_cas_semanticDeclarationList,  var_cas_parsedFileSet,  var_cas_semanticsComponentRoot.reader_mImportedComponentFileNameList (inLexique COMMA_SOURCE_FILE_AT_LINE (843)),  var_cas_inSourceFile.ggs_string ().reader_stringByDeletingLastPathComponent () COMMA_SOURCE_FILE_AT_LINE (839)) ;
  GGS_semanticContextEX var_cas_semanticContextEX ;
  ::routine_buildSemanticContext (inLexique,  var_cas_semanticDeclarationList,  var_cas_semanticsComponentRoot.reader_mEndOfSourceFile (inLexique COMMA_SOURCE_FILE_AT_LINE (848)),  var_cas_semanticContextEX COMMA_SOURCE_FILE_AT_LINE (848)) ;
  const GGS_bool cond_32669 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_32669.isBuiltAndTrue ()) {
    {
      GGS_typeMap::cEnumerator enumerator_32435 (var_cas_semanticContextEX.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (851)), true) ;
      const GGS_typeMap::cElement * operand_32435 = NULL ;
      while (((operand_32435 = enumerator_32435.nextObject ()))) {
        macroValidPointer (operand_32435) ;
        GGS_constructorMapEXX  var_cas_constructorMap = (findCategoryReader__ACGalgasType__constructorMap (operand_32435->mInfo.mType (HERE)->galgasRTTI ()) (inLexique, operand_32435->mInfo.mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (852))) ;
        GGS_readerMapEXX  var_cas_readerMap = (findCategoryReader__ACGalgasType__readerMap (operand_32435->mInfo.mType (HERE)->galgasRTTI ()) (inLexique, operand_32435->mInfo.mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (853))) ;
        GGS_modifierMapEXX  var_cas_modifierMap = (findCategoryReader__ACGalgasType__modifierMap (operand_32435->mInfo.mType (HERE)->galgasRTTI ()) (inLexique, operand_32435->mInfo.mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (854))) ;
      }
    }
  }
  {
    GGS_semanticDeclarationListAST::cEnumerator enumerator_32759 (var_cas_semanticDeclarationList, true) ;
    const GGS_semanticDeclarationListAST::cElement * operand_32759 = NULL ;
    while (((operand_32759 = enumerator_32759.nextObject ()))) {
      macroValidPointer (operand_32759) ;
      const GGS_semanticDeclarationAST  temp_32805 = operand_32759->mSemanticDeclaration ;
      if (temp_32805.isBuilt ()) {
        typeCategoryMethod__semanticDeclarationAST__semanticAnalysis method = findCategoryMethod__semanticDeclarationAST__semanticAnalysis (temp_32805.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, temp_32805 (HERE), var_cas_semanticContextEX COMMA_SOURCE_FILE_AT_LINE (859)) ;
        }
      }
    }
  }
  GGS_semanticDeclarationSortedListForGeneration  var_cas_declarationSortedListForGeneration = GGS_semanticDeclarationSortedListForGeneration ::constructor_emptySortedList () ;
  {
    GGS_semanticDeclarationListAST::cEnumerator enumerator_33055 (var_cas_semanticDeclarationList, true) ;
    const GGS_semanticDeclarationListAST::cElement * operand_33055 = NULL ;
    while (((operand_33055 = enumerator_33055.nextObject ()))) {
      macroValidPointer (operand_33055) ;
      const GGS_semanticDeclarationAST  temp_33111 = operand_33055->mSemanticDeclaration ;
      if (temp_33111.isBuilt ()) {
        typeCategoryMethod__semanticDeclarationAST__decorateAbstractSyntaxTree method = findCategoryMethod__semanticDeclarationAST__decorateAbstractSyntaxTree (temp_33111.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, temp_33111 (HERE), var_cas_semanticContextEX, var_cas_declarationSortedListForGeneration COMMA_SOURCE_FILE_AT_LINE (866)) ;
        }
      }
    }
  }
  const GGS_bool cond_34300 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_34300.isBuiltAndTrue ()) {
    GGS_stringlist  var_cas_predeclarationList = GGS_stringlist ::constructor_emptyList () ;
    {
      GGS_semanticDeclarationSortedListForGeneration::cEnumerator enumerator_33362 (var_cas_declarationSortedListForGeneration, true) ;
      const GGS_semanticDeclarationSortedListForGeneration::cElement * operand_33362 = NULL ;
      while (((operand_33362 = enumerator_33362.nextObject ()))) {
        macroValidPointer (operand_33362) ;
      }
    }
    GGS_string var_cas_headerString = template_filewrapper_typeGenerationTemplate_semanticFileHeader (inLexique, var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (878)), var_cas_predeclarationList) ;
    GGS_string var_cas_implementationString = template_filewrapper_typeGenerationTemplate_semanticFileImplementation (inLexique, var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (882))) ;
    {
      GGS_semanticDeclarationListAST::cEnumerator enumerator_33708 (var_cas_semanticDeclarationList, true) ;
      const GGS_semanticDeclarationListAST::cElement * operand_33708 = NULL ;
      while (((operand_33708 = enumerator_33708.nextObject ()))) {
        macroValidPointer (operand_33708) ;
        const GGS_semanticDeclarationAST  temp_33752 = operand_33708->mSemanticDeclaration ;
        if (temp_33752.isBuilt ()) {
          typeCategoryMethod__semanticDeclarationAST__generateCode method = findCategoryMethod__semanticDeclarationAST__generateCode (temp_33752.galgasObjectRunTimeInfo ()) ;
          if (method != NULL) {
            method (inLexique, temp_33752 (HERE), var_cas_semanticContextEX, var_cas_headerString, var_cas_implementationString COMMA_SOURCE_FILE_AT_LINE (885)) ;
          }
        }
      }
    }
    GGS_string::class_method_generateFile (inLexique, var_cas_inOutputDirectory, (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (893))).operator_concat (GGS_string (".h")), GGS_string ("//"), GGS_string ("\n"
      "\n"), var_cas_headerString, GGS_string ("\n"
      "\n"), GGS_string ("#endif\n") COMMA_SOURCE_FILE_AT_LINE (891)) ;
    GGS_string::class_method_generateFile (inLexique, var_cas_inOutputDirectory, (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (902))).operator_concat (GGS_string (".cpp")), GGS_string ("//"), GGS_string ("\n"
      "\n"), var_cas_implementationString, GGS_string ("\n"
      "\n"), GGS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (900)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_compileSemanticsComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticsCompilation (void) {
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__mapDeclarationAST__enterType, gClassInfoFor__mapDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__mapindexDeclarationAST__enterType, gClassInfoFor__mapindexDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__enumDeclarationAST__enterType, gClassInfoFor__enumDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__filewrapperDeclarationAST__enterType, gClassInfoFor__filewrapperDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__sortedListDeclarationAST__enterType, gClassInfoFor__sortedListDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__structDeclarationAST__enterType, gClassInfoFor__structDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__listDeclarationAST__enterType, gClassInfoFor__listDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__classDeclarationAST__enterType, gClassInfoFor__classDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__externRoutineDeclarationAST__enterType, gClassInfoFor__externRoutineDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__externFunctionDeclarationAST__enterType, gClassInfoFor__externFunctionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__lazyFunctionDeclarationAST__enterType, gClassInfoFor__lazyFunctionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__listmapDeclarationAST__enterType, gClassInfoFor__listmapDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localVariableDeclarationAST__instructionSemanticAnalysis, gClassInfoFor__localVariableDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localVariableDeclarationWithInitializationAST__instructionSemanticAnalysis, gClassInfoFor__localVariableDeclarationWithInitializationAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localVariableDeclarationWithAssignmentAST__instructionSemanticAnalysis, gClassInfoFor__localVariableDeclarationWithAssignmentAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localConstantDeclarationWithSourceExpressionAST__instructionSemanticAnalysis, gClassInfoFor__localConstantDeclarationWithSourceExpressionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localConstantDeclarationWithConstructorCallAST__instructionSemanticAnalysis, gClassInfoFor__localConstantDeclarationWithConstructorCallAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__assignmentInstructionAST__instructionSemanticAnalysis, gClassInfoFor__assignmentInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__appendInstructionAST__instructionSemanticAnalysis, gClassInfoFor__appendInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__sendInstructionAST__instructionSemanticAnalysis, gClassInfoFor__sendInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__foreachInstructionAST__instructionSemanticAnalysis, gClassInfoFor__foreachInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__ifInstructionAST__instructionSemanticAnalysis, gClassInfoFor__ifInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__methodCallInstructionAST__instructionSemanticAnalysis, gClassInfoFor__methodCallInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__modifierCallInstructionAST__instructionSemanticAnalysis, gClassInfoFor__modifierCallInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__errorInstructionAST__instructionSemanticAnalysis, gClassInfoFor__errorInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__warningInstructionAST__instructionSemanticAnalysis, gClassInfoFor__warningInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__routineCallInstructionAST__instructionSemanticAnalysis, gClassInfoFor__routineCallInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__matchInstructionAST__instructionSemanticAnalysis, gClassInfoFor__matchInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__castInstructionAST__instructionSemanticAnalysis, gClassInfoFor__castInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__addInstructionAST__instructionSemanticAnalysis, gClassInfoFor__addInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__removeInstructionAST__instructionSemanticAnalysis, gClassInfoFor__removeInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__incrementInstructionAST__instructionSemanticAnalysis, gClassInfoFor__incrementInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__decrementInstructionAST__instructionSemanticAnalysis, gClassInfoFor__decrementInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__loopInstructionAST__instructionSemanticAnalysis, gClassInfoFor__loopInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__messageInstructionAST__instructionSemanticAnalysis, gClassInfoFor__messageInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__logInstructionAST__instructionSemanticAnalysis, gClassInfoFor__logInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__grammarInstructionAST__instructionSemanticAnalysis, gClassInfoFor__grammarInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__withInstructionAST__instructionSemanticAnalysis, gClassInfoFor__withInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__switchInstructionAST__instructionSemanticAnalysis, gClassInfoFor__switchInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__typeMethodInstructionAST__instructionSemanticAnalysis, gClassInfoFor__typeMethodInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__mapDeclarationAST__semanticAnalysis, gClassInfoFor__mapDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__mapindexDeclarationAST__semanticAnalysis, gClassInfoFor__mapindexDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__enumDeclarationAST__semanticAnalysis, gClassInfoFor__enumDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__filewrapperDeclarationAST__semanticAnalysis, gClassInfoFor__filewrapperDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__sortedListDeclarationAST__semanticAnalysis, gClassInfoFor__sortedListDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__structDeclarationAST__semanticAnalysis, gClassInfoFor__structDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__listDeclarationAST__semanticAnalysis, gClassInfoFor__listDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__classDeclarationAST__semanticAnalysis, gClassInfoFor__classDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__externRoutineDeclarationAST__semanticAnalysis, gClassInfoFor__externRoutineDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__routineDeclarationAST__semanticAnalysis, gClassInfoFor__routineDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__externFunctionDeclarationAST__semanticAnalysis, gClassInfoFor__externFunctionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__functionDeclarationAST__semanticAnalysis, gClassInfoFor__functionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__lazyFunctionDeclarationAST__semanticAnalysis, gClassInfoFor__lazyFunctionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__listmapDeclarationAST__semanticAnalysis, gClassInfoFor__listmapDeclarationAST.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_semanticsCompilation (void) {
  gDispatchTableForMethod__semanticDeclarationAST__enterType.free () ;
  gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis.free () ;
  gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticsCompilation (prologueRoutineFor_semanticsCompilation, epilogueRoutineFor_semanticsCompilation) ;

//---------------------------------------------------------------------------*

