//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'semanticsCompilation.cpp'                       *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      march 8th, 2010, at 23h31'37"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticsCompilation.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticsCompilation.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//             Include directives generated by grammar includes              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "semanticsSLRgrammar.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//  Virtual Table for category method '@semanticDeclarationAST.enterType'    *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticDeclarationAST__enterType> gDispatchTableForMethod__semanticDeclarationAST__enterType ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticDeclarationAST__enterType (typeCategoryMethod__semanticDeclarationAST__enterType inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticDeclarationAST__enterType.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticDeclarationAST__enterType
findCategoryMethod__semanticDeclarationAST__enterType (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticDeclarationAST__enterType result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticDeclarationAST__enterType.count ()) {
    result = gDispatchTableForMethod__semanticDeclarationAST__enterType (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticDeclarationAST__enterType (superClassPtr) ;
      gDispatchTableForMethod__semanticDeclarationAST__enterType.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Category method '@mapDeclarationAST.enterType'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_mapDeclarationAST * operand_2383,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2383 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_2517 (operand_2383->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_2517 = NULL ;
      while (((operand_2517 = enumerator_2517.nextObject ()))) {
        macroValidPointer (operand_2517) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_2517->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (49)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_2517->mAttributeName) ;
      }
    }
    GGS_mapMethodMap  var_cas_insertMethodMap = GGS_mapMethodMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_mapMethodListAST::cEnumerator enumerator_2842 (operand_2383->mInsertMethodList, true) ;
      const GGS_mapMethodListAST::cElement * operand_2842 = NULL ;
      while (((operand_2842 = enumerator_2842.nextObject ()))) {
        macroValidPointer (operand_2842) ;
        const GGS_bool cond_3001 = var_cas_insertMethodMap.reader_hasKey (operand_2842->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (55))) ;
        if (cond_3001.isBuiltAndTrue ()) {
          operand_2842->mMethodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_2842->mMethodName)).operator_concat (GGS_string ("' insert method is already declared")) COMMA_SOURCE_FILE_AT_LINE (57)) ;
        }else if (cond_3001.isBuiltAndFalse ()) {
          var_cas_insertMethodMap.modifier_insertKey (inLexique, operand_2842->mMethodName, operand_2842->mErrorMessage COMMA_SOURCE_FILE_AT_LINE (58)) ;
        }
      }
    }
    GGS_mapMethodMap  var_cas_removeMethodMap = GGS_mapMethodMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_mapMethodListAST::cEnumerator enumerator_3196 (operand_2383->mRemoveMethodList, true) ;
      const GGS_mapMethodListAST::cElement * operand_3196 = NULL ;
      while (((operand_3196 = enumerator_3196.nextObject ()))) {
        macroValidPointer (operand_3196) ;
        const GGS_bool cond_3356 = var_cas_removeMethodMap.reader_hasKey (operand_3196->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (64))) ;
        if (cond_3356.isBuiltAndTrue ()) {
          operand_3196->mMethodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_3196->mMethodName)).operator_concat (GGS_string ("' remove method is already declared")) COMMA_SOURCE_FILE_AT_LINE (66)) ;
        }else if (cond_3356.isBuiltAndFalse ()) {
          const GGS_bool cond_3515 = var_cas_insertMethodMap.reader_hasKey (operand_3196->mMethodName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (66))) ;
          if (cond_3515.isBuiltAndTrue ()) {
            operand_3196->mMethodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_3196->mMethodName)).operator_concat (GGS_string ("' method is already declared as insert method")) COMMA_SOURCE_FILE_AT_LINE (68)) ;
          }else if (cond_3515.isBuiltAndFalse ()) {
            var_cas_removeMethodMap.modifier_insertKey (inLexique, operand_3196->mMethodName, operand_3196->mErrorMessage COMMA_SOURCE_FILE_AT_LINE (69)) ;
          }
        }
      }
    }
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_3727 (operand_2383->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_3727 = NULL ;
      while (((operand_3727 = enumerator_3727.nextObject ()))) {
        macroValidPointer (operand_3727) ;
        const GGS_string var_cas_accessorName = ((GGS_string ("set")).operator_concat (operand_3727->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ())).operator_concat (GGS_string ("ForKey")) ;
        const GGS_bool cond_4042 = var_cas_removeMethodMap.reader_hasKey (var_cas_accessorName) ;
        if (cond_4042.isBuiltAndTrue ()) {
          operand_3727->mAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_accessorName)).operator_concat (GGS_string ("' remove method name is incompatible with accessor of '"))).operator_concat (operand_3727->mAttributeName)).operator_concat (GGS_string ("' attribute")) COMMA_SOURCE_FILE_AT_LINE (77)) ;
        }else if (cond_4042.isBuiltAndFalse ()) {
          const GGS_bool cond_4238 = var_cas_insertMethodMap.reader_hasKey (var_cas_accessorName) ;
          if (cond_4238.isBuiltAndTrue ()) {
            operand_3727->mAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_accessorName)).operator_concat (GGS_string ("' insert method name is incompatible with accessor of '"))).operator_concat (operand_3727->mAttributeName)).operator_concat (GGS_string ("' attribute")) COMMA_SOURCE_FILE_AT_LINE (79)) ;
          }
        }
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_mapType ::constructor_new (inLexique, operand_2383->mMapTypeName, var_cas_attributeList, var_cas_insertMethodMap, var_cas_removeMethodMap COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_2383->mMapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (88)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@mapindexDeclarationAST.enterType'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapindexDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_mapindexDeclarationAST * operand_4612,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4612 != NULL) {
    GGS_typeMapIndex  var_cas_mapTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_4612->mMapTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_mapTypeIndex COMMA_SOURCE_FILE_AT_LINE (98)) ;
    GGS_ACGalgasType  var_cas_t = GGS_mapindexType ::constructor_new (inLexique, operand_4612->mMapIndexTypeName, var_cas_mapTypeIndex, operand_4612->mSearchMethodName COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_4612->mMapIndexTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (105)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@enumDeclarationAST.enterType'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__enumDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_enumDeclarationAST * operand_5148,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5148 != NULL) {
    GGS_enumConstructorMap  var_cas_enumConstructorMap = GGS_enumConstructorMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_lstringlist::cEnumerator enumerator_5290 (operand_5148->mConstantList, true) ;
      const GGS_lstringlist::cElement * operand_5290 = NULL ;
      while (((operand_5290 = enumerator_5290.nextObject ()))) {
        macroValidPointer (operand_5290) ;
        var_cas_enumConstructorMap.modifier_insertKey (inLexique, operand_5290->mValue COMMA_SOURCE_FILE_AT_LINE (116)) ;
      }
    }
    GGS_stringset  var_cas_allConstantSet = GGS_stringset ::constructor_emptySet () ;
    {
      GGS_lstringlist::cEnumerator enumerator_5457 (operand_5148->mConstantList, true) ;
      const GGS_lstringlist::cElement * operand_5457 = NULL ;
      while (((operand_5457 = enumerator_5457.nextObject ()))) {
        macroValidPointer (operand_5457) ;
        var_cas_allConstantSet.addAssign_operation (operand_5457->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (121))) ;
      }
    }
    GGS_enumMessageMap  var_cas_enumMessageMap = GGS_enumMessageMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_enumMessageListAST::cEnumerator enumerator_5611 (operand_5148->mEnumMessageList, true) ;
      const GGS_enumMessageListAST::cElement * operand_5611 = NULL ;
      while (((operand_5611 = enumerator_5611.nextObject ()))) {
        macroValidPointer (operand_5611) ;
        var_cas_enumMessageMap.modifier_insertKey (inLexique, operand_5611->mEnumMessageName COMMA_SOURCE_FILE_AT_LINE (126)) ;
        GGS_stringset  var_cas_messageConstantSet = GGS_stringset ::constructor_emptySet () ;
        {
          GGS_enumMessageAssociationListAST::cEnumerator enumerator_5814 (operand_5611->mMessageAssociationList, true) ;
          const GGS_enumMessageAssociationListAST::cElement * operand_5814 = NULL ;
          while (((operand_5814 = enumerator_5814.nextObject ()))) {
            macroValidPointer (operand_5814) ;
            const GGS_bool cond_6001 = var_cas_messageConstantSet.reader_hasKey (operand_5814->mConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (130))) ;
            if (cond_6001.isBuiltAndTrue ()) {
              operand_5814->mConstantName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (operand_5814->mConstantName)).operator_concat (GGS_string ("' is already named for this message definition")) COMMA_SOURCE_FILE_AT_LINE (132)) ;
            }else if (cond_6001.isBuiltAndFalse ()) {
              const GGS_bool cond_6132 = (var_cas_allConstantSet.reader_hasKey (operand_5814->mConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (132)))).operator_not () ;
              if (cond_6132.isBuiltAndTrue ()) {
                operand_5814->mConstantName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("this constant is not declared") COMMA_SOURCE_FILE_AT_LINE (134)) ;
              }
            }
            var_cas_messageConstantSet.addAssign_operation (operand_5814->mConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (135))) ;
          }
        }
        {
          GGS_stringset::cEnumerator enumerator_6299 (var_cas_messageConstantSet, true) ;
          while (enumerator_6299.hasCurrentObject ()) {
            const GGS_bool cond_6460 = (var_cas_allConstantSet.reader_hasKey (enumerator_6299._key (HERE))).operator_not () ;
            if (cond_6460.isBuiltAndTrue ()) {
              operand_5611->mEnumMessageName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this message definition does not name the '")).operator_concat (enumerator_6299._key (HERE))).operator_concat (GGS_string ("' constant")) COMMA_SOURCE_FILE_AT_LINE (141)) ;
            }
            enumerator_6299.next () ;
          }
        }
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_enumType ::constructor_new (inLexique, operand_5148->mEnumTypeName, var_cas_enumConstructorMap, var_cas_enumMessageMap COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_5148->mEnumTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (150)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@filewrapperDeclarationAST.enterType'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__filewrapperDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_filewrapperDeclarationAST * operand_6841,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_6841 != NULL) {
    GGS_filewrapperTemplateMap  var_cas_filewrapperTemplateMap = GGS_filewrapperTemplateMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    {
      GGS_filewrapperTemplateListAST::cEnumerator enumerator_6979 (operand_6841->mFilewrapperTemplateList, true) ;
      const GGS_filewrapperTemplateListAST::cElement * operand_6979 = NULL ;
      while (((operand_6979 = enumerator_6979.nextObject ()))) {
        macroValidPointer (operand_6979) ;
        GGS_signature  var_cas_templateSignature = GGS_signature ::constructor_emptyList () ;
        {
          GGS_formalInputParameterListAST::cEnumerator enumerator_7083 (operand_6979->mFilewrapperTemplateFormalInputParameters, true) ;
          const GGS_formalInputParameterListAST::cElement * operand_7083 = NULL ;
          while (((operand_7083 = enumerator_7083.nextObject ()))) {
            macroValidPointer (operand_7083) ;
            GGS_typeMapIndex  var_cas_parameterTypeIndex ;
            GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_7083->mFormalParameterTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (163)) ;
            var_cas_templateSignature.addAssign_operation (var_cas_parameterTypeIndex, operand_7083->mFormalParameterName, GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_HERE)) ;
          }
        }
        var_cas_filewrapperTemplateMap.modifier_insertKey (inLexique, operand_6979->mFilewrapperTemplateName, var_cas_templateSignature, operand_6979->mFilewrapperTemplatePath COMMA_SOURCE_FILE_AT_LINE (170)) ;
      }
    }
    var_cas_ioSemanticContext.mFilewrapperMap.modifier_insertKey (inLexique, operand_6841->mFilewrapperName, operand_6841->mFilewrapperPath, operand_6841->mFilewrapperExtensionList, var_cas_filewrapperTemplateMap COMMA_SOURCE_FILE_AT_LINE (176)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@sortedListDeclarationAST.enterType'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sortedListDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_sortedListDeclarationAST * operand_7862,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7862 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_7996 (operand_7862->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_7996 = NULL ;
      while (((operand_7996 = enumerator_7996.nextObject ()))) {
        macroValidPointer (operand_7996) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_7996->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (193)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_7996->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_listGalgasType ::constructor_new (inLexique, operand_7862->mSortedListTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_7862->mSortedListTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (201)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@structDeclarationAST.enterType'              *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__structDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_structDeclarationAST * operand_8551,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8551 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_8685 (operand_8551->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_8685 = NULL ;
      while (((operand_8685 = enumerator_8685.nextObject ()))) {
        macroValidPointer (operand_8685) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_8685->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (213)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_8685->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_structGalgasType ::constructor_new (inLexique, operand_8551->mStructTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_8551->mStructTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (221)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@listDeclarationAST.enterType'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_listDeclarationAST * operand_9232,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9232 != NULL) {
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_9366 (operand_9232->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_9366 = NULL ;
      while (((operand_9366 = enumerator_9366.nextObject ()))) {
        macroValidPointer (operand_9366) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_9366->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (233)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_9366->mAttributeName) ;
      }
    }
    GGS_ACGalgasType  var_cas_t = GGS_listGalgasType ::constructor_new (inLexique, operand_9232->mListTypeName, var_cas_attributeList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_9232->mListTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (241)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@classDeclarationAST.enterType'              *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__classDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_classDeclarationAST * operand_9908,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9908 != NULL) {
    GGS_typeMapIndex  var_cas_superClassIndex ;
    const GGS_bool cond_10101 = (operand_9908->mSuperClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (251))).operator_isEqual (GGS_string ("")) ;
    if (cond_10101.isBuiltAndTrue ()) {
      var_cas_superClassIndex = GGS_typeMapIndex ::constructor_null (inLexique COMMA_HERE) ;
    }else if (cond_10101.isBuiltAndFalse ()) {
      GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_9908->mSuperClassName, var_cas_ioSemanticContext.mTypeMap, var_cas_superClassIndex COMMA_SOURCE_FILE_AT_LINE (254)) ;
      GGS_typeMapIndex  var_cas_classIndex ;
      GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_9908->mClassTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_classIndex COMMA_SOURCE_FILE_AT_LINE (257)) ;
      var_cas_ioSemanticContext.mDescendantClassListMap.addAssign_operation (operand_9908->mSuperClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (258)), var_cas_classIndex) ;
    }
    GGS_attributeList  var_cas_attributeList = GGS_attributeList ::constructor_emptyList () ;
    {
      GGS_attributeInCollectionListAST::cEnumerator enumerator_10564 (operand_9908->mAttributeList, true) ;
      const GGS_attributeInCollectionListAST::cElement * operand_10564 = NULL ;
      while (((operand_10564 = enumerator_10564.nextObject ()))) {
        macroValidPointer (operand_10564) ;
        GGS_typeMapIndex  var_cas_attributeTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_10564->mAttributeTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (264)) ;
        var_cas_attributeList.addAssign_operation (var_cas_attributeTypeIndex, operand_10564->mAttributeName) ;
      }
    }
    GGS_classMethodList  var_cas_methodList = GGS_classMethodList ::constructor_emptyList () ;
    GGS_classGalgasType  var_cas_t = GGS_classGalgasType ::constructor_new (inLexique, operand_9908->mIsAbstract, operand_9908->mClassTypeName, var_cas_superClassIndex, var_cas_attributeList, var_cas_methodList COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_9908->mClassTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (277)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@externRoutineDeclarationAST.enterType'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externRoutineDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_externRoutineDeclarationAST * operand_11238,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11238 != NULL) {
    GGS_signature  var_cas_routineSignature = GGS_signature ::constructor_emptyList () ;
    {
      GGS_formalParameterListAST::cEnumerator enumerator_11410 (operand_11238->mFormalParameterList, true) ;
      const GGS_formalParameterListAST::cElement * operand_11410 = NULL ;
      while (((operand_11410 = enumerator_11410.nextObject ()))) {
        macroValidPointer (operand_11410) ;
        GGS_typeMapIndex  var_cas_parameterTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_11410->mFormalParameterTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (289)) ;
        var_cas_routineSignature.addAssign_operation (var_cas_parameterTypeIndex, operand_11410->mFormalParameterName, operand_11410->mFormalParameterPassingMode) ;
      }
    }
    var_cas_ioSemanticContext.mRoutineMap.modifier_insertKey (inLexique, operand_11238->mRoutineName, var_cas_routineSignature COMMA_SOURCE_FILE_AT_LINE (293)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@externFunctionDeclarationAST.enterType'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externFunctionDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_externFunctionDeclarationAST * operand_11942,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11942 != NULL) {
    GGS_signature  var_cas_functionSignature = GGS_signature ::constructor_emptyList () ;
    {
      GGS_formalParameterListAST::cEnumerator enumerator_12116 (operand_11942->mFormalParameterList, true) ;
      const GGS_formalParameterListAST::cElement * operand_12116 = NULL ;
      while (((operand_12116 = enumerator_12116.nextObject ()))) {
        macroValidPointer (operand_12116) ;
        GGS_typeMapIndex  var_cas_parameterTypeIndex ;
        GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_12116->mFormalParameterTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (305)) ;
        var_cas_functionSignature.addAssign_operation (var_cas_parameterTypeIndex, operand_12116->mFormalParameterName, operand_12116->mFormalParameterPassingMode) ;
      }
    }
    GGS_typeMapIndex  var_cas_resultTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_11942->mResultTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (310)) ;
    var_cas_ioSemanticContext.mFunctionMap.modifier_insertKey (inLexique, operand_11942->mFunctionName, var_cas_functionSignature, var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (312)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@lazyFunctionDeclarationAST.enterType'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lazyFunctionDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_lazyFunctionDeclarationAST * operand_12819,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12819 != NULL) {
    GGS_typeMapIndex  var_cas_resultTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_12819->mResultTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (322)) ;
    var_cas_ioSemanticContext.mFunctionMap.modifier_insertKey (inLexique, operand_12819->mFunctionName, GGS_signature ::constructor_emptyList (), var_cas_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (324)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@listmapDeclarationAST.enterType'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listmapDeclarationAST__enterType (C_Compiler & inLexique,
                                const cPtr_listmapDeclarationAST * operand_13293,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13293 != NULL) {
    GGS_typeMapIndex  var_cas_associatedListTypeIndex ;
    GGS_typeMapIndex::class_method_makeRegularIndex (inLexique, operand_13293->mAssociatedListTypeName, var_cas_ioSemanticContext.mTypeMap, var_cas_associatedListTypeIndex COMMA_SOURCE_FILE_AT_LINE (333)) ;
    GGS_ACGalgasType  var_cas_t = GGS_listmapGalgasType ::constructor_new (inLexique, operand_13293->mListmapTypeName, var_cas_associatedListTypeIndex COMMA_HERE) ;
    var_cas_ioSemanticContext.mTypeMap.modifier_insertKey (inLexique, operand_13293->mListmapTypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (339)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "buildSemanticContext"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildSemanticContext (C_Compiler & inLexique,
                                const GGS_semanticDeclarationListAST   var_cas_inSemanticDeclarationList,
                                const GGS_location   var_cas_inEndOfSourceFile,
                                GGS_semanticContext & var_cas_outSemanticContext COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_buildSemanticContext at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_typeMap  var_cas_typeMap = function_constructBuiltinTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (350)) ;
  var_cas_outSemanticContext = GGS_semanticContext::constructor_new (var_cas_typeMap, GGS_routineMap ::constructor_emptyMap (inLexique COMMA_HERE), GGS_functionMap ::constructor_emptyMap (inLexique COMMA_HERE), GGS_descendantClassListMap::constructor_emptyMap (), GGS_filewrapperMap ::constructor_emptyMap (inLexique COMMA_HERE)) ;
  {
    GGS_semanticDeclarationListAST::cEnumerator enumerator_14313 (var_cas_inSemanticDeclarationList, true) ;
    const GGS_semanticDeclarationListAST::cElement * operand_14313 = NULL ;
    while (((operand_14313 = enumerator_14313.nextObject ()))) {
      macroValidPointer (operand_14313) ;
      const GGS_semanticDeclarationAST  temp_14352 = operand_14313->mSemanticDeclaration ;
      if (temp_14352.isBuilt ()) {
        typeCategoryMethod__semanticDeclarationAST__enterType method = findCategoryMethod__semanticDeclarationAST__enterType (temp_14352.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, temp_14352 (HERE), var_cas_outSemanticContext COMMA_SOURCE_FILE_AT_LINE (361)) ;
        }
      }
    }
  }
  const GGS_bool cond_15123 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_15123.isBuiltAndTrue ()) {
    GGS_stringlist  var_cas_undefinedClasses = var_cas_outSemanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (365)).reader_unsolvedIndexKeyStringList (inLexique COMMA_SOURCE_FILE_AT_LINE (365)) ;
    const GGS_bool cond_14820 = (var_cas_undefinedClasses.reader_length ()).operator_isEqual (GGS_uint (1U)) ;
    if (cond_14820.isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage = GGS_string ("there is 1 undefined type:") ;
      {
        GGS_stringlist::cEnumerator enumerator_14696 (var_cas_undefinedClasses, true) ;
        const GGS_stringlist::cElement * operand_14696 = NULL ;
        while (((operand_14696 = enumerator_14696.nextObject ()))) {
          macroValidPointer (operand_14696) ;
          var_cas_errorMessage.appendCString ("\n"
            "-  @") ;
          var_cas_errorMessage.dotAssign_operation (operand_14696->mValue) ;
        }
      }
      var_cas_inEndOfSourceFile.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (372)) ;
    }else if (cond_14820.isBuiltAndFalse ()) {
      const GGS_bool cond_15112 = (var_cas_undefinedClasses.reader_length ()).operator_strictSup (GGS_uint (1U)) ;
      if (cond_15112.isBuiltAndTrue ()) {
        GGS_string var_cas_errorMessage = ((GGS_string ("there are ")).operator_concat (var_cas_undefinedClasses.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (373)))).operator_concat (GGS_string (" undefined types:")) ;
        {
          GGS_stringlist::cEnumerator enumerator_14990 (var_cas_undefinedClasses, true) ;
          const GGS_stringlist::cElement * operand_14990 = NULL ;
          while (((operand_14990 = enumerator_14990.nextObject ()))) {
            macroValidPointer (operand_14990) ;
            var_cas_errorMessage.appendCString ("\n"
              "-  @") ;
            var_cas_errorMessage.dotAssign_operation (operand_14990->mValue) ;
          }
        }
        var_cas_inEndOfSourceFile.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (378)) ;
      }
    }
  }
  const GGS_bool cond_15497 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_15497.isBuiltAndTrue ()) {
    {
      GGS_typeMap::cEnumerator enumerator_15362 (var_cas_outSemanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (385)), true) ;
      const GGS_typeMap::cElement * operand_15362 = NULL ;
      while (((operand_15362 = enumerator_15362.nextObject ()))) {
        macroValidPointer (operand_15362) ;
        const GGS_ACGalgasType  temp_15431 = operand_15362->mInfo.mType ;
        if (temp_15431.isBuilt ()) {
          temp_15431 (HERE)->method_checkTypeCrossReferences (inLexique, var_cas_outSemanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (386)).reader_count () COMMA_SOURCE_FILE_AT_LINE (386)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_buildSemanticContext\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@semanticInstructionAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis> gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis (typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis
findCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis.count ()) {
    result = gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis (superClassPtr) ;
      gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableDeclarationAST.instructionSemanticAnalysis' *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclarationAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localVariableDeclarationAST * operand_16177,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16177 != NULL) {
    inLexique.printMessage (GGS_string ("@localVariableDeclarationAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (406)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableDeclarationWithInitializationAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclarationWithInitializationAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localVariableDeclarationWithInitializationAST * operand_16482,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16482 != NULL) {
    inLexique.printMessage (GGS_string ("@localVariableDeclarationWithInitializationAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (414)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableDeclarationWithAssignmentAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclarationWithAssignmentAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localVariableDeclarationWithAssignmentAST * operand_16801,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16801 != NULL) {
    inLexique.printMessage (GGS_string ("@localVariableDeclarationWithAssignmentAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (422)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localConstantDeclarationWithSourceExpressionAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localConstantDeclarationWithSourceExpressionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localConstantDeclarationWithSourceExpressionAST * operand_17123,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17123 != NULL) {
    inLexique.printMessage (GGS_string ("@localConstantDeclarationWithSourceExpressionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (431)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localConstantDeclarationWithConstructorCallAST.instructionSemanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localConstantDeclarationWithConstructorCallAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_localConstantDeclarationWithConstructorCallAST * operand_17449,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17449 != NULL) {
    inLexique.printMessage (GGS_string ("@localConstantDeclarationWithConstructorCallAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (439)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@assignmentInstructionAST.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__assignmentInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_assignmentInstructionAST * operand_17752,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17752 != NULL) {
    inLexique.printMessage (GGS_string ("@assignmentInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (447)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@appendInstructionAST.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__appendInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_appendInstructionAST * operand_18029,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18029 != NULL) {
    inLexique.printMessage (GGS_string ("@appendInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (455)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@sendInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sendInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_sendInstructionAST * operand_18300,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18300 != NULL) {
    inLexique.printMessage (GGS_string ("@sendInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (463)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@foreachInstruction.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__foreachInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_foreachInstruction * operand_18569,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18569 != NULL) {
    inLexique.printMessage (GGS_string ("@foreachInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (471)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@ifInstruction.instructionSemanticAnalysis'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__ifInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_ifInstruction * operand_18833,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18833 != NULL) {
    inLexique.printMessage (GGS_string ("@ifInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (479)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@methodCallInstruction.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__methodCallInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_methodCallInstruction * operand_19100,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19100 != NULL) {
    inLexique.printMessage (GGS_string ("@methodCallInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (487)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@modifierCallInstruction.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__modifierCallInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_modifierCallInstruction * operand_19377,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19377 != NULL) {
    inLexique.printMessage (GGS_string ("@modifierCallInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (495)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@errorInstruction.instructionSemanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__errorInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_errorInstruction * operand_19649,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19649 != NULL) {
    inLexique.printMessage (GGS_string ("@errorInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (503)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@warningInstruction.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__warningInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_warningInstruction * operand_19916,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19916 != NULL) {
    inLexique.printMessage (GGS_string ("@warningInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (511)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@routineCallInstruction.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__routineCallInstruction__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_routineCallInstruction * operand_20189,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20189 != NULL) {
    inLexique.printMessage (GGS_string ("@routineCallInstruction instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (519)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@matchInstructionAST.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__matchInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_matchInstructionAST * operand_20463,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20463 != NULL) {
    inLexique.printMessage (GGS_string ("@matchInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (527)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@castInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__castInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_castInstructionAST * operand_20733,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20733 != NULL) {
    inLexique.printMessage (GGS_string ("@castInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (535)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@addInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__addInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_addInstructionAST * operand_21001,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21001 != NULL) {
    inLexique.printMessage (GGS_string ("@addInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (543)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@removeInstructionAST.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__removeInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_removeInstructionAST * operand_21271,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21271 != NULL) {
    inLexique.printMessage (GGS_string ("@removeInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (551)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@incrementInstructionAST.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__incrementInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_incrementInstructionAST * operand_21547,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21547 != NULL) {
    inLexique.printMessage (GGS_string ("@incrementInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (559)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@decrementInstructionAST.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__decrementInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_decrementInstructionAST * operand_21826,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21826 != NULL) {
    inLexique.printMessage (GGS_string ("@decrementInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (567)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@loopInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__loopInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_loopInstructionAST * operand_22100,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22100 != NULL) {
    inLexique.printMessage (GGS_string ("@loopInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (575)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@messageInstructionAST.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__messageInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_messageInstructionAST * operand_22372,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22372 != NULL) {
    inLexique.printMessage (GGS_string ("@messageInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (583)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@logInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__logInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_logInstructionAST * operand_22643,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22643 != NULL) {
    inLexique.printMessage (GGS_string ("@logInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (591)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@grammarInstructionAST.instructionSemanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__grammarInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_grammarInstructionAST * operand_22914,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22914 != NULL) {
    inLexique.printMessage (GGS_string ("@grammarInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (599)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@withInstructionAST.instructionSemanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__withInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_withInstructionAST * operand_23186,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23186 != NULL) {
    inLexique.printMessage (GGS_string ("@withInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (607)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@switchInstructionAST.instructionSemanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__switchInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_switchInstructionAST * operand_23457,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23457 != NULL) {
    inLexique.printMessage (GGS_string ("@switchInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (615)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@typeMethodInstructionAST.instructionSemanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__typeMethodInstructionAST__instructionSemanticAnalysis (C_Compiler & inLexique,
                                const cPtr_typeMethodInstructionAST * operand_23734,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23734 != NULL) {
    inLexique.printMessage (GGS_string ("@typeMethodInstructionAST instructionSemanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (623)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@semanticDeclarationAST.semanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticDeclarationAST__semanticAnalysis> gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticDeclarationAST__semanticAnalysis (typeCategoryMethod__semanticDeclarationAST__semanticAnalysis inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticDeclarationAST__semanticAnalysis
findCategoryMethod__semanticDeclarationAST__semanticAnalysis (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticDeclarationAST__semanticAnalysis result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis.count ()) {
    result = gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticDeclarationAST__semanticAnalysis (superClassPtr) ;
      gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@mapDeclarationAST.semanticAnalysis'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_mapDeclarationAST * operand_24494,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_24494 != NULL) {
    inLexique.printMessage (GGS_string ("@mapDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (641)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@mapindexDeclarationAST.semanticAnalysis'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__mapindexDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_mapindexDeclarationAST * operand_24744,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_24744 != NULL) {
    inLexique.printMessage (GGS_string ("@mapindexDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (649)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@enumDeclarationAST.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__enumDeclarationAST__semanticAnalysis (C_Compiler &,
                                const cPtr_enumDeclarationAST * operand_24995,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_24995 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@filewrapperDeclarationAST.semanticAnalysis'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__filewrapperDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_filewrapperDeclarationAST * operand_25215,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25215 != NULL) {
    inLexique.printMessage (GGS_string ("@filewrapperDeclarationAST.semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (665)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@sortedListDeclarationAST.semanticAnalysis'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sortedListDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_sortedListDeclarationAST * operand_25475,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25475 != NULL) {
    inLexique.printMessage (GGS_string ("@sortedListDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (673)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@structDeclarationAST.semanticAnalysis'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__structDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_structDeclarationAST * operand_25730,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25730 != NULL) {
    inLexique.printMessage (GGS_string ("@structDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (681)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@listDeclarationAST.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_listDeclarationAST * operand_25979,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25979 != NULL) {
    inLexique.printMessage (GGS_string ("@listDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (689)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@classDeclarationAST.semanticAnalysis'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__classDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_classDeclarationAST * operand_26227,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26227 != NULL) {
    inLexique.printMessage (GGS_string ("@classDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (697)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@externRoutineDeclarationAST.semanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externRoutineDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_externRoutineDeclarationAST * operand_26484,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26484 != NULL) {
    inLexique.printMessage (GGS_string ("@externRoutineDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (705)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@routineDeclarationAST.semanticAnalysis'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__routineDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_routineDeclarationAST * operand_26743,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26743 != NULL) {
    inLexique.printMessage (GGS_string ("@routineDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (713)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@externFunctionDeclarationAST.semanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__externFunctionDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_externFunctionDeclarationAST * operand_27127,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_27127 != NULL) {
    inLexique.printMessage (GGS_string ("@externFunctionDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (724)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@functionDeclarationAST.semanticAnalysis'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__functionDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_functionDeclarationAST * operand_27388,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_27388 != NULL) {
    inLexique.printMessage (GGS_string ("@functionDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (732)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@lazyFunctionDeclarationAST.semanticAnalysis'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lazyFunctionDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_lazyFunctionDeclarationAST * operand_27772,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_27772 != NULL) {
    inLexique.printMessage (GGS_string ("@lazyFunctionDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (743)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@listmapDeclarationAST.semanticAnalysis'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listmapDeclarationAST__semanticAnalysis (C_Compiler & inLexique,
                                const cPtr_listmapDeclarationAST * operand_28030,
                                GGS_semanticContext & /* var_cas_ioSemanticContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_28030 != NULL) {
    inLexique.printMessage (GGS_string ("@listmapDeclarationAST semanticAnalysis\n") COMMA_SOURCE_FILE_AT_LINE (751)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "parseSemanticComponent"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_parseSemanticComponent (C_Compiler & inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct,
                                GGS_semanticsComponentAST  & var_cas_outSemanticsComponentRoot COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_parseSemanticComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_basename = var_cas_inSourceFile.ggs_string ().reader_lastPathComponent ().reader_stringByDeletingPathExtension () ;
  GGS_lstring  var_cas_basenameKey = GGS_lstring ::constructor_new (inLexique, var_cas_basename, GGS_location (inLexique) COMMA_HERE) ;
  const GGS_bool cond_29042 = var_cas_ioParsedComponentStruct.reader_mParsedSemanticsComponentMap (inLexique COMMA_SOURCE_FILE_AT_LINE (767)).reader_hasKey (var_cas_basename) ;
  if (cond_29042.isBuiltAndTrue ()) {
    const GGS_parsedSemanticsComponentMap  temp_28992 = var_cas_ioParsedComponentStruct.reader_mParsedSemanticsComponentMap (inLexique COMMA_SOURCE_FILE_AT_LINE (768)) ;
    if (temp_28992.isBuilt ()) {
      temp_28992 (HERE)->method_searchKey (inLexique, var_cas_basenameKey, var_cas_outSemanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (768)) ;
    }
  }else if (cond_29042.isBuiltAndFalse ()) {
    const GGS_string _depExtension = GGS_string ("") ;
    const GGS_string _depPath = GGS_string ("") ;
    if (_depExtension.isBuilt () && _depPath.isBuilt ()) {
      C_Grammar_semanticsSLRgrammar::_performSourceFileParsing_ (inLexique,
                                    _depExtension.string (),
                                    _depPath.string (),
                                    NULL,
                                    var_cas_inSourceFile,
                                    var_cas_outSemanticsComponentRoot
                                    COMMA_SOURCE_FILE_AT_LINE (770)) ;
    }
    var_cas_ioParsedComponentStruct.mParsedSemanticsComponentMap.modifier_insertKey (inLexique, var_cas_basenameKey, var_cas_outSemanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (771)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_parseSemanticComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "recursivelyImportSemanticComponent"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_recursivelyImportSemanticComponent (C_Compiler & inLexique,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct,
                                GGS_semanticDeclarationListAST  & var_cas_ioSemanticDeclarationList,
                                GGS_stringset  & var_cas_ioParsedFileSet,
                                const GGS_lstringlist   var_cas_inListOfFilesToParse,
                                const GGS_string  var_cas_inDirectory COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_recursivelyImportSemanticComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  {
    GGS_lstringlist::cEnumerator enumerator_29615 (var_cas_inListOfFilesToParse, true) ;
    const GGS_lstringlist::cElement * operand_29615 = NULL ;
    while (((operand_29615 = enumerator_29615.nextObject ()))) {
      macroValidPointer (operand_29615) ;
      const GGS_bool cond_30543 = (var_cas_ioParsedFileSet.reader_hasKey (operand_29615->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (785)))).operator_not () ;
      if (cond_30543.isBuiltAndTrue ()) {
        var_cas_ioParsedFileSet.addAssign_operation (operand_29615->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (786))) ;
        GGS_string var_cas_extension = operand_29615->mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (787)).reader_pathExtension () ;
        const GGS_bool cond_30530 = (var_cas_extension).operator_isEqual (GGS_string ("gSemantics")) ;
        if (cond_30530.isBuiltAndTrue ()) {
          GGS_lstring  var_cas_filePath = GGS_lstring ::constructor_new (inLexique, operand_29615->mValue.ggs_string ().reader_absolutePathFromPath (var_cas_inDirectory), operand_29615->mValue.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (791)) COMMA_HERE) ;
          GGS_semanticsComponentAST  var_cas_semanticsComponentRoot ;
          ::routine_parseSemanticComponent (inLexique,  var_cas_filePath,  var_cas_ioParsedComponentStruct,  var_cas_semanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (794)) ;
          var_cas_ioSemanticDeclarationList = (var_cas_ioSemanticDeclarationList).operator_concat (var_cas_semanticsComponentRoot.reader_mSemanticDeclarations (inLexique COMMA_SOURCE_FILE_AT_LINE (799)).reader_mSemanticDeclarationList (inLexique COMMA_SOURCE_FILE_AT_LINE (799))) ;
          ::routine_recursivelyImportSemanticComponent (inLexique,  var_cas_ioParsedComponentStruct,  var_cas_ioSemanticDeclarationList,  var_cas_ioParsedFileSet,  var_cas_semanticsComponentRoot.reader_mImportedComponentFileNameList (inLexique COMMA_SOURCE_FILE_AT_LINE (804)),  var_cas_inDirectory COMMA_SOURCE_FILE_AT_LINE (800)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_recursivelyImportSemanticComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "compileSemanticsComponent"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileSemanticsComponent (C_Compiler & inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                const GGS_string  var_cas_inOutputDirectory,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_compileSemanticsComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_semanticsComponentAST  var_cas_semanticsComponentRoot ;
  ::routine_parseSemanticComponent (inLexique,  var_cas_inSourceFile,  var_cas_ioParsedComponentStruct,  var_cas_semanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (821)) ;
  const GGS_string var_cas_basename = var_cas_inSourceFile.ggs_string ().reader_lastPathComponent ().reader_stringByDeletingPathExtension () ;
  const GGS_lstring  var_cas_componentName = var_cas_semanticsComponentRoot.reader_mSemanticsComponentName (inLexique COMMA_SOURCE_FILE_AT_LINE (828)) ;
  const GGS_bool cond_31433 = (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (829))).operator_isNotEqual (var_cas_basename) ;
  if (cond_31433.isBuiltAndTrue ()) {
    var_cas_componentName.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, ((((GGS_string ("GALGAS checks "
      "the component name ('")).operator_concat (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (831)))).operator_concat (GGS_string ("') against the source file base name ('"))).operator_concat (var_cas_basename)).operator_concat (GGS_string ("'): they should be identical")) COMMA_SOURCE_FILE_AT_LINE (833)) ;
  }
  GGS_semanticDeclarationListAST  var_cas_semanticDeclarationList = var_cas_semanticsComponentRoot.reader_mSemanticDeclarations (inLexique COMMA_SOURCE_FILE_AT_LINE (836)).reader_mSemanticDeclarationList (inLexique COMMA_SOURCE_FILE_AT_LINE (836)) ;
  GGS_stringset  var_cas_parsedFileSet = GGS_stringset ::constructor_setWithString (var_cas_inSourceFile.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (837))) ;
  ::routine_recursivelyImportSemanticComponent (inLexique,  var_cas_ioParsedComponentStruct,  var_cas_semanticDeclarationList,  var_cas_parsedFileSet,  var_cas_semanticsComponentRoot.reader_mImportedComponentFileNameList (inLexique COMMA_SOURCE_FILE_AT_LINE (842)),  var_cas_inSourceFile.ggs_string ().reader_stringByDeletingLastPathComponent () COMMA_SOURCE_FILE_AT_LINE (838)) ;
  GGS_semanticContext var_cas_semanticContext ;
  ::routine_buildSemanticContext (inLexique,  var_cas_semanticDeclarationList,  var_cas_semanticsComponentRoot.reader_mEndOfSourceFile (inLexique COMMA_SOURCE_FILE_AT_LINE (847)),  var_cas_semanticContext COMMA_SOURCE_FILE_AT_LINE (847)) ;
  const GGS_bool cond_32394 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_32394.isBuiltAndTrue ()) {
    {
      GGS_typeMap::cEnumerator enumerator_32171 (var_cas_semanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (850)), true) ;
      const GGS_typeMap::cElement * operand_32171 = NULL ;
      while (((operand_32171 = enumerator_32171.nextObject ()))) {
        macroValidPointer (operand_32171) ;
        GGS_constructorMap  var_cas_constructorMap = (findCategoryReader__ACGalgasType__constructorMap (operand_32171->mInfo.mType (HERE)->galgasRTTI ()) (inLexique, operand_32171->mInfo.mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (851))) ;
        GGS_readerMap  var_cas_readerMap = (findCategoryReader__ACGalgasType__readerMap (operand_32171->mInfo.mType (HERE)->galgasRTTI ()) (inLexique, operand_32171->mInfo.mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (852))) ;
        GGS_modifierMap  var_cas_modifierMap = (findCategoryReader__ACGalgasType__modifierMap (operand_32171->mInfo.mType (HERE)->galgasRTTI ()) (inLexique, operand_32171->mInfo.mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (853))) ;
      }
    }
  }
  {
    GGS_semanticDeclarationListAST::cEnumerator enumerator_32464 (var_cas_semanticDeclarationList, true) ;
    const GGS_semanticDeclarationListAST::cElement * operand_32464 = NULL ;
    while (((operand_32464 = enumerator_32464.nextObject ()))) {
      macroValidPointer (operand_32464) ;
      const GGS_semanticDeclarationAST  temp_32510 = operand_32464->mSemanticDeclaration ;
      if (temp_32510.isBuilt ()) {
        typeCategoryMethod__semanticDeclarationAST__semanticAnalysis method = findCategoryMethod__semanticDeclarationAST__semanticAnalysis (temp_32510.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, temp_32510 (HERE), var_cas_semanticContext COMMA_SOURCE_FILE_AT_LINE (858)) ;
        }
      }
    }
  }
  const GGS_bool cond_33536 = (GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U)) ;
  if (cond_33536.isBuiltAndTrue ()) {
    GGS_string var_cas_headerString = template_filewrapper_typeGenerationTemplate_semanticFileHeader (inLexique, var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (865)), var_cas_semanticDeclarationList) ;
    GGS_string var_cas_implementationString = template_filewrapper_typeGenerationTemplate_semanticFileImplementation (inLexique, var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (869))) ;
    {
      GGS_semanticDeclarationListAST::cEnumerator enumerator_32946 (var_cas_semanticDeclarationList, true) ;
      const GGS_semanticDeclarationListAST::cElement * operand_32946 = NULL ;
      while (((operand_32946 = enumerator_32946.nextObject ()))) {
        macroValidPointer (operand_32946) ;
        const GGS_semanticDeclarationAST  temp_32990 = operand_32946->mSemanticDeclaration ;
        if (temp_32990.isBuilt ()) {
          typeCategoryMethod__semanticDeclarationAST__generateCode method = findCategoryMethod__semanticDeclarationAST__generateCode (temp_32990.galgasObjectRunTimeInfo ()) ;
          if (method != NULL) {
            method (inLexique, temp_32990 (HERE), var_cas_semanticContext, var_cas_headerString, var_cas_implementationString COMMA_SOURCE_FILE_AT_LINE (872)) ;
          }
        }
      }
    }
    GGS_string::class_method_generateFile (inLexique, var_cas_inOutputDirectory, (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (880))).operator_concat (GGS_string (".h")), GGS_string ("//"), GGS_string ("\n"
      "\n"), var_cas_headerString, GGS_string ("\n"
      "\n"), GGS_string ("#endif\n") COMMA_SOURCE_FILE_AT_LINE (878)) ;
    GGS_string::class_method_generateFile (inLexique, var_cas_inOutputDirectory, (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (889))).operator_concat (GGS_string (".cpp")), GGS_string ("//"), GGS_string ("\n"
      "\n"), var_cas_implementationString, GGS_string ("\n"
      "\n"), GGS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (887)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_compileSemanticsComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticsCompilation (void) {
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__mapDeclarationAST__enterType, gClassInfoFor__mapDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__mapindexDeclarationAST__enterType, gClassInfoFor__mapindexDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__enumDeclarationAST__enterType, gClassInfoFor__enumDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__filewrapperDeclarationAST__enterType, gClassInfoFor__filewrapperDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__sortedListDeclarationAST__enterType, gClassInfoFor__sortedListDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__structDeclarationAST__enterType, gClassInfoFor__structDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__listDeclarationAST__enterType, gClassInfoFor__listDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__classDeclarationAST__enterType, gClassInfoFor__classDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__externRoutineDeclarationAST__enterType, gClassInfoFor__externRoutineDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__externFunctionDeclarationAST__enterType, gClassInfoFor__externFunctionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__lazyFunctionDeclarationAST__enterType, gClassInfoFor__lazyFunctionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__enterType ((typeCategoryMethod__semanticDeclarationAST__enterType) category_method__listmapDeclarationAST__enterType, gClassInfoFor__listmapDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localVariableDeclarationAST__instructionSemanticAnalysis, gClassInfoFor__localVariableDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localVariableDeclarationWithInitializationAST__instructionSemanticAnalysis, gClassInfoFor__localVariableDeclarationWithInitializationAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localVariableDeclarationWithAssignmentAST__instructionSemanticAnalysis, gClassInfoFor__localVariableDeclarationWithAssignmentAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localConstantDeclarationWithSourceExpressionAST__instructionSemanticAnalysis, gClassInfoFor__localConstantDeclarationWithSourceExpressionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__localConstantDeclarationWithConstructorCallAST__instructionSemanticAnalysis, gClassInfoFor__localConstantDeclarationWithConstructorCallAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__assignmentInstructionAST__instructionSemanticAnalysis, gClassInfoFor__assignmentInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__appendInstructionAST__instructionSemanticAnalysis, gClassInfoFor__appendInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__sendInstructionAST__instructionSemanticAnalysis, gClassInfoFor__sendInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__foreachInstruction__instructionSemanticAnalysis, gClassInfoFor__foreachInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__ifInstruction__instructionSemanticAnalysis, gClassInfoFor__ifInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__methodCallInstruction__instructionSemanticAnalysis, gClassInfoFor__methodCallInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__modifierCallInstruction__instructionSemanticAnalysis, gClassInfoFor__modifierCallInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__errorInstruction__instructionSemanticAnalysis, gClassInfoFor__errorInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__warningInstruction__instructionSemanticAnalysis, gClassInfoFor__warningInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__routineCallInstruction__instructionSemanticAnalysis, gClassInfoFor__routineCallInstruction.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__matchInstructionAST__instructionSemanticAnalysis, gClassInfoFor__matchInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__castInstructionAST__instructionSemanticAnalysis, gClassInfoFor__castInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__addInstructionAST__instructionSemanticAnalysis, gClassInfoFor__addInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__removeInstructionAST__instructionSemanticAnalysis, gClassInfoFor__removeInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__incrementInstructionAST__instructionSemanticAnalysis, gClassInfoFor__incrementInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__decrementInstructionAST__instructionSemanticAnalysis, gClassInfoFor__decrementInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__loopInstructionAST__instructionSemanticAnalysis, gClassInfoFor__loopInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__messageInstructionAST__instructionSemanticAnalysis, gClassInfoFor__messageInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__logInstructionAST__instructionSemanticAnalysis, gClassInfoFor__logInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__grammarInstructionAST__instructionSemanticAnalysis, gClassInfoFor__grammarInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__withInstructionAST__instructionSemanticAnalysis, gClassInfoFor__withInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__switchInstructionAST__instructionSemanticAnalysis, gClassInfoFor__switchInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis ((typeCategoryMethod__semanticInstructionAST__instructionSemanticAnalysis) category_method__typeMethodInstructionAST__instructionSemanticAnalysis, gClassInfoFor__typeMethodInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__mapDeclarationAST__semanticAnalysis, gClassInfoFor__mapDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__mapindexDeclarationAST__semanticAnalysis, gClassInfoFor__mapindexDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__enumDeclarationAST__semanticAnalysis, gClassInfoFor__enumDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__filewrapperDeclarationAST__semanticAnalysis, gClassInfoFor__filewrapperDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__sortedListDeclarationAST__semanticAnalysis, gClassInfoFor__sortedListDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__structDeclarationAST__semanticAnalysis, gClassInfoFor__structDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__listDeclarationAST__semanticAnalysis, gClassInfoFor__listDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__classDeclarationAST__semanticAnalysis, gClassInfoFor__classDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__externRoutineDeclarationAST__semanticAnalysis, gClassInfoFor__externRoutineDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__routineDeclarationAST__semanticAnalysis, gClassInfoFor__routineDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__externFunctionDeclarationAST__semanticAnalysis, gClassInfoFor__externFunctionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__functionDeclarationAST__semanticAnalysis, gClassInfoFor__functionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__lazyFunctionDeclarationAST__semanticAnalysis, gClassInfoFor__lazyFunctionDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticDeclarationAST__semanticAnalysis ((typeCategoryMethod__semanticDeclarationAST__semanticAnalysis) category_method__listmapDeclarationAST__semanticAnalysis, gClassInfoFor__listmapDeclarationAST.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_semanticsCompilation (void) {
  gDispatchTableForMethod__semanticDeclarationAST__enterType.free () ;
  gDispatchTableForMethod__semanticInstructionAST__instructionSemanticAnalysis.free () ;
  gDispatchTableForMethod__semanticDeclarationAST__semanticAnalysis.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticsCompilation (prologueRoutineFor_semanticsCompilation, epilogueRoutineFor_semanticsCompilation) ;

//---------------------------------------------------------------------------*

