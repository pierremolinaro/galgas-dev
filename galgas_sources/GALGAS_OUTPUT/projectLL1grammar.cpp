//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'projectLL1grammar.cpp'                        *
//             Generated by version version GALGAS_BETA_VERSION              *
//                     february 11th, 2012, at 16h36'6"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "utilities/MF_MemoryControl.h"
#include "galgas2/C_galgas_CLI_Options.h"

#include "files/C_FileManager.h"

//---------------------------------------------------------------------------*

#include "projectLL1grammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//              L L ( 1 )    P R O D U C T I O N    R U L E S                *
//                                                                           *
//---------------------------------------------------------------------------*

#define TERMINAL(t)     ((t)+1)
#define NONTERMINAL(nt) ((-nt)-1)
#define END_PRODUCTION  (0)

static const PMSInt16 gProductions [] = {
// At index 0 : <project_component_start_symbol>, in file 'projectModelBuilder.ggs', line 32
  TERMINAL (C_Lexique_galgas_5F_scanner::kToken_project) // $project$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) // $identifier$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) // $->$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) // $literal_string$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) // $:$
, NONTERMINAL (1) // <select_projectModelBuilder_0>
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) // $end$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_project) // $project$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) // $;$
, END_PRODUCTION
//---- Added productions from 'select' and 'repeat' instructions
// At index 10 : <select_projectModelBuilder_0>, in file 'projectModelBuilder.ggs', line 44
, END_PRODUCTION
// At index 11 : <select_projectModelBuilder_0>, in file 'projectModelBuilder.ggs', line 44
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_feature) // $feature$
, NONTERMINAL (2) // <select_projectModelBuilder_1>
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) // $;$
, NONTERMINAL (1) // <select_projectModelBuilder_0>
, END_PRODUCTION
// At index 16 : <select_projectModelBuilder_0>, in file 'projectModelBuilder.ggs', line 44
, NONTERMINAL (3) // <select_projectModelBuilder_2>
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) // $literal_string$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) // $;$
, NONTERMINAL (1) // <select_projectModelBuilder_0>
, END_PRODUCTION
// At index 21 : <select_projectModelBuilder_1>, in file 'projectModelBuilder.ggs', line 47
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) // $identifier$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) // $:$
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) // $literal_string$
, END_PRODUCTION
// At index 25 : <select_projectModelBuilder_1>, in file 'projectModelBuilder.ggs', line 47
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) // $literal_string$
, END_PRODUCTION
// At index 27 : <select_projectModelBuilder_2>, in file 'projectModelBuilder.ggs', line 59
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_extern) // $extern$
, END_PRODUCTION
// At index 29 : <select_projectModelBuilder_2>, in file 'projectModelBuilder.ggs', line 59
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_gui) // $gui$
, END_PRODUCTION
// At index 31 : <select_projectModelBuilder_2>, in file 'projectModelBuilder.ggs', line 59
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_lexique) // $lexique$
, END_PRODUCTION
// At index 33 : <select_projectModelBuilder_2>, in file 'projectModelBuilder.ggs', line 59
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_option) // $option$
, END_PRODUCTION
// At index 35 : <select_projectModelBuilder_2>, in file 'projectModelBuilder.ggs', line 59
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) // $semantics$
, END_PRODUCTION
// At index 37 : <select_projectModelBuilder_2>, in file 'projectModelBuilder.ggs', line 59
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_syntax) // $syntax$
, END_PRODUCTION
// At index 39 : <select_projectModelBuilder_2>, in file 'projectModelBuilder.ggs', line 59
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_grammar) // $grammar$
, END_PRODUCTION
// At index 41 : <select_projectModelBuilder_2>, in file 'projectModelBuilder.ggs', line 59
, TERMINAL (C_Lexique_galgas_5F_scanner::kToken_program) // $program$
, END_PRODUCTION
// At index 43 : <>, in file '.ggs', line 0
, NONTERMINAL (0) // <project_component_start_symbol>
, END_PRODUCTION
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     P R O D U C T I O N    N A M E S                      *
//                                                                           *
//---------------------------------------------------------------------------*

static const cProductionNameDescriptor gProductionNames [15] = {
 {"<project_component_start_symbol>", "projectModelBuilder", 0}, // at index 0
 {"<select_projectModelBuilder_0>", "projectModelBuilder", 10}, // at index 1
 {"<select_projectModelBuilder_0>", "projectModelBuilder", 11}, // at index 2
 {"<select_projectModelBuilder_0>", "projectModelBuilder", 16}, // at index 3
 {"<select_projectModelBuilder_1>", "projectModelBuilder", 21}, // at index 4
 {"<select_projectModelBuilder_1>", "projectModelBuilder", 25}, // at index 5
 {"<select_projectModelBuilder_2>", "projectModelBuilder", 27}, // at index 6
 {"<select_projectModelBuilder_2>", "projectModelBuilder", 29}, // at index 7
 {"<select_projectModelBuilder_2>", "projectModelBuilder", 31}, // at index 8
 {"<select_projectModelBuilder_2>", "projectModelBuilder", 33}, // at index 9
 {"<select_projectModelBuilder_2>", "projectModelBuilder", 35}, // at index 10
 {"<select_projectModelBuilder_2>", "projectModelBuilder", 37}, // at index 11
 {"<select_projectModelBuilder_2>", "projectModelBuilder", 39}, // at index 12
 {"<select_projectModelBuilder_2>", "projectModelBuilder", 41}, // at index 13
 {"<>", "", 43} // at index 14
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            L L ( 1 )    P R O D U C T I O N    I N D E X E S              *
//                                                                           *
//---------------------------------------------------------------------------*

static const PMSInt16 gProductionIndexes [15] = {
0, // index 0 : <project_component_start_symbol>, in file 'projectModelBuilder.ggs', line 32
10, // index 1 : <select_projectModelBuilder_0>, in file 'projectModelBuilder.ggs', line 44
11, // index 2 : <select_projectModelBuilder_0>, in file 'projectModelBuilder.ggs', line 44
16, // index 3 : <select_projectModelBuilder_0>, in file 'projectModelBuilder.ggs', line 44
21, // index 4 : <select_projectModelBuilder_1>, in file 'projectModelBuilder.ggs', line 47
25, // index 5 : <select_projectModelBuilder_1>, in file 'projectModelBuilder.ggs', line 47
27, // index 6 : <select_projectModelBuilder_2>, in file 'projectModelBuilder.ggs', line 59
29, // index 7 : <select_projectModelBuilder_2>, in file 'projectModelBuilder.ggs', line 59
31, // index 8 : <select_projectModelBuilder_2>, in file 'projectModelBuilder.ggs', line 59
33, // index 9 : <select_projectModelBuilder_2>, in file 'projectModelBuilder.ggs', line 59
35, // index 10 : <select_projectModelBuilder_2>, in file 'projectModelBuilder.ggs', line 59
37, // index 11 : <select_projectModelBuilder_2>, in file 'projectModelBuilder.ggs', line 59
39, // index 12 : <select_projectModelBuilder_2>, in file 'projectModelBuilder.ggs', line 59
41, // index 13 : <select_projectModelBuilder_2>, in file 'projectModelBuilder.ggs', line 59
43 // index 14 : <>, in file '.ggs', line 0
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//      L L ( 1 )    F I R S T    P R O D U C T I O N    I N D E X E S       *
//                                                                           *
//---------------------------------------------------------------------------*

static const PMSInt16 gFirstProductionIndexes [6] = {
0, // at 0 : <project_component_start_symbol>
1, // at 1 : <select_projectModelBuilder_0>
4, // at 2 : <select_projectModelBuilder_1>
6, // at 3 : <select_projectModelBuilder_2>
14, // at 4 : <>
0} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               L L ( 1 )    D E C I S I O N    T A B L E S                 *
//                                                                           *
//---------------------------------------------------------------------------*

static const PMSInt16 gDecision [] = {
// At index 0 : <project_component_start_symbol> only one production, no choice
  -1,
//---- Added non terminal symbols from 'select' and 'repeat' instructions
// At index 1 : <select_projectModelBuilder_0>
C_Lexique_galgas_5F_scanner::kToken_end, -1, // Choice 1
C_Lexique_galgas_5F_scanner::kToken_feature, -1, // Choice 2
C_Lexique_galgas_5F_scanner::kToken_extern, C_Lexique_galgas_5F_scanner::kToken_gui, C_Lexique_galgas_5F_scanner::kToken_lexique, C_Lexique_galgas_5F_scanner::kToken_option, C_Lexique_galgas_5F_scanner::kToken_semantics, C_Lexique_galgas_5F_scanner::kToken_syntax, C_Lexique_galgas_5F_scanner::kToken_grammar, C_Lexique_galgas_5F_scanner::kToken_program, -1, // Choice 3
  -1,
// At index 15 : <select_projectModelBuilder_1>
C_Lexique_galgas_5F_scanner::kToken_identifier, -1, // Choice 1
C_Lexique_galgas_5F_scanner::kToken_literal_5F_string, -1, // Choice 2
  -1,
// At index 20 : <select_projectModelBuilder_2>
C_Lexique_galgas_5F_scanner::kToken_extern, -1, // Choice 1
C_Lexique_galgas_5F_scanner::kToken_gui, -1, // Choice 2
C_Lexique_galgas_5F_scanner::kToken_lexique, -1, // Choice 3
C_Lexique_galgas_5F_scanner::kToken_option, -1, // Choice 4
C_Lexique_galgas_5F_scanner::kToken_semantics, -1, // Choice 5
C_Lexique_galgas_5F_scanner::kToken_syntax, -1, // Choice 6
C_Lexique_galgas_5F_scanner::kToken_grammar, -1, // Choice 7
C_Lexique_galgas_5F_scanner::kToken_program, -1, // Choice 8
  -1,
// At index 37 : <> only one production, no choice
  -1,
0} ;

//---------------------------------------------------------------------------*
//                                                                           *
//       L L ( 1 )    D E C I S I O N    T A B L E S    I N D E X E S        *
//                                                                           *
//---------------------------------------------------------------------------*

static const PMSInt16 gDecisionIndexes [6] = {
0, // at 0 : <project_component_start_symbol>
1, // at 1 : <select_projectModelBuilder_0>
15, // at 2 : <select_projectModelBuilder_1>
20, // at 3 : <select_projectModelBuilder_2>
37, // at 4 : <>
0} ;

//---------------------------------------------------------------------------*
//                                                                           *
//       'project_component_start_symbol' non terminal implementation        *
//                                                                           *
//---------------------------------------------------------------------------*

void cGrammar_projectLL_31_grammar::nt_project_5F_component_5F_start_5F_symbol_parse (C_Lexique_galgas_5F_scanner * inLexique) {
  rule_projectModelBuilder_project_5F_component_5F_start_5F_symbol_i0_parse(inLexique) ;
}

void cGrammar_projectLL_31_grammar::nt_project_5F_component_5F_start_5F_symbol_indexing (C_Lexique_galgas_5F_scanner * inLexique) {
  rule_projectModelBuilder_project_5F_component_5F_start_5F_symbol_i0_indexing(inLexique) ;
}

void cGrammar_projectLL_31_grammar::nt_project_5F_component_5F_start_5F_symbol_ (GALGAS_projectComponentAST & parameter_1,
                                C_Lexique_galgas_5F_scanner * inLexique) {
  rule_projectModelBuilder_project_5F_component_5F_start_5F_symbol_i0_(parameter_1, inLexique) ;
}

void cGrammar_projectLL_31_grammar::performIndexing (C_Compiler * inCompiler,
             const C_String & inSourceFilePath) {
  C_Lexique_galgas_5F_scanner * scanner = NULL ;
  macroMyNew (scanner, C_Lexique_galgas_5F_scanner (inCompiler, "", "", inSourceFilePath COMMA_HERE)) ;
  scanner->enableIndexing () ;
  if (scanner->sourceText () != NULL) {
    scanner->mPerformGeneration = inCompiler->mPerformGeneration ;
    const bool ok = scanner->performTopDownParsing (gProductions, gProductionNames, gProductionIndexes,
                                                    gFirstProductionIndexes, gDecision, gDecisionIndexes, 43) ;
    if (ok) {
      cGrammar_projectLL_31_grammar grammar ;
      grammar.nt_project_5F_component_5F_start_5F_symbol_indexing (scanner) ;
    }
    scanner->generateIndexFile () ;
  }
  macroDetachSharedObject (scanner) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                   Grammar start symbol implementation                     *
//                                                                           *
//---------------------------------------------------------------------------*

void cGrammar_projectLL_31_grammar::_performSourceFileParsing_ (C_Compiler * inCompiler,
                                GALGAS_lstring inFilePath,
                                GALGAS_projectComponentAST &  parameter_1
                                COMMA_LOCATION_ARGS) {
  if (inFilePath.isValid ()) {
    const GALGAS_string filePathAsString = inFilePath.reader_string (HERE) ;
    C_String filePath = filePathAsString.stringValue () ;
    if (! C_FileManager::isAbsolutePath (filePath)) {
      filePath = inCompiler->sourceFilePath ().stringByDeletingLastPathComponent ().stringByAppendingPathComponent (filePath) ;
    }
    if (C_FileManager::fileExistsAtPath (filePath)) {
    C_Lexique_galgas_5F_scanner * scanner = NULL ;
    macroMyNew (scanner, C_Lexique_galgas_5F_scanner (inCompiler, "", "", filePath COMMA_HERE)) ;
    if (scanner->sourceText () != NULL) {
      scanner->mPerformGeneration = inCompiler->mPerformGeneration ;
      const bool ok = scanner->performTopDownParsing (gProductions, gProductionNames, gProductionIndexes,
                                                      gFirstProductionIndexes, gDecision, gDecisionIndexes, 43) ;
      if (ok && ! executionModeIsSyntaxAnalysisOnly ()) {
        cGrammar_projectLL_31_grammar grammar ;
          grammar.nt_project_5F_component_5F_start_5F_symbol_ (parameter_1, scanner) ;
      }
    }else{
      C_String message ;
      message << "the '" << filePath << "' file exists, but cannot be read" ;
      const GALGAS_location errorLocation (inFilePath.reader_location (THERE)) ;
      inCompiler->semanticErrorAtLocation (errorLocation, message COMMA_THERE) ;
      parameter_1.drop () ;
    }
    macroDetachSharedObject (scanner) ;
  }else{
    C_String message ;
    message << "the '" << filePath << "' file does not exist" ;
    const GALGAS_location errorLocation (inFilePath.reader_location (THERE)) ;
    inCompiler->semanticErrorAtLocation (errorLocation, message COMMA_THERE) ;
    parameter_1.drop () ;
    }
  }
}

//---------------------------------------------------------------------------*

void cGrammar_projectLL_31_grammar::_performSourceStringParsing_ (C_Compiler * inCompiler,
                                GALGAS_string inSourceString,
                                GALGAS_projectComponentAST &  parameter_1
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (inSourceString.isValid ()) {
    const C_String sourceString = inSourceString.stringValue () ;
    C_Lexique_galgas_5F_scanner * scanner = NULL ;
    macroMyNew (scanner, C_Lexique_galgas_5F_scanner (inCompiler, sourceString, "" COMMA_HERE)) ;
    scanner->mPerformGeneration = inCompiler->mPerformGeneration ;
    const bool ok = scanner->performTopDownParsing (gProductions, gProductionNames, gProductionIndexes,
                                                    gFirstProductionIndexes, gDecision, gDecisionIndexes, 43) ;
    if (ok && ! executionModeIsSyntaxAnalysisOnly ()) {
      cGrammar_projectLL_31_grammar grammar ;
      grammar.nt_project_5F_component_5F_start_5F_symbol_ (parameter_1, scanner) ;
    }
    macroDetachSharedObject (scanner) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     'select_projectModelBuilder_0' added non terminal implementation      *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt32 cGrammar_projectLL_31_grammar::select_projectModelBuilder_0 (C_Lexique_galgas_5F_scanner * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     'select_projectModelBuilder_1' added non terminal implementation      *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt32 cGrammar_projectLL_31_grammar::select_projectModelBuilder_1 (C_Lexique_galgas_5F_scanner * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     'select_projectModelBuilder_2' added non terminal implementation      *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt32 cGrammar_projectLL_31_grammar::select_projectModelBuilder_2 (C_Lexique_galgas_5F_scanner * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------*

