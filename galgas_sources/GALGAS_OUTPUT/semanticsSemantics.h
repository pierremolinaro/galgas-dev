//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'semanticsSemantics.h'                         *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     december 12th, 2009, at 16h5'36"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef semanticsSemantics_DEFINED
#define semanticsSemantics_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

// Include imported semantics
#include "semanticsTypes.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_variableStateAutomaton ;
class GGS_variableMap ;
class GGS_routineMap ;
class GGS_functionMap ;
class GGS_classIndexList ;
class GGS_descendantClassListMap ;
class GGS_semanticContext ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Class for 'variableStateAutomaton' Enumeration               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_variableStateAutomaton ;

//---------------------------------------------------------------------------*

class GGS_variableStateAutomaton : public GGS__root {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_constantInputFormalParameterDefined, enum_constantInputFormalParameterUsed, enum_inputFormalParameterDefined, enum_inputFormalParameterDropped, enum_inputFormalParameterUsed, enum_localConstantDeclared, enum_localConstantDefined, enum_localContantUsed, enum_localVariableDeclared, enum_localVariableDropped, enum_localVariableUsed} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const { return mValue ; }

//--- Default constructor
  public : inline GGS_variableStateAutomaton (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_variableStateAutomaton (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline PMUInt16 bitCount (void) { return 4 ; }

//--- Is built ?
  public : bool isBuilt (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_variableStateAutomaton castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Construction from GALGAS constructor
  public : static inline GGS_variableStateAutomaton  constructor_constantInputFormalParameterDefined (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_variableStateAutomaton (enum_constantInputFormalParameterDefined) ;
  }
  public : static inline GGS_variableStateAutomaton  constructor_inputFormalParameterDefined (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_variableStateAutomaton (enum_inputFormalParameterDefined) ;
  }
  public : static inline GGS_variableStateAutomaton  constructor_localConstantDeclared (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_variableStateAutomaton (enum_localConstantDeclared) ;
  }
  public : static inline GGS_variableStateAutomaton  constructor_localVariableDeclared (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_variableStateAutomaton (enum_localVariableDeclared) ;
  }

//--- Readers

//--- Modifiers
  public : void modifier_writeAccess (C_CompilerEx & inLexique,
                                const GGS_location  
                                COMMA_LOCATION_ARGS) ;
  public : void modifier_readAccess (C_CompilerEx & inLexique,
                                const GGS_location  
                                COMMA_LOCATION_ARGS) ;
  public : void modifier_readWriteAccess (C_CompilerEx & inLexique,
                                const GGS_location  
                                COMMA_LOCATION_ARGS) ;
  public : void modifier_dropAccess (C_CompilerEx & inLexique,
                                const GGS_location  
                                COMMA_LOCATION_ARGS) ;

//--- Methods

//--- Operators
  public : GGS_variableStateAutomaton operator_endOfRepeatedBranch (C_CompilerEx & inLexique,
           const GGS_variableStateAutomaton & inOperand,
                                const GGS_location  
                                COMMA_LOCATION_ARGS) const ;

//--- 'description' reader
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--- Drop operation
  public : inline void drop (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool operator_isEqual (const GGS_variableStateAutomaton inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_variableStateAutomaton inOperand) const ;
  public : GGS_bool operator_infOrEqual (const GGS_variableStateAutomaton inOperand) const ;
  public : GGS_bool operator_supOrEqual (const GGS_variableStateAutomaton inOperand) const ;
  public : GGS_bool operator_strictInf (const GGS_variableStateAutomaton inOperand) const ;
  public : GGS_bool operator_strictSup (const GGS_variableStateAutomaton inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Map '@variableMap'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_variableMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_variableMap ;

//---------------------------------------------------------------------------*

class GGS_variableMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_variableMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_variableMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_variableMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_variableMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_variableMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_variableMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_variableMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertListOfEntitiesLocalVariable [] ;

  public : static const utf32 kInsertMessage_insertSingleEntityLocalVariable [] ;

  public : static const utf32 kInsertMessage_insertEntityAttributeLocalVariable [] ;

  public : static const utf32 kInsertMessage_insertInArgument [] ;

  public : static const utf32 kInsertMessage_insertUnusedInArgument [] ;

  public : static const utf32 kInsertMessage_insertConstInArgument [] ;

  public : static const utf32 kInsertMessage_insertUsedConstInArgument [] ;

  public : static const utf32 kInsertMessage_insertUsedConstInArgumentNoShadow [] ;

  public : static const utf32 kInsertMessage_insertUnusedConstInArgument [] ;

  public : static const utf32 kInsertMessage_insertLocalVariable [] ;

  public : static const utf32 kInsertMessage_insertOutArgument [] ;

  public : static const utf32 kInsertMessage_insertOutProperty [] ;

  public : static const utf32 kInsertMessage_insertInOutArgument [] ;

  public : static const utf32 kInsertMessage_insertUsedInOutArgument [] ;

  public : static const utf32 kInsertMessage_insertUnusedInOutArgument [] ;

//--- 'insertListOfEntitiesLocalVariable' Insert Modifier
  public : void modifier_insertListOfEntitiesLocalVariable (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

//--- 'insertSingleEntityLocalVariable' Insert Modifier
  public : void modifier_insertSingleEntityLocalVariable (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

//--- 'insertEntityAttributeLocalVariable' Insert Modifier
  public : void modifier_insertEntityAttributeLocalVariable (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

//--- 'insertInArgument' Insert Modifier
  public : void modifier_insertInArgument (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

//--- 'insertUnusedInArgument' Insert Modifier
  public : void modifier_insertUnusedInArgument (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

//--- 'insertConstInArgument' Insert Modifier
  public : void modifier_insertConstInArgument (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

//--- 'insertUsedConstInArgument' Insert Modifier
  public : void modifier_insertUsedConstInArgument (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

//--- 'insertUsedConstInArgumentNoShadow' Insert Modifier
  public : void modifier_insertUsedConstInArgumentNoShadow (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

//--- 'insertUnusedConstInArgument' Insert Modifier
  public : void modifier_insertUnusedConstInArgument (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

//--- 'insertLocalVariable' Insert Modifier
  public : void modifier_insertLocalVariable (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

//--- 'insertOutArgument' Insert Modifier
  public : void modifier_insertOutArgument (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

//--- 'insertOutProperty' Insert Modifier
  public : void modifier_insertOutProperty (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

//--- 'insertInOutArgument' Insert Modifier
  public : void modifier_insertInOutArgument (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

//--- 'insertUsedInOutArgument' Insert Modifier
  public : void modifier_insertUsedInOutArgument (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

//--- 'insertUnusedInOutArgument' Insert Modifier
  public : void modifier_insertUnusedInOutArgument (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchForReadOnlyAccess [] ;

  public : static const utf32 kSearchMessage_searchForDestructiveReadAccess [] ;

  public : static const utf32 kSearchMessage_searchForReadWriteAccess [] ;

  public : static const utf32 kSearchMessage_searchForWriteAccess [] ;

//--- 'searchForReadOnlyAccess' Search Method
  public : void method_searchForReadOnlyAccess (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- 'searchForDestructiveReadAccess' Search Method
  public : void method_searchForDestructiveReadAccess (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- 'searchForReadWriteAccess' Search Method
  public : void method_searchForReadWriteAccess (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- 'searchForWriteAccess' Search Method
  public : void method_searchForWriteAccess (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_variableMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_variableMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_variableMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_variableMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_variableMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Map '@routineMap'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_routineMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_routineMap ;

//---------------------------------------------------------------------------*

class GGS_routineMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_routineMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_routineMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_routineMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_routineMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_routineMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_routineMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_routineMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_signature &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_signature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_signature & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_signature & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_routineMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_routineMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_routineMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_routineMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_routineMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_signature   & _mRoutineSignature (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Map '@functionMap'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_functionMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_functionMap ;

//---------------------------------------------------------------------------*

class GGS_functionMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_functionMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_functionMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_functionMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_functionMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_functionMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_functionMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_functionMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_signature &  inParameter0,
                                const GGS_typeMapIndex &  inParameter1 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_signature   & outParameter0,
                                GGS_typeMapIndex   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_signature & inParameter0,
                                   const GGS_typeMapIndex & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_signature & outParameter0,
                                   GGS_typeMapIndex & outParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_functionMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_functionMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_functionMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_functionMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_functionMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_signature   & _mFunctionSignature (LOCATION_ARGS) const ;
    public : /* const */ GGS_typeMapIndex   & _mResultTypeIndex (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@classIndexList'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_classIndexList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_classIndexList ;

//---------------------------------------------------------------------------*

class GGS_classIndexList : public AC_galgas_list {
  public : typedef elementOf_GGS_classIndexList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_classIndexList constructor_emptyList (void) ;
  public : static GGS_classIndexList constructor_listWithValue (const GGS_typeMapIndex & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_classIndexList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_classIndexList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_classIndexList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_classIndexList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_typeMapIndex & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_typeMapIndex & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_typeMapIndex & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_typeMapIndex & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_classIndexList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_typeMapIndex & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_classIndexList operator_concat (const GGS_classIndexList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_typeMapIndex & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_typeMapIndex & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_typeMapIndex & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_typeMapIndex 
  reader_mClassMapindexAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMClassMapindexAtIndex (C_CompilerEx & inLexique,
                              const GGS_typeMapIndex  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_classIndexList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_classIndexList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_typeMapIndex   & _mClassMapindex (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map list '@descendantClassListMap'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_descendantClassListMap ;

//---------------------------------------------------------------------------*

class GGS_descendantClassListMap : public AC_galgas_listmap {
//--- Node class
  public : class cElement : public cPtrListMapObject {
 //--- List attribute
    public : GGS_classIndexList mListObject ;
 //--- Constructor
    public : cElement (LOCATION_ARGS) ;
 //--- Description
    public : virtual C_String performDescription (const PMSInt32 inIndentation) const ;
    public : virtual cPtrObject * cloneObject (LOCATION_ARGS) ;
    public : virtual bool isEqual (const cPtrListMapObject * inOperand) const ;
  } ;

//--- 'emptyMap' constructor
  public : static GGS_descendantClassListMap
  constructor_emptyMap (void) ;

//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_descendantClassListMap inOperand) ; //Don't pass 'inOperand' by reference !

//--- Handling '.' GALGAS operator
  public : GGS_descendantClassListMap operator_concat (const GGS_descendantClassListMap & inOperand) const ;

//--- Handle '+=' operator
  public : void
  addAssign_operation (const GGS_string & inKey,
                        const GGS_typeMapIndex & inAttribute0) ;

//--- For 'description' reader
  protected : virtual const char * _typeNameForDescriptionReader (void) const ;

//--- Reader 'allKeys'
  public : GGS_stringset
  reader_allKeys (C_CompilerEx & inLexique
                  COMMA_LOCATION_ARGS) const ;

//--- Reader 'keyList'
  public : GGS_stringlist
  reader_keyList (C_CompilerEx & inLexique
                  COMMA_LOCATION_ARGS) const ;

//--- Reader 'listForKey'
  public : GGS_classIndexList
  reader_listForKey (C_CompilerEx & inLexique,
                     const GGS_string & inKey
                     COMMA_LOCATION_ARGS) const ;

//--- Enumerator
  public : class cEnumerator : public cAbstractDictionaryEnumerator {
  //--- Contructor
    public : cEnumerator (const GGS_descendantClassListMap & inListMap,
                          const bool inAscending) ;
  //--- Associated object accessor
    public : const GGS_classIndexList & _object (LOCATION_ARGS) const ;
  } ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_descendantClassListMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@variableMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class e_variableMap {

} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_variableMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_variableMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_variableMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_variableMap * nextObject (void) const { return (elementOf_GGS_variableMap *) mNextItem ; }
  public : inline elementOf_GGS_variableMap * infObject (void) const { return (elementOf_GGS_variableMap *) mInfPtr ; }
  public : inline elementOf_GGS_variableMap * supObject (void) const { return (elementOf_GGS_variableMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_variableMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of map '@routineMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class e_routineMap {
  public : GGS_signature  mRoutineSignature ;

  public : e_routineMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_routineMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_routineMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_routineMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_routineMap * nextObject (void) const { return (elementOf_GGS_routineMap *) mNextItem ; }
  public : inline elementOf_GGS_routineMap * infObject (void) const { return (elementOf_GGS_routineMap *) mInfPtr ; }
  public : inline elementOf_GGS_routineMap * supObject (void) const { return (elementOf_GGS_routineMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_routineMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@functionMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class e_functionMap {
  public : GGS_signature  mFunctionSignature ;
  public : GGS_typeMapIndex  mResultTypeIndex ;

  public : e_functionMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_functionMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_functionMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_functionMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_functionMap * nextObject (void) const { return (elementOf_GGS_functionMap *) mNextItem ; }
  public : inline elementOf_GGS_functionMap * infObject (void) const { return (elementOf_GGS_functionMap *) mInfPtr ; }
  public : inline elementOf_GGS_functionMap * supObject (void) const { return (elementOf_GGS_functionMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_functionMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@classIndexList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_classIndexList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_typeMapIndex  mClassMapindex ;
//--- Constructor
  public : elementOf_GGS_classIndexList (const GGS_typeMapIndex & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_classIndexList * nextObject (void) const { return (elementOf_GGS_classIndexList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_classIndexList * previousObject (void) const { return (elementOf_GGS_classIndexList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_classIndexList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Declarations for 'semanticContext' struct                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_semanticContext ;

//---------------------------------------------------------------------------*

class GGS_semanticContext : public GGS__root {
//--- Default constructor
  public : GGS_semanticContext (void) ;

//--- Virtual destructor
  public : virtual ~GGS_semanticContext (void) ;

//--- Handle 'drop' instruction
  public : void drop (void) ;

//--- Method 'isBuilt'
  public : bool isBuilt (void) const ;

//--- Support for method call handling in GALGAS
  public : inline const GGS_semanticContext * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
  public : inline GGS_semanticContext * operator () (UNUSED_LOCATION_ARGS) { return this ; }

//--- Comparison
  public : GGS_bool operator_isEqual (const GGS_semanticContext & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_semanticContext & inOperand) const ;

//--- Reader 'description'
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_semanticContext castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Galgas 'new' destructor
  public : static GGS_semanticContext constructor_new (const GGS_typeMap & argument_0,
                 const GGS_routineMap & argument_1,
                 const GGS_functionMap & argument_2,
                 const GGS_descendantClassListMap& argument_3) ;

//--- Readers
  public : inline GGS_typeMap 
  reader_mTypeMap (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mTypeMap ;
  }

  public : inline GGS_routineMap 
  reader_mRoutineMap (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mRoutineMap ;
  }

  public : inline GGS_functionMap 
  reader_mFunctionMap (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mFunctionMap ;
  }

  public : inline GGS_descendantClassListMap
  reader_mDescendantClassListMap (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mDescendantClassListMap ;
  }

//--- Attributes
  public : GGS_typeMap  mTypeMap ;
  public : GGS_routineMap  mRoutineMap ;
  public : GGS_functionMap  mFunctionMap ;
  public : GGS_descendantClassListMap mDescendantClassListMap ;
} ;

//---------------------------------------------------------------------------*

#endif
