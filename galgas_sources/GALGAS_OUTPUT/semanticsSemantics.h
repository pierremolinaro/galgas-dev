//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'semanticsSemantics.h'                         *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                      june 12th, 2007, at 15h29'32"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef semanticsSemantics_DEFINED
#define semanticsSemantics_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/C_GGS_Object.h"
#include "galgas/GGS_location.h"
#include "galgas/GGS_lbool.h"
#include "galgas/GGS_lchar.h"
#include "galgas/GGS_lstring.h"
#include "galgas/GGS_ldouble.h"
#include "galgas/GGS_luint.h"
#include "galgas/GGS_lsint.h"
#include "galgas/GGS_luint64.h"
#include "galgas/GGS_lsint64.h"
#include "galgas/GGS_stringset.h"
#include "galgas/GGS_binaryset.h"
#include "galgas/predefined_types.h"
#include "galgas/AC_galgas_class.h"
#include "galgas/AC_galgas_entity.h"
#include "galgas/AC_galgas_domain.h"
#include "galgas/AC_galgas_mapindex.h"
#include "galgas/AC_galgas_map.h"
#include "galgas/AC_galgas_list.h"
#include "galgas/AC_galgas_sortedlist.h"

//---------------------------------------------------------------------------*

#include "galgas/C_Lexique.h"

// Include imported semantics
#include "commonSemantics.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_ACGalgasType ;
class cPtr_ACGalgasType ;
class GGS_typeMap ;
class GGS_typeMapIndex ;
class GGS_signature ;
class GGS_routineMap ;
class GGS_attributeList ;
class GGS_locationGalgasType ;
class cPtr_locationGalgasType ;
class GGS_stringGalgasType ;
class cPtr_stringGalgasType ;
class GGS_charGalgasType ;
class cPtr_charGalgasType ;
class GGS_boolGalgasType ;
class cPtr_boolGalgasType ;
class GGS_uintGalgasType ;
class cPtr_uintGalgasType ;
class GGS_sintGalgasType ;
class cPtr_sintGalgasType ;
class GGS_uint64GalgasType ;
class cPtr_uint64GalgasType ;
class GGS_sint64GalgasType ;
class cPtr_sint64GalgasType ;
class GGS_doubleGalgasType ;
class cPtr_doubleGalgasType ;
class GGS_lstringGalgasType ;
class cPtr_lstringGalgasType ;
class GGS_lcharGalgasType ;
class cPtr_lcharGalgasType ;
class GGS_lboolGalgasType ;
class cPtr_lboolGalgasType ;
class GGS_luintGalgasType ;
class cPtr_luintGalgasType ;
class GGS_lsintGalgasType ;
class cPtr_lsintGalgasType ;
class GGS_luint64GalgasType ;
class cPtr_luint64GalgasType ;
class GGS_lsint64GalgasType ;
class cPtr_lsint64GalgasType ;
class GGS_ldoubleGalgasType ;
class cPtr_ldoubleGalgasType ;
class GGS_stringsetGalgasType ;
class cPtr_stringsetGalgasType ;
class GGS_binarysetGalgasType ;
class cPtr_binarysetGalgasType ;
class GGS_classMethodList ;
class GGS_classGalgasType ;
class cPtr_classGalgasType ;
class GGS_listGalgasType ;
class cPtr_listGalgasType ;
class GGS_mapindexType ;
class cPtr_mapindexType ;
class GGS_mapType ;
class cPtr_mapType ;
class GGS_enumType ;
class cPtr_enumType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_ACGalgasType'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_ACGalgasType : public AC_galgas_class {
//--- Default constructor
  public : inline GGS_ACGalgasType (void) : AC_galgas_class () {}

//--- Pointer assignment constructor
  public : GGS_ACGalgasType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_ACGalgasType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_ACGalgasType * getPtr (void) const {
    return (cPtr_ACGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_ACGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_ACGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_ACGalgasType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                              Map '@typeMap'                               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeMap ;

class GGS_typeMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeMap element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_typeMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_typeMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_ACGalgasType &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_ACGalgasType   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_ACGalgasType & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_ACGalgasType & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_typeMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_typeMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map index '@typeMapIndex'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeMapIndex : public AC_galgas_mapindex {
//--- 'null' constructor
  public : static GGS_typeMapIndex
  constructor_null (C_Compiler & inLexique
                    COMMA_LOCATION_ARGS) ;

//--- Comparison operators
  public : GGS_bool _operator_isEqual (const GGS_typeMapIndex & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_typeMapIndex & inOperand) const ;

//--- 'description' reader declaration
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Type Method 'makeRegularIndex'
  public : static void
  class_method_makeRegularIndex (C_Compiler & inLexique,
                                 const GGS_lstring & inKey,
                                 GGS_typeMap & ioMap,
                                 GGS_typeMapIndex & outIndex
                                 COMMA_LOCATION_ARGS) ;

//--- Method Access
  public : inline const GGS_typeMapIndex *
  operator () (UNUSED_LOCATION_ARGS) const {
    return this ;
  }

//--- Search method(s)
  public : void
  method_searchKey (C_Compiler & inLexique,
                     GGS_lstring & outKey,
                     GGS_ACGalgasType & outAttribute1
                     COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            list '@signature'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_signature ;

class GGS_signature : public AC_galgas_list {
  public : typedef elementOf_GGS_signature element_type ;

//--- Constructor 'emptyList'
  public : static GGS_signature constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_signature constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_typeMapIndex & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalArgumentPassingMode& argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_signature & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_signature
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_signature
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operators () used for method call
  public : const GGS_signature * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_typeMapIndex & _out_0,
                              GGS_lstring & _out_1,
                              GGS_formalArgumentPassingMode& _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_typeMapIndex & _out_0,
                             GGS_lstring & _out_1,
                             GGS_formalArgumentPassingMode& _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_typeMapIndex & _out_0,
                                GGS_lstring & _out_1,
                                GGS_formalArgumentPassingMode& _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_typeMapIndex & _out_0,
                                 GGS_lstring & _out_1,
                                 GGS_formalArgumentPassingMode& _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_typeMapIndex & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalArgumentPassingMode& argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_signature _operator_concat (const GGS_signature & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_typeMapIndex & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalArgumentPassingMode& argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_typeMapIndex & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalArgumentPassingMode& argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_typeMapIndex & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalArgumentPassingMode& argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Map '@routineMap'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_routineMap ;

class GGS_routineMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_routineMap element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_routineMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_routineMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_routineMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_routineMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_routineMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_signature &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_signature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_signature & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_signature & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_routineMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_routineMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_routineMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@attributeList'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_attributeList ;

class GGS_attributeList : public AC_galgas_list {
  public : typedef elementOf_GGS_attributeList element_type ;

//--- Constructor 'emptyList'
  public : static GGS_attributeList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_attributeList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_typeMapIndex & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_attributeList & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_attributeList
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_attributeList
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operators () used for method call
  public : const GGS_attributeList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_typeMapIndex & _out_0,
                              GGS_lstring & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_typeMapIndex & _out_0,
                             GGS_lstring & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_typeMapIndex & _out_0,
                                GGS_lstring & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_typeMapIndex & _out_0,
                                 GGS_lstring & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_typeMapIndex & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_attributeList _operator_concat (const GGS_attributeList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_typeMapIndex & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_typeMapIndex & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_typeMapIndex & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_locationGalgasType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_locationGalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_locationGalgasType (void) : GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_locationGalgasType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_locationGalgasType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_locationGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_locationGalgasType * getPtr (void) const {
    return (cPtr_locationGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_locationGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_locationGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_locationGalgasType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_stringGalgasType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_stringGalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_stringGalgasType (void) : GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_stringGalgasType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_stringGalgasType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_stringGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_stringGalgasType * getPtr (void) const {
    return (cPtr_stringGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_stringGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_stringGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_stringGalgasType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_charGalgasType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_charGalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_charGalgasType (void) : GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_charGalgasType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_charGalgasType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_charGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_charGalgasType * getPtr (void) const {
    return (cPtr_charGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_charGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_charGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_charGalgasType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_boolGalgasType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_boolGalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_boolGalgasType (void) : GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_boolGalgasType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_boolGalgasType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_boolGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_boolGalgasType * getPtr (void) const {
    return (cPtr_boolGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_boolGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_boolGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_boolGalgasType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_uintGalgasType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_uintGalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_uintGalgasType (void) : GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_uintGalgasType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_uintGalgasType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_uintGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_uintGalgasType * getPtr (void) const {
    return (cPtr_uintGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_uintGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_uintGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_uintGalgasType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_sintGalgasType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_sintGalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_sintGalgasType (void) : GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_sintGalgasType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_sintGalgasType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sintGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sintGalgasType * getPtr (void) const {
    return (cPtr_sintGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sintGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sintGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_sintGalgasType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_uint64GalgasType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_uint64GalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_uint64GalgasType (void) : GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_uint64GalgasType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_uint64GalgasType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_uint64GalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_uint64GalgasType * getPtr (void) const {
    return (cPtr_uint64GalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_uint64GalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_uint64GalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_uint64GalgasType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_sint64GalgasType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_sint64GalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_sint64GalgasType (void) : GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_sint64GalgasType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_sint64GalgasType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sint64GalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sint64GalgasType * getPtr (void) const {
    return (cPtr_sint64GalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sint64GalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sint64GalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_sint64GalgasType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_doubleGalgasType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_doubleGalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_doubleGalgasType (void) : GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_doubleGalgasType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_doubleGalgasType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_doubleGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_doubleGalgasType * getPtr (void) const {
    return (cPtr_doubleGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_doubleGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_doubleGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_doubleGalgasType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_lstringGalgasType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_lstringGalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_lstringGalgasType (void) : GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_lstringGalgasType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_lstringGalgasType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_lstringGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_lstringGalgasType * getPtr (void) const {
    return (cPtr_lstringGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_lstringGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_lstringGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_lstringGalgasType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_lcharGalgasType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_lcharGalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_lcharGalgasType (void) : GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_lcharGalgasType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_lcharGalgasType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_lcharGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_lcharGalgasType * getPtr (void) const {
    return (cPtr_lcharGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_lcharGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_lcharGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_lcharGalgasType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_lboolGalgasType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_lboolGalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_lboolGalgasType (void) : GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_lboolGalgasType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_lboolGalgasType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_lboolGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_lboolGalgasType * getPtr (void) const {
    return (cPtr_lboolGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_lboolGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_lboolGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_lboolGalgasType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_luintGalgasType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_luintGalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_luintGalgasType (void) : GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_luintGalgasType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_luintGalgasType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_luintGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_luintGalgasType * getPtr (void) const {
    return (cPtr_luintGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_luintGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_luintGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_luintGalgasType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_lsintGalgasType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_lsintGalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_lsintGalgasType (void) : GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_lsintGalgasType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_lsintGalgasType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_lsintGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_lsintGalgasType * getPtr (void) const {
    return (cPtr_lsintGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_lsintGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_lsintGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_lsintGalgasType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_luint64GalgasType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_luint64GalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_luint64GalgasType (void) : GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_luint64GalgasType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_luint64GalgasType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_luint64GalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_luint64GalgasType * getPtr (void) const {
    return (cPtr_luint64GalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_luint64GalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_luint64GalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_luint64GalgasType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_lsint64GalgasType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_lsint64GalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_lsint64GalgasType (void) : GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_lsint64GalgasType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_lsint64GalgasType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_lsint64GalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_lsint64GalgasType * getPtr (void) const {
    return (cPtr_lsint64GalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_lsint64GalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_lsint64GalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_lsint64GalgasType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_ldoubleGalgasType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_ldoubleGalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_ldoubleGalgasType (void) : GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_ldoubleGalgasType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_ldoubleGalgasType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_ldoubleGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_ldoubleGalgasType * getPtr (void) const {
    return (cPtr_ldoubleGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_ldoubleGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_ldoubleGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_ldoubleGalgasType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_stringsetGalgasType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_stringsetGalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_stringsetGalgasType (void) : GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_stringsetGalgasType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_stringsetGalgasType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_stringsetGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_stringsetGalgasType * getPtr (void) const {
    return (cPtr_stringsetGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_stringsetGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_stringsetGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_stringsetGalgasType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_binarysetGalgasType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_binarysetGalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_binarysetGalgasType (void) : GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_binarysetGalgasType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_binarysetGalgasType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_binarysetGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_binarysetGalgasType * getPtr (void) const {
    return (cPtr_binarysetGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_binarysetGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_binarysetGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_binarysetGalgasType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         list '@classMethodList'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_classMethodList ;

class GGS_classMethodList : public AC_galgas_list {
  public : typedef elementOf_GGS_classMethodList element_type ;

//--- Constructor 'emptyList'
  public : static GGS_classMethodList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_classMethodList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_signature & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_classMethodList & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_classMethodList
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_classMethodList
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operators () used for method call
  public : const GGS_classMethodList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_lstring & _out_0,
                              GGS_signature & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_lstring & _out_0,
                             GGS_signature & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_lstring & _out_0,
                                GGS_signature & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_signature & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_signature & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_classMethodList _operator_concat (const GGS_classMethodList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_signature & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_signature & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_signature & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_classGalgasType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_classGalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_classGalgasType (void) : GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_classGalgasType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_classGalgasType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_classGalgasType constructor_new (C_Compiler & inLexique,
                                const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeMapIndex & argument_2,
                                const GGS_attributeList & argument_3,
                                const GGS_classMethodList & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_classGalgasType * getPtr (void) const {
    return (cPtr_classGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_bool reader_mIsAbstract (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mClassName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeMapIndex  reader_mSuperClassIndex (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_attributeList  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_classMethodList  reader_mMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_classGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_classGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_classGalgasType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_listGalgasType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_listGalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_listGalgasType (void) : GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_listGalgasType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_listGalgasType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_listGalgasType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_attributeList & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_listGalgasType * getPtr (void) const {
    return (cPtr_listGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mListTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_attributeList  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_listGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_listGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_listGalgasType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_mapindexType'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_mapindexType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_mapindexType (void) : GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_mapindexType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_mapindexType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_mapindexType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeMapIndex & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_mapindexType * getPtr (void) const {
    return (cPtr_mapindexType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMapIndexName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeMapIndex  reader_mMapTypeIndex (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mSearchMethodName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mSearchMethodErrorMessage (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_mapindexType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_mapindexType * operator () (LOCATION_ARGS) const {
      return (cPtr_mapindexType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        GALGAS class 'GGS_mapType'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_mapType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_mapType (void) : GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_mapType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_mapType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_mapType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_attributeList & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_mapType * getPtr (void) const {
    return (cPtr_mapType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMapTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_attributeList  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_mapType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_mapType * operator () (LOCATION_ARGS) const {
      return (cPtr_mapType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_enumType'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_enumType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_enumType (void) : GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_enumType (cPtr__AC_galgas_class * inPointer) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_enumType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_enumType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_enumType * getPtr (void) const {
    return (cPtr_enumType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mEnumTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mConstantList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_enumType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_enumType * operator () (LOCATION_ARGS) const {
      return (cPtr_enumType *) mPointer ;
    }
  #endif
} ;

void routine_constructBuiltinTypeMap (C_Compiler &,
                                GGS_typeMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

#include "include_ACGalgasType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                        Element of map '@typeMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeMap {
  public : GGS_ACGalgasType  mType ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_typeMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_typeMap * nextObject (void) const { return (elementOf_GGS_typeMap *) mNextItem ; }
  public : inline elementOf_GGS_typeMap * infObject (void) const { return (elementOf_GGS_typeMap *) mInfPtr ; }
  public : inline elementOf_GGS_typeMap * supObject (void) const { return (elementOf_GGS_typeMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of list '@signature'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_signature : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_typeMapIndex  mAttributeTypeIndex ;
  public : GGS_lstring  mFormalArgumentName ;
  public : GGS_formalArgumentPassingMode mFormalArgumentPassingMode ;
//--- Constructor
  public : elementOf_GGS_signature (const GGS_typeMapIndex & ,
                                const GGS_lstring & ,
                                const GGS_formalArgumentPassingMode& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_signature * nextObject (void) const { return (elementOf_GGS_signature *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_signature * previousObject (void) const { return (elementOf_GGS_signature *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_signature ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of map '@routineMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class e_routineMap {
  public : GGS_signature  mRoutineSignature ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_routineMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_routineMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_routineMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_routineMap * nextObject (void) const { return (elementOf_GGS_routineMap *) mNextItem ; }
  public : inline elementOf_GGS_routineMap * infObject (void) const { return (elementOf_GGS_routineMap *) mInfPtr ; }
  public : inline elementOf_GGS_routineMap * supObject (void) const { return (elementOf_GGS_routineMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_routineMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@attributeList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_attributeList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_typeMapIndex  mAttributeTypeIndex ;
  public : GGS_lstring  mAttributeName ;
//--- Constructor
  public : elementOf_GGS_attributeList (const GGS_typeMapIndex & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_attributeList * nextObject (void) const { return (elementOf_GGS_attributeList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_attributeList * previousObject (void) const { return (elementOf_GGS_attributeList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_attributeList ;
} ;

//---------------------------------------------------------------------------*

#include "include_locationGalgasType.h"

//---------------------------------------------------------------------------*

#include "include_stringGalgasType.h"

//---------------------------------------------------------------------------*

#include "include_charGalgasType.h"

//---------------------------------------------------------------------------*

#include "include_boolGalgasType.h"

//---------------------------------------------------------------------------*

#include "include_uintGalgasType.h"

//---------------------------------------------------------------------------*

#include "include_sintGalgasType.h"

//---------------------------------------------------------------------------*

#include "include_uint64GalgasType.h"

//---------------------------------------------------------------------------*

#include "include_sint64GalgasType.h"

//---------------------------------------------------------------------------*

#include "include_doubleGalgasType.h"

//---------------------------------------------------------------------------*

#include "include_lstringGalgasType.h"

//---------------------------------------------------------------------------*

#include "include_lcharGalgasType.h"

//---------------------------------------------------------------------------*

#include "include_lboolGalgasType.h"

//---------------------------------------------------------------------------*

#include "include_luintGalgasType.h"

//---------------------------------------------------------------------------*

#include "include_lsintGalgasType.h"

//---------------------------------------------------------------------------*

#include "include_luint64GalgasType.h"

//---------------------------------------------------------------------------*

#include "include_lsint64GalgasType.h"

//---------------------------------------------------------------------------*

#include "include_ldoubleGalgasType.h"

//---------------------------------------------------------------------------*

#include "include_stringsetGalgasType.h"

//---------------------------------------------------------------------------*

#include "include_binarysetGalgasType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@classMethodList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_classMethodList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mMethodName ;
  public : GGS_signature  mMethodSignature ;
//--- Constructor
  public : elementOf_GGS_classMethodList (const GGS_lstring & ,
                                const GGS_signature & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_classMethodList * nextObject (void) const { return (elementOf_GGS_classMethodList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_classMethodList * previousObject (void) const { return (elementOf_GGS_classMethodList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_classMethodList ;
} ;

//---------------------------------------------------------------------------*

#include "include_classGalgasType.h"

//---------------------------------------------------------------------------*

#include "include_listGalgasType.h"

//---------------------------------------------------------------------------*

#include "include_mapindexType.h"

//---------------------------------------------------------------------------*

#include "include_mapType.h"

//---------------------------------------------------------------------------*

#include "include_enumType.h"

//---------------------------------------------------------------------------*

#endif
