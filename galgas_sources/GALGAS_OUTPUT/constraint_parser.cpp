//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'constraint_parser.cpp'                        *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                     january 19th, 2007, at 20h45'16"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "constraint_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const char gGGSsourceFile [] = "constraint_parser.ggs" ;
  #define SOURCE_FILE_AT_LINE(line) , gGGSsourceFile, line
#else
  #define SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_galgas_component_constraint_parser_140_6_ (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  nt_parse_constraint_document_ (_inLexique, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_galgas_component_constraint_parser_140_6_importLexique (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  nt_parse_constraint_document_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_galgas_component_constraint_parser_140_6_importSyntax (galgas_scanner & _inLexique,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  GGS_M_constraintComponents  var_cas_constraintComponentMap ;
  var_cas_constraintComponentMap = GGS_M_constraintComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  nt_parse_constraint_document_ (_inLexique, var_cas_ioMetamodelComponentMap, var_cas_constraintComponentMap) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_galgas_component_constraint_parser_140_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  nt_parse_constraint_document_ (_inLexique, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_galgas_component_constraint_parser_140_6_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  nt_parse_constraint_document_ (_inLexique, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_galgas_component_constraint_parser_140_6_importOptions (galgas_scanner & _inLexique,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  nt_parse_constraint_document_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "checkCallInstruction"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkCallInstruction (C_Lexique & _inLexique,
                                const GGS_entityToImplementMap  & var_cas_inConstrainedEntityMap,
                                const GGS_lstring  & var_cas_inTestedReferenceName,
                                const GGS_callInstructionSharedPropertySignatureMap  & var_cas_inCallInstructionSharedPropertySignatureMap,
                                const GGS_lstring  & var_cas_inTestedPropertyName,
                                const GGS_entityPropertyMap  & var_cas_inAllAvailablePropertiesMap,
                                const GGS_location  & var_cas_inEndOfInstructionList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_checkCallInstruction at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  if ((var_cas_inConstrainedEntityMap.reader_hasKey (_inLexique, var_cas_inTestedReferenceName.reader_string (_inLexique SOURCE_FILE_AT_LINE (200)) SOURCE_FILE_AT_LINE (200))).isBuiltAndTrue ()) {
    if ((var_cas_inCallInstructionSharedPropertySignatureMap.reader_hasKey (_inLexique, var_cas_inTestedPropertyName.reader_string (_inLexique SOURCE_FILE_AT_LINE (201)) SOURCE_FILE_AT_LINE (201))).isBuiltAndTrue ()) {
      GGS_entityPropertyMap  var_cas_allContraintsPropertyMap ;
      GGS_entityPropertyMap  automatic_var_0 ;
      GGS_bool automatic_var_1 ;
      GGS_entityPropertyMap  automatic_var_2 ;
      GGS_lstring  automatic_var_3 ;
      GGS_entityPropertyMap  automatic_var_4 ;
      GGS_stringset  automatic_var_5 ;
      GGS_entityPropertyMap  automatic_var_6 ;
      if (var_cas_inConstrainedEntityMap._isBuilt ()) {
        var_cas_inConstrainedEntityMap (HERE)->method_searchKey (_inLexique, var_cas_inTestedReferenceName, automatic_var_0, automatic_var_1, automatic_var_2, automatic_var_3, automatic_var_4, automatic_var_5, var_cas_allContraintsPropertyMap, automatic_var_6 SOURCE_FILE_AT_LINE (205)) ;
      }
      GGS_metamodelPropertyList  var_cas_formalParameterTypeList ;
      var_cas_formalParameterTypeList = GGS_metamodelPropertyList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_entityPropertyMap::element_type * operand_7620 = var_cas_allContraintsPropertyMap.firstObject () ;
      while ((operand_7620 != NULL)) {
        macroValidPointer (operand_7620) ;
        if (operand_7620->mInfo.mProperty._isBuilt ()) {
          cPtr_metamodelSharedMapProperty * operand_7694 = dynamic_cast <cPtr_metamodelSharedMapProperty *> (operand_7620->mInfo.mProperty.getPtr ()) ;
          if (operand_7694 != NULL) {
            macroValidPointer (operand_7694) ; 
            var_cas_formalParameterTypeList._addAssign_operation (operand_7620->mInfo.mProperty) ;
          }else{ // Else part
          }
        }
        operand_7620 = operand_7620->nextObject () ;
      }
      GGS_L_lstringList  var_cas_effectiveArgumentList ;
      GGS_location  var_cas_endOfCallInstruction ;
      if (var_cas_inCallInstructionSharedPropertySignatureMap._isBuilt ()) {
        var_cas_inCallInstructionSharedPropertySignatureMap (HERE)->method_searchKey (_inLexique, var_cas_inTestedPropertyName, var_cas_effectiveArgumentList, var_cas_endOfCallInstruction SOURCE_FILE_AT_LINE (218)) ;
      }
      GGS_metamodelPropertyList  var_cas_effectiveArgumentTypeList ;
      var_cas_effectiveArgumentTypeList = GGS_metamodelPropertyList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_L_lstringList::element_type * operand_8303 = var_cas_effectiveArgumentList.firstObject () ;
      while ((operand_8303 != NULL)) {
        macroValidPointer (operand_8303) ;
        GGS_metamodelProperty  var_cas_property ;
        if (var_cas_inAllAvailablePropertiesMap._isBuilt ()) {
          var_cas_inAllAvailablePropertiesMap (HERE)->method_searchKey (_inLexique, operand_8303->mString, var_cas_property SOURCE_FILE_AT_LINE (222)) ;
        }
        var_cas_effectiveArgumentTypeList._addAssign_operation (var_cas_property) ;
        operand_8303 = operand_8303->nextObject () ;
      }
      if (((var_cas_formalParameterTypeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (226))) != (var_cas_effectiveArgumentTypeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (226)))).isBuiltAndTrue ()) {
        var_cas_endOfCallInstruction.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((GGS_string (true, "the call instruction names ")) + (var_cas_effectiveArgumentTypeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (228)).reader_string (_inLexique SOURCE_FILE_AT_LINE (228))))) + (GGS_string (true, " argument(s) instead of ")))) + (var_cas_formalParameterTypeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (229)).reader_string (_inLexique SOURCE_FILE_AT_LINE (229)))) SOURCE_FILE_AT_LINE (230)) ;
      }else{
        GGS_uint  var_cas_argumentIndex ;
        var_cas_argumentIndex = GGS_uint (true, 0U) ;
        GGS_metamodelPropertyList::element_type * operand_8930 = var_cas_formalParameterTypeList.firstObject () ;
        GGS_metamodelPropertyList::element_type * operand_8994 = var_cas_effectiveArgumentTypeList.firstObject () ;
        while ((operand_8930 != NULL)
            && (operand_8994 != NULL)) {
          macroValidPointer (operand_8930) ;
          macroValidPointer (operand_8994) ;
          var_cas_argumentIndex._increment_operation (_inLexique SOURCE_FILE_AT_LINE (233)) ;
          if (operand_8930->mProperty._isBuilt () && operand_8994->mProperty._isBuilt ()) {
            cPtr_metamodelProperty * ptr_9097 = operand_8930->mProperty (HERE) ;
            cPtr_metamodelProperty * ptr_9119 = operand_8994->mProperty (HERE) ;
            cPtr_metamodelSharedMapProperty * operand_9097 = dynamic_cast <cPtr_metamodelSharedMapProperty *> (ptr_9097) ;
            cPtr_metamodelMapProperty * operand_9119 = dynamic_cast <cPtr_metamodelMapProperty *> (ptr_9119) ;
            if ((operand_9097 != NULL) && (operand_9119 != NULL)) {
              if (((operand_9097->mMapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (236))) != (operand_9119->mMapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (236)))).isBuiltAndTrue ()) {
                var_cas_endOfCallInstruction.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((((((GGS_string (true, "for argument ")) + (var_cas_argumentIndex.reader_string (_inLexique SOURCE_FILE_AT_LINE (237))))) + (GGS_string (true, ", the effective argument map type (")))) + (operand_9119->mMapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (238))))) + (GGS_string (true, ") is incompatible with formal parameter map type (")))) + (operand_9097->mMapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (239))))) + (GGS_string (true, ")"))) SOURCE_FILE_AT_LINE (241)) ;
              }
            }else{
              cPtr_metamodelSharedMapProperty * operand_9097 = dynamic_cast <cPtr_metamodelSharedMapProperty *> (ptr_9097) ;
              cPtr_metamodelSharedMapProperty * operand_9119 = dynamic_cast <cPtr_metamodelSharedMapProperty *> (ptr_9119) ;
              if ((operand_9097 != NULL) && (operand_9119 != NULL)) {
                if (((operand_9097->mMapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (243))) != (operand_9119->mMapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (243)))).isBuiltAndTrue ()) {
                  var_cas_endOfCallInstruction.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((((((GGS_string (true, "for argument ")) + (var_cas_argumentIndex.reader_string (_inLexique SOURCE_FILE_AT_LINE (244))))) + (GGS_string (true, ", the effective argument map type (")))) + (operand_9119->mMapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (245))))) + (GGS_string (true, ") is incompatible with formal parameter map type (")))) + (operand_9097->mMapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (246))))) + (GGS_string (true, ")"))) SOURCE_FILE_AT_LINE (248)) ;
                }
              }else{
                var_cas_endOfCallInstruction.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((((((GGS_string (true, "for argument ")) + (var_cas_argumentIndex.reader_string (_inLexique SOURCE_FILE_AT_LINE (250))))) + (GGS_string (true, ", the effective argument type (")))) + (operand_8994->mProperty.reader_messageProperty (_inLexique SOURCE_FILE_AT_LINE (251))))) + (GGS_string (true, ") is incompatible with formal parameter type (")))) + (operand_8930->mProperty.reader_messageProperty (_inLexique SOURCE_FILE_AT_LINE (252))))) + (GGS_string (true, ")"))) SOURCE_FILE_AT_LINE (254)) ;
              }
            }
          }
          operand_8930 = operand_8930->nextObject () ;
          operand_8994 = operand_8994->nextObject () ;
        }
      }
    }else{
      var_cas_inEndOfInstructionList.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the instruction list should have a 'call ")) + (var_cas_inTestedPropertyName.reader_string (_inLexique SOURCE_FILE_AT_LINE (259))))) + (GGS_string (true, "' instruction"))) SOURCE_FILE_AT_LINE (260)) ;
    }
  }else if ((var_cas_inCallInstructionSharedPropertySignatureMap.reader_hasKey (_inLexique, var_cas_inTestedPropertyName.reader_string (_inLexique SOURCE_FILE_AT_LINE (261)) SOURCE_FILE_AT_LINE (261))).isBuiltAndTrue ()) {
    var_cas_inEndOfInstructionList.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the instruction list should not have a 'call ")) + (var_cas_inTestedPropertyName.reader_string (_inLexique SOURCE_FILE_AT_LINE (262))))) + (GGS_string (true, "' instruction"))) SOURCE_FILE_AT_LINE (263)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_checkCallInstruction\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'parse_constraint_document'        *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_parse_constraint_document_constraint_parser_268_6_ (galgas_scanner & _inLexique,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constraint) COMMA_HERE) ;
  GGS_lstring  var_cas_constraintName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_constraintName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_import) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
  GGS_lstring  var_cas_metamodelName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_metamodelName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
  GGS_lstring  var_cas_fileName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_fileName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_M_semanticsComponents  var_cas_unusedSemanticsMapForUse ;
  var_cas_unusedSemanticsMapForUse = GGS_M_semanticsComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_metamodelsComponents  var_cas_metamodelComponentMap ;
  var_cas_metamodelComponentMap = GGS_M_metamodelsComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_fileName, var_cas_unusedSemanticsMapForUse, var_cas_metamodelComponentMap, var_cas_ioConstraintComponentMap) ;
  GGS_lstring  var_cas_rootEntity ;
  GGS_entityToImplementMap  var_cas_originalMetamodelEntityMap ;
  GGS_stringset  automatic_var_7 ;
  if (var_cas_metamodelComponentMap._isBuilt ()) {
    var_cas_metamodelComponentMap (HERE)->method_searchKey (_inLexique, var_cas_metamodelName, var_cas_rootEntity, var_cas_originalMetamodelEntityMap, automatic_var_7 SOURCE_FILE_AT_LINE (297)) ;
  }
  GGS_entityToImplementMap  var_cas_metamodelEntityMap ;
  GGS_stringset  var_cas_overriddenClassSet ;
  nt_constraint_class_override_declarations_ (_inLexique, var_cas_rootEntity, var_cas_originalMetamodelEntityMap, var_cas_metamodelEntityMap, var_cas_overriddenClassSet) ;
  GGS_mapEntityMap  var_cas_mapEntityMap ;
  var_cas_mapEntityMap = GGS_mapEntityMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_0 (_inLexique)) {
        case 2 : {
          nt_constraint_map_declaration_ (_inLexique, var_cas_overriddenClassSet, var_cas_metamodelEntityMap, var_cas_mapEntityMap) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_entityToImplementMap  var_cas_constrainedEntityMap ;
  var_cas_constrainedEntityMap = GGS_entityToImplementMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_constraintInstructionListMap  var_cas_constraintInstructionListMap ;
  var_cas_constraintInstructionListMap = GGS_constraintInstructionListMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        nt_constraints_on_entity_declaration_ (_inLexique, var_cas_constraintName, var_cas_overriddenClassSet, var_cas_metamodelEntityMap, var_cas_mapEntityMap, var_cas_constrainedEntityMap, var_cas_constraintInstructionListMap) ;
      switch (select_repeat_constraint_parser_1 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  GGS_stringset::element_type * operand_13071 = var_cas_overriddenClassSet.firstObject () ;
  while ((operand_13071 != NULL)) {
    macroValidPointer (operand_13071) ;
    if (((! (var_cas_constrainedEntityMap.reader_hasKey (_inLexique, operand_13071->mKey SOURCE_FILE_AT_LINE (339))))).isBuiltAndTrue ()) {
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '%")) + (operand_13071->mKey))) + (GGS_string (true, "' is declared as overridden, but is not defined"))) SOURCE_FILE_AT_LINE (341)) ;
    }
    operand_13071 = operand_13071->nextObject () ;
  }
  if (((! (var_cas_constrainedEntityMap.reader_hasKey (_inLexique, var_cas_rootEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (344)) SOURCE_FILE_AT_LINE (344))))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the @")) + (var_cas_rootEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (345))))) + (GGS_string (true, " root entity should be defined"))) SOURCE_FILE_AT_LINE (346)) ;
  }
  GGS_representativeEntityMap  var_cas_representativeEntityMap ;
  var_cas_representativeEntityMap = GGS_representativeEntityMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_entityToImplementMap::element_type * operand_13595 = var_cas_metamodelEntityMap.firstObject () ;
  while ((operand_13595 != NULL)) {
    macroValidPointer (operand_13595) ;
    GGS_lstring  var_cas_representativeTypeName ;
    ::routine_computeRepresentativeEntityName (_inLexique,  var_cas_metamodelEntityMap,  var_cas_constrainedEntityMap,  operand_13595->mKey,  var_cas_representativeTypeName SOURCE_FILE_AT_LINE (351)) ;
    GGS_stringset  var_cas_superEntitySet ;
    var_cas_superEntitySet = operand_13595->mInfo.mSuperEntitySet ;
    var_cas_superEntitySet._addAssign_operation (operand_13595->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (358))) ;
    var_cas_representativeEntityMap.modifier_insertKey (_inLexique, operand_13595->mKey, var_cas_representativeTypeName, var_cas_superEntitySet SOURCE_FILE_AT_LINE (359)) ;
    operand_13595 = operand_13595->nextObject () ;
  }
  GGS_stringset  var_cas_multiReferencedEntities ;
  var_cas_multiReferencedEntities = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_entityToImplementMap::element_type * operand_14295 = var_cas_constrainedEntityMap.firstObject () ;
  while ((operand_14295 != NULL)) {
    macroValidPointer (operand_14295) ;
    GGS_entityPropertyMap::element_type * operand_16339 = operand_14295->mInfo.mAllMetamodelPropertyMap.firstObject () ;
    while ((operand_16339 != NULL)) {
      macroValidPointer (operand_16339) ;
      if (operand_16339->mInfo.mProperty._isBuilt ()) {
        cPtr_metamodelMultipleReferenceProperty * operand_16854 = dynamic_cast <cPtr_metamodelMultipleReferenceProperty *> (operand_16339->mInfo.mProperty.getPtr ()) ;
        if (operand_16854 != NULL) {
          macroValidPointer (operand_16854) ; 
          GGS_lstring  var_cas_representativeTypeName ;
          ::routine_computeRepresentativeEntityName (_inLexique,  var_cas_metamodelEntityMap,  var_cas_constrainedEntityMap,  operand_16854->mReferenceEntityName,  var_cas_representativeTypeName SOURCE_FILE_AT_LINE (428)) ;
          if (((var_cas_representativeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (434))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
            var_cas_multiReferencedEntities._addAssign_operation (var_cas_representativeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (435))) ;
          }
        }else{ // Else part
        }
      }
      operand_16339 = operand_16339->nextObject () ;
    }
    operand_14295 = operand_14295->nextObject () ;
  }
  GGS_entityToImplementMap::element_type * operand_18610 = var_cas_constrainedEntityMap.firstObject () ;
  while ((operand_18610 != NULL)) {
    macroValidPointer (operand_18610) ;
    GGS_callInstructionSharedPropertySignatureMap  var_cas_callInstructionSharedPropertySignatureMap ;
    GGS_location  var_cas_endOfInstructionList ;
    GGS_typeInstructionList  automatic_var_8 ;
    if (var_cas_constraintInstructionListMap._isBuilt ()) {
      var_cas_constraintInstructionListMap (HERE)->method_searchKey (_inLexique, operand_18610->mKey, automatic_var_8, var_cas_callInstructionSharedPropertySignatureMap, var_cas_endOfInstructionList SOURCE_FILE_AT_LINE (488)) ;
    }
    GGS_entityPropertyMap::element_type * operand_19109 = operand_18610->mInfo.mCurrentMetamodelPropertyMap.firstObject () ;
    while ((operand_19109 != NULL)) {
      macroValidPointer (operand_19109) ;
      if (operand_19109->mInfo.mProperty._isBuilt ()) {
        cPtr_metamodelSingleReferenceProperty * operand_19202 = dynamic_cast <cPtr_metamodelSingleReferenceProperty *> (operand_19109->mInfo.mProperty.getPtr ()) ;
        if (operand_19202 != NULL) {
          macroValidPointer (operand_19202) ; 
          ::routine_checkCallInstruction (_inLexique,  var_cas_constrainedEntityMap,  operand_19202->mReferenceEntityName,  var_cas_callInstructionSharedPropertySignatureMap,  operand_19109->mKey,  operand_18610->mInfo.mAllAvailablePropertyMap,  var_cas_endOfInstructionList SOURCE_FILE_AT_LINE (492)) ;
        }else{
          cPtr_metamodelMultipleReferenceProperty * operand_19542 = dynamic_cast <cPtr_metamodelMultipleReferenceProperty *> (operand_19109->mInfo.mProperty.getPtr ()) ;
          if (operand_19542 != NULL) {
            macroValidPointer (operand_19542) ; 
            ::routine_checkCallInstruction (_inLexique,  var_cas_constrainedEntityMap,  operand_19542->mReferenceEntityName,  var_cas_callInstructionSharedPropertySignatureMap,  operand_19109->mKey,  operand_18610->mInfo.mAllAvailablePropertyMap,  var_cas_endOfInstructionList SOURCE_FILE_AT_LINE (501)) ;
          }else{ // Else part
          }
        }
      }
      operand_19109 = operand_19109->nextObject () ;
    }
    operand_18610 = operand_18610->nextObject () ;
  }
  if (var_cas_metamodelEntityMap._isBuilt () &&
      var_cas_mapEntityMap._isBuilt () &&
      var_cas_metamodelName._isBuilt () &&
      var_cas_constraintName._isBuilt () &&
      var_cas_constrainedEntityMap._isBuilt () &&
      var_cas_multiReferencedEntities._isBuilt () &&
      var_cas_rootEntity._isBuilt () &&
      var_cas_representativeEntityMap._isBuilt () &&
      var_cas_constraintInstructionListMap._isBuilt ()) {
    ::routine_generate_constraints (_inLexique,  var_cas_metamodelEntityMap,  var_cas_mapEntityMap,  var_cas_metamodelName,  var_cas_constraintName,  var_cas_constrainedEntityMap,  var_cas_multiReferencedEntities,  var_cas_rootEntity,  var_cas_representativeEntityMap,  var_cas_constraintInstructionListMap SOURCE_FILE_AT_LINE (514)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constraint) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_parse_constraint_document_constraint_parser_268_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constraint) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_import) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  nt_parse_semantics_component_for_importing_parse (_inLexique) ;
  nt_constraint_class_override_declarations_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_0 (_inLexique)) {
        case 2 : {
          nt_constraint_map_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        nt_constraints_on_entity_declaration_parse (_inLexique) ;
      switch (select_repeat_constraint_parser_1 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_constraint) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'constraint_map_declaration'       *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraint_map_declaration_constraint_parser_531_6_ (galgas_scanner & _inLexique,
                                const GGS_stringset  &var_cas_inOverriddenClassSet,
                                GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                GGS_mapEntityMap  &var_cas_ioMapEntityMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  GGS_lstring  var_cas_mapIdentifier ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mapIdentifier) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) COMMA_HERE) ;
  if ((var_cas_inMetamodelEntityMap.reader_hasKey (_inLexique, var_cas_mapIdentifier.reader_string (_inLexique SOURCE_FILE_AT_LINE (539)) SOURCE_FILE_AT_LINE (539))).isBuiltAndTrue ()) {
    var_cas_mapIdentifier.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "An entity has been declared with this name") SOURCE_FILE_AT_LINE (541)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_of) COMMA_HERE) ;
  GGS_lstring  var_cas_mapElementIdentifier ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mapElementIdentifier) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) COMMA_HERE) ;
  GGS_bool var_cas_isElementTypeOverridden ;
  var_cas_isElementTypeOverridden = var_cas_inOverriddenClassSet.reader_hasKey (_inLexique, var_cas_mapElementIdentifier.reader_string (_inLexique SOURCE_FILE_AT_LINE (545)) SOURCE_FILE_AT_LINE (545)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  GGS_lstring  var_cas_insertErrorMessage ;
  _inLexique._assignFromAttribute_tokenString (var_cas_insertErrorMessage) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  if (var_cas_insertErrorMessage._isBuilt ()) {
    ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_insertErrorMessage SOURCE_FILE_AT_LINE (552)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  GGS_lstring  var_cas_searchErrorMessage ;
  _inLexique._assignFromAttribute_tokenString (var_cas_searchErrorMessage) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  if (var_cas_searchErrorMessage._isBuilt ()) {
    ::routine_check_K_escapeCharacters (_inLexique,  var_cas_searchErrorMessage SOURCE_FILE_AT_LINE (559)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  var_cas_ioMapEntityMap.modifier_insertKey (_inLexique, var_cas_mapIdentifier, var_cas_mapElementIdentifier, var_cas_insertErrorMessage, var_cas_searchErrorMessage, var_cas_isElementTypeOverridden SOURCE_FILE_AT_LINE (562)) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraint_map_declaration_constraint_parser_531_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_map) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_of) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_insert) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of production rule 'constraints_on_entity_declaration'    *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraints_on_entity_declaration_constraint_parser_573_6_ (galgas_scanner & _inLexique,
                                const GGS_lstring  &var_cas_inConstraintName,
                                const GGS_stringset  &var_cas_inOverriddenClassSet,
                                GGS_entityToImplementMap  var_cas_inEntityMap,
                                GGS_mapEntityMap  &var_cas_ioMapEntityMap,
                                GGS_entityToImplementMap  &var_cas_ioConstrainedEntityMap,
                                GGS_constraintInstructionListMap  &var_cas_ioConstraintInstructionListMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  GGS_lstring  var_cas_entityName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_entityName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) COMMA_HERE) ;
  GGS_lstring  var_cas_superEntity ;
  GGS_entityPropertyMap  var_cas_allMetamodelPropertyMap ;
  GGS_stringset  var_cas_superClassSet ;
  GGS_entityPropertyMap  var_cas_currentMetamodelPropertyMap ;
  GGS_entityPropertyMap  var_cas_allConstraintPropertyMap ;
  GGS_entityPropertyMap  var_cas_allAvailablePropertyMap ;
  GGS_bool automatic_var_9 ;
  GGS_entityPropertyMap  automatic_var_10 ;
  if (var_cas_inEntityMap._isBuilt ()) {
    var_cas_inEntityMap (HERE)->method_searchKey (_inLexique, var_cas_entityName, var_cas_allMetamodelPropertyMap, automatic_var_9, var_cas_currentMetamodelPropertyMap, var_cas_superEntity, automatic_var_10, var_cas_superClassSet, var_cas_allConstraintPropertyMap, var_cas_allAvailablePropertyMap SOURCE_FILE_AT_LINE (592)) ;
  }
  if (((var_cas_superEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (606))) == (GGS_string (true, ""))).isBuiltAndTrue ()) {
  }else if ((var_cas_ioConstrainedEntityMap.reader_hasKey (_inLexique, var_cas_superEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (608)) SOURCE_FILE_AT_LINE (608))).isBuiltAndTrue ()) {
    GGS_entityPropertyMap  var_cas_inheritedConstraintPropertyMap ;
    GGS_entityPropertyMap  automatic_var_11 ;
    GGS_bool automatic_var_12 ;
    GGS_entityPropertyMap  automatic_var_13 ;
    GGS_lstring  automatic_var_14 ;
    GGS_stringset  automatic_var_15 ;
    GGS_entityPropertyMap  automatic_var_16 ;
    if (var_cas_ioConstrainedEntityMap._isBuilt ()) {
      var_cas_ioConstrainedEntityMap (HERE)->method_searchKey (_inLexique, var_cas_superEntity, automatic_var_11, automatic_var_12, automatic_var_13, automatic_var_14, var_cas_inheritedConstraintPropertyMap, automatic_var_15, var_cas_allConstraintPropertyMap, automatic_var_16 SOURCE_FILE_AT_LINE (610)) ;
    }
    GGS_entityPropertyMap::element_type * operand_23105 = var_cas_inheritedConstraintPropertyMap.firstObject () ;
    while ((operand_23105 != NULL)) {
      macroValidPointer (operand_23105) ;
      var_cas_allAvailablePropertyMap.modifier_insertKey (_inLexique, operand_23105->mKey, operand_23105->mInfo.mProperty SOURCE_FILE_AT_LINE (622)) ;
      operand_23105 = operand_23105->nextObject () ;
    }
  }else{
    var_cas_entityName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "constraints for super entity ('@")) + (var_cas_superEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (626))))) + (GGS_string (true, "') should be previously defined"))) SOURCE_FILE_AT_LINE (627)) ;
  }
  GGS_entityPropertyMap  var_cas_currentConstraintPropertyMap ;
  var_cas_currentConstraintPropertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  switch (select_constraint_parser_2 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
      if (((var_cas_superEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (633))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "as the '@")) + (var_cas_entityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (634))))) + (GGS_string (true, "' entity has a super entity, you cannot define any shared property"))) SOURCE_FILE_AT_LINE (636)) ;
      }
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_typeName ;
            _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) COMMA_HERE) ;
            GGS_lstring  var_cas_elementTypeName ;
            GGS_lstring  automatic_var_17 ;
            GGS_lstring  automatic_var_18 ;
            GGS_bool automatic_var_19 ;
            if (var_cas_ioMapEntityMap._isBuilt ()) {
              var_cas_ioMapEntityMap (HERE)->method_searchKey (_inLexique, var_cas_typeName, var_cas_elementTypeName, automatic_var_17, automatic_var_18, automatic_var_19 SOURCE_FILE_AT_LINE (641)) ;
            }
            GGS_metamodelProperty  var_cas_property ;
            var_cas_property = GGS_metamodelSharedMapProperty::constructor_new (_inLexique, var_cas_typeName, var_cas_elementTypeName COMMA_HERE) ;
            GGS_lstring  var_cas_propertyName ;
            _inLexique._assignFromAttribute_tokenString (var_cas_propertyName) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            var_cas_currentConstraintPropertyMap.modifier_insertKey (_inLexique, var_cas_propertyName, var_cas_property SOURCE_FILE_AT_LINE (645)) ;
            var_cas_allConstraintPropertyMap.modifier_insertKey (_inLexique, var_cas_propertyName, var_cas_property SOURCE_FILE_AT_LINE (646)) ;
            var_cas_allAvailablePropertyMap.modifier_insertKey (_inLexique, var_cas_propertyName, var_cas_property SOURCE_FILE_AT_LINE (647)) ;
          switch (select_repeat_constraint_parser_3 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_indexMap  var_cas_currentIndexMap ;
  var_cas_currentIndexMap = GGS_indexMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_4 (_inLexique)) {
        case 2 : {
          GGS_lstring  var_cas_typeName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) COMMA_HERE) ;
          GGS_lstring  var_cas_elementTypeName ;
          GGS_lstring  automatic_var_20 ;
          GGS_lstring  automatic_var_21 ;
          GGS_bool automatic_var_22 ;
          if (var_cas_ioMapEntityMap._isBuilt ()) {
            var_cas_ioMapEntityMap (HERE)->method_searchKey (_inLexique, var_cas_typeName, var_cas_elementTypeName, automatic_var_20, automatic_var_21, automatic_var_22 SOURCE_FILE_AT_LINE (661)) ;
          }
          GGS_metamodelProperty  var_cas_property ;
          var_cas_property = GGS_metamodelMapProperty::constructor_new (_inLexique, var_cas_typeName, var_cas_elementTypeName COMMA_HERE) ;
          GGS_lstring  var_cas_propertyName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_propertyName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_currentConstraintPropertyMap.modifier_insertKey (_inLexique, var_cas_propertyName, var_cas_property SOURCE_FILE_AT_LINE (665)) ;
          var_cas_allConstraintPropertyMap.modifier_insertKey (_inLexique, var_cas_propertyName, var_cas_property SOURCE_FILE_AT_LINE (666)) ;
          var_cas_allAvailablePropertyMap.modifier_insertKey (_inLexique, var_cas_propertyName, var_cas_property SOURCE_FILE_AT_LINE (667)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mapindex) COMMA_HERE) ;
          GGS_lstring  var_cas_mapIndexName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_mapIndexName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_on) COMMA_HERE) ;
          GGS_lstring  var_cas_mapAttributeName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_mapAttributeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_metamodelProperty  var_cas_propertyOfMapAttributeName ;
          if (var_cas_allConstraintPropertyMap._isBuilt ()) {
            var_cas_allConstraintPropertyMap (HERE)->method_searchKey (_inLexique, var_cas_mapAttributeName, var_cas_propertyOfMapAttributeName SOURCE_FILE_AT_LINE (677)) ;
          }
          GGS_metamodelProperty  var_cas_property ;
          if (var_cas_propertyOfMapAttributeName._isBuilt ()) {
            cPtr_metamodelMapProperty * operand_25420 = dynamic_cast <cPtr_metamodelMapProperty *> (var_cas_propertyOfMapAttributeName.getPtr ()) ;
            if (operand_25420 != NULL) {
              macroValidPointer (operand_25420) ; 
              var_cas_property = GGS_mapIndexProperty::constructor_new (_inLexique, operand_25420->mMapTypeName, var_cas_mapAttributeName COMMA_HERE) ;
            }else{
              cPtr_metamodelSharedMapProperty * operand_25560 = dynamic_cast <cPtr_metamodelSharedMapProperty *> (var_cas_propertyOfMapAttributeName.getPtr ()) ;
              if (operand_25560 != NULL) {
                macroValidPointer (operand_25560) ; 
                var_cas_property = GGS_mapIndexProperty::constructor_new (_inLexique, operand_25560->mMapTypeName, var_cas_mapAttributeName COMMA_HERE) ;
              }else{ // Else part
                var_cas_mapAttributeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this property should be a map") SOURCE_FILE_AT_LINE (686)) ;
                var_cas_property._drop_operation () ;
              }
            }
          }
          var_cas_currentConstraintPropertyMap.modifier_insertKey (_inLexique, var_cas_mapIndexName, var_cas_property SOURCE_FILE_AT_LINE (687)) ;
          var_cas_allConstraintPropertyMap.modifier_insertKey (_inLexique, var_cas_mapIndexName, var_cas_property SOURCE_FILE_AT_LINE (688)) ;
          var_cas_allAvailablePropertyMap.modifier_insertKey (_inLexique, var_cas_mapIndexName, var_cas_property SOURCE_FILE_AT_LINE (689)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  GGS_typeVariablesMap  var_cas_variablesMap ;
  var_cas_variablesMap = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_entityPropertyMap::element_type * operand_26201 = var_cas_allAvailablePropertyMap.firstObject () ;
  while ((operand_26201 != NULL)) {
    macroValidPointer (operand_26201) ;
    if (operand_26201->mInfo.mProperty._isBuilt ()) {
      cPtr_mapIndexProperty * operand_26285 = dynamic_cast <cPtr_mapIndexProperty *> (operand_26201->mInfo.mProperty.getPtr ()) ;
      if (operand_26285 != NULL) {
        macroValidPointer (operand_26285) ; 
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgas_mapIndexInInstruction::constructor_new (_inLexique, operand_26285->mMapName.reader_string (_inLexique SOURCE_FILE_AT_LINE (699)) COMMA_HERE) ;
        GGS_typeCplusPlusName  var_cas_cppName ;
        var_cas_cppName = GGS_typeDirectName::constructor_new (_inLexique, operand_26201->mKey COMMA_HERE) ;
        var_cas_variablesMap.modifier_insertOutProperty (_inLexique, operand_26201->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (701)) ;
      }else{
        cPtr_metamodelAttributeProperty * operand_26597 = dynamic_cast <cPtr_metamodelAttributeProperty *> (operand_26201->mInfo.mProperty.getPtr ()) ;
        if (operand_26597 != NULL) {
          macroValidPointer (operand_26597) ; 
          GGS_typeCplusPlusName  var_cas_cppName ;
          var_cas_cppName = GGS_typeDirectName::constructor_new (_inLexique, operand_26201->mKey COMMA_HERE) ;
          if (((operand_26597->mAttributeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (704))) == (GGS_string (true, "lstring"))).isBuiltAndTrue ()) {
            GGS_AC_galgasType  var_cas_t ;
            var_cas_t = GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE) ;
            var_cas_variablesMap.modifier_insertUsedConstInArgument (_inLexique, operand_26201->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (706)) ;
          }else if (((operand_26597->mAttributeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (707))) == (GGS_string (true, "string"))).isBuiltAndTrue ()) {
            GGS_AC_galgasType  var_cas_t ;
            var_cas_t = GGS_typeGalgas_string::constructor_new (_inLexique COMMA_HERE) ;
            var_cas_variablesMap.modifier_insertUsedConstInArgument (_inLexique, operand_26201->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (709)) ;
          }else if (((operand_26597->mAttributeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (710))) == (GGS_string (true, "lchar"))).isBuiltAndTrue ()) {
            GGS_AC_galgasType  var_cas_t ;
            var_cas_t = GGS_typeGalgas_lchar::constructor_new (_inLexique COMMA_HERE) ;
            var_cas_variablesMap.modifier_insertUsedConstInArgument (_inLexique, operand_26201->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (712)) ;
          }else if (((operand_26597->mAttributeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (713))) == (GGS_string (true, "char"))).isBuiltAndTrue ()) {
            GGS_AC_galgasType  var_cas_t ;
            var_cas_t = GGS_typeGalgas_char::constructor_new (_inLexique COMMA_HERE) ;
            var_cas_variablesMap.modifier_insertUsedConstInArgument (_inLexique, operand_26201->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (715)) ;
          }else if (((operand_26597->mAttributeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (716))) == (GGS_string (true, "luint"))).isBuiltAndTrue ()) {
            GGS_AC_galgasType  var_cas_t ;
            var_cas_t = GGS_typeGalgas_luint::constructor_new (_inLexique COMMA_HERE) ;
            var_cas_variablesMap.modifier_insertUsedConstInArgument (_inLexique, operand_26201->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (718)) ;
          }else if (((operand_26597->mAttributeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (719))) == (GGS_string (true, "uint"))).isBuiltAndTrue ()) {
            GGS_AC_galgasType  var_cas_t ;
            var_cas_t = GGS_typeGalgas_uint::constructor_new (_inLexique COMMA_HERE) ;
            var_cas_variablesMap.modifier_insertUsedConstInArgument (_inLexique, operand_26201->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (721)) ;
          }else if (((operand_26597->mAttributeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (722))) == (GGS_string (true, "lsint"))).isBuiltAndTrue ()) {
            GGS_AC_galgasType  var_cas_t ;
            var_cas_t = GGS_typeGalgas_lsint::constructor_new (_inLexique COMMA_HERE) ;
            var_cas_variablesMap.modifier_insertUsedConstInArgument (_inLexique, operand_26201->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (724)) ;
          }else if (((operand_26597->mAttributeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (725))) == (GGS_string (true, "sint"))).isBuiltAndTrue ()) {
            GGS_AC_galgasType  var_cas_t ;
            var_cas_t = GGS_typeGalgas_sint::constructor_new (_inLexique COMMA_HERE) ;
            var_cas_variablesMap.modifier_insertUsedConstInArgument (_inLexique, operand_26201->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (727)) ;
          }else if (((operand_26597->mAttributeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (728))) == (GGS_string (true, "lbool"))).isBuiltAndTrue ()) {
            GGS_AC_galgasType  var_cas_t ;
            var_cas_t = GGS_typeGalgas_lbool::constructor_new (_inLexique COMMA_HERE) ;
            var_cas_variablesMap.modifier_insertUsedConstInArgument (_inLexique, operand_26201->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (730)) ;
          }else if (((operand_26597->mAttributeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (731))) == (GGS_string (true, "bool"))).isBuiltAndTrue ()) {
            GGS_AC_galgasType  var_cas_t ;
            var_cas_t = GGS_typeGalgas_bool::constructor_new (_inLexique COMMA_HERE) ;
            var_cas_variablesMap.modifier_insertUsedConstInArgument (_inLexique, operand_26201->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (733)) ;
          }else if (((operand_26597->mAttributeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (734))) == (GGS_string (true, "location"))).isBuiltAndTrue ()) {
            GGS_AC_galgasType  var_cas_t ;
            var_cas_t = GGS_typeGalgas_location::constructor_new (_inLexique COMMA_HERE) ;
            var_cas_variablesMap.modifier_insertUsedConstInArgument (_inLexique, operand_26201->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (736)) ;
          }else{
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "internal error (@")) + (operand_26597->mAttributeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (738))))) + (GGS_string (true, " type not handled"))) SOURCE_FILE_AT_LINE (739)) ;
          }
        }else{ // Else part
        }
      }
    }
    operand_26201 = operand_26201->nextObject () ;
  }
  GGS_entityPropertyMap::element_type * operand_29116 = var_cas_allConstraintPropertyMap.firstObject () ;
  while ((operand_29116 != NULL)) {
    macroValidPointer (operand_29116) ;
    if (operand_29116->mInfo.mProperty._isBuilt ()) {
      cPtr_metamodelSharedMapProperty * operand_29212 = dynamic_cast <cPtr_metamodelSharedMapProperty *> (operand_29116->mInfo.mProperty.getPtr ()) ;
      if (operand_29212 != NULL) {
        macroValidPointer (operand_29212) ; 
        GGS_string var_cas_overrideConstraint ;
        if ((var_cas_inOverriddenClassSet.reader_hasKey (_inLexique, operand_29212->mMapElementName.reader_string (_inLexique SOURCE_FILE_AT_LINE (750)) SOURCE_FILE_AT_LINE (750))).isBuiltAndTrue ()) {
          var_cas_overrideConstraint = var_cas_inConstraintName.reader_string (_inLexique SOURCE_FILE_AT_LINE (751)) ;
        }else{
          var_cas_overrideConstraint = GGS_string (true, "") ;
        }
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgas_mapEntityInInstruction::constructor_new (_inLexique, operand_29212->mMapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (755)), operand_29212->mMapElementName.reader_string (_inLexique SOURCE_FILE_AT_LINE (755)), var_cas_overrideConstraint COMMA_HERE) ;
        GGS_typeCplusPlusName  var_cas_cppName ;
        var_cas_cppName = GGS_typeDirectName::constructor_new (_inLexique, GGS_lstring::constructor_new (_inLexique, ((((GGS_string (true, "(* ")) + (operand_29116->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (756))))) + (GGS_string (true, ")"))), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
        var_cas_variablesMap.modifier_insertUsedInOutArgument (_inLexique, operand_29116->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (757)) ;
      }else{ // Else part
      }
    }
    operand_29116 = operand_29116->nextObject () ;
  }
  GGS_typeCplusPlusName  var_cas_cppName ;
  var_cas_cppName = GGS_typeDirectName::constructor_new (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "this"), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_t ;
  var_cas_t = GGS_typeGalgas_entityInInstruction::constructor_new (_inLexique, var_cas_entityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (763)), var_cas_inConstraintName.reader_string (_inLexique SOURCE_FILE_AT_LINE (763)) COMMA_HERE) ;
  var_cas_variablesMap.modifier_insertUsedConstInArgument (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "self"), GGS_location (_inLexique) COMMA_HERE), var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (764)) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap ;
  var_cas_componentSemanticsEntitiesMap = GGS_M_semanticsEntitiesForUse::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
  var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
  var_cas_optionsComponentsMapForUse = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionsList ;
  var_cas_instructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_constraintPropertyDefinitionSet ;
  var_cas_constraintPropertyDefinitionSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_callInstructionSharedPropertySignatureMap  var_cas_callInstructionSharedPropertySignatureMap ;
  var_cas_callInstructionSharedPropertySignatureMap = GGS_callInstructionSharedPropertySignatureMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_componentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_optionsComponentsMapForUse, var_cas_variablesMap, var_cas_instructionsList, var_cas_allAvailablePropertyMap, var_cas_constraintPropertyDefinitionSet, var_cas_callInstructionSharedPropertySignatureMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  var_cas_ioConstraintInstructionListMap.modifier_insertKey (_inLexique, var_cas_entityName, var_cas_instructionsList, var_cas_callInstructionSharedPropertySignatureMap, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (783)) ;
  var_cas_ioConstrainedEntityMap.modifier_insertKey (_inLexique, var_cas_entityName, var_cas_allMetamodelPropertyMap, GGS_bool (true, false), var_cas_currentMetamodelPropertyMap, var_cas_superEntity, var_cas_currentConstraintPropertyMap, var_cas_superClassSet, var_cas_allConstraintPropertyMap, var_cas_allAvailablePropertyMap SOURCE_FILE_AT_LINE (790)) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraints_on_entity_declaration_constraint_parser_573_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) COMMA_HERE) ;
  switch (select_constraint_parser_2 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          switch (select_repeat_constraint_parser_3 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_4 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mapindex) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_on) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of production rule 'property_path_for_constraint'      *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_property_path_for_constraint_constraint_parser_805_6_ (galgas_scanner & _inLexique,
                                GGS_L_propertyPath  &var_cas_outPath) {
  var_cas_outPath = GGS_L_propertyPath::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        switch (select_constraint_parser_6 (_inLexique)) {
          case 1 : {
            GGS_lstring  var_cas_pathElement ;
            _inLexique._assignFromAttribute_tokenString (var_cas_pathElement) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            var_cas_outPath._addAssign_operation (var_cas_pathElement) ;
            } break ;
          case 2 : {
            GGS_lstring  var_cas_pathElement ;
            _inLexique._assignFromAttribute_tokenString (var_cas_pathElement) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
            var_cas_outPath._addAssign_operation (GGS_lstring::constructor_new (_inLexique, ((GGS_string (true, ".")) + (var_cas_pathElement.reader_string (_inLexique SOURCE_FILE_AT_LINE (817)))), var_cas_pathElement.reader_location (_inLexique SOURCE_FILE_AT_LINE (817)) COMMA_HERE)) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_constraint_parser_5 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_property_path_for_constraint_constraint_parser_805_6_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        switch (select_constraint_parser_6 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_constraint_parser_5 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Implementation of production rule 'constraint_relation_expression'     *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraint_relation_expression_constraint_parser_826_6_ (galgas_scanner & _inLexique,
                                GGS_relationVarMap  &var_cas_ioRelationVariableMap,
                                GGS_indexMap  &var_cas_ioIndexMap,
                                GGS_metamodelRelationExpression  &var_cas_outExpression) {
  nt_constraint_relation_term_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_outExpression) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_7 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7C) COMMA_HERE) ;
          GGS_metamodelRelationExpression  var_cas_e ;
          nt_constraint_relation_term_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_e) ;
          var_cas_outExpression = GGS_metamodelRelationOr::constructor_new (_inLexique, var_cas_outExpression, var_cas_e COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraint_relation_expression_constraint_parser_826_6_parse (galgas_scanner & _inLexique) {
  nt_constraint_relation_term_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_7 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7C) COMMA_HERE) ;
          nt_constraint_relation_term_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'constraint_relation_term'        *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraint_relation_term_constraint_parser_846_6_ (galgas_scanner & _inLexique,
                                GGS_relationVarMap  &var_cas_ioRelationVariableMap,
                                GGS_indexMap  &var_cas_ioIndexMap,
                                GGS_metamodelRelationExpression  &var_cas_outExpression) {
  nt_constraint_relation_factor_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_outExpression) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_8 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__26) COMMA_HERE) ;
          GGS_metamodelRelationExpression  var_cas_e ;
          nt_constraint_relation_factor_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_e) ;
          var_cas_outExpression = GGS_metamodelRelationOr::constructor_new (_inLexique, var_cas_outExpression, var_cas_e COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraint_relation_term_constraint_parser_846_6_parse (galgas_scanner & _inLexique) {
  nt_constraint_relation_factor_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_8 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__26) COMMA_HERE) ;
          nt_constraint_relation_factor_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'constraint_relation_factor'       *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraint_relation_factor_constraint_parser_863_6_ (galgas_scanner & _inLexique,
                                GGS_relationVarMap  &var_cas_ioRelationVariableMap,
                                GGS_indexMap  &var_cas_ioIndexMap,
                                GGS_metamodelRelationExpression  &var_cas_outExpression) {
  switch (select_constraint_parser_9 (_inLexique)) {
    case 1 : {
      nt_constraint_relation_primary_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_outExpression) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_not) COMMA_HERE) ;
      nt_constraint_relation_primary_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_outExpression) ;
      var_cas_outExpression = GGS_metamodelRelationNot::constructor_new (_inLexique, var_cas_outExpression COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraint_relation_factor_constraint_parser_863_6_parse (galgas_scanner & _inLexique) {
  switch (select_constraint_parser_9 (_inLexique)) {
    case 1 : {
      nt_constraint_relation_primary_parse (_inLexique) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_not) COMMA_HERE) ;
      nt_constraint_relation_primary_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of production rule 'constraint_relation_primary'       *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraint_relation_primary_constraint_parser_879_6_ (galgas_scanner & _inLexique,
                                GGS_relationVarMap  &var_cas_ioRelationVariableMap,
                                GGS_indexMap  &var_cas_ioIndexMap,
                                GGS_metamodelRelationExpression  &var_cas_outExpression) {
  switch (select_constraint_parser_10 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_true) COMMA_HERE) ;
      var_cas_outExpression = GGS_metamodelRelationTrue::constructor_new (_inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_false) COMMA_HERE) ;
      var_cas_outExpression = GGS_metamodelRelationFalse::constructor_new (_inLexique COMMA_HERE) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
      nt_constraint_relation_expression_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_outExpression) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
      } break ;
    case 4 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      GGS_lstring  var_cas_localVar ;
      _inLexique._assignFromAttribute_tokenString (var_cas_localVar) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_luint  var_cas_variableIndex ;
      GGS_lstring  var_cas_domainVariable ;
      if (var_cas_ioRelationVariableMap._isBuilt ()) {
        var_cas_ioRelationVariableMap (HERE)->method_searchKeyAndGetIndex (_inLexique, var_cas_localVar, var_cas_variableIndex, var_cas_domainVariable SOURCE_FILE_AT_LINE (900)) ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3D_3D) COMMA_HERE) ;
      GGS_lstring  var_cas_indexVariableName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_indexVariableName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_lstring  var_cas_domainVariableFromIndex ;
      if (var_cas_ioIndexMap._isBuilt ()) {
        var_cas_ioIndexMap (HERE)->method_searchKey (_inLexique, var_cas_indexVariableName, var_cas_domainVariableFromIndex SOURCE_FILE_AT_LINE (905)) ;
      }
      if (((var_cas_domainVariable.reader_string (_inLexique SOURCE_FILE_AT_LINE (906))) != (var_cas_domainVariableFromIndex.reader_string (_inLexique SOURCE_FILE_AT_LINE (906)))).isBuiltAndTrue ()) {
        var_cas_indexVariableName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((((((GGS_string (true, "this index refers to the '")) + (var_cas_domainVariableFromIndex.reader_string (_inLexique SOURCE_FILE_AT_LINE (907))))) + (GGS_string (true, "' domain, while '")))) + (var_cas_localVar.reader_string (_inLexique SOURCE_FILE_AT_LINE (908))))) + (GGS_string (true, "' relation variable refers to the '")))) + (var_cas_domainVariable.reader_string (_inLexique SOURCE_FILE_AT_LINE (909))))) + (GGS_string (true, "' domain"))) SOURCE_FILE_AT_LINE (910)) ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      var_cas_outExpression = GGS_metamodelRelationPrimary::constructor_new (_inLexique, var_cas_ioRelationVariableMap, var_cas_localVar, var_cas_variableIndex, var_cas_indexVariableName, var_cas_domainVariable COMMA_HERE) ;
      } break ;
    case 5 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
      GGS_L_propertyPath  var_cas_path ;
      nt_property_path_for_constraint_ (_inLexique, var_cas_path) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
      GGS_metamodelRelationParameterList  var_cas_parameterList ;
      var_cas_parameterList = GGS_metamodelRelationParameterList::constructor_emptyList (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_parameter ;
            _inLexique._assignFromAttribute_tokenString (var_cas_parameter) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            GGS_luint  var_cas_parameterIndex ;
            GGS_lstring  var_cas_domainVariable ;
            if (var_cas_ioRelationVariableMap._isBuilt ()) {
              var_cas_ioRelationVariableMap (HERE)->method_searchKeyAndGetIndex (_inLexique, var_cas_parameter, var_cas_parameterIndex, var_cas_domainVariable SOURCE_FILE_AT_LINE (925)) ;
            }
            var_cas_parameterList._addAssign_operation (var_cas_parameter, var_cas_parameterIndex, var_cas_domainVariable) ;
          switch (select_repeat_constraint_parser_11 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      GGS_lbool  var_cas_operationIsAnd ;
      switch (select_constraint_parser_12 (_inLexique)) {
        case 1 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7C) COMMA_HERE) ;
          var_cas_operationIsAnd = GGS_lbool::constructor_new (_inLexique, GGS_bool (true, false), GGS_location (_inLexique) COMMA_HERE) ;
          } break ;
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__26) COMMA_HERE) ;
          var_cas_operationIsAnd = GGS_lbool::constructor_new (_inLexique, GGS_bool (true, true), GGS_location (_inLexique) COMMA_HERE) ;
          } break ;
        default :
          break ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
      var_cas_outExpression = GGS_metamodelRelationDo::constructor_new (_inLexique, var_cas_ioRelationVariableMap, var_cas_parameterList, var_cas_path, var_cas_operationIsAnd COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraint_relation_primary_constraint_parser_879_6_parse (galgas_scanner & _inLexique) {
  switch (select_constraint_parser_10 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_true) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_false) COMMA_HERE) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
      nt_constraint_relation_expression_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
      } break ;
    case 4 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3D_3D) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
      } break ;
    case 5 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
      nt_property_path_for_constraint_parse (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          switch (select_repeat_constraint_parser_11 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
      switch (select_constraint_parser_12 (_inLexique)) {
        case 1 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7C) COMMA_HERE) ;
          } break ;
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__26) COMMA_HERE) ;
          } break ;
        default :
          break ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "buildUsefullPropertyMap"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildUsefullPropertyMap (C_Lexique & _inLexique,
                                const GGS_entityPropertyMap  & var_cas_inInputPropertyMap,
                                const GGS_stringset  & var_cas_inUsefullClassSet,
                                GGS_entityPropertyMap  & var_cas_outOutputPropertyMap COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_buildUsefullPropertyMap at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outOutputPropertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_entityPropertyMap::element_type * operand_36048 = var_cas_inInputPropertyMap.firstObject () ;
  while ((operand_36048 != NULL)) {
    macroValidPointer (operand_36048) ;
    if (operand_36048->mInfo.mProperty._isBuilt ()) {
      cPtr_metamodelSingleReferenceProperty * operand_36136 = dynamic_cast <cPtr_metamodelSingleReferenceProperty *> (operand_36048->mInfo.mProperty.getPtr ()) ;
      if (operand_36136 != NULL) {
        macroValidPointer (operand_36136) ; 
        if ((var_cas_inUsefullClassSet.reader_hasKey (_inLexique, operand_36136->mReferenceEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (956)) SOURCE_FILE_AT_LINE (956))).isBuiltAndTrue ()) {
          var_cas_outOutputPropertyMap.modifier_insertKey (_inLexique, operand_36048->mKey, operand_36048->mInfo.mProperty SOURCE_FILE_AT_LINE (957)) ;
        }
      }else{
        cPtr_metamodelMultipleReferenceProperty * operand_36369 = dynamic_cast <cPtr_metamodelMultipleReferenceProperty *> (operand_36048->mInfo.mProperty.getPtr ()) ;
        if (operand_36369 != NULL) {
          macroValidPointer (operand_36369) ; 
          if ((var_cas_inUsefullClassSet.reader_hasKey (_inLexique, operand_36369->mReferenceEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (960)) SOURCE_FILE_AT_LINE (960))).isBuiltAndTrue ()) {
            var_cas_outOutputPropertyMap.modifier_insertKey (_inLexique, operand_36048->mKey, operand_36048->mInfo.mProperty SOURCE_FILE_AT_LINE (961)) ;
          }
        }else{ // Else part
          var_cas_outOutputPropertyMap.modifier_insertKey (_inLexique, operand_36048->mKey, operand_36048->mInfo.mProperty SOURCE_FILE_AT_LINE (964)) ;
        }
      }
    }
    operand_36048 = operand_36048->nextObject () ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_buildUsefullPropertyMap\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'constraint_class_override_declarations' *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraint_class_override_declarations_constraint_parser_971_6_ (galgas_scanner & _inLexique,
                                GGS_lstring  var_cas_inRootClass,
                                GGS_entityToImplementMap  var_cas_inOriginalMetamodelEntityMap,
                                GGS_entityToImplementMap  &var_cas_outMetamodelEntityMap,
                                GGS_stringset  &var_cas_outOverriddenClassSet) {
  var_cas_outOverriddenClassSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_override) COMMA_HERE) ;
        GGS_lstring  var_cas_metamodelClass ;
        _inLexique._assignFromAttribute_tokenString (var_cas_metamodelClass) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) COMMA_HERE) ;
        GGS_entityPropertyMap  automatic_var_23 ;
        GGS_bool automatic_var_24 ;
        GGS_entityPropertyMap  automatic_var_25 ;
        GGS_lstring  automatic_var_26 ;
        GGS_entityPropertyMap  automatic_var_27 ;
        GGS_stringset  automatic_var_28 ;
        GGS_entityPropertyMap  automatic_var_29 ;
        GGS_entityPropertyMap  automatic_var_30 ;
        if (var_cas_inOriginalMetamodelEntityMap._isBuilt ()) {
          var_cas_inOriginalMetamodelEntityMap (HERE)->method_searchKey (_inLexique, var_cas_metamodelClass, automatic_var_23, automatic_var_24, automatic_var_25, automatic_var_26, automatic_var_27, automatic_var_28, automatic_var_29, automatic_var_30 SOURCE_FILE_AT_LINE (983)) ;
        }
        if ((var_cas_outOverriddenClassSet.reader_hasKey (_inLexique, var_cas_metamodelClass.reader_string (_inLexique SOURCE_FILE_AT_LINE (984)) SOURCE_FILE_AT_LINE (984))).isBuiltAndTrue ()) {
          var_cas_metamodelClass.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this class is already declared as overridden") SOURCE_FILE_AT_LINE (986)) ;
        }else{
          var_cas_outOverriddenClassSet._addAssign_operation (var_cas_metamodelClass.reader_string (_inLexique SOURCE_FILE_AT_LINE (987))) ;
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      switch (select_repeat_constraint_parser_13 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  if (((! (var_cas_outOverriddenClassSet.reader_hasKey (_inLexique, var_cas_inRootClass.reader_string (_inLexique SOURCE_FILE_AT_LINE (993)) SOURCE_FILE_AT_LINE (993))))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '%")) + (var_cas_inRootClass.reader_string (_inLexique SOURCE_FILE_AT_LINE (994))))) + (GGS_string (true, "' root class should be declared as overridden"))) SOURCE_FILE_AT_LINE (995)) ;
  }
  GGS_stringset  var_cas_usefulClassSet ;
  var_cas_usefulClassSet = GGS_stringset::constructor_setWithString (_inLexique, var_cas_inRootClass.reader_string (_inLexique SOURCE_FILE_AT_LINE (997)) COMMA_HERE) ;
  GGS_bool var_cas_continue ;
  var_cas_continue = GGS_bool (true, true) ;
  GGS_uint _variant_39815 = var_cas_inOriginalMetamodelEntityMap.reader_count (_inLexique SOURCE_FILE_AT_LINE (999))._add_operation (_inLexique, GGS_uint (true, 1U) SOURCE_FILE_AT_LINE (999)) ;
  GGS_bool _condition_39815 (_variant_39815._isBuilt (), true) ;
  while (_condition_39815.isBuiltAndTrue ()) {
    _condition_39815 = var_cas_continue ;
    if (_condition_39815.isBuiltAndTrue ()) {
      if (_variant_39815.uintValue () == 0) {
        _inLexique.onTheFlyRunTimeError ("loop variant error" SOURCE_FILE_AT_LINE (1044)) ;
        _condition_39815 = GGS_bool (true, false) ;
      }else{
        _variant_39815._decrement_operation (_inLexique COMMA_HERE) ;
        var_cas_continue = GGS_bool (true, false) ;
        GGS_stringset::element_type * operand_38013 = var_cas_outOverriddenClassSet.firstObject () ;
        while ((operand_38013 != NULL)) {
          macroValidPointer (operand_38013) ;
          GGS_entityPropertyMap  var_cas_allAvailablePropertyMap ;
          GGS_lstring  var_cas_superEntityName ;
          GGS_entityPropertyMap  automatic_var_31 ;
          GGS_bool automatic_var_32 ;
          GGS_entityPropertyMap  automatic_var_33 ;
          GGS_entityPropertyMap  automatic_var_34 ;
          GGS_stringset  automatic_var_35 ;
          GGS_entityPropertyMap  automatic_var_36 ;
          if (var_cas_inOriginalMetamodelEntityMap._isBuilt ()) {
            var_cas_inOriginalMetamodelEntityMap (HERE)->method_searchKey (_inLexique, GGS_lstring::constructor_new (_inLexique, operand_38013->mKey, GGS_location (_inLexique) COMMA_HERE), automatic_var_31, automatic_var_32, automatic_var_33, var_cas_superEntityName, automatic_var_34, automatic_var_35, automatic_var_36, var_cas_allAvailablePropertyMap SOURCE_FILE_AT_LINE (1005)) ;
          }
          if ((((var_cas_usefulClassSet.reader_hasKey (_inLexique, var_cas_superEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1017)) SOURCE_FILE_AT_LINE (1017))) & ((! (var_cas_usefulClassSet.reader_hasKey (_inLexique, operand_38013->mKey SOURCE_FILE_AT_LINE (1017))))))).isBuiltAndTrue ()) {
            var_cas_continue = GGS_bool (true, true) ;
            var_cas_usefulClassSet._addAssign_operation (operand_38013->mKey) ;
          }
          if ((var_cas_usefulClassSet.reader_hasKey (_inLexique, operand_38013->mKey SOURCE_FILE_AT_LINE (1021))).isBuiltAndTrue ()) {
            if (((((var_cas_superEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1023))) != (GGS_string (true, ""))) & ((! (var_cas_usefulClassSet.reader_hasKey (_inLexique, var_cas_superEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1023)) SOURCE_FILE_AT_LINE (1023))))))).isBuiltAndTrue ()) {
              var_cas_continue = GGS_bool (true, true) ;
              var_cas_usefulClassSet._addAssign_operation (var_cas_superEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1025))) ;
            }
            GGS_entityPropertyMap::element_type * operand_38969 = var_cas_allAvailablePropertyMap.firstObject () ;
            while ((operand_38969 != NULL)) {
              macroValidPointer (operand_38969) ;
              if (operand_38969->mInfo.mProperty._isBuilt ()) {
                cPtr_metamodelSingleReferenceProperty * operand_39048 = dynamic_cast <cPtr_metamodelSingleReferenceProperty *> (operand_38969->mInfo.mProperty.getPtr ()) ;
                if (operand_39048 != NULL) {
                  macroValidPointer (operand_39048) ; 
                  if ((((var_cas_outOverriddenClassSet.reader_hasKey (_inLexique, operand_39048->mReferenceEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1030)) SOURCE_FILE_AT_LINE (1030))) & ((! (var_cas_usefulClassSet.reader_hasKey (_inLexique, operand_39048->mReferenceEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1030)) SOURCE_FILE_AT_LINE (1030))))))).isBuiltAndTrue ()) {
                    var_cas_continue = GGS_bool (true, true) ;
                    var_cas_usefulClassSet._addAssign_operation (operand_39048->mReferenceEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1032))) ;
                  }
                }else{
                  cPtr_metamodelMultipleReferenceProperty * operand_39389 = dynamic_cast <cPtr_metamodelMultipleReferenceProperty *> (operand_38969->mInfo.mProperty.getPtr ()) ;
                  if (operand_39389 != NULL) {
                    macroValidPointer (operand_39389) ; 
                    if ((((var_cas_outOverriddenClassSet.reader_hasKey (_inLexique, operand_39389->mReferenceEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1035)) SOURCE_FILE_AT_LINE (1035))) & ((! (var_cas_usefulClassSet.reader_hasKey (_inLexique, operand_39389->mReferenceEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1035)) SOURCE_FILE_AT_LINE (1035))))))).isBuiltAndTrue ()) {
                      var_cas_continue = GGS_bool (true, true) ;
                      var_cas_usefulClassSet._addAssign_operation (operand_39389->mReferenceEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1037))) ;
                    }
                  }else{ // Else part
                  }
                }
              }
              operand_38969 = operand_38969->nextObject () ;
            }
          }
          operand_38013 = operand_38013->nextObject () ;
        }
      }
    }
  }
  GGS_stringset  var_cas_missingClasses ;
  var_cas_missingClasses = var_cas_usefulClassSet._substract_operation (_inLexique, var_cas_outOverriddenClassSet SOURCE_FILE_AT_LINE (1047)) ;
  GGS_stringset::element_type * operand_39980 = var_cas_missingClasses.firstObject () ;
  while ((operand_39980 != NULL)) {
    macroValidPointer (operand_39980) ;
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '%")) + (operand_39980->mKey))) + (GGS_string (true, "' class should be overriden"))) SOURCE_FILE_AT_LINE (1050)) ;
    operand_39980 = operand_39980->nextObject () ;
  }
  GGS_stringset  var_cas_uselessClasses ;
  var_cas_uselessClasses = var_cas_outOverriddenClassSet._substract_operation (_inLexique, var_cas_usefulClassSet SOURCE_FILE_AT_LINE (1052)) ;
  GGS_stringset::element_type * operand_40232 = var_cas_uselessClasses.firstObject () ;
  while ((operand_40232 != NULL)) {
    macroValidPointer (operand_40232) ;
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "it is useless to override '%")) + (operand_40232->mKey))) + (GGS_string (true, "' class"))) SOURCE_FILE_AT_LINE (1055)) ;
    operand_40232 = operand_40232->nextObject () ;
  }
  var_cas_outMetamodelEntityMap = GGS_entityToImplementMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_entityToImplementMap::element_type * operand_40527 = var_cas_inOriginalMetamodelEntityMap.firstObject () ;
  while ((operand_40527 != NULL)) {
    macroValidPointer (operand_40527) ;
    if ((var_cas_usefulClassSet.reader_hasKey (_inLexique, operand_40527->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (1069)) SOURCE_FILE_AT_LINE (1069))).isBuiltAndTrue ()) {
      GGS_entityPropertyMap  var_cas_allMetamodelPropertyMap ;
      ::routine_buildUsefullPropertyMap (_inLexique,  operand_40527->mInfo.mAllMetamodelPropertyMap,  var_cas_usefulClassSet,  var_cas_allMetamodelPropertyMap SOURCE_FILE_AT_LINE (1071)) ;
      GGS_entityPropertyMap  var_cas_currentMetamodelPropertyMap ;
      ::routine_buildUsefullPropertyMap (_inLexique,  operand_40527->mInfo.mCurrentMetamodelPropertyMap,  var_cas_usefulClassSet,  var_cas_currentMetamodelPropertyMap SOURCE_FILE_AT_LINE (1073)) ;
      GGS_entityPropertyMap  var_cas_currentConstraintPropertyMap ;
      ::routine_buildUsefullPropertyMap (_inLexique,  operand_40527->mInfo.mCurrentConstraintPropertyMap,  var_cas_usefulClassSet,  var_cas_currentConstraintPropertyMap SOURCE_FILE_AT_LINE (1075)) ;
      GGS_entityPropertyMap  var_cas_allConstraintPropertyMap ;
      ::routine_buildUsefullPropertyMap (_inLexique,  operand_40527->mInfo.mAllConstraintPropertyMap,  var_cas_usefulClassSet,  var_cas_allConstraintPropertyMap SOURCE_FILE_AT_LINE (1077)) ;
      GGS_entityPropertyMap  var_cas_allAvailablePropertyMap ;
      ::routine_buildUsefullPropertyMap (_inLexique,  operand_40527->mInfo.mAllAvailablePropertyMap,  var_cas_usefulClassSet,  var_cas_allAvailablePropertyMap SOURCE_FILE_AT_LINE (1079)) ;
      var_cas_outMetamodelEntityMap.modifier_insertKey (_inLexique, operand_40527->mKey, var_cas_allMetamodelPropertyMap, operand_40527->mInfo.mIsAbstract, var_cas_currentMetamodelPropertyMap, operand_40527->mInfo.mSuperEntityName, var_cas_currentConstraintPropertyMap, operand_40527->mInfo.mSuperEntitySet, var_cas_allConstraintPropertyMap, var_cas_allAvailablePropertyMap SOURCE_FILE_AT_LINE (1080)) ;
    }
    operand_40527 = operand_40527->nextObject () ;
  }
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraint_class_override_declarations_constraint_parser_971_6_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_override) COMMA_HERE) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) COMMA_HERE) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
      switch (select_repeat_constraint_parser_13 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

