//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'constraint_parser.cpp'                        *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                        june 9th, 2006, at 22h4'5"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "constraint_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const char gGGSsourceFile [] = "constraint_parser.ggs" ;
  #define SOURCE_FILE_AT_LINE(line) , gGGSsourceFile, line
#else
  #define SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_galgas_component_constraint_parser_131_24_ (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  nt_parse_constraint_document_ (_inLexique, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_galgas_component_constraint_parser_131_24_importLexique (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  nt_parse_constraint_document_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_galgas_component_constraint_parser_131_24_importSyntax (galgas_scanner & _inLexique,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  GGS_M_constraintComponents  var_cas_constraintComponentMap ;
  var_cas_constraintComponentMap = GGS_M_constraintComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  nt_parse_constraint_document_ (_inLexique, var_cas_ioMetamodelComponentMap, var_cas_constraintComponentMap) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_galgas_component_constraint_parser_131_24_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  nt_parse_constraint_document_ (_inLexique, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_galgas_component_constraint_parser_131_24_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  nt_parse_constraint_document_ (_inLexique, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_galgas_component_constraint_parser_131_24_importOptions (galgas_scanner & _inLexique,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  nt_parse_constraint_document_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'parse_constraint_document'        *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_parse_constraint_document_constraint_parser_183_33_ (galgas_scanner & _inLexique,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_constraint) ;
  GGS_lstring  var_cas_constraintName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_constraintName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_passMap  var_cas_passMap ;
  var_cas_passMap = GGS_passMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  switch (select_constraint_parser_0 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_passName ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_passName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            var_cas_passMap.method_insertKey (_inLexique, var_cas_passName SOURCE_FILE_AT_LINE (199)) ;
          switch (select_repeat_constraint_parser_1 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  GGS_lstring  var_cas_metamodelName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_metamodelName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
  GGS_lstring  var_cas_fileName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  var_cas_fileName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  GGS_M_semanticsComponents  var_cas_unusedSemanticsMapForUse ;
  var_cas_unusedSemanticsMapForUse = GGS_M_semanticsComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_metamodelsComponents  var_cas_metamodelComponentMap ;
  var_cas_metamodelComponentMap = GGS_M_metamodelsComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_fileName, var_cas_unusedSemanticsMapForUse, var_cas_metamodelComponentMap, var_cas_ioConstraintComponentMap) ;
  GGS_lstring  var_cas_rootEntity ;
  GGS_M_semanticsEntitiesForUse  var_cas_semanticsEntitiesMap ;
  GGS_entityToImplementMap  var_cas_entityMap ;
  GGS_stringset  var_cas_multiReferencedEntities ;
  if (var_cas_metamodelComponentMap._isBuilt ()) {
    var_cas_metamodelComponentMap (HERE)->method_searchKey (_inLexique, var_cas_metamodelName, var_cas_rootEntity, var_cas_semanticsEntitiesMap, var_cas_entityMap, var_cas_multiReferencedEntities SOURCE_FILE_AT_LINE (229)) ;
  }
  GGS_mapEntityMap  var_cas_mapEntityMap ;
  var_cas_mapEntityMap = GGS_mapEntityMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_mapAndEntityUniqueMap  var_cas_mapAndEntityUniqueMap ;
  var_cas_mapAndEntityUniqueMap = GGS_mapAndEntityUniqueMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_constrainedEntityMap  var_cas_constrainedEntityMap ;
  var_cas_constrainedEntityMap = GGS_constrainedEntityMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_2 (_inLexique)) {
        case 2 : {
          nt_constraint_map_declaration_ (_inLexique, var_cas_entityMap, var_cas_mapEntityMap) ;
          } break ;
        case 3 : {
          nt_constraints_on_entity_declaration_ (_inLexique, var_cas_entityMap, var_cas_mapEntityMap, var_cas_constrainedEntityMap, var_cas_passMap) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  GGS_bool var_cas_constraintOnRootEntity ;
  var_cas_constraintOnRootEntity = var_cas_constrainedEntityMap.reader_hasKey (_inLexique, var_cas_rootEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (255)) SOURCE_FILE_AT_LINE (255)) ;
  if (((! (var_cas_constraintOnRootEntity))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "no constraint is defined on metamodel root entity") SOURCE_FILE_AT_LINE (258)) ;
  }
  if ((var_cas_constraintOnRootEntity).isBuiltAndTrue ()) {
    GGS_constrainedEntityPassMap  var_cas_constrainedEntityPassMapForRootEntity ;
    GGS_location  var_cas_endOfConstraintLocation ;
    GGS_stringset  var_cas_8667 ;
    GGS_lstring  var_cas_8721 ;
    GGS_entityPropertyMap  var_cas_8730 ;
    GGS_stringset  var_cas_8739 ;
    GGS_mapAsConstraintPropertyMap  var_cas_8779 ;
    GGS_mapAsConstraintPropertyMap  var_cas_8788 ;
    GGS_constraintAllPropertiesMap  var_cas_8797 ;
    GGS_indexMap  var_cas_8806 ;
    GGS_indexMap  var_cas_8815 ;
    if (var_cas_constrainedEntityMap._isBuilt ()) {
      var_cas_constrainedEntityMap (HERE)->method_searchKey (_inLexique, var_cas_rootEntity, var_cas_8667, var_cas_constrainedEntityPassMapForRootEntity, var_cas_8721, var_cas_8730, var_cas_8739, var_cas_endOfConstraintLocation, var_cas_8779, var_cas_8788, var_cas_8797, var_cas_8806, var_cas_8815 SOURCE_FILE_AT_LINE (264)) ;
    }
    if (((var_cas_constrainedEntityPassMapForRootEntity.reader_count (_inLexique SOURCE_FILE_AT_LINE (278))) != (var_cas_passMap.reader_count (_inLexique SOURCE_FILE_AT_LINE (278)))).isBuiltAndTrue ()) {
      var_cas_endOfConstraintLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the root entity constraint should define all passes") SOURCE_FILE_AT_LINE (280)) ;
    }
    GGS_constrainedEntityPassMap::element_type * operand_9178 = var_cas_constrainedEntityPassMapForRootEntity.firstObject () ;
    while ((operand_9178 != NULL)) {
      macroValidPointer (operand_9178) ;
      if (((operand_9178->mInfo.mSharedPropertyList.reader_length (_inLexique SOURCE_FILE_AT_LINE (283))) != (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        operand_9178->mKey.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "a pass of the root entity constraint should not define any shared prperty") SOURCE_FILE_AT_LINE (285)) ;
      }
      operand_9178 = operand_9178->nextObject () ;
    }
  }
  GGS_constrainedEntityMap::element_type * operand_9505 = var_cas_constrainedEntityMap.firstObject () ;
  while ((operand_9505 != NULL)) {
    macroValidPointer (operand_9505) ;
    GGS_stringset  var_cas_definedPassSet ;
    var_cas_definedPassSet = operand_9505->mInfo.mConstrainedEntityPassMap.reader_allKeys (_inLexique SOURCE_FILE_AT_LINE (290)) ;
    GGS_entityPropertyMap::element_type * operand_9744 = operand_9505->mInfo.mEntityPropertiesMap.firstObject () ;
    while ((operand_9744 != NULL)) {
      macroValidPointer (operand_9744) ;
      if (((operand_9744->mInfo.mKind) != (GGS_metamodelPropertyKind::constructor_attributeProperty (_inLexique COMMA_HERE))).isBuiltAndTrue ()) {
        GGS_constrainedEntityPassMap  var_cas_referencePropertyConstrainedEntityPassMap ;
        GGS_stringset  var_cas_10044 ;
        GGS_lstring  var_cas_10090 ;
        GGS_entityPropertyMap  var_cas_10093 ;
        GGS_stringset  var_cas_10096 ;
        GGS_location  var_cas_10099 ;
        GGS_mapAsConstraintPropertyMap  var_cas_10102 ;
        GGS_mapAsConstraintPropertyMap  var_cas_10105 ;
        GGS_constraintAllPropertiesMap  var_cas_10108 ;
        GGS_indexMap  var_cas_10111 ;
        GGS_indexMap  var_cas_10114 ;
        if (var_cas_constrainedEntityMap._isBuilt ()) {
          var_cas_constrainedEntityMap (HERE)->method_searchKey (_inLexique, operand_9744->mInfo.mTypeName, var_cas_10044, var_cas_referencePropertyConstrainedEntityPassMap, var_cas_10090, var_cas_10093, var_cas_10096, var_cas_10099, var_cas_10102, var_cas_10105, var_cas_10108, var_cas_10111, var_cas_10114 SOURCE_FILE_AT_LINE (294)) ;
        }
        GGS_constrainedEntityPassMap::element_type * operand_10175 = var_cas_referencePropertyConstrainedEntityPassMap.firstObject () ;
        while ((operand_10175 != NULL)) {
          macroValidPointer (operand_10175) ;
          if (((! (operand_9505->mInfo.mConstrainedEntityPassMap.reader_hasKey (_inLexique, operand_10175->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (296)) SOURCE_FILE_AT_LINE (296))))).isBuiltAndTrue ()) {
            operand_9505->mKey.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((GGS_string (true, "this constraint should define the '")) + (operand_10175->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (297))))) + (GGS_string (true, "' pass (due to '")))) + (operand_9744->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (298))))) + (GGS_string (true, "' reference)"))) SOURCE_FILE_AT_LINE (299)) ;
          }
          operand_10175 = operand_10175->nextObject () ;
        }
        GGS_stringset  var_cas_referencePassSet ;
        var_cas_referencePassSet = var_cas_referencePropertyConstrainedEntityPassMap.reader_allKeys (_inLexique SOURCE_FILE_AT_LINE (301)) ;
        GGS_constrainedEntityPassMap::element_type * operand_10686 = operand_9505->mInfo.mConstrainedEntityPassMap.firstObject () ;
        while ((operand_10686 != NULL)) {
          macroValidPointer (operand_10686) ;
          if ((((operand_10686->mInfo.mConstraintPropertyDefinitionSet.reader_hasKey (_inLexique, operand_9744->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (308)) SOURCE_FILE_AT_LINE (308))) & ((! (var_cas_referencePassSet.reader_hasKey (_inLexique, operand_10686->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (308)) SOURCE_FILE_AT_LINE (308))))))).isBuiltAndTrue ()) {
            operand_10686->mKey.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "this pass should not define the '")) + (operand_9744->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (309))))) + (GGS_string (true, "' property"))) SOURCE_FILE_AT_LINE (310)) ;
          }else if (((((! (operand_10686->mInfo.mConstraintPropertyDefinitionSet.reader_hasKey (_inLexique, operand_9744->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (310)) SOURCE_FILE_AT_LINE (310))))) & (var_cas_referencePassSet.reader_hasKey (_inLexique, operand_10686->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (310)) SOURCE_FILE_AT_LINE (310))))).isBuiltAndTrue ()) {
            operand_10686->mKey.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "this pass should define the '")) + (operand_9744->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (311))))) + (GGS_string (true, "' property"))) SOURCE_FILE_AT_LINE (312)) ;
          }
          if ((operand_10686->mInfo.mCallInstructionSharedPropertySignatureMap.reader_hasKey (_inLexique, operand_9744->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (314)) SOURCE_FILE_AT_LINE (314))).isBuiltAndTrue ()) {
            GGS_callInstructionSharedPropertySignatureMap  var_cas_callInstructionSharedPropertySignatureMap ;
            var_cas_callInstructionSharedPropertySignatureMap = operand_10686->mInfo.mCallInstructionSharedPropertySignatureMap ;
            GGS_sharedPropertyList  var_cas_signature ;
            GGS_location  var_cas_signatureLocation ;
            if (var_cas_callInstructionSharedPropertySignatureMap._isBuilt ()) {
              var_cas_callInstructionSharedPropertySignatureMap (HERE)->method_searchKey (_inLexique, operand_9744->mKey, var_cas_signature, var_cas_signatureLocation SOURCE_FILE_AT_LINE (318)) ;
            }
            GGS_sharedPropertyList  var_cas_sharedPropertyList ;
            GGS_typeInstructionList  var_cas_12222 ;
            GGS_stringset  var_cas_12245 ;
            GGS_callInstructionSharedPropertySignatureMap  var_cas_12248 ;
            if (var_cas_referencePropertyConstrainedEntityPassMap._isBuilt ()) {
              var_cas_referencePropertyConstrainedEntityPassMap (HERE)->method_searchKey (_inLexique, operand_10686->mKey, var_cas_12222, var_cas_sharedPropertyList, var_cas_12245, var_cas_12248 SOURCE_FILE_AT_LINE (320)) ;
            }
            if (((var_cas_sharedPropertyList.reader_length (_inLexique SOURCE_FILE_AT_LINE (321))) == (var_cas_signature.reader_length (_inLexique SOURCE_FILE_AT_LINE (321)))).isBuiltAndTrue ()) {
              GGS_sharedPropertyList::element_type * operand_12362 = var_cas_sharedPropertyList.firstObject () ;
              GGS_sharedPropertyList::element_type * operand_12444 = var_cas_signature.firstObject () ;
              while ((operand_12362 != NULL)
                  && (operand_12444 != NULL)) {
                macroValidPointer (operand_12362) ;
                macroValidPointer (operand_12444) ;
                if (((operand_12362->mSharedPropertyTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (324))) != (operand_12444->mSharedPropertyTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (324)))).isBuiltAndTrue ()) {
                  operand_12444->mSharedPropertyName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((GGS_string (true, "the type of the parameter is '@")) + (operand_12444->mSharedPropertyTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (325))))) + (GGS_string (true, "', while a '@")))) + (operand_12362->mSharedPropertyTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (326))))) + (GGS_string (true, "' type is expected"))) SOURCE_FILE_AT_LINE (327)) ;
                }
                operand_12362 = operand_12362->nextObject () ;
                operand_12444 = operand_12444->nextObject () ;
              }
            }else{
              var_cas_signatureLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((GGS_string (true, " this instruction names ")) + (var_cas_signature.reader_length (_inLexique SOURCE_FILE_AT_LINE (330)).reader_string (_inLexique SOURCE_FILE_AT_LINE (330))))) + (GGS_string (true, " shared property(ies) as parameters, while the constraint definition requires ")))) + (var_cas_sharedPropertyList.reader_length (_inLexique SOURCE_FILE_AT_LINE (332)).reader_string (_inLexique SOURCE_FILE_AT_LINE (332)))) SOURCE_FILE_AT_LINE (333)) ;
            }
          }
          operand_10686 = operand_10686->nextObject () ;
        }
      }
      operand_9744 = operand_9744->nextObject () ;
    }
    operand_9505 = operand_9505->nextObject () ;
  }
  if (var_cas_passMap._isBuilt () &&
      var_cas_entityMap._isBuilt () &&
      var_cas_mapEntityMap._isBuilt () &&
      var_cas_metamodelName._isBuilt () &&
      var_cas_constraintName._isBuilt () &&
      var_cas_constrainedEntityMap._isBuilt () &&
      var_cas_multiReferencedEntities._isBuilt () &&
      var_cas_rootEntity._isBuilt ()) {
    ::routine_generate_constraints (_inLexique,  var_cas_passMap,  var_cas_entityMap,  var_cas_mapEntityMap,  var_cas_metamodelName,  var_cas_constraintName,  var_cas_constrainedEntityMap,  var_cas_multiReferencedEntities,  var_cas_rootEntity SOURCE_FILE_AT_LINE (341)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_constraint) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_parse_constraint_document_constraint_parser_183_33_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_constraint) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  switch (select_constraint_parser_0 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          switch (select_repeat_constraint_parser_1 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  nt_parse_semantics_component_for_importing_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_2 (_inLexique)) {
        case 2 : {
          nt_constraint_map_declaration_parse (_inLexique) ;
          } break ;
        case 3 : {
          nt_constraints_on_entity_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_constraint) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'constraint_map_declaration'       *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraint_map_declaration_constraint_parser_356_34_ (galgas_scanner & _inLexique,
                                GGS_entityToImplementMap  &var_cas_ioEntityMap,
                                GGS_mapEntityMap  &var_cas_ioMapEntityMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
  GGS_lstring  var_cas_mapIdentifier ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_mapIdentifier.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  if ((var_cas_ioEntityMap.reader_hasKey (_inLexique, var_cas_mapIdentifier.reader_string (_inLexique SOURCE_FILE_AT_LINE (363)) SOURCE_FILE_AT_LINE (363))).isBuiltAndTrue ()) {
    var_cas_mapIdentifier.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "An entity has been declared with this name") SOURCE_FILE_AT_LINE (365)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_of) ;
  GGS_lstring  var_cas_mapElementIdentifier ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_mapElementIdentifier.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  GGS_lstring  var_cas_insertErrorMessage ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  var_cas_insertErrorMessage.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  if (var_cas_insertErrorMessage._isBuilt ()) {
    ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_insertErrorMessage SOURCE_FILE_AT_LINE (375)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  GGS_lstring  var_cas_searchErrorMessage ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  var_cas_searchErrorMessage.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  if (var_cas_searchErrorMessage._isBuilt ()) {
    ::routine_check_K_escapeCharacters (_inLexique,  var_cas_searchErrorMessage SOURCE_FILE_AT_LINE (382)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
  var_cas_ioMapEntityMap.method_insertKey (_inLexique, var_cas_mapIdentifier, var_cas_mapElementIdentifier, var_cas_insertErrorMessage, var_cas_searchErrorMessage SOURCE_FILE_AT_LINE (386)) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraint_map_declaration_constraint_parser_356_34_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_of) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of production rule 'constraints_on_entity_declaration'    *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraints_on_entity_declaration_constraint_parser_395_41_ (galgas_scanner & _inLexique,
                                GGS_entityToImplementMap  &var_cas_ioEntityMap,
                                GGS_mapEntityMap  &var_cas_ioMapEntityMap,
                                GGS_constrainedEntityMap  &var_cas_ioConstrainedEntityMap,
                                GGS_passMap  &var_cas_ioPassMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_on) ;
  GGS_lstring  var_cas_entityName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_entityName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_lstring  var_cas_superEntity ;
  GGS_entityPropertyMap  var_cas_allPropertyMap ;
  GGS_entityPropertyMap  var_cas_propertyMap ;
  GGS_bool var_cas_14983 ;
  if (var_cas_ioEntityMap._isBuilt ()) {
    var_cas_ioEntityMap (HERE)->method_searchKey (_inLexique, var_cas_entityName, var_cas_allPropertyMap, var_cas_14983, var_cas_propertyMap, var_cas_superEntity SOURCE_FILE_AT_LINE (410)) ;
  }
  GGS_stringset  var_cas_descendantEntitySet ;
  var_cas_descendantEntitySet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  ::routine_computeDescendantSet (_inLexique,  var_cas_ioEntityMap,  var_cas_entityName,  var_cas_descendantEntitySet SOURCE_FILE_AT_LINE (417)) ;
  GGS_mapAsConstraintPropertyMap  var_cas_allMapsAsConstraintPropertyMap ;
  var_cas_allMapsAsConstraintPropertyMap = GGS_mapAsConstraintPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_constrainedEntityPassMap  var_cas_inheritedConstrainedEntityPassMap ;
  var_cas_inheritedConstrainedEntityPassMap = GGS_constrainedEntityPassMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_passesDefinedByInheritanceTreeRootEntity ;
  var_cas_passesDefinedByInheritanceTreeRootEntity = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_constraintAllPropertiesMap  var_cas_constraintAllPropertiesMap ;
  var_cas_constraintAllPropertiesMap = GGS_constraintAllPropertiesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_indexMap  var_cas_allIndexMap ;
  var_cas_allIndexMap = GGS_indexMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  if (((var_cas_superEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (424))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
    if ((var_cas_ioConstrainedEntityMap.reader_hasKey (_inLexique, var_cas_superEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (425)) SOURCE_FILE_AT_LINE (425))).isBuiltAndTrue ()) {
      GGS_lstring  var_cas_15793 ;
      GGS_entityPropertyMap  var_cas_15804 ;
      GGS_stringset  var_cas_15815 ;
      GGS_location  var_cas_15826 ;
      GGS_mapAsConstraintPropertyMap  var_cas_15837 ;
      GGS_indexMap  var_cas_15924 ;
      if (var_cas_ioConstrainedEntityMap._isBuilt ()) {
        var_cas_ioConstrainedEntityMap (HERE)->method_searchKey (_inLexique, var_cas_superEntity, var_cas_passesDefinedByInheritanceTreeRootEntity, var_cas_inheritedConstrainedEntityPassMap, var_cas_15793, var_cas_15804, var_cas_15815, var_cas_15826, var_cas_15837, var_cas_allMapsAsConstraintPropertyMap, var_cas_constraintAllPropertiesMap, var_cas_15924, var_cas_allIndexMap SOURCE_FILE_AT_LINE (427)) ;
      }
    }else{
      var_cas_entityName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "constraints for super entity ('@")) + (var_cas_superEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (442))))) + (GGS_string (true, "') should be previously defined"))) SOURCE_FILE_AT_LINE (443)) ;
    }
  }
  GGS_indexMap  var_cas_indexMap ;
  var_cas_indexMap = GGS_indexMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_mapAsConstraintPropertyMap  var_cas_mapAsConstraintPropertyMap ;
  var_cas_mapAsConstraintPropertyMap = GGS_mapAsConstraintPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  GGS_constrainedEntityPassMap  var_cas_constrainedEntityPassMap ;
  var_cas_constrainedEntityPassMap = GGS_constrainedEntityPassMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_uint  var_cas_currentPassIndex ;
  var_cas_currentPassIndex = GGS_uint (true, 0U) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_3 (_inLexique)) {
        case 2 : {
          GGS_lstring  var_cas_passName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_passName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          GGS_luint  var_cas_index ;
          if (var_cas_ioPassMap._isBuilt ()) {
            var_cas_ioPassMap (HERE)->method_searchKeyAndGetIndex (_inLexique, var_cas_passName, var_cas_index SOURCE_FILE_AT_LINE (456)) ;
          }
          if (((var_cas_index.reader_uint (_inLexique SOURCE_FILE_AT_LINE (457))) < (var_cas_currentPassIndex)).isBuiltAndTrue ()) {
            var_cas_passName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the pass order is incorrect") SOURCE_FILE_AT_LINE (459)) ;
          }
          var_cas_currentPassIndex = var_cas_index.reader_uint (_inLexique SOURCE_FILE_AT_LINE (460)) ;
          GGS_sharedPropertyList  var_cas_sharedPropertyList ;
          var_cas_sharedPropertyList = GGS_sharedPropertyList::constructor_emptyList (_inLexique COMMA_HERE) ;
          switch (select_constraint_parser_4 (_inLexique)) {
            case 1 : {
              if (((var_cas_superEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (464))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_typeInstructionList  var_cas_16837 ;
                GGS_stringset  var_cas_16860 ;
                GGS_callInstructionSharedPropertySignatureMap  var_cas_16863 ;
                if (var_cas_inheritedConstrainedEntityPassMap._isBuilt ()) {
                  var_cas_inheritedConstrainedEntityPassMap (HERE)->method_searchKey (_inLexique, var_cas_passName, var_cas_16837, var_cas_sharedPropertyList, var_cas_16860, var_cas_16863 SOURCE_FILE_AT_LINE (465)) ;
                }
              }
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              if (((var_cas_superEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (469))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "as the '@")) + (var_cas_entityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (470))))) + (GGS_string (true, "' entity has a super entity, you cannot define any shared property"))) SOURCE_FILE_AT_LINE (472)) ;
              }
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                    GGS_lstring  var_cas_typeName ;
                    _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
                    var_cas_typeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                    GGS_lstring  var_cas_propertyName ;
                    _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                    var_cas_propertyName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                    var_cas_constraintAllPropertiesMap.method_insertKey (_inLexique, var_cas_propertyName SOURCE_FILE_AT_LINE (478)) ;
                    if ((var_cas_ioMapEntityMap.reader_hasKey (_inLexique, var_cas_typeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (479)) SOURCE_FILE_AT_LINE (479))).isBuiltAndTrue ()) {
                      GGS_lstring  var_cas_elementTypeName ;
                      GGS_lstring  var_cas_17463 ;
                      GGS_lstring  var_cas_17466 ;
                      if (var_cas_ioMapEntityMap._isBuilt ()) {
                        var_cas_ioMapEntityMap (HERE)->method_searchKey (_inLexique, var_cas_typeName, var_cas_elementTypeName, var_cas_17463, var_cas_17466 SOURCE_FILE_AT_LINE (481)) ;
                      }
                      var_cas_mapAsConstraintPropertyMap.method_insertKey (_inLexique, var_cas_propertyName, var_cas_typeName, var_cas_elementTypeName, var_cas_currentPassIndex, var_cas_passName.reader_string (_inLexique SOURCE_FILE_AT_LINE (482)), GGS_bool (true, true) SOURCE_FILE_AT_LINE (482)) ;
                      var_cas_allMapsAsConstraintPropertyMap.method_insertKey (_inLexique, var_cas_propertyName, var_cas_typeName, var_cas_elementTypeName, var_cas_currentPassIndex, var_cas_passName.reader_string (_inLexique SOURCE_FILE_AT_LINE (483)), GGS_bool (true, true) SOURCE_FILE_AT_LINE (483)) ;
                      var_cas_sharedPropertyList._addAssign_operation (var_cas_typeName, var_cas_propertyName) ;
                    }else{
                      var_cas_typeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "unhandled type name") SOURCE_FILE_AT_LINE (487)) ;
                    }
                  switch (select_repeat_constraint_parser_5 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
              switch (select_repeat_constraint_parser_6 (_inLexique)) {
                case 2 : {
                  GGS_lstring  var_cas_typeName ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
                  var_cas_typeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                  GGS_lstring  var_cas_propertyName ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                  var_cas_propertyName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                  var_cas_constraintAllPropertiesMap.method_insertKey (_inLexique, var_cas_propertyName SOURCE_FILE_AT_LINE (501)) ;
                  if ((var_cas_ioMapEntityMap.reader_hasKey (_inLexique, var_cas_typeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (502)) SOURCE_FILE_AT_LINE (502))).isBuiltAndTrue ()) {
                    GGS_lstring  var_cas_elementTypeName ;
                    GGS_lstring  var_cas_18350 ;
                    GGS_lstring  var_cas_18353 ;
                    if (var_cas_ioMapEntityMap._isBuilt ()) {
                      var_cas_ioMapEntityMap (HERE)->method_searchKey (_inLexique, var_cas_typeName, var_cas_elementTypeName, var_cas_18350, var_cas_18353 SOURCE_FILE_AT_LINE (504)) ;
                    }
                    var_cas_mapAsConstraintPropertyMap.method_insertKey (_inLexique, var_cas_propertyName, var_cas_typeName, var_cas_elementTypeName, var_cas_currentPassIndex, var_cas_passName.reader_string (_inLexique SOURCE_FILE_AT_LINE (505)), GGS_bool (true, false) SOURCE_FILE_AT_LINE (505)) ;
                    var_cas_allMapsAsConstraintPropertyMap.method_insertKey (_inLexique, var_cas_propertyName, var_cas_typeName, var_cas_elementTypeName, var_cas_currentPassIndex, var_cas_passName.reader_string (_inLexique SOURCE_FILE_AT_LINE (506)), GGS_bool (true, false) SOURCE_FILE_AT_LINE (506)) ;
                  }else{
                    var_cas_typeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "unhandled type name") SOURCE_FILE_AT_LINE (509)) ;
                  }
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
                  } break ;
                case 3 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_mapindex) ;
                  GGS_lstring  var_cas_propertyName ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                  var_cas_propertyName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                  var_cas_constraintAllPropertiesMap.method_insertKey (_inLexique, var_cas_propertyName SOURCE_FILE_AT_LINE (515)) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_on) ;
                  GGS_lstring  var_cas_mapPropertyName ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                  var_cas_mapPropertyName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                  GGS_lstring  var_cas_19028 ;
                  GGS_lstring  var_cas_19031 ;
                  GGS_uint  var_cas_19034 ;
                  GGS_string var_cas_19037 ;
                  GGS_bool var_cas_19040 ;
                  if (var_cas_allMapsAsConstraintPropertyMap._isBuilt ()) {
                    var_cas_allMapsAsConstraintPropertyMap (HERE)->method_searchKey (_inLexique, var_cas_mapPropertyName, var_cas_19028, var_cas_19031, var_cas_19034, var_cas_19037, var_cas_19040 SOURCE_FILE_AT_LINE (519)) ;
                  }
                  var_cas_indexMap.method_insertKey (_inLexique, var_cas_propertyName, var_cas_mapPropertyName, var_cas_currentPassIndex SOURCE_FILE_AT_LINE (520)) ;
                  var_cas_allIndexMap.method_insertKey (_inLexique, var_cas_propertyName, var_cas_mapPropertyName, var_cas_currentPassIndex SOURCE_FILE_AT_LINE (521)) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
          GGS_typeVariablesMap  var_cas_variablesMap ;
          var_cas_variablesMap = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_entityPropertyMap::element_type * operand_19378 = var_cas_allPropertyMap.firstObject () ;
          while ((operand_19378 != NULL)) {
            macroValidPointer (operand_19378) ;
            if (((operand_19378->mInfo.mKind) == (GGS_metamodelPropertyKind::constructor_attributeProperty (_inLexique COMMA_HERE))).isBuiltAndTrue ()) {
              GGS_typeCplusPlusName  var_cas_cppName ;
              var_cas_cppName = GGS_typeDirectName::constructor_new (_inLexique, GGS_lstring::constructor_new (_inLexique, ((GGS_string (true, "_mMetamodelObject->")) + (operand_19378->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (531)))), operand_19378->mKey.reader_location (_inLexique SOURCE_FILE_AT_LINE (531)) COMMA_HERE) COMMA_HERE) ;
              if (((operand_19378->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (532))) == (GGS_string (true, "lstring"))).isBuiltAndTrue ()) {
                GGS_AC_galgasType  var_cas_t ;
                var_cas_t = GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE) ;
                var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_19378->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (534)) ;
              }else if (((operand_19378->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (535))) == (GGS_string (true, "string"))).isBuiltAndTrue ()) {
                GGS_AC_galgasType  var_cas_t ;
                var_cas_t = GGS_typeGalgas_string::constructor_new (_inLexique COMMA_HERE) ;
                var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_19378->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (537)) ;
              }else if (((operand_19378->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (538))) == (GGS_string (true, "lchar"))).isBuiltAndTrue ()) {
                GGS_AC_galgasType  var_cas_t ;
                var_cas_t = GGS_typeGalgas_lchar::constructor_new (_inLexique COMMA_HERE) ;
                var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_19378->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (540)) ;
              }else if (((operand_19378->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (541))) == (GGS_string (true, "char"))).isBuiltAndTrue ()) {
                GGS_AC_galgasType  var_cas_t ;
                var_cas_t = GGS_typeGalgas_char::constructor_new (_inLexique COMMA_HERE) ;
                var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_19378->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (543)) ;
              }else if (((operand_19378->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (544))) == (GGS_string (true, "luint"))).isBuiltAndTrue ()) {
                GGS_AC_galgasType  var_cas_t ;
                var_cas_t = GGS_typeGalgas_luint::constructor_new (_inLexique COMMA_HERE) ;
                var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_19378->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (546)) ;
              }else if (((operand_19378->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (547))) == (GGS_string (true, "uint"))).isBuiltAndTrue ()) {
                GGS_AC_galgasType  var_cas_t ;
                var_cas_t = GGS_typeGalgas_uint::constructor_new (_inLexique COMMA_HERE) ;
                var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_19378->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (549)) ;
              }else if (((operand_19378->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (550))) == (GGS_string (true, "lsint"))).isBuiltAndTrue ()) {
                GGS_AC_galgasType  var_cas_t ;
                var_cas_t = GGS_typeGalgas_lsint::constructor_new (_inLexique COMMA_HERE) ;
                var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_19378->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (552)) ;
              }else if (((operand_19378->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (553))) == (GGS_string (true, "sint"))).isBuiltAndTrue ()) {
                GGS_AC_galgasType  var_cas_t ;
                var_cas_t = GGS_typeGalgas_sint::constructor_new (_inLexique COMMA_HERE) ;
                var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_19378->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (555)) ;
              }else if (((operand_19378->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (556))) == (GGS_string (true, "lbool"))).isBuiltAndTrue ()) {
                GGS_AC_galgasType  var_cas_t ;
                var_cas_t = GGS_typeGalgas_lbool::constructor_new (_inLexique COMMA_HERE) ;
                var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_19378->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (558)) ;
              }else if (((operand_19378->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (559))) == (GGS_string (true, "bool"))).isBuiltAndTrue ()) {
                GGS_AC_galgasType  var_cas_t ;
                var_cas_t = GGS_typeGalgas_bool::constructor_new (_inLexique COMMA_HERE) ;
                var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_19378->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (561)) ;
              }else if (((operand_19378->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (562))) == (GGS_string (true, "location"))).isBuiltAndTrue ()) {
                GGS_AC_galgasType  var_cas_t ;
                var_cas_t = GGS_typeGalgas_location::constructor_new (_inLexique COMMA_HERE) ;
                var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_19378->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (564)) ;
              }else{
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "internal error (@")) + (operand_19378->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (566))))) + (GGS_string (true, " type not handled"))) SOURCE_FILE_AT_LINE (567)) ;
              }
            }
            operand_19378 = operand_19378->nextObject () ;
          }
          GGS_mapAsConstraintPropertyMap::element_type * operand_21957 = var_cas_allMapsAsConstraintPropertyMap.firstObject () ;
          while ((operand_21957 != NULL)) {
            macroValidPointer (operand_21957) ;
            GGS_typeCplusPlusName  var_cas_cppName ;
            var_cas_cppName = GGS_typeDirectName::constructor_new (_inLexique, GGS_lstring::constructor_new (_inLexique, ((((GGS_string (true, "(* ")) + (operand_21957->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (573))))) + (GGS_string (true, ")"))), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
            GGS_AC_galgasType  var_cas_t ;
            var_cas_t = GGS_typeGalgas_mapEntityInInstruction::constructor_new (_inLexique, operand_21957->mInfo.mMapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (574)), operand_21957->mInfo.mElementTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (574)) COMMA_HERE) ;
            if (((((operand_21957->mInfo.mPassIndex) == (var_cas_currentPassIndex)) & (var_cas_mapAsConstraintPropertyMap.reader_hasKey (_inLexique, operand_21957->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (575)) SOURCE_FILE_AT_LINE (575))))).isBuiltAndTrue ()) {
              var_cas_variablesMap.method_insertUsedInOutArgument (_inLexique, operand_21957->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (576)) ;
            }else{
              var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_21957->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (578)) ;
            }
            operand_21957 = operand_21957->nextObject () ;
          }
          GGS_indexMap::element_type * operand_22785 = var_cas_allIndexMap.firstObject () ;
          while ((operand_22785 != NULL)) {
            macroValidPointer (operand_22785) ;
            GGS_typeCplusPlusName  var_cas_cppName ;
            var_cas_cppName = GGS_typeDirectName::constructor_new (_inLexique, operand_22785->mKey COMMA_HERE) ;
            GGS_AC_galgasType  var_cas_t ;
            var_cas_t = GGS_typeGalgas_mapIndexInInstruction::constructor_new (_inLexique, operand_22785->mInfo.mMapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (584)) COMMA_HERE) ;
            if (((((operand_22785->mInfo.mPassIndex) == (var_cas_currentPassIndex)) & (var_cas_indexMap.reader_hasKey (_inLexique, operand_22785->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (585)) SOURCE_FILE_AT_LINE (585))))).isBuiltAndTrue ()) {
              var_cas_variablesMap.method_insertOutProperty (_inLexique, operand_22785->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (586)) ;
            }else{
              var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_22785->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (588)) ;
            }
            operand_22785 = operand_22785->nextObject () ;
          }
          GGS_typeCplusPlusName  var_cas_cppName ;
          var_cas_cppName = GGS_typeDirectName::constructor_new (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "_mMetamodelObject"), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
          GGS_AC_galgasType  var_cas_t ;
          var_cas_t = GGS_typeGalgas_entityInInstruction::constructor_new (_inLexique, var_cas_entityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (593)) COMMA_HERE) ;
          var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "self"), GGS_location (_inLexique) COMMA_HERE), var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (594)) ;
          GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap ;
          var_cas_componentSemanticsEntitiesMap = GGS_M_semanticsEntitiesForUse::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
          var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
          var_cas_optionsComponentsMapForUse = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
          GGS_typeInstructionList  var_cas_instructionsList ;
          var_cas_instructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
          GGS_stringset  var_cas_constraintPropertyDefinitionSet ;
          var_cas_constraintPropertyDefinitionSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
          GGS_callInstructionSharedPropertySignatureMap  var_cas_callInstructionSharedPropertySignatureMap ;
          var_cas_callInstructionSharedPropertySignatureMap = GGS_callInstructionSharedPropertySignatureMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
          nt_semantic_instructions_list_ (_inLexique, var_cas_componentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_optionsComponentsMapForUse, var_cas_variablesMap, var_cas_instructionsList, var_cas_passName.reader_string (_inLexique SOURCE_FILE_AT_LINE (608)), var_cas_propertyMap, var_cas_mapAsConstraintPropertyMap, var_cas_constraintPropertyDefinitionSet, var_cas_callInstructionSharedPropertySignatureMap) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
          var_cas_constrainedEntityPassMap.method_insertKey (_inLexique, var_cas_passName, var_cas_instructionsList, var_cas_sharedPropertyList, var_cas_constraintPropertyDefinitionSet, var_cas_callInstructionSharedPropertySignatureMap SOURCE_FILE_AT_LINE (616)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
  if (((var_cas_superEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (625))) == (GGS_string (true, ""))).isBuiltAndTrue ()) {
    GGS_constrainedEntityPassMap::element_type * operand_24788 = var_cas_constrainedEntityPassMap.firstObject () ;
    while ((operand_24788 != NULL)) {
      macroValidPointer (operand_24788) ;
      var_cas_passesDefinedByInheritanceTreeRootEntity._addAssign_operation (operand_24788->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (627))) ;
      operand_24788 = operand_24788->nextObject () ;
    }
  }
  if (((var_cas_superEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (632))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
    GGS_constrainedEntityPassMap::element_type * operand_25121 = var_cas_constrainedEntityPassMap.firstObject () ;
    while ((operand_25121 != NULL)) {
      macroValidPointer (operand_25121) ;
      if (((! (var_cas_passesDefinedByInheritanceTreeRootEntity.reader_hasKey (_inLexique, operand_25121->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (634)) SOURCE_FILE_AT_LINE (634))))).isBuiltAndTrue ()) {
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((GGS_string (true, "pass '")) + (operand_25121->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (635))))) + (GGS_string (true, "' cannot be defined because it is not defined by the constraint on '@")))) + (var_cas_superEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (637))))) + (GGS_string (true, "' entity"))) SOURCE_FILE_AT_LINE (638)) ;
      }
      operand_25121 = operand_25121->nextObject () ;
    }
  }
  var_cas_ioConstrainedEntityMap.method_insertKey (_inLexique, var_cas_entityName, var_cas_passesDefinedByInheritanceTreeRootEntity, var_cas_constrainedEntityPassMap, var_cas_superEntity, var_cas_propertyMap, var_cas_descendantEntitySet, GGS_location (_inLexique), var_cas_mapAsConstraintPropertyMap, var_cas_allMapsAsConstraintPropertyMap, var_cas_constraintAllPropertiesMap, var_cas_indexMap, var_cas_allIndexMap SOURCE_FILE_AT_LINE (643)) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraints_on_entity_declaration_constraint_parser_395_41_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_on) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_3 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          switch (select_constraint_parser_4 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                    _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
                    _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                  switch (select_repeat_constraint_parser_5 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
              switch (select_repeat_constraint_parser_6 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
                  } break ;
                case 3 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_mapindex) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_on) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
          nt_semantic_instructions_list_parse (_inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of production rule 'property_path_for_constraint'      *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_property_path_for_constraint_constraint_parser_660_36_ (galgas_scanner & _inLexique,
                                GGS_L_propertyPath  &var_cas_outPath) {
  var_cas_outPath = GGS_L_propertyPath::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        switch (select_constraint_parser_8 (_inLexique)) {
          case 1 : {
            GGS_lstring  var_cas_pathElement ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_pathElement.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            var_cas_outPath._addAssign_operation (var_cas_pathElement) ;
            } break ;
          case 2 : {
            GGS_lstring  var_cas_pathElement ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
            var_cas_pathElement.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            var_cas_outPath._addAssign_operation (GGS_lstring::constructor_new (_inLexique, ((GGS_string (true, ".")) + (var_cas_pathElement.reader_string (_inLexique SOURCE_FILE_AT_LINE (672)))), var_cas_pathElement.reader_location (_inLexique SOURCE_FILE_AT_LINE (672)) COMMA_HERE)) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_constraint_parser_7 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2E) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_property_path_for_constraint_constraint_parser_660_36_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        switch (select_constraint_parser_8 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_constraint_parser_7 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2E) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Implementation of production rule 'constraint_relation_expression'     *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraint_relation_expression_constraint_parser_681_38_ (galgas_scanner & _inLexique,
                                GGS_relationVarMap  &var_cas_ioRelationVariableMap,
                                GGS_indexMap  &var_cas_ioIndexMap,
                                GGS_metamodelRelationExpression  &var_cas_outExpression) {
  nt_constraint_relation_term_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_outExpression) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_9 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7C) ;
          GGS_metamodelRelationExpression  var_cas_e ;
          nt_constraint_relation_term_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_e) ;
          var_cas_outExpression = GGS_metamodelRelationOr::constructor_new (_inLexique, var_cas_outExpression, var_cas_e COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraint_relation_expression_constraint_parser_681_38_parse (galgas_scanner & _inLexique) {
  nt_constraint_relation_term_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_9 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7C) ;
          nt_constraint_relation_term_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'constraint_relation_term'        *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraint_relation_term_constraint_parser_698_32_ (galgas_scanner & _inLexique,
                                GGS_relationVarMap  &var_cas_ioRelationVariableMap,
                                GGS_indexMap  &var_cas_ioIndexMap,
                                GGS_metamodelRelationExpression  &var_cas_outExpression) {
  nt_constraint_relation_factor_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_outExpression) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_10 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__26) ;
          GGS_metamodelRelationExpression  var_cas_e ;
          nt_constraint_relation_factor_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_e) ;
          var_cas_outExpression = GGS_metamodelRelationOr::constructor_new (_inLexique, var_cas_outExpression, var_cas_e COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraint_relation_term_constraint_parser_698_32_parse (galgas_scanner & _inLexique) {
  nt_constraint_relation_factor_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_10 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__26) ;
          nt_constraint_relation_factor_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'constraint_relation_factor'       *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraint_relation_factor_constraint_parser_715_34_ (galgas_scanner & _inLexique,
                                GGS_relationVarMap  &var_cas_ioRelationVariableMap,
                                GGS_indexMap  &var_cas_ioIndexMap,
                                GGS_metamodelRelationExpression  &var_cas_outExpression) {
  switch (select_constraint_parser_11 (_inLexique)) {
    case 1 : {
      nt_constraint_relation_primary_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_outExpression) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_not) ;
      nt_constraint_relation_primary_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_outExpression) ;
      var_cas_outExpression = GGS_metamodelRelationNot::constructor_new (_inLexique, var_cas_outExpression COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraint_relation_factor_constraint_parser_715_34_parse (galgas_scanner & _inLexique) {
  switch (select_constraint_parser_11 (_inLexique)) {
    case 1 : {
      nt_constraint_relation_primary_parse (_inLexique) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_not) ;
      nt_constraint_relation_primary_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of production rule 'constraint_relation_primary'       *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraint_relation_primary_constraint_parser_731_35_ (galgas_scanner & _inLexique,
                                GGS_relationVarMap  &var_cas_ioRelationVariableMap,
                                GGS_indexMap  &var_cas_ioIndexMap,
                                GGS_metamodelRelationExpression  &var_cas_outExpression) {
  switch (select_constraint_parser_12 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_true) ;
      var_cas_outExpression = GGS_metamodelRelationTrue::constructor_new (_inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_false) ;
      var_cas_outExpression = GGS_metamodelRelationFalse::constructor_new (_inLexique COMMA_HERE) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      nt_constraint_relation_expression_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_outExpression) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    case 4 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_lstring  var_cas_localVar ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_localVar.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
      GGS_luint  var_cas_variableIndex ;
      GGS_lstring  var_cas_domainVariable ;
      if (var_cas_ioRelationVariableMap._isBuilt ()) {
        var_cas_ioRelationVariableMap (HERE)->method_searchKeyAndGetIndex (_inLexique, var_cas_localVar, var_cas_variableIndex, var_cas_domainVariable SOURCE_FILE_AT_LINE (752)) ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3D_3D) ;
      GGS_lstring  var_cas_indexVariableName ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_indexVariableName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
      GGS_lstring  var_cas_domainVariableFromIndex ;
      GGS_uint  var_cas_28858 ;
      if (var_cas_ioIndexMap._isBuilt ()) {
        var_cas_ioIndexMap (HERE)->method_searchKey (_inLexique, var_cas_indexVariableName, var_cas_domainVariableFromIndex, var_cas_28858 SOURCE_FILE_AT_LINE (757)) ;
      }
      if (((var_cas_domainVariable.reader_string (_inLexique SOURCE_FILE_AT_LINE (758))) != (var_cas_domainVariableFromIndex.reader_string (_inLexique SOURCE_FILE_AT_LINE (758)))).isBuiltAndTrue ()) {
        var_cas_indexVariableName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((((((GGS_string (true, "this index refers to the '")) + (var_cas_domainVariableFromIndex.reader_string (_inLexique SOURCE_FILE_AT_LINE (759))))) + (GGS_string (true, "' domain, while '")))) + (var_cas_localVar.reader_string (_inLexique SOURCE_FILE_AT_LINE (760))))) + (GGS_string (true, "' relation variable refers to the '")))) + (var_cas_domainVariable.reader_string (_inLexique SOURCE_FILE_AT_LINE (761))))) + (GGS_string (true, "' domain"))) SOURCE_FILE_AT_LINE (762)) ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      var_cas_outExpression = GGS_metamodelRelationPrimary::constructor_new (_inLexique, var_cas_ioRelationVariableMap, var_cas_localVar, var_cas_variableIndex, var_cas_indexVariableName, var_cas_domainVariable COMMA_HERE) ;
      } break ;
    case 5 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_do) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      GGS_L_propertyPath  var_cas_path ;
      nt_property_path_for_constraint_ (_inLexique, var_cas_path) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
      GGS_metamodelRelationParameterList  var_cas_parameterList ;
      var_cas_parameterList = GGS_metamodelRelationParameterList::constructor_emptyList (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_parameter ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_parameter.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            GGS_luint  var_cas_parameterIndex ;
            GGS_lstring  var_cas_domainVariable ;
            if (var_cas_ioRelationVariableMap._isBuilt ()) {
              var_cas_ioRelationVariableMap (HERE)->method_searchKeyAndGetIndex (_inLexique, var_cas_parameter, var_cas_parameterIndex, var_cas_domainVariable SOURCE_FILE_AT_LINE (777)) ;
            }
            var_cas_parameterList._addAssign_operation (var_cas_parameter, var_cas_parameterIndex, var_cas_domainVariable) ;
          switch (select_repeat_constraint_parser_13 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
      GGS_lbool  var_cas_operationIsAnd ;
      switch (select_constraint_parser_14 (_inLexique)) {
        case 1 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7C) ;
          var_cas_operationIsAnd = GGS_lbool::constructor_new (_inLexique, GGS_bool (true, false), GGS_location (_inLexique) COMMA_HERE) ;
          } break ;
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__26) ;
          var_cas_operationIsAnd = GGS_lbool::constructor_new (_inLexique, GGS_bool (true, true), GGS_location (_inLexique) COMMA_HERE) ;
          } break ;
        default :
          break ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      var_cas_outExpression = GGS_metamodelRelationDo::constructor_new (_inLexique, var_cas_ioRelationVariableMap, var_cas_parameterList, var_cas_path, var_cas_operationIsAnd COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraint_relation_primary_constraint_parser_731_35_parse (galgas_scanner & _inLexique) {
  switch (select_constraint_parser_12 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_true) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_false) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      nt_constraint_relation_expression_parse (_inLexique) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    case 4 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3D_3D) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    case 5 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_do) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      nt_property_path_for_constraint_parse (_inLexique) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          switch (select_repeat_constraint_parser_13 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
      switch (select_constraint_parser_14 (_inLexique)) {
        case 1 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7C) ;
          } break ;
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__26) ;
          } break ;
        default :
          break ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

