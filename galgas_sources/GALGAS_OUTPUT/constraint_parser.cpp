//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'constraint_parser.cpp'                        *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                    november 17th, 2006, at 19h36'20"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "constraint_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const char gGGSsourceFile [] = "constraint_parser.ggs" ;
  #define SOURCE_FILE_AT_LINE(line) , gGGSsourceFile, line
#else
  #define SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_galgas_component_constraint_parser_136_24_ (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  nt_parse_constraint_document_ (_inLexique, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_galgas_component_constraint_parser_136_24_importLexique (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  nt_parse_constraint_document_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_galgas_component_constraint_parser_136_24_importSyntax (galgas_scanner & _inLexique,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  GGS_M_constraintComponents  var_cas_constraintComponentMap ;
  var_cas_constraintComponentMap = GGS_M_constraintComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  nt_parse_constraint_document_ (_inLexique, var_cas_ioMetamodelComponentMap, var_cas_constraintComponentMap) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_galgas_component_constraint_parser_136_24_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  nt_parse_constraint_document_ (_inLexique, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_galgas_component_constraint_parser_136_24_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  nt_parse_constraint_document_ (_inLexique, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_galgas_component_constraint_parser_136_24_importOptions (galgas_scanner & _inLexique,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  nt_parse_constraint_document_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "checkCallInstruction"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkCallInstruction (C_Lexique & _inLexique,
                                const GGS_entityToImplementMap  & var_cas_inConstrainedEntityMap,
                                const GGS_lstring  & var_cas_inTestedReferenceName,
                                const GGS_callInstructionSharedPropertySignatureMap  & var_cas_inCallInstructionSharedPropertySignatureMap,
                                const GGS_lstring  & var_cas_inTestedPropertyName,
                                const GGS_entityPropertyMap  & var_cas_inAllAvailablePropertiesMap,
                                const GGS_location  & var_cas_inEndOfInstructionList COMMA_UNUSED_LOCATION_ARGS) {
  if ((var_cas_inConstrainedEntityMap.reader_hasKey (_inLexique, var_cas_inTestedReferenceName.reader_string (_inLexique SOURCE_FILE_AT_LINE (196)) SOURCE_FILE_AT_LINE (196))).isBuiltAndTrue ()) {
    if ((var_cas_inCallInstructionSharedPropertySignatureMap.reader_hasKey (_inLexique, var_cas_inTestedPropertyName.reader_string (_inLexique SOURCE_FILE_AT_LINE (197)) SOURCE_FILE_AT_LINE (197))).isBuiltAndTrue ()) {
      GGS_entityPropertyMap  var_cas_allContraintsPropertyMap ;
      GGS_entityPropertyMap  automatic_var_0 ;
      GGS_bool automatic_var_1 ;
      GGS_entityPropertyMap  automatic_var_2 ;
      GGS_lstring  automatic_var_3 ;
      GGS_entityPropertyMap  automatic_var_4 ;
      GGS_stringset  automatic_var_5 ;
      GGS_entityPropertyMap  automatic_var_6 ;
      if (var_cas_inConstrainedEntityMap._isBuilt ()) {
        var_cas_inConstrainedEntityMap (HERE)->method_searchKey (_inLexique, var_cas_inTestedReferenceName, automatic_var_0, automatic_var_1, automatic_var_2, automatic_var_3, automatic_var_4, automatic_var_5, var_cas_allContraintsPropertyMap, automatic_var_6 SOURCE_FILE_AT_LINE (201)) ;
      }
      GGS_metamodelPropertyList  var_cas_formalParameterTypeList ;
      var_cas_formalParameterTypeList = GGS_metamodelPropertyList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_entityPropertyMap::element_type * operand_7482 = var_cas_allContraintsPropertyMap.firstObject () ;
      while ((operand_7482 != NULL)) {
        macroValidPointer (operand_7482) ;
        if (operand_7482->mInfo.mProperty._isBuilt ()) {
          cPtr_metamodelSharedMapProperty * operand_7556 = dynamic_cast <cPtr_metamodelSharedMapProperty *> (operand_7482->mInfo.mProperty.getPtr ()) ;
          if (operand_7556 != NULL) {
            macroValidPointer (operand_7556) ; 
            var_cas_formalParameterTypeList._addAssign_operation (operand_7482->mInfo.mProperty) ;
          }else{ // Else part
          }
        }
        operand_7482 = operand_7482->nextObject () ;
      }
      GGS_L_lstringList  var_cas_effectiveArgumentList ;
      GGS_location  var_cas_endOfCallInstruction ;
      if (var_cas_inCallInstructionSharedPropertySignatureMap._isBuilt ()) {
        var_cas_inCallInstructionSharedPropertySignatureMap (HERE)->method_searchKey (_inLexique, var_cas_inTestedPropertyName, var_cas_effectiveArgumentList, var_cas_endOfCallInstruction SOURCE_FILE_AT_LINE (214)) ;
      }
      GGS_metamodelPropertyList  var_cas_effectiveArgumentTypeList ;
      var_cas_effectiveArgumentTypeList = GGS_metamodelPropertyList::constructor_emptyList (_inLexique COMMA_HERE) ;
      GGS_L_lstringList::element_type * operand_8163 = var_cas_effectiveArgumentList.firstObject () ;
      while ((operand_8163 != NULL)) {
        macroValidPointer (operand_8163) ;
        GGS_metamodelProperty  var_cas_property ;
        if (var_cas_inAllAvailablePropertiesMap._isBuilt ()) {
          var_cas_inAllAvailablePropertiesMap (HERE)->method_searchKey (_inLexique, operand_8163->mString, var_cas_property SOURCE_FILE_AT_LINE (218)) ;
        }
        var_cas_effectiveArgumentTypeList._addAssign_operation (var_cas_property) ;
        operand_8163 = operand_8163->nextObject () ;
      }
      if (((var_cas_formalParameterTypeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (222))) != (var_cas_effectiveArgumentTypeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (222)))).isBuiltAndTrue ()) {
        var_cas_endOfCallInstruction.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((GGS_string (true, "the call instruction names ")) + (var_cas_effectiveArgumentTypeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (224)).reader_string (_inLexique SOURCE_FILE_AT_LINE (224))))) + (GGS_string (true, " argument(s) instead of ")))) + (var_cas_formalParameterTypeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (225)).reader_string (_inLexique SOURCE_FILE_AT_LINE (225)))) SOURCE_FILE_AT_LINE (226)) ;
      }else{
        GGS_uint  var_cas_argumentIndex ;
        var_cas_argumentIndex = GGS_uint (true, 0U) ;
        GGS_metamodelPropertyList::element_type * operand_8790 = var_cas_formalParameterTypeList.firstObject () ;
        GGS_metamodelPropertyList::element_type * operand_8854 = var_cas_effectiveArgumentTypeList.firstObject () ;
        while ((operand_8790 != NULL)
            && (operand_8854 != NULL)) {
          macroValidPointer (operand_8790) ;
          macroValidPointer (operand_8854) ;
          var_cas_argumentIndex._increment_operation (_inLexique SOURCE_FILE_AT_LINE (229)) ;
          if (operand_8790->mProperty._isBuilt () && operand_8854->mProperty._isBuilt ()) {
            cPtr_metamodelProperty * ptr_8957 = operand_8790->mProperty (HERE) ;
            cPtr_metamodelProperty * ptr_8979 = operand_8854->mProperty (HERE) ;
            cPtr_metamodelSharedMapProperty * operand_8957 = dynamic_cast <cPtr_metamodelSharedMapProperty *> (ptr_8957) ;
            cPtr_metamodelMapProperty * operand_8979 = dynamic_cast <cPtr_metamodelMapProperty *> (ptr_8979) ;
            if ((operand_8957 != NULL) && (operand_8979 != NULL)) {
              if (((operand_8957->mMapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (232))) != (operand_8979->mMapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (232)))).isBuiltAndTrue ()) {
                var_cas_endOfCallInstruction.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((((((GGS_string (true, "for argument ")) + (var_cas_argumentIndex.reader_string (_inLexique SOURCE_FILE_AT_LINE (233))))) + (GGS_string (true, ", the effective argument map type (")))) + (operand_8979->mMapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (234))))) + (GGS_string (true, ") is incompatible with formal parameter map type (")))) + (operand_8957->mMapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (235))))) + (GGS_string (true, ")"))) SOURCE_FILE_AT_LINE (237)) ;
              }
            }else{
              cPtr_metamodelSharedMapProperty * operand_8957 = dynamic_cast <cPtr_metamodelSharedMapProperty *> (ptr_8957) ;
              cPtr_metamodelSharedMapProperty * operand_8979 = dynamic_cast <cPtr_metamodelSharedMapProperty *> (ptr_8979) ;
              if ((operand_8957 != NULL) && (operand_8979 != NULL)) {
                if (((operand_8957->mMapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (239))) != (operand_8979->mMapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (239)))).isBuiltAndTrue ()) {
                  var_cas_endOfCallInstruction.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((((((GGS_string (true, "for argument ")) + (var_cas_argumentIndex.reader_string (_inLexique SOURCE_FILE_AT_LINE (240))))) + (GGS_string (true, ", the effective argument map type (")))) + (operand_8979->mMapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (241))))) + (GGS_string (true, ") is incompatible with formal parameter map type (")))) + (operand_8957->mMapTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (242))))) + (GGS_string (true, ")"))) SOURCE_FILE_AT_LINE (244)) ;
                }
              }else{
                var_cas_endOfCallInstruction.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((((((GGS_string (true, "for argument ")) + (var_cas_argumentIndex.reader_string (_inLexique SOURCE_FILE_AT_LINE (246))))) + (GGS_string (true, ", the effective argument type (")))) + (operand_8854->mProperty.reader_messageProperty (_inLexique SOURCE_FILE_AT_LINE (247))))) + (GGS_string (true, ") is incompatible with formal parameter type (")))) + (operand_8790->mProperty.reader_messageProperty (_inLexique SOURCE_FILE_AT_LINE (248))))) + (GGS_string (true, ")"))) SOURCE_FILE_AT_LINE (250)) ;
              }
            }
          }
          operand_8790 = operand_8790->nextObject () ;
          operand_8854 = operand_8854->nextObject () ;
        }
      }
    }else{
      var_cas_inEndOfInstructionList.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the instruction list should have a 'call ")) + (var_cas_inTestedPropertyName.reader_string (_inLexique SOURCE_FILE_AT_LINE (255))))) + (GGS_string (true, "' instruction"))) SOURCE_FILE_AT_LINE (256)) ;
    }
  }else if ((var_cas_inCallInstructionSharedPropertySignatureMap.reader_hasKey (_inLexique, var_cas_inTestedPropertyName.reader_string (_inLexique SOURCE_FILE_AT_LINE (257)) SOURCE_FILE_AT_LINE (257))).isBuiltAndTrue ()) {
    var_cas_inEndOfInstructionList.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the instruction list should not have a 'call ")) + (var_cas_inTestedPropertyName.reader_string (_inLexique SOURCE_FILE_AT_LINE (258))))) + (GGS_string (true, "' instruction"))) SOURCE_FILE_AT_LINE (259)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'parse_constraint_document'        *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_parse_constraint_document_constraint_parser_264_33_ (galgas_scanner & _inLexique,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_constraint) ;
  GGS_lstring  var_cas_constraintName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_constraintName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  GGS_lstring  var_cas_metamodelName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_metamodelName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
  GGS_lstring  var_cas_fileName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  var_cas_fileName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  GGS_M_semanticsComponents  var_cas_unusedSemanticsMapForUse ;
  var_cas_unusedSemanticsMapForUse = GGS_M_semanticsComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_metamodelsComponents  var_cas_metamodelComponentMap ;
  var_cas_metamodelComponentMap = GGS_M_metamodelsComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_fileName, var_cas_unusedSemanticsMapForUse, var_cas_metamodelComponentMap, var_cas_ioConstraintComponentMap) ;
  GGS_lstring  var_cas_rootEntity ;
  GGS_entityToImplementMap  var_cas_originalMetamodelEntityMap ;
  GGS_stringset  automatic_var_7 ;
  if (var_cas_metamodelComponentMap._isBuilt ()) {
    var_cas_metamodelComponentMap (HERE)->method_searchKey (_inLexique, var_cas_metamodelName, var_cas_rootEntity, var_cas_originalMetamodelEntityMap, automatic_var_7 SOURCE_FILE_AT_LINE (294)) ;
  }
  GGS_entityToImplementMap  var_cas_metamodelEntityMap ;
  nt_constraint_class_override_declarations_ (_inLexique, var_cas_rootEntity, var_cas_originalMetamodelEntityMap, var_cas_metamodelEntityMap) ;
  GGS_mapEntityMap  var_cas_mapEntityMap ;
  var_cas_mapEntityMap = GGS_mapEntityMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_0 (_inLexique)) {
        case 2 : {
          nt_constraint_map_declaration_ (_inLexique, var_cas_metamodelEntityMap, var_cas_mapEntityMap) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_entityToImplementMap  var_cas_constrainedEntityMap ;
  var_cas_constrainedEntityMap = GGS_entityToImplementMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_constraintInstructionListMap  var_cas_constraintInstructionListMap ;
  var_cas_constraintInstructionListMap = GGS_constraintInstructionListMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        nt_constraints_on_entity_declaration_ (_inLexique, var_cas_metamodelEntityMap, var_cas_mapEntityMap, var_cas_constrainedEntityMap, var_cas_constraintInstructionListMap) ;
      switch (select_repeat_constraint_parser_1 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  if (((! (var_cas_constrainedEntityMap.reader_hasKey (_inLexique, var_cas_rootEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (329)) SOURCE_FILE_AT_LINE (329))))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the @")) + (var_cas_rootEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (330))))) + (GGS_string (true, " root entity should be defined"))) SOURCE_FILE_AT_LINE (331)) ;
  }
  GGS_representativeEntityMap  var_cas_representativeEntityMap ;
  var_cas_representativeEntityMap = GGS_representativeEntityMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_entityToImplementMap::element_type * operand_13025 = var_cas_metamodelEntityMap.firstObject () ;
  while ((operand_13025 != NULL)) {
    macroValidPointer (operand_13025) ;
    GGS_lstring  var_cas_representativeTypeName ;
    ::routine_computeRepresentativeEntityName (_inLexique,  var_cas_metamodelEntityMap,  var_cas_constrainedEntityMap,  operand_13025->mKey,  var_cas_representativeTypeName SOURCE_FILE_AT_LINE (337)) ;
    GGS_stringset  var_cas_superEntitySet ;
    var_cas_superEntitySet = operand_13025->mInfo.mSuperEntitySet ;
    var_cas_superEntitySet._addAssign_operation (operand_13025->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (343))) ;
    var_cas_representativeEntityMap.method_insertKey (_inLexique, operand_13025->mKey, var_cas_representativeTypeName, var_cas_superEntitySet SOURCE_FILE_AT_LINE (344)) ;
    operand_13025 = operand_13025->nextObject () ;
  }
  GGS_stringset  var_cas_multiReferencedEntities ;
  var_cas_multiReferencedEntities = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_entityToImplementMap::element_type * operand_13725 = var_cas_constrainedEntityMap.firstObject () ;
  while ((operand_13725 != NULL)) {
    macroValidPointer (operand_13725) ;
    GGS_entityPropertyMap::element_type * operand_15769 = operand_13725->mInfo.mAllMetamodelPropertyMap.firstObject () ;
    while ((operand_15769 != NULL)) {
      macroValidPointer (operand_15769) ;
      if (operand_15769->mInfo.mProperty._isBuilt ()) {
        cPtr_metamodelMultipleReferenceProperty * operand_16284 = dynamic_cast <cPtr_metamodelMultipleReferenceProperty *> (operand_15769->mInfo.mProperty.getPtr ()) ;
        if (operand_16284 != NULL) {
          macroValidPointer (operand_16284) ; 
          GGS_lstring  var_cas_representativeTypeName ;
          ::routine_computeRepresentativeEntityName (_inLexique,  var_cas_metamodelEntityMap,  var_cas_constrainedEntityMap,  operand_16284->mReferenceEntityName,  var_cas_representativeTypeName SOURCE_FILE_AT_LINE (414)) ;
          if (((var_cas_representativeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (419))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
            var_cas_multiReferencedEntities._addAssign_operation (var_cas_representativeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (420))) ;
          }
        }else{ // Else part
        }
      }
      operand_15769 = operand_15769->nextObject () ;
    }
    operand_13725 = operand_13725->nextObject () ;
  }
  GGS_entityToImplementMap::element_type * operand_18040 = var_cas_constrainedEntityMap.firstObject () ;
  while ((operand_18040 != NULL)) {
    macroValidPointer (operand_18040) ;
    GGS_callInstructionSharedPropertySignatureMap  var_cas_callInstructionSharedPropertySignatureMap ;
    GGS_location  var_cas_endOfInstructionList ;
    GGS_typeInstructionList  automatic_var_8 ;
    if (var_cas_constraintInstructionListMap._isBuilt ()) {
      var_cas_constraintInstructionListMap (HERE)->method_searchKey (_inLexique, operand_18040->mKey, automatic_var_8, var_cas_callInstructionSharedPropertySignatureMap, var_cas_endOfInstructionList SOURCE_FILE_AT_LINE (473)) ;
    }
    GGS_entityPropertyMap::element_type * operand_18539 = operand_18040->mInfo.mCurrentMetamodelPropertyMap.firstObject () ;
    while ((operand_18539 != NULL)) {
      macroValidPointer (operand_18539) ;
      if (operand_18539->mInfo.mProperty._isBuilt ()) {
        cPtr_metamodelSingleReferenceProperty * operand_18632 = dynamic_cast <cPtr_metamodelSingleReferenceProperty *> (operand_18539->mInfo.mProperty.getPtr ()) ;
        if (operand_18632 != NULL) {
          macroValidPointer (operand_18632) ; 
          ::routine_checkCallInstruction (_inLexique,  var_cas_constrainedEntityMap,  operand_18632->mReferenceEntityName,  var_cas_callInstructionSharedPropertySignatureMap,  operand_18539->mKey,  operand_18040->mInfo.mAllAvailablePropertyMap,  var_cas_endOfInstructionList SOURCE_FILE_AT_LINE (477)) ;
        }else{
          cPtr_metamodelMultipleReferenceProperty * operand_18972 = dynamic_cast <cPtr_metamodelMultipleReferenceProperty *> (operand_18539->mInfo.mProperty.getPtr ()) ;
          if (operand_18972 != NULL) {
            macroValidPointer (operand_18972) ; 
            ::routine_checkCallInstruction (_inLexique,  var_cas_constrainedEntityMap,  operand_18972->mReferenceEntityName,  var_cas_callInstructionSharedPropertySignatureMap,  operand_18539->mKey,  operand_18040->mInfo.mAllAvailablePropertyMap,  var_cas_endOfInstructionList SOURCE_FILE_AT_LINE (486)) ;
          }else{ // Else part
          }
        }
      }
      operand_18539 = operand_18539->nextObject () ;
    }
    operand_18040 = operand_18040->nextObject () ;
  }
  if (var_cas_metamodelEntityMap._isBuilt () &&
      var_cas_mapEntityMap._isBuilt () &&
      var_cas_metamodelName._isBuilt () &&
      var_cas_constraintName._isBuilt () &&
      var_cas_constrainedEntityMap._isBuilt () &&
      var_cas_multiReferencedEntities._isBuilt () &&
      var_cas_rootEntity._isBuilt () &&
      var_cas_representativeEntityMap._isBuilt () &&
      var_cas_constraintInstructionListMap._isBuilt ()) {
    ::routine_generate_constraints (_inLexique,  var_cas_metamodelEntityMap,  var_cas_mapEntityMap,  var_cas_metamodelName,  var_cas_constraintName,  var_cas_constrainedEntityMap,  var_cas_multiReferencedEntities,  var_cas_rootEntity,  var_cas_representativeEntityMap,  var_cas_constraintInstructionListMap SOURCE_FILE_AT_LINE (500)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_constraint) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_parse_constraint_document_constraint_parser_264_33_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_constraint) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  nt_parse_semantics_component_for_importing_parse (_inLexique) ;
  nt_constraint_class_override_declarations_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_0 (_inLexique)) {
        case 2 : {
          nt_constraint_map_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        nt_constraints_on_entity_declaration_parse (_inLexique) ;
      switch (select_repeat_constraint_parser_1 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_constraint) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'constraint_map_declaration'       *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraint_map_declaration_constraint_parser_516_34_ (galgas_scanner & _inLexique,
                                GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                GGS_mapEntityMap  &var_cas_ioMapEntityMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
  GGS_lstring  var_cas_mapIdentifier ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) ;
  var_cas_mapIdentifier.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  if ((var_cas_inMetamodelEntityMap.reader_hasKey (_inLexique, var_cas_mapIdentifier.reader_string (_inLexique SOURCE_FILE_AT_LINE (523)) SOURCE_FILE_AT_LINE (523))).isBuiltAndTrue ()) {
    var_cas_mapIdentifier.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "An entity has been declared with this name") SOURCE_FILE_AT_LINE (525)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_of) ;
  GGS_lstring  var_cas_mapElementIdentifier ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) ;
  var_cas_mapElementIdentifier.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  GGS_lstring  var_cas_insertErrorMessage ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  var_cas_insertErrorMessage.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  if (var_cas_insertErrorMessage._isBuilt ()) {
    ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_insertErrorMessage SOURCE_FILE_AT_LINE (535)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  GGS_lstring  var_cas_searchErrorMessage ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  var_cas_searchErrorMessage.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  if (var_cas_searchErrorMessage._isBuilt ()) {
    ::routine_check_K_escapeCharacters (_inLexique,  var_cas_searchErrorMessage SOURCE_FILE_AT_LINE (542)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
  var_cas_ioMapEntityMap.method_insertKey (_inLexique, var_cas_mapIdentifier, var_cas_mapElementIdentifier, var_cas_insertErrorMessage, var_cas_searchErrorMessage SOURCE_FILE_AT_LINE (546)) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraint_map_declaration_constraint_parser_516_34_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_of) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of production rule 'constraints_on_entity_declaration'    *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraints_on_entity_declaration_constraint_parser_555_41_ (galgas_scanner & _inLexique,
                                GGS_entityToImplementMap  var_cas_inEntityMap,
                                GGS_mapEntityMap  &var_cas_ioMapEntityMap,
                                GGS_entityToImplementMap  &var_cas_ioConstrainedEntityMap,
                                GGS_constraintInstructionListMap  &var_cas_ioConstraintInstructionListMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  GGS_lstring  var_cas_entityName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) ;
  var_cas_entityName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_lstring  var_cas_superEntity ;
  GGS_entityPropertyMap  var_cas_allMetamodelPropertyMap ;
  GGS_stringset  var_cas_superClassSet ;
  GGS_entityPropertyMap  var_cas_currentMetamodelPropertyMap ;
  GGS_entityPropertyMap  var_cas_allConstraintPropertyMap ;
  GGS_entityPropertyMap  var_cas_allAvailablePropertyMap ;
  GGS_bool automatic_var_9 ;
  GGS_entityPropertyMap  automatic_var_10 ;
  if (var_cas_inEntityMap._isBuilt ()) {
    var_cas_inEntityMap (HERE)->method_searchKey (_inLexique, var_cas_entityName, var_cas_allMetamodelPropertyMap, automatic_var_9, var_cas_currentMetamodelPropertyMap, var_cas_superEntity, automatic_var_10, var_cas_superClassSet, var_cas_allConstraintPropertyMap, var_cas_allAvailablePropertyMap SOURCE_FILE_AT_LINE (573)) ;
  }
  if (((var_cas_superEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (586))) == (GGS_string (true, ""))).isBuiltAndTrue ()) {
  }else if ((var_cas_ioConstrainedEntityMap.reader_hasKey (_inLexique, var_cas_superEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (588)) SOURCE_FILE_AT_LINE (588))).isBuiltAndTrue ()) {
    GGS_entityPropertyMap  var_cas_inheritedConstraintPropertyMap ;
    GGS_entityPropertyMap  automatic_var_11 ;
    GGS_bool automatic_var_12 ;
    GGS_entityPropertyMap  automatic_var_13 ;
    GGS_lstring  automatic_var_14 ;
    GGS_stringset  automatic_var_15 ;
    GGS_entityPropertyMap  automatic_var_16 ;
    if (var_cas_ioConstrainedEntityMap._isBuilt ()) {
      var_cas_ioConstrainedEntityMap (HERE)->method_searchKey (_inLexique, var_cas_superEntity, automatic_var_11, automatic_var_12, automatic_var_13, automatic_var_14, var_cas_inheritedConstraintPropertyMap, automatic_var_15, var_cas_allConstraintPropertyMap, automatic_var_16 SOURCE_FILE_AT_LINE (591)) ;
    }
    GGS_entityPropertyMap::element_type * operand_22306 = var_cas_inheritedConstraintPropertyMap.firstObject () ;
    while ((operand_22306 != NULL)) {
      macroValidPointer (operand_22306) ;
      var_cas_allAvailablePropertyMap.method_insertKey (_inLexique, operand_22306->mKey, operand_22306->mInfo.mProperty SOURCE_FILE_AT_LINE (602)) ;
      operand_22306 = operand_22306->nextObject () ;
    }
  }else{
    var_cas_entityName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "constraints for super entity ('@")) + (var_cas_superEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (606))))) + (GGS_string (true, "') should be previously defined"))) SOURCE_FILE_AT_LINE (607)) ;
  }
  GGS_entityPropertyMap  var_cas_currentConstraintPropertyMap ;
  var_cas_currentConstraintPropertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  switch (select_constraint_parser_2 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      if (((var_cas_superEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (613))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "as the '@")) + (var_cas_entityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (614))))) + (GGS_string (true, "' entity has a super entity, you cannot define any shared property"))) SOURCE_FILE_AT_LINE (616)) ;
      }
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_typeName ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) ;
            var_cas_typeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            GGS_lstring  automatic_var_17 ;
            GGS_lstring  automatic_var_18 ;
            GGS_lstring  automatic_var_19 ;
            if (var_cas_ioMapEntityMap._isBuilt ()) {
              var_cas_ioMapEntityMap (HERE)->method_searchKey (_inLexique, var_cas_typeName, automatic_var_17, automatic_var_18, automatic_var_19 SOURCE_FILE_AT_LINE (620)) ;
            }
            GGS_metamodelProperty  var_cas_property ;
            var_cas_property = GGS_metamodelSharedMapProperty::constructor_new (_inLexique, var_cas_typeName COMMA_HERE) ;
            GGS_lstring  var_cas_propertyName ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_propertyName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            var_cas_currentConstraintPropertyMap.method_insertKey (_inLexique, var_cas_propertyName, var_cas_property SOURCE_FILE_AT_LINE (624)) ;
            var_cas_allConstraintPropertyMap.method_insertKey (_inLexique, var_cas_propertyName, var_cas_property SOURCE_FILE_AT_LINE (625)) ;
            var_cas_allAvailablePropertyMap.method_insertKey (_inLexique, var_cas_propertyName, var_cas_property SOURCE_FILE_AT_LINE (626)) ;
          switch (select_repeat_constraint_parser_3 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    default :
      break ;
  }
  GGS_indexMap  var_cas_currentIndexMap ;
  var_cas_currentIndexMap = GGS_indexMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_4 (_inLexique)) {
        case 2 : {
          GGS_lstring  var_cas_typeName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) ;
          var_cas_typeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          GGS_lstring  automatic_var_20 ;
          GGS_lstring  automatic_var_21 ;
          GGS_lstring  automatic_var_22 ;
          if (var_cas_ioMapEntityMap._isBuilt ()) {
            var_cas_ioMapEntityMap (HERE)->method_searchKey (_inLexique, var_cas_typeName, automatic_var_20, automatic_var_21, automatic_var_22 SOURCE_FILE_AT_LINE (639)) ;
          }
          GGS_metamodelProperty  var_cas_property ;
          var_cas_property = GGS_metamodelMapProperty::constructor_new (_inLexique, var_cas_typeName COMMA_HERE) ;
          GGS_lstring  var_cas_propertyName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_propertyName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          var_cas_currentConstraintPropertyMap.method_insertKey (_inLexique, var_cas_propertyName, var_cas_property SOURCE_FILE_AT_LINE (643)) ;
          var_cas_allConstraintPropertyMap.method_insertKey (_inLexique, var_cas_propertyName, var_cas_property SOURCE_FILE_AT_LINE (644)) ;
          var_cas_allAvailablePropertyMap.method_insertKey (_inLexique, var_cas_propertyName, var_cas_property SOURCE_FILE_AT_LINE (645)) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  GGS_typeVariablesMap  var_cas_variablesMap ;
  var_cas_variablesMap = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_entityPropertyMap::element_type * operand_24728 = var_cas_allAvailablePropertyMap.firstObject () ;
  while ((operand_24728 != NULL)) {
    macroValidPointer (operand_24728) ;
    if (operand_24728->mInfo.mProperty._isBuilt ()) {
      cPtr_metamodelAttributeProperty * operand_24812 = dynamic_cast <cPtr_metamodelAttributeProperty *> (operand_24728->mInfo.mProperty.getPtr ()) ;
      if (operand_24812 != NULL) {
        macroValidPointer (operand_24812) ; 
        GGS_typeCplusPlusName  var_cas_cppName ;
        var_cas_cppName = GGS_typeDirectName::constructor_new (_inLexique, GGS_lstring::constructor_new (_inLexique, ((GGS_string (true, "_mMetamodelObject->")) + (operand_24728->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (668)))), operand_24728->mKey.reader_location (_inLexique SOURCE_FILE_AT_LINE (668)) COMMA_HERE) COMMA_HERE) ;
        if (((operand_24812->mAttributeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (669))) == (GGS_string (true, "lstring"))).isBuiltAndTrue ()) {
          GGS_AC_galgasType  var_cas_t ;
          var_cas_t = GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE) ;
          var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_24728->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (671)) ;
        }else if (((operand_24812->mAttributeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (672))) == (GGS_string (true, "string"))).isBuiltAndTrue ()) {
          GGS_AC_galgasType  var_cas_t ;
          var_cas_t = GGS_typeGalgas_string::constructor_new (_inLexique COMMA_HERE) ;
          var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_24728->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (674)) ;
        }else if (((operand_24812->mAttributeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (675))) == (GGS_string (true, "lchar"))).isBuiltAndTrue ()) {
          GGS_AC_galgasType  var_cas_t ;
          var_cas_t = GGS_typeGalgas_lchar::constructor_new (_inLexique COMMA_HERE) ;
          var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_24728->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (677)) ;
        }else if (((operand_24812->mAttributeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (678))) == (GGS_string (true, "char"))).isBuiltAndTrue ()) {
          GGS_AC_galgasType  var_cas_t ;
          var_cas_t = GGS_typeGalgas_char::constructor_new (_inLexique COMMA_HERE) ;
          var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_24728->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (680)) ;
        }else if (((operand_24812->mAttributeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (681))) == (GGS_string (true, "luint"))).isBuiltAndTrue ()) {
          GGS_AC_galgasType  var_cas_t ;
          var_cas_t = GGS_typeGalgas_luint::constructor_new (_inLexique COMMA_HERE) ;
          var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_24728->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (683)) ;
        }else if (((operand_24812->mAttributeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (684))) == (GGS_string (true, "uint"))).isBuiltAndTrue ()) {
          GGS_AC_galgasType  var_cas_t ;
          var_cas_t = GGS_typeGalgas_uint::constructor_new (_inLexique COMMA_HERE) ;
          var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_24728->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (686)) ;
        }else if (((operand_24812->mAttributeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (687))) == (GGS_string (true, "lsint"))).isBuiltAndTrue ()) {
          GGS_AC_galgasType  var_cas_t ;
          var_cas_t = GGS_typeGalgas_lsint::constructor_new (_inLexique COMMA_HERE) ;
          var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_24728->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (689)) ;
        }else if (((operand_24812->mAttributeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (690))) == (GGS_string (true, "sint"))).isBuiltAndTrue ()) {
          GGS_AC_galgasType  var_cas_t ;
          var_cas_t = GGS_typeGalgas_sint::constructor_new (_inLexique COMMA_HERE) ;
          var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_24728->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (692)) ;
        }else if (((operand_24812->mAttributeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (693))) == (GGS_string (true, "lbool"))).isBuiltAndTrue ()) {
          GGS_AC_galgasType  var_cas_t ;
          var_cas_t = GGS_typeGalgas_lbool::constructor_new (_inLexique COMMA_HERE) ;
          var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_24728->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (695)) ;
        }else if (((operand_24812->mAttributeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (696))) == (GGS_string (true, "bool"))).isBuiltAndTrue ()) {
          GGS_AC_galgasType  var_cas_t ;
          var_cas_t = GGS_typeGalgas_bool::constructor_new (_inLexique COMMA_HERE) ;
          var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_24728->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (698)) ;
        }else if (((operand_24812->mAttributeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (699))) == (GGS_string (true, "location"))).isBuiltAndTrue ()) {
          GGS_AC_galgasType  var_cas_t ;
          var_cas_t = GGS_typeGalgas_location::constructor_new (_inLexique COMMA_HERE) ;
          var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_24728->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (701)) ;
        }else{
          GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "internal error (@")) + (operand_24812->mAttributeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (703))))) + (GGS_string (true, " type not handled"))) SOURCE_FILE_AT_LINE (704)) ;
        }
      }else{ // Else part
      }
    }
    operand_24728 = operand_24728->nextObject () ;
  }
  GGS_typeCplusPlusName  var_cas_cppName ;
  var_cas_cppName = GGS_typeDirectName::constructor_new (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "_mMetamodelObject"), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_t ;
  var_cas_t = GGS_typeGalgas_entityInInstruction::constructor_new (_inLexique, var_cas_entityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (732)) COMMA_HERE) ;
  var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "self"), GGS_location (_inLexique) COMMA_HERE), var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (733)) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap ;
  var_cas_componentSemanticsEntitiesMap = GGS_M_semanticsEntitiesForUse::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
  var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
  var_cas_optionsComponentsMapForUse = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionsList ;
  var_cas_instructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_constraintPropertyDefinitionSet ;
  var_cas_constraintPropertyDefinitionSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_callInstructionSharedPropertySignatureMap  var_cas_callInstructionSharedPropertySignatureMap ;
  var_cas_callInstructionSharedPropertySignatureMap = GGS_callInstructionSharedPropertySignatureMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_componentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_optionsComponentsMapForUse, var_cas_variablesMap, var_cas_instructionsList, var_cas_allAvailablePropertyMap, var_cas_constraintPropertyDefinitionSet, var_cas_callInstructionSharedPropertySignatureMap) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
  var_cas_ioConstraintInstructionListMap.method_insertKey (_inLexique, var_cas_entityName, var_cas_instructionsList, var_cas_callInstructionSharedPropertySignatureMap, GGS_location (_inLexique) SOURCE_FILE_AT_LINE (753)) ;
  var_cas_ioConstrainedEntityMap.method_insertKey (_inLexique, var_cas_entityName, var_cas_allMetamodelPropertyMap, GGS_bool (true, false), var_cas_currentMetamodelPropertyMap, var_cas_superEntity, var_cas_currentConstraintPropertyMap, var_cas_superClassSet, var_cas_allConstraintPropertyMap, var_cas_allAvailablePropertyMap SOURCE_FILE_AT_LINE (784)) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraints_on_entity_declaration_constraint_parser_555_41_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) ;
  switch (select_constraint_parser_2 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          switch (select_repeat_constraint_parser_3 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_4 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of production rule 'property_path_for_constraint'      *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_property_path_for_constraint_constraint_parser_798_36_ (galgas_scanner & _inLexique,
                                GGS_L_propertyPath  &var_cas_outPath) {
  var_cas_outPath = GGS_L_propertyPath::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        switch (select_constraint_parser_6 (_inLexique)) {
          case 1 : {
            GGS_lstring  var_cas_pathElement ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_pathElement.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            var_cas_outPath._addAssign_operation (var_cas_pathElement) ;
            } break ;
          case 2 : {
            GGS_lstring  var_cas_pathElement ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
            var_cas_pathElement.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            var_cas_outPath._addAssign_operation (GGS_lstring::constructor_new (_inLexique, ((GGS_string (true, ".")) + (var_cas_pathElement.reader_string (_inLexique SOURCE_FILE_AT_LINE (810)))), var_cas_pathElement.reader_location (_inLexique SOURCE_FILE_AT_LINE (810)) COMMA_HERE)) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_constraint_parser_5 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2E) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_property_path_for_constraint_constraint_parser_798_36_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        switch (select_constraint_parser_6 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_constraint_parser_5 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2E) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Implementation of production rule 'constraint_relation_expression'     *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraint_relation_expression_constraint_parser_819_38_ (galgas_scanner & _inLexique,
                                GGS_relationVarMap  &var_cas_ioRelationVariableMap,
                                GGS_indexMap  &var_cas_ioIndexMap,
                                GGS_metamodelRelationExpression  &var_cas_outExpression) {
  nt_constraint_relation_term_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_outExpression) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_7 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7C) ;
          GGS_metamodelRelationExpression  var_cas_e ;
          nt_constraint_relation_term_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_e) ;
          var_cas_outExpression = GGS_metamodelRelationOr::constructor_new (_inLexique, var_cas_outExpression, var_cas_e COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraint_relation_expression_constraint_parser_819_38_parse (galgas_scanner & _inLexique) {
  nt_constraint_relation_term_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_7 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7C) ;
          nt_constraint_relation_term_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'constraint_relation_term'        *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraint_relation_term_constraint_parser_839_32_ (galgas_scanner & _inLexique,
                                GGS_relationVarMap  &var_cas_ioRelationVariableMap,
                                GGS_indexMap  &var_cas_ioIndexMap,
                                GGS_metamodelRelationExpression  &var_cas_outExpression) {
  nt_constraint_relation_factor_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_outExpression) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_8 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__26) ;
          GGS_metamodelRelationExpression  var_cas_e ;
          nt_constraint_relation_factor_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_e) ;
          var_cas_outExpression = GGS_metamodelRelationOr::constructor_new (_inLexique, var_cas_outExpression, var_cas_e COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraint_relation_term_constraint_parser_839_32_parse (galgas_scanner & _inLexique) {
  nt_constraint_relation_factor_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_8 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__26) ;
          nt_constraint_relation_factor_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'constraint_relation_factor'       *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraint_relation_factor_constraint_parser_856_34_ (galgas_scanner & _inLexique,
                                GGS_relationVarMap  &var_cas_ioRelationVariableMap,
                                GGS_indexMap  &var_cas_ioIndexMap,
                                GGS_metamodelRelationExpression  &var_cas_outExpression) {
  switch (select_constraint_parser_9 (_inLexique)) {
    case 1 : {
      nt_constraint_relation_primary_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_outExpression) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_not) ;
      nt_constraint_relation_primary_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_outExpression) ;
      var_cas_outExpression = GGS_metamodelRelationNot::constructor_new (_inLexique, var_cas_outExpression COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraint_relation_factor_constraint_parser_856_34_parse (galgas_scanner & _inLexique) {
  switch (select_constraint_parser_9 (_inLexique)) {
    case 1 : {
      nt_constraint_relation_primary_parse (_inLexique) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_not) ;
      nt_constraint_relation_primary_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of production rule 'constraint_relation_primary'       *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraint_relation_primary_constraint_parser_872_35_ (galgas_scanner & _inLexique,
                                GGS_relationVarMap  &var_cas_ioRelationVariableMap,
                                GGS_indexMap  &var_cas_ioIndexMap,
                                GGS_metamodelRelationExpression  &var_cas_outExpression) {
  switch (select_constraint_parser_10 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_true) ;
      var_cas_outExpression = GGS_metamodelRelationTrue::constructor_new (_inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_false) ;
      var_cas_outExpression = GGS_metamodelRelationFalse::constructor_new (_inLexique COMMA_HERE) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      nt_constraint_relation_expression_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_outExpression) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    case 4 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_lstring  var_cas_localVar ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_localVar.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
      GGS_luint  var_cas_variableIndex ;
      GGS_lstring  var_cas_domainVariable ;
      if (var_cas_ioRelationVariableMap._isBuilt ()) {
        var_cas_ioRelationVariableMap (HERE)->method_searchKeyAndGetIndex (_inLexique, var_cas_localVar, var_cas_variableIndex, var_cas_domainVariable SOURCE_FILE_AT_LINE (893)) ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3D_3D) ;
      GGS_lstring  var_cas_indexVariableName ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_indexVariableName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
      GGS_lstring  var_cas_domainVariableFromIndex ;
      if (var_cas_ioIndexMap._isBuilt ()) {
        var_cas_ioIndexMap (HERE)->method_searchKey (_inLexique, var_cas_indexVariableName, var_cas_domainVariableFromIndex SOURCE_FILE_AT_LINE (898)) ;
      }
      if (((var_cas_domainVariable.reader_string (_inLexique SOURCE_FILE_AT_LINE (899))) != (var_cas_domainVariableFromIndex.reader_string (_inLexique SOURCE_FILE_AT_LINE (899)))).isBuiltAndTrue ()) {
        var_cas_indexVariableName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((((((GGS_string (true, "this index refers to the '")) + (var_cas_domainVariableFromIndex.reader_string (_inLexique SOURCE_FILE_AT_LINE (900))))) + (GGS_string (true, "' domain, while '")))) + (var_cas_localVar.reader_string (_inLexique SOURCE_FILE_AT_LINE (901))))) + (GGS_string (true, "' relation variable refers to the '")))) + (var_cas_domainVariable.reader_string (_inLexique SOURCE_FILE_AT_LINE (902))))) + (GGS_string (true, "' domain"))) SOURCE_FILE_AT_LINE (903)) ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      var_cas_outExpression = GGS_metamodelRelationPrimary::constructor_new (_inLexique, var_cas_ioRelationVariableMap, var_cas_localVar, var_cas_variableIndex, var_cas_indexVariableName, var_cas_domainVariable COMMA_HERE) ;
      } break ;
    case 5 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_do) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      GGS_L_propertyPath  var_cas_path ;
      nt_property_path_for_constraint_ (_inLexique, var_cas_path) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
      GGS_metamodelRelationParameterList  var_cas_parameterList ;
      var_cas_parameterList = GGS_metamodelRelationParameterList::constructor_emptyList (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_parameter ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_parameter.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            GGS_luint  var_cas_parameterIndex ;
            GGS_lstring  var_cas_domainVariable ;
            if (var_cas_ioRelationVariableMap._isBuilt ()) {
              var_cas_ioRelationVariableMap (HERE)->method_searchKeyAndGetIndex (_inLexique, var_cas_parameter, var_cas_parameterIndex, var_cas_domainVariable SOURCE_FILE_AT_LINE (918)) ;
            }
            var_cas_parameterList._addAssign_operation (var_cas_parameter, var_cas_parameterIndex, var_cas_domainVariable) ;
          switch (select_repeat_constraint_parser_11 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
      GGS_lbool  var_cas_operationIsAnd ;
      switch (select_constraint_parser_12 (_inLexique)) {
        case 1 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7C) ;
          var_cas_operationIsAnd = GGS_lbool::constructor_new (_inLexique, GGS_bool (true, false), GGS_location (_inLexique) COMMA_HERE) ;
          } break ;
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__26) ;
          var_cas_operationIsAnd = GGS_lbool::constructor_new (_inLexique, GGS_bool (true, true), GGS_location (_inLexique) COMMA_HERE) ;
          } break ;
        default :
          break ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      var_cas_outExpression = GGS_metamodelRelationDo::constructor_new (_inLexique, var_cas_ioRelationVariableMap, var_cas_parameterList, var_cas_path, var_cas_operationIsAnd COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraint_relation_primary_constraint_parser_872_35_parse (galgas_scanner & _inLexique) {
  switch (select_constraint_parser_10 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_true) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_false) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      nt_constraint_relation_expression_parse (_inLexique) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    case 4 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3D_3D) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    case 5 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_do) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      nt_property_path_for_constraint_parse (_inLexique) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          switch (select_repeat_constraint_parser_11 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
      switch (select_constraint_parser_12 (_inLexique)) {
        case 1 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7C) ;
          } break ;
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__26) ;
          } break ;
        default :
          break ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "buildUsefullPropertyMap"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildUsefullPropertyMap (C_Lexique & _inLexique,
                                const GGS_entityPropertyMap  & var_cas_inInputPropertyMap,
                                const GGS_stringset  & var_cas_inUsefullClassSet,
                                GGS_entityPropertyMap  & var_cas_outOutputPropertyMap COMMA_UNUSED_LOCATION_ARGS) {
  var_cas_outOutputPropertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_entityPropertyMap::element_type * operand_36098 = var_cas_inInputPropertyMap.firstObject () ;
  while ((operand_36098 != NULL)) {
    macroValidPointer (operand_36098) ;
    if (operand_36098->mInfo.mProperty._isBuilt ()) {
      cPtr_metamodelSingleReferenceProperty * operand_36186 = dynamic_cast <cPtr_metamodelSingleReferenceProperty *> (operand_36098->mInfo.mProperty.getPtr ()) ;
      if (operand_36186 != NULL) {
        macroValidPointer (operand_36186) ; 
        if ((var_cas_inUsefullClassSet.reader_hasKey (_inLexique, operand_36186->mReferenceEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (949)) SOURCE_FILE_AT_LINE (949))).isBuiltAndTrue ()) {
          var_cas_outOutputPropertyMap.method_insertKey (_inLexique, operand_36098->mKey, operand_36098->mInfo.mProperty SOURCE_FILE_AT_LINE (950)) ;
        }
      }else{
        cPtr_metamodelMultipleReferenceProperty * operand_36419 = dynamic_cast <cPtr_metamodelMultipleReferenceProperty *> (operand_36098->mInfo.mProperty.getPtr ()) ;
        if (operand_36419 != NULL) {
          macroValidPointer (operand_36419) ; 
          if ((var_cas_inUsefullClassSet.reader_hasKey (_inLexique, operand_36419->mReferenceEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (953)) SOURCE_FILE_AT_LINE (953))).isBuiltAndTrue ()) {
            var_cas_outOutputPropertyMap.method_insertKey (_inLexique, operand_36098->mKey, operand_36098->mInfo.mProperty SOURCE_FILE_AT_LINE (954)) ;
          }
        }else{ // Else part
          var_cas_outOutputPropertyMap.method_insertKey (_inLexique, operand_36098->mKey, operand_36098->mInfo.mProperty SOURCE_FILE_AT_LINE (957)) ;
        }
      }
    }
    operand_36098 = operand_36098->nextObject () ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'constraint_class_override_declarations' *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraint_class_override_declarations_constraint_parser_964_46_ (galgas_scanner & _inLexique,
                                GGS_lstring  var_cas_inRootClass,
                                GGS_entityToImplementMap  var_cas_inOriginalMetamodelEntityMap,
                                GGS_entityToImplementMap  &var_cas_outMetamodelEntityMap) {
  GGS_stringset  var_cas_overriddenClassSet ;
  var_cas_overriddenClassSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_override) ;
        GGS_lstring  var_cas_metamodelClass ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) ;
        var_cas_metamodelClass.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
        GGS_entityPropertyMap  automatic_var_23 ;
        GGS_bool automatic_var_24 ;
        GGS_entityPropertyMap  automatic_var_25 ;
        GGS_lstring  automatic_var_26 ;
        GGS_entityPropertyMap  automatic_var_27 ;
        GGS_stringset  automatic_var_28 ;
        GGS_entityPropertyMap  automatic_var_29 ;
        GGS_entityPropertyMap  automatic_var_30 ;
        if (var_cas_inOriginalMetamodelEntityMap._isBuilt ()) {
          var_cas_inOriginalMetamodelEntityMap (HERE)->method_searchKey (_inLexique, var_cas_metamodelClass, automatic_var_23, automatic_var_24, automatic_var_25, automatic_var_26, automatic_var_27, automatic_var_28, automatic_var_29, automatic_var_30 SOURCE_FILE_AT_LINE (975)) ;
        }
        if ((var_cas_overriddenClassSet.reader_hasKey (_inLexique, var_cas_metamodelClass.reader_string (_inLexique SOURCE_FILE_AT_LINE (976)) SOURCE_FILE_AT_LINE (976))).isBuiltAndTrue ()) {
          var_cas_metamodelClass.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this class is already declared as overridden") SOURCE_FILE_AT_LINE (978)) ;
        }else{
          var_cas_overriddenClassSet._addAssign_operation (var_cas_metamodelClass.reader_string (_inLexique SOURCE_FILE_AT_LINE (979))) ;
        }
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      switch (select_repeat_constraint_parser_13 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  if (((! (var_cas_overriddenClassSet.reader_hasKey (_inLexique, var_cas_inRootClass.reader_string (_inLexique SOURCE_FILE_AT_LINE (985)) SOURCE_FILE_AT_LINE (985))))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '%")) + (var_cas_inRootClass.reader_string (_inLexique SOURCE_FILE_AT_LINE (986))))) + (GGS_string (true, "' root class should be declared as overridden"))) SOURCE_FILE_AT_LINE (987)) ;
  }
  GGS_stringset  var_cas_usefulClassSet ;
  var_cas_usefulClassSet = GGS_stringset::constructor_setWithString (_inLexique, var_cas_inRootClass.reader_string (_inLexique SOURCE_FILE_AT_LINE (989)) COMMA_HERE) ;
  GGS_bool var_cas_continue ;
  var_cas_continue = GGS_bool (true, true) ;
  GGS_uint _variant_39804 = var_cas_inOriginalMetamodelEntityMap.reader_count (_inLexique SOURCE_FILE_AT_LINE (991))._add_operation (_inLexique, GGS_uint (true, 1U) SOURCE_FILE_AT_LINE (991)) ;
  GGS_bool _condition_39804 (_variant_39804._isBuilt (), true) ;
  while (_condition_39804.isBuiltAndTrue ()) {
    if (_variant_39804.uintValue () == 0) {
      _inLexique.onTheFlyRunTimeError ("loop variant error" SOURCE_FILE_AT_LINE (1036)) ;
      _condition_39804 = GGS_bool (true, false) ;
    }else{
      _variant_39804._decrement_operation (_inLexique COMMA_HERE) ;
      _condition_39804 = var_cas_continue  ;
      if (_condition_39804.isBuiltAndTrue ()) {
        var_cas_continue = GGS_bool (true, false) ;
        GGS_stringset::element_type * operand_38008 = var_cas_overriddenClassSet.firstObject () ;
        while ((operand_38008 != NULL)) {
          macroValidPointer (operand_38008) ;
          GGS_entityPropertyMap  var_cas_allAvailablePropertyMap ;
          GGS_lstring  var_cas_superEntityName ;
          GGS_entityPropertyMap  automatic_var_31 ;
          GGS_bool automatic_var_32 ;
          GGS_entityPropertyMap  automatic_var_33 ;
          GGS_entityPropertyMap  automatic_var_34 ;
          GGS_stringset  automatic_var_35 ;
          GGS_entityPropertyMap  automatic_var_36 ;
          if (var_cas_inOriginalMetamodelEntityMap._isBuilt ()) {
            var_cas_inOriginalMetamodelEntityMap (HERE)->method_searchKey (_inLexique, GGS_lstring::constructor_new (_inLexique, operand_38008->mKey, GGS_location (_inLexique) COMMA_HERE), automatic_var_31, automatic_var_32, automatic_var_33, var_cas_superEntityName, automatic_var_34, automatic_var_35, automatic_var_36, var_cas_allAvailablePropertyMap SOURCE_FILE_AT_LINE (998)) ;
          }
          if ((((var_cas_usefulClassSet.reader_hasKey (_inLexique, var_cas_superEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1009)) SOURCE_FILE_AT_LINE (1009))) & ((! (var_cas_usefulClassSet.reader_hasKey (_inLexique, operand_38008->mKey SOURCE_FILE_AT_LINE (1009))))))).isBuiltAndTrue ()) {
            var_cas_continue = GGS_bool (true, true) ;
            var_cas_usefulClassSet._addAssign_operation (operand_38008->mKey) ;
          }
          if ((var_cas_usefulClassSet.reader_hasKey (_inLexique, operand_38008->mKey SOURCE_FILE_AT_LINE (1013))).isBuiltAndTrue ()) {
            if (((((var_cas_superEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1015))) != (GGS_string (true, ""))) & ((! (var_cas_usefulClassSet.reader_hasKey (_inLexique, var_cas_superEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1015)) SOURCE_FILE_AT_LINE (1015))))))).isBuiltAndTrue ()) {
              var_cas_continue = GGS_bool (true, true) ;
              var_cas_usefulClassSet._addAssign_operation (var_cas_superEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1017))) ;
            }
            GGS_entityPropertyMap::element_type * operand_38964 = var_cas_allAvailablePropertyMap.firstObject () ;
            while ((operand_38964 != NULL)) {
              macroValidPointer (operand_38964) ;
              if (operand_38964->mInfo.mProperty._isBuilt ()) {
                cPtr_metamodelSingleReferenceProperty * operand_39043 = dynamic_cast <cPtr_metamodelSingleReferenceProperty *> (operand_38964->mInfo.mProperty.getPtr ()) ;
                if (operand_39043 != NULL) {
                  macroValidPointer (operand_39043) ; 
                  if ((((var_cas_overriddenClassSet.reader_hasKey (_inLexique, operand_39043->mReferenceEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1022)) SOURCE_FILE_AT_LINE (1022))) & ((! (var_cas_usefulClassSet.reader_hasKey (_inLexique, operand_39043->mReferenceEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1022)) SOURCE_FILE_AT_LINE (1022))))))).isBuiltAndTrue ()) {
                    var_cas_continue = GGS_bool (true, true) ;
                    var_cas_usefulClassSet._addAssign_operation (operand_39043->mReferenceEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1024))) ;
                  }
                }else{
                  cPtr_metamodelMultipleReferenceProperty * operand_39381 = dynamic_cast <cPtr_metamodelMultipleReferenceProperty *> (operand_38964->mInfo.mProperty.getPtr ()) ;
                  if (operand_39381 != NULL) {
                    macroValidPointer (operand_39381) ; 
                    if ((((var_cas_overriddenClassSet.reader_hasKey (_inLexique, operand_39381->mReferenceEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1027)) SOURCE_FILE_AT_LINE (1027))) & ((! (var_cas_usefulClassSet.reader_hasKey (_inLexique, operand_39381->mReferenceEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1027)) SOURCE_FILE_AT_LINE (1027))))))).isBuiltAndTrue ()) {
                      var_cas_continue = GGS_bool (true, true) ;
                      var_cas_usefulClassSet._addAssign_operation (operand_39381->mReferenceEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (1029))) ;
                    }
                  }else{ // Else part
                  }
                }
              }
              operand_38964 = operand_38964->nextObject () ;
            }
          }
          operand_38008 = operand_38008->nextObject () ;
        }
      }
    }
  }
  GGS_stringset  var_cas_missingClasses ;
  var_cas_missingClasses = var_cas_usefulClassSet._substract_operation (_inLexique, var_cas_overriddenClassSet SOURCE_FILE_AT_LINE (1039)) ;
  GGS_stringset::element_type * operand_39966 = var_cas_missingClasses.firstObject () ;
  while ((operand_39966 != NULL)) {
    macroValidPointer (operand_39966) ;
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '%")) + (operand_39966->mKey))) + (GGS_string (true, "' class should be overriden"))) SOURCE_FILE_AT_LINE (1042)) ;
    operand_39966 = operand_39966->nextObject () ;
  }
  GGS_stringset  var_cas_uselessClasses ;
  var_cas_uselessClasses = var_cas_overriddenClassSet._substract_operation (_inLexique, var_cas_usefulClassSet SOURCE_FILE_AT_LINE (1044)) ;
  GGS_stringset::element_type * operand_40215 = var_cas_uselessClasses.firstObject () ;
  while ((operand_40215 != NULL)) {
    macroValidPointer (operand_40215) ;
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "it is useless to override '%")) + (operand_40215->mKey))) + (GGS_string (true, "' class"))) SOURCE_FILE_AT_LINE (1047)) ;
    operand_40215 = operand_40215->nextObject () ;
  }
  var_cas_outMetamodelEntityMap = GGS_entityToImplementMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_entityToImplementMap::element_type * operand_40510 = var_cas_inOriginalMetamodelEntityMap.firstObject () ;
  while ((operand_40510 != NULL)) {
    macroValidPointer (operand_40510) ;
    if ((var_cas_usefulClassSet.reader_hasKey (_inLexique, operand_40510->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (1061)) SOURCE_FILE_AT_LINE (1061))).isBuiltAndTrue ()) {
      GGS_entityPropertyMap  var_cas_allMetamodelPropertyMap ;
      ::routine_buildUsefullPropertyMap (_inLexique,  operand_40510->mInfo.mAllMetamodelPropertyMap,  var_cas_usefulClassSet,  var_cas_allMetamodelPropertyMap SOURCE_FILE_AT_LINE (1063)) ;
      GGS_entityPropertyMap  var_cas_currentMetamodelPropertyMap ;
      ::routine_buildUsefullPropertyMap (_inLexique,  operand_40510->mInfo.mCurrentMetamodelPropertyMap,  var_cas_usefulClassSet,  var_cas_currentMetamodelPropertyMap SOURCE_FILE_AT_LINE (1065)) ;
      GGS_entityPropertyMap  var_cas_currentConstraintPropertyMap ;
      ::routine_buildUsefullPropertyMap (_inLexique,  operand_40510->mInfo.mCurrentConstraintPropertyMap,  var_cas_usefulClassSet,  var_cas_currentConstraintPropertyMap SOURCE_FILE_AT_LINE (1067)) ;
      GGS_entityPropertyMap  var_cas_allConstraintPropertyMap ;
      ::routine_buildUsefullPropertyMap (_inLexique,  operand_40510->mInfo.mAllConstraintPropertyMap,  var_cas_usefulClassSet,  var_cas_allConstraintPropertyMap SOURCE_FILE_AT_LINE (1069)) ;
      GGS_entityPropertyMap  var_cas_allAvailablePropertyMap ;
      ::routine_buildUsefullPropertyMap (_inLexique,  operand_40510->mInfo.mAllAvailablePropertyMap,  var_cas_usefulClassSet,  var_cas_allAvailablePropertyMap SOURCE_FILE_AT_LINE (1071)) ;
      var_cas_outMetamodelEntityMap.method_insertKey (_inLexique, operand_40510->mKey, var_cas_allMetamodelPropertyMap, operand_40510->mInfo.mIsAbstract, var_cas_currentMetamodelPropertyMap, operand_40510->mInfo.mSuperEntityName, var_cas_currentConstraintPropertyMap, operand_40510->mInfo.mSuperEntitySet, var_cas_allConstraintPropertyMap, var_cas_allAvailablePropertyMap SOURCE_FILE_AT_LINE (1073)) ;
    }
    operand_40510 = operand_40510->nextObject () ;
  }
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraint_class_override_declarations_constraint_parser_964_46_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_override) ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      switch (select_repeat_constraint_parser_13 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

