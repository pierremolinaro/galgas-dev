//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'constraint_parser.cpp'                        *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                     october 17th, 2006, at 19h47'3"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "constraint_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const char gGGSsourceFile [] = "constraint_parser.ggs" ;
  #define SOURCE_FILE_AT_LINE(line) , gGGSsourceFile, line
#else
  #define SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_galgas_component_constraint_parser_129_24_ (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  nt_parse_constraint_document_ (_inLexique, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_galgas_component_constraint_parser_129_24_importLexique (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  nt_parse_constraint_document_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_galgas_component_constraint_parser_129_24_importSyntax (galgas_scanner & _inLexique,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  GGS_M_constraintComponents  var_cas_constraintComponentMap ;
  var_cas_constraintComponentMap = GGS_M_constraintComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  nt_parse_constraint_document_ (_inLexique, var_cas_ioMetamodelComponentMap, var_cas_constraintComponentMap) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_galgas_component_constraint_parser_129_24_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  nt_parse_constraint_document_ (_inLexique, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_galgas_component_constraint_parser_129_24_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  nt_parse_constraint_document_ (_inLexique, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_galgas_component_constraint_parser_129_24_importOptions (galgas_scanner & _inLexique,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  nt_parse_constraint_document_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'parse_constraint_document'        *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_parse_constraint_document_constraint_parser_181_33_ (galgas_scanner & _inLexique,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_constraint) ;
  GGS_lstring  var_cas_constraintName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_constraintName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  GGS_lstring  var_cas_metamodelName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_metamodelName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
  GGS_lstring  var_cas_fileName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  var_cas_fileName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  GGS_M_semanticsComponents  var_cas_unusedSemanticsMapForUse ;
  var_cas_unusedSemanticsMapForUse = GGS_M_semanticsComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_metamodelsComponents  var_cas_metamodelComponentMap ;
  var_cas_metamodelComponentMap = GGS_M_metamodelsComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_fileName, var_cas_unusedSemanticsMapForUse, var_cas_metamodelComponentMap, var_cas_ioConstraintComponentMap) ;
  GGS_lstring  var_cas_rootEntity ;
  GGS_M_semanticsEntitiesForUse  var_cas_semanticsEntitiesMap ;
  GGS_entityToImplementMap  var_cas_metamodelEntityMap ;
  GGS_stringset  var_cas_7381 ;
  if (var_cas_metamodelComponentMap._isBuilt ()) {
    var_cas_metamodelComponentMap (HERE)->method_searchKey (_inLexique, var_cas_metamodelName, var_cas_rootEntity, var_cas_semanticsEntitiesMap, var_cas_metamodelEntityMap, var_cas_7381 SOURCE_FILE_AT_LINE (212)) ;
  }
  GGS_mapEntityMap  var_cas_mapEntityMap ;
  var_cas_mapEntityMap = GGS_mapEntityMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_mapAndEntityUniqueMap  var_cas_mapAndEntityUniqueMap ;
  var_cas_mapAndEntityUniqueMap = GGS_mapAndEntityUniqueMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_entityToImplementMap  var_cas_constrainedEntityMap ;
  var_cas_constrainedEntityMap = GGS_entityToImplementMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_constraintInstructionListMap  var_cas_constraintInstructionListMap ;
  var_cas_constraintInstructionListMap = GGS_constraintInstructionListMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_0 (_inLexique)) {
        case 2 : {
          nt_constraint_map_declaration_ (_inLexique, var_cas_metamodelEntityMap, var_cas_mapEntityMap) ;
          } break ;
        case 3 : {
          nt_constraints_on_entity_declaration_ (_inLexique, var_cas_metamodelEntityMap, var_cas_mapEntityMap, var_cas_constrainedEntityMap, var_cas_constraintInstructionListMap) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  if (((! (var_cas_constrainedEntityMap.reader_hasKey (_inLexique, var_cas_rootEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (320)) SOURCE_FILE_AT_LINE (320))))).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the @")) + (var_cas_rootEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (321))))) + (GGS_string (true, " root entity should be defined"))) SOURCE_FILE_AT_LINE (322)) ;
  }
  GGS_representativeEntityMap  var_cas_representativeEntityMap ;
  var_cas_representativeEntityMap = GGS_representativeEntityMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_entityToImplementMap::element_type * operand_13155 = var_cas_metamodelEntityMap.firstObject () ;
  while ((operand_13155 != NULL)) {
    macroValidPointer (operand_13155) ;
    GGS_lstring  var_cas_representativeTypeName ;
    ::routine_computeRepresentativeEntityName (_inLexique,  var_cas_metamodelEntityMap,  var_cas_constrainedEntityMap,  operand_13155->mKey,  var_cas_representativeTypeName SOURCE_FILE_AT_LINE (328)) ;
    var_cas_representativeEntityMap.method_insertKey (_inLexique, operand_13155->mKey, var_cas_representativeTypeName, operand_13155->mInfo.mSuperClassSet SOURCE_FILE_AT_LINE (333)) ;
    operand_13155 = operand_13155->nextObject () ;
  }
  GGS_bool var_cas_performLoop ;
  var_cas_performLoop = GGS_bool (true, true) ;
  GGS_uint _variant_15118 = var_cas_metamodelEntityMap.reader_count (_inLexique SOURCE_FILE_AT_LINE (337))._add_operation (_inLexique, GGS_uint (true, 1U) SOURCE_FILE_AT_LINE (337)) ;
  GGS_bool _condition_15118 (_variant_15118._isBuilt (), true) ;
  while (_condition_15118.isBuiltAndTrue ()) {
    if (_variant_15118.uintValue () == 0) {
      _inLexique.onTheFlyRunTimeError ("loop variant error" SOURCE_FILE_AT_LINE (384)) ;
      _condition_15118 = GGS_bool (true, false) ;
    }else{
      _variant_15118._decrement_operation (_inLexique COMMA_HERE) ;
      _condition_15118 = var_cas_performLoop  ;
      if (_condition_15118.isBuiltAndTrue ()) {
        var_cas_performLoop = GGS_bool (true, false) ;
        GGS_entityToImplementMap  var_cas_temporaryEntityMap ;
        var_cas_temporaryEntityMap = var_cas_constrainedEntityMap ;
        GGS_entityToImplementMap::element_type * operand_13811 = var_cas_temporaryEntityMap.firstObject () ;
        while ((operand_13811 != NULL)) {
          macroValidPointer (operand_13811) ;
          if (((((operand_13811->mInfo.mSuperEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (352))) != (GGS_string (true, ""))) & ((! (var_cas_constrainedEntityMap.reader_hasKey (_inLexique, operand_13811->mInfo.mSuperEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (352)) SOURCE_FILE_AT_LINE (352))))))).isBuiltAndTrue ()) {
            var_cas_performLoop = GGS_bool (true, true) ;
            GGS_entityPropertyMap  var_cas_allPropertiesMap ;
            GGS_bool var_cas_isAbstract ;
            GGS_entityPropertyMap  var_cas_entityPropertiesMap ;
            GGS_lstring  var_cas_superEntityName ;
            GGS_stringset  var_cas_superClassSet ;
            GGS_constrainedPropertyList  var_cas_constrainedParameterPropertyToImplementList ;
            GGS_bool var_cas_14646 ;
            GGS_constrainedPropertyList  var_cas_14659 ;
            if (var_cas_metamodelEntityMap._isBuilt ()) {
              var_cas_metamodelEntityMap (HERE)->method_searchKey (_inLexique, operand_13811->mInfo.mSuperEntityName, var_cas_allPropertiesMap, var_cas_isAbstract, var_cas_entityPropertiesMap, var_cas_superEntityName, var_cas_superClassSet, var_cas_14646, var_cas_14659, var_cas_constrainedParameterPropertyToImplementList SOURCE_FILE_AT_LINE (361)) ;
            }
            var_cas_constrainedEntityMap.method_insertKey (_inLexique, operand_13811->mInfo.mSuperEntityName, var_cas_allPropertiesMap, var_cas_isAbstract, var_cas_entityPropertiesMap, var_cas_superEntityName, var_cas_superClassSet, GGS_bool (true, true), GGS_constrainedPropertyList::constructor_emptyList (_inLexique COMMA_HERE), operand_13811->mInfo.mConstrainedParameterPropertyToImplementList SOURCE_FILE_AT_LINE (372)) ;
          }
          operand_13811 = operand_13811->nextObject () ;
        }
      }
    }
  }
  GGS_entityToImplementMap  var_cas_actualConstrainedEntityMap ;
  var_cas_actualConstrainedEntityMap = GGS_entityToImplementMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_multiReferencedEntities ;
  var_cas_multiReferencedEntities = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_entityToImplementMap::element_type * operand_15316 = var_cas_constrainedEntityMap.firstObject () ;
  while ((operand_15316 != NULL)) {
    macroValidPointer (operand_15316) ;
    if (((operand_15316->mInfo.mSuperEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (400))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
      GGS_bool var_cas_superEntityIsImplicitlyDefined ;
      GGS_constrainedPropertyList  var_cas_superEntityConstrainedParameterPropertyToImplementList ;
      GGS_entityPropertyMap  var_cas_16038 ;
      GGS_bool var_cas_16049 ;
      GGS_entityPropertyMap  var_cas_16060 ;
      GGS_lstring  var_cas_16071 ;
      GGS_stringset  var_cas_16082 ;
      GGS_constrainedPropertyList  var_cas_16133 ;
      if (var_cas_constrainedEntityMap._isBuilt ()) {
        var_cas_constrainedEntityMap (HERE)->method_searchKey (_inLexique, operand_15316->mInfo.mSuperEntityName, var_cas_16038, var_cas_16049, var_cas_16060, var_cas_16071, var_cas_16082, var_cas_superEntityIsImplicitlyDefined, var_cas_16133, var_cas_superEntityConstrainedParameterPropertyToImplementList SOURCE_FILE_AT_LINE (404)) ;
      }
      GGS_bool var_cas_identical ;
      var_cas_identical = (operand_15316->mInfo.mConstrainedParameterPropertyToImplementList.reader_length (_inLexique SOURCE_FILE_AT_LINE (414))) == (var_cas_superEntityConstrainedParameterPropertyToImplementList.reader_length (_inLexique SOURCE_FILE_AT_LINE (414))) ;
      GGS_constrainedPropertyList::element_type * operand_16414 = operand_15316->mInfo.mConstrainedParameterPropertyToImplementList.firstObject () ;
      GGS_constrainedPropertyList::element_type * operand_16538 = var_cas_superEntityConstrainedParameterPropertyToImplementList.firstObject () ;
      while ((operand_16414 != NULL)
          && (operand_16538 != NULL)
          && (var_cas_identical.isBuiltAndTrue ())) {
        macroValidPointer (operand_16414) ;
        macroValidPointer (operand_16538) ;
        var_cas_identical = (((operand_16414->mPropertyTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (418))) == (operand_16538->mPropertyTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (418)))) & ((operand_16414->mPropertyName.reader_string (_inLexique SOURCE_FILE_AT_LINE (418))) == (operand_16538->mPropertyName.reader_string (_inLexique SOURCE_FILE_AT_LINE (418))))) ;
        operand_16414 = operand_16414->nextObject () ;
        operand_16538 = operand_16538->nextObject () ;
      }
      if (((! (var_cas_identical))).isBuiltAndTrue ()) {
        GGS_string var_cas_m ;
        var_cas_m = ((((GGS_string (true, "parameter error: the '@")) + (operand_15316->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (421))))) + (GGS_string (true, "' entity"))) ;
        if ((operand_15316->mInfo.mIsImplicitlyDefined).isBuiltAndTrue ()) {
          var_cas_m = ((var_cas_m) + (GGS_string (true, " (implicitly defined)"))) ;
        }
        var_cas_m = ((((((var_cas_m) + (GGS_string (true, " should have the same parameters as '@")))) + (operand_15316->mInfo.mSuperEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (425))))) + (GGS_string (true, "' entity"))) ;
        if ((var_cas_superEntityIsImplicitlyDefined).isBuiltAndTrue ()) {
          var_cas_m = ((var_cas_m) + (GGS_string (true, " (implicitly defined)"))) ;
        }
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, var_cas_m SOURCE_FILE_AT_LINE (430)) ;
      }
    }
    GGS_entityPropertyMap  var_cas_newAllPropertiesMap ;
    var_cas_newAllPropertiesMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_entityPropertyMap::element_type * operand_17334 = operand_15316->mInfo.mAllPropertiesMap.firstObject () ;
    while ((operand_17334 != NULL)) {
      macroValidPointer (operand_17334) ;
      switch (operand_17334->mInfo.mKind.enumValue ()) {
      case GGS_metamodelPropertyKind::enum_attributeProperty:
        {
        var_cas_newAllPropertiesMap.method_insertKey (_inLexique, operand_17334->mKey, operand_17334->mInfo.mKind, operand_17334->mInfo.mTypeName SOURCE_FILE_AT_LINE (437)) ;
        }
        break ;
      case GGS_metamodelPropertyKind::enum_multipleReferenceProperty:
      case GGS_metamodelPropertyKind::enum_singleReferenceProperty:
        {
        GGS_lstring  var_cas_representativeTypeName ;
        ::routine_computeRepresentativeEntityName (_inLexique,  var_cas_metamodelEntityMap,  var_cas_constrainedEntityMap,  operand_17334->mInfo.mTypeName,  var_cas_representativeTypeName SOURCE_FILE_AT_LINE (441)) ;
        if (((var_cas_representativeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (446))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
          var_cas_newAllPropertiesMap.method_insertKey (_inLexique, operand_17334->mKey, operand_17334->mInfo.mKind, var_cas_representativeTypeName SOURCE_FILE_AT_LINE (447)) ;
          var_cas_multiReferencedEntities._addAssign_operation (var_cas_representativeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (448))) ;
        }
        }
        break ;
      case GGS_metamodelPropertyKind::kNotBuilt:
        break ;
      }
      operand_17334 = operand_17334->nextObject () ;
    }
    GGS_entityPropertyMap  var_cas_newPropertiesMap ;
    var_cas_newPropertiesMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
    GGS_entityPropertyMap::element_type * operand_18147 = operand_15316->mInfo.mEntityPropertiesMap.firstObject () ;
    while ((operand_18147 != NULL)) {
      macroValidPointer (operand_18147) ;
      switch (operand_18147->mInfo.mKind.enumValue ()) {
      case GGS_metamodelPropertyKind::enum_attributeProperty:
        {
        var_cas_newPropertiesMap.method_insertKey (_inLexique, operand_18147->mKey, operand_18147->mInfo.mKind, operand_18147->mInfo.mTypeName SOURCE_FILE_AT_LINE (456)) ;
        }
        break ;
      case GGS_metamodelPropertyKind::enum_multipleReferenceProperty:
      case GGS_metamodelPropertyKind::enum_singleReferenceProperty:
        {
        GGS_lstring  var_cas_representativeTypeName ;
        ::routine_computeRepresentativeEntityName (_inLexique,  var_cas_metamodelEntityMap,  var_cas_constrainedEntityMap,  operand_18147->mInfo.mTypeName,  var_cas_representativeTypeName SOURCE_FILE_AT_LINE (460)) ;
        if (((var_cas_representativeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (465))) != (GGS_string (true, ""))).isBuiltAndTrue ()) {
          var_cas_newPropertiesMap.method_insertKey (_inLexique, operand_18147->mKey, operand_18147->mInfo.mKind, var_cas_representativeTypeName SOURCE_FILE_AT_LINE (466)) ;
          var_cas_multiReferencedEntities._addAssign_operation (var_cas_representativeTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (467))) ;
        }
        }
        break ;
      case GGS_metamodelPropertyKind::kNotBuilt:
        break ;
      }
      operand_18147 = operand_18147->nextObject () ;
    }
    var_cas_actualConstrainedEntityMap.method_insertKey (_inLexique, operand_15316->mKey, var_cas_newAllPropertiesMap, operand_15316->mInfo.mIsAbstract, var_cas_newPropertiesMap, operand_15316->mInfo.mSuperEntityName, operand_15316->mInfo.mSuperClassSet, operand_15316->mInfo.mIsImplicitlyDefined, operand_15316->mInfo.mConstrainedAttributePropertyToImplementList, operand_15316->mInfo.mConstrainedParameterPropertyToImplementList SOURCE_FILE_AT_LINE (472)) ;
    operand_15316 = operand_15316->nextObject () ;
  }
  _inLexique.printMessage (((((GGS_string (true, "constraintInstructionListMap : ")) + (var_cas_constraintInstructionListMap.reader_description (_inLexique SOURCE_FILE_AT_LINE (484))))) + (GGS_string (true, "\n"))) SOURCE_FILE_AT_LINE (484)) ;
  GGS_entityToImplementMap::element_type * operand_19365 = var_cas_actualConstrainedEntityMap.firstObject () ;
  while ((operand_19365 != NULL)) {
    macroValidPointer (operand_19365) ;
    GGS_entityPropertyMap::element_type * operand_19635 = operand_19365->mInfo.mEntityPropertiesMap.firstObject () ;
    while ((operand_19635 != NULL)) {
      macroValidPointer (operand_19635) ;
      GGS_callInstructionSharedPropertySignatureMap  var_cas_callInstructionSharedPropertySignatureMap ;
      var_cas_callInstructionSharedPropertySignatureMap = GGS_callInstructionSharedPropertySignatureMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      if ((var_cas_constraintInstructionListMap.reader_hasKey (_inLexique, operand_19365->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (499)) SOURCE_FILE_AT_LINE (499))).isBuiltAndTrue ()) {
        GGS_typeInstructionList  var_cas_19958 ;
        if (var_cas_constraintInstructionListMap._isBuilt ()) {
          var_cas_constraintInstructionListMap (HERE)->method_searchKey (_inLexique, operand_19365->mKey, var_cas_19958, var_cas_callInstructionSharedPropertySignatureMap SOURCE_FILE_AT_LINE (500)) ;
        }
      }
      switch (operand_19635->mInfo.mKind.enumValue ()) {
      case GGS_metamodelPropertyKind::enum_attributeProperty:
        {
        if ((var_cas_callInstructionSharedPropertySignatureMap.reader_hasKey (_inLexique, operand_19635->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (504)) SOURCE_FILE_AT_LINE (504))).isBuiltAndTrue ()) {
          GGS_location  var_cas_instructionLocation ;
          GGS_L_lstringList  var_cas_20282 ;
          if (var_cas_callInstructionSharedPropertySignatureMap._isBuilt ()) {
            var_cas_callInstructionSharedPropertySignatureMap (HERE)->method_searchKey (_inLexique, operand_19635->mKey, var_cas_20282, var_cas_instructionLocation SOURCE_FILE_AT_LINE (506)) ;
          }
          var_cas_instructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "an attribute cannot be named here in a call instruction") SOURCE_FILE_AT_LINE (508)) ;
        }
        }
        break ;
      case GGS_metamodelPropertyKind::enum_multipleReferenceProperty:
      case GGS_metamodelPropertyKind::enum_singleReferenceProperty:
        {
        if ((var_cas_actualConstrainedEntityMap.reader_hasKey (_inLexique, operand_19635->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (510)) SOURCE_FILE_AT_LINE (510))).isBuiltAndTrue ()) {
          if ((var_cas_callInstructionSharedPropertySignatureMap.reader_hasKey (_inLexique, operand_19635->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (511)) SOURCE_FILE_AT_LINE (511))).isBuiltAndTrue ()) {
            operand_19365->mKey.reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, ((((GGS_string (true, "checking 'call ")) + (operand_19635->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (512))))) + (GGS_string (true, "' instruction..."))) SOURCE_FILE_AT_LINE (512)) ;
          }else{
            operand_19365->mKey.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the instruction list should have a 'call ")) + (operand_19635->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (514))))) + (GGS_string (true, "' instruction"))) SOURCE_FILE_AT_LINE (515)) ;
          }
        }else if ((var_cas_callInstructionSharedPropertySignatureMap.reader_hasKey (_inLexique, operand_19635->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (516)) SOURCE_FILE_AT_LINE (516))).isBuiltAndTrue ()) {
          operand_19365->mKey.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the instruction list should not have a 'call ")) + (operand_19635->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (517))))) + (GGS_string (true, "' instruction"))) SOURCE_FILE_AT_LINE (518)) ;
        }
        }
        break ;
      case GGS_metamodelPropertyKind::kNotBuilt:
        break ;
      }
      operand_19635 = operand_19635->nextObject () ;
    }
    operand_19365 = operand_19365->nextObject () ;
  }
  GGS_constraintInstructionListMap::element_type * operand_21223 = var_cas_constraintInstructionListMap.firstObject () ;
  while ((operand_21223 != NULL)) {
    macroValidPointer (operand_21223) ;
    _inLexique.printMessage (((((GGS_string (true, "kEntityName: ")) + (operand_21223->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (527))))) + (GGS_string (true, "\n"))) SOURCE_FILE_AT_LINE (527)) ;
    _inLexique.printMessage (((((GGS_string (true, "kCallInstructionSharedPropertySignatureMap: ")) + (operand_21223->mInfo.mCallInstructionSharedPropertySignatureMap.reader_description (_inLexique SOURCE_FILE_AT_LINE (528))))) + (GGS_string (true, "\n"))) SOURCE_FILE_AT_LINE (528)) ;
    operand_21223 = operand_21223->nextObject () ;
  }
  if (var_cas_metamodelEntityMap._isBuilt () &&
      var_cas_mapEntityMap._isBuilt () &&
      var_cas_metamodelName._isBuilt () &&
      var_cas_constraintName._isBuilt () &&
      var_cas_actualConstrainedEntityMap._isBuilt () &&
      var_cas_multiReferencedEntities._isBuilt () &&
      var_cas_rootEntity._isBuilt () &&
      var_cas_representativeEntityMap._isBuilt () &&
      var_cas_constraintInstructionListMap._isBuilt ()) {
    ::routine_generate_constraints (_inLexique,  var_cas_metamodelEntityMap,  var_cas_mapEntityMap,  var_cas_metamodelName,  var_cas_constraintName,  var_cas_actualConstrainedEntityMap,  var_cas_multiReferencedEntities,  var_cas_rootEntity,  var_cas_representativeEntityMap,  var_cas_constraintInstructionListMap SOURCE_FILE_AT_LINE (532)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_constraint) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_parse_constraint_document_constraint_parser_181_33_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_constraint) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  nt_parse_semantics_component_for_importing_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_0 (_inLexique)) {
        case 2 : {
          nt_constraint_map_declaration_parse (_inLexique) ;
          } break ;
        case 3 : {
          nt_constraints_on_entity_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_constraint) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'constraint_map_declaration'       *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraint_map_declaration_constraint_parser_548_34_ (galgas_scanner & _inLexique,
                                GGS_entityToImplementMap  var_cas_inMetamodelEntityMap,
                                GGS_mapEntityMap  &var_cas_ioMapEntityMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
  GGS_lstring  var_cas_mapIdentifier ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_mapIdentifier.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  if ((var_cas_inMetamodelEntityMap.reader_hasKey (_inLexique, var_cas_mapIdentifier.reader_string (_inLexique SOURCE_FILE_AT_LINE (555)) SOURCE_FILE_AT_LINE (555))).isBuiltAndTrue ()) {
    var_cas_mapIdentifier.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "An entity has been declared with this name") SOURCE_FILE_AT_LINE (557)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_of) ;
  GGS_lstring  var_cas_mapElementIdentifier ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_mapElementIdentifier.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  GGS_lstring  var_cas_insertErrorMessage ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  var_cas_insertErrorMessage.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  if (var_cas_insertErrorMessage._isBuilt ()) {
    ::routine_check_KL_escapeCharacters (_inLexique,  var_cas_insertErrorMessage SOURCE_FILE_AT_LINE (567)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  GGS_lstring  var_cas_searchErrorMessage ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  var_cas_searchErrorMessage.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  if (var_cas_searchErrorMessage._isBuilt ()) {
    ::routine_check_K_escapeCharacters (_inLexique,  var_cas_searchErrorMessage SOURCE_FILE_AT_LINE (574)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
  var_cas_ioMapEntityMap.method_insertKey (_inLexique, var_cas_mapIdentifier, var_cas_mapElementIdentifier, var_cas_insertErrorMessage, var_cas_searchErrorMessage SOURCE_FILE_AT_LINE (578)) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraint_map_declaration_constraint_parser_548_34_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_of) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of production rule 'constraints_on_entity_declaration'    *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraints_on_entity_declaration_constraint_parser_587_41_ (galgas_scanner & _inLexique,
                                GGS_entityToImplementMap  var_cas_inEntityMap,
                                GGS_mapEntityMap  &var_cas_ioMapEntityMap,
                                GGS_entityToImplementMap  &var_cas_ioConstrainedEntityMap,
                                GGS_constraintInstructionListMap  &var_cas_ioConstraintInstructionListMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_on) ;
  GGS_lstring  var_cas_entityName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_entityName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_lstring  var_cas_superEntity ;
  GGS_bool var_cas_isAbstract ;
  GGS_entityPropertyMap  var_cas_allPropertyMap ;
  GGS_stringset  var_cas_superClassSet ;
  GGS_entityPropertyMap  var_cas_propertyMap ;
  var_cas_propertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_bool var_cas_23572 ;
  GGS_constrainedPropertyList  var_cas_23579 ;
  GGS_constrainedPropertyList  var_cas_23586 ;
  if (var_cas_inEntityMap._isBuilt ()) {
    var_cas_inEntityMap (HERE)->method_searchKey (_inLexique, var_cas_entityName, var_cas_allPropertyMap, var_cas_isAbstract, var_cas_propertyMap, var_cas_superEntity, var_cas_superClassSet, var_cas_23572, var_cas_23579, var_cas_23586 SOURCE_FILE_AT_LINE (604)) ;
  }
  GGS_constrainedPropertyList  var_cas_constrainedParameterPropertyToImplementList ;
  var_cas_constrainedParameterPropertyToImplementList = GGS_constrainedPropertyList::constructor_emptyList (_inLexique COMMA_HERE) ;
  switch (select_constraint_parser_1 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_typeName ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
            var_cas_typeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            GGS_lstring  var_cas_propertyName ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_propertyName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            if ((var_cas_ioMapEntityMap.reader_hasKey (_inLexique, var_cas_typeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (666)) SOURCE_FILE_AT_LINE (666))).isBuiltAndTrue ()) {
              var_cas_constrainedParameterPropertyToImplementList._addAssign_operation (var_cas_typeName, var_cas_propertyName) ;
            }else{
              var_cas_typeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "unhandled type name") SOURCE_FILE_AT_LINE (674)) ;
            }
          switch (select_repeat_constraint_parser_2 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    default :
      break ;
  }
  GGS_constrainedPropertyList  var_cas_constrainedAttributePropertyToImplementList ;
  var_cas_constrainedAttributePropertyToImplementList = GGS_constrainedPropertyList::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_3 (_inLexique)) {
        case 2 : {
          GGS_lstring  var_cas_typeName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          var_cas_typeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          GGS_lstring  var_cas_propertyName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_propertyName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          var_cas_constrainedAttributePropertyToImplementList._addAssign_operation (var_cas_typeName, var_cas_propertyName) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_mapindex) ;
          GGS_lstring  var_cas_propertyName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_propertyName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_on) ;
          GGS_lstring  var_cas_mapPropertyName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_mapPropertyName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  GGS_typeVariablesMap  var_cas_variablesMap ;
  var_cas_variablesMap = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_entityPropertyMap::element_type * operand_27928 = var_cas_allPropertyMap.firstObject () ;
  while ((operand_27928 != NULL)) {
    macroValidPointer (operand_27928) ;
    switch (operand_27928->mInfo.mKind.enumValue ()) {
    case GGS_metamodelPropertyKind::enum_attributeProperty:
      {
      GGS_typeCplusPlusName  var_cas_cppName ;
      var_cas_cppName = GGS_typeDirectName::constructor_new (_inLexique, GGS_lstring::constructor_new (_inLexique, ((GGS_string (true, "_mMetamodelObject->")) + (operand_27928->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (721)))), operand_27928->mKey.reader_location (_inLexique SOURCE_FILE_AT_LINE (721)) COMMA_HERE) COMMA_HERE) ;
      if (((operand_27928->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (722))) == (GGS_string (true, "lstring"))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE) ;
        var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_27928->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (724)) ;
      }else if (((operand_27928->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (725))) == (GGS_string (true, "string"))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgas_string::constructor_new (_inLexique COMMA_HERE) ;
        var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_27928->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (727)) ;
      }else if (((operand_27928->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (728))) == (GGS_string (true, "lchar"))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgas_lchar::constructor_new (_inLexique COMMA_HERE) ;
        var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_27928->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (730)) ;
      }else if (((operand_27928->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (731))) == (GGS_string (true, "char"))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgas_char::constructor_new (_inLexique COMMA_HERE) ;
        var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_27928->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (733)) ;
      }else if (((operand_27928->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (734))) == (GGS_string (true, "luint"))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgas_luint::constructor_new (_inLexique COMMA_HERE) ;
        var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_27928->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (736)) ;
      }else if (((operand_27928->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (737))) == (GGS_string (true, "uint"))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgas_uint::constructor_new (_inLexique COMMA_HERE) ;
        var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_27928->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (739)) ;
      }else if (((operand_27928->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (740))) == (GGS_string (true, "lsint"))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgas_lsint::constructor_new (_inLexique COMMA_HERE) ;
        var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_27928->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (742)) ;
      }else if (((operand_27928->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (743))) == (GGS_string (true, "sint"))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgas_sint::constructor_new (_inLexique COMMA_HERE) ;
        var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_27928->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (745)) ;
      }else if (((operand_27928->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (746))) == (GGS_string (true, "lbool"))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgas_lbool::constructor_new (_inLexique COMMA_HERE) ;
        var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_27928->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (748)) ;
      }else if (((operand_27928->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (749))) == (GGS_string (true, "bool"))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgas_bool::constructor_new (_inLexique COMMA_HERE) ;
        var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_27928->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (751)) ;
      }else if (((operand_27928->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (752))) == (GGS_string (true, "location"))).isBuiltAndTrue ()) {
        GGS_AC_galgasType  var_cas_t ;
        var_cas_t = GGS_typeGalgas_location::constructor_new (_inLexique COMMA_HERE) ;
        var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, operand_27928->mKey, var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (754)) ;
      }else{
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "internal error (@")) + (operand_27928->mInfo.mTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (756))))) + (GGS_string (true, " type not handled"))) SOURCE_FILE_AT_LINE (757)) ;
      }
      }
      break ;
    case GGS_metamodelPropertyKind::enum_multipleReferenceProperty:
    case GGS_metamodelPropertyKind::enum_singleReferenceProperty:
      {
      }
      break ;
    case GGS_metamodelPropertyKind::kNotBuilt:
      break ;
    }
    operand_27928 = operand_27928->nextObject () ;
  }
  GGS_typeCplusPlusName  var_cas_cppName ;
  var_cas_cppName = GGS_typeDirectName::constructor_new (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "_mMetamodelObject"), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
  GGS_AC_galgasType  var_cas_t ;
  var_cas_t = GGS_typeGalgas_entityInInstruction::constructor_new (_inLexique, var_cas_entityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (785)) COMMA_HERE) ;
  var_cas_variablesMap.method_insertUsedConstInArgument (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "self"), GGS_location (_inLexique) COMMA_HERE), var_cas_t, var_cas_cppName SOURCE_FILE_AT_LINE (786)) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentSemanticsEntitiesMap ;
  var_cas_componentSemanticsEntitiesMap = GGS_M_semanticsEntitiesForUse::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
  var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
  var_cas_optionsComponentsMapForUse = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeInstructionList  var_cas_instructionsList ;
  var_cas_instructionsList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_constraintPropertyDefinitionSet ;
  var_cas_constraintPropertyDefinitionSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_callInstructionSharedPropertySignatureMap  var_cas_callInstructionSharedPropertySignatureMap ;
  var_cas_callInstructionSharedPropertySignatureMap = GGS_callInstructionSharedPropertySignatureMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  nt_semantic_instructions_list_ (_inLexique, var_cas_componentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer, var_cas_optionsComponentsMapForUse, var_cas_variablesMap, var_cas_instructionsList, var_cas_propertyMap, var_cas_constraintPropertyDefinitionSet, var_cas_callInstructionSharedPropertySignatureMap) ;
  var_cas_ioConstraintInstructionListMap.method_insertKey (_inLexique, var_cas_entityName, var_cas_instructionsList, var_cas_callInstructionSharedPropertySignatureMap SOURCE_FILE_AT_LINE (805)) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
  var_cas_ioConstrainedEntityMap.method_insertKey (_inLexique, var_cas_entityName, var_cas_allPropertyMap, var_cas_isAbstract, var_cas_propertyMap, var_cas_superEntity, var_cas_superClassSet, GGS_bool (true, false), var_cas_constrainedAttributePropertyToImplementList, var_cas_constrainedParameterPropertyToImplementList SOURCE_FILE_AT_LINE (836)) ;
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraints_on_entity_declaration_constraint_parser_587_41_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_on) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  switch (select_constraint_parser_1 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          switch (select_repeat_constraint_parser_2 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_3 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_mapindex) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_on) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  nt_semantic_instructions_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of production rule 'property_path_for_constraint'      *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_property_path_for_constraint_constraint_parser_850_36_ (galgas_scanner & _inLexique,
                                GGS_L_propertyPath  &var_cas_outPath) {
  var_cas_outPath = GGS_L_propertyPath::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        switch (select_constraint_parser_5 (_inLexique)) {
          case 1 : {
            GGS_lstring  var_cas_pathElement ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_pathElement.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            var_cas_outPath._addAssign_operation (var_cas_pathElement) ;
            } break ;
          case 2 : {
            GGS_lstring  var_cas_pathElement ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
            var_cas_pathElement.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            var_cas_outPath._addAssign_operation (GGS_lstring::constructor_new (_inLexique, ((GGS_string (true, ".")) + (var_cas_pathElement.reader_string (_inLexique SOURCE_FILE_AT_LINE (862)))), var_cas_pathElement.reader_location (_inLexique SOURCE_FILE_AT_LINE (862)) COMMA_HERE)) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_constraint_parser_4 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2E) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_property_path_for_constraint_constraint_parser_850_36_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        switch (select_constraint_parser_5 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_constraint_parser_4 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2E) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Implementation of production rule 'constraint_relation_expression'     *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraint_relation_expression_constraint_parser_871_38_ (galgas_scanner & _inLexique,
                                GGS_relationVarMap  &var_cas_ioRelationVariableMap,
                                GGS_indexMap  &var_cas_ioIndexMap,
                                GGS_metamodelRelationExpression  &var_cas_outExpression) {
  nt_constraint_relation_term_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_outExpression) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_6 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7C) ;
          GGS_metamodelRelationExpression  var_cas_e ;
          nt_constraint_relation_term_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_e) ;
          var_cas_outExpression = GGS_metamodelRelationOr::constructor_new (_inLexique, var_cas_outExpression, var_cas_e COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraint_relation_expression_constraint_parser_871_38_parse (galgas_scanner & _inLexique) {
  nt_constraint_relation_term_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_6 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7C) ;
          nt_constraint_relation_term_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'constraint_relation_term'        *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraint_relation_term_constraint_parser_891_32_ (galgas_scanner & _inLexique,
                                GGS_relationVarMap  &var_cas_ioRelationVariableMap,
                                GGS_indexMap  &var_cas_ioIndexMap,
                                GGS_metamodelRelationExpression  &var_cas_outExpression) {
  nt_constraint_relation_factor_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_outExpression) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_7 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__26) ;
          GGS_metamodelRelationExpression  var_cas_e ;
          nt_constraint_relation_factor_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_e) ;
          var_cas_outExpression = GGS_metamodelRelationOr::constructor_new (_inLexique, var_cas_outExpression, var_cas_e COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraint_relation_term_constraint_parser_891_32_parse (galgas_scanner & _inLexique) {
  nt_constraint_relation_factor_parse (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_constraint_parser_7 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__26) ;
          nt_constraint_relation_factor_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'constraint_relation_factor'       *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraint_relation_factor_constraint_parser_908_34_ (galgas_scanner & _inLexique,
                                GGS_relationVarMap  &var_cas_ioRelationVariableMap,
                                GGS_indexMap  &var_cas_ioIndexMap,
                                GGS_metamodelRelationExpression  &var_cas_outExpression) {
  switch (select_constraint_parser_8 (_inLexique)) {
    case 1 : {
      nt_constraint_relation_primary_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_outExpression) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_not) ;
      nt_constraint_relation_primary_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_outExpression) ;
      var_cas_outExpression = GGS_metamodelRelationNot::constructor_new (_inLexique, var_cas_outExpression COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraint_relation_factor_constraint_parser_908_34_parse (galgas_scanner & _inLexique) {
  switch (select_constraint_parser_8 (_inLexique)) {
    case 1 : {
      nt_constraint_relation_primary_parse (_inLexique) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_not) ;
      nt_constraint_relation_primary_parse (_inLexique) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of production rule 'constraint_relation_primary'       *
//                                                                           *
//---------------------------------------------------------------------------*

void constraint_parser::
constraint_parser::
pr_constraint_relation_primary_constraint_parser_924_35_ (galgas_scanner & _inLexique,
                                GGS_relationVarMap  &var_cas_ioRelationVariableMap,
                                GGS_indexMap  &var_cas_ioIndexMap,
                                GGS_metamodelRelationExpression  &var_cas_outExpression) {
  switch (select_constraint_parser_9 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_true) ;
      var_cas_outExpression = GGS_metamodelRelationTrue::constructor_new (_inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_false) ;
      var_cas_outExpression = GGS_metamodelRelationFalse::constructor_new (_inLexique COMMA_HERE) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      nt_constraint_relation_expression_ (_inLexique, var_cas_ioRelationVariableMap, var_cas_ioIndexMap, var_cas_outExpression) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    case 4 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_lstring  var_cas_localVar ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_localVar.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
      GGS_luint  var_cas_variableIndex ;
      GGS_lstring  var_cas_domainVariable ;
      if (var_cas_ioRelationVariableMap._isBuilt ()) {
        var_cas_ioRelationVariableMap (HERE)->method_searchKeyAndGetIndex (_inLexique, var_cas_localVar, var_cas_variableIndex, var_cas_domainVariable SOURCE_FILE_AT_LINE (945)) ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3D_3D) ;
      GGS_lstring  var_cas_indexVariableName ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_indexVariableName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
      GGS_lstring  var_cas_domainVariableFromIndex ;
      GGS_uint  var_cas_37615 ;
      if (var_cas_ioIndexMap._isBuilt ()) {
        var_cas_ioIndexMap (HERE)->method_searchKey (_inLexique, var_cas_indexVariableName, var_cas_domainVariableFromIndex, var_cas_37615 SOURCE_FILE_AT_LINE (950)) ;
      }
      if (((var_cas_domainVariable.reader_string (_inLexique SOURCE_FILE_AT_LINE (951))) != (var_cas_domainVariableFromIndex.reader_string (_inLexique SOURCE_FILE_AT_LINE (951)))).isBuiltAndTrue ()) {
        var_cas_indexVariableName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((((((GGS_string (true, "this index refers to the '")) + (var_cas_domainVariableFromIndex.reader_string (_inLexique SOURCE_FILE_AT_LINE (952))))) + (GGS_string (true, "' domain, while '")))) + (var_cas_localVar.reader_string (_inLexique SOURCE_FILE_AT_LINE (953))))) + (GGS_string (true, "' relation variable refers to the '")))) + (var_cas_domainVariable.reader_string (_inLexique SOURCE_FILE_AT_LINE (954))))) + (GGS_string (true, "' domain"))) SOURCE_FILE_AT_LINE (955)) ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      var_cas_outExpression = GGS_metamodelRelationPrimary::constructor_new (_inLexique, var_cas_ioRelationVariableMap, var_cas_localVar, var_cas_variableIndex, var_cas_indexVariableName, var_cas_domainVariable COMMA_HERE) ;
      } break ;
    case 5 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_do) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      GGS_L_propertyPath  var_cas_path ;
      nt_property_path_for_constraint_ (_inLexique, var_cas_path) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
      GGS_metamodelRelationParameterList  var_cas_parameterList ;
      var_cas_parameterList = GGS_metamodelRelationParameterList::constructor_emptyList (_inLexique COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_parameter ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_parameter.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            GGS_luint  var_cas_parameterIndex ;
            GGS_lstring  var_cas_domainVariable ;
            if (var_cas_ioRelationVariableMap._isBuilt ()) {
              var_cas_ioRelationVariableMap (HERE)->method_searchKeyAndGetIndex (_inLexique, var_cas_parameter, var_cas_parameterIndex, var_cas_domainVariable SOURCE_FILE_AT_LINE (970)) ;
            }
            var_cas_parameterList._addAssign_operation (var_cas_parameter, var_cas_parameterIndex, var_cas_domainVariable) ;
          switch (select_repeat_constraint_parser_10 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
      GGS_lbool  var_cas_operationIsAnd ;
      switch (select_constraint_parser_11 (_inLexique)) {
        case 1 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7C) ;
          var_cas_operationIsAnd = GGS_lbool::constructor_new (_inLexique, GGS_bool (true, false), GGS_location (_inLexique) COMMA_HERE) ;
          } break ;
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__26) ;
          var_cas_operationIsAnd = GGS_lbool::constructor_new (_inLexique, GGS_bool (true, true), GGS_location (_inLexique) COMMA_HERE) ;
          } break ;
        default :
          break ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      var_cas_outExpression = GGS_metamodelRelationDo::constructor_new (_inLexique, var_cas_ioRelationVariableMap, var_cas_parameterList, var_cas_path, var_cas_operationIsAnd COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void constraint_parser::
pr_constraint_relation_primary_constraint_parser_924_35_parse (galgas_scanner & _inLexique) {
  switch (select_constraint_parser_9 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_true) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_false) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      nt_constraint_relation_expression_parse (_inLexique) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    case 4 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3D_3D) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    case 5 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_do) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      nt_property_path_for_constraint_parse (_inLexique) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          switch (select_repeat_constraint_parser_10 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
      switch (select_constraint_parser_11 (_inLexique)) {
        case 1 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7C) ;
          } break ;
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__26) ;
          } break ;
        default :
          break ;
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

