//---------------------------------------------------------------------------*
//                                                                           *
//                           File 'allASTTypes.h'                            *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                    november 11th, 2010, at 12h16'29"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef allASTTypes_DEFINED
#define allASTTypes_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

// Include imported semantics
#include "grammarMetamodel.h"
#include "guiTypesForAST.h"
#include "lexiqueTypesForAST.h"
#include "optionSemantics.h"
#include "optionTypesForAST.h"
#include "programMetamodel.h"
#include "semanticsTypesForAST.h"
#include "syntaxMetamodel.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_parsedLexiqueComponentMap ;
class GGS_parsedOptionComponentMap ;
class GGS_parsedSemanticsComponentMap ;
class GGS_parsedSyntaxComponentMap ;
class GGS_parsedGrammarComponentMap ;
class GGS_parsedProgramComponentMap ;
class GGS_parsedComponentStruct ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Map '@parsedLexiqueComponentMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_parsedLexiqueComponentMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_parsedLexiqueComponentMap ;

//---------------------------------------------------------------------------*

class GGS_parsedLexiqueComponentMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_parsedLexiqueComponentMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_parsedLexiqueComponentMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_parsedLexiqueComponentMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_parsedLexiqueComponentMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_parsedLexiqueComponentMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_parsedLexiqueComponentMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_parsedLexiqueComponentMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_parsedLexiqueComponentMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_lexiqueComponentAST & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lexiqueComponentAST &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lexiqueComponentAST   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_lexiqueComponentAST & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_lexiqueComponentAST & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_parsedLexiqueComponentMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_parsedLexiqueComponentMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_parsedLexiqueComponentMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_parsedLexiqueComponentMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_parsedLexiqueComponentMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lexiqueComponentAST   & _mRoot (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Map '@parsedOptionComponentMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_parsedOptionComponentMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_parsedOptionComponentMap ;

//---------------------------------------------------------------------------*

class GGS_parsedOptionComponentMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_parsedOptionComponentMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_parsedOptionComponentMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_parsedOptionComponentMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_parsedOptionComponentMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_parsedOptionComponentMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_parsedOptionComponentMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_parsedOptionComponentMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_parsedOptionComponentMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_commandLineOptionMap & inValue0,
                                             const GGS_commandLineOptionMap & inValue1,
                                             const GGS_commandLineOptionMap & inValue2
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_commandLineOptionMap &  inParameter0,
                                const GGS_commandLineOptionMap &  inParameter1,
                                const GGS_commandLineOptionMap &  inParameter2 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_commandLineOptionMap   & outParameter0,
                                GGS_commandLineOptionMap   & outParameter1,
                                GGS_commandLineOptionMap   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_commandLineOptionMap & inParameter0,
                                   const GGS_commandLineOptionMap & inParameter1,
                                   const GGS_commandLineOptionMap & inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_commandLineOptionMap & outParameter0,
                                   GGS_commandLineOptionMap & outParameter1,
                                   GGS_commandLineOptionMap & outParameter2,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_parsedOptionComponentMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_parsedOptionComponentMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_parsedOptionComponentMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_parsedOptionComponentMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_parsedOptionComponentMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_commandLineOptionMap   & _mBoolOptionMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_commandLineOptionMap   & _mUIntOptionMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_commandLineOptionMap   & _mStringOptionMap (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map '@parsedSemanticsComponentMap'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_parsedSemanticsComponentMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_parsedSemanticsComponentMap ;

//---------------------------------------------------------------------------*

class GGS_parsedSemanticsComponentMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_parsedSemanticsComponentMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_parsedSemanticsComponentMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_parsedSemanticsComponentMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_parsedSemanticsComponentMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_parsedSemanticsComponentMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_parsedSemanticsComponentMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_parsedSemanticsComponentMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_parsedSemanticsComponentMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_semanticsComponentAST & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_semanticsComponentAST &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_semanticsComponentAST   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_semanticsComponentAST & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_semanticsComponentAST & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_parsedSemanticsComponentMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_parsedSemanticsComponentMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_parsedSemanticsComponentMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_parsedSemanticsComponentMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_parsedSemanticsComponentMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_semanticsComponentAST   & _mRoot (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Map '@parsedSyntaxComponentMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_parsedSyntaxComponentMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_parsedSyntaxComponentMap ;

//---------------------------------------------------------------------------*

class GGS_parsedSyntaxComponentMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_parsedSyntaxComponentMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_parsedSyntaxComponentMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_parsedSyntaxComponentMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_parsedSyntaxComponentMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_parsedSyntaxComponentMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_parsedSyntaxComponentMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_parsedSyntaxComponentMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_parsedSyntaxComponentMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_syntaxComponentAST& inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_syntaxComponentAST&  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_syntaxComponentAST  & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_syntaxComponentAST& inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_syntaxComponentAST& outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_parsedSyntaxComponentMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_parsedSyntaxComponentMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_parsedSyntaxComponentMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_parsedSyntaxComponentMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_parsedSyntaxComponentMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_syntaxComponentAST  & _mSyntaxComponentRoot (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Map '@parsedGrammarComponentMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_parsedGrammarComponentMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_parsedGrammarComponentMap ;

//---------------------------------------------------------------------------*

class GGS_parsedGrammarComponentMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_parsedGrammarComponentMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_parsedGrammarComponentMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_parsedGrammarComponentMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_parsedGrammarComponentMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_parsedGrammarComponentMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_parsedGrammarComponentMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_parsedGrammarComponentMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_parsedGrammarComponentMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_grammarComponentAST & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_grammarComponentAST &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_grammarComponentAST   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_grammarComponentAST & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_grammarComponentAST & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_parsedGrammarComponentMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_parsedGrammarComponentMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_parsedGrammarComponentMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_parsedGrammarComponentMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_parsedGrammarComponentMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_grammarComponentAST   & _mGrammarComponentRoot (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Map '@parsedProgramComponentMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_parsedProgramComponentMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_parsedProgramComponentMap ;

//---------------------------------------------------------------------------*

class GGS_parsedProgramComponentMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_parsedProgramComponentMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_parsedProgramComponentMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_parsedProgramComponentMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_parsedProgramComponentMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_parsedProgramComponentMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_parsedProgramComponentMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_parsedProgramComponentMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_parsedProgramComponentMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_programComponentAST& inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_programComponentAST&  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_programComponentAST  & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_programComponentAST& inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_programComponentAST& outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_parsedProgramComponentMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_parsedProgramComponentMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_parsedProgramComponentMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_parsedProgramComponentMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_parsedProgramComponentMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_programComponentAST  & _mProgramComponentAST (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@parsedLexiqueComponentMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class e_parsedLexiqueComponentMap {
  public : GGS_lexiqueComponentAST  mRoot ;

  public : e_parsedLexiqueComponentMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_parsedLexiqueComponentMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_parsedLexiqueComponentMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_parsedLexiqueComponentMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_parsedLexiqueComponentMap * nextObject (void) const { return (elementOf_GGS_parsedLexiqueComponentMap *) mNextItem ; }
  public : inline elementOf_GGS_parsedLexiqueComponentMap * infObject (void) const { return (elementOf_GGS_parsedLexiqueComponentMap *) mInfPtr ; }
  public : inline elementOf_GGS_parsedLexiqueComponentMap * supObject (void) const { return (elementOf_GGS_parsedLexiqueComponentMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_parsedLexiqueComponentMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of map '@parsedOptionComponentMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class e_parsedOptionComponentMap {
  public : GGS_commandLineOptionMap  mBoolOptionMap ;
  public : GGS_commandLineOptionMap  mUIntOptionMap ;
  public : GGS_commandLineOptionMap  mStringOptionMap ;

  public : e_parsedOptionComponentMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_parsedOptionComponentMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_parsedOptionComponentMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_parsedOptionComponentMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_parsedOptionComponentMap * nextObject (void) const { return (elementOf_GGS_parsedOptionComponentMap *) mNextItem ; }
  public : inline elementOf_GGS_parsedOptionComponentMap * infObject (void) const { return (elementOf_GGS_parsedOptionComponentMap *) mInfPtr ; }
  public : inline elementOf_GGS_parsedOptionComponentMap * supObject (void) const { return (elementOf_GGS_parsedOptionComponentMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_parsedOptionComponentMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of map '@parsedSemanticsComponentMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

class e_parsedSemanticsComponentMap {
  public : GGS_semanticsComponentAST  mRoot ;

  public : e_parsedSemanticsComponentMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_parsedSemanticsComponentMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_parsedSemanticsComponentMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_parsedSemanticsComponentMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_parsedSemanticsComponentMap * nextObject (void) const { return (elementOf_GGS_parsedSemanticsComponentMap *) mNextItem ; }
  public : inline elementOf_GGS_parsedSemanticsComponentMap * infObject (void) const { return (elementOf_GGS_parsedSemanticsComponentMap *) mInfPtr ; }
  public : inline elementOf_GGS_parsedSemanticsComponentMap * supObject (void) const { return (elementOf_GGS_parsedSemanticsComponentMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_parsedSemanticsComponentMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of map '@parsedSyntaxComponentMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class e_parsedSyntaxComponentMap {
  public : GGS_syntaxComponentAST mSyntaxComponentRoot ;

  public : e_parsedSyntaxComponentMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_parsedSyntaxComponentMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_parsedSyntaxComponentMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_parsedSyntaxComponentMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_parsedSyntaxComponentMap * nextObject (void) const { return (elementOf_GGS_parsedSyntaxComponentMap *) mNextItem ; }
  public : inline elementOf_GGS_parsedSyntaxComponentMap * infObject (void) const { return (elementOf_GGS_parsedSyntaxComponentMap *) mInfPtr ; }
  public : inline elementOf_GGS_parsedSyntaxComponentMap * supObject (void) const { return (elementOf_GGS_parsedSyntaxComponentMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_parsedSyntaxComponentMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@parsedGrammarComponentMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class e_parsedGrammarComponentMap {
  public : GGS_grammarComponentAST  mGrammarComponentRoot ;

  public : e_parsedGrammarComponentMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_parsedGrammarComponentMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_parsedGrammarComponentMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_parsedGrammarComponentMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_parsedGrammarComponentMap * nextObject (void) const { return (elementOf_GGS_parsedGrammarComponentMap *) mNextItem ; }
  public : inline elementOf_GGS_parsedGrammarComponentMap * infObject (void) const { return (elementOf_GGS_parsedGrammarComponentMap *) mInfPtr ; }
  public : inline elementOf_GGS_parsedGrammarComponentMap * supObject (void) const { return (elementOf_GGS_parsedGrammarComponentMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_parsedGrammarComponentMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@parsedProgramComponentMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class e_parsedProgramComponentMap {
  public : GGS_programComponentAST mProgramComponentAST ;

  public : e_parsedProgramComponentMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_parsedProgramComponentMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_parsedProgramComponentMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_parsedProgramComponentMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_parsedProgramComponentMap * nextObject (void) const { return (elementOf_GGS_parsedProgramComponentMap *) mNextItem ; }
  public : inline elementOf_GGS_parsedProgramComponentMap * infObject (void) const { return (elementOf_GGS_parsedProgramComponentMap *) mInfPtr ; }
  public : inline elementOf_GGS_parsedProgramComponentMap * supObject (void) const { return (elementOf_GGS_parsedProgramComponentMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_parsedProgramComponentMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Declarations for 'parsedComponentStruct' struct               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_parsedComponentStruct ;

//---------------------------------------------------------------------------*

class GGS_parsedComponentStruct : public GGS__root {
//--- Default constructor
  public : GGS_parsedComponentStruct (void) ;

//--- Virtual destructor
  public : virtual ~GGS_parsedComponentStruct (void) ;

//--- Handle 'drop' instruction
  public : void drop (void) ;

//--- Method 'isBuilt'
  public : bool isBuilt (void) const ;

//--- Support for method call handling in GALGAS
  public : inline const GGS_parsedComponentStruct * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
  public : inline GGS_parsedComponentStruct * operator () (UNUSED_LOCATION_ARGS) { return this ; }

//--- Comparison
  public : GGS_bool operator_isEqual (const GGS_parsedComponentStruct & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_parsedComponentStruct & inOperand) const ;

//--- Reader 'description'
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_parsedComponentStruct castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Galgas 'new' destructor
  public : static GGS_parsedComponentStruct constructor_new (const GGS_parsedSemanticsComponentMap & argument_0,
                 const GGS_parsedLexiqueComponentMap & argument_1,
                 const GGS_parsedSyntaxComponentMap & argument_2,
                 const GGS_parsedOptionComponentMap & argument_3,
                 const GGS_parsedGrammarComponentMap & argument_4,
                 const GGS_parsedProgramComponentMap & argument_5) ;

//--- Readers
  public : inline GGS_parsedSemanticsComponentMap 
  reader_mParsedSemanticsComponentMap (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mParsedSemanticsComponentMap ;
  }

  public : inline GGS_parsedLexiqueComponentMap 
  reader_mParsedLexiqueComponentMap (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mParsedLexiqueComponentMap ;
  }

  public : inline GGS_parsedSyntaxComponentMap 
  reader_mParsedSyntaxComponentMap (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mParsedSyntaxComponentMap ;
  }

  public : inline GGS_parsedOptionComponentMap 
  reader_mParsedOptionComponentMap (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mParsedOptionComponentMap ;
  }

  public : inline GGS_parsedGrammarComponentMap 
  reader_mParsedGrammarComponentMap (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mParsedGrammarComponentMap ;
  }

  public : inline GGS_parsedProgramComponentMap 
  reader_mParsedProgramComponentMap (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mParsedProgramComponentMap ;
  }

//--- Attributes
  public : GGS_parsedSemanticsComponentMap  mParsedSemanticsComponentMap ;
  public : GGS_parsedLexiqueComponentMap  mParsedLexiqueComponentMap ;
  public : GGS_parsedSyntaxComponentMap  mParsedSyntaxComponentMap ;
  public : GGS_parsedOptionComponentMap  mParsedOptionComponentMap ;
  public : GGS_parsedGrammarComponentMap  mParsedGrammarComponentMap ;
  public : GGS_parsedProgramComponentMap  mParsedProgramComponentMap ;
} ;

//---------------------------------------------------------------------------*

#endif
