//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'galgasTemplateGrammar.h'                       *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     january 27th, 2009, at 19h9'32"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef GRAMMAR_galgasTemplateGrammar_HAS_BEEN_DEFINED
#define GRAMMAR_galgasTemplateGrammar_HAS_BEEN_DEFINED

//---------------------------------------------------------------------------*

#include "galgasTemplateParser.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*

class galgasTemplateGrammar : public galgasTemplateParser {
  public : virtual void nt_lexique_component_start_symbol_ (galgasTemplateScanner &,
                                GGS_typeVariablesMap &,
                                const GGS_M_semanticsEntitiesForUse,
                                GGS_templateInstructionList &) ;
  public : static void _performSourceFileParsing_ (C_Compiler & _inCompiler,
                                const GGS_string & _inDependancyString,
                                GGS_string * _inSentStringPtr,
                                const GGS_lstring inFileName,
                                GGS_typeVariablesMap &,
                                const GGS_M_semanticsEntitiesForUse,
                                GGS_templateInstructionList &
                                COMMA_LOCATION_ARGS) ;
  public : static void _performSourceStringParsing_ (C_Compiler & _inCompiler,
                                GGS_string * _inSentStringPtr,
                                const GGS_string inSourceString,
                                GGS_typeVariablesMap &,
                                const GGS_M_semanticsEntitiesForUse,
                                GGS_templateInstructionList &
                                COMMA_LOCATION_ARGS) ;
  public : virtual void nt_template_instruction_ (galgasTemplateScanner &,
                                GGS_typeVariablesMap &,
                                const GGS_M_semanticsEntitiesForUse,
                                GGS_templateInstructionList &) ;
  public : virtual sint16 select_repeat_galgasTemplateParser_0 (galgasTemplateScanner &) ;
} ;

//---------------------------------------------------------------------------*

#endif
