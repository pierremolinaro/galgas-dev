//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'programMetamodel.h'                          *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       june 6th, 2008, at 22h37'33"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef programMetamodel_METAMODEL_DEFINED
#define programMetamodel_METAMODEL_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/predefined_types.h"
#include "commonSemantics.h"
#include "instructionMetamodel.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*

sint32 _metamodel_index_for_programMetamodel (void) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_programRule ;
class GGS_programRule ;
class cPtr_programRule ;
class GGS__list_programComponentRoot ;
class GGS_programComponentRoot ;
class cPtr_programComponentRoot ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS entity '@programRule'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_programRule : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_programRule constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_semanticInstructions & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_programRule * getPtr (void) const {
    return (cPtr_programRule *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mSourceFileExtension (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mSourceFileHelp (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mSourceFileVariableName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructions  reader_mInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_programRule * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_programRule * operator () (void) const {
      return (cPtr_programRule *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS list of entity '@programRule'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_programRule : public AC_galgas_entity_list {
  public : typedef cPtr_programRule cElement ;
//--- Constructor 'emptyList'
  public : static GGS__list_programRule constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_programRule
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_programRule & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  } */
//--- Get last object
/*  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  } */
//--- Operator () used for method call
  public : inline const GGS__list_programRule * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_programRule & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_programRule & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_programRule & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_programRule & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_programRule & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_programRule _operator_concat (const GGS__list_programRule & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_programRule & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_semanticInstructions & argument_3) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_semanticInstructions & argument_3) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_programRule & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS entity '@programComponentRoot'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_programComponentRoot : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_programComponentRoot constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_semanticInstructions & argument_2,
                                const GGS_semanticInstructions & argument_3,
                                const GGS__list_programRule & argument_4,
                                const GGS__list_semanticDeclaration & argument_5
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_programComponentRoot * getPtr (void) const {
    return (cPtr_programComponentRoot *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mProgramName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mVersionString (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructions  reader_mPrologueInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructions  reader_mEpilogueInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_programRule  reader_mProgramRules (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_semanticDeclaration  reader_mSemanticDeclarations (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_programComponentRoot * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_programComponentRoot * operator () (void) const {
      return (cPtr_programComponentRoot *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS list of entity '@programComponentRoot'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_programComponentRoot : public AC_galgas_entity_list {
  public : typedef cPtr_programComponentRoot cElement ;
//--- Constructor 'emptyList'
  public : static GGS__list_programComponentRoot constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_programComponentRoot
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_programComponentRoot & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  } */
//--- Get last object
/*  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  } */
//--- Operator () used for method call
  public : inline const GGS__list_programComponentRoot * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_programComponentRoot & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_programComponentRoot & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_programComponentRoot & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_programComponentRoot & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_programComponentRoot & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_programComponentRoot _operator_concat (const GGS__list_programComponentRoot & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_programComponentRoot & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_semanticInstructions & argument_2,
                                const GGS_semanticInstructions & argument_3,
                                const GGS__list_programRule & argument_4,
                                const GGS__list_semanticDeclaration & argument_5) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_semanticInstructions & argument_2,
                                const GGS_semanticInstructions & argument_3,
                                const GGS__list_programRule & argument_4,
                                const GGS__list_semanticDeclaration & argument_5) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_programComponentRoot & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of list '@programRule'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_programRule : public cPtr_entity {
//--- Attributes
  public : GGS_lstring  mSourceFileExtension ;
  public : GGS_lstring  mSourceFileHelp ;
  public : GGS_lstring  mSourceFileVariableName ;
  public : GGS_semanticInstructions  mInstructionList ;
//--- Constructor
  public : cPtr_programRule (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_semanticInstructions & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_programRule * nextObject (void) const {
    return (cPtr_programRule *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_programRule * previousObject (void) const {
    return (cPtr_programRule *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_programRule * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_programRule ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@programComponentRoot'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_programComponentRoot : public cPtr_entity {
//--- Attributes
  public : GGS_lstring  mProgramName ;
  public : GGS_lstring  mVersionString ;
  public : GGS_semanticInstructions  mPrologueInstructionList ;
  public : GGS_semanticInstructions  mEpilogueInstructionList ;
  public : GGS__list_programRule  mProgramRules ;
  public : GGS__list_semanticDeclaration  mSemanticDeclarations ;
//--- Constructor
  public : cPtr_programComponentRoot (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_semanticInstructions & ,
                                const GGS_semanticInstructions & ,
                                const GGS__list_programRule & ,
                                const GGS__list_semanticDeclaration & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_programComponentRoot * nextObject (void) const {
    return (cPtr_programComponentRoot *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_programComponentRoot * previousObject (void) const {
    return (cPtr_programComponentRoot *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_programComponentRoot * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_programComponentRoot ;
} ;

//---------------------------------------------------------------------------*

#endif
