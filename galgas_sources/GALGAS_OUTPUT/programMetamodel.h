//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'programMetamodel.h'                          *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                       june 6th, 2007, at 17h14'5"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef programMetamodel_METAMODEL_DEFINED
#define programMetamodel_METAMODEL_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/predefined_types.h"
#include "commonSemantics.h"
#include "instructionMetamodel.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*

uint32 _metamodel_index_for_programMetamodel (void) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_programRuleList ;
class GGS_programRule ;
class cPtr_programRule ;
class GGS_programComponentRootList ;
class GGS_programComponentRoot ;
class cPtr_programComponentRoot ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_programRule'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_programRule : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_programRule constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_semanticInstructions & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_programRule * getPtr (void) const {
    return (cPtr_programRule *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mSourceFileExtension (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mSourceFileHelp (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mSourceFileVariableName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructions  reader_mInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_programRule * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_programRule * operator () (void) const {
      return (cPtr_programRule *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         list '@programRuleList'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_programRuleList : public AC_galgas_list {
  public : typedef cPtr_programRule element_type ;
//--- Constructor 'emptyList'
  public : static GGS_programRuleList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_programRuleList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_semanticInstructions & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_programRuleList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_programRule & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_programRule & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_programRule & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_programRule & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_programRule & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_programRuleList _operator_concat (const GGS_programRuleList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_semanticInstructions & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_semanticInstructions & argument_3) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_semanticInstructions & argument_3) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_programRule & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_programComponentRoot'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_programComponentRoot : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_programComponentRoot constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_luint & argument_2,
                                const GGS_luint & argument_3,
                                const GGS_programRuleList & argument_4,
                                const GGS_semanticDeclarationList & argument_5
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_programComponentRoot * getPtr (void) const {
    return (cPtr_programComponentRoot *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mProgramName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mVersionString (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_luint  reader_mErrorMaximumCount (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_luint  reader_mWarningMaximumCount (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_programRuleList  reader_mProgramRules (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticDeclarationList  reader_mSemanticDeclarations (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_programComponentRoot * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_programComponentRoot * operator () (void) const {
      return (cPtr_programComponentRoot *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@programComponentRootList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_programComponentRootList : public AC_galgas_list {
  public : typedef cPtr_programComponentRoot element_type ;
//--- Constructor 'emptyList'
  public : static GGS_programComponentRootList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_programComponentRootList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_luint & argument_2,
                                const GGS_luint & argument_3,
                                const GGS_programRuleList & argument_4,
                                const GGS_semanticDeclarationList & argument_5
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_programComponentRootList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_programComponentRoot & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_programComponentRoot & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_programComponentRoot & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_programComponentRoot & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_programComponentRoot & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_programComponentRootList _operator_concat (const GGS_programComponentRootList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_luint & argument_2,
                                const GGS_luint & argument_3,
                                const GGS_programRuleList & argument_4,
                                const GGS_semanticDeclarationList & argument_5
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_luint & argument_2,
                                const GGS_luint & argument_3,
                                const GGS_programRuleList & argument_4,
                                const GGS_semanticDeclarationList & argument_5) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_luint & argument_2,
                                const GGS_luint & argument_3,
                                const GGS_programRuleList & argument_4,
                                const GGS_semanticDeclarationList & argument_5) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_programComponentRoot & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@programRuleList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_programRule : public C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS_lstring  mSourceFileExtension ;
  public : GGS_lstring  mSourceFileHelp ;
  public : GGS_lstring  mSourceFileVariableName ;
  public : GGS_semanticInstructions  mInstructionList ;
//--- Constructor
  public : cPtr_programRule (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_semanticInstructions & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_programRule * nextObject (void) const {
    return (cPtr_programRule *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_programRule * previousObject (void) const {
    return (cPtr_programRule *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual uint32 _metamodelComponentIndex (void) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_programRule * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_programRuleList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@programComponentRootList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_programComponentRoot : public C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS_lstring  mProgramName ;
  public : GGS_lstring  mVersionString ;
  public : GGS_luint  mErrorMaximumCount ;
  public : GGS_luint  mWarningMaximumCount ;
  public : GGS_programRuleList  mProgramRules ;
  public : GGS_semanticDeclarationList  mSemanticDeclarations ;
//--- Constructor
  public : cPtr_programComponentRoot (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_luint & ,
                                const GGS_luint & ,
                                const GGS_programRuleList & ,
                                const GGS_semanticDeclarationList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_programComponentRoot * nextObject (void) const {
    return (cPtr_programComponentRoot *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_programComponentRoot * previousObject (void) const {
    return (cPtr_programComponentRoot *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual uint32 _metamodelComponentIndex (void) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_programComponentRoot * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_programComponentRootList ;
} ;

//---------------------------------------------------------------------------*

#endif
