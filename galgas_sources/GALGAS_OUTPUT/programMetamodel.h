//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'programMetamodel.h'                          *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                    november 16th, 2009, at 18h43'55"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef programMetamodel_DEFINED
#define programMetamodel_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

// Include imported semantics
#include "expressionMetamodel.h"
#include "instructionMetamodel.h"
#include "parameterArgumentMetamodel.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_programRuleList ;
class GGS_programComponentRoot ;
class cPtr_programComponentRoot ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         list '@programRuleList'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_programRuleList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_programRuleList ;

//---------------------------------------------------------------------------*

class GGS_programRuleList : public AC_galgas_list {
  public : typedef elementOf_GGS_programRuleList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_programRuleList constructor_emptyList (void) ;
  public : static GGS_programRuleList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_semanticInstructionList & argument_3) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_programRuleList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_programRuleList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_programRuleList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_programRuleList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstring & _out_1,
                              GGS_lstring & _out_2,
                              GGS_semanticInstructionList & _out_3
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstring & _out_1,
                             GGS_lstring & _out_2,
                             GGS_semanticInstructionList & _out_3
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstring & _out_1,
                                GGS_lstring & _out_2,
                                GGS_semanticInstructionList & _out_3
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstring & _out_1,
                                 GGS_lstring & _out_2,
                                 GGS_semanticInstructionList & _out_3
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_programRuleList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_semanticInstructionList & argument_3) ;
//--- Handling '.' GALGAS operator
  public : GGS_programRuleList operator_concat (const GGS_programRuleList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_semanticInstructionList & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_semanticInstructionList & argument_3
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_semanticInstructionList & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mSourceFileExtensionAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mSourceFileHelpAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mSourceFileVariableNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionList 
  reader_mInstructionListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMSourceFileExtensionAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMSourceFileHelpAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMSourceFileVariableNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_Compiler & inLexique,
                              const GGS_semanticInstructionList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_programRuleList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_programRuleList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mSourceFileExtension (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mSourceFileHelp (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mSourceFileVariableName (LOCATION_ARGS) const ;
    public : /* const */ GGS_semanticInstructionList   & _mInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_programComponentRoot'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_programComponentRoot ;

//---------------------------------------------------------------------------*

class GGS_programComponentRoot : public AC_galgas_class {
//--- Default constructor
  public : inline GGS_programComponentRoot (void) :
  AC_galgas_class () {}

//--- Pointer assignment constructor
  public : GGS_programComponentRoot (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_programComponentRoot (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_programComponentRoot
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_programComponentRoot constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_semanticInstructionList & argument_2,
                                const GGS_semanticInstructionList & argument_3,
                                const GGS_programRuleList & argument_4,
                                const GGS_semanticDeclarationStruct& argument_5
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_programComponentRoot * getPtr (void) const {
    return (cPtr_programComponentRoot *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mProgramName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mVersionString (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionList  reader_mPrologueInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionList  reader_mEpilogueInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_programRuleList  reader_mProgramRules (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticDeclarationStruct reader_mSemanticDeclarations (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_programComponentRoot * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_programComponentRoot * operator () (LOCATION_ARGS) const {
      return (cPtr_programComponentRoot *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_programComponentRoot castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__programComponentRoot ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@programRuleList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_programRuleList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mSourceFileExtension ;
  public : GGS_lstring  mSourceFileHelp ;
  public : GGS_lstring  mSourceFileVariableName ;
  public : GGS_semanticInstructionList  mInstructionList ;
//--- Constructor
  public : elementOf_GGS_programRuleList (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_semanticInstructionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_programRuleList * nextObject (void) const { return (elementOf_GGS_programRuleList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_programRuleList * previousObject (void) const { return (elementOf_GGS_programRuleList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_programRuleList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_programComponentRoot'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_programComponentRoot : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_programComponentRoot (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_semanticInstructionList & ,
                                const GGS_semanticInstructionList & ,
                                const GGS_programRuleList & ,
                                const GGS_semanticDeclarationStruct& 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_programComponentRoot (void) {}
  #endif

//--- Attributes
  public : GGS_lstring  mProgramName ;
  public : GGS_lstring  mVersionString ;
  public : GGS_semanticInstructionList  mPrologueInstructionList ;
  public : GGS_semanticInstructionList  mEpilogueInstructionList ;
  public : GGS_programRuleList  mProgramRules ;
  public : GGS_semanticDeclarationStruct mSemanticDeclarations ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*

#endif
