//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'lexiqueCompilation.cpp'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       june 7th, 2009, at 14h29'10"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "lexiqueCompilation.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "lexiqueCompilation.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//             Include directives generated by grammar includes              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "lexiqueLL1grammar.h"

//--- START OF USER ZONE 2

//---------------------------------------------------------------------------*

//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@lexicalSendDefaultAction.checkLexicalDefaultAction'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__lexicalSendDefaultAction__checkLexicalDefaultAction> gDispatchTableFor__lexicalSendDefaultAction__checkLexicalDefaultAction ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__lexicalSendDefaultAction__checkLexicalDefaultAction (typeCategoryMethod__lexicalSendDefaultAction__checkLexicalDefaultAction inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__lexicalSendDefaultAction__checkLexicalDefaultAction.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__lexicalSendDefaultAction__checkLexicalDefaultAction
findCategoryMethod__lexicalSendDefaultAction__checkLexicalDefaultAction (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__lexicalSendDefaultAction__checkLexicalDefaultAction result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__lexicalSendDefaultAction__checkLexicalDefaultAction.count ()) {
    result = gDispatchTableFor__lexicalSendDefaultAction__checkLexicalDefaultAction (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__lexicalSendDefaultAction__checkLexicalDefaultAction (superClassPtr) ;
      gDispatchTableFor__lexicalSendDefaultAction__checkLexicalDefaultAction.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@lexicalSendTerminalByDefault.checkLexicalDefaultAction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalSendTerminalByDefault__checkLexicalDefaultAction (C_Compiler & inLexique,
                                const cPtr_lexicalSendTerminalByDefault * operand_2290,
                                GGS_lexiqueAnalysisContext & var_cas_ioLexiqueAnalysisContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2290 != NULL) {
    GGS_lexicalTypeList  automatic_var_0 ;
    const GGS_terminalMap  _temp_2398 = var_cas_ioLexiqueAnalysisContext.reader_mTerminalMap (inLexique COMMA_SOURCE_FILE_AT_LINE (41)) ;
    if (_temp_2398.isBuilt ()) {
      _temp_2398 (HERE)->method_searchKey (inLexique, operand_2290->mDefaultSentTerminal, automatic_var_0 COMMA_SOURCE_FILE_AT_LINE (41)) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@lexicalErrorByDefault.checkLexicalDefaultAction'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalErrorByDefault__checkLexicalDefaultAction (C_Compiler & inLexique,
                                const cPtr_lexicalErrorByDefault * operand_2584,
                                GGS_lexiqueAnalysisContext & var_cas_ioLexiqueAnalysisContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2584 != NULL) {
    elementOf_GGS_lexicalMessageMap * operand_2699 = (elementOf_GGS_lexicalMessageMap *) var_cas_ioLexiqueAnalysisContext.mLexicalMessageMap.searchForWithInstruction (inLexique, operand_2584->mDefaultErrorMessageName, GGS_lexicalMessageMap::kSearchMessage_searchKey COMMA_SOURCE_FILE_AT_LINE (49)) ;
    if (NULL != operand_2699) {
      operand_2699->mInfo.mMessageIsUsed = GGS_bool (true) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@lexicalExpression.checkLexicalExpression'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__lexicalExpression__checkLexicalExpression> gDispatchTableFor__lexicalExpression__checkLexicalExpression ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__lexicalExpression__checkLexicalExpression (typeCategoryMethod__lexicalExpression__checkLexicalExpression inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__lexicalExpression__checkLexicalExpression.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__lexicalExpression__checkLexicalExpression
findCategoryMethod__lexicalExpression__checkLexicalExpression (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__lexicalExpression__checkLexicalExpression result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__lexicalExpression__checkLexicalExpression.count ()) {
    result = gDispatchTableFor__lexicalExpression__checkLexicalExpression (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__lexicalExpression__checkLexicalExpression (superClassPtr) ;
      gDispatchTableFor__lexicalExpression__checkLexicalExpression.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@lexicalOrExpression.checkLexicalExpression'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalOrExpression__checkLexicalExpression (C_Compiler & inLexique,
                                const cPtr_lexicalOrExpression * operand_3293,
                                GGS_lexiqueAnalysisContext & var_cas_ioLexiqueAnalysisContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3293 != NULL) {
    const GGS_lexicalExpression  _temp_3387 = operand_3293->mLeftOperand ;
    if (_temp_3387.isBuilt ()) {
      typeCategoryMethod__lexicalExpression__checkLexicalExpression _method = findCategoryMethod__lexicalExpression__checkLexicalExpression (_temp_3387._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_3387 (HERE), var_cas_ioLexiqueAnalysisContext COMMA_SOURCE_FILE_AT_LINE (67)) ;
      }
    }
    const GGS_lexicalExpression  _temp_3458 = operand_3293->mRightOperand ;
    if (_temp_3458.isBuilt ()) {
      typeCategoryMethod__lexicalExpression__checkLexicalExpression _method = findCategoryMethod__lexicalExpression__checkLexicalExpression (_temp_3458._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_3458 (HERE), var_cas_ioLexiqueAnalysisContext COMMA_SOURCE_FILE_AT_LINE (68)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@lexicalCharacterMatch.checkLexicalExpression'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalCharacterMatch__checkLexicalExpression (C_Compiler &,
                                const cPtr_lexicalCharacterMatch * operand_3644,
                                GGS_lexiqueAnalysisContext & /* var_cas_ioLexiqueAnalysisContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3644 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@lexicalCharacterSetMatch.checkLexicalExpression'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalCharacterSetMatch__checkLexicalExpression (C_Compiler &,
                                const cPtr_lexicalCharacterSetMatch * operand_3864,
                                GGS_lexiqueAnalysisContext & /* var_cas_ioLexiqueAnalysisContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3864 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@lexicalCharacterIntervalMatch.checkLexicalExpression'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalCharacterIntervalMatch__checkLexicalExpression (C_Compiler &,
                                const cPtr_lexicalCharacterIntervalMatch * operand_4089,
                                GGS_lexiqueAnalysisContext & /* var_cas_ioLexiqueAnalysisContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4089 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@lexicalStringMatch.checkLexicalExpression'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalStringMatch__checkLexicalExpression (C_Compiler &,
                                const cPtr_lexicalStringMatch * operand_4303,
                                GGS_lexiqueAnalysisContext & /* var_cas_ioLexiqueAnalysisContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4303 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@lexicalStringNotMatch.checkLexicalExpression'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalStringNotMatch__checkLexicalExpression (C_Compiler & inLexique,
                                const cPtr_lexicalStringNotMatch * operand_4520,
                                GGS_lexiqueAnalysisContext & var_cas_ioLexiqueAnalysisContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4520 != NULL) {
    elementOf_GGS_lexicalMessageMap * operand_4628 = (elementOf_GGS_lexicalMessageMap *) var_cas_ioLexiqueAnalysisContext.mLexicalMessageMap.searchForWithInstruction (inLexique, operand_4520->mErrorMessage, GGS_lexicalMessageMap::kSearchMessage_searchKey COMMA_SOURCE_FILE_AT_LINE (104)) ;
    if (NULL != operand_4628) {
      operand_4628->mInfo.mMessageIsUsed = GGS_bool (true) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@lexicalRoutineOrFunctionFormalInputArgument.checkLexicalRoutineOrFunctionCallArgument'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__lexicalRoutineOrFunctionFormalInputArgument__checkLexicalRoutineOrFunctionCallArgument> gDispatchTableFor__lexicalRoutineOrFunctionFormalInputArgument__checkLexicalRoutineOrFunctionCallArgument ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__lexicalRoutineOrFunctionFormalInputArgument__checkLexicalRoutineOrFunctionCallArgument (typeCategoryMethod__lexicalRoutineOrFunctionFormalInputArgument__checkLexicalRoutineOrFunctionCallArgument inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__lexicalRoutineOrFunctionFormalInputArgument__checkLexicalRoutineOrFunctionCallArgument.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__lexicalRoutineOrFunctionFormalInputArgument__checkLexicalRoutineOrFunctionCallArgument
findCategoryMethod__lexicalRoutineOrFunctionFormalInputArgument__checkLexicalRoutineOrFunctionCallArgument (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__lexicalRoutineOrFunctionFormalInputArgument__checkLexicalRoutineOrFunctionCallArgument result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__lexicalRoutineOrFunctionFormalInputArgument__checkLexicalRoutineOrFunctionCallArgument.count ()) {
    result = gDispatchTableFor__lexicalRoutineOrFunctionFormalInputArgument__checkLexicalRoutineOrFunctionCallArgument (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__lexicalRoutineOrFunctionFormalInputArgument__checkLexicalRoutineOrFunctionCallArgument (superClassPtr) ;
      gDispatchTableFor__lexicalRoutineOrFunctionFormalInputArgument__checkLexicalRoutineOrFunctionCallArgument.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@lexicalAttributeInputArgument.checkLexicalRoutineOrFunctionCallArgument'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalAttributeInputArgument__checkLexicalRoutineOrFunctionCallArgument (C_Compiler & inLexique,
                                const cPtr_lexicalAttributeInputArgument * operand_5343,
                                GGS_lexiqueAnalysisContext & var_cas_ioLexiqueAnalysisContext,
                                GGS_lexicalTypeEnum  var_cas_inLexicalRoutineFormalArgumentType
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5343 != NULL) {
    GGS_lexicalTypeEnum var_cas_attributeLexicalType ;
    const GGS_lexicalAttributeMap  _temp_5588 = var_cas_ioLexiqueAnalysisContext.reader_mLexicalAttributeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (126)) ;
    if (_temp_5588.isBuilt ()) {
      _temp_5588 (HERE)->method_searchKey (inLexique, operand_5343->mAttributeName, var_cas_attributeLexicalType COMMA_SOURCE_FILE_AT_LINE (126)) ;
    }
    if (((var_cas_attributeLexicalType).operator_isNotEqual (var_cas_inLexicalRoutineFormalArgumentType)).isBuiltAndTrue ()) {
      operand_5343->mAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("type error, attribute type is ")).operator_concat (var_cas_attributeLexicalType.reader_lexicalTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (133)))).operator_concat (GGS_string (" type, but lexical routine prototype requires "))).operator_concat (var_cas_inLexicalRoutineFormalArgumentType.reader_lexicalTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (135)))).operator_concat (GGS_string (" type")) COMMA_SOURCE_FILE_AT_LINE (137)) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@lexicalCharacterInputArgument.checkLexicalRoutineOrFunctionCallArgument'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalCharacterInputArgument__checkLexicalRoutineOrFunctionCallArgument (C_Compiler & inLexique,
                                const cPtr_lexicalCharacterInputArgument * operand_6151,
                                GGS_lexiqueAnalysisContext & /* var_cas_ioLexiqueAnalysisContext */,
                                GGS_lexicalTypeEnum  var_cas_inLexicalRoutineFormalArgumentType
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_6151 != NULL) {
    if (((GGS_lexicalTypeEnum::constructor_lexicalType_char (inLexique COMMA_HERE)).operator_isNotEqual (var_cas_inLexicalRoutineFormalArgumentType)).isBuiltAndTrue ()) {
      operand_6151->mCharacter.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, (((GGS_string ("type error, a literal character has @char ")).operator_concat (GGS_string (" type, but lexical routine prototype requires an "))).operator_concat (var_cas_inLexicalRoutineFormalArgumentType.reader_lexicalTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (150)))).operator_concat (GGS_string (" type value")) COMMA_SOURCE_FILE_AT_LINE (152)) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@lexicalCurrentCharacterInputArgument.checkLexicalRoutineOrFunctionCallArgument'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalCurrentCharacterInputArgument__checkLexicalRoutineOrFunctionCallArgument (C_Compiler & inLexique,
                                const cPtr_lexicalCurrentCharacterInputArgument * operand_6773,
                                GGS_lexiqueAnalysisContext & /* var_cas_ioLexiqueAnalysisContext */,
                                GGS_lexicalTypeEnum  var_cas_inLexicalRoutineFormalArgumentType
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_6773 != NULL) {
    if (((GGS_lexicalTypeEnum::constructor_lexicalType_char (inLexique COMMA_HERE)).operator_isNotEqual (var_cas_inLexicalRoutineFormalArgumentType)).isBuiltAndTrue ()) {
      operand_6773->mLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, (((GGS_string ("type error, current character value has @char ")).operator_concat (GGS_string (" type, but lexical routine prototype requires an "))).operator_concat (var_cas_inLexicalRoutineFormalArgumentType.reader_lexicalTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (165)))).operator_concat (GGS_string (" type value")) COMMA_SOURCE_FILE_AT_LINE (167)) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@lexicalFunctionInputArgument.checkLexicalRoutineOrFunctionCallArgument'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalFunctionInputArgument__checkLexicalRoutineOrFunctionCallArgument (C_Compiler & inLexique,
                                const cPtr_lexicalFunctionInputArgument * operand_7390,
                                GGS_lexiqueAnalysisContext & var_cas_ioLexiqueAnalysisContext,
                                GGS_lexicalTypeEnum  var_cas_inLexicalRoutineFormalArgumentType
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7390 != NULL) {
    GGS_lexicalFunctionFormalArgumentList  var_cas_lexicalFormalTypeList ;
    GGS_lexicalTypeEnum var_cas_returnedLexicalFormalType ;
    GGS_string var_cas_replacementFunctionName ;
    const GGS_lexicalFunctionMap  _temp_7736 = var_cas_ioLexiqueAnalysisContext.reader_mLexicalFunctionMap (inLexique COMMA_SOURCE_FILE_AT_LINE (180)) ;
    if (_temp_7736.isBuilt ()) {
      _temp_7736 (HERE)->method_searchKey (inLexique, operand_7390->mFunctionName, var_cas_lexicalFormalTypeList, var_cas_returnedLexicalFormalType, var_cas_replacementFunctionName COMMA_SOURCE_FILE_AT_LINE (180)) ;
    }
    if (((var_cas_replacementFunctionName).operator_isNotEqual (GGS_string (""))).isBuiltAndTrue ()) {
      operand_7390->mFunctionName.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, ((GGS_string ("obsolete lexical function, replaced by '")).operator_concat (var_cas_replacementFunctionName)).operator_concat (GGS_string ("'")) COMMA_SOURCE_FILE_AT_LINE (188)) ;
    }
    if (((var_cas_returnedLexicalFormalType).operator_isNotEqual (var_cas_inLexicalRoutineFormalArgumentType)).isBuiltAndTrue ()) {
      operand_7390->mFunctionName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("type error, the function returns an ")).operator_concat (var_cas_returnedLexicalFormalType.reader_lexicalTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (193)))).operator_concat (GGS_string (" value, but lexical routine prototype requires an "))).operator_concat (var_cas_inLexicalRoutineFormalArgumentType.reader_lexicalTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (195)))).operator_concat (GGS_string (" value")) COMMA_SOURCE_FILE_AT_LINE (197)) ;
    }
    if (((var_cas_lexicalFormalTypeList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (199))).operator_isNotEqual (operand_7390->mFunctionActualArgumentList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (199)))).isBuiltAndTrue ()) {
      operand_7390->mFunctionName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("this lexical function names ")).operator_concat (operand_7390->mFunctionActualArgumentList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (201)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (201)))).operator_concat (GGS_string (" actual argument(s), but the prototype requires "))).operator_concat (var_cas_lexicalFormalTypeList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (203)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (203)))).operator_concat (GGS_string (" actual argument(s)")) COMMA_SOURCE_FILE_AT_LINE (204)) ;
    }
    {
      GGS_lexicalFunctionFormalArgumentList::cEnumerator enumerator_8832 (var_cas_lexicalFormalTypeList, true) ;
      const GGS_lexicalFunctionFormalArgumentList::cElement * operand_8832 = NULL ;
      GGS_lexicalFunctionCallActualArgumentList::cEnumerator enumerator_8861 (operand_7390->mFunctionActualArgumentList, true) ;
      const GGS_lexicalFunctionCallActualArgumentList::cElement * operand_8861 = NULL ;
      while (((operand_8832 = enumerator_8832.nextObject ()))
          && ((operand_8861 = enumerator_8861.nextObject ()))) {
        macroValidPointer (operand_8832) ;
        macroValidPointer (operand_8861) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@abstractLexicalRoutineActualArgument.checkLexicalRoutineCallArgument'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__abstractLexicalRoutineActualArgument__checkLexicalRoutineCallArgument> gDispatchTableFor__abstractLexicalRoutineActualArgument__checkLexicalRoutineCallArgument ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__abstractLexicalRoutineActualArgument__checkLexicalRoutineCallArgument (typeCategoryMethod__abstractLexicalRoutineActualArgument__checkLexicalRoutineCallArgument inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__abstractLexicalRoutineActualArgument__checkLexicalRoutineCallArgument.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__abstractLexicalRoutineActualArgument__checkLexicalRoutineCallArgument
findCategoryMethod__abstractLexicalRoutineActualArgument__checkLexicalRoutineCallArgument (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__abstractLexicalRoutineActualArgument__checkLexicalRoutineCallArgument result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__abstractLexicalRoutineActualArgument__checkLexicalRoutineCallArgument.count ()) {
    result = gDispatchTableFor__abstractLexicalRoutineActualArgument__checkLexicalRoutineCallArgument (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__abstractLexicalRoutineActualArgument__checkLexicalRoutineCallArgument (superClassPtr) ;
      gDispatchTableFor__abstractLexicalRoutineActualArgument__checkLexicalRoutineCallArgument.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@lexicalAttributeInputOutputArgument.checkLexicalRoutineCallArgument'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalAttributeInputOutputArgument__checkLexicalRoutineCallArgument (C_Compiler & inLexique,
                                const cPtr_lexicalAttributeInputOutputArgument * operand_9748,
                                GGS_lexiqueAnalysisContext & var_cas_ioLexiqueAnalysisContext,
                                GGS_lexicalArgumentMode  var_cas_inLexicalRoutineFormalArgumentMode,
                                GGS_lexicalTypeEnum  var_cas_inLexicalRoutineFormalArgumentType
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9748 != NULL) {
    GGS_lexicalTypeEnum var_cas_attributeLexicalType ;
    const GGS_lexicalAttributeMap  _temp_10052 = var_cas_ioLexiqueAnalysisContext.reader_mLexicalAttributeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (234)) ;
    if (_temp_10052.isBuilt ()) {
      _temp_10052 (HERE)->method_searchKey (inLexique, operand_9748->mAttributeName, var_cas_attributeLexicalType COMMA_SOURCE_FILE_AT_LINE (234)) ;
    }
    if (((var_cas_attributeLexicalType).operator_isNotEqual (var_cas_inLexicalRoutineFormalArgumentType)).isBuiltAndTrue ()) {
      operand_9748->mAttributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("type error, attribute type is ")).operator_concat (var_cas_attributeLexicalType.reader_lexicalTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (241)))).operator_concat (GGS_string (" type, but lexical routine prototype requires "))).operator_concat (var_cas_inLexicalRoutineFormalArgumentType.reader_lexicalTypeName (inLexique COMMA_SOURCE_FILE_AT_LINE (243)))).operator_concat (GGS_string (" type")) COMMA_SOURCE_FILE_AT_LINE (245)) ;
    }
    if (((var_cas_inLexicalRoutineFormalArgumentMode).operator_isNotEqual (GGS_lexicalArgumentMode::constructor_lexicalInputOutputMode (inLexique COMMA_HERE))).isBuiltAndTrue ()) {
      operand_9748->mActualPassingModeLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the output mode (!) is required here, not an output/input mode") COMMA_SOURCE_FILE_AT_LINE (249)) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@lexicalFormalInputArgument.checkLexicalRoutineCallArgument'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalFormalInputArgument__checkLexicalRoutineCallArgument (C_Compiler & inLexique,
                                const cPtr_lexicalFormalInputArgument * operand_10835,
                                GGS_lexiqueAnalysisContext & var_cas_ioLexiqueAnalysisContext,
                                GGS_lexicalArgumentMode  var_cas_inLexicalRoutineFormalArgumentMode,
                                GGS_lexicalTypeEnum  var_cas_inLexicalRoutineFormalArgumentType
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10835 != NULL) {
    GGS_lexicalTypeEnum var_cas_attributeLexicalType ;
    const GGS_lexicalRoutineOrFunctionFormalInputArgument  _temp_11161 = operand_10835->mRoutineOrFunctionFormalInputArgument ;
    if (_temp_11161.isBuilt ()) {
      typeCategoryMethod__lexicalRoutineOrFunctionFormalInputArgument__checkLexicalRoutineOrFunctionCallArgument _method = findCategoryMethod__lexicalRoutineOrFunctionFormalInputArgument__checkLexicalRoutineOrFunctionCallArgument (_temp_11161._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_11161 (HERE), var_cas_ioLexiqueAnalysisContext, var_cas_inLexicalRoutineFormalArgumentType COMMA_SOURCE_FILE_AT_LINE (261)) ;
      }
    }
    if (((var_cas_inLexicalRoutineFormalArgumentMode).operator_isNotEqual (GGS_lexicalArgumentMode::constructor_lexicalInputMode (inLexique COMMA_HERE))).isBuiltAndTrue ()) {
      operand_10835->mActualPassingModeLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the output/input mode (!\?) is required here, not an input mode") COMMA_SOURCE_FILE_AT_LINE (268)) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@lexicalInstruction.checkLexicalInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__lexicalInstruction__checkLexicalInstruction> gDispatchTableFor__lexicalInstruction__checkLexicalInstruction ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__lexicalInstruction__checkLexicalInstruction (typeCategoryMethod__lexicalInstruction__checkLexicalInstruction inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__lexicalInstruction__checkLexicalInstruction.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__lexicalInstruction__checkLexicalInstruction
findCategoryMethod__lexicalInstruction__checkLexicalInstruction (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__lexicalInstruction__checkLexicalInstruction result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__lexicalInstruction__checkLexicalInstruction.count ()) {
    result = gDispatchTableFor__lexicalInstruction__checkLexicalInstruction (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__lexicalInstruction__checkLexicalInstruction (superClassPtr) ;
      gDispatchTableFor__lexicalInstruction__checkLexicalInstruction.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@lexicalStructuredSendInstruction.checkLexicalInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalStructuredSendInstruction__checkLexicalInstruction (C_Compiler & inLexique,
                                const cPtr_lexicalStructuredSendInstruction * operand_11990,
                                GGS_lexiqueAnalysisContext & var_cas_ioLexiqueAnalysisContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11990 != NULL) {
    {
      GGS_lexicalSendSearchList::cEnumerator enumerator_12078 (operand_11990->mLexicalSendSearchList, true) ;
      const GGS_lexicalSendSearchList::cElement * operand_12078 = NULL ;
      while (((operand_12078 = enumerator_12078.nextObject ()))) {
        macroValidPointer (operand_12078) ;
        GGS_lexicalTypeEnum automatic_var_1 ;
        const GGS_lexicalAttributeMap  _temp_12144 = var_cas_ioLexiqueAnalysisContext.reader_mLexicalAttributeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (285)) ;
        if (_temp_12144.isBuilt ()) {
          _temp_12144 (HERE)->method_searchKey (inLexique, operand_12078->mAttributeName, automatic_var_1 COMMA_SOURCE_FILE_AT_LINE (285)) ;
        }
      }
    }
    const GGS_lexicalSendDefaultAction  _temp_12237 = operand_11990->mLexicalSendDefaultAction ;
    if (_temp_12237.isBuilt ()) {
      typeCategoryMethod__lexicalSendDefaultAction__checkLexicalDefaultAction _method = findCategoryMethod__lexicalSendDefaultAction__checkLexicalDefaultAction (_temp_12237._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_12237 (HERE), var_cas_ioLexiqueAnalysisContext COMMA_SOURCE_FILE_AT_LINE (287)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@lexicalSimpleSendInstruction.checkLexicalInstruction'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalSimpleSendInstruction__checkLexicalInstruction (C_Compiler & inLexique,
                                const cPtr_lexicalSimpleSendInstruction * operand_12430,
                                GGS_lexiqueAnalysisContext & var_cas_ioLexiqueAnalysisContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12430 != NULL) {
    GGS_lexicalTypeList  automatic_var_2 ;
    const GGS_terminalMap  _temp_12538 = var_cas_ioLexiqueAnalysisContext.reader_mTerminalMap (inLexique COMMA_SOURCE_FILE_AT_LINE (295)) ;
    if (_temp_12538.isBuilt ()) {
      _temp_12538 (HERE)->method_searchKey (inLexique, operand_12430->mSentTerminal, automatic_var_2 COMMA_SOURCE_FILE_AT_LINE (295)) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@lexicalRepeatInstruction.checkLexicalInstruction'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalRepeatInstruction__checkLexicalInstruction (C_Compiler & inLexique,
                                const cPtr_lexicalRepeatInstruction * operand_12718,
                                GGS_lexiqueAnalysisContext & var_cas_ioLexiqueAnalysisContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12718 != NULL) {
    {
      GGS_lexicalWhileBranchList::cEnumerator enumerator_12807 (operand_12718->mLexicalWhileBranchList, true) ;
      const GGS_lexicalWhileBranchList::cElement * operand_12807 = NULL ;
      while (((operand_12807 = enumerator_12807.nextObject ()))) {
        macroValidPointer (operand_12807) ;
        const GGS_lexicalExpression  _temp_12855 = operand_12807->mWhileExpression ;
        if (_temp_12855.isBuilt ()) {
          typeCategoryMethod__lexicalExpression__checkLexicalExpression _method = findCategoryMethod__lexicalExpression__checkLexicalExpression (_temp_12855._galgasObjectRunTimeInfo ()) ;
          if (_method != NULL) {
            _method (inLexique, _temp_12855 (HERE), var_cas_ioLexiqueAnalysisContext COMMA_SOURCE_FILE_AT_LINE (304)) ;
          }
        }
        {
          GGS_lexicalInstructionList::cEnumerator enumerator_12920 (operand_12807->mWhileInstructionList, true) ;
          const GGS_lexicalInstructionList::cElement * operand_12920 = NULL ;
          while (((operand_12920 = enumerator_12920.nextObject ()))) {
            macroValidPointer (operand_12920) ;
            const GGS_lexicalInstruction  _temp_12967 = operand_12920->mInstruction ;
            if (_temp_12967.isBuilt ()) {
              typeCategoryMethod__lexicalInstruction__checkLexicalInstruction _method = findCategoryMethod__lexicalInstruction__checkLexicalInstruction (_temp_12967._galgasObjectRunTimeInfo ()) ;
              if (_method != NULL) {
                _method (inLexique, _temp_12967 (HERE), var_cas_ioLexiqueAnalysisContext COMMA_SOURCE_FILE_AT_LINE (306)) ;
              }
            }
          }
        }
      }
    }
    {
      GGS_lexicalInstructionList::cEnumerator enumerator_13067 (operand_12718->mRepeatedInstructionList, true) ;
      const GGS_lexicalInstructionList::cElement * operand_13067 = NULL ;
      while (((operand_13067 = enumerator_13067.nextObject ()))) {
        macroValidPointer (operand_13067) ;
        const GGS_lexicalInstruction  _temp_13112 = operand_13067->mInstruction ;
        if (_temp_13112.isBuilt ()) {
          typeCategoryMethod__lexicalInstruction__checkLexicalInstruction _method = findCategoryMethod__lexicalInstruction__checkLexicalInstruction (_temp_13112._galgasObjectRunTimeInfo ()) ;
          if (_method != NULL) {
            _method (inLexique, _temp_13112 (HERE), var_cas_ioLexiqueAnalysisContext COMMA_SOURCE_FILE_AT_LINE (310)) ;
          }
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@lexicalSelectInstruction.checkLexicalInstruction'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalSelectInstruction__checkLexicalInstruction (C_Compiler & inLexique,
                                const cPtr_lexicalSelectInstruction * operand_13318,
                                GGS_lexiqueAnalysisContext & var_cas_ioLexiqueAnalysisContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13318 != NULL) {
    {
      GGS_lexicalSelectBranchList::cEnumerator enumerator_13408 (operand_13318->mLexicalSelectBranchList, true) ;
      const GGS_lexicalSelectBranchList::cElement * operand_13408 = NULL ;
      while (((operand_13408 = enumerator_13408.nextObject ()))) {
        macroValidPointer (operand_13408) ;
        {
          GGS_lexicalInstructionList::cEnumerator enumerator_13446 (operand_13408->mSelectInstructionList, true) ;
          const GGS_lexicalInstructionList::cElement * operand_13446 = NULL ;
          while (((operand_13446 = enumerator_13446.nextObject ()))) {
            macroValidPointer (operand_13446) ;
            const GGS_lexicalInstruction  _temp_13493 = operand_13446->mInstruction ;
            if (_temp_13493.isBuilt ()) {
              typeCategoryMethod__lexicalInstruction__checkLexicalInstruction _method = findCategoryMethod__lexicalInstruction__checkLexicalInstruction (_temp_13493._galgasObjectRunTimeInfo ()) ;
              if (_method != NULL) {
                _method (inLexique, _temp_13493 (HERE), var_cas_ioLexiqueAnalysisContext COMMA_SOURCE_FILE_AT_LINE (321)) ;
              }
            }
          }
        }
      }
    }
    {
      GGS_lexicalInstructionList::cEnumerator enumerator_13592 (operand_13318->mDefaultInstructionList, true) ;
      const GGS_lexicalInstructionList::cElement * operand_13592 = NULL ;
      while (((operand_13592 = enumerator_13592.nextObject ()))) {
        macroValidPointer (operand_13592) ;
        const GGS_lexicalInstruction  _temp_13637 = operand_13592->mInstruction ;
        if (_temp_13637.isBuilt ()) {
          typeCategoryMethod__lexicalInstruction__checkLexicalInstruction _method = findCategoryMethod__lexicalInstruction__checkLexicalInstruction (_temp_13637._galgasObjectRunTimeInfo ()) ;
          if (_method != NULL) {
            _method (inLexique, _temp_13637 (HERE), var_cas_ioLexiqueAnalysisContext COMMA_SOURCE_FILE_AT_LINE (325)) ;
          }
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@lexicalRoutineInstruction.checkLexicalInstruction'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalRoutineInstruction__checkLexicalInstruction (C_Compiler & inLexique,
                                const cPtr_lexicalRoutineInstruction * operand_13844,
                                GGS_lexiqueAnalysisContext & var_cas_ioLexiqueAnalysisContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13844 != NULL) {
    GGS_lexicalRoutineFormalArgumentList  var_cas_lexicalRoutineFormalArgumentList ;
    GGS_stringlist  var_cas_routineErrorMessageList ;
    GGS_string var_cas_replacementRoutineName ;
    const GGS_lexicalRoutineMap  _temp_14111 = var_cas_ioLexiqueAnalysisContext.reader_mLexicalRoutineMessageMap (inLexique COMMA_SOURCE_FILE_AT_LINE (337)) ;
    if (_temp_14111.isBuilt ()) {
      _temp_14111 (HERE)->method_searchKey (inLexique, operand_13844->mRoutineName, var_cas_lexicalRoutineFormalArgumentList, var_cas_routineErrorMessageList, var_cas_replacementRoutineName COMMA_SOURCE_FILE_AT_LINE (337)) ;
    }
    if (((var_cas_replacementRoutineName).operator_isNotEqual (GGS_string (""))).isBuiltAndTrue ()) {
      operand_13844->mRoutineName.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, ((GGS_string ("obsolete lexical routine, replaced by '")).operator_concat (var_cas_replacementRoutineName)).operator_concat (GGS_string ("'")) COMMA_SOURCE_FILE_AT_LINE (345)) ;
    }
    if (((var_cas_lexicalRoutineFormalArgumentList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (348))).operator_isNotEqual (operand_13844->mActualArgumentList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (348)))).isBuiltAndTrue ()) {
      operand_13844->mRoutineName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("this lexical routine call names ")).operator_concat (operand_13844->mActualArgumentList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (350)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (350)))).operator_concat (GGS_string (" actual argument(s), but the lexical routine prototype requires "))).operator_concat (var_cas_lexicalRoutineFormalArgumentList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (352)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (352)))).operator_concat (GGS_string (" actual argument(s)")) COMMA_SOURCE_FILE_AT_LINE (353)) ;
    }
    {
      GGS_lexicalRoutineFormalArgumentList::cEnumerator enumerator_14887 (var_cas_lexicalRoutineFormalArgumentList, true) ;
      const GGS_lexicalRoutineFormalArgumentList::cElement * operand_14887 = NULL ;
      GGS_lexicalRoutineCallActualArgumentList::cEnumerator enumerator_14908 (operand_13844->mActualArgumentList, true) ;
      const GGS_lexicalRoutineCallActualArgumentList::cElement * operand_14908 = NULL ;
      while (((operand_14887 = enumerator_14887.nextObject ()))
          && ((operand_14908 = enumerator_14908.nextObject ()))) {
        macroValidPointer (operand_14887) ;
        macroValidPointer (operand_14908) ;
        const GGS_abstractLexicalRoutineActualArgument  _temp_14978 = operand_14908->mLexicalRoutineActualArgument ;
        if (_temp_14978.isBuilt ()) {
          typeCategoryMethod__abstractLexicalRoutineActualArgument__checkLexicalRoutineCallArgument _method = findCategoryMethod__abstractLexicalRoutineActualArgument__checkLexicalRoutineCallArgument (_temp_14978._galgasObjectRunTimeInfo ()) ;
          if (_method != NULL) {
            _method (inLexique, _temp_14978 (HERE), var_cas_ioLexiqueAnalysisContext, operand_14887->mLexicalArgumentMode, operand_14887->mLexicalType COMMA_SOURCE_FILE_AT_LINE (356)) ;
          }
        }
      }
    }
    if (((var_cas_routineErrorMessageList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (363))).operator_isNotEqual (operand_13844->mErrorMessageList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (363)))).isBuiltAndTrue ()) {
      operand_13844->mRoutineName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("this lexical routine call names ")).operator_concat (operand_13844->mErrorMessageList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (365)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (365)))).operator_concat (GGS_string (" error message(s), but the lexical routine prototype requires "))).operator_concat (var_cas_routineErrorMessageList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (367)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (367)))).operator_concat (GGS_string (" error message(s)")) COMMA_SOURCE_FILE_AT_LINE (368)) ;
    }
    {
      GGS_lstringlist::cEnumerator enumerator_15517 (operand_13844->mErrorMessageList, true) ;
      const GGS_lstringlist::cElement * operand_15517 = NULL ;
      while (((operand_15517 = enumerator_15517.nextObject ()))) {
        macroValidPointer (operand_15517) ;
        elementOf_GGS_lexicalMessageMap * operand_15582 = (elementOf_GGS_lexicalMessageMap *) var_cas_ioLexiqueAnalysisContext.mLexicalMessageMap.searchForWithInstruction (inLexique, operand_15517->mValue, GGS_lexicalMessageMap::kSearchMessage_searchKey COMMA_SOURCE_FILE_AT_LINE (371)) ;
        if (NULL != operand_15582) {
          operand_15582->mInfo.mMessageIsUsed = GGS_bool (true) ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@lexicalLogInstruction.checkLexicalInstruction'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalLogInstruction__checkLexicalInstruction (C_Compiler &,
                                const cPtr_lexicalLogInstruction * operand_15825,
                                GGS_lexiqueAnalysisContext & /* var_cas_ioLexiqueAnalysisContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_15825 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@lexicalRewindInstruction.checkLexicalInstruction'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalRewindInstruction__checkLexicalInstruction (C_Compiler &,
                                const cPtr_lexicalRewindInstruction * operand_16046,
                                GGS_lexiqueAnalysisContext & /* var_cas_ioLexiqueAnalysisContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16046 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@lexicalDropInstruction.checkLexicalInstruction'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalDropInstruction__checkLexicalInstruction (C_Compiler &,
                                const cPtr_lexicalDropInstruction * operand_16265,
                                GGS_lexiqueAnalysisContext & /* var_cas_ioLexiqueAnalysisContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16265 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@lexicalTagInstruction.checkLexicalInstruction'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalTagInstruction__checkLexicalInstruction (C_Compiler &,
                                const cPtr_lexicalTagInstruction * operand_16483,
                                GGS_lexiqueAnalysisContext & /* var_cas_ioLexiqueAnalysisContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16483 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@lexicalErrorInstruction.checkLexicalInstruction'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalErrorInstruction__checkLexicalInstruction (C_Compiler & inLexique,
                                const cPtr_lexicalErrorInstruction * operand_16703,
                                GGS_lexiqueAnalysisContext & var_cas_ioLexiqueAnalysisContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16703 != NULL) {
    elementOf_GGS_lexicalMessageMap * operand_16811 = (elementOf_GGS_lexicalMessageMap *) var_cas_ioLexiqueAnalysisContext.mLexicalMessageMap.searchForWithInstruction (inLexique, operand_16703->mErrorMessageName, GGS_lexicalMessageMap::kSearchMessage_searchKey COMMA_SOURCE_FILE_AT_LINE (410)) ;
    if (NULL != operand_16811) {
      operand_16811->mInfo.mMessageIsUsed = GGS_bool (true) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@lexicalWarningInstruction.checkLexicalInstruction'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalWarningInstruction__checkLexicalInstruction (C_Compiler & inLexique,
                                const cPtr_lexicalWarningInstruction * operand_17045,
                                GGS_lexiqueAnalysisContext & var_cas_ioLexiqueAnalysisContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17045 != NULL) {
    elementOf_GGS_lexicalMessageMap * operand_17153 = (elementOf_GGS_lexicalMessageMap *) var_cas_ioLexiqueAnalysisContext.mLexicalMessageMap.searchForWithInstruction (inLexique, operand_17045->mWarningMessageName, GGS_lexicalMessageMap::kSearchMessage_searchKey COMMA_SOURCE_FILE_AT_LINE (420)) ;
    if (NULL != operand_17153) {
      operand_17153->mInfo.mMessageIsUsed = GGS_bool (true) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@abstractLexicalRule.checkLexicalRule'  *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__abstractLexicalRule__checkLexicalRule> gDispatchTableFor__abstractLexicalRule__checkLexicalRule ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__abstractLexicalRule__checkLexicalRule (typeCategoryMethod__abstractLexicalRule__checkLexicalRule inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__abstractLexicalRule__checkLexicalRule.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__abstractLexicalRule__checkLexicalRule
findCategoryMethod__abstractLexicalRule__checkLexicalRule (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__abstractLexicalRule__checkLexicalRule result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__abstractLexicalRule__checkLexicalRule.count ()) {
    result = gDispatchTableFor__abstractLexicalRule__checkLexicalRule (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__abstractLexicalRule__checkLexicalRule (superClassPtr) ;
      gDispatchTableFor__abstractLexicalRule__checkLexicalRule.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@lexicalImplicitRule.checkLexicalRule'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalImplicitRule__checkLexicalRule (C_Compiler &,
                                const cPtr_lexicalImplicitRule * operand_17728,
                                GGS_lexiqueAnalysisContext & /* var_cas_ioLexiqueAnalysisContext */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17728 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@lexicalExplicitRule.checkLexicalRule'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lexicalExplicitRule__checkLexicalRule (C_Compiler & inLexique,
                                const cPtr_lexicalExplicitRule * operand_17937,
                                GGS_lexiqueAnalysisContext & var_cas_ioLexiqueAnalysisContext
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17937 != NULL) {
    {
      GGS_lexicalInstructionList::cEnumerator enumerator_18019 (operand_17937->mInstructionList, true) ;
      const GGS_lexicalInstructionList::cElement * operand_18019 = NULL ;
      while (((operand_18019 = enumerator_18019.nextObject ()))) {
        macroValidPointer (operand_18019) ;
        const GGS_lexicalInstruction  _temp_18064 = operand_18019->mInstruction ;
        if (_temp_18064.isBuilt ()) {
          typeCategoryMethod__lexicalInstruction__checkLexicalInstruction _method = findCategoryMethod__lexicalInstruction__checkLexicalInstruction (_temp_18064._galgasObjectRunTimeInfo ()) ;
          if (_method != NULL) {
            _method (inLexique, _temp_18064 (HERE), var_cas_ioLexiqueAnalysisContext COMMA_SOURCE_FILE_AT_LINE (446)) ;
          }
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "compileLexiqueComponent"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileLexiqueComponent (C_Compiler & inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                const GGS_string  /* var_cas_inOutputDirectory */ COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_compileLexiqueComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_lexiqueComponentRoot  var_cas_lexiqueComponentRoot ;
  const GGS_string _depExtension = GGS_string ("") ;
  const GGS_string _depPath = GGS_string ("") ;
  if (_depExtension.isBuilt () && _depPath.isBuilt ()) {
    lexiqueLL1grammar::_performSourceFileParsing_ (inLexique,
                                  _depExtension.string (),
                                  _depPath.string (),
                                  NULL,
                                  var_cas_inSourceFile,
                                  var_cas_lexiqueComponentRoot
                                  COMMA_SOURCE_FILE_AT_LINE (459)) ;
  }
  GGS_lstring  var_cas_componentName ;
  var_cas_componentName = var_cas_lexiqueComponentRoot.reader_mLexiqueComponentName (inLexique COMMA_SOURCE_FILE_AT_LINE (461)) ;
  GGS_string var_cas_basename ;
  var_cas_basename = var_cas_inSourceFile.ggs_string ().reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (462)).reader_stringByDeletingPathExtension (inLexique COMMA_SOURCE_FILE_AT_LINE (462)) ;
  if (((var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (463))).operator_isNotEqual (var_cas_basename)).isBuiltAndTrue ()) {
    var_cas_componentName.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, ((((GGS_string ("GALGAS checks "
      "the component name ('")).operator_concat (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (465)))).operator_concat (GGS_string ("') against the source file base name ('"))).operator_concat (var_cas_basename)).operator_concat (GGS_string ("'): they should be identical")) COMMA_SOURCE_FILE_AT_LINE (467)) ;
  }
  GGS_lexicalTypeMap  var_cas_lexicalTypeMap ;
  var_cas_lexicalTypeMap = GGS_lexicalTypeMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  var_cas_lexicalTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("string"), GGS_location (inLexique) COMMA_HERE), GGS_lexicalTypeEnum::constructor_lexicalType_string (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (471)) ;
  var_cas_lexicalTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("char"), GGS_location (inLexique) COMMA_HERE), GGS_lexicalTypeEnum::constructor_lexicalType_char (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (472)) ;
  var_cas_lexicalTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("uint"), GGS_location (inLexique) COMMA_HERE), GGS_lexicalTypeEnum::constructor_lexicalType_uint (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (473)) ;
  var_cas_lexicalTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("uint64"), GGS_location (inLexique) COMMA_HERE), GGS_lexicalTypeEnum::constructor_lexicalType_uint64 (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (474)) ;
  var_cas_lexicalTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("sint"), GGS_location (inLexique) COMMA_HERE), GGS_lexicalTypeEnum::constructor_lexicalType_sint (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (475)) ;
  var_cas_lexicalTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("sint64"), GGS_location (inLexique) COMMA_HERE), GGS_lexicalTypeEnum::constructor_lexicalType_sint64 (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (476)) ;
  var_cas_lexicalTypeMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("double"), GGS_location (inLexique) COMMA_HERE), GGS_lexicalTypeEnum::constructor_lexicalType_double (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (477)) ;
  GGS_lexicalRoutineMap  var_cas_lexicalRoutineMap ;
  ::routine_buildLexicalRoutineMap (inLexique,  var_cas_lexicalRoutineMap COMMA_SOURCE_FILE_AT_LINE (480)) ;
  GGS_lexicalFunctionMap  var_cas_lexicalFunctionMap ;
  ::routine_buildLexicalFunctionMap (inLexique,  var_cas_lexicalFunctionMap COMMA_SOURCE_FILE_AT_LINE (483)) ;
  GGS_lexiqueAnalysisContext var_cas_lexiqueAnalysisContext ;
  var_cas_lexiqueAnalysisContext = GGS_lexiqueAnalysisContext::constructor_new (var_cas_lexicalRoutineMap, var_cas_lexicalFunctionMap, GGS_lexicalMessageMap ::constructor_emptyMap (inLexique COMMA_HERE), GGS_terminalMap ::constructor_emptyMap (inLexique COMMA_HERE), GGS_lexicalAttributeMap ::constructor_emptyMap (inLexique COMMA_HERE), GGS_lexicalExplicitTokenListMapMap ::constructor_emptyMap (inLexique COMMA_HERE)) ;
  {
    GGS_lexicalAttributeList::cEnumerator enumerator_20543 (var_cas_lexiqueComponentRoot.reader_mLexicalAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (493)), true) ;
    const GGS_lexicalAttributeList::cElement * operand_20543 = NULL ;
    while (((operand_20543 = enumerator_20543.nextObject ()))) {
      macroValidPointer (operand_20543) ;
      if ((var_cas_lexicalTypeMap.reader_hasKey (inLexique, operand_20543->mTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (494)) COMMA_SOURCE_FILE_AT_LINE (494))).isBuiltAndTrue ()) {
        GGS_lexicalTypeEnum var_cas_lexicalType ;
        const GGS_lexicalTypeMap  _temp_20714 = var_cas_lexicalTypeMap ;
        if (_temp_20714.isBuilt ()) {
          _temp_20714 (HERE)->method_searchKey (inLexique, operand_20543->mTypeName, var_cas_lexicalType COMMA_SOURCE_FILE_AT_LINE (496)) ;
        }
        var_cas_lexiqueAnalysisContext.mLexicalAttributeMap.modifier_insertKey (inLexique, operand_20543->mName, var_cas_lexicalType COMMA_SOURCE_FILE_AT_LINE (497)) ;
      }else{
        GGS_string var_cas_m ;
        var_cas_m = GGS_string ("") ;
        var_cas_m.appendCString ("the @") ;
        var_cas_m.dotAssign_operation (operand_20543->mTypeName) ;
        var_cas_m.appendCString (" type is not a valid lexical attribute type; are allowed:") ;
        GGS_bool var_cas_firstLoop ;
        var_cas_firstLoop = GGS_bool (true) ;
        {
          GGS_lexicalTypeMap::cEnumerator enumerator_21016 (var_cas_lexicalTypeMap, true) ;
          const GGS_lexicalTypeMap::cElement * operand_21016 = enumerator_21016.nextObject () ;
          if ((operand_21016 != NULL)) {
            bool _foreach_loop_21016 ;
            do{
              macroValidPointer (operand_21016) ;
              var_cas_m.appendCString (" @") ;
              var_cas_m.dotAssign_operation (operand_21016->mKey) ;
              operand_21016 = enumerator_21016.nextObject () ;
              _foreach_loop_21016 = ((operand_21016 != NULL)) ;
              if (_foreach_loop_21016) {
                var_cas_m.appendCString (",") ;
              }
            }while (_foreach_loop_21016) ;
          }
        }
        operand_20543->mTypeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_m COMMA_SOURCE_FILE_AT_LINE (508)) ;
      }
    }
  }
  {
    GGS_terminalDeclarationList::cEnumerator enumerator_21226 (var_cas_lexiqueComponentRoot.reader_mTerminalDeclarationList (inLexique COMMA_SOURCE_FILE_AT_LINE (511)), true) ;
    const GGS_terminalDeclarationList::cElement * operand_21226 = NULL ;
    while (((operand_21226 = enumerator_21226.nextObject ()))) {
      macroValidPointer (operand_21226) ;
      GGS_lexicalTypeList  var_cas_argumentTypeList ;
      var_cas_argumentTypeList = GGS_lexicalTypeList ::constructor_emptyList () ;
      {
        GGS_lstringlist::cEnumerator enumerator_21358 (operand_21226->mSentAttributeList, true) ;
        const GGS_lstringlist::cElement * operand_21358 = NULL ;
        while (((operand_21358 = enumerator_21358.nextObject ()))) {
          macroValidPointer (operand_21358) ;
          GGS_lexicalTypeEnum var_cas_attributeLexicalType ;
          const GGS_lexicalAttributeMap  _temp_21497 = var_cas_lexiqueAnalysisContext.reader_mLexicalAttributeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (515)) ;
          if (_temp_21497.isBuilt ()) {
            _temp_21497 (HERE)->method_searchKey (inLexique, operand_21358->mValue, var_cas_attributeLexicalType COMMA_SOURCE_FILE_AT_LINE (515)) ;
          }
          var_cas_argumentTypeList._addAssign_operation (var_cas_attributeLexicalType) ;
        }
      }
      var_cas_lexiqueAnalysisContext.mTerminalMap.modifier_insertKey (inLexique, operand_21226->mName, var_cas_argumentTypeList COMMA_SOURCE_FILE_AT_LINE (518)) ;
    }
  }
  {
    GGS_lexicalListDeclarationList::cEnumerator enumerator_21715 (var_cas_lexiqueComponentRoot.reader_mLexicalListDeclarationList (inLexique COMMA_SOURCE_FILE_AT_LINE (520)), true) ;
    const GGS_lexicalListDeclarationList::cElement * operand_21715 = NULL ;
    while (((operand_21715 = enumerator_21715.nextObject ()))) {
      macroValidPointer (operand_21715) ;
      GGS_lexicalTypeList  var_cas_argumentTypeList ;
      var_cas_argumentTypeList = GGS_lexicalTypeList ::constructor_emptyList () ;
      {
        GGS_lstringlist::cEnumerator enumerator_21850 (operand_21715->mSentAttributeList, true) ;
        const GGS_lstringlist::cElement * operand_21850 = NULL ;
        while (((operand_21850 = enumerator_21850.nextObject ()))) {
          macroValidPointer (operand_21850) ;
          GGS_lexicalTypeEnum var_cas_attributeLexicalType ;
          const GGS_lexicalAttributeMap  _temp_21988 = var_cas_lexiqueAnalysisContext.reader_mLexicalAttributeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (524)) ;
          if (_temp_21988.isBuilt ()) {
            _temp_21988 (HERE)->method_searchKey (inLexique, operand_21850->mValue, var_cas_attributeLexicalType COMMA_SOURCE_FILE_AT_LINE (524)) ;
          }
          var_cas_argumentTypeList._addAssign_operation (var_cas_attributeLexicalType) ;
        }
      }
      GGS_lexicalExplicitTokenListMap  var_cas_lexicalTokenListMap ;
      var_cas_lexicalTokenListMap = GGS_lexicalExplicitTokenListMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
      {
        GGS_lexicalListEntryList::cEnumerator enumerator_22186 (operand_21715->mEntryList, true) ;
        const GGS_lexicalListEntryList::cElement * operand_22186 = NULL ;
        while (((operand_22186 = enumerator_22186.nextObject ()))) {
          macroValidPointer (operand_22186) ;
          var_cas_lexiqueAnalysisContext.mTerminalMap.modifier_insertKey (inLexique, operand_22186->mTerminalSpelling, var_cas_argumentTypeList COMMA_SOURCE_FILE_AT_LINE (529)) ;
          var_cas_lexicalTokenListMap.modifier_insertKey (inLexique, operand_22186->mEntrySpelling, operand_22186->mTerminalSpelling, operand_22186->mFeatureList COMMA_SOURCE_FILE_AT_LINE (530)) ;
        }
      }
      var_cas_lexiqueAnalysisContext.mLexicalTokenListMapMap.modifier_insertKey (inLexique, operand_21715->mName, var_cas_lexicalTokenListMap COMMA_SOURCE_FILE_AT_LINE (532)) ;
    }
  }
  {
    GGS_lexicalMessageDeclarationList::cEnumerator enumerator_22575 (var_cas_lexiqueComponentRoot.reader_mLexicalMessageDeclarationList (inLexique COMMA_SOURCE_FILE_AT_LINE (535)), true) ;
    const GGS_lexicalMessageDeclarationList::cElement * operand_22575 = NULL ;
    while (((operand_22575 = enumerator_22575.nextObject ()))) {
      macroValidPointer (operand_22575) ;
      var_cas_lexiqueAnalysisContext.mLexicalMessageMap.modifier_insertKey (inLexique, operand_22575->mMessageName, operand_22575->mMessageValue, GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (536)) ;
    }
  }
  {
    GGS_lexicalRuleList::cEnumerator enumerator_22809 (var_cas_lexiqueComponentRoot.reader_mLexicalRuleList (inLexique COMMA_SOURCE_FILE_AT_LINE (539)), true) ;
    const GGS_lexicalRuleList::cElement * operand_22809 = NULL ;
    while (((operand_22809 = enumerator_22809.nextObject ()))) {
      macroValidPointer (operand_22809) ;
      const GGS_abstractLexicalRule  _temp_22885 = operand_22809->mLexicalRule ;
      if (_temp_22885.isBuilt ()) {
        typeCategoryMethod__abstractLexicalRule__checkLexicalRule _method = findCategoryMethod__abstractLexicalRule__checkLexicalRule (_temp_22885._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (inLexique, _temp_22885 (HERE), var_cas_lexiqueAnalysisContext COMMA_SOURCE_FILE_AT_LINE (540)) ;
        }
      }
    }
  }
  {
    GGS_lexicalMessageMap::cEnumerator enumerator_23007 (var_cas_lexiqueAnalysisContext.reader_mLexicalMessageMap (inLexique COMMA_SOURCE_FILE_AT_LINE (543)), true) ;
    const GGS_lexicalMessageMap::cElement * operand_23007 = NULL ;
    while (((operand_23007 = enumerator_23007.nextObject ()))) {
      macroValidPointer (operand_23007) ;
      if (((operand_23007->mInfo.mMessageIsUsed).operator_not ()).isBuiltAndTrue ()) {
        operand_23007->mKey.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("unused message") COMMA_SOURCE_FILE_AT_LINE (545)) ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_compileLexiqueComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_lexiqueCompilation (void) {
 enterCategoryMethod__lexicalSendDefaultAction__checkLexicalDefaultAction ((typeCategoryMethod__lexicalSendDefaultAction__checkLexicalDefaultAction) category_method__lexicalSendTerminalByDefault__checkLexicalDefaultAction, gClassInfoFor__lexicalSendTerminalByDefault.slotID ()) ;
 enterCategoryMethod__lexicalSendDefaultAction__checkLexicalDefaultAction ((typeCategoryMethod__lexicalSendDefaultAction__checkLexicalDefaultAction) category_method__lexicalErrorByDefault__checkLexicalDefaultAction, gClassInfoFor__lexicalErrorByDefault.slotID ()) ;
 enterCategoryMethod__lexicalExpression__checkLexicalExpression ((typeCategoryMethod__lexicalExpression__checkLexicalExpression) category_method__lexicalOrExpression__checkLexicalExpression, gClassInfoFor__lexicalOrExpression.slotID ()) ;
 enterCategoryMethod__lexicalExpression__checkLexicalExpression ((typeCategoryMethod__lexicalExpression__checkLexicalExpression) category_method__lexicalCharacterMatch__checkLexicalExpression, gClassInfoFor__lexicalCharacterMatch.slotID ()) ;
 enterCategoryMethod__lexicalExpression__checkLexicalExpression ((typeCategoryMethod__lexicalExpression__checkLexicalExpression) category_method__lexicalCharacterSetMatch__checkLexicalExpression, gClassInfoFor__lexicalCharacterSetMatch.slotID ()) ;
 enterCategoryMethod__lexicalExpression__checkLexicalExpression ((typeCategoryMethod__lexicalExpression__checkLexicalExpression) category_method__lexicalCharacterIntervalMatch__checkLexicalExpression, gClassInfoFor__lexicalCharacterIntervalMatch.slotID ()) ;
 enterCategoryMethod__lexicalExpression__checkLexicalExpression ((typeCategoryMethod__lexicalExpression__checkLexicalExpression) category_method__lexicalStringMatch__checkLexicalExpression, gClassInfoFor__lexicalStringMatch.slotID ()) ;
 enterCategoryMethod__lexicalExpression__checkLexicalExpression ((typeCategoryMethod__lexicalExpression__checkLexicalExpression) category_method__lexicalStringNotMatch__checkLexicalExpression, gClassInfoFor__lexicalStringNotMatch.slotID ()) ;
 enterCategoryMethod__lexicalRoutineOrFunctionFormalInputArgument__checkLexicalRoutineOrFunctionCallArgument ((typeCategoryMethod__lexicalRoutineOrFunctionFormalInputArgument__checkLexicalRoutineOrFunctionCallArgument) category_method__lexicalAttributeInputArgument__checkLexicalRoutineOrFunctionCallArgument, gClassInfoFor__lexicalAttributeInputArgument.slotID ()) ;
 enterCategoryMethod__lexicalRoutineOrFunctionFormalInputArgument__checkLexicalRoutineOrFunctionCallArgument ((typeCategoryMethod__lexicalRoutineOrFunctionFormalInputArgument__checkLexicalRoutineOrFunctionCallArgument) category_method__lexicalCharacterInputArgument__checkLexicalRoutineOrFunctionCallArgument, gClassInfoFor__lexicalCharacterInputArgument.slotID ()) ;
 enterCategoryMethod__lexicalRoutineOrFunctionFormalInputArgument__checkLexicalRoutineOrFunctionCallArgument ((typeCategoryMethod__lexicalRoutineOrFunctionFormalInputArgument__checkLexicalRoutineOrFunctionCallArgument) category_method__lexicalCurrentCharacterInputArgument__checkLexicalRoutineOrFunctionCallArgument, gClassInfoFor__lexicalCurrentCharacterInputArgument.slotID ()) ;
 enterCategoryMethod__lexicalRoutineOrFunctionFormalInputArgument__checkLexicalRoutineOrFunctionCallArgument ((typeCategoryMethod__lexicalRoutineOrFunctionFormalInputArgument__checkLexicalRoutineOrFunctionCallArgument) category_method__lexicalFunctionInputArgument__checkLexicalRoutineOrFunctionCallArgument, gClassInfoFor__lexicalFunctionInputArgument.slotID ()) ;
 enterCategoryMethod__abstractLexicalRoutineActualArgument__checkLexicalRoutineCallArgument ((typeCategoryMethod__abstractLexicalRoutineActualArgument__checkLexicalRoutineCallArgument) category_method__lexicalAttributeInputOutputArgument__checkLexicalRoutineCallArgument, gClassInfoFor__lexicalAttributeInputOutputArgument.slotID ()) ;
 enterCategoryMethod__abstractLexicalRoutineActualArgument__checkLexicalRoutineCallArgument ((typeCategoryMethod__abstractLexicalRoutineActualArgument__checkLexicalRoutineCallArgument) category_method__lexicalFormalInputArgument__checkLexicalRoutineCallArgument, gClassInfoFor__lexicalFormalInputArgument.slotID ()) ;
 enterCategoryMethod__lexicalInstruction__checkLexicalInstruction ((typeCategoryMethod__lexicalInstruction__checkLexicalInstruction) category_method__lexicalStructuredSendInstruction__checkLexicalInstruction, gClassInfoFor__lexicalStructuredSendInstruction.slotID ()) ;
 enterCategoryMethod__lexicalInstruction__checkLexicalInstruction ((typeCategoryMethod__lexicalInstruction__checkLexicalInstruction) category_method__lexicalSimpleSendInstruction__checkLexicalInstruction, gClassInfoFor__lexicalSimpleSendInstruction.slotID ()) ;
 enterCategoryMethod__lexicalInstruction__checkLexicalInstruction ((typeCategoryMethod__lexicalInstruction__checkLexicalInstruction) category_method__lexicalRepeatInstruction__checkLexicalInstruction, gClassInfoFor__lexicalRepeatInstruction.slotID ()) ;
 enterCategoryMethod__lexicalInstruction__checkLexicalInstruction ((typeCategoryMethod__lexicalInstruction__checkLexicalInstruction) category_method__lexicalSelectInstruction__checkLexicalInstruction, gClassInfoFor__lexicalSelectInstruction.slotID ()) ;
 enterCategoryMethod__lexicalInstruction__checkLexicalInstruction ((typeCategoryMethod__lexicalInstruction__checkLexicalInstruction) category_method__lexicalRoutineInstruction__checkLexicalInstruction, gClassInfoFor__lexicalRoutineInstruction.slotID ()) ;
 enterCategoryMethod__lexicalInstruction__checkLexicalInstruction ((typeCategoryMethod__lexicalInstruction__checkLexicalInstruction) category_method__lexicalLogInstruction__checkLexicalInstruction, gClassInfoFor__lexicalLogInstruction.slotID ()) ;
 enterCategoryMethod__lexicalInstruction__checkLexicalInstruction ((typeCategoryMethod__lexicalInstruction__checkLexicalInstruction) category_method__lexicalRewindInstruction__checkLexicalInstruction, gClassInfoFor__lexicalRewindInstruction.slotID ()) ;
 enterCategoryMethod__lexicalInstruction__checkLexicalInstruction ((typeCategoryMethod__lexicalInstruction__checkLexicalInstruction) category_method__lexicalDropInstruction__checkLexicalInstruction, gClassInfoFor__lexicalDropInstruction.slotID ()) ;
 enterCategoryMethod__lexicalInstruction__checkLexicalInstruction ((typeCategoryMethod__lexicalInstruction__checkLexicalInstruction) category_method__lexicalTagInstruction__checkLexicalInstruction, gClassInfoFor__lexicalTagInstruction.slotID ()) ;
 enterCategoryMethod__lexicalInstruction__checkLexicalInstruction ((typeCategoryMethod__lexicalInstruction__checkLexicalInstruction) category_method__lexicalErrorInstruction__checkLexicalInstruction, gClassInfoFor__lexicalErrorInstruction.slotID ()) ;
 enterCategoryMethod__lexicalInstruction__checkLexicalInstruction ((typeCategoryMethod__lexicalInstruction__checkLexicalInstruction) category_method__lexicalWarningInstruction__checkLexicalInstruction, gClassInfoFor__lexicalWarningInstruction.slotID ()) ;
 enterCategoryMethod__abstractLexicalRule__checkLexicalRule ((typeCategoryMethod__abstractLexicalRule__checkLexicalRule) category_method__lexicalImplicitRule__checkLexicalRule, gClassInfoFor__lexicalImplicitRule.slotID ()) ;
 enterCategoryMethod__abstractLexicalRule__checkLexicalRule ((typeCategoryMethod__abstractLexicalRule__checkLexicalRule) category_method__lexicalExplicitRule__checkLexicalRule, gClassInfoFor__lexicalExplicitRule.slotID ()) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogueAction prologueEpilogueObjectFor_lexiqueCompilation (prologueRoutineFor_lexiqueCompilation,
                                   NULL) ;

//---------------------------------------------------------------------------*

