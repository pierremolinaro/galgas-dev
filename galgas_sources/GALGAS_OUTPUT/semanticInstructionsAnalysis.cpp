//---------------------------------------------------------------------------*
//                                                                           *
//                 File 'semanticInstructionsAnalysis.cpp'                   *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       may 8th, 2010, at 17h17'46"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticInstructionsAnalysis.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticInstructionsAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@semanticInstructionAST.analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction> gDispatchTableForMethod__semanticInstructionAST__analyzeSemanticInstruction ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction (typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticInstructionAST__analyzeSemanticInstruction.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction
findCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticInstructionAST__analyzeSemanticInstruction.count ()) {
    result = gDispatchTableForMethod__semanticInstructionAST__analyzeSemanticInstruction (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction (superClassPtr) ;
      gDispatchTableForMethod__semanticInstructionAST__analyzeSemanticInstruction.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableOrConstantDeclarationWithConstructorCallAST.analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableOrConstantDeclarationWithConstructorCallAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_localVariableOrConstantDeclarationWithConstructorCallAST * operand_2424,
                                const GGS_semanticContext  var_cas_inSemanticContext,
                                const GGS_predefinedTypes  var_cas_inPredefinedTypes,
                                GGS_semanticInstructionListForGeneration  & var_cas_ioInstructionListForGeneration,
                                GGS_variableMap  & var_cas_ioVariableMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2424 != NULL) {
    GGS_unifiedTypeMapProxy  var_cas_returnedType ;
    GGS_semanticExpressionListForGeneration  var_cas_constructorEffectiveParameterList ;
    ::routine_analyzeConstructorInvocation (inLexique,  var_cas_inSemanticContext,  var_cas_inPredefinedTypes,  var_cas_ioVariableMap,  operand_2424->mTypeName,  operand_2424->mConstructorName,  operand_2424->mConstructorExpressions,  var_cas_returnedType,  var_cas_constructorEffectiveParameterList COMMA_SOURCE_FILE_AT_LINE (48)) ;
    const GGS_unifiedTypeMapProxy  var_cas_targetType = GGS_unifiedTypeMapProxy ::constructor_searchKey (inLexique, var_cas_inSemanticContext.mTypeMap, operand_2424->mTypeName COMMA_SOURCE_FILE_AT_LINE (59)) ;
    const GGS_bool cond_3338 = (var_cas_targetType).operator_isNotEqual (var_cas_returnedType) ;
    if (cond_3338.isBuiltAndTrue ()) {
      operand_2424->mConstructorName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("this constructor returns an '@")).operator_concat (var_cas_returnedType.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (62)))).operator_concat (GGS_string ("' object, you should use a constructor that return an '@"))).operator_concat (operand_2424->mTypeName)).operator_concat (GGS_string ("' object")) COMMA_SOURCE_FILE_AT_LINE (64)) ;
    }
    const GGS_string var_cas_targetVariableCppName = (GGS_string ("var_")).operator_concat (operand_2424->mVariableName.ggs_string ().reader_identifierRepresentation ()) ;
    const GGS_bool cond_3595 = operand_2424->mIsConstant ;
    if (cond_3595.isBuiltAndTrue ()) {
      var_cas_ioVariableMap.modifier_insertLocalConstant (inLexique, operand_2424->mVariableName, var_cas_targetType, var_cas_targetVariableCppName COMMA_SOURCE_FILE_AT_LINE (68)) ;
    }else if (cond_3595.isBuiltAndFalse ()) {
      var_cas_ioVariableMap.modifier_insertDefinedLocalVariable (inLexique, operand_2424->mVariableName, var_cas_targetType, var_cas_targetVariableCppName COMMA_SOURCE_FILE_AT_LINE (70)) ;
    }
    var_cas_ioInstructionListForGeneration.addAssign_operation (GGS_localVariableOrConstantDeclarationWithConstructorCallForGeneration ::constructor_new (inLexique, var_cas_targetType, operand_2424->mIsConstant, var_cas_targetVariableCppName, operand_2424->mConstructorName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (77)), var_cas_constructorEffectiveParameterList COMMA_SOURCE_FILE_AT_LINE (73))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableOrConstantDeclarationWithAssignmentAST.analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableOrConstantDeclarationWithAssignmentAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_localVariableOrConstantDeclarationWithAssignmentAST * operand_4168,
                                const GGS_semanticContext  var_cas_inSemanticContext,
                                const GGS_predefinedTypes  var_cas_inPredefinedTypes,
                                GGS_semanticInstructionListForGeneration  & var_cas_ioInstructionListForGeneration,
                                GGS_variableMap  & var_cas_ioVariableMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4168 != NULL) {
    GGS_semanticExpressionForGeneration  var_cas_expression ;
    { typeCategoryMethod__semanticExpressionAST__analyzeSemanticExpression method = findCategoryMethod__semanticExpressionAST__analyzeSemanticExpression (operand_4168->mSourceExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_4168->mSourceExpression (HERE), var_cas_inSemanticContext, var_cas_inPredefinedTypes, var_cas_ioVariableMap, var_cas_expression COMMA_SOURCE_FILE_AT_LINE (92)) ;
      }
    }
    const GGS_unifiedTypeMapProxy  var_cas_targetType = GGS_unifiedTypeMapProxy ::constructor_searchKey (inLexique, var_cas_inSemanticContext.mTypeMap, operand_4168->mTypeName COMMA_SOURCE_FILE_AT_LINE (99)) ;
    const GGS_string var_cas_targetVariableCppName = (GGS_string ("var_")).operator_concat (operand_4168->mVariableName.ggs_string ().reader_identifierRepresentation ()) ;
    const GGS_bool cond_4927 = operand_4168->mIsConstant ;
    if (cond_4927.isBuiltAndTrue ()) {
      var_cas_ioVariableMap.modifier_insertLocalConstant (inLexique, operand_4168->mVariableName, var_cas_targetType, var_cas_targetVariableCppName COMMA_SOURCE_FILE_AT_LINE (102)) ;
    }else if (cond_4927.isBuiltAndFalse ()) {
      var_cas_ioVariableMap.modifier_insertDefinedLocalVariable (inLexique, operand_4168->mVariableName, var_cas_targetType, var_cas_targetVariableCppName COMMA_SOURCE_FILE_AT_LINE (104)) ;
    }
    ::routine_checkAssignmentTypes (inLexique,  var_cas_targetType,  var_cas_expression.reader_mType (inLexique COMMA_SOURCE_FILE_AT_LINE (107)),  operand_4168->mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (107)) ;
    var_cas_ioInstructionListForGeneration.addAssign_operation (GGS_localVariableOrConstantDeclarationWithSourceExpressionForGeneration ::constructor_new (inLexique, var_cas_targetType, operand_4168->mIsConstant, var_cas_targetVariableCppName, var_cas_expression COMMA_SOURCE_FILE_AT_LINE (109))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@localVariableDeclarationAST.analyzeSemanticInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__localVariableDeclarationAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_localVariableDeclarationAST * operand_5543,
                                const GGS_semanticContext  var_cas_inSemanticContext,
                                const GGS_predefinedTypes  /* var_cas_inPredefinedTypes */,
                                GGS_semanticInstructionListForGeneration  & var_cas_ioInstructionListForGeneration,
                                GGS_variableMap  & var_cas_ioVariableMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5543 != NULL) {
    const GGS_unifiedTypeMapProxy  var_cas_targetType = GGS_unifiedTypeMapProxy ::constructor_searchKey (inLexique, var_cas_inSemanticContext.mTypeMap, operand_5543->mTypeName COMMA_SOURCE_FILE_AT_LINE (126)) ;
    const GGS_string var_cas_targetVariableCppName = (GGS_string ("var_")).operator_concat (operand_5543->mVariableName.ggs_string ().reader_identifierRepresentation ()) ;
    var_cas_ioVariableMap.modifier_insertUndefinedLocalVariable (inLexique, operand_5543->mVariableName, var_cas_targetType, var_cas_targetVariableCppName COMMA_SOURCE_FILE_AT_LINE (128)) ;
    var_cas_ioInstructionListForGeneration.addAssign_operation (GGS_localVariableDeclarationForGeneration ::constructor_new (inLexique, var_cas_targetType, var_cas_targetVariableCppName COMMA_SOURCE_FILE_AT_LINE (130))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@assignmentInstructionAST.analyzeSemanticInstruction'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__assignmentInstructionAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_assignmentInstructionAST * operand_6391,
                                const GGS_semanticContext  var_cas_inSemanticContext,
                                const GGS_predefinedTypes  var_cas_inPredefinedTypes,
                                GGS_semanticInstructionListForGeneration  & var_cas_ioInstructionListForGeneration,
                                GGS_variableMap  & var_cas_ioVariableMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_6391 != NULL) {
    GGS_semanticExpressionForGeneration  var_cas_expression ;
    { typeCategoryMethod__semanticExpressionAST__analyzeSemanticExpression method = findCategoryMethod__semanticExpressionAST__analyzeSemanticExpression (operand_6391->mSourceExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_6391->mSourceExpression (HERE), var_cas_inSemanticContext, var_cas_inPredefinedTypes, var_cas_ioVariableMap, var_cas_expression COMMA_SOURCE_FILE_AT_LINE (146)) ;
      }
    }
    GGS_unifiedTypeMapProxy  var_cas_targetType ;
    GGS_string var_cas_targetVariableCppName ;
    const GGS_bool cond_7039 = (operand_6391->mStructAttributeList.reader_length ()).operator_isEqual (GGS_uint (0U)) ;
    if (cond_7039.isBuiltAndTrue ()) {
      var_cas_ioVariableMap.modifier_searchForWriteAccess (inLexique, operand_6391->mTargetVariableName, var_cas_targetType, var_cas_targetVariableCppName COMMA_SOURCE_FILE_AT_LINE (156)) ;
    }else if (cond_7039.isBuiltAndFalse ()) {
      var_cas_ioVariableMap.modifier_searchForReadWriteAccess (inLexique, operand_6391->mTargetVariableName, var_cas_targetType, var_cas_targetVariableCppName COMMA_SOURCE_FILE_AT_LINE (158)) ;
      {
        GGS_lstringlist::cEnumerator enumerator_7177 (operand_6391->mStructAttributeList, true) ;
        const GGS_lstringlist::cElement * operand_7177 = NULL ;
        while (((operand_7177 = enumerator_7177.nextObject ()))) {
          macroValidPointer (operand_7177) ;
          const GGS_attributeMap  var_cas_attributeMap = var_cas_targetType.reader_mAttributeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (160)) ;
          if (var_cas_attributeMap.isBuilt ()) {
            var_cas_attributeMap (HERE)->method_searchKey (inLexique, operand_7177->mValue, var_cas_targetType COMMA_SOURCE_FILE_AT_LINE (161)) ;
          }
        }
      }
    }
    ::routine_checkAssignmentTypes (inLexique,  var_cas_targetType,  var_cas_expression.reader_mType (inLexique COMMA_SOURCE_FILE_AT_LINE (165)),  operand_6391->mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (165)) ;
    var_cas_ioInstructionListForGeneration.addAssign_operation (GGS_assignmentInstructionForGeneration ::constructor_new (inLexique, var_cas_targetVariableCppName, operand_6391->mStructAttributeList, var_cas_expression COMMA_SOURCE_FILE_AT_LINE (167))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@appendInstructionAST.analyzeSemanticInstruction'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__appendInstructionAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_appendInstructionAST * operand_7790,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */,
                                const GGS_predefinedTypes  /* var_cas_inPredefinedTypes */,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */,
                                GGS_variableMap  & /* var_cas_ioVariableMap */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7790 != NULL) {
    operand_7790->mTargetVariableName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("unhandled instruction @appendInstructionAST") COMMA_SOURCE_FILE_AT_LINE (185)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@sendInstructionAST.analyzeSemanticInstruction'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sendInstructionAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_sendInstructionAST * operand_8240,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */,
                                const GGS_predefinedTypes  /* var_cas_inPredefinedTypes */,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */,
                                GGS_variableMap  & /* var_cas_ioVariableMap */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8240 != NULL) {
    operand_8240->mInstructionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("unhandled instruction @sendInstructionAST") COMMA_SOURCE_FILE_AT_LINE (198)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@foreachInstructionAST.analyzeSemanticInstruction'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__foreachInstructionAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_foreachInstructionAST * operand_8692,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */,
                                const GGS_predefinedTypes  /* var_cas_inPredefinedTypes */,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */,
                                GGS_variableMap  & /* var_cas_ioVariableMap */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8692 != NULL) {
    operand_8692->mInstructionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("unhandled instruction @foreachInstructionAST") COMMA_SOURCE_FILE_AT_LINE (211)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@ifInstructionAST.analyzeSemanticInstruction'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__ifInstructionAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_ifInstructionAST * operand_9142,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */,
                                const GGS_predefinedTypes  /* var_cas_inPredefinedTypes */,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */,
                                GGS_variableMap  & /* var_cas_ioVariableMap */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9142 != NULL) {
    operand_9142->mInstructionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("unhandled instruction @ifInstructionAST") COMMA_SOURCE_FILE_AT_LINE (224)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@errorInstructionAST.analyzeSemanticInstruction'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__errorInstructionAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_errorInstructionAST * operand_9590,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */,
                                const GGS_predefinedTypes  /* var_cas_inPredefinedTypes */,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */,
                                GGS_variableMap  & /* var_cas_ioVariableMap */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9590 != NULL) {
    operand_9590->mInstructionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("unhandled instruction @errorInstructionAST") COMMA_SOURCE_FILE_AT_LINE (237)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@warningInstructionAST.analyzeSemanticInstruction'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__warningInstructionAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_warningInstructionAST * operand_10043,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */,
                                const GGS_predefinedTypes  /* var_cas_inPredefinedTypes */,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */,
                                GGS_variableMap  & /* var_cas_ioVariableMap */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10043 != NULL) {
    operand_10043->mInstructionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("unhandled instruction @warningInstructionAST") COMMA_SOURCE_FILE_AT_LINE (250)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@routineCallInstructionAST.analyzeSemanticInstruction'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__routineCallInstructionAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_routineCallInstructionAST * operand_10502,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */,
                                const GGS_predefinedTypes  /* var_cas_inPredefinedTypes */,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */,
                                GGS_variableMap  & /* var_cas_ioVariableMap */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10502 != NULL) {
    operand_10502->mRoutineName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("unhandled instruction @routineCallInstructionAST") COMMA_SOURCE_FILE_AT_LINE (263)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@matchInstructionAST.analyzeSemanticInstruction'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__matchInstructionAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_matchInstructionAST * operand_10951,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */,
                                const GGS_predefinedTypes  /* var_cas_inPredefinedTypes */,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */,
                                GGS_variableMap  & /* var_cas_ioVariableMap */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10951 != NULL) {
    operand_10951->mInstructionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("unhandled instruction @matchInstructionAST") COMMA_SOURCE_FILE_AT_LINE (276)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@castInstructionAST.analyzeSemanticInstruction'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__castInstructionAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_castInstructionAST * operand_11401,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */,
                                const GGS_predefinedTypes  /* var_cas_inPredefinedTypes */,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */,
                                GGS_variableMap  & /* var_cas_ioVariableMap */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11401 != NULL) {
    operand_11401->mInstructionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("unhandled instruction @castInstructionAST") COMMA_SOURCE_FILE_AT_LINE (289)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@addInstructionAST.analyzeSemanticInstruction'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__addInstructionAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_addInstructionAST * operand_11849,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */,
                                const GGS_predefinedTypes  /* var_cas_inPredefinedTypes */,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */,
                                GGS_variableMap  & /* var_cas_ioVariableMap */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11849 != NULL) {
    operand_11849->mReceiverName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("unhandled instruction @addInstructionAST") COMMA_SOURCE_FILE_AT_LINE (302)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@removeInstructionAST.analyzeSemanticInstruction'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__removeInstructionAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_removeInstructionAST * operand_12292,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */,
                                const GGS_predefinedTypes  /* var_cas_inPredefinedTypes */,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */,
                                GGS_variableMap  & /* var_cas_ioVariableMap */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12292 != NULL) {
    operand_12292->mReceiverName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("unhandled instruction @removeInstructionAST") COMMA_SOURCE_FILE_AT_LINE (315)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@incrementInstructionAST.analyzeSemanticInstruction'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__incrementInstructionAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_incrementInstructionAST * operand_12741,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */,
                                const GGS_predefinedTypes  /* var_cas_inPredefinedTypes */,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */,
                                GGS_variableMap  & /* var_cas_ioVariableMap */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12741 != NULL) {
    operand_12741->mReceiverName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("unhandled instruction @incrementInstructionAST") COMMA_SOURCE_FILE_AT_LINE (328)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@decrementInstructionAST.analyzeSemanticInstruction'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__decrementInstructionAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_decrementInstructionAST * operand_13193,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */,
                                const GGS_predefinedTypes  /* var_cas_inPredefinedTypes */,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */,
                                GGS_variableMap  & /* var_cas_ioVariableMap */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13193 != NULL) {
    operand_13193->mReceiverName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("unhandled instruction @decrementInstructionAST") COMMA_SOURCE_FILE_AT_LINE (341)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@loopInstructionAST.analyzeSemanticInstruction'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__loopInstructionAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_loopInstructionAST * operand_13640,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */,
                                const GGS_predefinedTypes  /* var_cas_inPredefinedTypes */,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */,
                                GGS_variableMap  & /* var_cas_ioVariableMap */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13640 != NULL) {
    operand_13640->mInstructionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("unhandled instruction @loopInstructionAST") COMMA_SOURCE_FILE_AT_LINE (354)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@messageInstructionAST.analyzeSemanticInstruction'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__messageInstructionAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_messageInstructionAST * operand_14092,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */,
                                const GGS_predefinedTypes  /* var_cas_inPredefinedTypes */,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */,
                                GGS_variableMap  & /* var_cas_ioVariableMap */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_14092 != NULL) {
    operand_14092->mInstructionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("unhandled instruction @messageInstructionAST") COMMA_SOURCE_FILE_AT_LINE (367)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@logInstructionAST.analyzeSemanticInstruction'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__logInstructionAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_logInstructionAST * operand_14543,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */,
                                const GGS_predefinedTypes  /* var_cas_inPredefinedTypes */,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */,
                                GGS_variableMap  & /* var_cas_ioVariableMap */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_14543 != NULL) {
    operand_14543->mInstructionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("unhandled instruction @logInstructionAST") COMMA_SOURCE_FILE_AT_LINE (380)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@grammarInstructionAST.analyzeSemanticInstruction'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__grammarInstructionAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_grammarInstructionAST * operand_14994,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */,
                                const GGS_predefinedTypes  /* var_cas_inPredefinedTypes */,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */,
                                GGS_variableMap  & /* var_cas_ioVariableMap */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_14994 != NULL) {
    operand_14994->mGrammarComponentName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("unhandled instruction @grammarInstructionAST") COMMA_SOURCE_FILE_AT_LINE (393)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@withInstructionAST.analyzeSemanticInstruction'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__withInstructionAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_withInstructionAST * operand_15447,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */,
                                const GGS_predefinedTypes  /* var_cas_inPredefinedTypes */,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */,
                                GGS_variableMap  & /* var_cas_ioVariableMap */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_15447 != NULL) {
    operand_15447->mTargetObjectName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("unhandled instruction @withInstructionAST") COMMA_SOURCE_FILE_AT_LINE (406)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@switchInstructionAST.analyzeSemanticInstruction'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__switchInstructionAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_switchInstructionAST * operand_15895,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */,
                                const GGS_predefinedTypes  /* var_cas_inPredefinedTypes */,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */,
                                GGS_variableMap  & /* var_cas_ioVariableMap */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_15895 != NULL) {
    operand_15895->mInstructionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("unhandled instruction @switchInstructionAST") COMMA_SOURCE_FILE_AT_LINE (419)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@typeMethodCallInstructionAST.analyzeSemanticInstruction' *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__typeMethodCallInstructionAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_typeMethodCallInstructionAST * operand_16356,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */,
                                const GGS_predefinedTypes  /* var_cas_inPredefinedTypes */,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */,
                                GGS_variableMap  & /* var_cas_ioVariableMap */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16356 != NULL) {
    operand_16356->mTypeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("unhandled instruction @typeMethodCallInstructionAST") COMMA_SOURCE_FILE_AT_LINE (432)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@methodCallInstructionAST.analyzeSemanticInstruction'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__methodCallInstructionAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_methodCallInstructionAST * operand_16810,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */,
                                const GGS_predefinedTypes  /* var_cas_inPredefinedTypes */,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */,
                                GGS_variableMap  & /* var_cas_ioVariableMap */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16810 != NULL) {
    operand_16810->mMethodName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("unhandled instruction @methodCallInstructionAST") COMMA_SOURCE_FILE_AT_LINE (445)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@modifierCallInstructionAST.analyzeSemanticInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__modifierCallInstructionAST__analyzeSemanticInstruction (C_Compiler & inLexique,
                                const cPtr_modifierCallInstructionAST * operand_17264,
                                const GGS_semanticContext  /* var_cas_inSemanticContext */,
                                const GGS_predefinedTypes  /* var_cas_inPredefinedTypes */,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */,
                                GGS_variableMap  & /* var_cas_ioVariableMap */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17264 != NULL) {
    operand_17264->mReceiverName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("unhandled instruction @modifierCallInstructionAST") COMMA_SOURCE_FILE_AT_LINE (458)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticInstructionsAnalysis (void) {
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__localVariableOrConstantDeclarationWithConstructorCallAST__analyzeSemanticInstruction, gClassInfoFor__localVariableOrConstantDeclarationWithConstructorCallAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__localVariableOrConstantDeclarationWithAssignmentAST__analyzeSemanticInstruction, gClassInfoFor__localVariableOrConstantDeclarationWithAssignmentAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__localVariableDeclarationAST__analyzeSemanticInstruction, gClassInfoFor__localVariableDeclarationAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__assignmentInstructionAST__analyzeSemanticInstruction, gClassInfoFor__assignmentInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__appendInstructionAST__analyzeSemanticInstruction, gClassInfoFor__appendInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__sendInstructionAST__analyzeSemanticInstruction, gClassInfoFor__sendInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__foreachInstructionAST__analyzeSemanticInstruction, gClassInfoFor__foreachInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__ifInstructionAST__analyzeSemanticInstruction, gClassInfoFor__ifInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__errorInstructionAST__analyzeSemanticInstruction, gClassInfoFor__errorInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__warningInstructionAST__analyzeSemanticInstruction, gClassInfoFor__warningInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__routineCallInstructionAST__analyzeSemanticInstruction, gClassInfoFor__routineCallInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__matchInstructionAST__analyzeSemanticInstruction, gClassInfoFor__matchInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__castInstructionAST__analyzeSemanticInstruction, gClassInfoFor__castInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__addInstructionAST__analyzeSemanticInstruction, gClassInfoFor__addInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__removeInstructionAST__analyzeSemanticInstruction, gClassInfoFor__removeInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__incrementInstructionAST__analyzeSemanticInstruction, gClassInfoFor__incrementInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__decrementInstructionAST__analyzeSemanticInstruction, gClassInfoFor__decrementInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__loopInstructionAST__analyzeSemanticInstruction, gClassInfoFor__loopInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__messageInstructionAST__analyzeSemanticInstruction, gClassInfoFor__messageInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__logInstructionAST__analyzeSemanticInstruction, gClassInfoFor__logInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__grammarInstructionAST__analyzeSemanticInstruction, gClassInfoFor__grammarInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__withInstructionAST__analyzeSemanticInstruction, gClassInfoFor__withInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__switchInstructionAST__analyzeSemanticInstruction, gClassInfoFor__switchInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__typeMethodCallInstructionAST__analyzeSemanticInstruction, gClassInfoFor__typeMethodCallInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__methodCallInstructionAST__analyzeSemanticInstruction, gClassInfoFor__methodCallInstructionAST.slotID ()) ;
  enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction ((typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction) category_method__modifierCallInstructionAST__analyzeSemanticInstruction, gClassInfoFor__modifierCallInstructionAST.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_semanticInstructionsAnalysis (void) {
  gDispatchTableForMethod__semanticInstructionAST__analyzeSemanticInstruction.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticInstructionsAnalysis (prologueRoutineFor_semanticInstructionsAnalysis, epilogueRoutineFor_semanticInstructionsAnalysis) ;

//---------------------------------------------------------------------------*

