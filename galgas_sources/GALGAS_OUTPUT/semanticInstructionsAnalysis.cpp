//-----------------------------------------------------------------------------*
//                                                                             *
//                  File 'semanticInstructionsAnalysis.cpp'                    *
//                         Generated by version 2.6.0                          *
//                        june 10th, 2014, at 11h59'6"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "semanticInstructionsAnalysis.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "optionLL1grammar.h"

//-----------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticInstructionsAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//-----------------------------------------------------------------------------*
//                                                                             *
//               Class for element of '@localConstantList' list                *
//                                                                             *
//-----------------------------------------------------------------------------*

class cCollectionElement_localConstantList : public cCollectionElement {
  public : GALGAS_localConstantList_2E_element mObject ;

//--- Constructor
  public : cCollectionElement_localConstantList (const GALGAS_unifiedTypeMapProxy & in_mType,
                                                 const GALGAS_lstring & in_mName,
                                                 const GALGAS_bool & in_mNoWarningIfUnused,
                                                 const GALGAS_string & in_mCppName
                                                 COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//-----------------------------------------------------------------------------*

cCollectionElement_localConstantList::cCollectionElement_localConstantList (const GALGAS_unifiedTypeMapProxy & in_mType,
                                                                            const GALGAS_lstring & in_mName,
                                                                            const GALGAS_bool & in_mNoWarningIfUnused,
                                                                            const GALGAS_string & in_mCppName
                                                                            COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mType, in_mName, in_mNoWarningIfUnused, in_mCppName) {
}

//-----------------------------------------------------------------------------*

bool cCollectionElement_localConstantList::isValid (void) const {
  return mObject.isValid () ;
}

//-----------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_localConstantList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_localConstantList (mObject.mAttribute_mType, mObject.mAttribute_mName, mObject.mAttribute_mNoWarningIfUnused, mObject.mAttribute_mCppName COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cCollectionElement_localConstantList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mObject.mAttribute_mType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mName" ":" ;
  mObject.mAttribute_mName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mNoWarningIfUnused" ":" ;
  mObject.mAttribute_mNoWarningIfUnused.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCppName" ":" ;
  mObject.mAttribute_mCppName.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_localConstantList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_localConstantList * operand = (cCollectionElement_localConstantList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_localConstantList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//-----------------------------------------------------------------------------*

GALGAS_localConstantList::GALGAS_localConstantList (void) :
AC_GALGAS_list () {
}

//-----------------------------------------------------------------------------*

GALGAS_localConstantList::GALGAS_localConstantList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_localConstantList GALGAS_localConstantList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_localConstantList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_localConstantList GALGAS_localConstantList::constructor_listWithValue (const GALGAS_unifiedTypeMapProxy & inOperand0,
                                                                              const GALGAS_lstring & inOperand1,
                                                                              const GALGAS_bool & inOperand2,
                                                                              const GALGAS_string & inOperand3
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_localConstantList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_localConstantList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_localConstantList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                          const GALGAS_unifiedTypeMapProxy & in_mType,
                                                          const GALGAS_lstring & in_mName,
                                                          const GALGAS_bool & in_mNoWarningIfUnused,
                                                          const GALGAS_string & in_mCppName
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement_localConstantList * p = NULL ;
  macroMyNew (p, cCollectionElement_localConstantList (in_mType,
                                                       in_mName,
                                                       in_mNoWarningIfUnused,
                                                       in_mCppName COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_localConstantList::addAssign_operation (const GALGAS_unifiedTypeMapProxy & inOperand0,
                                                    const GALGAS_lstring & inOperand1,
                                                    const GALGAS_bool & inOperand2,
                                                    const GALGAS_string & inOperand3
                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_localConstantList (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_localConstantList::modifier_insertAtIndex (const GALGAS_unifiedTypeMapProxy inOperand0,
                                                       const GALGAS_lstring inOperand1,
                                                       const GALGAS_bool inOperand2,
                                                       const GALGAS_string inOperand3,
                                                       const GALGAS_uint inInsertionIndex,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_localConstantList (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_localConstantList::modifier_removeAtIndex (GALGAS_unifiedTypeMapProxy & outOperand0,
                                                       GALGAS_lstring & outOperand1,
                                                       GALGAS_bool & outOperand2,
                                                       GALGAS_string & outOperand3,
                                                       const GALGAS_uint inRemoveIndex,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_localConstantList * p = (cCollectionElement_localConstantList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
      outOperand3.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_localConstantList) ;
      outOperand0 = p->mObject.mAttribute_mType ;
      outOperand1 = p->mObject.mAttribute_mName ;
      outOperand2 = p->mObject.mAttribute_mNoWarningIfUnused ;
      outOperand3 = p->mObject.mAttribute_mCppName ;
    }
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_localConstantList::modifier_popFirst (GALGAS_unifiedTypeMapProxy & outOperand0,
                                                  GALGAS_lstring & outOperand1,
                                                  GALGAS_bool & outOperand2,
                                                  GALGAS_string & outOperand3,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_localConstantList * p = (cCollectionElement_localConstantList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_localConstantList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mName ;
    outOperand2 = p->mObject.mAttribute_mNoWarningIfUnused ;
    outOperand3 = p->mObject.mAttribute_mCppName ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_localConstantList::modifier_popLast (GALGAS_unifiedTypeMapProxy & outOperand0,
                                                 GALGAS_lstring & outOperand1,
                                                 GALGAS_bool & outOperand2,
                                                 GALGAS_string & outOperand3,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_localConstantList * p = (cCollectionElement_localConstantList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_localConstantList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mName ;
    outOperand2 = p->mObject.mAttribute_mNoWarningIfUnused ;
    outOperand3 = p->mObject.mAttribute_mCppName ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_localConstantList::method_first (GALGAS_unifiedTypeMapProxy & outOperand0,
                                             GALGAS_lstring & outOperand1,
                                             GALGAS_bool & outOperand2,
                                             GALGAS_string & outOperand3,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_localConstantList * p = (cCollectionElement_localConstantList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_localConstantList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mName ;
    outOperand2 = p->mObject.mAttribute_mNoWarningIfUnused ;
    outOperand3 = p->mObject.mAttribute_mCppName ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_localConstantList::method_last (GALGAS_unifiedTypeMapProxy & outOperand0,
                                            GALGAS_lstring & outOperand1,
                                            GALGAS_bool & outOperand2,
                                            GALGAS_string & outOperand3,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_localConstantList * p = (cCollectionElement_localConstantList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_localConstantList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mName ;
    outOperand2 = p->mObject.mAttribute_mNoWarningIfUnused ;
    outOperand3 = p->mObject.mAttribute_mCppName ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_localConstantList GALGAS_localConstantList::operator_concat (const GALGAS_localConstantList & inOperand
                                                                    COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_localConstantList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_localConstantList GALGAS_localConstantList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_localConstantList result = GALGAS_localConstantList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_localConstantList GALGAS_localConstantList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_localConstantList result = GALGAS_localConstantList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_localConstantList::dotAssign_operation (const GALGAS_localConstantList inOperand
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_localConstantList::reader_mTypeAtIndex (const GALGAS_uint & inIndex,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_localConstantList * p = (cCollectionElement_localConstantList *) attributes.ptr () ;
  GALGAS_unifiedTypeMapProxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_localConstantList) ;
    result = p->mObject.mAttribute_mType ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_localConstantList::reader_mNameAtIndex (const GALGAS_uint & inIndex,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_localConstantList * p = (cCollectionElement_localConstantList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_localConstantList) ;
    result = p->mObject.mAttribute_mName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_localConstantList::reader_mNoWarningIfUnusedAtIndex (const GALGAS_uint & inIndex,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_localConstantList * p = (cCollectionElement_localConstantList *) attributes.ptr () ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_localConstantList) ;
    result = p->mObject.mAttribute_mNoWarningIfUnused ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_localConstantList::reader_mCppNameAtIndex (const GALGAS_uint & inIndex,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_localConstantList * p = (cCollectionElement_localConstantList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_localConstantList) ;
    result = p->mObject.mAttribute_mCppName ;
  }
  return result ;
}



//-----------------------------------------------------------------------------*

cEnumerator_localConstantList::cEnumerator_localConstantList (const GALGAS_localConstantList & inEnumeratedObject,
                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_localConstantList_2E_element cEnumerator_localConstantList::current (LOCATION_ARGS) const {
  const cCollectionElement_localConstantList * p = (const cCollectionElement_localConstantList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_localConstantList) ;
  return p->mObject ;
}


//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy cEnumerator_localConstantList::current_mType (LOCATION_ARGS) const {
  const cCollectionElement_localConstantList * p = (const cCollectionElement_localConstantList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_localConstantList) ;
  return p->mObject.mAttribute_mType ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_localConstantList::current_mName (LOCATION_ARGS) const {
  const cCollectionElement_localConstantList * p = (const cCollectionElement_localConstantList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_localConstantList) ;
  return p->mObject.mAttribute_mName ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool cEnumerator_localConstantList::current_mNoWarningIfUnused (LOCATION_ARGS) const {
  const cCollectionElement_localConstantList * p = (const cCollectionElement_localConstantList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_localConstantList) ;
  return p->mObject.mAttribute_mNoWarningIfUnused ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_localConstantList::current_mCppName (LOCATION_ARGS) const {
  const cCollectionElement_localConstantList * p = (const cCollectionElement_localConstantList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_localConstantList) ;
  return p->mObject.mAttribute_mCppName ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                           @localConstantList type                           *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_localConstantList ("localConstantList",
                                          NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_localConstantList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_localConstantList ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_localConstantList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_localConstantList (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_localConstantList GALGAS_localConstantList::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_localConstantList result ;
  const GALGAS_localConstantList * p = (const GALGAS_localConstantList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_localConstantList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("localConstantList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//          Class for element of '@localInitializedVariableList' list          *
//                                                                             *
//-----------------------------------------------------------------------------*

class cCollectionElement_localInitializedVariableList : public cCollectionElement {
  public : GALGAS_localInitializedVariableList_2E_element mObject ;

//--- Constructor
  public : cCollectionElement_localInitializedVariableList (const GALGAS_unifiedTypeMapProxy & in_mType,
                                                            const GALGAS_lstring & in_mName,
                                                            const GALGAS_string & in_mCppName
                                                            COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//-----------------------------------------------------------------------------*

cCollectionElement_localInitializedVariableList::cCollectionElement_localInitializedVariableList (const GALGAS_unifiedTypeMapProxy & in_mType,
                                                                                                  const GALGAS_lstring & in_mName,
                                                                                                  const GALGAS_string & in_mCppName
                                                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mType, in_mName, in_mCppName) {
}

//-----------------------------------------------------------------------------*

bool cCollectionElement_localInitializedVariableList::isValid (void) const {
  return mObject.isValid () ;
}

//-----------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_localInitializedVariableList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_localInitializedVariableList (mObject.mAttribute_mType, mObject.mAttribute_mName, mObject.mAttribute_mCppName COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cCollectionElement_localInitializedVariableList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mObject.mAttribute_mType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mName" ":" ;
  mObject.mAttribute_mName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCppName" ":" ;
  mObject.mAttribute_mCppName.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_localInitializedVariableList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_localInitializedVariableList * operand = (cCollectionElement_localInitializedVariableList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_localInitializedVariableList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//-----------------------------------------------------------------------------*

GALGAS_localInitializedVariableList::GALGAS_localInitializedVariableList (void) :
AC_GALGAS_list () {
}

//-----------------------------------------------------------------------------*

GALGAS_localInitializedVariableList::GALGAS_localInitializedVariableList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_localInitializedVariableList GALGAS_localInitializedVariableList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_localInitializedVariableList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_localInitializedVariableList GALGAS_localInitializedVariableList::constructor_listWithValue (const GALGAS_unifiedTypeMapProxy & inOperand0,
                                                                                                    const GALGAS_lstring & inOperand1,
                                                                                                    const GALGAS_string & inOperand2
                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_localInitializedVariableList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_localInitializedVariableList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_localInitializedVariableList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                     const GALGAS_unifiedTypeMapProxy & in_mType,
                                                                     const GALGAS_lstring & in_mName,
                                                                     const GALGAS_string & in_mCppName
                                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement_localInitializedVariableList * p = NULL ;
  macroMyNew (p, cCollectionElement_localInitializedVariableList (in_mType,
                                                                  in_mName,
                                                                  in_mCppName COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_localInitializedVariableList::addAssign_operation (const GALGAS_unifiedTypeMapProxy & inOperand0,
                                                               const GALGAS_lstring & inOperand1,
                                                               const GALGAS_string & inOperand2
                                                               COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_localInitializedVariableList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_localInitializedVariableList::modifier_insertAtIndex (const GALGAS_unifiedTypeMapProxy inOperand0,
                                                                  const GALGAS_lstring inOperand1,
                                                                  const GALGAS_string inOperand2,
                                                                  const GALGAS_uint inInsertionIndex,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_localInitializedVariableList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_localInitializedVariableList::modifier_removeAtIndex (GALGAS_unifiedTypeMapProxy & outOperand0,
                                                                  GALGAS_lstring & outOperand1,
                                                                  GALGAS_string & outOperand2,
                                                                  const GALGAS_uint inRemoveIndex,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_localInitializedVariableList * p = (cCollectionElement_localInitializedVariableList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_localInitializedVariableList) ;
      outOperand0 = p->mObject.mAttribute_mType ;
      outOperand1 = p->mObject.mAttribute_mName ;
      outOperand2 = p->mObject.mAttribute_mCppName ;
    }
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_localInitializedVariableList::modifier_popFirst (GALGAS_unifiedTypeMapProxy & outOperand0,
                                                             GALGAS_lstring & outOperand1,
                                                             GALGAS_string & outOperand2,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_localInitializedVariableList * p = (cCollectionElement_localInitializedVariableList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_localInitializedVariableList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mName ;
    outOperand2 = p->mObject.mAttribute_mCppName ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_localInitializedVariableList::modifier_popLast (GALGAS_unifiedTypeMapProxy & outOperand0,
                                                            GALGAS_lstring & outOperand1,
                                                            GALGAS_string & outOperand2,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_localInitializedVariableList * p = (cCollectionElement_localInitializedVariableList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_localInitializedVariableList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mName ;
    outOperand2 = p->mObject.mAttribute_mCppName ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_localInitializedVariableList::method_first (GALGAS_unifiedTypeMapProxy & outOperand0,
                                                        GALGAS_lstring & outOperand1,
                                                        GALGAS_string & outOperand2,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_localInitializedVariableList * p = (cCollectionElement_localInitializedVariableList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_localInitializedVariableList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mName ;
    outOperand2 = p->mObject.mAttribute_mCppName ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_localInitializedVariableList::method_last (GALGAS_unifiedTypeMapProxy & outOperand0,
                                                       GALGAS_lstring & outOperand1,
                                                       GALGAS_string & outOperand2,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_localInitializedVariableList * p = (cCollectionElement_localInitializedVariableList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_localInitializedVariableList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mName ;
    outOperand2 = p->mObject.mAttribute_mCppName ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_localInitializedVariableList GALGAS_localInitializedVariableList::operator_concat (const GALGAS_localInitializedVariableList & inOperand
                                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_localInitializedVariableList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_localInitializedVariableList GALGAS_localInitializedVariableList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_localInitializedVariableList result = GALGAS_localInitializedVariableList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_localInitializedVariableList GALGAS_localInitializedVariableList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_localInitializedVariableList result = GALGAS_localInitializedVariableList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_localInitializedVariableList::dotAssign_operation (const GALGAS_localInitializedVariableList inOperand
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_localInitializedVariableList::reader_mTypeAtIndex (const GALGAS_uint & inIndex,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_localInitializedVariableList * p = (cCollectionElement_localInitializedVariableList *) attributes.ptr () ;
  GALGAS_unifiedTypeMapProxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_localInitializedVariableList) ;
    result = p->mObject.mAttribute_mType ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_localInitializedVariableList::reader_mNameAtIndex (const GALGAS_uint & inIndex,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_localInitializedVariableList * p = (cCollectionElement_localInitializedVariableList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_localInitializedVariableList) ;
    result = p->mObject.mAttribute_mName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_localInitializedVariableList::reader_mCppNameAtIndex (const GALGAS_uint & inIndex,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_localInitializedVariableList * p = (cCollectionElement_localInitializedVariableList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_localInitializedVariableList) ;
    result = p->mObject.mAttribute_mCppName ;
  }
  return result ;
}



//-----------------------------------------------------------------------------*

cEnumerator_localInitializedVariableList::cEnumerator_localInitializedVariableList (const GALGAS_localInitializedVariableList & inEnumeratedObject,
                                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_localInitializedVariableList_2E_element cEnumerator_localInitializedVariableList::current (LOCATION_ARGS) const {
  const cCollectionElement_localInitializedVariableList * p = (const cCollectionElement_localInitializedVariableList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_localInitializedVariableList) ;
  return p->mObject ;
}


//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy cEnumerator_localInitializedVariableList::current_mType (LOCATION_ARGS) const {
  const cCollectionElement_localInitializedVariableList * p = (const cCollectionElement_localInitializedVariableList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_localInitializedVariableList) ;
  return p->mObject.mAttribute_mType ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_localInitializedVariableList::current_mName (LOCATION_ARGS) const {
  const cCollectionElement_localInitializedVariableList * p = (const cCollectionElement_localInitializedVariableList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_localInitializedVariableList) ;
  return p->mObject.mAttribute_mName ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_localInitializedVariableList::current_mCppName (LOCATION_ARGS) const {
  const cCollectionElement_localInitializedVariableList * p = (const cCollectionElement_localInitializedVariableList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_localInitializedVariableList) ;
  return p->mObject.mAttribute_mCppName ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                     @localInitializedVariableList type                      *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_localInitializedVariableList ("localInitializedVariableList",
                                                     NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_localInitializedVariableList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_localInitializedVariableList ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_localInitializedVariableList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_localInitializedVariableList (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_localInitializedVariableList GALGAS_localInitializedVariableList::extractObject (const GALGAS_object & inObject,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_localInitializedVariableList result ;
  const GALGAS_localInitializedVariableList * p = (const GALGAS_localInitializedVariableList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_localInitializedVariableList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("localInitializedVariableList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                  Routine 'analyzeSemanticInstructionList'                   *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_analyzeSemanticInstructionList (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                             const GALGAS_localConstantList constinArgument_inLocalConstantList,
                                             const GALGAS_localInitializedVariableList constinArgument_inLocalInitializedVariableList,
                                             const GALGAS_semanticInstructionListAST constinArgument_inSemanticInstructionListAST,
                                             const GALGAS_location constinArgument_inEndOfBranchLocation,
                                             GALGAS_variableMap & ioArgument_ioVariableMap,
                                             GALGAS_semanticInstructionListForGeneration & outArgument_outInstructionListForGeneration,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outInstructionListForGeneration.drop () ; // Release 'out' argument
  outArgument_outInstructionListForGeneration = GALGAS_semanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (63)) ;
  {
  ioArgument_ioVariableMap.modifier_openBranch (inCompiler COMMA_SOURCE_FILE_AT_LINE (65)) ;
  }
  cEnumerator_localConstantList enumerator_3165 (constinArgument_inLocalConstantList, kEnumeration_up) ;
  while (enumerator_3165.hasCurrentObject ()) {
    const enumGalgasBool test_0 = enumerator_3165.current_mNoWarningIfUnused (HERE).boolEnum () ;
    if (kBoolTrue == test_0) {
      {
      ioArgument_ioVariableMap.modifier_insertUsedLocalConstant (enumerator_3165.current_mName (HERE), enumerator_3165.current_mType (HERE), enumerator_3165.current_mCppName (HERE), enumerator_3165.current_mCppName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (69)) ;
      }
    }else if (kBoolFalse == test_0) {
      {
      ioArgument_ioVariableMap.modifier_insertLocalConstant (enumerator_3165.current_mName (HERE), enumerator_3165.current_mType (HERE), enumerator_3165.current_mCppName (HERE), enumerator_3165.current_mCppName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (71)) ;
      }
    }
    enumerator_3165.gotoNextObject () ;
  }
  cEnumerator_localInitializedVariableList enumerator_3471 (constinArgument_inLocalInitializedVariableList, kEnumeration_up) ;
  while (enumerator_3471.hasCurrentObject ()) {
    {
    ioArgument_ioVariableMap.modifier_insertDefinedLocalVariable (enumerator_3471.current_mName (HERE), enumerator_3471.current_mType (HERE), enumerator_3471.current_mCppName (HERE), enumerator_3471.current_mCppName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (76)) ;
    }
    enumerator_3471.gotoNextObject () ;
  }
  cEnumerator_semanticInstructionListAST enumerator_3636 (constinArgument_inSemanticInstructionListAST, kEnumeration_up) ;
  while (enumerator_3636.hasCurrentObject ()) {
    callCategoryMethod_analyzeSemanticInstruction ((const cPtr_semanticInstructionAST *) enumerator_3636.current_mInstruction (HERE).ptr (), constinArgument_inAnalysisContext, outArgument_outInstructionListForGeneration, ioArgument_ioVariableMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (80)) ;
    enumerator_3636.gotoNextObject () ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeBranch (constinArgument_inEndOfBranchLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (87)) ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                 Routine 'analyzeErrorOrWarningInstruction'                  *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_analyzeErrorOrWarningInstruction (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                               const GALGAS_semanticExpressionAST constinArgument_inLocationExpression,
                                               const GALGAS_semanticExpressionAST constinArgument_inMessageExpression,
                                               const GALGAS_location constinArgument_inErrorLocation,
                                               const GALGAS_string constinArgument_inErrorOrWarningString,
                                               GALGAS_variableMap & ioArgument_ioVariableMap,
                                               GALGAS_semanticExpressionForGeneration & outArgument_outLocationExpression,
                                               GALGAS_semanticExpressionForGeneration & outArgument_outMessageExpression,
                                               GALGAS_bool & outArgument_outUseLocationReader,
                                               C_Compiler * inCompiler
                                               COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outLocationExpression.drop () ; // Release 'out' argument
  outArgument_outMessageExpression.drop () ; // Release 'out' argument
  outArgument_outUseLocationReader.drop () ; // Release 'out' argument
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) constinArgument_inLocationExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, outArgument_outLocationExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (333)) ;
  outArgument_outUseLocationReader = GALGAS_bool (kIsNotEqual, outArgument_outLocationExpression.reader_mType (SOURCE_FILE_AT_LINE (339)).objectCompare (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLocationType)) ;
  const enumGalgasBool test_0 = outArgument_outUseLocationReader.boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_readerMap var_readerMap = outArgument_outLocationExpression.reader_mType (SOURCE_FILE_AT_LINE (341)).reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (341)) ;
    const cMapElement_readerMap * objectArray_14163 = (const cMapElement_readerMap *) var_readerMap.readAccessForWithInstruction_hasKey (GALGAS_string ("location")) ;
    if (NULL != objectArray_14163) {
        macroValidSharedObject (objectArray_14163, cMapElement_readerMap) ;
      const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, objectArray_14163->mAttribute_mArgumentTypeList.reader_length (SOURCE_FILE_AT_LINE (343)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_1) {
        inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("the ").operator_concat (constinArgument_inErrorOrWarningString COMMA_SOURCE_FILE_AT_LINE (345)).operator_concat (GALGAS_string (" location expression type is '@") COMMA_SOURCE_FILE_AT_LINE (345)).operator_concat (outArgument_outLocationExpression.reader_mType (SOURCE_FILE_AT_LINE (345)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (345)) COMMA_SOURCE_FILE_AT_LINE (345)).operator_concat (GALGAS_string ("' and defines a 'location' reader with arguments; it should be either of the '@location' type, either defines a 'location' reader without argument that"
          " returns an '@location' object") COMMA_SOURCE_FILE_AT_LINE (345)) COMMA_SOURCE_FILE_AT_LINE (344)) ;
      }else if (kBoolFalse == test_1) {
        const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, objectArray_14163->mAttribute_mReturnedType.objectCompare (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLocationType)).boolEnum () ;
        if (kBoolTrue == test_2) {
          inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("the ").operator_concat (constinArgument_inErrorOrWarningString COMMA_SOURCE_FILE_AT_LINE (350)).operator_concat (GALGAS_string (" location expression type is '@") COMMA_SOURCE_FILE_AT_LINE (350)).operator_concat (outArgument_outLocationExpression.reader_mType (SOURCE_FILE_AT_LINE (350)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (350)) COMMA_SOURCE_FILE_AT_LINE (350)).operator_concat (GALGAS_string ("' and defines a 'location' reader that returns an '@") COMMA_SOURCE_FILE_AT_LINE (350)).operator_concat (objectArray_14163->mAttribute_mReturnedType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (351)) COMMA_SOURCE_FILE_AT_LINE (351)).operator_concat (GALGAS_string ("' object; it should be either of the '@location' type, either defines a 'location' reader without argument that returns an '@location' object") COMMA_SOURCE_FILE_AT_LINE (351)) COMMA_SOURCE_FILE_AT_LINE (349)) ;
        }
      }
    }else{
      inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("the ").operator_concat (constinArgument_inErrorOrWarningString COMMA_SOURCE_FILE_AT_LINE (357)).operator_concat (GALGAS_string (" location expression type is '@") COMMA_SOURCE_FILE_AT_LINE (357)).operator_concat (outArgument_outLocationExpression.reader_mType (SOURCE_FILE_AT_LINE (357)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (357)) COMMA_SOURCE_FILE_AT_LINE (357)).operator_concat (GALGAS_string ("' and does not define a 'location' reader; it should be either of the '@location' type, either defines a 'location' reader without argument that return"
        "s an '@location' object") COMMA_SOURCE_FILE_AT_LINE (357)) COMMA_SOURCE_FILE_AT_LINE (356)) ;
    }
  }
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) constinArgument_inMessageExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, outArgument_outMessageExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (363)) ;
  const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, outArgument_outMessageExpression.reader_mType (SOURCE_FILE_AT_LINE (369)).objectCompare (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mStringType)).boolEnum () ;
  if (kBoolTrue == test_3) {
    inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("the ").operator_concat (constinArgument_inErrorOrWarningString COMMA_SOURCE_FILE_AT_LINE (371)).operator_concat (GALGAS_string (" message expression type is '@") COMMA_SOURCE_FILE_AT_LINE (371)).operator_concat (outArgument_outMessageExpression.reader_mType (SOURCE_FILE_AT_LINE (371)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (371)) COMMA_SOURCE_FILE_AT_LINE (371)).operator_concat (GALGAS_string ("'; it should be of the '@string' type") COMMA_SOURCE_FILE_AT_LINE (371)) COMMA_SOURCE_FILE_AT_LINE (370)) ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                      Routine 'analyzeRoutineArguments'                      *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_analyzeRoutineArguments (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                      const GALGAS_lstring constinArgument_inRoutineName,
                                      const GALGAS_string constinArgument_inInvokedEntityName,
                                      const GALGAS_formalParameterSignature constinArgument_inRoutineSignature,
                                      const GALGAS_actualParameterListAST constinArgument_inActualParameterList,
                                      GALGAS_variableMap & ioArgument_ioVariableMap,
                                      GALGAS_actualParameterListForGeneration & outArgument_outActualParameterListForGeneration,
                                      C_Compiler * inCompiler
                                      COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outActualParameterListForGeneration.drop () ; // Release 'out' argument
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inRoutineSignature.reader_length (SOURCE_FILE_AT_LINE (624)).objectCompare (constinArgument_inActualParameterList.reader_length (SOURCE_FILE_AT_LINE (624)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (constinArgument_inRoutineName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the ").operator_concat (constinArgument_inInvokedEntityName COMMA_SOURCE_FILE_AT_LINE (626)).operator_concat (GALGAS_string (" defines ") COMMA_SOURCE_FILE_AT_LINE (626)).operator_concat (constinArgument_inRoutineSignature.reader_length (SOURCE_FILE_AT_LINE (626)).reader_string (SOURCE_FILE_AT_LINE (626)) COMMA_SOURCE_FILE_AT_LINE (626)).operator_concat (GALGAS_string (" formal argument(s), but this invocation names ") COMMA_SOURCE_FILE_AT_LINE (626)).operator_concat (constinArgument_inActualParameterList.reader_length (SOURCE_FILE_AT_LINE (628)).reader_string (SOURCE_FILE_AT_LINE (628)) COMMA_SOURCE_FILE_AT_LINE (627)).operator_concat (GALGAS_string (" argument(s)") COMMA_SOURCE_FILE_AT_LINE (628)) COMMA_SOURCE_FILE_AT_LINE (625)) ;
    outArgument_outActualParameterListForGeneration.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    outArgument_outActualParameterListForGeneration = GALGAS_actualParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (632)) ;
    GALGAS_stringset var_exclusiveVariableSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (633)) ;
    cEnumerator_formalParameterSignature enumerator_26087 (constinArgument_inRoutineSignature, kEnumeration_up) ;
    cEnumerator_actualParameterListAST enumerator_26110 (constinArgument_inActualParameterList, kEnumeration_up) ;
    while (enumerator_26087.hasCurrentObject () && enumerator_26110.hasCurrentObject ()) {
      callCategoryMethod_checkAgainstFormalArgument ((const cPtr_actualParameterAST *) enumerator_26110.current_mActualParameter (HERE).ptr (), constinArgument_inAnalysisContext, enumerator_26087.current_mFormalArgumentType (HERE), enumerator_26087.current_mFormalArgumentPassingMode (HERE), ioArgument_ioVariableMap, outArgument_outActualParameterListForGeneration, var_exclusiveVariableSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (635)) ;
      enumerator_26087.gotoNextObject () ;
      enumerator_26110.gotoNextObject () ;
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//             Function 'checkMethodImplementationInSuperClasses'              *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string function_checkMethodImplementationInSuperClasses (const GALGAS_lstring & constinArgument_inMethodName,
                                                                const GALGAS_unifiedTypeMapProxy & constinArgument_inSuperClass,
                                                                C_Compiler * inCompiler
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const enumGalgasBool test_0 = constinArgument_inSuperClass.reader_isNull (SOURCE_FILE_AT_LINE (761)).boolEnum () ;
  if (kBoolTrue == test_0) {
    result_outResult = GALGAS_string::makeEmptyString () ;
  }else if (kBoolFalse == test_0) {
    GALGAS_methodQualifier var_qualifier ;
    GALGAS_methodKind joker_30469_0 ; // Joker input parameter
    GALGAS_formalParameterSignature joker_30472_0 ; // Joker input parameter
    GALGAS_location joker_30475_0 ; // Joker input parameter
    GALGAS_bool joker_30478_0 ; // Joker input parameter
    GALGAS_string joker_30492_0 ; // Joker input parameter
    constinArgument_inSuperClass.reader_mInstanceMethodMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (765)).method_searchKey (constinArgument_inMethodName, joker_30469_0, joker_30472_0, joker_30475_0, joker_30478_0, var_qualifier, joker_30492_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (765)) ;
    if (var_qualifier.isValid ()) {
      switch (var_qualifier.enumValue ()) {
      case GALGAS_methodQualifier::kNotBuilt:
        break ;
      case GALGAS_methodQualifier::kEnum_isAbstract: {
        result_outResult = GALGAS_string::makeEmptyString () ;
        } break ;
      case GALGAS_methodQualifier::kEnum_isBasic: case GALGAS_methodQualifier::kEnum_isBasicFinal: case GALGAS_methodQualifier::kEnum_isOverriding: {
        result_outResult = constinArgument_inSuperClass.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (770)) ;
        } break ;
      case GALGAS_methodQualifier::kEnum_isInherited: case GALGAS_methodQualifier::kEnum_isOverridingAbstract: {
        result_outResult = function_checkMethodImplementationInSuperClasses (constinArgument_inMethodName, constinArgument_inSuperClass.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (772)), inCompiler COMMA_SOURCE_FILE_AT_LINE (772)) ;
        } break ;
      }
    }
  }
//---
  return result_outResult ;
}


//-----------------------------------------------------------------------------*
//  Function introspection                                                     *
//-----------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_checkMethodImplementationInSuperClasses [3] = {
  & kTypeDescriptor_GALGAS_lstring,
  & kTypeDescriptor_GALGAS_unifiedTypeMapProxy,
  NULL
} ;

//-----------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_checkMethodImplementationInSuperClasses (C_Compiler * inCompiler,
                                                                                        const cObjectArray & inEffectiveParameterArray,
                                                                                        const GALGAS_location & /* §§ inErrorLocation */
                                                                                        COMMA_LOCATION_ARGS) {
  const GALGAS_lstring operand0 = GALGAS_lstring::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                 inCompiler
                                                                 COMMA_THERE) ;
  const GALGAS_unifiedTypeMapProxy operand1 = GALGAS_unifiedTypeMapProxy::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                                                         inCompiler
                                                                                         COMMA_THERE) ;
  return function_checkMethodImplementationInSuperClasses (operand0,
                                                           operand1,
                                                           inCompiler
                                                           COMMA_THERE).reader_object (THERE) ;
}

//-----------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_checkMethodImplementationInSuperClasses ("checkMethodImplementationInSuperClasses",
                                                                                         functionWithGenericHeader_checkMethodImplementationInSuperClasses,
                                                                                         & kTypeDescriptor_GALGAS_string,
                                                                                         2,
                                                                                         functionArgs_checkMethodImplementationInSuperClasses) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//            Function 'checkModifierImplementationInSuperClasses'             *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string function_checkModifierImplementationInSuperClasses (const GALGAS_lstring & constinArgument_inModifierName,
                                                                  const GALGAS_unifiedTypeMapProxy & constinArgument_inSuperClass,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const enumGalgasBool test_0 = constinArgument_inSuperClass.reader_isNull (SOURCE_FILE_AT_LINE (876)).boolEnum () ;
  if (kBoolTrue == test_0) {
    result_outResult = GALGAS_string::makeEmptyString () ;
  }else if (kBoolFalse == test_0) {
    GALGAS_methodQualifier var_qualifier ;
    GALGAS_methodKind joker_34532_3 ; // Joker input parameter
    GALGAS_formalParameterSignature joker_34532_2 ; // Joker input parameter
    GALGAS_bool joker_34532_1 ; // Joker input parameter
    GALGAS_string joker_34547_0 ; // Joker input parameter
    constinArgument_inSuperClass.reader_mModifierMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (880)).method_searchKey (constinArgument_inModifierName, joker_34532_3, joker_34532_2, joker_34532_1, var_qualifier, joker_34547_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (880)) ;
    if (var_qualifier.isValid ()) {
      switch (var_qualifier.enumValue ()) {
      case GALGAS_methodQualifier::kNotBuilt:
        break ;
      case GALGAS_methodQualifier::kEnum_isAbstract: {
        result_outResult = GALGAS_string::makeEmptyString () ;
        } break ;
      case GALGAS_methodQualifier::kEnum_isBasic: case GALGAS_methodQualifier::kEnum_isBasicFinal: case GALGAS_methodQualifier::kEnum_isOverriding: {
        result_outResult = constinArgument_inSuperClass.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (885)) ;
        } break ;
      case GALGAS_methodQualifier::kEnum_isInherited: case GALGAS_methodQualifier::kEnum_isOverridingAbstract: {
        result_outResult = function_checkModifierImplementationInSuperClasses (constinArgument_inModifierName, constinArgument_inSuperClass.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (887)), inCompiler COMMA_SOURCE_FILE_AT_LINE (887)) ;
        } break ;
      }
    }
  }
//---
  return result_outResult ;
}


//-----------------------------------------------------------------------------*
//  Function introspection                                                     *
//-----------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_checkModifierImplementationInSuperClasses [3] = {
  & kTypeDescriptor_GALGAS_lstring,
  & kTypeDescriptor_GALGAS_unifiedTypeMapProxy,
  NULL
} ;

//-----------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_checkModifierImplementationInSuperClasses (C_Compiler * inCompiler,
                                                                                          const cObjectArray & inEffectiveParameterArray,
                                                                                          const GALGAS_location & /* §§ inErrorLocation */
                                                                                          COMMA_LOCATION_ARGS) {
  const GALGAS_lstring operand0 = GALGAS_lstring::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                 inCompiler
                                                                 COMMA_THERE) ;
  const GALGAS_unifiedTypeMapProxy operand1 = GALGAS_unifiedTypeMapProxy::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                                                         inCompiler
                                                                                         COMMA_THERE) ;
  return function_checkModifierImplementationInSuperClasses (operand0,
                                                             operand1,
                                                             inCompiler
                                                             COMMA_THERE).reader_object (THERE) ;
}

//-----------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_checkModifierImplementationInSuperClasses ("checkModifierImplementationInSuperClasses",
                                                                                           functionWithGenericHeader_checkModifierImplementationInSuperClasses,
                                                                                           & kTypeDescriptor_GALGAS_string,
                                                                                           2,
                                                                                           functionArgs_checkModifierImplementationInSuperClasses) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//                     Routine 'checkExpressionIsBoolean'                      *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_checkExpressionIsBoolean (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                       const GALGAS_location constinArgument_inErrorLocation,
                                       const GALGAS_semanticExpressionForGeneration constinArgument_inExpression,
                                       GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                       C_Compiler * inCompiler
                                       COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  GALGAS_unifiedTypeMapProxy var_expressionType = constinArgument_inExpression.reader_mType (SOURCE_FILE_AT_LINE (1282)) ;
  GALGAS_unifiedTypeMapProxy var_boolType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_expressionType.objectCompare (var_boolType)).boolEnum () ;
  if (kBoolTrue == test_0) {
    outArgument_outExpression = constinArgument_inExpression ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_expressionType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1287)).objectCompare (GALGAS_typeKindEnum::constructor_structType (SOURCE_FILE_AT_LINE (1287)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      const enumGalgasBool test_2 = var_expressionType.reader_mAttributeMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1288)).reader_hasKey (GALGAS_string ("bool") COMMA_SOURCE_FILE_AT_LINE (1288)).boolEnum () ;
      if (kBoolTrue == test_2) {
        GALGAS_unifiedTypeMapProxy var_attributeType ;
        var_expressionType.reader_mAttributeMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1290)).method_searchKey (GALGAS_lstring::constructor_new (GALGAS_string ("bool"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1290)), var_attributeType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1290)) ;
        const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, var_attributeType.objectCompare (var_boolType)).boolEnum () ;
        if (kBoolTrue == test_3) {
          outArgument_outExpression = GALGAS_structFieldAccessExpressionForGeneration::constructor_new (var_boolType, constinArgument_inErrorLocation, constinArgument_inExpression, GALGAS_string ("bool") COMMA_SOURCE_FILE_AT_LINE (1292)) ;
        }else if (kBoolFalse == test_3) {
          inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("the '@").operator_concat (var_expressionType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1300)) COMMA_SOURCE_FILE_AT_LINE (1300)).operator_concat (GALGAS_string ("' struct type defines an attribute named 'bool', but its type is not '@bool'") COMMA_SOURCE_FILE_AT_LINE (1300)) COMMA_SOURCE_FILE_AT_LINE (1299)) ;
          outArgument_outExpression.drop () ; // Release error dropped variable
        }
      }else if (kBoolFalse == test_2) {
        inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("the '@").operator_concat (var_expressionType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1306)) COMMA_SOURCE_FILE_AT_LINE (1306)).operator_concat (GALGAS_string ("' struct type does not define an attribute named 'bool'") COMMA_SOURCE_FILE_AT_LINE (1306)) COMMA_SOURCE_FILE_AT_LINE (1305)) ;
        outArgument_outExpression.drop () ; // Release error dropped variable
      }
    }else if (kBoolFalse == test_1) {
      const cMapElement_readerMap * objectArray_51036 = (const cMapElement_readerMap *) var_expressionType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1311)).readAccessForWithInstruction_hasKey (GALGAS_string ("bool")) ;
      if (NULL != objectArray_51036) {
          macroValidSharedObject (objectArray_51036, cMapElement_readerMap) ;
        const enumGalgasBool test_4 = GALGAS_bool (kIsNotEqual, objectArray_51036->mAttribute_mReturnedType.objectCompare (var_boolType)).boolEnum () ;
        if (kBoolTrue == test_4) {
          inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("the expression type is not @bool, it handles a 'bool' reader, but it does not return a '@bool' value") COMMA_SOURCE_FILE_AT_LINE (1313)) ;
          outArgument_outExpression.drop () ; // Release error dropped variable
        }else if (kBoolFalse == test_4) {
          const enumGalgasBool test_5 = GALGAS_bool (kIsStrictSup, objectArray_51036->mAttribute_mArgumentTypeList.reader_length (SOURCE_FILE_AT_LINE (1314)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
          if (kBoolTrue == test_5) {
            inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("the expression type is not @bool, it handles a 'bool' reader that requires argument(s)") COMMA_SOURCE_FILE_AT_LINE (1315)) ;
            outArgument_outExpression.drop () ; // Release error dropped variable
          }else if (kBoolFalse == test_5) {
            const enumGalgasBool test_6 = GALGAS_bool (kIsNotEqual, objectArray_51036->mAttribute_mErrorMessage.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
            if (kBoolTrue == test_6) {
              inCompiler->emitSemanticError (constinArgument_inErrorLocation, objectArray_51036->mAttribute_mErrorMessage COMMA_SOURCE_FILE_AT_LINE (1317)) ;
              outArgument_outExpression.drop () ; // Release error dropped variable
            }else if (kBoolFalse == test_6) {
              outArgument_outExpression = GALGAS_readerCallExpressionForGeneration::constructor_new (var_boolType, constinArgument_inErrorLocation, objectArray_51036->mAttribute_mKind, constinArgument_inExpression, GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1324)), GALGAS_string ("bool"), GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1326)), objectArray_51036->mAttribute_mHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (1319)) ;
            }
          }
        }
      }else{
        const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, var_expressionType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1331)).reader_count (SOURCE_FILE_AT_LINE (1331)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
        if (kBoolTrue == test_7) {
          inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("the expression type is not '@bool', but '@").operator_concat (var_expressionType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1333)) COMMA_SOURCE_FILE_AT_LINE (1333)).operator_concat (GALGAS_string ("', and this type does not define the 'bool' reader") COMMA_SOURCE_FILE_AT_LINE (1333)) COMMA_SOURCE_FILE_AT_LINE (1332)) ;
          outArgument_outExpression.drop () ; // Release error dropped variable
        }else if (kBoolFalse == test_7) {
          GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
          cEnumerator_readerMap enumerator_52238 (var_expressionType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1338)), kEnumeration_up) ;
          while (enumerator_52238.hasCurrentObject ()) {
            var_s.dotAssign_operation (GALGAS_string ("\n"
              "  - ").operator_concat (enumerator_52238.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (1339)) COMMA_SOURCE_FILE_AT_LINE (1339)) COMMA_SOURCE_FILE_AT_LINE (1339)) ;
            cEnumerator_unifiedTypeMapProxyAndParameterList enumerator_52310 (enumerator_52238.current_mArgumentTypeList (HERE), kEnumeration_up) ;
            while (enumerator_52310.hasCurrentObject ()) {
              var_s.dotAssign_operation (GALGAS_string (" \?@").operator_concat (enumerator_52310.current_mType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1341)) COMMA_SOURCE_FILE_AT_LINE (1341)) COMMA_SOURCE_FILE_AT_LINE (1341)) ;
              enumerator_52310.gotoNextObject () ;
            }
            var_s.dotAssign_operation (GALGAS_string (" -> @").operator_concat (enumerator_52238.current_mReturnedType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1343)) COMMA_SOURCE_FILE_AT_LINE (1343)) COMMA_SOURCE_FILE_AT_LINE (1343)) ;
            enumerator_52238.gotoNextObject () ;
          }
          //--- @ifExpressionForGeneration
          GALGAS_string temp_8 ;
          const enumGalgasBool test_9 = GALGAS_bool (kIsStrictSup, var_expressionType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1347)).reader_count (SOURCE_FILE_AT_LINE (1347)).objectCompare (GALGAS_uint ((uint32_t) 1U))).boolEnum () ;
          if (kBoolTrue == test_9) {
            temp_8 = GALGAS_string ("readers are") ;
          }else if (kBoolFalse == test_9) {
            temp_8 = GALGAS_string ("reader is") ;
          }
          inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("the expression type is not '@bool', but '@").operator_concat (var_expressionType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1346)) COMMA_SOURCE_FILE_AT_LINE (1346)).operator_concat (GALGAS_string ("', and this type does not define the 'bool' reader; available ") COMMA_SOURCE_FILE_AT_LINE (1346)).operator_concat (temp_8 COMMA_SOURCE_FILE_AT_LINE (1346)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (1347)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (1348)) COMMA_SOURCE_FILE_AT_LINE (1345)) ;
          outArgument_outExpression.drop () ; // Release error dropped variable
        }
      }
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//Abstract category method '@semanticInstructionAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_semanticInstructionAST_analyzeSemanticInstruction> gCategoryMethodTable_semanticInstructionAST_analyzeSemanticInstruction ;

//-----------------------------------------------------------------------------*

void enterCategoryMethod_analyzeSemanticInstruction (const int32_t inClassIndex,
                                                     categoryMethodSignature_semanticInstructionAST_analyzeSemanticInstruction inMethod) {
  gCategoryMethodTable_semanticInstructionAST_analyzeSemanticInstruction.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//-----------------------------------------------------------------------------*

static void freeCategoryMethod_semanticInstructionAST_analyzeSemanticInstruction (void) {
  gCategoryMethodTable_semanticInstructionAST_analyzeSemanticInstruction.free () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_semanticInstructionAST_analyzeSemanticInstruction (NULL,
                                                                              freeCategoryMethod_semanticInstructionAST_analyzeSemanticInstruction) ;

//-----------------------------------------------------------------------------*

void callCategoryMethod_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                    const GALGAS_analysisContext constin_inAnalysisContext,
                                                    GALGAS_semanticInstructionListForGeneration & io_ioInstructionListForGeneration,
                                                    GALGAS_variableMap & io_ioVariableMap,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_semanticInstructionAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_semanticInstructionAST_analyzeSemanticInstruction f = NULL ;
    if (classIndex < gCategoryMethodTable_semanticInstructionAST_analyzeSemanticInstruction.count ()) {
      f = gCategoryMethodTable_semanticInstructionAST_analyzeSemanticInstruction (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_semanticInstructionAST_analyzeSemanticInstruction.count ()) {
           f = gCategoryMethodTable_semanticInstructionAST_analyzeSemanticInstruction (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_semanticInstructionAST_analyzeSemanticInstruction.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inAnalysisContext, io_ioInstructionListForGeneration, io_ioVariableMap, inCompiler COMMA_THERE) ;
    }
  }
}

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@localVariableOrConstantDeclarationWithDefaultConstructorAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_localVariableOrConstantDeclarationWithDefaultConstructorAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                                                   const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                                                   GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                                                   GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                                                   C_Compiler * inCompiler
                                                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_localVariableOrConstantDeclarationWithDefaultConstructorAST * object = (const cPtr_localVariableOrConstantDeclarationWithDefaultConstructorAST *) inObject ;
  macroValidSharedObject (object, cPtr_localVariableOrConstantDeclarationWithDefaultConstructorAST) ;
  GALGAS_unifiedTypeMapProxy var_targetType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (98)) ;
  const enumGalgasBool test_0 = var_targetType.reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE_AT_LINE (103)).operator_not (SOURCE_FILE_AT_LINE (103)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mTypeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("an abstract class does not support the default constructor") COMMA_SOURCE_FILE_AT_LINE (104)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, var_targetType.reader_mDefaultConstructorName (inCompiler COMMA_SOURCE_FILE_AT_LINE (105)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mTypeName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("this class does not support the default constructor") COMMA_SOURCE_FILE_AT_LINE (106)) ;
    }
  }
  GALGAS_string var_targetVariableCppName = GALGAS_string ("var_").operator_concat (object->mAttribute_mVariableName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (109)) COMMA_SOURCE_FILE_AT_LINE (109)) ;
  const enumGalgasBool test_4 = object->mAttribute_mIsConstant.boolEnum () ;
  if (kBoolTrue == test_4) {
    {
    ioArgument_ioVariableMap.modifier_insertLocalConstant (object->mAttribute_mVariableName, var_targetType, var_targetVariableCppName, var_targetVariableCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (111)) ;
    }
  }else if (kBoolFalse == test_4) {
    {
    ioArgument_ioVariableMap.modifier_insertDefinedLocalVariable (object->mAttribute_mVariableName, var_targetType, var_targetVariableCppName, var_targetVariableCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (113)) ;
    }
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_localVariableOrConstantDeclarationWithDefaultConstructorForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_targetType, object->mAttribute_mIsConstant, var_targetVariableCppName COMMA_SOURCE_FILE_AT_LINE (116)) COMMA_SOURCE_FILE_AT_LINE (116)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_localVariableOrConstantDeclarationWithDefaultConstructorAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_localVariableOrConstantDeclarationWithDefaultConstructorAST.mSlotID,
                                                  categoryMethod_localVariableOrConstantDeclarationWithDefaultConstructorAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_localVariableOrConstantDeclarationWithDefaultConstructorAST_analyzeSemanticInstruction (defineCategoryMethod_localVariableOrConstantDeclarationWithDefaultConstructorAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@localVariableOrConstantDeclarationWithConstructorCallAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_localVariableOrConstantDeclarationWithConstructorCallAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                                                const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                                                GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                                                GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                                                C_Compiler * inCompiler
                                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_localVariableOrConstantDeclarationWithConstructorCallAST * object = (const cPtr_localVariableOrConstantDeclarationWithConstructorCallAST *) inObject ;
  macroValidSharedObject (object, cPtr_localVariableOrConstantDeclarationWithConstructorCallAST) ;
  GALGAS_unifiedTypeMapProxy var_returnedType ;
  GALGAS_semanticExpressionListForGeneration var_constructorEffectiveParameterList ;
  GALGAS_bool var_hasCompilerArgument ;
  {
  GALGAS_unifiedTypeMapProxy joker_5860_0 ; // Joker input parameter
  routine_analyzeConstructorInvocation (constinArgument_inAnalysisContext, ioArgument_ioVariableMap, object->mAttribute_mTypeName, object->mAttribute_mConstructorName, object->mAttribute_mConstructorExpressions, var_returnedType, joker_5860_0, var_constructorEffectiveParameterList, var_hasCompilerArgument, inCompiler COMMA_SOURCE_FILE_AT_LINE (132)) ;
  }
  GALGAS_unifiedTypeMapProxy var_targetType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (144)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_targetType.objectCompare (var_returnedType)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mConstructorName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("this constructor returns an '@").operator_concat (var_returnedType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (147)) COMMA_SOURCE_FILE_AT_LINE (147)).operator_concat (GALGAS_string ("' object, you should use a constructor that return an '@") COMMA_SOURCE_FILE_AT_LINE (147)).operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (147)) COMMA_SOURCE_FILE_AT_LINE (147)).operator_concat (GALGAS_string ("' object") COMMA_SOURCE_FILE_AT_LINE (147)) COMMA_SOURCE_FILE_AT_LINE (146)) ;
  }
  GALGAS_string var_targetVariableCppName = GALGAS_string ("var_").operator_concat (object->mAttribute_mVariableName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (151)) COMMA_SOURCE_FILE_AT_LINE (151)) ;
  const enumGalgasBool test_2 = object->mAttribute_mIsConstant.boolEnum () ;
  if (kBoolTrue == test_2) {
    {
    ioArgument_ioVariableMap.modifier_insertLocalConstant (object->mAttribute_mVariableName, var_targetType, var_targetVariableCppName, var_targetVariableCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (153)) ;
    }
  }else if (kBoolFalse == test_2) {
    {
    ioArgument_ioVariableMap.modifier_insertDefinedLocalVariable (object->mAttribute_mVariableName, var_targetType, var_targetVariableCppName, var_targetVariableCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (155)) ;
    }
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_localVariableOrConstantDeclarationWithConstructorCallForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_targetType, object->mAttribute_mIsConstant, var_targetVariableCppName, object->mAttribute_mConstructorName.reader_string (SOURCE_FILE_AT_LINE (163)), var_constructorEffectiveParameterList, var_hasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (158)) COMMA_SOURCE_FILE_AT_LINE (158)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_localVariableOrConstantDeclarationWithConstructorCallAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_localVariableOrConstantDeclarationWithConstructorCallAST.mSlotID,
                                                  categoryMethod_localVariableOrConstantDeclarationWithConstructorCallAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_localVariableOrConstantDeclarationWithConstructorCallAST_analyzeSemanticInstruction (defineCategoryMethod_localVariableOrConstantDeclarationWithConstructorCallAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@localVariableOrConstantDeclarationWithAssignmentAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_localVariableOrConstantDeclarationWithAssignmentAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                                           const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                                           GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                                           GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                                           C_Compiler * inCompiler
                                                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_localVariableOrConstantDeclarationWithAssignmentAST * object = (const cPtr_localVariableOrConstantDeclarationWithAssignmentAST *) inObject ;
  macroValidSharedObject (object, cPtr_localVariableOrConstantDeclarationWithAssignmentAST) ;
  GALGAS_semanticExpressionForGeneration var_expression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mSourceExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (177)) ;
  GALGAS_unifiedTypeMapProxy var_targetType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (183)) ;
  GALGAS_string var_targetVariableCppName = GALGAS_string ("var_").operator_concat (object->mAttribute_mVariableName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (184)) COMMA_SOURCE_FILE_AT_LINE (184)) ;
  const enumGalgasBool test_0 = object->mAttribute_mIsConstant.boolEnum () ;
  if (kBoolTrue == test_0) {
    {
    ioArgument_ioVariableMap.modifier_insertLocalConstant (object->mAttribute_mVariableName, var_targetType, var_targetVariableCppName, var_targetVariableCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (186)) ;
    }
  }else if (kBoolFalse == test_0) {
    {
    ioArgument_ioVariableMap.modifier_insertDefinedLocalVariable (object->mAttribute_mVariableName, var_targetType, var_targetVariableCppName, var_targetVariableCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (188)) ;
    }
  }
  {
  routine_checkAssignmentTypes (var_targetType, var_expression.reader_mType (SOURCE_FILE_AT_LINE (191)), object->mAttribute_mInstructionLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (191)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_localVariableOrConstantDeclarationWithSourceExpressionForGeneration::constructor_new (var_targetType, object->mAttribute_mIsConstant, var_targetVariableCppName, var_expression COMMA_SOURCE_FILE_AT_LINE (193)) COMMA_SOURCE_FILE_AT_LINE (193)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_localVariableOrConstantDeclarationWithAssignmentAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_localVariableOrConstantDeclarationWithAssignmentAST.mSlotID,
                                                  categoryMethod_localVariableOrConstantDeclarationWithAssignmentAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_localVariableOrConstantDeclarationWithAssignmentAST_analyzeSemanticInstruction (defineCategoryMethod_localVariableOrConstantDeclarationWithAssignmentAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@localConstantDeclarationWithAssignmentAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_localConstantDeclarationWithAssignmentAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                                 const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                                 GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                                 GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                                 C_Compiler * inCompiler
                                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_localConstantDeclarationWithAssignmentAST * object = (const cPtr_localConstantDeclarationWithAssignmentAST *) inObject ;
  macroValidSharedObject (object, cPtr_localConstantDeclarationWithAssignmentAST) ;
  GALGAS_semanticExpressionForGeneration var_expression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mSourceExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (209)) ;
  GALGAS_string var_targetVariableCppName = GALGAS_string ("var_").operator_concat (object->mAttribute_mVariableName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (215)) COMMA_SOURCE_FILE_AT_LINE (215)) ;
  {
  ioArgument_ioVariableMap.modifier_insertDefinedLocalVariable (object->mAttribute_mVariableName, var_expression.reader_mType (SOURCE_FILE_AT_LINE (216)), var_targetVariableCppName, var_targetVariableCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (216)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_localVariableOrConstantDeclarationWithSourceExpressionForGeneration::constructor_new (var_expression.reader_mType (SOURCE_FILE_AT_LINE (219)), GALGAS_bool (true), var_targetVariableCppName, var_expression COMMA_SOURCE_FILE_AT_LINE (218)) COMMA_SOURCE_FILE_AT_LINE (218)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_localConstantDeclarationWithAssignmentAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_localConstantDeclarationWithAssignmentAST.mSlotID,
                                                  categoryMethod_localConstantDeclarationWithAssignmentAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_localConstantDeclarationWithAssignmentAST_analyzeSemanticInstruction (defineCategoryMethod_localConstantDeclarationWithAssignmentAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@localVariableDeclarationAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_localVariableDeclarationAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                   const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                   GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                   GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_localVariableDeclarationAST * object = (const cPtr_localVariableDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_localVariableDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_targetType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (234)) ;
  GALGAS_string var_targetVariableCppName = GALGAS_string ("var_").operator_concat (object->mAttribute_mVariableName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (235)) COMMA_SOURCE_FILE_AT_LINE (235)) ;
  const enumGalgasBool test_0 = object->mAttribute_mIsUndefinedConstant.boolEnum () ;
  if (kBoolTrue == test_0) {
    {
    ioArgument_ioVariableMap.modifier_insertUndefinedLocalConstant (object->mAttribute_mVariableName, var_targetType, var_targetVariableCppName, var_targetVariableCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (237)) ;
    }
  }else if (kBoolFalse == test_0) {
    {
    ioArgument_ioVariableMap.modifier_insertUndefinedLocalVariable (object->mAttribute_mVariableName, var_targetType, var_targetVariableCppName, var_targetVariableCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (239)) ;
    }
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_localVariableDeclarationForGeneration::constructor_new (var_targetType, var_targetVariableCppName COMMA_SOURCE_FILE_AT_LINE (242)) COMMA_SOURCE_FILE_AT_LINE (242)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_localVariableDeclarationAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_localVariableDeclarationAST.mSlotID,
                                                  categoryMethod_localVariableDeclarationAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_localVariableDeclarationAST_analyzeSemanticInstruction (defineCategoryMethod_localVariableDeclarationAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@assignmentInstructionAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_assignmentInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_assignmentInstructionAST * object = (const cPtr_assignmentInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_assignmentInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_expression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mSourceExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (257)) ;
  GALGAS_unifiedTypeMapProxy var_targetType ;
  GALGAS_string var_targetVariableCppName ;
  GALGAS_string var_nameForCheckingFormalParameterUsing ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mStructAttributeList.reader_length (SOURCE_FILE_AT_LINE (266)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    {
    ioArgument_ioVariableMap.modifier_searchForWriteAccess (object->mAttribute_mTargetVariableName, var_targetType, var_targetVariableCppName, var_nameForCheckingFormalParameterUsing, inCompiler COMMA_SOURCE_FILE_AT_LINE (267)) ;
    }
  }else if (kBoolFalse == test_0) {
    {
    ioArgument_ioVariableMap.modifier_searchForReadWriteAccess (object->mAttribute_mTargetVariableName, var_targetType, var_targetVariableCppName, var_nameForCheckingFormalParameterUsing, inCompiler COMMA_SOURCE_FILE_AT_LINE (269)) ;
    }
    cEnumerator_lstringlist enumerator_11385 (object->mAttribute_mStructAttributeList, kEnumeration_up) ;
    while (enumerator_11385.hasCurrentObject ()) {
      GALGAS_attributeMap var_attributeMap = var_targetType.reader_mAttributeMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (271)) ;
      var_attributeMap.method_searchKey (enumerator_11385.current_mValue (HERE), var_targetType, inCompiler COMMA_SOURCE_FILE_AT_LINE (272)) ;
      enumerator_11385.gotoNextObject () ;
    }
  }
  {
  routine_checkAssignmentTypes (var_targetType, var_expression.reader_mType (SOURCE_FILE_AT_LINE (276)), object->mAttribute_mInstructionLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (276)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_assignmentInstructionForGeneration::constructor_new (var_targetType, var_targetVariableCppName, var_nameForCheckingFormalParameterUsing, object->mAttribute_mStructAttributeList, var_expression COMMA_SOURCE_FILE_AT_LINE (278)) COMMA_SOURCE_FILE_AT_LINE (278)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_assignmentInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_assignmentInstructionAST.mSlotID,
                                                  categoryMethod_assignmentInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_assignmentInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_assignmentInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@selfAssignmentInstructionAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_selfAssignmentInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                    const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                    GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                    GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_selfAssignmentInstructionAST * object = (const cPtr_selfAssignmentInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_selfAssignmentInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_expression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mSourceExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (296)) ;
  const enumGalgasBool test_0 = constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy.reader_isNull (SOURCE_FILE_AT_LINE (302)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("'self' can be used only in category modifiers") COMMA_SOURCE_FILE_AT_LINE (303)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (304)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (304)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("'self' assignment is not allowed for class instances") COMMA_SOURCE_FILE_AT_LINE (305)) ;
    }
  }
  {
  routine_checkAssignmentTypes (constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy, var_expression.reader_mType (SOURCE_FILE_AT_LINE (308)), object->mAttribute_mInstructionLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (308)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_assignmentInstructionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy, constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName, constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName, GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (314)), var_expression COMMA_SOURCE_FILE_AT_LINE (310)) COMMA_SOURCE_FILE_AT_LINE (310)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_selfAssignmentInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_selfAssignmentInstructionAST.mSlotID,
                                                  categoryMethod_selfAssignmentInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_selfAssignmentInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_selfAssignmentInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@errorInstructionAST analyzeSemanticInstruction' *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_errorInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                           const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                           GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                           GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_errorInstructionAST * object = (const cPtr_errorInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_errorInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_locationExpression ;
  GALGAS_semanticExpressionForGeneration var_messageExpression ;
  GALGAS_bool var_useLocationReader ;
  {
  routine_analyzeErrorOrWarningInstruction (constinArgument_inAnalysisContext, object->mAttribute_mLocationExpression, object->mAttribute_mMessageExpression, object->mAttribute_mInstructionLocation, GALGAS_string ("error"), ioArgument_ioVariableMap, var_locationExpression, var_messageExpression, var_useLocationReader, inCompiler COMMA_SOURCE_FILE_AT_LINE (387)) ;
  }
  GALGAS_stringlist var_builtVariableCppNameList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (399)) ;
  cEnumerator_lstringlist enumerator_16753 (object->mAttribute_mBuiltVariableList, kEnumeration_up) ;
  while (enumerator_16753.hasCurrentObject ()) {
    GALGAS_string var_varCppName ;
    {
    GALGAS_unifiedTypeMapProxy joker_16833_0 ; // Joker input parameter
    GALGAS_string joker_16848_0 ; // Joker input parameter
    ioArgument_ioVariableMap.modifier_searchForWriteAccess (enumerator_16753.current_mValue (HERE), joker_16833_0, var_varCppName, joker_16848_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (402)) ;
    }
    var_builtVariableCppNameList.addAssign_operation (var_varCppName COMMA_SOURCE_FILE_AT_LINE (403)) ;
    enumerator_16753.gotoNextObject () ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_errorInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_locationExpression, var_useLocationReader, var_messageExpression, var_builtVariableCppNameList COMMA_SOURCE_FILE_AT_LINE (406)) COMMA_SOURCE_FILE_AT_LINE (406)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_errorInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_errorInstructionAST.mSlotID,
                                                  categoryMethod_errorInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_errorInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_errorInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@warningInstructionAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_warningInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                             const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                             GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                             GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_warningInstructionAST * object = (const cPtr_warningInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_warningInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_locationExpression ;
  GALGAS_semanticExpressionForGeneration var_messageExpression ;
  GALGAS_bool var_useLocationReader ;
  {
  routine_analyzeErrorOrWarningInstruction (constinArgument_inAnalysisContext, object->mAttribute_mLocationExpression, object->mAttribute_mMessageExpression, object->mAttribute_mInstructionLocation, GALGAS_string ("warning"), ioArgument_ioVariableMap, var_locationExpression, var_messageExpression, var_useLocationReader, inCompiler COMMA_SOURCE_FILE_AT_LINE (426)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_warningInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_locationExpression, var_useLocationReader, var_messageExpression COMMA_SOURCE_FILE_AT_LINE (438)) COMMA_SOURCE_FILE_AT_LINE (438)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_warningInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_warningInstructionAST.mSlotID,
                                                  categoryMethod_warningInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_warningInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_warningInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Abstract category method '@actualParameterAST checkAgainstFormalArgument'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_actualParameterAST_checkAgainstFormalArgument> gCategoryMethodTable_actualParameterAST_checkAgainstFormalArgument ;

//-----------------------------------------------------------------------------*

void enterCategoryMethod_checkAgainstFormalArgument (const int32_t inClassIndex,
                                                     categoryMethodSignature_actualParameterAST_checkAgainstFormalArgument inMethod) {
  gCategoryMethodTable_actualParameterAST_checkAgainstFormalArgument.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//-----------------------------------------------------------------------------*

static void freeCategoryMethod_actualParameterAST_checkAgainstFormalArgument (void) {
  gCategoryMethodTable_actualParameterAST_checkAgainstFormalArgument.free () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_actualParameterAST_checkAgainstFormalArgument (NULL,
                                                                          freeCategoryMethod_actualParameterAST_checkAgainstFormalArgument) ;

//-----------------------------------------------------------------------------*

void callCategoryMethod_checkAgainstFormalArgument (const cPtr_actualParameterAST * inObject,
                                                    const GALGAS_analysisContext constin_inAnalysisContext,
                                                    const GALGAS_unifiedTypeMapProxy constin_inFormalArgumentType,
                                                    const GALGAS_formalArgumentPassingModeAST constin_inFormalArgumentPassingMode,
                                                    GALGAS_variableMap & io_ioVariableMap,
                                                    GALGAS_actualParameterListForGeneration & io_ioActualParameterListForGeneration,
                                                    GALGAS_stringset & io_ioExclusiveVariableSet,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_actualParameterAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_actualParameterAST_checkAgainstFormalArgument f = NULL ;
    if (classIndex < gCategoryMethodTable_actualParameterAST_checkAgainstFormalArgument.count ()) {
      f = gCategoryMethodTable_actualParameterAST_checkAgainstFormalArgument (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_actualParameterAST_checkAgainstFormalArgument.count ()) {
           f = gCategoryMethodTable_actualParameterAST_checkAgainstFormalArgument (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_actualParameterAST_checkAgainstFormalArgument.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inAnalysisContext, constin_inFormalArgumentType, constin_inFormalArgumentPassingMode, io_ioVariableMap, io_ioActualParameterListForGeneration, io_ioExclusiveVariableSet, inCompiler COMMA_THERE) ;
    }
  }
}

//-----------------------------------------------------------------------------*
//                                                                             *
//Category Reader '@formalArgumentPassingModeAST correspondingEffectiveParameterString'*
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string categoryReader_correspondingEffectiveParameterString (const GALGAS_formalArgumentPassingModeAST & inObject,
                                                                    C_Compiler * /* inCompiler */
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_formalArgumentPassingModeAST temp_0 = inObject ;
  if (temp_0.isValid ()) {
    switch (temp_0.enumValue ()) {
    case GALGAS_formalArgumentPassingModeAST::kNotBuilt:
      break ;
    case GALGAS_formalArgumentPassingModeAST::kEnum_argumentConstantIn: {
      result_outResult = GALGAS_string ("!") ;
      } break ;
    case GALGAS_formalArgumentPassingModeAST::kEnum_argumentIn: {
      result_outResult = GALGAS_string ("!") ;
      } break ;
    case GALGAS_formalArgumentPassingModeAST::kEnum_argumentOut: {
      result_outResult = GALGAS_string ("\?") ;
      } break ;
    case GALGAS_formalArgumentPassingModeAST::kEnum_argumentInOut: {
      result_outResult = GALGAS_string ("!\?") ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@outputActualParameterAST checkAgainstFormalArgument'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_outputActualParameterAST_checkAgainstFormalArgument (const cPtr_actualParameterAST * inObject,
                                                                                const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                const GALGAS_unifiedTypeMapProxy constinArgument_inFormalArgumentType,
                                                                                const GALGAS_formalArgumentPassingModeAST constinArgument_inFormalArgumentPassingMode,
                                                                                GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                GALGAS_actualParameterListForGeneration & ioArgument_ioActualParameterListForGeneration,
                                                                                GALGAS_stringset & /* ioArgument_ioExclusiveVariableSet */,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_outputActualParameterAST * object = (const cPtr_outputActualParameterAST *) inObject ;
  macroValidSharedObject (object, cPtr_outputActualParameterAST) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inFormalArgumentPassingMode.objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentIn (SOURCE_FILE_AT_LINE (479)))).operator_and (GALGAS_bool (kIsNotEqual, constinArgument_inFormalArgumentPassingMode.objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (480)))) COMMA_SOURCE_FILE_AT_LINE (479)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mQualifierLocation, GALGAS_string ("the corresponding formal argument has the '").operator_concat (categoryReader_string (constinArgument_inFormalArgumentPassingMode, inCompiler COMMA_SOURCE_FILE_AT_LINE (482)) COMMA_SOURCE_FILE_AT_LINE (482)).operator_concat (GALGAS_string ("' passing mode: this parameter should be passed with '") COMMA_SOURCE_FILE_AT_LINE (482)).operator_concat (categoryReader_correspondingEffectiveParameterString (constinArgument_inFormalArgumentPassingMode, inCompiler COMMA_SOURCE_FILE_AT_LINE (483)) COMMA_SOURCE_FILE_AT_LINE (483)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (483)) COMMA_SOURCE_FILE_AT_LINE (481)) ;
  }else if (kBoolFalse == test_0) {
    GALGAS_semanticExpressionForGeneration var_expression ;
    callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mOutputActualParameterExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (487)) ;
    {
    routine_checkAssignmentTypes (constinArgument_inFormalArgumentType, var_expression.reader_mType (SOURCE_FILE_AT_LINE (493)), object->mAttribute_mEndOfExpressionLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (493)) ;
    }
    ioArgument_ioActualParameterListForGeneration.addAssign_operation (GALGAS_outputActualParameterForGeneration::constructor_new (var_expression COMMA_SOURCE_FILE_AT_LINE (495)) COMMA_SOURCE_FILE_AT_LINE (495)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_outputActualParameterAST_checkAgainstFormalArgument (void) {
  enterCategoryMethod_checkAgainstFormalArgument (kTypeDescriptor_GALGAS_outputActualParameterAST.mSlotID,
                                                  categoryMethod_outputActualParameterAST_checkAgainstFormalArgument) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_outputActualParameterAST_checkAgainstFormalArgument (defineCategoryMethod_outputActualParameterAST_checkAgainstFormalArgument, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@outputInputActualParameterAST checkAgainstFormalArgument'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_outputInputActualParameterAST_checkAgainstFormalArgument (const cPtr_actualParameterAST * inObject,
                                                                                     const GALGAS_analysisContext /* constinArgument_inAnalysisContext */,
                                                                                     const GALGAS_unifiedTypeMapProxy constinArgument_inFormalArgumentType,
                                                                                     const GALGAS_formalArgumentPassingModeAST constinArgument_inFormalArgumentPassingMode,
                                                                                     GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                     GALGAS_actualParameterListForGeneration & ioArgument_ioActualParameterListForGeneration,
                                                                                     GALGAS_stringset & ioArgument_ioExclusiveVariableSet,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_outputInputActualParameterAST * object = (const cPtr_outputInputActualParameterAST *) inObject ;
  macroValidSharedObject (object, cPtr_outputInputActualParameterAST) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inFormalArgumentPassingMode.objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentInOut (SOURCE_FILE_AT_LINE (511)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mQualifierLocation, GALGAS_string ("the corresponding formal argument has the '").operator_concat (categoryReader_string (constinArgument_inFormalArgumentPassingMode, inCompiler COMMA_SOURCE_FILE_AT_LINE (513)) COMMA_SOURCE_FILE_AT_LINE (513)).operator_concat (GALGAS_string ("' passing mode: this parameter should be passed with '") COMMA_SOURCE_FILE_AT_LINE (513)).operator_concat (categoryReader_correspondingEffectiveParameterString (constinArgument_inFormalArgumentPassingMode, inCompiler COMMA_SOURCE_FILE_AT_LINE (514)) COMMA_SOURCE_FILE_AT_LINE (514)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (514)) COMMA_SOURCE_FILE_AT_LINE (512)) ;
  }
  GALGAS_unifiedTypeMapProxy var_parameterType ;
  GALGAS_string var_variableCppName ;
  {
  GALGAS_string joker_21324_0 ; // Joker input parameter
  ioArgument_ioVariableMap.modifier_searchForReadWriteAccess (object->mAttribute_mOutputInputActualParameterName, var_parameterType, var_variableCppName, joker_21324_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (520)) ;
  }
  cEnumerator_lstringlist enumerator_21359 (object->mAttribute_mStructAttributeList, kEnumeration_up) ;
  while (enumerator_21359.hasCurrentObject ()) {
    GALGAS_attributeMap var_attributeMap = var_parameterType.reader_mAttributeMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (522)) ;
    var_attributeMap.method_searchKey (enumerator_21359.current_mValue (HERE), var_parameterType, inCompiler COMMA_SOURCE_FILE_AT_LINE (523)) ;
    enumerator_21359.gotoNextObject () ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, constinArgument_inFormalArgumentType.objectCompare (var_parameterType)).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_location location_2 (object->mAttribute_mOutputInputActualParameterName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, GALGAS_string ("the parameter object has the '@").operator_concat (var_parameterType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (528)) COMMA_SOURCE_FILE_AT_LINE (528)).operator_concat (GALGAS_string ("', it should be the same as the corresponding formal argument: '@") COMMA_SOURCE_FILE_AT_LINE (528)).operator_concat (constinArgument_inFormalArgumentType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (529)) COMMA_SOURCE_FILE_AT_LINE (529)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (529)) COMMA_SOURCE_FILE_AT_LINE (527)) ;
  }
  const enumGalgasBool test_3 = ioArgument_ioExclusiveVariableSet.reader_hasKey (object->mAttribute_mOutputInputActualParameterName.reader_string (SOURCE_FILE_AT_LINE (533)) COMMA_SOURCE_FILE_AT_LINE (533)).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_location location_4 (object->mAttribute_mOutputInputActualParameterName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_4, GALGAS_string ("this variable is already named as input or output/input effective parameter") COMMA_SOURCE_FILE_AT_LINE (534)) ;
  }
  ioArgument_ioExclusiveVariableSet.addAssign_operation (object->mAttribute_mOutputInputActualParameterName.reader_string (SOURCE_FILE_AT_LINE (538)) COMMA_SOURCE_FILE_AT_LINE (538)) ;
  ioArgument_ioActualParameterListForGeneration.addAssign_operation (GALGAS_outputInputActualParameterForGeneration::constructor_new (var_variableCppName, object->mAttribute_mStructAttributeList COMMA_SOURCE_FILE_AT_LINE (540)) COMMA_SOURCE_FILE_AT_LINE (540)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_outputInputActualParameterAST_checkAgainstFormalArgument (void) {
  enterCategoryMethod_checkAgainstFormalArgument (kTypeDescriptor_GALGAS_outputInputActualParameterAST.mSlotID,
                                                  categoryMethod_outputInputActualParameterAST_checkAgainstFormalArgument) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_outputInputActualParameterAST_checkAgainstFormalArgument (defineCategoryMethod_outputInputActualParameterAST_checkAgainstFormalArgument, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@inputActualParameterAST checkAgainstFormalArgument'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_inputActualParameterAST_checkAgainstFormalArgument (const cPtr_actualParameterAST * inObject,
                                                                               const GALGAS_analysisContext /* constinArgument_inAnalysisContext */,
                                                                               const GALGAS_unifiedTypeMapProxy constinArgument_inFormalArgumentType,
                                                                               const GALGAS_formalArgumentPassingModeAST constinArgument_inFormalArgumentPassingMode,
                                                                               GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                               GALGAS_actualParameterListForGeneration & ioArgument_ioActualParameterListForGeneration,
                                                                               GALGAS_stringset & ioArgument_ioExclusiveVariableSet,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_inputActualParameterAST * object = (const cPtr_inputActualParameterAST *) inObject ;
  macroValidSharedObject (object, cPtr_inputActualParameterAST) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inFormalArgumentPassingMode.objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (556)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mQualifierLocation, GALGAS_string ("the corresponding formal argument has the '").operator_concat (categoryReader_string (constinArgument_inFormalArgumentPassingMode, inCompiler COMMA_SOURCE_FILE_AT_LINE (558)) COMMA_SOURCE_FILE_AT_LINE (558)).operator_concat (GALGAS_string ("' passing mode: this parameter should be passed with '") COMMA_SOURCE_FILE_AT_LINE (558)).operator_concat (categoryReader_correspondingEffectiveParameterString (constinArgument_inFormalArgumentPassingMode, inCompiler COMMA_SOURCE_FILE_AT_LINE (559)) COMMA_SOURCE_FILE_AT_LINE (559)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (559)) COMMA_SOURCE_FILE_AT_LINE (557)) ;
  }
  GALGAS_unifiedTypeMapProxy var_parameterType ;
  GALGAS_string var_targetVariableCppName ;
  {
  GALGAS_string joker_23255_0 ; // Joker input parameter
  ioArgument_ioVariableMap.modifier_searchForWriteAccess (object->mAttribute_mInputActualParameterName, var_parameterType, var_targetVariableCppName, joker_23255_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (562)) ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, constinArgument_inFormalArgumentType.objectCompare (var_parameterType)).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_location location_2 (object->mAttribute_mInputActualParameterName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, GALGAS_string ("the parameter object has the '@").operator_concat (var_parameterType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (571)) COMMA_SOURCE_FILE_AT_LINE (571)).operator_concat (GALGAS_string ("', it should be the same as the corresponding formal argument: '@") COMMA_SOURCE_FILE_AT_LINE (571)).operator_concat (constinArgument_inFormalArgumentType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (572)) COMMA_SOURCE_FILE_AT_LINE (572)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (572)) COMMA_SOURCE_FILE_AT_LINE (570)) ;
  }
  const enumGalgasBool test_3 = ioArgument_ioExclusiveVariableSet.reader_hasKey (object->mAttribute_mInputActualParameterName.reader_string (SOURCE_FILE_AT_LINE (576)) COMMA_SOURCE_FILE_AT_LINE (576)).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_location location_4 (object->mAttribute_mInputActualParameterName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_4, GALGAS_string ("this variable is already named as input or output/input effective parameter") COMMA_SOURCE_FILE_AT_LINE (577)) ;
  }
  ioArgument_ioExclusiveVariableSet.addAssign_operation (object->mAttribute_mInputActualParameterName.reader_string (SOURCE_FILE_AT_LINE (581)) COMMA_SOURCE_FILE_AT_LINE (581)) ;
  ioArgument_ioActualParameterListForGeneration.addAssign_operation (GALGAS_inputActualParameterForGeneration::constructor_new (var_targetVariableCppName COMMA_SOURCE_FILE_AT_LINE (583)) COMMA_SOURCE_FILE_AT_LINE (583)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_inputActualParameterAST_checkAgainstFormalArgument (void) {
  enterCategoryMethod_checkAgainstFormalArgument (kTypeDescriptor_GALGAS_inputActualParameterAST.mSlotID,
                                                  categoryMethod_inputActualParameterAST_checkAgainstFormalArgument) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_inputActualParameterAST_checkAgainstFormalArgument (defineCategoryMethod_inputActualParameterAST_checkAgainstFormalArgument, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@inputJokerActualParameterAST checkAgainstFormalArgument'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_inputJokerActualParameterAST_checkAgainstFormalArgument (const cPtr_actualParameterAST * inObject,
                                                                                    const GALGAS_analysisContext /* constinArgument_inAnalysisContext */,
                                                                                    const GALGAS_unifiedTypeMapProxy constinArgument_inFormalArgumentType,
                                                                                    const GALGAS_formalArgumentPassingModeAST constinArgument_inFormalArgumentPassingMode,
                                                                                    GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                                    GALGAS_actualParameterListForGeneration & ioArgument_ioActualParameterListForGeneration,
                                                                                    GALGAS_stringset & /* ioArgument_ioExclusiveVariableSet */,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_inputJokerActualParameterAST * object = (const cPtr_inputJokerActualParameterAST *) inObject ;
  macroValidSharedObject (object, cPtr_inputJokerActualParameterAST) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inFormalArgumentPassingMode.objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (598)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mQualifierLocation, GALGAS_string ("the corresponding formal argument has the '").operator_concat (categoryReader_string (constinArgument_inFormalArgumentPassingMode, inCompiler COMMA_SOURCE_FILE_AT_LINE (600)) COMMA_SOURCE_FILE_AT_LINE (600)).operator_concat (GALGAS_string ("' passing mode: this parameter should be passed with '") COMMA_SOURCE_FILE_AT_LINE (600)).operator_concat (categoryReader_correspondingEffectiveParameterString (constinArgument_inFormalArgumentPassingMode, inCompiler COMMA_SOURCE_FILE_AT_LINE (601)) COMMA_SOURCE_FILE_AT_LINE (601)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (601)) COMMA_SOURCE_FILE_AT_LINE (599)) ;
  }else if (kBoolFalse == test_0) {
    GALGAS_string var_cppVarName = GALGAS_string ("joker_").operator_concat (object->mAttribute_mQualifierLocation.reader_locationIndex (inCompiler COMMA_SOURCE_FILE_AT_LINE (604)).reader_string (SOURCE_FILE_AT_LINE (604)) COMMA_SOURCE_FILE_AT_LINE (604)).operator_concat (GALGAS_string ("_") COMMA_SOURCE_FILE_AT_LINE (604)).operator_concat (object->mAttribute_mJokerIndex.reader_string (SOURCE_FILE_AT_LINE (604)) COMMA_SOURCE_FILE_AT_LINE (604)) ;
    ioArgument_ioActualParameterListForGeneration.addAssign_operation (GALGAS_inputJokerParameterForGeneration::constructor_new (var_cppVarName, constinArgument_inFormalArgumentType COMMA_SOURCE_FILE_AT_LINE (606)) COMMA_SOURCE_FILE_AT_LINE (606)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_inputJokerActualParameterAST_checkAgainstFormalArgument (void) {
  enterCategoryMethod_checkAgainstFormalArgument (kTypeDescriptor_GALGAS_inputJokerActualParameterAST.mSlotID,
                                                  categoryMethod_inputJokerActualParameterAST_checkAgainstFormalArgument) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_inputJokerActualParameterAST_checkAgainstFormalArgument (defineCategoryMethod_inputJokerActualParameterAST_checkAgainstFormalArgument, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@routineCallInstructionAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_routineCallInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                 const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                 GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                 GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_routineCallInstructionAST * object = (const cPtr_routineCallInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_routineCallInstructionAST) ;
  GALGAS_formalParameterSignature var_routineSignature ;
  constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mRoutineMap.method_searchKey (object->mAttribute_mRoutineName, var_routineSignature, inCompiler COMMA_SOURCE_FILE_AT_LINE (656)) ;
  GALGAS_actualParameterListForGeneration var_actualParameterListForGeneration ;
  {
  routine_analyzeRoutineArguments (constinArgument_inAnalysisContext, object->mAttribute_mRoutineName, GALGAS_string ("'").operator_concat (object->mAttribute_mRoutineName.reader_string (SOURCE_FILE_AT_LINE (662)) COMMA_SOURCE_FILE_AT_LINE (662)).operator_concat (GALGAS_string ("' routine header") COMMA_SOURCE_FILE_AT_LINE (662)), var_routineSignature, object->mAttribute_mActualParameterList, ioArgument_ioVariableMap, var_actualParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (659)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_routineCallInstructionForGeneration::constructor_new (object->mAttribute_mRoutineName, var_actualParameterListForGeneration COMMA_SOURCE_FILE_AT_LINE (669)) COMMA_SOURCE_FILE_AT_LINE (669)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_routineCallInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_routineCallInstructionAST.mSlotID,
                                                  categoryMethod_routineCallInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_routineCallInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_routineCallInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@typeMethodCallInstructionAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_typeMethodCallInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                    const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                    GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                    GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_typeMethodCallInstructionAST * object = (const cPtr_typeMethodCallInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_typeMethodCallInstructionAST) ;
  GALGAS_unifiedTypeMapProxy var_type = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (683)) ;
  GALGAS_formalParameterSignature var_routineSignature ;
  GALGAS_bool var_hasCompilerArgument ;
  var_type.reader_mClassMethodMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (687)).method_searchKey (object->mAttribute_mMethodName, var_routineSignature, var_hasCompilerArgument, inCompiler COMMA_SOURCE_FILE_AT_LINE (687)) ;
  GALGAS_actualParameterListForGeneration var_actualParameterListForGeneration ;
  {
  routine_analyzeRoutineArguments (constinArgument_inAnalysisContext, object->mAttribute_mMethodName, GALGAS_string ("'").operator_concat (object->mAttribute_mMethodName.reader_string (SOURCE_FILE_AT_LINE (693)) COMMA_SOURCE_FILE_AT_LINE (693)).operator_concat (GALGAS_string ("' class method header") COMMA_SOURCE_FILE_AT_LINE (693)), var_routineSignature, object->mAttribute_mActualParameterList, ioArgument_ioVariableMap, var_actualParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (690)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_typeMethodInstructionForGeneration::constructor_new (object->mAttribute_mTypeName, object->mAttribute_mMethodName, var_actualParameterListForGeneration, var_hasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (700)) COMMA_SOURCE_FILE_AT_LINE (700)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_typeMethodCallInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_typeMethodCallInstructionAST.mSlotID,
                                                  categoryMethod_typeMethodCallInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_typeMethodCallInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_typeMethodCallInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@methodCallInstructionAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_methodCallInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_methodCallInstructionAST * object = (const cPtr_methodCallInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_methodCallInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_receiverExpression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mReceiverExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_receiverExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (717)) ;
  GALGAS_formalParameterSignature var_routineSignature ;
  GALGAS_bool var_hasCompilerArgument ;
  GALGAS_methodKind var_kind ;
  GALGAS_string var_errorMessage ;
  GALGAS_location joker_29336_0 ; // Joker input parameter
  GALGAS_methodQualifier joker_29360_0 ; // Joker input parameter
  var_receiverExpression.reader_mType (SOURCE_FILE_AT_LINE (727)).reader_mInstanceMethodMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (727)).method_searchKey (object->mAttribute_mMethodName, var_kind, var_routineSignature, joker_29336_0, var_hasCompilerArgument, joker_29360_0, var_errorMessage, inCompiler COMMA_SOURCE_FILE_AT_LINE (727)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_errorMessage.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (729)) ;
  }
  GALGAS_actualParameterListForGeneration var_actualParameterListForGeneration ;
  {
  routine_analyzeRoutineArguments (constinArgument_inAnalysisContext, object->mAttribute_mMethodName, GALGAS_string ("'").operator_concat (object->mAttribute_mMethodName.reader_string (SOURCE_FILE_AT_LINE (736)) COMMA_SOURCE_FILE_AT_LINE (736)).operator_concat (GALGAS_string ("' instance method header") COMMA_SOURCE_FILE_AT_LINE (736)), var_routineSignature, object->mAttribute_mActualParameterList, ioArgument_ioVariableMap, var_actualParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (733)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_methodCallInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_receiverExpression.reader_mType (SOURCE_FILE_AT_LINE (745)), var_receiverExpression, object->mAttribute_mMethodName.reader_string (SOURCE_FILE_AT_LINE (747)), var_kind, var_actualParameterListForGeneration, var_hasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (743)) COMMA_SOURCE_FILE_AT_LINE (743)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_methodCallInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_methodCallInstructionAST.mSlotID,
                                                  categoryMethod_methodCallInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_methodCallInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_methodCallInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@modifierCallInstructionAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_modifierCallInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                  const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                  GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                  GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_modifierCallInstructionAST * object = (const cPtr_modifierCallInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_modifierCallInstructionAST) ;
  GALGAS_unifiedTypeMapProxy var_receiverType ;
  GALGAS_string var_receiverVariableCppName ;
  GALGAS_string var_receiverVariableBaseName ;
  {
  ioArgument_ioVariableMap.modifier_searchForReadWriteAccess (object->mAttribute_mReceiverName, var_receiverType, var_receiverVariableCppName, var_receiverVariableBaseName, inCompiler COMMA_SOURCE_FILE_AT_LINE (788)) ;
  }
  cEnumerator_lstringlist enumerator_31444 (object->mAttribute_mReceiverStructAttributes, kEnumeration_up) ;
  while (enumerator_31444.hasCurrentObject ()) {
    GALGAS_attributeMap var_attributeMap = var_receiverType.reader_mAttributeMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (790)) ;
    var_attributeMap.method_searchKey (enumerator_31444.current_mValue (HERE), var_receiverType, inCompiler COMMA_SOURCE_FILE_AT_LINE (791)) ;
    enumerator_31444.gotoNextObject () ;
  }
  GALGAS_formalParameterSignature var_routineSignature ;
  GALGAS_bool var_hasCompilerArgument ;
  GALGAS_string var_modifierErrorMessage ;
  GALGAS_methodKind var_kind ;
  GALGAS_methodQualifier joker_31835_0 ; // Joker input parameter
  var_receiverType.reader_mModifierMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (798)).method_searchKey (object->mAttribute_mModifierName, var_kind, var_routineSignature, var_hasCompilerArgument, joker_31835_0, var_modifierErrorMessage, inCompiler COMMA_SOURCE_FILE_AT_LINE (798)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_modifierErrorMessage.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mModifierName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, var_modifierErrorMessage COMMA_SOURCE_FILE_AT_LINE (800)) ;
  }
  GALGAS_actualParameterListForGeneration var_actualParameterListForGeneration ;
  {
  routine_analyzeRoutineArguments (constinArgument_inAnalysisContext, object->mAttribute_mModifierName, GALGAS_string ("'").operator_concat (object->mAttribute_mModifierName.reader_string (SOURCE_FILE_AT_LINE (807)) COMMA_SOURCE_FILE_AT_LINE (807)).operator_concat (GALGAS_string ("' modifier header") COMMA_SOURCE_FILE_AT_LINE (807)), var_routineSignature, object->mAttribute_mActualParameterList, ioArgument_ioVariableMap, var_actualParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (804)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_modifierCallInstructionForGeneration::constructor_new (var_receiverVariableCppName, var_receiverVariableBaseName, object->mAttribute_mReceiverStructAttributes, var_receiverType, object->mAttribute_mModifierName, var_kind, var_actualParameterListForGeneration, var_hasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (814)) COMMA_SOURCE_FILE_AT_LINE (814)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_modifierCallInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_modifierCallInstructionAST.mSlotID,
                                                  categoryMethod_modifierCallInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_modifierCallInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_modifierCallInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@selfModifierCallInstructionAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_selfModifierCallInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                      const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                      GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                      GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_selfModifierCallInstructionAST * object = (const cPtr_selfModifierCallInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_selfModifierCallInstructionAST) ;
  GALGAS_unifiedTypeMapProxy var_selfTypeProxy ;
  GALGAS_string var_selfObjectCppName ;
  const enumGalgasBool test_0 = constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy.reader_isNull (SOURCE_FILE_AT_LINE (836)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mModifierName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("'self' can be used only in category modifiers") COMMA_SOURCE_FILE_AT_LINE (837)) ;
    var_selfObjectCppName.drop () ; // Release error dropped variable
    var_selfTypeProxy.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    var_selfObjectCppName = constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName ;
    var_selfTypeProxy = constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy ;
  }
  GALGAS_formalParameterSignature var_routineSignature ;
  GALGAS_bool var_hasCompilerArgument ;
  GALGAS_methodKind var_kind ;
  GALGAS_methodQualifier joker_33557_0 ; // Joker input parameter
  GALGAS_string joker_33560_0 ; // Joker input parameter
  var_selfTypeProxy.reader_mModifierMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (846)).method_searchKey (object->mAttribute_mModifierName, var_kind, var_routineSignature, var_hasCompilerArgument, joker_33557_0, joker_33560_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (846)) ;
  GALGAS_actualParameterListForGeneration var_actualParameterListForGeneration ;
  {
  routine_analyzeRoutineArguments (constinArgument_inAnalysisContext, object->mAttribute_mModifierName, GALGAS_string ("'").operator_concat (object->mAttribute_mModifierName.reader_string (SOURCE_FILE_AT_LINE (852)) COMMA_SOURCE_FILE_AT_LINE (852)).operator_concat (GALGAS_string ("' modifier header") COMMA_SOURCE_FILE_AT_LINE (852)), var_routineSignature, object->mAttribute_mActualParameterList, ioArgument_ioVariableMap, var_actualParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (849)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_selfModifierCallInstructionForGeneration::constructor_new (var_selfObjectCppName, var_selfTypeProxy, object->mAttribute_mModifierName, var_kind, var_actualParameterListForGeneration, var_hasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (859)) COMMA_SOURCE_FILE_AT_LINE (859)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_selfModifierCallInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_selfModifierCallInstructionAST.mSlotID,
                                                  categoryMethod_selfModifierCallInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_selfModifierCallInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_selfModifierCallInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@concatInstructionAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_concatInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                            const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                            GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                            GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_concatInstructionAST * object = (const cPtr_concatInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_concatInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_expression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mSourceExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (901)) ;
  GALGAS_unifiedTypeMapProxy var_targetType ;
  GALGAS_string var_targetVariableCppName ;
  GALGAS_string var_nameForCheckingFormalParameterUsing ;
  {
  ioArgument_ioVariableMap.modifier_searchForReadWriteAccess (object->mAttribute_mTargetVariableName, var_targetType, var_targetVariableCppName, var_nameForCheckingFormalParameterUsing, inCompiler COMMA_SOURCE_FILE_AT_LINE (910)) ;
  }
  cEnumerator_lstringlist enumerator_35703 (object->mAttribute_mStructAttributeList, kEnumeration_up) ;
  while (enumerator_35703.hasCurrentObject ()) {
    GALGAS_attributeMap var_attributeMap = var_targetType.reader_mAttributeMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (912)) ;
    var_attributeMap.method_searchKey (enumerator_35703.current_mValue (HERE), var_targetType, inCompiler COMMA_SOURCE_FILE_AT_LINE (913)) ;
    enumerator_35703.gotoNextObject () ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_targetType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (916)).operator_and (function_dotAssignOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (916)) COMMA_SOURCE_FILE_AT_LINE (916)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the target object has the '@").operator_concat (var_targetType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (918)) COMMA_SOURCE_FILE_AT_LINE (918)).operator_concat (GALGAS_string ("' type, but this type does not support the '.=' operator") COMMA_SOURCE_FILE_AT_LINE (918)) COMMA_SOURCE_FILE_AT_LINE (917)) ;
  }
  {
  routine_checkAssignmentTypes (var_targetType, var_expression.reader_mType (SOURCE_FILE_AT_LINE (922)), object->mAttribute_mInstructionLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (922)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_concatInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_targetType, var_targetVariableCppName, var_nameForCheckingFormalParameterUsing, object->mAttribute_mStructAttributeList, var_expression COMMA_SOURCE_FILE_AT_LINE (924)) COMMA_SOURCE_FILE_AT_LINE (924)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_concatInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_concatInstructionAST.mSlotID,
                                                  categoryMethod_concatInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_concatInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_concatInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@selfConcatInstructionAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_selfConcatInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_selfConcatInstructionAST * object = (const cPtr_selfConcatInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_selfConcatInstructionAST) ;
  GALGAS_unifiedTypeMapProxy var_selfTypeProxy ;
  GALGAS_string var_selfObjectCppName ;
  const enumGalgasBool test_0 = constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy.reader_isNull (SOURCE_FILE_AT_LINE (944)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("'self' can be used only in category modifiers") COMMA_SOURCE_FILE_AT_LINE (945)) ;
    var_selfObjectCppName.drop () ; // Release error dropped variable
    var_selfTypeProxy.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    var_selfObjectCppName = constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName ;
    var_selfTypeProxy = constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_selfTypeProxy.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (951)).operator_and (function_dotAssignOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (951)) COMMA_SOURCE_FILE_AT_LINE (951)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the target object has the '@").operator_concat (var_selfTypeProxy.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (953)) COMMA_SOURCE_FILE_AT_LINE (953)).operator_concat (GALGAS_string ("' type, but this type does not support the '.=' operator") COMMA_SOURCE_FILE_AT_LINE (953)) COMMA_SOURCE_FILE_AT_LINE (952)) ;
  }
  GALGAS_semanticExpressionForGeneration var_expression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mSourceExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (958)) ;
  {
  routine_checkAssignmentTypes (var_selfTypeProxy, var_expression.reader_mType (SOURCE_FILE_AT_LINE (964)), object->mAttribute_mInstructionLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (964)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_concatInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_selfTypeProxy, var_selfObjectCppName, var_selfObjectCppName, GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (971)), var_expression COMMA_SOURCE_FILE_AT_LINE (966)) COMMA_SOURCE_FILE_AT_LINE (966)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_selfConcatInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_selfConcatInstructionAST.mSlotID,
                                                  categoryMethod_selfConcatInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_selfConcatInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_selfConcatInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@plusEqualInstructionAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_plusEqualInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                               const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                               GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                               GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_plusEqualInstructionAST * object = (const cPtr_plusEqualInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_plusEqualInstructionAST) ;
  GALGAS_unifiedTypeMapProxy var_targetType ;
  GALGAS_string var_targetVariableCppName ;
  GALGAS_string var_nameForCheckingFormalParameterUsing ;
  {
  ioArgument_ioVariableMap.modifier_searchForReadWriteAccess (object->mAttribute_mReceiverName, var_targetType, var_targetVariableCppName, var_nameForCheckingFormalParameterUsing, inCompiler COMMA_SOURCE_FILE_AT_LINE (987)) ;
  }
  cEnumerator_lstringlist enumerator_38706 (object->mAttribute_mStructAttributeList, kEnumeration_up) ;
  while (enumerator_38706.hasCurrentObject ()) {
    GALGAS_attributeMap var_attributeMap = var_targetType.reader_mAttributeMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (989)) ;
    var_attributeMap.method_searchKey (enumerator_38706.current_mValue (HERE), var_targetType, inCompiler COMMA_SOURCE_FILE_AT_LINE (990)) ;
    enumerator_38706.gotoNextObject () ;
  }
  GALGAS_unifiedTypeMapProxyAndParameterList var_addAssignOperatorArguments = var_targetType.reader_mAddAssignOperatorArguments (inCompiler COMMA_SOURCE_FILE_AT_LINE (993)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_addAssignOperatorArguments.reader_length (SOURCE_FILE_AT_LINE (994)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the target object has the '@").operator_concat (var_targetType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (996)) COMMA_SOURCE_FILE_AT_LINE (996)).operator_concat (GALGAS_string ("' type, but this type does not support the '+=' operator") COMMA_SOURCE_FILE_AT_LINE (996)) COMMA_SOURCE_FILE_AT_LINE (995)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, object->mAttribute_mExpressions.reader_length (SOURCE_FILE_AT_LINE (999)).objectCompare (var_addAssignOperatorArguments.reader_length (SOURCE_FILE_AT_LINE (999)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("calling the '+=' operator on an '@").operator_concat (var_targetType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1001)) COMMA_SOURCE_FILE_AT_LINE (1001)).operator_concat (GALGAS_string ("' object requires ") COMMA_SOURCE_FILE_AT_LINE (1001)).operator_concat (var_addAssignOperatorArguments.reader_length (SOURCE_FILE_AT_LINE (1002)).reader_string (SOURCE_FILE_AT_LINE (1002)) COMMA_SOURCE_FILE_AT_LINE (1001)).operator_concat (GALGAS_string (" parameter(s), while this invocation has ") COMMA_SOURCE_FILE_AT_LINE (1002)).operator_concat (object->mAttribute_mExpressions.reader_length (SOURCE_FILE_AT_LINE (1003)).reader_string (SOURCE_FILE_AT_LINE (1003)) COMMA_SOURCE_FILE_AT_LINE (1002)).operator_concat (GALGAS_string (" parameter(s)") COMMA_SOURCE_FILE_AT_LINE (1003)) COMMA_SOURCE_FILE_AT_LINE (1000)) ;
    }else if (kBoolFalse == test_1) {
      GALGAS_semanticExpressionListForGeneration var_effectiveParameterList = GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1006)) ;
      cEnumerator_semanticExpressionListAST enumerator_39705 (object->mAttribute_mExpressions, kEnumeration_up) ;
      cEnumerator_unifiedTypeMapProxyAndParameterList enumerator_39733 (var_addAssignOperatorArguments, kEnumeration_up) ;
      while (enumerator_39705.hasCurrentObject () && enumerator_39733.hasCurrentObject ()) {
        GALGAS_semanticExpressionForGeneration var_exp ;
        callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) enumerator_39705.current_mExpression (HERE).ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_exp, inCompiler COMMA_SOURCE_FILE_AT_LINE (1009)) ;
        {
        routine_checkAssignmentTypes (enumerator_39733.current_mType (HERE), var_exp.reader_mType (SOURCE_FILE_AT_LINE (1014)), enumerator_39705.current_mEndOfExpressionLocation (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1014)) ;
        }
        var_effectiveParameterList.addAssign_operation (var_exp COMMA_SOURCE_FILE_AT_LINE (1015)) ;
        enumerator_39705.gotoNextObject () ;
        enumerator_39733.gotoNextObject () ;
      }
      ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_plusEqualnstructionForGeneration::constructor_new (var_targetVariableCppName, var_targetType, var_nameForCheckingFormalParameterUsing, object->mAttribute_mInstructionLocation, object->mAttribute_mStructAttributeList, var_effectiveParameterList COMMA_SOURCE_FILE_AT_LINE (1018)) COMMA_SOURCE_FILE_AT_LINE (1018)) ;
    }
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_plusEqualInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_plusEqualInstructionAST.mSlotID,
                                                  categoryMethod_plusEqualInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_plusEqualInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_plusEqualInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@selfPlusEqualInstructionAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_selfPlusEqualInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                   const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                   GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                   GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_selfPlusEqualInstructionAST * object = (const cPtr_selfPlusEqualInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_selfPlusEqualInstructionAST) ;
  GALGAS_unifiedTypeMapProxy var_selfTypeProxy ;
  GALGAS_string var_selfObjectCppName ;
  const enumGalgasBool test_0 = constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy.reader_isNull (SOURCE_FILE_AT_LINE (1039)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("'self' can be used only in category modifiers") COMMA_SOURCE_FILE_AT_LINE (1040)) ;
    var_selfObjectCppName.drop () ; // Release error dropped variable
    var_selfTypeProxy.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    var_selfObjectCppName = constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName ;
    var_selfTypeProxy = constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy ;
  }
  GALGAS_unifiedTypeMapProxyAndParameterList var_addAssignOperatorArguments = var_selfTypeProxy.reader_mAddAssignOperatorArguments (inCompiler COMMA_SOURCE_FILE_AT_LINE (1046)) ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_addAssignOperatorArguments.reader_length (SOURCE_FILE_AT_LINE (1047)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the target object has the '@").operator_concat (var_selfTypeProxy.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1049)) COMMA_SOURCE_FILE_AT_LINE (1049)).operator_concat (GALGAS_string ("' type, but this type does not support the '+=' operator") COMMA_SOURCE_FILE_AT_LINE (1049)) COMMA_SOURCE_FILE_AT_LINE (1048)) ;
  }else if (kBoolFalse == test_1) {
    const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, object->mAttribute_mExpressions.reader_length (SOURCE_FILE_AT_LINE (1052)).objectCompare (var_addAssignOperatorArguments.reader_length (SOURCE_FILE_AT_LINE (1052)))).boolEnum () ;
    if (kBoolTrue == test_2) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("calling the '+=' operator on an '@").operator_concat (var_selfTypeProxy.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1054)) COMMA_SOURCE_FILE_AT_LINE (1054)).operator_concat (GALGAS_string ("' object requires ") COMMA_SOURCE_FILE_AT_LINE (1054)).operator_concat (var_addAssignOperatorArguments.reader_length (SOURCE_FILE_AT_LINE (1055)).reader_string (SOURCE_FILE_AT_LINE (1055)) COMMA_SOURCE_FILE_AT_LINE (1054)).operator_concat (GALGAS_string (" parameter(s), while this invocation has ") COMMA_SOURCE_FILE_AT_LINE (1055)).operator_concat (object->mAttribute_mExpressions.reader_length (SOURCE_FILE_AT_LINE (1056)).reader_string (SOURCE_FILE_AT_LINE (1056)) COMMA_SOURCE_FILE_AT_LINE (1055)).operator_concat (GALGAS_string (" parameter(s)") COMMA_SOURCE_FILE_AT_LINE (1056)) COMMA_SOURCE_FILE_AT_LINE (1053)) ;
    }else if (kBoolFalse == test_2) {
      GALGAS_semanticExpressionListForGeneration var_effectiveParameterList = GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1059)) ;
      cEnumerator_semanticExpressionListAST enumerator_41949 (object->mAttribute_mExpressions, kEnumeration_up) ;
      cEnumerator_unifiedTypeMapProxyAndParameterList enumerator_41977 (var_addAssignOperatorArguments, kEnumeration_up) ;
      while (enumerator_41949.hasCurrentObject () && enumerator_41977.hasCurrentObject ()) {
        GALGAS_semanticExpressionForGeneration var_exp ;
        callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) enumerator_41949.current_mExpression (HERE).ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_exp, inCompiler COMMA_SOURCE_FILE_AT_LINE (1062)) ;
        {
        routine_checkAssignmentTypes (enumerator_41977.current_mType (HERE), var_exp.reader_mType (SOURCE_FILE_AT_LINE (1067)), enumerator_41949.current_mEndOfExpressionLocation (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1067)) ;
        }
        var_effectiveParameterList.addAssign_operation (var_exp COMMA_SOURCE_FILE_AT_LINE (1068)) ;
        enumerator_41949.gotoNextObject () ;
        enumerator_41977.gotoNextObject () ;
      }
      ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_plusEqualnstructionForGeneration::constructor_new (var_selfObjectCppName, var_selfTypeProxy, GALGAS_string::makeEmptyString (), object->mAttribute_mInstructionLocation, GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1076)), var_effectiveParameterList COMMA_SOURCE_FILE_AT_LINE (1071)) COMMA_SOURCE_FILE_AT_LINE (1071)) ;
    }
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_selfPlusEqualInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_selfPlusEqualInstructionAST.mSlotID,
                                                  categoryMethod_selfPlusEqualInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_selfPlusEqualInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_selfPlusEqualInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@incrementInstructionAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_incrementInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                               const GALGAS_analysisContext /* constinArgument_inAnalysisContext */,
                                                                               GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                               GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_incrementInstructionAST * object = (const cPtr_incrementInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_incrementInstructionAST) ;
  GALGAS_unifiedTypeMapProxy var_targetType ;
  GALGAS_string var_targetVariableCppName ;
  {
  GALGAS_string joker_43053_0 ; // Joker input parameter
  ioArgument_ioVariableMap.modifier_searchForReadWriteAccess (object->mAttribute_mReceiverName, var_targetType, var_targetVariableCppName, joker_43053_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1092)) ;
  }
  cEnumerator_lstringlist enumerator_43088 (object->mAttribute_mStructAttributeList, kEnumeration_up) ;
  while (enumerator_43088.hasCurrentObject ()) {
    GALGAS_attributeMap var_attributeMap = var_targetType.reader_mAttributeMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1094)) ;
    var_attributeMap.method_searchKey (enumerator_43088.current_mValue (HERE), var_targetType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1095)) ;
    enumerator_43088.gotoNextObject () ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_targetType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1098)).operator_and (function_incDecOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1098)) COMMA_SOURCE_FILE_AT_LINE (1098)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the target object has the '@").operator_concat (var_targetType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1100)) COMMA_SOURCE_FILE_AT_LINE (1100)).operator_concat (GALGAS_string ("' type, but this type does not support the '++' operator") COMMA_SOURCE_FILE_AT_LINE (1100)) COMMA_SOURCE_FILE_AT_LINE (1099)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_incrementInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_targetVariableCppName, var_targetType, object->mAttribute_mStructAttributeList COMMA_SOURCE_FILE_AT_LINE (1104)) COMMA_SOURCE_FILE_AT_LINE (1104)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_incrementInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_incrementInstructionAST.mSlotID,
                                                  categoryMethod_incrementInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_incrementInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_incrementInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@selfIncrementInstructionAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_selfIncrementInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                   const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                   GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                   GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_selfIncrementInstructionAST * object = (const cPtr_selfIncrementInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_selfIncrementInstructionAST) ;
  GALGAS_unifiedTypeMapProxy var_selfTypeProxy ;
  GALGAS_string var_selfObjectCppName ;
  const enumGalgasBool test_0 = constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy.reader_isNull (SOURCE_FILE_AT_LINE (1122)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("'self' can be used only in category modifiers") COMMA_SOURCE_FILE_AT_LINE (1123)) ;
    var_selfObjectCppName.drop () ; // Release error dropped variable
    var_selfTypeProxy.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    var_selfObjectCppName = constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName ;
    var_selfTypeProxy = constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_selfTypeProxy.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1129)).operator_and (function_incDecOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1129)) COMMA_SOURCE_FILE_AT_LINE (1129)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the target object has the '@").operator_concat (var_selfTypeProxy.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1131)) COMMA_SOURCE_FILE_AT_LINE (1131)).operator_concat (GALGAS_string ("' type, but this type does not support the '++' operator") COMMA_SOURCE_FILE_AT_LINE (1131)) COMMA_SOURCE_FILE_AT_LINE (1130)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_incrementInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_selfObjectCppName, var_selfTypeProxy, GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1139)) COMMA_SOURCE_FILE_AT_LINE (1135)) COMMA_SOURCE_FILE_AT_LINE (1135)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_selfIncrementInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_selfIncrementInstructionAST.mSlotID,
                                                  categoryMethod_selfIncrementInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_selfIncrementInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_selfIncrementInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@decrementInstructionAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_decrementInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                               const GALGAS_analysisContext /* constinArgument_inAnalysisContext */,
                                                                               GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                               GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_decrementInstructionAST * object = (const cPtr_decrementInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_decrementInstructionAST) ;
  GALGAS_unifiedTypeMapProxy var_targetType ;
  GALGAS_string var_targetVariableCppName ;
  {
  GALGAS_string joker_45440_0 ; // Joker input parameter
  ioArgument_ioVariableMap.modifier_searchForReadWriteAccess (object->mAttribute_mReceiverName, var_targetType, var_targetVariableCppName, joker_45440_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1153)) ;
  }
  cEnumerator_lstringlist enumerator_45475 (object->mAttribute_mStructAttributeList, kEnumeration_up) ;
  while (enumerator_45475.hasCurrentObject ()) {
    GALGAS_attributeMap var_attributeMap = var_targetType.reader_mAttributeMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1155)) ;
    var_attributeMap.method_searchKey (enumerator_45475.current_mValue (HERE), var_targetType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1156)) ;
    enumerator_45475.gotoNextObject () ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_targetType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1159)).operator_and (function_incDecOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1159)) COMMA_SOURCE_FILE_AT_LINE (1159)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the target object has the '@").operator_concat (var_targetType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1161)) COMMA_SOURCE_FILE_AT_LINE (1161)).operator_concat (GALGAS_string ("' type, but this type does not support the '--' operator") COMMA_SOURCE_FILE_AT_LINE (1161)) COMMA_SOURCE_FILE_AT_LINE (1160)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_decrementInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_targetVariableCppName, var_targetType, object->mAttribute_mStructAttributeList COMMA_SOURCE_FILE_AT_LINE (1165)) COMMA_SOURCE_FILE_AT_LINE (1165)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_decrementInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_decrementInstructionAST.mSlotID,
                                                  categoryMethod_decrementInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_decrementInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_decrementInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@selfDecrementInstructionAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_selfDecrementInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                   const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                   GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                   GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_selfDecrementInstructionAST * object = (const cPtr_selfDecrementInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_selfDecrementInstructionAST) ;
  GALGAS_unifiedTypeMapProxy var_selfTypeProxy ;
  GALGAS_string var_selfObjectCppName ;
  const enumGalgasBool test_0 = constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy.reader_isNull (SOURCE_FILE_AT_LINE (1183)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("'self' can be used only in category modifiers") COMMA_SOURCE_FILE_AT_LINE (1184)) ;
    var_selfObjectCppName.drop () ; // Release error dropped variable
    var_selfTypeProxy.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    var_selfObjectCppName = constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName ;
    var_selfTypeProxy = constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_selfTypeProxy.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1190)).operator_and (function_incDecOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1190)) COMMA_SOURCE_FILE_AT_LINE (1190)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the target object has the '@").operator_concat (var_selfTypeProxy.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1192)) COMMA_SOURCE_FILE_AT_LINE (1192)).operator_concat (GALGAS_string ("' type, but this type does not support the '--' operator") COMMA_SOURCE_FILE_AT_LINE (1192)) COMMA_SOURCE_FILE_AT_LINE (1191)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_decrementInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_selfObjectCppName, var_selfTypeProxy, GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1200)) COMMA_SOURCE_FILE_AT_LINE (1196)) COMMA_SOURCE_FILE_AT_LINE (1196)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_selfDecrementInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_selfDecrementInstructionAST.mSlotID,
                                                  categoryMethod_selfDecrementInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_selfDecrementInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_selfDecrementInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@messageInstructionAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_messageInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                             const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                             GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                             GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_messageInstructionAST * object = (const cPtr_messageInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_messageInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_expression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1213)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_expression.reader_mType (SOURCE_FILE_AT_LINE (1219)).objectCompare (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mStringType)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the expression has the '@").operator_concat (var_expression.reader_mType (SOURCE_FILE_AT_LINE (1221)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1221)) COMMA_SOURCE_FILE_AT_LINE (1221)).operator_concat (GALGAS_string ("' type, but the 'message' instruction requires an '@string' expression") COMMA_SOURCE_FILE_AT_LINE (1221)) COMMA_SOURCE_FILE_AT_LINE (1220)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_messageInstructionForGeneration::constructor_new (var_expression, object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1225)) COMMA_SOURCE_FILE_AT_LINE (1225)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_messageInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_messageInstructionAST.mSlotID,
                                                  categoryMethod_messageInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_messageInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_messageInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category method '@logInstructionAST analyzeSemanticInstruction'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_logInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                         const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                         GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                         GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_logInstructionAST * object = (const cPtr_logInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_logInstructionAST) ;
  cEnumerator_logListAST enumerator_48577 (object->mAttribute_mLogList, kEnumeration_up) ;
  while (enumerator_48577.hasCurrentObject ()) {
    GALGAS_semanticExpressionForGeneration var_expression ;
    callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) enumerator_48577.current_mLogExpression (HERE).ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1241)) ;
    ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_logInstructionForGeneration::constructor_new (enumerator_48577.current_mLogMessage (HERE), var_expression COMMA_SOURCE_FILE_AT_LINE (1247)) COMMA_SOURCE_FILE_AT_LINE (1247)) ;
    enumerator_48577.gotoNextObject () ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_logInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_logInstructionAST.mSlotID,
                                                  categoryMethod_logInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_logInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_logInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category method '@dropInstructionAST analyzeSemanticInstruction' *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_dropInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                          const GALGAS_analysisContext /* constinArgument_inAnalysisContext */,
                                                                          GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                          GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_dropInstructionAST * object = (const cPtr_dropInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_dropInstructionAST) ;
  GALGAS_stringlist var_cppNameDropList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1261)) ;
  cEnumerator_lstringlist enumerator_49318 (object->mAttribute_mDropList, kEnumeration_up) ;
  while (enumerator_49318.hasCurrentObject ()) {
    GALGAS_string var_variableCppName ;
    {
    GALGAS_unifiedTypeMapProxy joker_49402_0 ; // Joker input parameter
    GALGAS_string joker_49422_0 ; // Joker input parameter
    ioArgument_ioVariableMap.modifier_searchForDropAccess (enumerator_49318.current_mValue (HERE), joker_49402_0, var_variableCppName, joker_49422_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1264)) ;
    }
    var_cppNameDropList.addAssign_operation (var_variableCppName COMMA_SOURCE_FILE_AT_LINE (1265)) ;
    enumerator_49318.gotoNextObject () ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_dropInstructionForGeneration::constructor_new (var_cppNameDropList, GALGAS_string ("drop instruction") COMMA_SOURCE_FILE_AT_LINE (1268)) COMMA_SOURCE_FILE_AT_LINE (1268)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_dropInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_dropInstructionAST.mSlotID,
                                                  categoryMethod_dropInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_dropInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_dropInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@ifInstructionAST analyzeSemanticInstruction'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_ifInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                        const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                        GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                        GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ifInstructionAST * object = (const cPtr_ifInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_ifInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_analyzed_5F_if_5F_expression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_m_5F_if_5F_expression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_analyzed_5F_if_5F_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1365)) ;
  {
  ioArgument_ioVariableMap.modifier_openOverrideForSelectBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1370)) ;
  }
  GALGAS_semanticExpressionForGeneration var_if_5F_expression ;
  {
  routine_checkExpressionIsBoolean (constinArgument_inAnalysisContext, object->mAttribute_mEndOf_5F_if_5F_instruction, var_analyzed_5F_if_5F_expression, var_if_5F_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1373)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_then_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1383)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1384)), object->mAttribute_m_5F_then_5F_instructionList, object->mAttribute_mEndOf_5F_then_5F_branch, ioArgument_ioVariableMap, var_then_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1381)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_else_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1394)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1395)), object->mAttribute_m_5F_else_5F_instructionList, object->mAttribute_mEndOf_5F_if_5F_instruction, ioArgument_ioVariableMap, var_else_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1392)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_if_5F_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1401)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_ifInstructionForGeneration::constructor_new (object->mAttribute_mEndOf_5F_then_5F_branch, var_if_5F_expression, var_then_5F_instructionList, var_else_5F_instructionList COMMA_SOURCE_FILE_AT_LINE (1403)) COMMA_SOURCE_FILE_AT_LINE (1403)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_ifInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_ifInstructionAST.mSlotID,
                                                  categoryMethod_ifInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ifInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_ifInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category method '@forInstructionAST analyzeSemanticInstruction'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_forInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                         const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                         GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                         GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_forInstructionAST * object = (const cPtr_forInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_forInstructionAST) ;
  {
  ioArgument_ioVariableMap.modifier_openOverrideForSelectBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1419)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_openBranch (inCompiler COMMA_SOURCE_FILE_AT_LINE (1420)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1422)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_before_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1426)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1427)), object->mAttribute_mBeforeInstructionList, object->mAttribute_mEndOf_5F_before_5F_branch, ioArgument_ioVariableMap, var_before_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1424)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_before_5F_branch, inCompiler COMMA_SOURCE_FILE_AT_LINE (1433)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1435)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_between_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1439)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1440)), object->mAttribute_mBetweenInstructionList, object->mAttribute_mEndOf_5F_between_5F_branch, ioArgument_ioVariableMap, var_between_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1437)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_between_5F_branch, inCompiler COMMA_SOURCE_FILE_AT_LINE (1446)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1448)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_after_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1452)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1453)), object->mAttribute_mAfterInstructionList, object->mAttribute_mEndOf_5F_after_5F_branch, ioArgument_ioVariableMap, var_after_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1450)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_after_5F_branch, inCompiler COMMA_SOURCE_FILE_AT_LINE (1459)) ;
  }
  GALGAS_localInitializedVariableList var_localConstantListForDoBranch = GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1461)) ;
  GALGAS_foreachInstructionEnumeratedObjectListForGeneration var_enumerationList = GALGAS_foreachInstructionEnumeratedObjectListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1462)) ;
  cEnumerator_forInstructionEnumeratedObjectListAST enumerator_56441 (object->mAttribute_mEnumeratedObjectList, kEnumeration_up) ;
  while (enumerator_56441.hasCurrentObject ()) {
    GALGAS_semanticExpressionForGeneration var_enumerationExpression ;
    callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) enumerator_56441.current_mEnumeratedExpression (HERE).ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_enumerationExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1466)) ;
    GALGAS_string var_enumeratorCppName = GALGAS_string ("enumerator_").operator_concat (enumerator_56441.current_mEndOfEnumerationExpression (HERE).reader_locationIndex (inCompiler COMMA_SOURCE_FILE_AT_LINE (1472)).reader_string (SOURCE_FILE_AT_LINE (1472)) COMMA_SOURCE_FILE_AT_LINE (1472)) ;
    GALGAS_unifiedTypeMapProxy var_enumeratedElementType = var_enumerationExpression.reader_mType (SOURCE_FILE_AT_LINE (1473)).reader_mTypeForEnumeratedElement (inCompiler COMMA_SOURCE_FILE_AT_LINE (1473)) ;
    const enumGalgasBool test_0 = var_enumeratedElementType.reader_isNull (SOURCE_FILE_AT_LINE (1474)).boolEnum () ;
    if (kBoolTrue == test_0) {
      inCompiler->emitSemanticError (enumerator_56441.current_mEndOfEnumerationExpression (HERE), GALGAS_string ("an '@").operator_concat (var_enumerationExpression.reader_mType (SOURCE_FILE_AT_LINE (1475)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1475)) COMMA_SOURCE_FILE_AT_LINE (1475)).operator_concat (GALGAS_string ("' object cannot be enumerated") COMMA_SOURCE_FILE_AT_LINE (1475)) COMMA_SOURCE_FILE_AT_LINE (1475)) ;
    }else if (kBoolFalse == test_0) {
      var_localConstantListForDoBranch.addAssign_operation (var_enumeratedElementType, enumerator_56441.current_mEnumerationVariable (HERE), var_enumeratorCppName.operator_concat (GALGAS_string (".current (HERE)") COMMA_SOURCE_FILE_AT_LINE (1477)) COMMA_SOURCE_FILE_AT_LINE (1477)) ;
    }
    //--- @ifExpressionForGeneration
    GALGAS_string temp_1 ;
    const enumGalgasBool test_2 = enumerator_56441.current_mAscending (HERE).boolEnum () ;
    if (kBoolTrue == test_2) {
      temp_1 = GALGAS_string ("up") ;
    }else if (kBoolFalse == test_2) {
      temp_1 = GALGAS_string ("down") ;
    }
    var_enumerationList.addAssign_operation (temp_1, var_enumerationExpression, var_enumeratorCppName COMMA_SOURCE_FILE_AT_LINE (1480)) ;
    enumerator_56441.gotoNextObject () ;
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1487)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_openBranch (inCompiler COMMA_SOURCE_FILE_AT_LINE (1488)) ;
  }
  cEnumerator_localInitializedVariableList enumerator_57545 (var_localConstantListForDoBranch, kEnumeration_up) ;
  while (enumerator_57545.hasCurrentObject ()) {
    {
    ioArgument_ioVariableMap.modifier_insertUsedLocalConstant (enumerator_57545.current_mName (HERE), enumerator_57545.current_mType (HERE), enumerator_57545.current_mCppName (HERE), enumerator_57545.current_mCppName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1491)) ;
    }
    enumerator_57545.gotoNextObject () ;
  }
  GALGAS_semanticExpressionForGeneration var_uncheckedWhileExpression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mWhileExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_uncheckedWhileExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1495)) ;
  GALGAS_semanticExpressionForGeneration var_whileExpression ;
  {
  routine_checkExpressionIsBoolean (constinArgument_inAnalysisContext, object->mAttribute_mEndOf_5F_while_5F_expression, var_uncheckedWhileExpression, var_whileExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1501)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeBranch (object->mAttribute_mEndOf_5F_while_5F_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1508)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_while_5F_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1509)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1511)) ;
  }
  GALGAS_string var_indexCppName = GALGAS_string::makeEmptyString () ;
  GALGAS_localConstantList var_indexDeclaration = GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1513)) ;
  const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, object->mAttribute_mIndexVariableName.reader_string (SOURCE_FILE_AT_LINE (1514)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_3) {
    var_indexCppName = GALGAS_string ("index_").operator_concat (object->mAttribute_mInstructionLocation.reader_locationIndex (inCompiler COMMA_SOURCE_FILE_AT_LINE (1515)).reader_string (SOURCE_FILE_AT_LINE (1515)) COMMA_SOURCE_FILE_AT_LINE (1515)) ;
    var_indexDeclaration.addAssign_operation (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mUIntType, object->mAttribute_mIndexVariableName, GALGAS_bool (false), var_indexCppName COMMA_SOURCE_FILE_AT_LINE (1516)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_do_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, var_indexDeclaration, var_localConstantListForDoBranch, object->mAttribute_mDoInstructionList, object->mAttribute_mEndOf_5F_do_5F_branch, ioArgument_ioVariableMap, var_do_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1525)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_foreach_5F_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1535)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeBranch (object->mAttribute_mEndOf_5F_foreach_5F_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1537)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_foreach_5F_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1538)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_foreachInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_enumerationList, var_indexCppName, var_whileExpression, var_before_5F_instructionList, var_between_5F_instructionList, var_do_5F_instructionList, var_after_5F_instructionList COMMA_SOURCE_FILE_AT_LINE (1540)) COMMA_SOURCE_FILE_AT_LINE (1540)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_forInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_forInstructionAST.mSlotID,
                                                  categoryMethod_forInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_forInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_forInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@foreachInstructionAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_foreachInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                             const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                             GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                             GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_foreachInstructionAST * object = (const cPtr_foreachInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_foreachInstructionAST) ;
  {
  ioArgument_ioVariableMap.modifier_openOverrideForSelectBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1560)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_openBranch (inCompiler COMMA_SOURCE_FILE_AT_LINE (1561)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1563)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_before_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1567)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1568)), object->mAttribute_mBeforeInstructionList, object->mAttribute_mEndOf_5F_before_5F_branch, ioArgument_ioVariableMap, var_before_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1565)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_before_5F_branch, inCompiler COMMA_SOURCE_FILE_AT_LINE (1574)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1576)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_between_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1580)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1581)), object->mAttribute_mBetweenInstructionList, object->mAttribute_mEndOf_5F_between_5F_branch, ioArgument_ioVariableMap, var_between_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1578)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_between_5F_branch, inCompiler COMMA_SOURCE_FILE_AT_LINE (1587)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1589)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_after_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1593)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1594)), object->mAttribute_mAfterInstructionList, object->mAttribute_mEndOf_5F_after_5F_branch, ioArgument_ioVariableMap, var_after_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1591)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_after_5F_branch, inCompiler COMMA_SOURCE_FILE_AT_LINE (1600)) ;
  }
  GALGAS_foreachInstructionEnumeratedObjectListForGeneration var_enumerationList = GALGAS_foreachInstructionEnumeratedObjectListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1602)) ;
  cEnumerator_foreachInstructionEnumeratedObjectListAST enumerator_61334 (object->mAttribute_mEnumeratedObjectList, kEnumeration_up) ;
  while (enumerator_61334.hasCurrentObject ()) {
    GALGAS_semanticExpressionForGeneration var_enumerationExpression ;
    callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) enumerator_61334.current_mEnumeratedExpression (HERE).ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_enumerationExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1606)) ;
    GALGAS_string var_enumerationOrder = enumerator_61334.current_mEnumerationOrder (HERE).reader_string (SOURCE_FILE_AT_LINE (1612)) ;
    GALGAS_string var_enumeratorCppName = GALGAS_string ("enumerator_").operator_concat (enumerator_61334.current_mEndOfEnumerationExpression (HERE).reader_locationIndex (inCompiler COMMA_SOURCE_FILE_AT_LINE (1613)).reader_string (SOURCE_FILE_AT_LINE (1613)) COMMA_SOURCE_FILE_AT_LINE (1613)) ;
    GALGAS_enumerationDescriptorList var_enumerationDescriptorList = var_enumerationExpression.reader_mType (SOURCE_FILE_AT_LINE (1614)).reader_mEnumerationDescriptor (inCompiler COMMA_SOURCE_FILE_AT_LINE (1614)) ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_enumerationDescriptorList.reader_length (SOURCE_FILE_AT_LINE (1615)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_0) {
      inCompiler->emitSemanticError (enumerator_61334.current_mEndOfEnumerationExpression (HERE), GALGAS_string ("an '@").operator_concat (var_enumerationExpression.reader_mType (SOURCE_FILE_AT_LINE (1616)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1616)) COMMA_SOURCE_FILE_AT_LINE (1616)).operator_concat (GALGAS_string ("' object cannot be enumerated") COMMA_SOURCE_FILE_AT_LINE (1616)) COMMA_SOURCE_FILE_AT_LINE (1616)) ;
    }else if (kBoolFalse == test_0) {
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_enumerationOrder.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_1) {
        var_enumerationOrder = var_enumerationExpression.reader_mType (SOURCE_FILE_AT_LINE (1620)).reader_mEnumeratorVariants (inCompiler COMMA_SOURCE_FILE_AT_LINE (1620)).reader_mValueAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1620)) ;
      }else if (kBoolFalse == test_1) {
        GALGAS_bool var_found = GALGAS_bool (false) ;
        GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
        cEnumerator_stringlist enumerator_62354 (var_enumerationExpression.reader_mType (SOURCE_FILE_AT_LINE (1624)).reader_mEnumeratorVariants (inCompiler COMMA_SOURCE_FILE_AT_LINE (1624)), kEnumeration_up) ;
        bool bool_2 = var_found.operator_not (SOURCE_FILE_AT_LINE (1624)).isValidAndTrue () ;
        if (enumerator_62354.hasCurrentObject () && bool_2) {
          while (enumerator_62354.hasCurrentObject () && bool_2) {
            var_found = GALGAS_bool (kIsEqual, var_enumerationOrder.objectCompare (enumerator_62354.current_mValue (HERE))) ;
            var_s.dotAssign_operation (GALGAS_string ("\n"
              "  \\").operator_concat (enumerator_62354.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (1626)) COMMA_SOURCE_FILE_AT_LINE (1626)) ;
            enumerator_62354.gotoNextObject () ;
            if (enumerator_62354.hasCurrentObject ()) {
              bool_2 = var_found.operator_not (SOURCE_FILE_AT_LINE (1624)).isValidAndTrue () ;
            }
          }
        }
        const enumGalgasBool test_3 = var_found.operator_not (SOURCE_FILE_AT_LINE (1628)).boolEnum () ;
        if (kBoolTrue == test_3) {
          GALGAS_location location_4 (enumerator_61334.current_mEnumerationOrder (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_4, GALGAS_string ("unknown enumeration specifier; available ones are :").operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (1629)) COMMA_SOURCE_FILE_AT_LINE (1629)) ;
        }
      }
      const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, enumerator_61334.current_mElementList (HERE).reader_length (SOURCE_FILE_AT_LINE (1633)).objectCompare (GALGAS_uint ((uint32_t) 0U))).operator_and (enumerator_61334.current_mEndsWithEllipsis (HERE).operator_not (SOURCE_FILE_AT_LINE (1633)) COMMA_SOURCE_FILE_AT_LINE (1633)).boolEnum () ;
      if (kBoolTrue == test_5) {
        GALGAS_enumerationDescriptorList var_currentTypedAttributeList = var_enumerationExpression.reader_mType (SOURCE_FILE_AT_LINE (1634)).reader_mEnumerationDescriptor (inCompiler COMMA_SOURCE_FILE_AT_LINE (1634)) ;
        cEnumerator_enumerationDescriptorList enumerator_62857 (var_currentTypedAttributeList, kEnumeration_up) ;
        while (enumerator_62857.hasCurrentObject ()) {
          {
          ioArgument_ioVariableMap.modifier_insertUsedLocalConstant (GALGAS_lstring::constructor_new (enumerator_61334.current_mPrefix (HERE).reader_string (SOURCE_FILE_AT_LINE (1637)).operator_concat (enumerator_62857.current_mEnumerationName (HERE) COMMA_SOURCE_FILE_AT_LINE (1637)), enumerator_61334.current_mEndOfEnumerationExpression (HERE) COMMA_SOURCE_FILE_AT_LINE (1637)), enumerator_62857.current_mEnumeratedType (HERE), var_enumeratorCppName.operator_concat (GALGAS_string (".current_") COMMA_SOURCE_FILE_AT_LINE (1639)).operator_concat (enumerator_62857.current_mEnumerationName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1639)) COMMA_SOURCE_FILE_AT_LINE (1639)).operator_concat (GALGAS_string (" (HERE)") COMMA_SOURCE_FILE_AT_LINE (1639)), var_enumeratorCppName.operator_concat (GALGAS_string (".current_") COMMA_SOURCE_FILE_AT_LINE (1640)).operator_concat (enumerator_62857.current_mEnumerationName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1640)) COMMA_SOURCE_FILE_AT_LINE (1640)).operator_concat (GALGAS_string (" (HERE)") COMMA_SOURCE_FILE_AT_LINE (1640)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1636)) ;
          }
          enumerator_62857.gotoNextObject () ;
        }
      }else if (kBoolFalse == test_5) {
        const enumGalgasBool test_6 = enumerator_61334.current_mEndsWithEllipsis (HERE).operator_not (SOURCE_FILE_AT_LINE (1643)).operator_and (GALGAS_bool (kIsNotEqual, enumerator_61334.current_mElementList (HERE).reader_length (SOURCE_FILE_AT_LINE (1643)).objectCompare (var_enumerationDescriptorList.reader_length (SOURCE_FILE_AT_LINE (1643)))) COMMA_SOURCE_FILE_AT_LINE (1643)).boolEnum () ;
        if (kBoolTrue == test_6) {
          //--- @ifExpressionForGeneration
          GALGAS_string temp_7 ;
          const enumGalgasBool test_8 = GALGAS_bool (kIsStrictSup, var_enumerationDescriptorList.reader_length (SOURCE_FILE_AT_LINE (1647)).objectCompare (GALGAS_uint ((uint32_t) 1U))).boolEnum () ;
          if (kBoolTrue == test_8) {
            temp_7 = GALGAS_string ("s") ;
          }else if (kBoolFalse == test_8) {
            temp_7 = GALGAS_string::makeEmptyString () ;
          }
          inCompiler->emitSemanticError (enumerator_61334.current_mEndOfElementList (HERE), GALGAS_string ("the '@").operator_concat (var_enumerationExpression.reader_mType (SOURCE_FILE_AT_LINE (1645)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1645)) COMMA_SOURCE_FILE_AT_LINE (1645)).operator_concat (GALGAS_string ("' type requires ") COMMA_SOURCE_FILE_AT_LINE (1645)).operator_concat (var_enumerationDescriptorList.reader_length (SOURCE_FILE_AT_LINE (1646)).reader_string (SOURCE_FILE_AT_LINE (1646)) COMMA_SOURCE_FILE_AT_LINE (1645)).operator_concat (GALGAS_string (" argument") COMMA_SOURCE_FILE_AT_LINE (1646)).operator_concat (temp_7 COMMA_SOURCE_FILE_AT_LINE (1646)).operator_concat (GALGAS_string (" for enumeration: this list provides ") COMMA_SOURCE_FILE_AT_LINE (1647)).operator_concat (enumerator_61334.current_mElementList (HERE).reader_length (SOURCE_FILE_AT_LINE (1649)).reader_string (SOURCE_FILE_AT_LINE (1649)) COMMA_SOURCE_FILE_AT_LINE (1648)) COMMA_SOURCE_FILE_AT_LINE (1644)) ;
        }else if (kBoolFalse == test_6) {
          const enumGalgasBool test_9 = enumerator_61334.current_mEndsWithEllipsis (HERE).operator_and (GALGAS_bool (kIsStrictSup, enumerator_61334.current_mElementList (HERE).reader_length (SOURCE_FILE_AT_LINE (1651)).objectCompare (var_enumerationDescriptorList.reader_length (SOURCE_FILE_AT_LINE (1651)))) COMMA_SOURCE_FILE_AT_LINE (1651)).boolEnum () ;
          if (kBoolTrue == test_9) {
            //--- @ifExpressionForGeneration
            GALGAS_string temp_10 ;
            const enumGalgasBool test_11 = GALGAS_bool (kIsStrictSup, var_enumerationDescriptorList.reader_length (SOURCE_FILE_AT_LINE (1655)).objectCompare (GALGAS_uint ((uint32_t) 1U))).boolEnum () ;
            if (kBoolTrue == test_11) {
              temp_10 = GALGAS_string ("s") ;
            }else if (kBoolFalse == test_11) {
              temp_10 = GALGAS_string::makeEmptyString () ;
            }
            inCompiler->emitSemanticError (enumerator_61334.current_mEndOfElementList (HERE), GALGAS_string ("the '@").operator_concat (var_enumerationExpression.reader_mType (SOURCE_FILE_AT_LINE (1653)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1653)) COMMA_SOURCE_FILE_AT_LINE (1653)).operator_concat (GALGAS_string ("' type requires ") COMMA_SOURCE_FILE_AT_LINE (1653)).operator_concat (var_enumerationDescriptorList.reader_length (SOURCE_FILE_AT_LINE (1654)).reader_string (SOURCE_FILE_AT_LINE (1654)) COMMA_SOURCE_FILE_AT_LINE (1653)).operator_concat (GALGAS_string (" argument") COMMA_SOURCE_FILE_AT_LINE (1654)).operator_concat (temp_10 COMMA_SOURCE_FILE_AT_LINE (1654)).operator_concat (GALGAS_string (" or less for enumeration: this list provides ") COMMA_SOURCE_FILE_AT_LINE (1655)).operator_concat (enumerator_61334.current_mElementList (HERE).reader_length (SOURCE_FILE_AT_LINE (1657)).reader_string (SOURCE_FILE_AT_LINE (1657)) COMMA_SOURCE_FILE_AT_LINE (1656)) COMMA_SOURCE_FILE_AT_LINE (1652)) ;
          }else if (kBoolFalse == test_9) {
            cEnumerator_foreachInstructionEnumeratedObjectElementListAST enumerator_64228 (enumerator_61334.current_mElementList (HERE), kEnumeration_up) ;
            cEnumerator_enumerationDescriptorList enumerator_64255 (var_enumerationDescriptorList, kEnumeration_up) ;
            while (enumerator_64228.hasCurrentObject () && enumerator_64255.hasCurrentObject ()) {
              const enumGalgasBool test_12 = GALGAS_bool (kIsNotEqual, enumerator_64228.current_mConstantName (HERE).reader_string (SOURCE_FILE_AT_LINE (1661)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
              if (kBoolTrue == test_12) {
                GALGAS_unifiedTypeMapProxy var_foundType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, enumerator_64228.current_mTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1662)) ;
                const enumGalgasBool test_13 = GALGAS_bool (kIsNotEqual, var_foundType.objectCompare (enumerator_64255.current_mEnumeratedType (HERE))).boolEnum () ;
                if (kBoolTrue == test_13) {
                  GALGAS_location location_14 (enumerator_64228.current_mTypeName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
                  inCompiler->emitSemanticError (location_14, GALGAS_string ("incorrect '@").operator_concat (var_foundType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1664)) COMMA_SOURCE_FILE_AT_LINE (1664)).operator_concat (GALGAS_string ("' type: '@") COMMA_SOURCE_FILE_AT_LINE (1664)).operator_concat (enumerator_64255.current_mEnumeratedType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1664)) COMMA_SOURCE_FILE_AT_LINE (1664)).operator_concat (GALGAS_string ("' type required here") COMMA_SOURCE_FILE_AT_LINE (1664)) COMMA_SOURCE_FILE_AT_LINE (1664)) ;
                }
                {
                ioArgument_ioVariableMap.modifier_insertUsedLocalConstant (enumerator_64228.current_mConstantName (HERE), enumerator_64255.current_mEnumeratedType (HERE), var_enumeratorCppName.operator_concat (GALGAS_string (".current_") COMMA_SOURCE_FILE_AT_LINE (1669)).operator_concat (enumerator_64255.current_mEnumerationName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1669)) COMMA_SOURCE_FILE_AT_LINE (1669)).operator_concat (GALGAS_string (" (HERE)") COMMA_SOURCE_FILE_AT_LINE (1669)), var_enumeratorCppName.operator_concat (GALGAS_string (".current_") COMMA_SOURCE_FILE_AT_LINE (1670)).operator_concat (enumerator_64255.current_mEnumerationName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1670)) COMMA_SOURCE_FILE_AT_LINE (1670)).operator_concat (GALGAS_string (" (HERE)") COMMA_SOURCE_FILE_AT_LINE (1670)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1666)) ;
                }
              }
              enumerator_64228.gotoNextObject () ;
              enumerator_64255.gotoNextObject () ;
            }
          }
        }
      }
    }
    var_enumerationList.addAssign_operation (var_enumerationOrder, var_enumerationExpression, var_enumeratorCppName COMMA_SOURCE_FILE_AT_LINE (1677)) ;
    enumerator_61334.gotoNextObject () ;
  }
  GALGAS_semanticExpressionForGeneration var_uncheckedWhileExpression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mWhileExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_uncheckedWhileExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1681)) ;
  GALGAS_semanticExpressionForGeneration var_whileExpression ;
  {
  routine_checkExpressionIsBoolean (constinArgument_inAnalysisContext, object->mAttribute_mEndOf_5F_while_5F_expression, var_uncheckedWhileExpression, var_whileExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1687)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1694)) ;
  }
  GALGAS_string var_indexCppName = GALGAS_string::makeEmptyString () ;
  GALGAS_localConstantList var_indexDeclaration = GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1696)) ;
  const enumGalgasBool test_15 = GALGAS_bool (kIsNotEqual, object->mAttribute_mIndexVariableName.reader_string (SOURCE_FILE_AT_LINE (1697)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_15) {
    var_indexCppName = GALGAS_string ("index_").operator_concat (object->mAttribute_mInstructionLocation.reader_locationIndex (inCompiler COMMA_SOURCE_FILE_AT_LINE (1698)).reader_string (SOURCE_FILE_AT_LINE (1698)) COMMA_SOURCE_FILE_AT_LINE (1698)) ;
    var_indexDeclaration.addAssign_operation (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mUIntType, object->mAttribute_mIndexVariableName, GALGAS_bool (false), var_indexCppName COMMA_SOURCE_FILE_AT_LINE (1699)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_do_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, var_indexDeclaration, GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1711)), object->mAttribute_mDoInstructionList, object->mAttribute_mEndOf_5F_do_5F_branch, ioArgument_ioVariableMap, var_do_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1708)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_foreach_5F_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1718)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeBranch (object->mAttribute_mEndOf_5F_foreach_5F_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1720)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_foreach_5F_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1721)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_foreachInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_enumerationList, var_indexCppName, var_whileExpression, var_before_5F_instructionList, var_between_5F_instructionList, var_do_5F_instructionList, var_after_5F_instructionList COMMA_SOURCE_FILE_AT_LINE (1723)) COMMA_SOURCE_FILE_AT_LINE (1723)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_foreachInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_foreachInstructionAST.mSlotID,
                                                  categoryMethod_foreachInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_foreachInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_foreachInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category method '@loopInstructionAST analyzeSemanticInstruction' *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_loopInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                          const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                          GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                          GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_loopInstructionAST * object = (const cPtr_loopInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_loopInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_variantExpression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mVariantExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_variantExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1744)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_variantExpression.reader_mType (SOURCE_FILE_AT_LINE (1750)).objectCompare (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mUIntType)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mEndOfVariantExpression, GALGAS_string ("the variant expression type should be '@").operator_concat (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mUIntType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1752)) COMMA_SOURCE_FILE_AT_LINE (1752)).operator_concat (GALGAS_string ("', but it has '@") COMMA_SOURCE_FILE_AT_LINE (1752)).operator_concat (var_variantExpression.reader_mType (SOURCE_FILE_AT_LINE (1752)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1752)) COMMA_SOURCE_FILE_AT_LINE (1752)).operator_concat (GALGAS_string ("' type") COMMA_SOURCE_FILE_AT_LINE (1752)) COMMA_SOURCE_FILE_AT_LINE (1751)) ;
  }
  GALGAS_semanticExpressionForGeneration var_loopExpression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLoopExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_loopExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1756)) ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_loopExpression.reader_mType (SOURCE_FILE_AT_LINE (1762)).objectCompare (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType)).boolEnum () ;
  if (kBoolTrue == test_1) {
    inCompiler->emitSemanticError (object->mAttribute_mEndOfLoopExpression, GALGAS_string ("the loop expression type should be '@").operator_concat (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1764)) COMMA_SOURCE_FILE_AT_LINE (1764)).operator_concat (GALGAS_string ("', but it has '@") COMMA_SOURCE_FILE_AT_LINE (1764)).operator_concat (var_loopExpression.reader_mType (SOURCE_FILE_AT_LINE (1764)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1764)) COMMA_SOURCE_FILE_AT_LINE (1764)).operator_concat (GALGAS_string ("' type") COMMA_SOURCE_FILE_AT_LINE (1764)) COMMA_SOURCE_FILE_AT_LINE (1763)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1767)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_first_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1772)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1773)), object->mAttribute_mFirstInstructions, object->mAttribute_mEndOfFirstInstructions, ioArgument_ioVariableMap, var_first_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1770)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_second_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1783)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1784)), object->mAttribute_mSecondInstructions, object->mAttribute_mEndOfSecondInstructions, ioArgument_ioVariableMap, var_second_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1781)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOfLoopInstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1791)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_loopInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_variantExpression, var_first_5F_instructionList, var_loopExpression, var_second_5F_instructionList COMMA_SOURCE_FILE_AT_LINE (1793)) COMMA_SOURCE_FILE_AT_LINE (1793)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_loopInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_loopInstructionAST.mSlotID,
                                                  categoryMethod_loopInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_loopInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_loopInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@structuredCastInstructionAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_structuredCastInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                    const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                    GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                    GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_structuredCastInstructionAST * object = (const cPtr_structuredCastInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_structuredCastInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_castExpression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mCastExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_castExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1811)) ;
  {
  ioArgument_ioVariableMap.modifier_openOverrideForSelectBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1817)) ;
  }
  GALGAS_castInstructionBranchListForGeneration var_castBranchList = GALGAS_castInstructionBranchListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1819)) ;
  cEnumerator_castInstructionBranchListAST enumerator_70008 (object->mAttribute_mCastInstructionBranchList, kEnumeration_up) ;
  while (enumerator_70008.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_type = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, enumerator_70008.current_mTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1822)) ;
    GALGAS_unifiedTypeMapProxy var_t = var_type ;
    GALGAS_bool var_found = GALGAS_bool (kIsEqual, var_t.objectCompare (var_castExpression.reader_mType (SOURCE_FILE_AT_LINE (1825)))) ;
    if (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1826)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1826)).isValid ()) {
      uint32_t variant_70296 = constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1826)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1826)).uintValue () ;
      bool loop_70296 = true ;
      while (loop_70296) {
        loop_70296 = var_found.operator_not (SOURCE_FILE_AT_LINE (1827)).operator_and (var_t.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1827)).reader_isNull (SOURCE_FILE_AT_LINE (1827)).operator_not (SOURCE_FILE_AT_LINE (1827)) COMMA_SOURCE_FILE_AT_LINE (1827)).isValid () ;
        if (loop_70296) {
          loop_70296 = var_found.operator_not (SOURCE_FILE_AT_LINE (1827)).operator_and (var_t.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1827)).reader_isNull (SOURCE_FILE_AT_LINE (1827)).operator_not (SOURCE_FILE_AT_LINE (1827)) COMMA_SOURCE_FILE_AT_LINE (1827)).boolValue () ;
        }
        if (loop_70296 && (0 == variant_70296)) {
          loop_70296 = false ;
          inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (1826)) ;
        }
        if (loop_70296) {
          variant_70296 -- ;
          var_t = var_t.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1828)) ;
          var_found = GALGAS_bool (kIsEqual, var_t.objectCompare (var_castExpression.reader_mType (SOURCE_FILE_AT_LINE (1829)))) ;
        }
      }
    }
    const enumGalgasBool test_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (1831)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_location location_1 (enumerator_70008.current_mTypeName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '@").operator_concat (enumerator_70008.current_mTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1833)) COMMA_SOURCE_FILE_AT_LINE (1833)).operator_concat (GALGAS_string ("' is not a descendant of the '@") COMMA_SOURCE_FILE_AT_LINE (1833)).operator_concat (var_castExpression.reader_mType (SOURCE_FILE_AT_LINE (1833)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1833)) COMMA_SOURCE_FILE_AT_LINE (1833)).operator_concat (GALGAS_string ("' type of the cast expression") COMMA_SOURCE_FILE_AT_LINE (1833)) COMMA_SOURCE_FILE_AT_LINE (1832)) ;
    }
    GALGAS_string var_localConstantName ;
    GALGAS_localConstantList var_localConstantList = GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1838)) ;
    const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, enumerator_70008.current_mConstantVarName (HERE).mAttribute_string.reader_length (SOURCE_FILE_AT_LINE (1839)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_2) {
      var_localConstantName = GALGAS_string ("cast_").operator_concat (enumerator_70008.current_mConstantVarName (HERE).reader_location (SOURCE_FILE_AT_LINE (1840)).reader_locationIndex (inCompiler COMMA_SOURCE_FILE_AT_LINE (1840)).reader_string (SOURCE_FILE_AT_LINE (1840)) COMMA_SOURCE_FILE_AT_LINE (1840)).operator_concat (GALGAS_string ("_") COMMA_SOURCE_FILE_AT_LINE (1840)).operator_concat (enumerator_70008.current_mConstantVarName (HERE).reader_string (SOURCE_FILE_AT_LINE (1840)) COMMA_SOURCE_FILE_AT_LINE (1840)) ;
      var_localConstantList.addAssign_operation (var_type, enumerator_70008.current_mConstantVarName (HERE), GALGAS_bool (true), var_localConstantName COMMA_SOURCE_FILE_AT_LINE (1841)) ;
    }else if (kBoolFalse == test_2) {
      var_localConstantName = GALGAS_string::makeEmptyString () ;
    }
    GALGAS_semanticInstructionListForGeneration var_instructionList ;
    {
    routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, var_localConstantList, GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1855)), enumerator_70008.current_mInstructionList (HERE), enumerator_70008.current_mEndOfInstructions (HERE), ioArgument_ioVariableMap, var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1852)) ;
    }
    var_castBranchList.addAssign_operation (enumerator_70008.current_mTypeComparisonKind (HERE), var_type, var_localConstantName, var_instructionList COMMA_SOURCE_FILE_AT_LINE (1861)) ;
    enumerator_70008.gotoNextObject () ;
  }
  GALGAS_semanticInstructionListForGeneration var_else_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1867)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1868)), object->mAttribute_mElseInstructionList, object->mAttribute_mEndOfCastInstruction, ioArgument_ioVariableMap, var_else_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1865)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOfCastInstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1875)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_structuredCastInstructionForGeneration::constructor_new (var_castExpression, var_castBranchList, var_else_5F_instructionList COMMA_SOURCE_FILE_AT_LINE (1877)) COMMA_SOURCE_FILE_AT_LINE (1877)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_structuredCastInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_structuredCastInstructionAST.mSlotID,
                                                  categoryMethod_structuredCastInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_structuredCastInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_structuredCastInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@grammarInstructionAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_grammarInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                             const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                             GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                             GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_grammarInstructionAST * object = (const cPtr_grammarInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_grammarInstructionAST) ;
  GALGAS_grammarLabelMap var_grammarLabelMap ;
  GALGAS_bool joker_72687_0 ; // Joker input parameter
  constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mGrammarMap.method_searchKey (object->mAttribute_mGrammarComponentName, var_grammarLabelMap, joker_72687_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1893)) ;
  GALGAS_formalParameterSignature var_labelSignature ;
  var_grammarLabelMap.method_searchKey (object->mAttribute_mLabelName, var_labelSignature, inCompiler COMMA_SOURCE_FILE_AT_LINE (1900)) ;
  GALGAS_actualParameterListForGeneration var_actualParameterListForGeneration ;
  {
  routine_analyzeRoutineArguments (constinArgument_inAnalysisContext, object->mAttribute_mLabelName, GALGAS_string ("label of the ").operator_concat (object->mAttribute_mGrammarComponentName.reader_string (SOURCE_FILE_AT_LINE (1909)) COMMA_SOURCE_FILE_AT_LINE (1909)).operator_concat (GALGAS_string (" grammar") COMMA_SOURCE_FILE_AT_LINE (1909)), var_labelSignature, object->mAttribute_mActualParameterList, ioArgument_ioVariableMap, var_actualParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1906)) ;
  }
  GALGAS_semanticExpressionForGeneration var_sourceExpression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mSourceExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_sourceExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1917)) ;
  const enumGalgasBool test_0 = object->mAttribute_mSourceExpressionIsFile.boolEnum () ;
  if (kBoolTrue == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_sourceExpression.reader_mType (SOURCE_FILE_AT_LINE (1924)).objectCompare (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLStringType)).boolEnum () ;
    if (kBoolTrue == test_1) {
      inCompiler->emitSemanticError (object->mAttribute_mEndOfSourceExpression, GALGAS_string ("this expression is the source file path and its type should be '@lstring', but it is '@").operator_concat (var_sourceExpression.reader_mType (SOURCE_FILE_AT_LINE (1926)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1926)) COMMA_SOURCE_FILE_AT_LINE (1926)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (1926)) COMMA_SOURCE_FILE_AT_LINE (1925)) ;
    }
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, var_sourceExpression.reader_mType (SOURCE_FILE_AT_LINE (1929)).objectCompare (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mStringType)).boolEnum () ;
    if (kBoolTrue == test_2) {
      inCompiler->emitSemanticError (object->mAttribute_mEndOfSourceExpression, GALGAS_string ("this expression is the source string and its type should be '@string', but it is '@").operator_concat (var_sourceExpression.reader_mType (SOURCE_FILE_AT_LINE (1931)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1931)) COMMA_SOURCE_FILE_AT_LINE (1931)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (1931)) COMMA_SOURCE_FILE_AT_LINE (1930)) ;
    }
  }
  const enumGalgasBool test_3 = object->mAttribute_mSourceExpressionIsFile.boolEnum () ;
  if (kBoolTrue == test_3) {
    ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_grammarInstructionWithSourceFileForGeneration::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mGrammarComponentName.reader_string (SOURCE_FILE_AT_LINE (1938)), object->mAttribute_mLabelName.reader_string (SOURCE_FILE_AT_LINE (1939)), var_sourceExpression, var_actualParameterListForGeneration COMMA_SOURCE_FILE_AT_LINE (1936)) COMMA_SOURCE_FILE_AT_LINE (1936)) ;
  }else if (kBoolFalse == test_3) {
    ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_grammarInstructionWithSourceExpressionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mGrammarComponentName.reader_string (SOURCE_FILE_AT_LINE (1946)), object->mAttribute_mLabelName.reader_string (SOURCE_FILE_AT_LINE (1947)), var_sourceExpression, var_actualParameterListForGeneration COMMA_SOURCE_FILE_AT_LINE (1944)) COMMA_SOURCE_FILE_AT_LINE (1944)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_grammarInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_grammarInstructionAST.mSlotID,
                                                  categoryMethod_grammarInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_grammarInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_grammarInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@readWriteAccessWithInstructionAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_readWriteAccessWithInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                         const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                         GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                         GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_readWriteAccessWithInstructionAST * object = (const cPtr_readWriteAccessWithInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_readWriteAccessWithInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_keyExpression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mKeyExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_keyExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1963)) ;
  GALGAS_string var_objectArrayCppName = GALGAS_string ("objectArray_").operator_concat (object->mAttribute_mInstructionLocation.reader_locationIndex (inCompiler COMMA_SOURCE_FILE_AT_LINE (1969)).reader_string (SOURCE_FILE_AT_LINE (1969)) COMMA_SOURCE_FILE_AT_LINE (1969)) ;
  GALGAS_unifiedTypeMapProxy var_targetType ;
  GALGAS_string var_receiverVariableCppName ;
  {
  GALGAS_string joker_75475_0 ; // Joker input parameter
  ioArgument_ioVariableMap.modifier_searchForReadWriteAccess (object->mAttribute_mReceiverName, var_targetType, var_receiverVariableCppName, joker_75475_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1973)) ;
  }
  cEnumerator_lstringlist enumerator_75500 (object->mAttribute_mFieldList, kEnumeration_up) ;
  while (enumerator_75500.hasCurrentObject ()) {
    GALGAS_attributeMap var_attributeMap = var_targetType.reader_mAttributeMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1975)) ;
    var_attributeMap.method_searchKey (enumerator_75500.current_mValue (HERE), var_targetType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1976)) ;
    enumerator_75500.gotoNextObject () ;
  }
  GALGAS_withAccessorMap var_withAccessorMap = var_targetType.reader_mWithAccessorMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1979)) ;
  GALGAS_unifiedTypeMapProxyList var_argumentTypeList ;
  const cMapElement_withAccessorMap * objectArray_75779 = (const cMapElement_withAccessorMap *) var_withAccessorMap.readAccessForWithInstruction_hasKey (object->mAttribute_mAccessName.reader_string (SOURCE_FILE_AT_LINE (1981))) ;
  if (NULL != objectArray_75779) {
      macroValidSharedObject (objectArray_75779, cMapElement_withAccessorMap) ;
    var_argumentTypeList = GALGAS_unifiedTypeMapProxyList::constructor_listWithValue (objectArray_75779->mAttribute_mArgumentType COMMA_SOURCE_FILE_AT_LINE (1982)) ;
  }else{
    const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_withAccessorMap.reader_count (SOURCE_FILE_AT_LINE (1984)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_location location_1 (object->mAttribute_mAccessName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '@").operator_concat (var_targetType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1986)) COMMA_SOURCE_FILE_AT_LINE (1986)).operator_concat (GALGAS_string ("' type cannot be used in a 'with' instruction") COMMA_SOURCE_FILE_AT_LINE (1986)) COMMA_SOURCE_FILE_AT_LINE (1985)) ;
      var_argumentTypeList.drop () ; // Release error dropped variable
    }else if (kBoolFalse == test_0) {
      GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
      cEnumerator_withAccessorMap enumerator_76162 (var_withAccessorMap, kEnumeration_up) ;
      while (enumerator_76162.hasCurrentObject ()) {
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "  - ").operator_concat (enumerator_76162.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (1992)) COMMA_SOURCE_FILE_AT_LINE (1992)).operator_concat (GALGAS_string (" \?@") COMMA_SOURCE_FILE_AT_LINE (1992)).operator_concat (enumerator_76162.current_mArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1992)) COMMA_SOURCE_FILE_AT_LINE (1992)) COMMA_SOURCE_FILE_AT_LINE (1992)) ;
        enumerator_76162.gotoNextObject () ;
      }
      //--- @ifExpressionForGeneration
      GALGAS_string temp_2 ;
      const enumGalgasBool test_3 = GALGAS_bool (kIsStrictSup, var_withAccessorMap.reader_count (SOURCE_FILE_AT_LINE (1996)).objectCompare (GALGAS_uint ((uint32_t) 1U))).boolEnum () ;
      if (kBoolTrue == test_3) {
        temp_2 = GALGAS_string ("accessors are") ;
      }else if (kBoolFalse == test_3) {
        temp_2 = GALGAS_string ("accessor is") ;
      }
      GALGAS_location location_4 (object->mAttribute_mAccessName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_4, GALGAS_string ("the '@").operator_concat (var_targetType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1995)) COMMA_SOURCE_FILE_AT_LINE (1995)).operator_concat (GALGAS_string ("' type does not define the '") COMMA_SOURCE_FILE_AT_LINE (1995)).operator_concat (object->mAttribute_mAccessName.reader_string (SOURCE_FILE_AT_LINE (1995)) COMMA_SOURCE_FILE_AT_LINE (1995)).operator_concat (GALGAS_string ("' accessor for the 'with' instruction; available ") COMMA_SOURCE_FILE_AT_LINE (1995)).operator_concat (temp_2 COMMA_SOURCE_FILE_AT_LINE (1995)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (1996)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (1997)) COMMA_SOURCE_FILE_AT_LINE (1994)) ;
      var_argumentTypeList.drop () ; // Release error dropped variable
    }
  }
  GALGAS_semanticExpressionListForGeneration var_effectiveExpressionList = GALGAS_semanticExpressionListForGeneration::constructor_listWithValue (var_keyExpression COMMA_SOURCE_FILE_AT_LINE (2003)) ;
  const enumGalgasBool test_5 = GALGAS_bool (kIsNotEqual, var_effectiveExpressionList.reader_length (SOURCE_FILE_AT_LINE (2004)).objectCompare (var_argumentTypeList.reader_length (SOURCE_FILE_AT_LINE (2004)))).boolEnum () ;
  if (kBoolTrue == test_5) {
    GALGAS_location location_6 (object->mAttribute_mAccessName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_6, GALGAS_string ("calling the '").operator_concat (object->mAttribute_mAccessName.reader_string (SOURCE_FILE_AT_LINE (2005)) COMMA_SOURCE_FILE_AT_LINE (2005)).operator_concat (GALGAS_string ("' accessor of '@") COMMA_SOURCE_FILE_AT_LINE (2005)).operator_concat (var_targetType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2005)) COMMA_SOURCE_FILE_AT_LINE (2005)).operator_concat (GALGAS_string ("' requires ") COMMA_SOURCE_FILE_AT_LINE (2005)).operator_concat (var_argumentTypeList.reader_length (SOURCE_FILE_AT_LINE (2006)).reader_string (SOURCE_FILE_AT_LINE (2006)) COMMA_SOURCE_FILE_AT_LINE (2005)).operator_concat (GALGAS_string (" parameter(s), while this call has ") COMMA_SOURCE_FILE_AT_LINE (2006)).operator_concat (var_effectiveExpressionList.reader_length (SOURCE_FILE_AT_LINE (2007)).reader_string (SOURCE_FILE_AT_LINE (2007)) COMMA_SOURCE_FILE_AT_LINE (2006)).operator_concat (GALGAS_string (" parameter(s)") COMMA_SOURCE_FILE_AT_LINE (2007)) COMMA_SOURCE_FILE_AT_LINE (2005)) ;
  }else if (kBoolFalse == test_5) {
    cEnumerator_semanticExpressionListForGeneration enumerator_77068 (var_effectiveExpressionList, kEnumeration_up) ;
    cEnumerator_unifiedTypeMapProxyList enumerator_77086 (var_argumentTypeList, kEnumeration_up) ;
    while (enumerator_77068.hasCurrentObject () && enumerator_77086.hasCurrentObject ()) {
      {
      routine_checkAssignmentTypes (enumerator_77086.current_mType (HERE), enumerator_77068.current_mExpression (HERE).reader_mType (SOURCE_FILE_AT_LINE (2010)), object->mAttribute_mAccessName.reader_location (SOURCE_FILE_AT_LINE (2010)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2010)) ;
      }
      enumerator_77068.gotoNextObject () ;
      enumerator_77086.gotoNextObject () ;
    }
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForSelectBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (2014)) ;
  }
  GALGAS_localInitializedVariableList var_localInitializedVariableList = GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (2016)) ;
  cEnumerator_typedAttributeList enumerator_77419 (var_targetType.reader_mCurrentTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (2017)), kEnumeration_up) ;
  while (enumerator_77419.hasCurrentObject ()) {
    var_localInitializedVariableList.addAssign_operation (enumerator_77419.current_mAttributeTypeProxy (HERE), GALGAS_lstring::constructor_new (object->mAttribute_mPrefix.reader_string (SOURCE_FILE_AT_LINE (2020)).operator_concat (enumerator_77419.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2020)) COMMA_SOURCE_FILE_AT_LINE (2020)), object->mAttribute_mAccessName.reader_location (SOURCE_FILE_AT_LINE (2020)) COMMA_SOURCE_FILE_AT_LINE (2020)), var_objectArrayCppName.operator_concat (GALGAS_string ("->mAttribute_") COMMA_SOURCE_FILE_AT_LINE (2021)).operator_concat (enumerator_77419.current_mAttributeName (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (2021)) COMMA_SOURCE_FILE_AT_LINE (2021)) COMMA_SOURCE_FILE_AT_LINE (2018)) ;
    enumerator_77419.gotoNextObject () ;
  }
  GALGAS_semanticInstructionListForGeneration var_do_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (2027)), var_localInitializedVariableList, object->mAttribute_m_5F_do_5F_Instructions, object->mAttribute_mEndOf_5F_do_5F_instructions, ioArgument_ioVariableMap, var_do_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (2025)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_else_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (2038)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (2039)), object->mAttribute_m_5F_else_5F_Instructions, object->mAttribute_mEndOf_5F_else_5F_instructions, ioArgument_ioVariableMap, var_else_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (2036)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_else_5F_instructions, inCompiler COMMA_SOURCE_FILE_AT_LINE (2045)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_readWriteWithInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_receiverVariableCppName, var_targetType, object->mAttribute_mFieldList, object->mAttribute_mAccessName.reader_string (SOURCE_FILE_AT_LINE (2052)), var_objectArrayCppName, var_keyExpression, var_do_5F_instructionList, var_else_5F_instructionList COMMA_SOURCE_FILE_AT_LINE (2047)) COMMA_SOURCE_FILE_AT_LINE (2047)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_readWriteAccessWithInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_readWriteAccessWithInstructionAST.mSlotID,
                                                  categoryMethod_readWriteAccessWithInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_readWriteAccessWithInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_readWriteAccessWithInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@readAccessWithInstructionAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_readAccessWithInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                    const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                    GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                    GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_readAccessWithInstructionAST * object = (const cPtr_readAccessWithInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_readAccessWithInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_receiverExpression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mReceiverExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_receiverExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (2069)) ;
  GALGAS_unifiedTypeMapProxy var_receiverType = var_receiverExpression.reader_mType (SOURCE_FILE_AT_LINE (2074)) ;
  GALGAS_semanticExpressionForGeneration var_keyExpression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mKeyExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_keyExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (2077)) ;
  GALGAS_string var_objectArrayCppName = GALGAS_string ("objectArray_").operator_concat (object->mAttribute_mInstructionLocation.reader_locationIndex (inCompiler COMMA_SOURCE_FILE_AT_LINE (2083)).reader_string (SOURCE_FILE_AT_LINE (2083)) COMMA_SOURCE_FILE_AT_LINE (2083)) ;
  GALGAS_withAccessorMap var_withAccessorMap = var_receiverType.reader_mWithAccessorMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (2085)) ;
  GALGAS_unifiedTypeMapProxyList var_argumentTypeList ;
  const cMapElement_withAccessorMap * objectArray_79711 = (const cMapElement_withAccessorMap *) var_withAccessorMap.readAccessForWithInstruction_hasKey (object->mAttribute_mSearchMethodName.reader_string (SOURCE_FILE_AT_LINE (2087))) ;
  if (NULL != objectArray_79711) {
      macroValidSharedObject (objectArray_79711, cMapElement_withAccessorMap) ;
    var_argumentTypeList = GALGAS_unifiedTypeMapProxyList::constructor_listWithValue (objectArray_79711->mAttribute_mArgumentType COMMA_SOURCE_FILE_AT_LINE (2088)) ;
  }else{
    const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_withAccessorMap.reader_count (SOURCE_FILE_AT_LINE (2090)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_location location_1 (object->mAttribute_mSearchMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '@").operator_concat (var_receiverType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2092)) COMMA_SOURCE_FILE_AT_LINE (2092)).operator_concat (GALGAS_string ("' type cannot be used in a 'with' instruction") COMMA_SOURCE_FILE_AT_LINE (2092)) COMMA_SOURCE_FILE_AT_LINE (2091)) ;
      var_argumentTypeList.drop () ; // Release error dropped variable
    }else if (kBoolFalse == test_0) {
      GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
      cEnumerator_withAccessorMap enumerator_80108 (var_withAccessorMap, kEnumeration_up) ;
      while (enumerator_80108.hasCurrentObject ()) {
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "  - ").operator_concat (enumerator_80108.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (2098)) COMMA_SOURCE_FILE_AT_LINE (2098)).operator_concat (GALGAS_string (" \?@") COMMA_SOURCE_FILE_AT_LINE (2098)).operator_concat (enumerator_80108.current_mArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2098)) COMMA_SOURCE_FILE_AT_LINE (2098)) COMMA_SOURCE_FILE_AT_LINE (2098)) ;
        enumerator_80108.gotoNextObject () ;
      }
      //--- @ifExpressionForGeneration
      GALGAS_string temp_2 ;
      const enumGalgasBool test_3 = GALGAS_bool (kIsStrictSup, var_withAccessorMap.reader_count (SOURCE_FILE_AT_LINE (2102)).objectCompare (GALGAS_uint ((uint32_t) 1U))).boolEnum () ;
      if (kBoolTrue == test_3) {
        temp_2 = GALGAS_string ("accessors are") ;
      }else if (kBoolFalse == test_3) {
        temp_2 = GALGAS_string ("accessor is") ;
      }
      GALGAS_location location_4 (object->mAttribute_mSearchMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_4, GALGAS_string ("the '@").operator_concat (var_receiverType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2101)) COMMA_SOURCE_FILE_AT_LINE (2101)).operator_concat (GALGAS_string ("' type does not define the '") COMMA_SOURCE_FILE_AT_LINE (2101)).operator_concat (object->mAttribute_mSearchMethodName.reader_string (SOURCE_FILE_AT_LINE (2101)) COMMA_SOURCE_FILE_AT_LINE (2101)).operator_concat (GALGAS_string ("' accessor for the 'with' instruction; available ") COMMA_SOURCE_FILE_AT_LINE (2101)).operator_concat (temp_2 COMMA_SOURCE_FILE_AT_LINE (2101)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (2102)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (2103)) COMMA_SOURCE_FILE_AT_LINE (2100)) ;
      var_argumentTypeList.drop () ; // Release error dropped variable
    }
  }
  GALGAS_semanticExpressionListForGeneration var_effectiveExpressionList = GALGAS_semanticExpressionListForGeneration::constructor_listWithValue (var_keyExpression COMMA_SOURCE_FILE_AT_LINE (2109)) ;
  const enumGalgasBool test_5 = GALGAS_bool (kIsNotEqual, var_effectiveExpressionList.reader_length (SOURCE_FILE_AT_LINE (2110)).objectCompare (var_argumentTypeList.reader_length (SOURCE_FILE_AT_LINE (2110)))).boolEnum () ;
  if (kBoolTrue == test_5) {
    GALGAS_location location_6 (object->mAttribute_mSearchMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_6, GALGAS_string ("calling the '").operator_concat (object->mAttribute_mSearchMethodName.reader_string (SOURCE_FILE_AT_LINE (2111)) COMMA_SOURCE_FILE_AT_LINE (2111)).operator_concat (GALGAS_string ("' accessor of '@") COMMA_SOURCE_FILE_AT_LINE (2111)).operator_concat (var_receiverType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2111)) COMMA_SOURCE_FILE_AT_LINE (2111)).operator_concat (GALGAS_string ("' requires ") COMMA_SOURCE_FILE_AT_LINE (2111)).operator_concat (var_argumentTypeList.reader_length (SOURCE_FILE_AT_LINE (2112)).reader_string (SOURCE_FILE_AT_LINE (2112)) COMMA_SOURCE_FILE_AT_LINE (2111)).operator_concat (GALGAS_string (" parameter(s), while this call has ") COMMA_SOURCE_FILE_AT_LINE (2112)).operator_concat (var_effectiveExpressionList.reader_length (SOURCE_FILE_AT_LINE (2113)).reader_string (SOURCE_FILE_AT_LINE (2113)) COMMA_SOURCE_FILE_AT_LINE (2112)).operator_concat (GALGAS_string (" parameter(s)") COMMA_SOURCE_FILE_AT_LINE (2113)) COMMA_SOURCE_FILE_AT_LINE (2111)) ;
  }else if (kBoolFalse == test_5) {
    cEnumerator_semanticExpressionListForGeneration enumerator_81042 (var_effectiveExpressionList, kEnumeration_up) ;
    cEnumerator_unifiedTypeMapProxyList enumerator_81060 (var_argumentTypeList, kEnumeration_up) ;
    while (enumerator_81042.hasCurrentObject () && enumerator_81060.hasCurrentObject ()) {
      {
      routine_checkAssignmentTypes (enumerator_81060.current_mType (HERE), enumerator_81042.current_mExpression (HERE).reader_mType (SOURCE_FILE_AT_LINE (2116)), object->mAttribute_mSearchMethodName.reader_location (SOURCE_FILE_AT_LINE (2116)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2116)) ;
      }
      enumerator_81042.gotoNextObject () ;
      enumerator_81060.gotoNextObject () ;
    }
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForSelectBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (2120)) ;
  }
  GALGAS_localConstantList var_localConstantList = GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (2122)) ;
  cEnumerator_typedAttributeList enumerator_81379 (var_receiverType.reader_mCurrentTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (2123)), kEnumeration_up) ;
  while (enumerator_81379.hasCurrentObject ()) {
    var_localConstantList.addAssign_operation (enumerator_81379.current_mAttributeTypeProxy (HERE), GALGAS_lstring::constructor_new (object->mAttribute_mPrefix.reader_string (SOURCE_FILE_AT_LINE (2126)).operator_concat (enumerator_81379.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2126)) COMMA_SOURCE_FILE_AT_LINE (2126)), object->mAttribute_mSearchMethodName.reader_location (SOURCE_FILE_AT_LINE (2126)) COMMA_SOURCE_FILE_AT_LINE (2126)), GALGAS_bool (true), var_objectArrayCppName.operator_concat (GALGAS_string ("->mAttribute_") COMMA_SOURCE_FILE_AT_LINE (2128)).operator_concat (enumerator_81379.current_mAttributeName (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (2128)) COMMA_SOURCE_FILE_AT_LINE (2128)) COMMA_SOURCE_FILE_AT_LINE (2124)) ;
    enumerator_81379.gotoNextObject () ;
  }
  GALGAS_semanticInstructionListForGeneration var_do_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, var_localConstantList, GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (2135)), object->mAttribute_mDoBranchInstructions, object->mAttribute_mEndOf_5F_do_5F_instructions, ioArgument_ioVariableMap, var_do_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (2132)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_else_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (2145)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (2146)), object->mAttribute_mElseBranchInstructions, object->mAttribute_mEndOf_5F_else_5F_instructions, ioArgument_ioVariableMap, var_else_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (2143)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_else_5F_instructions, inCompiler COMMA_SOURCE_FILE_AT_LINE (2152)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_readOnlyWithInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_receiverExpression, object->mAttribute_mSearchMethodName.reader_string (SOURCE_FILE_AT_LINE (2157)), var_objectArrayCppName, var_keyExpression, var_do_5F_instructionList, var_else_5F_instructionList COMMA_SOURCE_FILE_AT_LINE (2154)) COMMA_SOURCE_FILE_AT_LINE (2154)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_readAccessWithInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_readAccessWithInstructionAST.mSlotID,
                                                  categoryMethod_readAccessWithInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_readAccessWithInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_readAccessWithInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@switchInstructionAST analyzeSemanticInstruction'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_switchInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                            const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                            GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                            GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_switchInstructionAST * object = (const cPtr_switchInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_switchInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_switchExpression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mSwitchExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_switchExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (2174)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_switchExpression.reader_mType (SOURCE_FILE_AT_LINE (2180)).reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (2180)).objectCompare (GALGAS_typeKindEnum::constructor_enumType (SOURCE_FILE_AT_LINE (2180)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mEndOfSwitchExpression, GALGAS_string ("the switch expression type should be an instance of an enumeration type (the '@").operator_concat (var_switchExpression.reader_mType (SOURCE_FILE_AT_LINE (2182)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2182)) COMMA_SOURCE_FILE_AT_LINE (2182)).operator_concat (GALGAS_string ("' type is not an enumeration type)") COMMA_SOURCE_FILE_AT_LINE (2182)) COMMA_SOURCE_FILE_AT_LINE (2181)) ;
  }
  GALGAS_stringset var_enumConstantStringSet = var_switchExpression.reader_mType (SOURCE_FILE_AT_LINE (2185)).reader_mEnumConstantSet (inCompiler COMMA_SOURCE_FILE_AT_LINE (2185)) ;
  GALGAS_stringset var_constantsNamedInSwitchInstruction = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (2186)) ;
  {
  ioArgument_ioVariableMap.modifier_openOverrideForSelectBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (2188)) ;
  }
  GALGAS_switchBranchesForGeneration var_switchBranchesForGeneration = GALGAS_switchBranchesForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (2189)) ;
  cEnumerator_switchBranchesAST enumerator_83812 (object->mAttribute_mBranches, kEnumeration_up) ;
  while (enumerator_83812.hasCurrentObject ()) {
    cEnumerator_lstringlist enumerator_83847 (enumerator_83812.current_mSwitchConstantList (HERE), kEnumeration_up) ;
    while (enumerator_83847.hasCurrentObject ()) {
      const enumGalgasBool test_1 = var_enumConstantStringSet.reader_hasKey (enumerator_83847.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (2192)) COMMA_SOURCE_FILE_AT_LINE (2192)).boolEnum () ;
      if (kBoolTrue == test_1) {
        const enumGalgasBool test_2 = var_constantsNamedInSwitchInstruction.reader_hasKey (enumerator_83847.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (2193)) COMMA_SOURCE_FILE_AT_LINE (2193)).boolEnum () ;
        if (kBoolTrue == test_2) {
          GALGAS_location location_3 (enumerator_83847.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_3, GALGAS_string ("the '").operator_concat (enumerator_83847.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (2195)) COMMA_SOURCE_FILE_AT_LINE (2195)).operator_concat (GALGAS_string ("' constant is already named in this switch instruction") COMMA_SOURCE_FILE_AT_LINE (2195)) COMMA_SOURCE_FILE_AT_LINE (2194)) ;
        }
        var_constantsNamedInSwitchInstruction.addAssign_operation (enumerator_83847.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (2198)) COMMA_SOURCE_FILE_AT_LINE (2198)) ;
      }else if (kBoolFalse == test_1) {
        GALGAS_location location_4 (enumerator_83847.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_4, GALGAS_string ("'").operator_concat (enumerator_83847.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (2201)) COMMA_SOURCE_FILE_AT_LINE (2201)).operator_concat (GALGAS_string ("' is not a constant of '@") COMMA_SOURCE_FILE_AT_LINE (2201)).operator_concat (var_switchExpression.reader_mType (SOURCE_FILE_AT_LINE (2201)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2201)) COMMA_SOURCE_FILE_AT_LINE (2201)).operator_concat (GALGAS_string ("' enumeration type") COMMA_SOURCE_FILE_AT_LINE (2201)) COMMA_SOURCE_FILE_AT_LINE (2200)) ;
      }
      enumerator_83847.gotoNextObject () ;
    }
    GALGAS_semanticInstructionListForGeneration var_instructionList ;
    {
    routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (2208)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (2209)), enumerator_83812.current_mInstructions (HERE), enumerator_83812.current_mEndOfBranch (HERE), ioArgument_ioVariableMap, var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (2206)) ;
    }
    var_switchBranchesForGeneration.addAssign_operation (enumerator_83812.current_mSwitchConstantList (HERE), var_instructionList COMMA_SOURCE_FILE_AT_LINE (2215)) ;
    enumerator_83812.gotoNextObject () ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_switch_5F_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (2217)) ;
  }
  GALGAS_stringset var_forgottenConstants = var_enumConstantStringSet.substract_operation (var_constantsNamedInSwitchInstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (2219)) ;
  const enumGalgasBool test_5 = GALGAS_bool (kIsStrictSup, var_forgottenConstants.reader_count (SOURCE_FILE_AT_LINE (2220)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_5) {
    GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
    cEnumerator_stringset enumerator_85052 (var_forgottenConstants, kEnumeration_up) ;
    while (enumerator_85052.hasCurrentObject ()) {
      var_s.dotAssign_operation (GALGAS_string ("\n"
        "  - ").operator_concat (enumerator_85052.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (2223)) COMMA_SOURCE_FILE_AT_LINE (2223)) ;
      enumerator_85052.gotoNextObject () ;
    }
    inCompiler->emitSemanticError (object->mAttribute_mEndOf_5F_switch_5F_instruction, GALGAS_string ("the switch instruction should name all enumeration constants; missing constants are:").operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (2226)) COMMA_SOURCE_FILE_AT_LINE (2225)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_switchInstructionForGeneration::constructor_new (var_switchExpression, var_switchBranchesForGeneration COMMA_SOURCE_FILE_AT_LINE (2230)) COMMA_SOURCE_FILE_AT_LINE (2230)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_switchInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_switchInstructionAST.mSlotID,
                                                  categoryMethod_switchInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_switchInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_switchInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@matchInstructionAST analyzeSemanticInstruction' *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_matchInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                           const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                           GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                           GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_matchInstructionAST * object = (const cPtr_matchInstructionAST *) inObject ;
  macroValidSharedObject (object, cPtr_matchInstructionAST) ;
  GALGAS_semanticExpressionListForGeneration var_expressionList = GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (2243)) ;
  cEnumerator_semanticExpressionListAST enumerator_85815 (object->mAttribute_mMatchedExpressionList, kEnumeration_up) ;
  while (enumerator_85815.hasCurrentObject ()) {
    GALGAS_semanticExpressionForGeneration var_matchedExpression ;
    callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) enumerator_85815.current_mExpression (HERE).ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_matchedExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (2247)) ;
    var_expressionList.addAssign_operation (var_matchedExpression COMMA_SOURCE_FILE_AT_LINE (2252)) ;
    GALGAS_unifiedTypeMapProxy var_type = var_matchedExpression.reader_mType (SOURCE_FILE_AT_LINE (2254)) ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_type.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (2255)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (2255)))).operator_and (GALGAS_bool (kIsNotEqual, var_type.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (2255)).objectCompare (GALGAS_typeKindEnum::constructor_enumType (SOURCE_FILE_AT_LINE (2255)))) COMMA_SOURCE_FILE_AT_LINE (2255)).boolEnum () ;
    if (kBoolTrue == test_0) {
      inCompiler->emitSemanticError (enumerator_85815.current_mEndOfExpressionLocation (HERE), GALGAS_string ("this expression is an instance of '@").operator_concat (var_type.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2257)) COMMA_SOURCE_FILE_AT_LINE (2257)).operator_concat (GALGAS_string ("' type, but this type is neither an enumeration, neither a class") COMMA_SOURCE_FILE_AT_LINE (2257)) COMMA_SOURCE_FILE_AT_LINE (2256)) ;
    }
    enumerator_85815.gotoNextObject () ;
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForSelectBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (2262)) ;
  }
  GALGAS_matchInstructionBranchListForGeneration var_matchInstructionBranchList = GALGAS_matchInstructionBranchListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (2263)) ;
  cEnumerator_matchInstructionBranchListAST enumerator_86680 (object->mAttribute_mMatchInstructionBranchList, kEnumeration_up) ;
  while (enumerator_86680.hasCurrentObject ()) {
    GALGAS_localConstantList var_localConstantList = GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (2266)) ;
    GALGAS_matchListForGeneration var_matchListForGeneration = GALGAS_matchListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (2267)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_expressionList.reader_length (SOURCE_FILE_AT_LINE (2268)).objectCompare (enumerator_86680.current_mMatchEntryList (HERE).reader_length (SOURCE_FILE_AT_LINE (2268)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      cEnumerator_semanticExpressionListForGeneration enumerator_86914 (var_expressionList, kEnumeration_up) ;
      cEnumerator_matchEntryListAST enumerator_86931 (enumerator_86680.current_mMatchEntryList (HERE), kEnumeration_up) ;
      while (enumerator_86914.hasCurrentObject () && enumerator_86931.hasCurrentObject ()) {
        GALGAS_unifiedTypeMapProxy var_type = enumerator_86914.current_mExpression (HERE).reader_mType (SOURCE_FILE_AT_LINE (2270)) ;
        const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, var_type.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (2271)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (2271)))).boolEnum () ;
        if (kBoolTrue == test_2) {
          const enumGalgasBool test_3 = enumerator_86931.current_mIsType (HERE).boolEnum () ;
          if (kBoolTrue == test_3) {
            GALGAS_unifiedTypeMapProxy var_namedType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, enumerator_86931.current_mTypeNameOrEnumerationConstantName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (2273)) ;
            GALGAS_unifiedTypeMapProxy var_t = var_type ;
            GALGAS_bool var_found = GALGAS_bool (kIsEqual, var_t.objectCompare (var_namedType)) ;
            if (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (2276)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2276)).isValid ()) {
              uint32_t variant_87325 = constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (2276)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2276)).uintValue () ;
              bool loop_87325 = true ;
              while (loop_87325) {
                loop_87325 = var_found.operator_not (SOURCE_FILE_AT_LINE (2277)).operator_and (var_t.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (2277)).reader_isNull (SOURCE_FILE_AT_LINE (2277)).operator_not (SOURCE_FILE_AT_LINE (2277)) COMMA_SOURCE_FILE_AT_LINE (2277)).isValid () ;
                if (loop_87325) {
                  loop_87325 = var_found.operator_not (SOURCE_FILE_AT_LINE (2277)).operator_and (var_t.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (2277)).reader_isNull (SOURCE_FILE_AT_LINE (2277)).operator_not (SOURCE_FILE_AT_LINE (2277)) COMMA_SOURCE_FILE_AT_LINE (2277)).boolValue () ;
                }
                if (loop_87325 && (0 == variant_87325)) {
                  loop_87325 = false ;
                  inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (2276)) ;
                }
                if (loop_87325) {
                  variant_87325 -- ;
                  var_t = var_t.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (2278)) ;
                  var_found = GALGAS_bool (kIsEqual, var_t.objectCompare (var_namedType)) ;
                }
              }
            }
            const enumGalgasBool test_4 = var_found.operator_not (SOURCE_FILE_AT_LINE (2281)).boolEnum () ;
            if (kBoolTrue == test_4) {
              GALGAS_location location_5 (enumerator_86931.current_mTypeNameOrEnumerationConstantName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_5, GALGAS_string ("the '@").operator_concat (enumerator_86931.current_mTypeNameOrEnumerationConstantName (HERE).reader_string (SOURCE_FILE_AT_LINE (2283)) COMMA_SOURCE_FILE_AT_LINE (2283)).operator_concat (GALGAS_string ("' is not a descendant of the '@") COMMA_SOURCE_FILE_AT_LINE (2283)).operator_concat (var_type.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2283)) COMMA_SOURCE_FILE_AT_LINE (2283)).operator_concat (GALGAS_string ("' type of the cast expression") COMMA_SOURCE_FILE_AT_LINE (2283)) COMMA_SOURCE_FILE_AT_LINE (2282)) ;
            }else if (kBoolFalse == test_4) {
              const enumGalgasBool test_6 = GALGAS_bool (kIsStrictSup, enumerator_86931.current_mLocalConstantName (HERE).reader_string (SOURCE_FILE_AT_LINE (2285)).reader_length (SOURCE_FILE_AT_LINE (2285)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
              if (kBoolTrue == test_6) {
                var_localConstantList.addAssign_operation (var_t, enumerator_86931.current_mLocalConstantName (HERE), GALGAS_bool (false), GALGAS_string ("match_instruction_constant_name") COMMA_SOURCE_FILE_AT_LINE (2286)) ;
              }
            }
          }else if (kBoolFalse == test_3) {
            GALGAS_location location_7 (enumerator_86931.current_mTypeNameOrEnumerationConstantName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_7, GALGAS_string ("a type that inherits from '@").operator_concat (enumerator_86914.current_mExpression (HERE).reader_mType (SOURCE_FILE_AT_LINE (2290)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2290)) COMMA_SOURCE_FILE_AT_LINE (2290)).operator_concat (GALGAS_string ("' class is expected here") COMMA_SOURCE_FILE_AT_LINE (2290)) COMMA_SOURCE_FILE_AT_LINE (2289)) ;
          }
          var_matchListForGeneration.addAssign_operation (GALGAS_bool (true), enumerator_86931.current_mTypeNameOrEnumerationConstantName (HERE).reader_string (SOURCE_FILE_AT_LINE (2293)), enumerator_86931.current_mLocalConstantName (HERE).reader_string (SOURCE_FILE_AT_LINE (2293)) COMMA_SOURCE_FILE_AT_LINE (2293)) ;
        }else if (kBoolFalse == test_2) {
          const enumGalgasBool test_8 = GALGAS_bool (kIsEqual, var_type.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (2294)).objectCompare (GALGAS_typeKindEnum::constructor_enumType (SOURCE_FILE_AT_LINE (2294)))).boolEnum () ;
          if (kBoolTrue == test_8) {
            const enumGalgasBool test_9 = enumerator_86931.current_mIsType (HERE).boolEnum () ;
            if (kBoolTrue == test_9) {
              GALGAS_location location_10 (enumerator_86931.current_mTypeNameOrEnumerationConstantName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_10, GALGAS_string ("a constant of the '@").operator_concat (enumerator_86914.current_mExpression (HERE).reader_mType (SOURCE_FILE_AT_LINE (2297)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2297)) COMMA_SOURCE_FILE_AT_LINE (2297)).operator_concat (GALGAS_string ("' enumeration type is expected here") COMMA_SOURCE_FILE_AT_LINE (2297)) COMMA_SOURCE_FILE_AT_LINE (2296)) ;
            }else if (kBoolFalse == test_9) {
              const enumGalgasBool test_11 = var_type.reader_mEnumConstantSet (inCompiler COMMA_SOURCE_FILE_AT_LINE (2299)).reader_hasKey (enumerator_86931.current_mTypeNameOrEnumerationConstantName (HERE).reader_string (SOURCE_FILE_AT_LINE (2299)) COMMA_SOURCE_FILE_AT_LINE (2299)).operator_not (SOURCE_FILE_AT_LINE (2299)).boolEnum () ;
              if (kBoolTrue == test_11) {
                GALGAS_location location_12 (enumerator_86931.current_mTypeNameOrEnumerationConstantName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
                inCompiler->emitSemanticError (location_12, GALGAS_string ("the '").operator_concat (enumerator_86931.current_mTypeNameOrEnumerationConstantName (HERE).reader_string (SOURCE_FILE_AT_LINE (2301)) COMMA_SOURCE_FILE_AT_LINE (2301)).operator_concat (GALGAS_string ("' symbol is not a constant of the '@") COMMA_SOURCE_FILE_AT_LINE (2301)).operator_concat (enumerator_86914.current_mExpression (HERE).reader_mType (SOURCE_FILE_AT_LINE (2301)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2301)) COMMA_SOURCE_FILE_AT_LINE (2301)).operator_concat (GALGAS_string ("' enumeration type") COMMA_SOURCE_FILE_AT_LINE (2301)) COMMA_SOURCE_FILE_AT_LINE (2300)) ;
              }
            }
            var_matchListForGeneration.addAssign_operation (GALGAS_bool (false), enumerator_86931.current_mTypeNameOrEnumerationConstantName (HERE).reader_string (SOURCE_FILE_AT_LINE (2306)), enumerator_86914.current_mExpression (HERE).reader_mType (SOURCE_FILE_AT_LINE (2307)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2307)) COMMA_SOURCE_FILE_AT_LINE (2304)) ;
          }else if (kBoolFalse == test_8) {
            GALGAS_location location_13 (enumerator_86931.current_mTypeNameOrEnumerationConstantName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_13, GALGAS_string ("internal error") COMMA_SOURCE_FILE_AT_LINE (2310)) ;
          }
        }
        enumerator_86914.gotoNextObject () ;
        enumerator_86931.gotoNextObject () ;
      }
    }else if (kBoolFalse == test_1) {
      inCompiler->emitSemanticError (enumerator_86680.current_mEndOfMatchEntryList (HERE), GALGAS_string ("this match list should contain ").operator_concat (var_expressionList.reader_length (SOURCE_FILE_AT_LINE (2315)).reader_string (SOURCE_FILE_AT_LINE (2315)) COMMA_SOURCE_FILE_AT_LINE (2315)).operator_concat (GALGAS_string (" elements, but it acually contains ") COMMA_SOURCE_FILE_AT_LINE (2315)).operator_concat (enumerator_86680.current_mMatchEntryList (HERE).reader_length (SOURCE_FILE_AT_LINE (2316)).reader_string (SOURCE_FILE_AT_LINE (2316)) COMMA_SOURCE_FILE_AT_LINE (2315)) COMMA_SOURCE_FILE_AT_LINE (2314)) ;
    }
    GALGAS_semanticInstructionListForGeneration var_instructionList ;
    {
    routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, var_localConstantList, GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (2324)), enumerator_86680.current_mMatchBranchInstructionList (HERE), enumerator_86680.current_mEndOf_5F_instructionList (HERE), ioArgument_ioVariableMap, var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (2321)) ;
    }
    var_matchInstructionBranchList.addAssign_operation (var_matchListForGeneration, var_instructionList COMMA_SOURCE_FILE_AT_LINE (2331)) ;
    enumerator_86680.gotoNextObject () ;
  }
  GALGAS_semanticInstructionListForGeneration var_elseInstructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (2337)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (2338)), object->mAttribute_mElseInstructionList, object->mAttribute_mEndOf_5F_match_5F_instruction, ioArgument_ioVariableMap, var_elseInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (2335)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_match_5F_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (2345)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_matchInstructionForGeneration::constructor_new (var_expressionList, var_matchInstructionBranchList, var_elseInstructionList COMMA_SOURCE_FILE_AT_LINE (2347)) COMMA_SOURCE_FILE_AT_LINE (2347)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_matchInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_matchInstructionAST.mSlotID,
                                                  categoryMethod_matchInstructionAST_analyzeSemanticInstruction) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_matchInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_matchInstructionAST_analyzeSemanticInstruction, NULL) ;

//-----------------------------------------------------------------------------*

GALGAS_localConstantList_2E_element::GALGAS_localConstantList_2E_element (void) :
mAttribute_mType (),
mAttribute_mName (),
mAttribute_mNoWarningIfUnused (),
mAttribute_mCppName () {
}

//-----------------------------------------------------------------------------*

GALGAS_localConstantList_2E_element::~ GALGAS_localConstantList_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_localConstantList_2E_element::GALGAS_localConstantList_2E_element (const GALGAS_unifiedTypeMapProxy & inOperand0,
                                                                          const GALGAS_lstring & inOperand1,
                                                                          const GALGAS_bool & inOperand2,
                                                                          const GALGAS_string & inOperand3) :
mAttribute_mType (inOperand0),
mAttribute_mName (inOperand1),
mAttribute_mNoWarningIfUnused (inOperand2),
mAttribute_mCppName (inOperand3) {
}

//-----------------------------------------------------------------------------*

GALGAS_localConstantList_2E_element GALGAS_localConstantList_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_localConstantList_2E_element (GALGAS_unifiedTypeMapProxy::constructor_null (HERE),
                                              GALGAS_lstring::constructor_default (HERE),
                                              GALGAS_bool::constructor_default (HERE),
                                              GALGAS_string::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_localConstantList_2E_element GALGAS_localConstantList_2E_element::constructor_new (const GALGAS_unifiedTypeMapProxy & inOperand0,
                                                                                          const GALGAS_lstring & inOperand1,
                                                                                          const GALGAS_bool & inOperand2,
                                                                                          const GALGAS_string & inOperand3 
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_localConstantList_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_localConstantList_2E_element (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_localConstantList_2E_element::objectCompare (const GALGAS_localConstantList_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mType.objectCompare (inOperand.mAttribute_mType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mName.objectCompare (inOperand.mAttribute_mName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mNoWarningIfUnused.objectCompare (inOperand.mAttribute_mNoWarningIfUnused) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCppName.objectCompare (inOperand.mAttribute_mCppName) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_localConstantList_2E_element::isValid (void) const {
  return mAttribute_mType.isValid () && mAttribute_mName.isValid () && mAttribute_mNoWarningIfUnused.isValid () && mAttribute_mCppName.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_localConstantList_2E_element::drop (void) {
  mAttribute_mType.drop () ;
  mAttribute_mName.drop () ;
  mAttribute_mNoWarningIfUnused.drop () ;
  mAttribute_mCppName.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_localConstantList_2E_element::description (C_String & ioString,
                                                       const int32_t inIndentation) const {
  ioString << "<struct @localConstantList.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mNoWarningIfUnused.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCppName.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_localConstantList_2E_element::reader_mType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mType ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_localConstantList_2E_element::reader_mName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mName ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_localConstantList_2E_element::reader_mNoWarningIfUnused (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mNoWarningIfUnused ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_localConstantList_2E_element::reader_mCppName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCppName ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                       @localConstantList.element type                       *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_localConstantList_2E_element ("localConstantList.element",
                                                     NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_localConstantList_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_localConstantList_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_localConstantList_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_localConstantList_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_localConstantList_2E_element GALGAS_localConstantList_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_localConstantList_2E_element result ;
  const GALGAS_localConstantList_2E_element * p = (const GALGAS_localConstantList_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_localConstantList_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("localConstantList.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_localInitializedVariableList_2E_element::GALGAS_localInitializedVariableList_2E_element (void) :
mAttribute_mType (),
mAttribute_mName (),
mAttribute_mCppName () {
}

//-----------------------------------------------------------------------------*

GALGAS_localInitializedVariableList_2E_element::~ GALGAS_localInitializedVariableList_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_localInitializedVariableList_2E_element::GALGAS_localInitializedVariableList_2E_element (const GALGAS_unifiedTypeMapProxy & inOperand0,
                                                                                                const GALGAS_lstring & inOperand1,
                                                                                                const GALGAS_string & inOperand2) :
mAttribute_mType (inOperand0),
mAttribute_mName (inOperand1),
mAttribute_mCppName (inOperand2) {
}

//-----------------------------------------------------------------------------*

GALGAS_localInitializedVariableList_2E_element GALGAS_localInitializedVariableList_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_localInitializedVariableList_2E_element (GALGAS_unifiedTypeMapProxy::constructor_null (HERE),
                                                         GALGAS_lstring::constructor_default (HERE),
                                                         GALGAS_string::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_localInitializedVariableList_2E_element GALGAS_localInitializedVariableList_2E_element::constructor_new (const GALGAS_unifiedTypeMapProxy & inOperand0,
                                                                                                                const GALGAS_lstring & inOperand1,
                                                                                                                const GALGAS_string & inOperand2 
                                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_localInitializedVariableList_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_localInitializedVariableList_2E_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_localInitializedVariableList_2E_element::objectCompare (const GALGAS_localInitializedVariableList_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mType.objectCompare (inOperand.mAttribute_mType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mName.objectCompare (inOperand.mAttribute_mName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCppName.objectCompare (inOperand.mAttribute_mCppName) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_localInitializedVariableList_2E_element::isValid (void) const {
  return mAttribute_mType.isValid () && mAttribute_mName.isValid () && mAttribute_mCppName.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_localInitializedVariableList_2E_element::drop (void) {
  mAttribute_mType.drop () ;
  mAttribute_mName.drop () ;
  mAttribute_mCppName.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_localInitializedVariableList_2E_element::description (C_String & ioString,
                                                                  const int32_t inIndentation) const {
  ioString << "<struct @localInitializedVariableList.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCppName.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_localInitializedVariableList_2E_element::reader_mType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mType ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_localInitializedVariableList_2E_element::reader_mName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mName ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_localInitializedVariableList_2E_element::reader_mCppName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCppName ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                 @localInitializedVariableList.element type                  *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_localInitializedVariableList_2E_element ("localInitializedVariableList.element",
                                                                NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_localInitializedVariableList_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_localInitializedVariableList_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_localInitializedVariableList_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_localInitializedVariableList_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_localInitializedVariableList_2E_element GALGAS_localInitializedVariableList_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                              C_Compiler * inCompiler
                                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_localInitializedVariableList_2E_element result ;
  const GALGAS_localInitializedVariableList_2E_element * p = (const GALGAS_localInitializedVariableList_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_localInitializedVariableList_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("localInitializedVariableList.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


