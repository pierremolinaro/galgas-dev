//---------------------------------------------------------------------------*
//                                                                           *
//                 File 'semanticInstructionsAnalysis.cpp'                   *
//                        Generated by version 2.4.7                         *
//                       july 6th, 2013, at 9h55'29"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "semanticInstructionsAnalysis.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "optionLL1grammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticInstructionsAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//              Class for element of '@localConstantList' list               *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_localConstantList : public cCollectionElement {
  public : GALGAS_localConstantList_2E_element mObject ;

//--- Constructor
  public : cCollectionElement_localConstantList (const GALGAS_unifiedTypeMapProxy & in_mType,
                                                 const GALGAS_lstring & in_mName,
                                                 const GALGAS_bool & in_mNoWarningIfUnused,
                                                 const GALGAS_string & in_mCppName
                                                 COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_localConstantList::cCollectionElement_localConstantList (const GALGAS_unifiedTypeMapProxy & in_mType,
                                                                            const GALGAS_lstring & in_mName,
                                                                            const GALGAS_bool & in_mNoWarningIfUnused,
                                                                            const GALGAS_string & in_mCppName
                                                                            COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mType, in_mName, in_mNoWarningIfUnused, in_mCppName) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_localConstantList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_localConstantList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_localConstantList (mObject.mAttribute_mType, mObject.mAttribute_mName, mObject.mAttribute_mNoWarningIfUnused, mObject.mAttribute_mCppName COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_localConstantList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mObject.mAttribute_mType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mName" ":" ;
  mObject.mAttribute_mName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mNoWarningIfUnused" ":" ;
  mObject.mAttribute_mNoWarningIfUnused.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCppName" ":" ;
  mObject.mAttribute_mCppName.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_localConstantList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_localConstantList * operand = (cCollectionElement_localConstantList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_localConstantList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------*

GALGAS_localConstantList::GALGAS_localConstantList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_localConstantList::GALGAS_localConstantList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_localConstantList GALGAS_localConstantList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_localConstantList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_localConstantList GALGAS_localConstantList::constructor_listWithValue (const GALGAS_unifiedTypeMapProxy & inOperand0,
                                                                              const GALGAS_lstring & inOperand1,
                                                                              const GALGAS_bool & inOperand2,
                                                                              const GALGAS_string & inOperand3
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_localConstantList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_localConstantList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_localConstantList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                          const GALGAS_unifiedTypeMapProxy & in_mType,
                                                          const GALGAS_lstring & in_mName,
                                                          const GALGAS_bool & in_mNoWarningIfUnused,
                                                          const GALGAS_string & in_mCppName
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement_localConstantList * p = NULL ;
  macroMyNew (p, cCollectionElement_localConstantList (in_mType,
                                                       in_mName,
                                                       in_mNoWarningIfUnused,
                                                       in_mCppName COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_localConstantList::addAssign_operation (const GALGAS_unifiedTypeMapProxy & inOperand0,
                                                    const GALGAS_lstring & inOperand1,
                                                    const GALGAS_bool & inOperand2,
                                                    const GALGAS_string & inOperand3
                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_localConstantList (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_localConstantList::modifier_prependValue (GALGAS_unifiedTypeMapProxy inOperand0,
                                                      GALGAS_lstring inOperand1,
                                                      GALGAS_bool inOperand2,
                                                      GALGAS_string inOperand3
                                                      COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_localConstantList (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_localConstantList::modifier_popFirst (GALGAS_unifiedTypeMapProxy & outOperand0,
                                                  GALGAS_lstring & outOperand1,
                                                  GALGAS_bool & outOperand2,
                                                  GALGAS_string & outOperand3,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_localConstantList * p = (cCollectionElement_localConstantList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_localConstantList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mName ;
    outOperand2 = p->mObject.mAttribute_mNoWarningIfUnused ;
    outOperand3 = p->mObject.mAttribute_mCppName ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_localConstantList::modifier_popLast (GALGAS_unifiedTypeMapProxy & outOperand0,
                                                 GALGAS_lstring & outOperand1,
                                                 GALGAS_bool & outOperand2,
                                                 GALGAS_string & outOperand3,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_localConstantList * p = (cCollectionElement_localConstantList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_localConstantList) ;
    macroUniqueSharedObject (p) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mName ;
    outOperand2 = p->mObject.mAttribute_mNoWarningIfUnused ;
    outOperand3 = p->mObject.mAttribute_mCppName ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_localConstantList::method_first (GALGAS_unifiedTypeMapProxy & outOperand0,
                                             GALGAS_lstring & outOperand1,
                                             GALGAS_bool & outOperand2,
                                             GALGAS_string & outOperand3,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_localConstantList * p = (cCollectionElement_localConstantList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_localConstantList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mName ;
    outOperand2 = p->mObject.mAttribute_mNoWarningIfUnused ;
    outOperand3 = p->mObject.mAttribute_mCppName ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_localConstantList::method_last (GALGAS_unifiedTypeMapProxy & outOperand0,
                                            GALGAS_lstring & outOperand1,
                                            GALGAS_bool & outOperand2,
                                            GALGAS_string & outOperand3,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_localConstantList * p = (cCollectionElement_localConstantList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_localConstantList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mName ;
    outOperand2 = p->mObject.mAttribute_mNoWarningIfUnused ;
    outOperand3 = p->mObject.mAttribute_mCppName ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_localConstantList GALGAS_localConstantList::operator_concat (const GALGAS_localConstantList & inOperand
                                                                    COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_localConstantList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_localConstantList GALGAS_localConstantList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_localConstantList result = GALGAS_localConstantList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_localConstantList GALGAS_localConstantList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_localConstantList result = GALGAS_localConstantList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_localConstantList::dotAssign_operation (const GALGAS_localConstantList inOperand
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_localConstantList::reader_mTypeAtIndex (const GALGAS_uint & inIndex,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_localConstantList * p = (cCollectionElement_localConstantList *) attributes.ptr () ;
  GALGAS_unifiedTypeMapProxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_localConstantList) ;
    result = p->mObject.mAttribute_mType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_localConstantList::reader_mNameAtIndex (const GALGAS_uint & inIndex,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_localConstantList * p = (cCollectionElement_localConstantList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_localConstantList) ;
    result = p->mObject.mAttribute_mName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_localConstantList::reader_mNoWarningIfUnusedAtIndex (const GALGAS_uint & inIndex,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_localConstantList * p = (cCollectionElement_localConstantList *) attributes.ptr () ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_localConstantList) ;
    result = p->mObject.mAttribute_mNoWarningIfUnused ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_localConstantList::reader_mCppNameAtIndex (const GALGAS_uint & inIndex,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_localConstantList * p = (cCollectionElement_localConstantList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_localConstantList) ;
    result = p->mObject.mAttribute_mCppName ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_localConstantList::cEnumerator_localConstantList (const GALGAS_localConstantList & inEnumeratedObject,
                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_localConstantList_2E_element cEnumerator_localConstantList::current (LOCATION_ARGS) const {
  const cCollectionElement_localConstantList * p = (const cCollectionElement_localConstantList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_localConstantList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy cEnumerator_localConstantList::current_mType (LOCATION_ARGS) const {
  const cCollectionElement_localConstantList * p = (const cCollectionElement_localConstantList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_localConstantList) ;
  return p->mObject.mAttribute_mType ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_localConstantList::current_mName (LOCATION_ARGS) const {
  const cCollectionElement_localConstantList * p = (const cCollectionElement_localConstantList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_localConstantList) ;
  return p->mObject.mAttribute_mName ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cEnumerator_localConstantList::current_mNoWarningIfUnused (LOCATION_ARGS) const {
  const cCollectionElement_localConstantList * p = (const cCollectionElement_localConstantList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_localConstantList) ;
  return p->mObject.mAttribute_mNoWarningIfUnused ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_localConstantList::current_mCppName (LOCATION_ARGS) const {
  const cCollectionElement_localConstantList * p = (const cCollectionElement_localConstantList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_localConstantList) ;
  return p->mObject.mAttribute_mCppName ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                          @localConstantList type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_localConstantList ("localConstantList",
                                          NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_localConstantList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_localConstantList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_localConstantList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_localConstantList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_localConstantList GALGAS_localConstantList::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler,
                                                                  const GALGAS_location & inErrorLocation
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_localConstantList result ;
  const GALGAS_localConstantList * p = (const GALGAS_localConstantList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_localConstantList *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "localConstantList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Class for element of '@localInitializedVariableList' list         *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_localInitializedVariableList : public cCollectionElement {
  public : GALGAS_localInitializedVariableList_2E_element mObject ;

//--- Constructor
  public : cCollectionElement_localInitializedVariableList (const GALGAS_unifiedTypeMapProxy & in_mType,
                                                            const GALGAS_lstring & in_mName,
                                                            const GALGAS_string & in_mCppName
                                                            COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_localInitializedVariableList::cCollectionElement_localInitializedVariableList (const GALGAS_unifiedTypeMapProxy & in_mType,
                                                                                                  const GALGAS_lstring & in_mName,
                                                                                                  const GALGAS_string & in_mCppName
                                                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mType, in_mName, in_mCppName) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_localInitializedVariableList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_localInitializedVariableList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_localInitializedVariableList (mObject.mAttribute_mType, mObject.mAttribute_mName, mObject.mAttribute_mCppName COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_localInitializedVariableList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mObject.mAttribute_mType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mName" ":" ;
  mObject.mAttribute_mName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCppName" ":" ;
  mObject.mAttribute_mCppName.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_localInitializedVariableList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_localInitializedVariableList * operand = (cCollectionElement_localInitializedVariableList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_localInitializedVariableList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------*

GALGAS_localInitializedVariableList::GALGAS_localInitializedVariableList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_localInitializedVariableList::GALGAS_localInitializedVariableList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_localInitializedVariableList GALGAS_localInitializedVariableList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_localInitializedVariableList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_localInitializedVariableList GALGAS_localInitializedVariableList::constructor_listWithValue (const GALGAS_unifiedTypeMapProxy & inOperand0,
                                                                                                    const GALGAS_lstring & inOperand1,
                                                                                                    const GALGAS_string & inOperand2
                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_localInitializedVariableList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_localInitializedVariableList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_localInitializedVariableList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                     const GALGAS_unifiedTypeMapProxy & in_mType,
                                                                     const GALGAS_lstring & in_mName,
                                                                     const GALGAS_string & in_mCppName
                                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement_localInitializedVariableList * p = NULL ;
  macroMyNew (p, cCollectionElement_localInitializedVariableList (in_mType,
                                                                  in_mName,
                                                                  in_mCppName COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_localInitializedVariableList::addAssign_operation (const GALGAS_unifiedTypeMapProxy & inOperand0,
                                                               const GALGAS_lstring & inOperand1,
                                                               const GALGAS_string & inOperand2
                                                               COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_localInitializedVariableList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_localInitializedVariableList::modifier_prependValue (GALGAS_unifiedTypeMapProxy inOperand0,
                                                                 GALGAS_lstring inOperand1,
                                                                 GALGAS_string inOperand2
                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_localInitializedVariableList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_localInitializedVariableList::modifier_popFirst (GALGAS_unifiedTypeMapProxy & outOperand0,
                                                             GALGAS_lstring & outOperand1,
                                                             GALGAS_string & outOperand2,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_localInitializedVariableList * p = (cCollectionElement_localInitializedVariableList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_localInitializedVariableList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mName ;
    outOperand2 = p->mObject.mAttribute_mCppName ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_localInitializedVariableList::modifier_popLast (GALGAS_unifiedTypeMapProxy & outOperand0,
                                                            GALGAS_lstring & outOperand1,
                                                            GALGAS_string & outOperand2,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_localInitializedVariableList * p = (cCollectionElement_localInitializedVariableList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_localInitializedVariableList) ;
    macroUniqueSharedObject (p) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mName ;
    outOperand2 = p->mObject.mAttribute_mCppName ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_localInitializedVariableList::method_first (GALGAS_unifiedTypeMapProxy & outOperand0,
                                                        GALGAS_lstring & outOperand1,
                                                        GALGAS_string & outOperand2,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_localInitializedVariableList * p = (cCollectionElement_localInitializedVariableList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_localInitializedVariableList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mName ;
    outOperand2 = p->mObject.mAttribute_mCppName ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_localInitializedVariableList::method_last (GALGAS_unifiedTypeMapProxy & outOperand0,
                                                       GALGAS_lstring & outOperand1,
                                                       GALGAS_string & outOperand2,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_localInitializedVariableList * p = (cCollectionElement_localInitializedVariableList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_localInitializedVariableList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mName ;
    outOperand2 = p->mObject.mAttribute_mCppName ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_localInitializedVariableList GALGAS_localInitializedVariableList::operator_concat (const GALGAS_localInitializedVariableList & inOperand
                                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_localInitializedVariableList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_localInitializedVariableList GALGAS_localInitializedVariableList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_localInitializedVariableList result = GALGAS_localInitializedVariableList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_localInitializedVariableList GALGAS_localInitializedVariableList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_localInitializedVariableList result = GALGAS_localInitializedVariableList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_localInitializedVariableList::dotAssign_operation (const GALGAS_localInitializedVariableList inOperand
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_localInitializedVariableList::reader_mTypeAtIndex (const GALGAS_uint & inIndex,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_localInitializedVariableList * p = (cCollectionElement_localInitializedVariableList *) attributes.ptr () ;
  GALGAS_unifiedTypeMapProxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_localInitializedVariableList) ;
    result = p->mObject.mAttribute_mType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_localInitializedVariableList::reader_mNameAtIndex (const GALGAS_uint & inIndex,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_localInitializedVariableList * p = (cCollectionElement_localInitializedVariableList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_localInitializedVariableList) ;
    result = p->mObject.mAttribute_mName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_localInitializedVariableList::reader_mCppNameAtIndex (const GALGAS_uint & inIndex,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_localInitializedVariableList * p = (cCollectionElement_localInitializedVariableList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_localInitializedVariableList) ;
    result = p->mObject.mAttribute_mCppName ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_localInitializedVariableList::cEnumerator_localInitializedVariableList (const GALGAS_localInitializedVariableList & inEnumeratedObject,
                                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_localInitializedVariableList_2E_element cEnumerator_localInitializedVariableList::current (LOCATION_ARGS) const {
  const cCollectionElement_localInitializedVariableList * p = (const cCollectionElement_localInitializedVariableList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_localInitializedVariableList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy cEnumerator_localInitializedVariableList::current_mType (LOCATION_ARGS) const {
  const cCollectionElement_localInitializedVariableList * p = (const cCollectionElement_localInitializedVariableList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_localInitializedVariableList) ;
  return p->mObject.mAttribute_mType ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_localInitializedVariableList::current_mName (LOCATION_ARGS) const {
  const cCollectionElement_localInitializedVariableList * p = (const cCollectionElement_localInitializedVariableList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_localInitializedVariableList) ;
  return p->mObject.mAttribute_mName ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_localInitializedVariableList::current_mCppName (LOCATION_ARGS) const {
  const cCollectionElement_localInitializedVariableList * p = (const cCollectionElement_localInitializedVariableList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_localInitializedVariableList) ;
  return p->mObject.mAttribute_mCppName ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                    @localInitializedVariableList type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_localInitializedVariableList ("localInitializedVariableList",
                                                     NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_localInitializedVariableList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_localInitializedVariableList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_localInitializedVariableList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_localInitializedVariableList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_localInitializedVariableList GALGAS_localInitializedVariableList::extractObject (const GALGAS_object & inObject,
                                                                                        C_Compiler * inCompiler,
                                                                                        const GALGAS_location & inErrorLocation
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_localInitializedVariableList result ;
  const GALGAS_localInitializedVariableList * p = (const GALGAS_localInitializedVariableList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_localInitializedVariableList *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "localInitializedVariableList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'analyzeSemanticInstructionList'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeSemanticInstructionList (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                             const GALGAS_localConstantList constinArgument_inLocalConstantList,
                                             const GALGAS_localInitializedVariableList constinArgument_inLocalInitializedVariableList,
                                             const GALGAS_semanticInstructionListAST constinArgument_inSemanticInstructionListAST,
                                             const GALGAS_location constinArgument_inEndOfBranchLocation,
                                             GALGAS_variableMap & ioArgument_ioVariableMap,
                                             GALGAS_semanticInstructionListForGeneration & outArgument_outInstructionListForGeneration,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outInstructionListForGeneration.drop () ; // Release 'out' argument
  outArgument_outInstructionListForGeneration = GALGAS_semanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (63)) ;
  {
  ioArgument_ioVariableMap.modifier_openBranch (inCompiler COMMA_SOURCE_FILE_AT_LINE (65)) ;
  }
  cEnumerator_localConstantList enumerator_3168 (constinArgument_inLocalConstantList, kEnumeration_up) ;
  while (enumerator_3168.hasCurrentObject ()) {
    const enumGalgasBool test_0 = enumerator_3168.current_mNoWarningIfUnused (HERE).boolEnum () ;
    if (kBoolTrue == test_0) {
      {
      ioArgument_ioVariableMap.modifier_insertUsedLocalConstant (enumerator_3168.current_mName (HERE), enumerator_3168.current_mType (HERE), enumerator_3168.current_mCppName (HERE), enumerator_3168.current_mCppName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (69)) ;
      }
    }else if (kBoolFalse == test_0) {
      {
      ioArgument_ioVariableMap.modifier_insertLocalConstant (enumerator_3168.current_mName (HERE), enumerator_3168.current_mType (HERE), enumerator_3168.current_mCppName (HERE), enumerator_3168.current_mCppName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (71)) ;
      }
    }
    enumerator_3168.gotoNextObject () ;
  }
  cEnumerator_localInitializedVariableList enumerator_3474 (constinArgument_inLocalInitializedVariableList, kEnumeration_up) ;
  while (enumerator_3474.hasCurrentObject ()) {
    {
    ioArgument_ioVariableMap.modifier_insertDefinedLocalVariable (enumerator_3474.current_mName (HERE), enumerator_3474.current_mType (HERE), enumerator_3474.current_mCppName (HERE), enumerator_3474.current_mCppName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (76)) ;
    }
    enumerator_3474.gotoNextObject () ;
  }
  cEnumerator_semanticInstructionListAST enumerator_3639 (constinArgument_inSemanticInstructionListAST, kEnumeration_up) ;
  while (enumerator_3639.hasCurrentObject ()) {
    callCategoryMethod_analyzeSemanticInstruction ((const cPtr_semanticInstructionAST *) enumerator_3639.current_mInstruction (HERE).ptr (), constinArgument_inAnalysisContext, outArgument_outInstructionListForGeneration, ioArgument_ioVariableMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (80)) ;
    enumerator_3639.gotoNextObject () ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeBranch (constinArgument_inEndOfBranchLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (87)) ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                Routine 'analyzeErrorOrWarningInstruction'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeErrorOrWarningInstruction (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                               const GALGAS_semanticExpressionAST constinArgument_inLocationExpression,
                                               const GALGAS_semanticExpressionAST constinArgument_inMessageExpression,
                                               const GALGAS_location constinArgument_inErrorLocation,
                                               const GALGAS_string constinArgument_inErrorOrWarningString,
                                               GALGAS_variableMap & ioArgument_ioVariableMap,
                                               GALGAS_semanticExpressionForGeneration & outArgument_outLocationExpression,
                                               GALGAS_semanticExpressionForGeneration & outArgument_outMessageExpression,
                                               GALGAS_bool & outArgument_outUseLocationReader,
                                               C_Compiler * inCompiler
                                               COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outLocationExpression.drop () ; // Release 'out' argument
  outArgument_outMessageExpression.drop () ; // Release 'out' argument
  outArgument_outUseLocationReader.drop () ; // Release 'out' argument
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) constinArgument_inLocationExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, outArgument_outLocationExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (305)) ;
  outArgument_outUseLocationReader = GALGAS_bool (kIsNotEqual, outArgument_outLocationExpression.reader_mType (SOURCE_FILE_AT_LINE (311)).objectCompare (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLocationType)) ;
  const enumGalgasBool test_0 = outArgument_outUseLocationReader.boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_readerMap var_readerMap = outArgument_outLocationExpression.reader_mType (SOURCE_FILE_AT_LINE (313)).reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (313)) ;
    const cMapElement_readerMap * objectArray_13188 = (const cMapElement_readerMap *) var_readerMap.readAccessForWithInstruction_hasKey (GALGAS_string ("location")) ;
    if (NULL != objectArray_13188) {
        macroValidSharedObject (objectArray_13188, const cMapElement_readerMap) ;
      const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, objectArray_13188->mAttribute_mArgumentTypeList.reader_length (SOURCE_FILE_AT_LINE (315)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
      if (kBoolTrue == test_1) {
        inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("the ").operator_concat (constinArgument_inErrorOrWarningString COMMA_SOURCE_FILE_AT_LINE (317)).operator_concat (GALGAS_string (" location expression type is '@") COMMA_SOURCE_FILE_AT_LINE (317)).operator_concat (outArgument_outLocationExpression.reader_mType (SOURCE_FILE_AT_LINE (317)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (317)) COMMA_SOURCE_FILE_AT_LINE (317)).operator_concat (GALGAS_string ("' and defines a 'location' reader with arguments; it should be either of the '@location' type, either defines a 'location' reader without argument that"
          " returns an '@location' object") COMMA_SOURCE_FILE_AT_LINE (318)) COMMA_SOURCE_FILE_AT_LINE (316)) ;
      }else if (kBoolFalse == test_1) {
        const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, objectArray_13188->mAttribute_mReturnedType.objectCompare (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLocationType)).boolEnum () ;
        if (kBoolTrue == test_2) {
          inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("the ").operator_concat (constinArgument_inErrorOrWarningString COMMA_SOURCE_FILE_AT_LINE (322)).operator_concat (GALGAS_string (" location expression type is '@") COMMA_SOURCE_FILE_AT_LINE (322)).operator_concat (outArgument_outLocationExpression.reader_mType (SOURCE_FILE_AT_LINE (322)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (322)) COMMA_SOURCE_FILE_AT_LINE (322)).operator_concat (GALGAS_string ("' and defines a 'location' reader that returns an '@") COMMA_SOURCE_FILE_AT_LINE (323)).operator_concat (objectArray_13188->mAttribute_mReturnedType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (323)) COMMA_SOURCE_FILE_AT_LINE (323)).operator_concat (GALGAS_string ("' object; it should be either of the '@location' type, either defines a 'location' reader without argument that returns an '@location' object") COMMA_SOURCE_FILE_AT_LINE (324)) COMMA_SOURCE_FILE_AT_LINE (321)) ;
        }
      }
    }else{
      inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("the ").operator_concat (constinArgument_inErrorOrWarningString COMMA_SOURCE_FILE_AT_LINE (329)).operator_concat (GALGAS_string (" location expression type is '@") COMMA_SOURCE_FILE_AT_LINE (329)).operator_concat (outArgument_outLocationExpression.reader_mType (SOURCE_FILE_AT_LINE (329)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (329)) COMMA_SOURCE_FILE_AT_LINE (329)).operator_concat (GALGAS_string ("' and does not define a 'location' reader; it should be either of the '@location' type, either defines a 'location' reader without argument that return"
        "s an '@location' object") COMMA_SOURCE_FILE_AT_LINE (330)) COMMA_SOURCE_FILE_AT_LINE (328)) ;
    }
  }
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) constinArgument_inMessageExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, outArgument_outMessageExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (335)) ;
  const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, outArgument_outMessageExpression.reader_mType (SOURCE_FILE_AT_LINE (341)).objectCompare (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mStringType)).boolEnum () ;
  if (kBoolTrue == test_3) {
    inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("the ").operator_concat (constinArgument_inErrorOrWarningString COMMA_SOURCE_FILE_AT_LINE (343)).operator_concat (GALGAS_string (" message expression type is '@") COMMA_SOURCE_FILE_AT_LINE (343)).operator_concat (outArgument_outMessageExpression.reader_mType (SOURCE_FILE_AT_LINE (343)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (343)) COMMA_SOURCE_FILE_AT_LINE (343)).operator_concat (GALGAS_string ("'; it should be of the '@string' type") COMMA_SOURCE_FILE_AT_LINE (343)) COMMA_SOURCE_FILE_AT_LINE (342)) ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'analyzeRoutineArguments'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeRoutineArguments (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                      const GALGAS_lstring constinArgument_inRoutineName,
                                      const GALGAS_string constinArgument_inInvokedEntityName,
                                      const GALGAS_formalParameterSignature constinArgument_inRoutineSignature,
                                      const GALGAS_actualParameterListAST constinArgument_inActualParameterList,
                                      GALGAS_variableMap & ioArgument_ioVariableMap,
                                      GALGAS_actualParameterListForGeneration & outArgument_outActualParameterListForGeneration,
                                      C_Compiler * inCompiler
                                      COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outActualParameterListForGeneration.drop () ; // Release 'out' argument
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inRoutineSignature.reader_length (SOURCE_FILE_AT_LINE (593)).objectCompare (constinArgument_inActualParameterList.reader_length (SOURCE_FILE_AT_LINE (593)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (constinArgument_inRoutineName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the ").operator_concat (constinArgument_inInvokedEntityName COMMA_SOURCE_FILE_AT_LINE (595)).operator_concat (GALGAS_string (" defines ") COMMA_SOURCE_FILE_AT_LINE (595)).operator_concat (constinArgument_inRoutineSignature.reader_length (SOURCE_FILE_AT_LINE (595)).reader_string (SOURCE_FILE_AT_LINE (595)) COMMA_SOURCE_FILE_AT_LINE (595)).operator_concat (GALGAS_string (" formal argument(s), but this invocation names ") COMMA_SOURCE_FILE_AT_LINE (596)).operator_concat (constinArgument_inActualParameterList.reader_length (SOURCE_FILE_AT_LINE (597)).reader_string (SOURCE_FILE_AT_LINE (597)) COMMA_SOURCE_FILE_AT_LINE (597)).operator_concat (GALGAS_string (" argument(s)") COMMA_SOURCE_FILE_AT_LINE (597)) COMMA_SOURCE_FILE_AT_LINE (594)) ;
    outArgument_outActualParameterListForGeneration.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    outArgument_outActualParameterListForGeneration = GALGAS_actualParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (601)) ;
    GALGAS_stringset var_exclusiveVariableSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (602)) ;
    cEnumerator_formalParameterSignature enumerator_25150 (constinArgument_inRoutineSignature, kEnumeration_up) ;
    cEnumerator_actualParameterListAST enumerator_25175 (constinArgument_inActualParameterList, kEnumeration_up) ;
    while (enumerator_25150.hasCurrentObject () && enumerator_25175.hasCurrentObject ()) {
      callCategoryMethod_checkAgainstFormalArgument ((const cPtr_actualParameterAST *) enumerator_25175.current_mActualParameter (HERE).ptr (), constinArgument_inAnalysisContext, enumerator_25150.current_mFormalArgumentType (HERE), enumerator_25150.current_mFormalArgumentPassingMode (HERE), ioArgument_ioVariableMap, outArgument_outActualParameterListForGeneration, var_exclusiveVariableSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (604)) ;
      enumerator_25150.gotoNextObject () ;
      enumerator_25175.gotoNextObject () ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//            Function 'checkMethodImplementationInSuperClasses'             *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string function_checkMethodImplementationInSuperClasses (const GALGAS_lstring & constinArgument_inMethodName,
                                                                const GALGAS_unifiedTypeMapProxy & constinArgument_inSuperClass,
                                                                C_Compiler * inCompiler
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const enumGalgasBool test_0 = constinArgument_inSuperClass.reader_isNull (SOURCE_FILE_AT_LINE (730)).boolEnum () ;
  if (kBoolTrue == test_0) {
    result_outResult = GALGAS_string::makeEmptyString () ;
  }else if (kBoolFalse == test_0) {
    GALGAS_methodQualifier var_qualifier ;
    GALGAS_methodKind joker_29529_0 ; // Joker input parameter
    GALGAS_formalParameterSignature joker_29532_0 ; // Joker input parameter
    GALGAS_location joker_29535_0 ; // Joker input parameter
    GALGAS_bool joker_29538_0 ; // Joker input parameter
    GALGAS_string joker_29552_0 ; // Joker input parameter
    constinArgument_inSuperClass.reader_mInstanceMethodMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (734)).method_searchKey (constinArgument_inMethodName, joker_29529_0, joker_29532_0, joker_29535_0, joker_29538_0, var_qualifier, joker_29552_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (734)) ;
    if (var_qualifier.isValid ()) {
      switch (var_qualifier.enumValue ()) {
      case GALGAS_methodQualifier::kNotBuilt:
        break ;
      case GALGAS_methodQualifier::kEnum_isAbstract: {
        result_outResult = GALGAS_string::makeEmptyString () ;
        } break ;
      case GALGAS_methodQualifier::kEnum_isBasic: case GALGAS_methodQualifier::kEnum_isBasicFinal: case GALGAS_methodQualifier::kEnum_isOverriding: {
        result_outResult = constinArgument_inSuperClass.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (739)) ;
        } break ;
      case GALGAS_methodQualifier::kEnum_isInherited: case GALGAS_methodQualifier::kEnum_isOverridingAbstract: {
        result_outResult = function_checkMethodImplementationInSuperClasses (constinArgument_inMethodName, constinArgument_inSuperClass.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (741)), inCompiler COMMA_SOURCE_FILE_AT_LINE (741)) ;
        } break ;
      }
    }
  }
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_checkMethodImplementationInSuperClasses [3] = {
  & kTypeDescriptor_GALGAS_lstring,
  & kTypeDescriptor_GALGAS_unifiedTypeMapProxy,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_checkMethodImplementationInSuperClasses (C_Compiler * inCompiler,
                                                                                        const cObjectArray & inEffectiveParameterArray,
                                                                                        const GALGAS_location & inErrorLocation
                                                                                        COMMA_LOCATION_ARGS) {
  const GALGAS_lstring operand0 = GALGAS_lstring::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  const GALGAS_unifiedTypeMapProxy operand1 = GALGAS_unifiedTypeMapProxy::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  return function_checkMethodImplementationInSuperClasses (operand0, operand1, inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_checkMethodImplementationInSuperClasses ("checkMethodImplementationInSuperClasses",
                                                                                         functionWithGenericHeader_checkMethodImplementationInSuperClasses,
                                                                                         & kTypeDescriptor_GALGAS_string,
                                                                                         2,
                                                                                         functionArgs_checkMethodImplementationInSuperClasses) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Function 'checkModifierImplementationInSuperClasses'            *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string function_checkModifierImplementationInSuperClasses (const GALGAS_lstring & constinArgument_inModifierName,
                                                                  const GALGAS_unifiedTypeMapProxy & constinArgument_inSuperClass,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const enumGalgasBool test_0 = constinArgument_inSuperClass.reader_isNull (SOURCE_FILE_AT_LINE (845)).boolEnum () ;
  if (kBoolTrue == test_0) {
    result_outResult = GALGAS_string::makeEmptyString () ;
  }else if (kBoolFalse == test_0) {
    GALGAS_methodQualifier var_qualifier ;
    GALGAS_methodKind joker_33606_3 ; // Joker input parameter
    GALGAS_formalParameterSignature joker_33606_2 ; // Joker input parameter
    GALGAS_bool joker_33606_1 ; // Joker input parameter
    GALGAS_string joker_33621_0 ; // Joker input parameter
    constinArgument_inSuperClass.reader_mModifierMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (849)).method_searchKey (constinArgument_inModifierName, joker_33606_3, joker_33606_2, joker_33606_1, var_qualifier, joker_33621_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (849)) ;
    if (var_qualifier.isValid ()) {
      switch (var_qualifier.enumValue ()) {
      case GALGAS_methodQualifier::kNotBuilt:
        break ;
      case GALGAS_methodQualifier::kEnum_isAbstract: {
        result_outResult = GALGAS_string::makeEmptyString () ;
        } break ;
      case GALGAS_methodQualifier::kEnum_isBasic: case GALGAS_methodQualifier::kEnum_isBasicFinal: case GALGAS_methodQualifier::kEnum_isOverriding: {
        result_outResult = constinArgument_inSuperClass.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (854)) ;
        } break ;
      case GALGAS_methodQualifier::kEnum_isInherited: case GALGAS_methodQualifier::kEnum_isOverridingAbstract: {
        result_outResult = function_checkModifierImplementationInSuperClasses (constinArgument_inModifierName, constinArgument_inSuperClass.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (856)), inCompiler COMMA_SOURCE_FILE_AT_LINE (856)) ;
        } break ;
      }
    }
  }
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_checkModifierImplementationInSuperClasses [3] = {
  & kTypeDescriptor_GALGAS_lstring,
  & kTypeDescriptor_GALGAS_unifiedTypeMapProxy,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_checkModifierImplementationInSuperClasses (C_Compiler * inCompiler,
                                                                                          const cObjectArray & inEffectiveParameterArray,
                                                                                          const GALGAS_location & inErrorLocation
                                                                                          COMMA_LOCATION_ARGS) {
  const GALGAS_lstring operand0 = GALGAS_lstring::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  const GALGAS_unifiedTypeMapProxy operand1 = GALGAS_unifiedTypeMapProxy::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  return function_checkModifierImplementationInSuperClasses (operand0, operand1, inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_checkModifierImplementationInSuperClasses ("checkModifierImplementationInSuperClasses",
                                                                                           functionWithGenericHeader_checkModifierImplementationInSuperClasses,
                                                                                           & kTypeDescriptor_GALGAS_string,
                                                                                           2,
                                                                                           functionArgs_checkModifierImplementationInSuperClasses) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'checkExpressionIsBoolean'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkExpressionIsBoolean (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                       const GALGAS_location constinArgument_inErrorLocation,
                                       const GALGAS_semanticExpressionForGeneration constinArgument_inExpression,
                                       GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                       C_Compiler * inCompiler
                                       COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  GALGAS_unifiedTypeMapProxy var_expressionType = constinArgument_inExpression.reader_mType (SOURCE_FILE_AT_LINE (1251)) ;
  GALGAS_unifiedTypeMapProxy var_boolType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_expressionType.objectCompare (var_boolType)).boolEnum () ;
  if (kBoolTrue == test_0) {
    outArgument_outExpression = constinArgument_inExpression ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_expressionType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1256)).objectCompare (GALGAS_typeKindEnum::constructor_structType (SOURCE_FILE_AT_LINE (1256)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      const enumGalgasBool test_2 = var_expressionType.reader_mAttributeMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1257)).reader_hasKey (GALGAS_string ("bool") COMMA_SOURCE_FILE_AT_LINE (1257)).boolEnum () ;
      if (kBoolTrue == test_2) {
        GALGAS_unifiedTypeMapProxy var_attributeType ;
        var_expressionType.reader_mAttributeMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1259)).method_searchKey (GALGAS_lstring::constructor_new (GALGAS_string ("bool"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1259)), var_attributeType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1259)) ;
        const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, var_attributeType.objectCompare (var_boolType)).boolEnum () ;
        if (kBoolTrue == test_3) {
          outArgument_outExpression = GALGAS_structFieldAccessExpressionForGeneration::constructor_new (var_boolType, constinArgument_inErrorLocation, constinArgument_inExpression, GALGAS_string ("bool") COMMA_SOURCE_FILE_AT_LINE (1261)) ;
        }else if (kBoolFalse == test_3) {
          inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("the '@").operator_concat (var_expressionType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1269)) COMMA_SOURCE_FILE_AT_LINE (1269)).operator_concat (GALGAS_string ("' struct type defines an attribute named 'bool', but its type is not '@bool'") COMMA_SOURCE_FILE_AT_LINE (1269)) COMMA_SOURCE_FILE_AT_LINE (1268)) ;
          outArgument_outExpression.drop () ; // Release error dropped variable
        }
      }else if (kBoolFalse == test_2) {
        inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("the '@").operator_concat (var_expressionType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1275)) COMMA_SOURCE_FILE_AT_LINE (1275)).operator_concat (GALGAS_string ("' struct type does not define an attribute named 'bool'") COMMA_SOURCE_FILE_AT_LINE (1275)) COMMA_SOURCE_FILE_AT_LINE (1274)) ;
        outArgument_outExpression.drop () ; // Release error dropped variable
      }
    }else if (kBoolFalse == test_1) {
      const cMapElement_readerMap * objectArray_50259 = (const cMapElement_readerMap *) var_expressionType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1280)).readAccessForWithInstruction_hasKey (GALGAS_string ("bool")) ;
      if (NULL != objectArray_50259) {
          macroValidSharedObject (objectArray_50259, const cMapElement_readerMap) ;
        const enumGalgasBool test_4 = GALGAS_bool (kIsNotEqual, objectArray_50259->mAttribute_mReturnedType.objectCompare (var_boolType)).boolEnum () ;
        if (kBoolTrue == test_4) {
          inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("the expression type is not @bool, it handles a 'bool' reader, but it does not return a '@bool' value") COMMA_SOURCE_FILE_AT_LINE (1282)) ;
          outArgument_outExpression.drop () ; // Release error dropped variable
        }else if (kBoolFalse == test_4) {
          const enumGalgasBool test_5 = GALGAS_bool (kIsStrictSup, objectArray_50259->mAttribute_mArgumentTypeList.reader_length (SOURCE_FILE_AT_LINE (1283)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
          if (kBoolTrue == test_5) {
            inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("the expression type is not @bool, it handles a 'bool' reader that requires argument(s)") COMMA_SOURCE_FILE_AT_LINE (1284)) ;
            outArgument_outExpression.drop () ; // Release error dropped variable
          }else if (kBoolFalse == test_5) {
            const enumGalgasBool test_6 = GALGAS_bool (kIsNotEqual, objectArray_50259->mAttribute_mErrorMessage.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
            if (kBoolTrue == test_6) {
              inCompiler->emitSemanticError (constinArgument_inErrorLocation, objectArray_50259->mAttribute_mErrorMessage COMMA_SOURCE_FILE_AT_LINE (1286)) ;
              outArgument_outExpression.drop () ; // Release error dropped variable
            }else if (kBoolFalse == test_6) {
              outArgument_outExpression = GALGAS_readerCallExpressionForGeneration::constructor_new (var_boolType, constinArgument_inErrorLocation, objectArray_50259->mAttribute_mKind, constinArgument_inExpression, GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1293)), GALGAS_string ("bool"), GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1295)), objectArray_50259->mAttribute_mHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (1288)) ;
            }
          }
        }
      }else{
        const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, var_expressionType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1300)).reader_count (SOURCE_FILE_AT_LINE (1300)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
        if (kBoolTrue == test_7) {
          inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("the expression type is not '@bool', but '@").operator_concat (var_expressionType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1302)) COMMA_SOURCE_FILE_AT_LINE (1302)).operator_concat (GALGAS_string ("', and this type does not define the 'bool' reader") COMMA_SOURCE_FILE_AT_LINE (1302)) COMMA_SOURCE_FILE_AT_LINE (1301)) ;
          outArgument_outExpression.drop () ; // Release error dropped variable
        }else if (kBoolFalse == test_7) {
          GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
          cEnumerator_readerMap enumerator_51462 (var_expressionType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1307)), kEnumeration_up) ;
          while (enumerator_51462.hasCurrentObject ()) {
            var_s.dotAssign_operation (GALGAS_string ("\n"
              "  - ").operator_concat (enumerator_51462.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (1308)) COMMA_SOURCE_FILE_AT_LINE (1308)) COMMA_SOURCE_FILE_AT_LINE (1308)) ;
            cEnumerator_unifiedTypeMapProxyList enumerator_51534 (enumerator_51462.current_mArgumentTypeList (HERE), kEnumeration_up) ;
            while (enumerator_51534.hasCurrentObject ()) {
              var_s.dotAssign_operation (GALGAS_string (" \?@").operator_concat (enumerator_51534.current_mType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1310)) COMMA_SOURCE_FILE_AT_LINE (1310)) COMMA_SOURCE_FILE_AT_LINE (1310)) ;
              enumerator_51534.gotoNextObject () ;
            }
            var_s.dotAssign_operation (GALGAS_string (" -> @").operator_concat (enumerator_51462.current_mReturnedType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1312)) COMMA_SOURCE_FILE_AT_LINE (1312)) COMMA_SOURCE_FILE_AT_LINE (1312)) ;
            enumerator_51462.gotoNextObject () ;
          }
          //--- @ifExpressionForGeneration
          GALGAS_string temp_8 ;
          const enumGalgasBool test_9 = GALGAS_bool (kIsStrictSup, var_expressionType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1316)).reader_count (SOURCE_FILE_AT_LINE (1316)).objectCompare (GALGAS_uint ((PMUInt32) 1U))).boolEnum () ;
          if (kBoolTrue == test_9) {
            temp_8 = GALGAS_string ("readers are") ;
          }else if (kBoolFalse == test_9) {
            temp_8 = GALGAS_string ("reader is") ;
          }
          inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("the expression type is not '@bool', but '@").operator_concat (var_expressionType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1315)) COMMA_SOURCE_FILE_AT_LINE (1315)).operator_concat (GALGAS_string ("', and this type does not define the 'bool' reader; available ") COMMA_SOURCE_FILE_AT_LINE (1315)).operator_concat (temp_8 COMMA_SOURCE_FILE_AT_LINE (1316)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (1317)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (1317)) COMMA_SOURCE_FILE_AT_LINE (1314)) ;
          outArgument_outExpression.drop () ; // Release error dropped variable
        }
      }
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//Abstract category method '@semanticInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_semanticInstructionAST_analyzeSemanticInstruction> gCategoryMethodTable_semanticInstructionAST_analyzeSemanticInstruction ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyzeSemanticInstruction (const PMSInt32 inClassIndex,
                                                     categoryMethodSignature_semanticInstructionAST_analyzeSemanticInstruction inMethod) {
  gCategoryMethodTable_semanticInstructionAST_analyzeSemanticInstruction.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_semanticInstructionAST_analyzeSemanticInstruction (void) {
  gCategoryMethodTable_semanticInstructionAST_analyzeSemanticInstruction.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_semanticInstructionAST_analyzeSemanticInstruction (NULL,
                                                                              freeCategoryMethod_semanticInstructionAST_analyzeSemanticInstruction) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                    const GALGAS_analysisContext constin_inAnalysisContext,
                                                    GALGAS_semanticInstructionListForGeneration & io_ioInstructionListForGeneration,
                                                    GALGAS_variableMap & io_ioVariableMap,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_semanticInstructionAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_semanticInstructionAST_analyzeSemanticInstruction f = NULL ;
    if (classIndex < gCategoryMethodTable_semanticInstructionAST_analyzeSemanticInstruction.count ()) {
      f = gCategoryMethodTable_semanticInstructionAST_analyzeSemanticInstruction (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_semanticInstructionAST_analyzeSemanticInstruction.count ()) {
           f = gCategoryMethodTable_semanticInstructionAST_analyzeSemanticInstruction (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_semanticInstructionAST_analyzeSemanticInstruction.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inAnalysisContext, io_ioInstructionListForGeneration, io_ioVariableMap, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@localVariableOrConstantDeclarationWithDefaultConstructorAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_localVariableOrConstantDeclarationWithDefaultConstructorAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                                                   const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                                                   GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                                                   GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                                                   C_Compiler * inCompiler
                                                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_localVariableOrConstantDeclarationWithDefaultConstructorAST * object = (const cPtr_localVariableOrConstantDeclarationWithDefaultConstructorAST *) inObject ;
  macroValidSharedObject (object, const cPtr_localVariableOrConstantDeclarationWithDefaultConstructorAST) ;
  GALGAS_unifiedTypeMapProxy var_targetType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (98)) ;
  const enumGalgasBool test_0 = var_targetType.reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE_AT_LINE (103)).operator_not (SOURCE_FILE_AT_LINE (103)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mTypeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("an abstract class does not support the default constructor") COMMA_SOURCE_FILE_AT_LINE (104)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, var_targetType.reader_mDefaultConstructorName (inCompiler COMMA_SOURCE_FILE_AT_LINE (105)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mTypeName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("this class does not support the default constructor") COMMA_SOURCE_FILE_AT_LINE (106)) ;
    }
  }
  GALGAS_string var_targetVariableCppName = GALGAS_string ("var_").operator_concat (object->mAttribute_mVariableName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (109)) COMMA_SOURCE_FILE_AT_LINE (109)) ;
  const enumGalgasBool test_4 = object->mAttribute_mIsConstant.boolEnum () ;
  if (kBoolTrue == test_4) {
    {
    ioArgument_ioVariableMap.modifier_insertLocalConstant (object->mAttribute_mVariableName, var_targetType, var_targetVariableCppName, var_targetVariableCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (111)) ;
    }
  }else if (kBoolFalse == test_4) {
    {
    ioArgument_ioVariableMap.modifier_insertDefinedLocalVariable (object->mAttribute_mVariableName, var_targetType, var_targetVariableCppName, var_targetVariableCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (113)) ;
    }
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_localVariableOrConstantDeclarationWithDefaultConstructorForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_targetType, object->mAttribute_mIsConstant, var_targetVariableCppName COMMA_SOURCE_FILE_AT_LINE (116)) COMMA_SOURCE_FILE_AT_LINE (116)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_localVariableOrConstantDeclarationWithDefaultConstructorAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_localVariableOrConstantDeclarationWithDefaultConstructorAST.mSlotID,
                                                  categoryMethod_localVariableOrConstantDeclarationWithDefaultConstructorAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_localVariableOrConstantDeclarationWithDefaultConstructorAST_analyzeSemanticInstruction (defineCategoryMethod_localVariableOrConstantDeclarationWithDefaultConstructorAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@localVariableOrConstantDeclarationWithConstructorCallAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_localVariableOrConstantDeclarationWithConstructorCallAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                                                const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                                                GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                                                GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                                                C_Compiler * inCompiler
                                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_localVariableOrConstantDeclarationWithConstructorCallAST * object = (const cPtr_localVariableOrConstantDeclarationWithConstructorCallAST *) inObject ;
  macroValidSharedObject (object, const cPtr_localVariableOrConstantDeclarationWithConstructorCallAST) ;
  GALGAS_unifiedTypeMapProxy var_returnedType ;
  GALGAS_semanticExpressionListForGeneration var_constructorEffectiveParameterList ;
  GALGAS_bool var_hasCompilerArgument ;
  {
  GALGAS_unifiedTypeMapProxy joker_5890_0 ; // Joker input parameter
  routine_analyzeConstructorInvocation (constinArgument_inAnalysisContext, ioArgument_ioVariableMap, object->mAttribute_mTypeName, object->mAttribute_mConstructorName, object->mAttribute_mConstructorExpressions, var_returnedType, joker_5890_0, var_constructorEffectiveParameterList, var_hasCompilerArgument, inCompiler COMMA_SOURCE_FILE_AT_LINE (132)) ;
  }
  GALGAS_unifiedTypeMapProxy var_targetType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (144)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_targetType.objectCompare (var_returnedType)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mConstructorName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("this constructor returns an '@").operator_concat (var_returnedType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (147)) COMMA_SOURCE_FILE_AT_LINE (147)).operator_concat (GALGAS_string ("' object, you should use a constructor that return an '@") COMMA_SOURCE_FILE_AT_LINE (147)).operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (147)) COMMA_SOURCE_FILE_AT_LINE (147)).operator_concat (GALGAS_string ("' object") COMMA_SOURCE_FILE_AT_LINE (147)) COMMA_SOURCE_FILE_AT_LINE (146)) ;
  }
  GALGAS_string var_targetVariableCppName = GALGAS_string ("var_").operator_concat (object->mAttribute_mVariableName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (151)) COMMA_SOURCE_FILE_AT_LINE (151)) ;
  const enumGalgasBool test_2 = object->mAttribute_mIsConstant.boolEnum () ;
  if (kBoolTrue == test_2) {
    {
    ioArgument_ioVariableMap.modifier_insertLocalConstant (object->mAttribute_mVariableName, var_targetType, var_targetVariableCppName, var_targetVariableCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (153)) ;
    }
  }else if (kBoolFalse == test_2) {
    {
    ioArgument_ioVariableMap.modifier_insertDefinedLocalVariable (object->mAttribute_mVariableName, var_targetType, var_targetVariableCppName, var_targetVariableCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (155)) ;
    }
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_localVariableOrConstantDeclarationWithConstructorCallForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_targetType, object->mAttribute_mIsConstant, var_targetVariableCppName, object->mAttribute_mConstructorName.reader_string (SOURCE_FILE_AT_LINE (163)), var_constructorEffectiveParameterList, var_hasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (158)) COMMA_SOURCE_FILE_AT_LINE (158)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_localVariableOrConstantDeclarationWithConstructorCallAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_localVariableOrConstantDeclarationWithConstructorCallAST.mSlotID,
                                                  categoryMethod_localVariableOrConstantDeclarationWithConstructorCallAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_localVariableOrConstantDeclarationWithConstructorCallAST_analyzeSemanticInstruction (defineCategoryMethod_localVariableOrConstantDeclarationWithConstructorCallAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@localVariableOrConstantDeclarationWithAssignmentAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_localVariableOrConstantDeclarationWithAssignmentAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                                           const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                                           GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                                           GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                                           C_Compiler * inCompiler
                                                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_localVariableOrConstantDeclarationWithAssignmentAST * object = (const cPtr_localVariableOrConstantDeclarationWithAssignmentAST *) inObject ;
  macroValidSharedObject (object, const cPtr_localVariableOrConstantDeclarationWithAssignmentAST) ;
  GALGAS_semanticExpressionForGeneration var_expression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mSourceExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (178)) ;
  GALGAS_unifiedTypeMapProxy var_targetType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (184)) ;
  GALGAS_string var_targetVariableCppName = GALGAS_string ("var_").operator_concat (object->mAttribute_mVariableName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (185)) COMMA_SOURCE_FILE_AT_LINE (185)) ;
  const enumGalgasBool test_0 = object->mAttribute_mIsConstant.boolEnum () ;
  if (kBoolTrue == test_0) {
    {
    ioArgument_ioVariableMap.modifier_insertLocalConstant (object->mAttribute_mVariableName, var_targetType, var_targetVariableCppName, var_targetVariableCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (187)) ;
    }
  }else if (kBoolFalse == test_0) {
    {
    ioArgument_ioVariableMap.modifier_insertDefinedLocalVariable (object->mAttribute_mVariableName, var_targetType, var_targetVariableCppName, var_targetVariableCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (189)) ;
    }
  }
  {
  routine_checkAssignmentTypes (var_targetType, var_expression.reader_mType (SOURCE_FILE_AT_LINE (192)), object->mAttribute_mInstructionLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (192)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_localVariableOrConstantDeclarationWithSourceExpressionForGeneration::constructor_new (var_targetType, object->mAttribute_mIsConstant, var_targetVariableCppName, var_expression COMMA_SOURCE_FILE_AT_LINE (194)) COMMA_SOURCE_FILE_AT_LINE (194)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_localVariableOrConstantDeclarationWithAssignmentAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_localVariableOrConstantDeclarationWithAssignmentAST.mSlotID,
                                                  categoryMethod_localVariableOrConstantDeclarationWithAssignmentAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_localVariableOrConstantDeclarationWithAssignmentAST_analyzeSemanticInstruction (defineCategoryMethod_localVariableOrConstantDeclarationWithAssignmentAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@localVariableDeclarationAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_localVariableDeclarationAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                   const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                   GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                   GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_localVariableDeclarationAST * object = (const cPtr_localVariableDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_localVariableDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_targetType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (210)) ;
  GALGAS_string var_targetVariableCppName = GALGAS_string ("var_").operator_concat (object->mAttribute_mVariableName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (211)) COMMA_SOURCE_FILE_AT_LINE (211)) ;
  {
  ioArgument_ioVariableMap.modifier_insertUndefinedLocalVariable (object->mAttribute_mVariableName, var_targetType, var_targetVariableCppName, var_targetVariableCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (212)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_localVariableDeclarationForGeneration::constructor_new (var_targetType, var_targetVariableCppName COMMA_SOURCE_FILE_AT_LINE (214)) COMMA_SOURCE_FILE_AT_LINE (214)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_localVariableDeclarationAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_localVariableDeclarationAST.mSlotID,
                                                  categoryMethod_localVariableDeclarationAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_localVariableDeclarationAST_analyzeSemanticInstruction (defineCategoryMethod_localVariableDeclarationAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@assignmentInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_assignmentInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_assignmentInstructionAST * object = (const cPtr_assignmentInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_assignmentInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_expression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mSourceExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (229)) ;
  GALGAS_unifiedTypeMapProxy var_targetType ;
  GALGAS_string var_targetVariableCppName ;
  GALGAS_string var_nameForCheckingFormalParameterUsing ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mStructAttributeList.reader_length (SOURCE_FILE_AT_LINE (238)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    {
    ioArgument_ioVariableMap.modifier_searchForWriteAccess (object->mAttribute_mTargetVariableName, var_targetType, var_targetVariableCppName, var_nameForCheckingFormalParameterUsing, inCompiler COMMA_SOURCE_FILE_AT_LINE (239)) ;
    }
  }else if (kBoolFalse == test_0) {
    {
    ioArgument_ioVariableMap.modifier_searchForReadWriteAccess (object->mAttribute_mTargetVariableName, var_targetType, var_targetVariableCppName, var_nameForCheckingFormalParameterUsing, inCompiler COMMA_SOURCE_FILE_AT_LINE (241)) ;
    }
    cEnumerator_lstringlist enumerator_10378 (object->mAttribute_mStructAttributeList, kEnumeration_up) ;
    while (enumerator_10378.hasCurrentObject ()) {
      GALGAS_attributeMap var_attributeMap = var_targetType.reader_mAttributeMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (243)) ;
      var_attributeMap.method_searchKey (enumerator_10378.current_mValue (HERE), var_targetType, inCompiler COMMA_SOURCE_FILE_AT_LINE (244)) ;
      enumerator_10378.gotoNextObject () ;
    }
  }
  {
  routine_checkAssignmentTypes (var_targetType, var_expression.reader_mType (SOURCE_FILE_AT_LINE (248)), object->mAttribute_mInstructionLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (248)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_assignmentInstructionForGeneration::constructor_new (var_targetType, var_targetVariableCppName, var_nameForCheckingFormalParameterUsing, object->mAttribute_mStructAttributeList, var_expression COMMA_SOURCE_FILE_AT_LINE (250)) COMMA_SOURCE_FILE_AT_LINE (250)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_assignmentInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_assignmentInstructionAST.mSlotID,
                                                  categoryMethod_assignmentInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_assignmentInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_assignmentInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@selfAssignmentInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_selfAssignmentInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                    const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                    GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                    GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_selfAssignmentInstructionAST * object = (const cPtr_selfAssignmentInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_selfAssignmentInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_expression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mSourceExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (268)) ;
  const enumGalgasBool test_0 = constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy.reader_isNull (SOURCE_FILE_AT_LINE (274)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("'self' can be used only in category modifiers") COMMA_SOURCE_FILE_AT_LINE (275)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (276)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (276)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("'self' assignment is not allowed for class instances") COMMA_SOURCE_FILE_AT_LINE (277)) ;
    }
  }
  {
  routine_checkAssignmentTypes (constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy, var_expression.reader_mType (SOURCE_FILE_AT_LINE (280)), object->mAttribute_mInstructionLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (280)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_assignmentInstructionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy, constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName, constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName, GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (286)), var_expression COMMA_SOURCE_FILE_AT_LINE (282)) COMMA_SOURCE_FILE_AT_LINE (282)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_selfAssignmentInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_selfAssignmentInstructionAST.mSlotID,
                                                  categoryMethod_selfAssignmentInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_selfAssignmentInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_selfAssignmentInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@errorInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_errorInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                           const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                           GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                           GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_errorInstructionAST * object = (const cPtr_errorInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_errorInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_locationExpression ;
  GALGAS_semanticExpressionForGeneration var_messageExpression ;
  GALGAS_bool var_useLocationReader ;
  {
  routine_analyzeErrorOrWarningInstruction (constinArgument_inAnalysisContext, object->mAttribute_mLocationExpression, object->mAttribute_mMessageExpression, object->mAttribute_mInstructionLocation, GALGAS_string ("error"), ioArgument_ioVariableMap, var_locationExpression, var_messageExpression, var_useLocationReader, inCompiler COMMA_SOURCE_FILE_AT_LINE (359)) ;
  }
  GALGAS_stringlist var_builtVariableCppNameList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (371)) ;
  cEnumerator_lstringlist enumerator_15771 (object->mAttribute_mBuiltVariableList, kEnumeration_up) ;
  while (enumerator_15771.hasCurrentObject ()) {
    GALGAS_string var_varCppName ;
    {
    GALGAS_unifiedTypeMapProxy joker_15849_0 ; // Joker input parameter
    GALGAS_string joker_15864_0 ; // Joker input parameter
    ioArgument_ioVariableMap.modifier_searchForWriteAccess (enumerator_15771.current_mValue (HERE), joker_15849_0, var_varCppName, joker_15864_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (374)) ;
    }
    var_builtVariableCppNameList.addAssign_operation (var_varCppName COMMA_SOURCE_FILE_AT_LINE (375)) ;
    enumerator_15771.gotoNextObject () ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_errorInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_locationExpression, var_useLocationReader, var_messageExpression, var_builtVariableCppNameList COMMA_SOURCE_FILE_AT_LINE (378)) COMMA_SOURCE_FILE_AT_LINE (378)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_errorInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_errorInstructionAST.mSlotID,
                                                  categoryMethod_errorInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_errorInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_errorInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@warningInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_warningInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                             const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                             GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                             GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_warningInstructionAST * object = (const cPtr_warningInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_warningInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_locationExpression ;
  GALGAS_semanticExpressionForGeneration var_messageExpression ;
  GALGAS_bool var_useLocationReader ;
  {
  routine_analyzeErrorOrWarningInstruction (constinArgument_inAnalysisContext, object->mAttribute_mLocationExpression, object->mAttribute_mMessageExpression, object->mAttribute_mInstructionLocation, GALGAS_string ("warning"), ioArgument_ioVariableMap, var_locationExpression, var_messageExpression, var_useLocationReader, inCompiler COMMA_SOURCE_FILE_AT_LINE (398)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_warningInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_locationExpression, var_useLocationReader, var_messageExpression COMMA_SOURCE_FILE_AT_LINE (410)) COMMA_SOURCE_FILE_AT_LINE (410)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_warningInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_warningInstructionAST.mSlotID,
                                                  categoryMethod_warningInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_warningInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_warningInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Abstract category method '@actualParameterAST checkAgainstFormalArgument' *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_actualParameterAST_checkAgainstFormalArgument> gCategoryMethodTable_actualParameterAST_checkAgainstFormalArgument ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_checkAgainstFormalArgument (const PMSInt32 inClassIndex,
                                                     categoryMethodSignature_actualParameterAST_checkAgainstFormalArgument inMethod) {
  gCategoryMethodTable_actualParameterAST_checkAgainstFormalArgument.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_actualParameterAST_checkAgainstFormalArgument (void) {
  gCategoryMethodTable_actualParameterAST_checkAgainstFormalArgument.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_actualParameterAST_checkAgainstFormalArgument (NULL,
                                                                          freeCategoryMethod_actualParameterAST_checkAgainstFormalArgument) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_checkAgainstFormalArgument (const cPtr_actualParameterAST * inObject,
                                                    const GALGAS_analysisContext constin_inAnalysisContext,
                                                    const GALGAS_unifiedTypeMapProxy constin_inFormalArgumentType,
                                                    const GALGAS_formalArgumentPassingModeAST constin_inFormalArgumentPassingMode,
                                                    GALGAS_variableMap & io_ioVariableMap,
                                                    GALGAS_actualParameterListForGeneration & io_ioActualParameterListForGeneration,
                                                    GALGAS_stringset & io_ioExclusiveVariableSet,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_actualParameterAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_actualParameterAST_checkAgainstFormalArgument f = NULL ;
    if (classIndex < gCategoryMethodTable_actualParameterAST_checkAgainstFormalArgument.count ()) {
      f = gCategoryMethodTable_actualParameterAST_checkAgainstFormalArgument (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_actualParameterAST_checkAgainstFormalArgument.count ()) {
           f = gCategoryMethodTable_actualParameterAST_checkAgainstFormalArgument (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_actualParameterAST_checkAgainstFormalArgument.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inAnalysisContext, constin_inFormalArgumentType, constin_inFormalArgumentPassingMode, io_ioVariableMap, io_ioActualParameterListForGeneration, io_ioExclusiveVariableSet, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category Reader '@formalArgumentPassingModeAST correspondingEffectiveParameterString'*
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string categoryReader_correspondingEffectiveParameterString (const GALGAS_formalArgumentPassingModeAST & inObject,
                                                                    C_Compiler * /* inCompiler */
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_formalArgumentPassingModeAST temp_0 = inObject ;
  if (temp_0.isValid ()) {
    switch (temp_0.enumValue ()) {
    case GALGAS_formalArgumentPassingModeAST::kNotBuilt:
      break ;
    case GALGAS_formalArgumentPassingModeAST::kEnum_argumentConstantIn: {
      result_outResult = GALGAS_string ("!") ;
      } break ;
    case GALGAS_formalArgumentPassingModeAST::kEnum_argumentIn: {
      result_outResult = GALGAS_string ("!") ;
      } break ;
    case GALGAS_formalArgumentPassingModeAST::kEnum_argumentOut: {
      result_outResult = GALGAS_string ("\?") ;
      } break ;
    case GALGAS_formalArgumentPassingModeAST::kEnum_argumentInOut: {
      result_outResult = GALGAS_string ("!\?") ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@outputActualParameterAST checkAgainstFormalArgument'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_outputActualParameterAST_checkAgainstFormalArgument (const cPtr_actualParameterAST * inObject,
                                                                                const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                const GALGAS_unifiedTypeMapProxy constinArgument_inFormalArgumentType,
                                                                                const GALGAS_formalArgumentPassingModeAST constinArgument_inFormalArgumentPassingMode,
                                                                                GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                GALGAS_actualParameterListForGeneration & ioArgument_ioActualParameterListForGeneration,
                                                                                GALGAS_stringset & /* ioArgument_ioExclusiveVariableSet */,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_outputActualParameterAST * object = (const cPtr_outputActualParameterAST *) inObject ;
  macroValidSharedObject (object, const cPtr_outputActualParameterAST) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inFormalArgumentPassingMode.objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentIn (SOURCE_FILE_AT_LINE (451)))).operator_and (GALGAS_bool (kIsNotEqual, constinArgument_inFormalArgumentPassingMode.objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (452)))) COMMA_SOURCE_FILE_AT_LINE (452)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mQualifierLocation, GALGAS_string ("the corresponding formal argument has the '").operator_concat (categoryReader_string (constinArgument_inFormalArgumentPassingMode, inCompiler COMMA_SOURCE_FILE_AT_LINE (454)) COMMA_SOURCE_FILE_AT_LINE (454)).operator_concat (GALGAS_string ("' passing mode: this parameter should be passed with '") COMMA_SOURCE_FILE_AT_LINE (455)).operator_concat (categoryReader_correspondingEffectiveParameterString (constinArgument_inFormalArgumentPassingMode, inCompiler COMMA_SOURCE_FILE_AT_LINE (455)) COMMA_SOURCE_FILE_AT_LINE (455)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (455)) COMMA_SOURCE_FILE_AT_LINE (453)) ;
  }else if (kBoolFalse == test_0) {
    GALGAS_semanticExpressionForGeneration var_expression ;
    callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mOutputActualParameterExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (459)) ;
    {
    routine_checkAssignmentTypes (constinArgument_inFormalArgumentType, var_expression.reader_mType (SOURCE_FILE_AT_LINE (465)), object->mAttribute_mEndOfExpressionLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (465)) ;
    }
    ioArgument_ioActualParameterListForGeneration.addAssign_operation (GALGAS_outputActualParameterForGeneration::constructor_new (var_expression COMMA_SOURCE_FILE_AT_LINE (467)) COMMA_SOURCE_FILE_AT_LINE (467)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_outputActualParameterAST_checkAgainstFormalArgument (void) {
  enterCategoryMethod_checkAgainstFormalArgument (kTypeDescriptor_GALGAS_outputActualParameterAST.mSlotID,
                                                  categoryMethod_outputActualParameterAST_checkAgainstFormalArgument) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_outputActualParameterAST_checkAgainstFormalArgument (defineCategoryMethod_outputActualParameterAST_checkAgainstFormalArgument, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@outputInputActualParameterAST checkAgainstFormalArgument'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_outputInputActualParameterAST_checkAgainstFormalArgument (const cPtr_actualParameterAST * inObject,
                                                                                     const GALGAS_analysisContext /* constinArgument_inAnalysisContext */,
                                                                                     const GALGAS_unifiedTypeMapProxy constinArgument_inFormalArgumentType,
                                                                                     const GALGAS_formalArgumentPassingModeAST constinArgument_inFormalArgumentPassingMode,
                                                                                     GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                     GALGAS_actualParameterListForGeneration & ioArgument_ioActualParameterListForGeneration,
                                                                                     GALGAS_stringset & ioArgument_ioExclusiveVariableSet,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_outputInputActualParameterAST * object = (const cPtr_outputInputActualParameterAST *) inObject ;
  macroValidSharedObject (object, const cPtr_outputInputActualParameterAST) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inFormalArgumentPassingMode.objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentInOut (SOURCE_FILE_AT_LINE (483)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mQualifierLocation, GALGAS_string ("the corresponding formal argument has the '").operator_concat (categoryReader_string (constinArgument_inFormalArgumentPassingMode, inCompiler COMMA_SOURCE_FILE_AT_LINE (485)) COMMA_SOURCE_FILE_AT_LINE (485)).operator_concat (GALGAS_string ("' passing mode: this parameter should be passed with '") COMMA_SOURCE_FILE_AT_LINE (486)).operator_concat (categoryReader_correspondingEffectiveParameterString (constinArgument_inFormalArgumentPassingMode, inCompiler COMMA_SOURCE_FILE_AT_LINE (486)) COMMA_SOURCE_FILE_AT_LINE (486)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (486)) COMMA_SOURCE_FILE_AT_LINE (484)) ;
  }
  GALGAS_unifiedTypeMapProxy var_parameterType ;
  GALGAS_string var_variableCppName ;
  {
  GALGAS_string joker_20340_0 ; // Joker input parameter
  ioArgument_ioVariableMap.modifier_searchForReadWriteAccess (object->mAttribute_mOutputInputActualParameterName, var_parameterType, var_variableCppName, joker_20340_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (492)) ;
  }
  cEnumerator_lstringlist enumerator_20377 (object->mAttribute_mStructAttributeList, kEnumeration_up) ;
  while (enumerator_20377.hasCurrentObject ()) {
    GALGAS_attributeMap var_attributeMap = var_parameterType.reader_mAttributeMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (494)) ;
    var_attributeMap.method_searchKey (enumerator_20377.current_mValue (HERE), var_parameterType, inCompiler COMMA_SOURCE_FILE_AT_LINE (495)) ;
    enumerator_20377.gotoNextObject () ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, constinArgument_inFormalArgumentType.objectCompare (var_parameterType)).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_location location_2 (object->mAttribute_mOutputInputActualParameterName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, GALGAS_string ("the parameter object has the '@").operator_concat (var_parameterType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (500)) COMMA_SOURCE_FILE_AT_LINE (500)).operator_concat (GALGAS_string ("', it should be the same as the corresponding formal argument: '@") COMMA_SOURCE_FILE_AT_LINE (501)).operator_concat (constinArgument_inFormalArgumentType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (501)) COMMA_SOURCE_FILE_AT_LINE (501)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (501)) COMMA_SOURCE_FILE_AT_LINE (499)) ;
  }
  const enumGalgasBool test_3 = ioArgument_ioExclusiveVariableSet.reader_hasKey (object->mAttribute_mOutputInputActualParameterName.reader_string (SOURCE_FILE_AT_LINE (505)) COMMA_SOURCE_FILE_AT_LINE (505)).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_location location_4 (object->mAttribute_mOutputInputActualParameterName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_4, GALGAS_string ("this variable is already named as input or output/input effective parameter") COMMA_SOURCE_FILE_AT_LINE (506)) ;
  }
  ioArgument_ioExclusiveVariableSet.addAssign_operation (object->mAttribute_mOutputInputActualParameterName.reader_string (SOURCE_FILE_AT_LINE (510)) COMMA_SOURCE_FILE_AT_LINE (510)) ;
  ioArgument_ioActualParameterListForGeneration.addAssign_operation (GALGAS_outputInputActualParameterForGeneration::constructor_new (var_variableCppName, object->mAttribute_mStructAttributeList COMMA_SOURCE_FILE_AT_LINE (512)) COMMA_SOURCE_FILE_AT_LINE (512)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_outputInputActualParameterAST_checkAgainstFormalArgument (void) {
  enterCategoryMethod_checkAgainstFormalArgument (kTypeDescriptor_GALGAS_outputInputActualParameterAST.mSlotID,
                                                  categoryMethod_outputInputActualParameterAST_checkAgainstFormalArgument) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_outputInputActualParameterAST_checkAgainstFormalArgument (defineCategoryMethod_outputInputActualParameterAST_checkAgainstFormalArgument, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@inputActualParameterAST checkAgainstFormalArgument'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_inputActualParameterAST_checkAgainstFormalArgument (const cPtr_actualParameterAST * inObject,
                                                                               const GALGAS_analysisContext /* constinArgument_inAnalysisContext */,
                                                                               const GALGAS_unifiedTypeMapProxy constinArgument_inFormalArgumentType,
                                                                               const GALGAS_formalArgumentPassingModeAST constinArgument_inFormalArgumentPassingMode,
                                                                               GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                               GALGAS_actualParameterListForGeneration & ioArgument_ioActualParameterListForGeneration,
                                                                               GALGAS_stringset & ioArgument_ioExclusiveVariableSet,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_inputActualParameterAST * object = (const cPtr_inputActualParameterAST *) inObject ;
  macroValidSharedObject (object, const cPtr_inputActualParameterAST) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inFormalArgumentPassingMode.objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (528)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mQualifierLocation, GALGAS_string ("the corresponding formal argument has the '").operator_concat (categoryReader_string (constinArgument_inFormalArgumentPassingMode, inCompiler COMMA_SOURCE_FILE_AT_LINE (530)) COMMA_SOURCE_FILE_AT_LINE (530)).operator_concat (GALGAS_string ("' passing mode: this parameter should be passed with '") COMMA_SOURCE_FILE_AT_LINE (531)).operator_concat (categoryReader_correspondingEffectiveParameterString (constinArgument_inFormalArgumentPassingMode, inCompiler COMMA_SOURCE_FILE_AT_LINE (531)) COMMA_SOURCE_FILE_AT_LINE (531)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (531)) COMMA_SOURCE_FILE_AT_LINE (529)) ;
  }
  GALGAS_unifiedTypeMapProxy var_parameterType ;
  GALGAS_string var_targetVariableCppName ;
  {
  GALGAS_string joker_22313_0 ; // Joker input parameter
  ioArgument_ioVariableMap.modifier_searchForWriteAccess (object->mAttribute_mInputActualParameterName, var_parameterType, var_targetVariableCppName, joker_22313_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (536)) ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, constinArgument_inFormalArgumentType.objectCompare (var_parameterType)).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_location location_2 (object->mAttribute_mInputActualParameterName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, GALGAS_string ("the parameter object has the '@").operator_concat (var_parameterType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (540)) COMMA_SOURCE_FILE_AT_LINE (540)).operator_concat (GALGAS_string ("', it should be the same as the corresponding formal argument: '@") COMMA_SOURCE_FILE_AT_LINE (541)).operator_concat (constinArgument_inFormalArgumentType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (541)) COMMA_SOURCE_FILE_AT_LINE (541)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (541)) COMMA_SOURCE_FILE_AT_LINE (539)) ;
  }
  const enumGalgasBool test_3 = ioArgument_ioExclusiveVariableSet.reader_hasKey (object->mAttribute_mInputActualParameterName.reader_string (SOURCE_FILE_AT_LINE (545)) COMMA_SOURCE_FILE_AT_LINE (545)).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_location location_4 (object->mAttribute_mInputActualParameterName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_4, GALGAS_string ("this variable is already named as input or output/input effective parameter") COMMA_SOURCE_FILE_AT_LINE (546)) ;
  }
  ioArgument_ioExclusiveVariableSet.addAssign_operation (object->mAttribute_mInputActualParameterName.reader_string (SOURCE_FILE_AT_LINE (550)) COMMA_SOURCE_FILE_AT_LINE (550)) ;
  ioArgument_ioActualParameterListForGeneration.addAssign_operation (GALGAS_inputActualParameterForGeneration::constructor_new (var_targetVariableCppName COMMA_SOURCE_FILE_AT_LINE (552)) COMMA_SOURCE_FILE_AT_LINE (552)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_inputActualParameterAST_checkAgainstFormalArgument (void) {
  enterCategoryMethod_checkAgainstFormalArgument (kTypeDescriptor_GALGAS_inputActualParameterAST.mSlotID,
                                                  categoryMethod_inputActualParameterAST_checkAgainstFormalArgument) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_inputActualParameterAST_checkAgainstFormalArgument (defineCategoryMethod_inputActualParameterAST_checkAgainstFormalArgument, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@inputJokerActualParameterAST checkAgainstFormalArgument'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_inputJokerActualParameterAST_checkAgainstFormalArgument (const cPtr_actualParameterAST * inObject,
                                                                                    const GALGAS_analysisContext /* constinArgument_inAnalysisContext */,
                                                                                    const GALGAS_unifiedTypeMapProxy constinArgument_inFormalArgumentType,
                                                                                    const GALGAS_formalArgumentPassingModeAST constinArgument_inFormalArgumentPassingMode,
                                                                                    GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                                    GALGAS_actualParameterListForGeneration & ioArgument_ioActualParameterListForGeneration,
                                                                                    GALGAS_stringset & /* ioArgument_ioExclusiveVariableSet */,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_inputJokerActualParameterAST * object = (const cPtr_inputJokerActualParameterAST *) inObject ;
  macroValidSharedObject (object, const cPtr_inputJokerActualParameterAST) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inFormalArgumentPassingMode.objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (567)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mQualifierLocation, GALGAS_string ("the corresponding formal argument has the '").operator_concat (categoryReader_string (constinArgument_inFormalArgumentPassingMode, inCompiler COMMA_SOURCE_FILE_AT_LINE (569)) COMMA_SOURCE_FILE_AT_LINE (569)).operator_concat (GALGAS_string ("' passing mode: this parameter should be passed with '") COMMA_SOURCE_FILE_AT_LINE (570)).operator_concat (categoryReader_correspondingEffectiveParameterString (constinArgument_inFormalArgumentPassingMode, inCompiler COMMA_SOURCE_FILE_AT_LINE (570)) COMMA_SOURCE_FILE_AT_LINE (570)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (570)) COMMA_SOURCE_FILE_AT_LINE (568)) ;
  }else if (kBoolFalse == test_0) {
    GALGAS_string var_cppVarName = GALGAS_string ("joker_").operator_concat (object->mAttribute_mQualifierLocation.reader_locationIndex (inCompiler COMMA_SOURCE_FILE_AT_LINE (573)).reader_string (SOURCE_FILE_AT_LINE (573)) COMMA_SOURCE_FILE_AT_LINE (573)).operator_concat (GALGAS_string ("_") COMMA_SOURCE_FILE_AT_LINE (573)).operator_concat (object->mAttribute_mJokerIndex.reader_string (SOURCE_FILE_AT_LINE (573)) COMMA_SOURCE_FILE_AT_LINE (573)) ;
    ioArgument_ioActualParameterListForGeneration.addAssign_operation (GALGAS_inputJokerParameterForGeneration::constructor_new (var_cppVarName, constinArgument_inFormalArgumentType COMMA_SOURCE_FILE_AT_LINE (575)) COMMA_SOURCE_FILE_AT_LINE (575)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_inputJokerActualParameterAST_checkAgainstFormalArgument (void) {
  enterCategoryMethod_checkAgainstFormalArgument (kTypeDescriptor_GALGAS_inputJokerActualParameterAST.mSlotID,
                                                  categoryMethod_inputJokerActualParameterAST_checkAgainstFormalArgument) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_inputJokerActualParameterAST_checkAgainstFormalArgument (defineCategoryMethod_inputJokerActualParameterAST_checkAgainstFormalArgument, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@routineCallInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_routineCallInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                 const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                 GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                 GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_routineCallInstructionAST * object = (const cPtr_routineCallInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_routineCallInstructionAST) ;
  GALGAS_formalParameterSignature var_routineSignature ;
  constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mRoutineMap.method_searchKey (object->mAttribute_mRoutineName, var_routineSignature, inCompiler COMMA_SOURCE_FILE_AT_LINE (625)) ;
  GALGAS_actualParameterListForGeneration var_actualParameterListForGeneration ;
  {
  routine_analyzeRoutineArguments (constinArgument_inAnalysisContext, object->mAttribute_mRoutineName, GALGAS_string ("'").operator_concat (object->mAttribute_mRoutineName.reader_string (SOURCE_FILE_AT_LINE (631)) COMMA_SOURCE_FILE_AT_LINE (631)).operator_concat (GALGAS_string ("' routine header") COMMA_SOURCE_FILE_AT_LINE (631)), var_routineSignature, object->mAttribute_mActualParameterList, ioArgument_ioVariableMap, var_actualParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (628)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_routineCallInstructionForGeneration::constructor_new (object->mAttribute_mRoutineName, var_actualParameterListForGeneration COMMA_SOURCE_FILE_AT_LINE (638)) COMMA_SOURCE_FILE_AT_LINE (638)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_routineCallInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_routineCallInstructionAST.mSlotID,
                                                  categoryMethod_routineCallInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_routineCallInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_routineCallInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@typeMethodCallInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_typeMethodCallInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                    const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                    GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                    GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_typeMethodCallInstructionAST * object = (const cPtr_typeMethodCallInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_typeMethodCallInstructionAST) ;
  GALGAS_unifiedTypeMapProxy var_type = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (652)) ;
  GALGAS_formalParameterSignature var_routineSignature ;
  GALGAS_bool var_hasCompilerArgument ;
  var_type.reader_mClassMethodMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (656)).method_searchKey (object->mAttribute_mMethodName, var_routineSignature, var_hasCompilerArgument, inCompiler COMMA_SOURCE_FILE_AT_LINE (656)) ;
  GALGAS_actualParameterListForGeneration var_actualParameterListForGeneration ;
  {
  routine_analyzeRoutineArguments (constinArgument_inAnalysisContext, object->mAttribute_mMethodName, GALGAS_string ("'").operator_concat (object->mAttribute_mMethodName.reader_string (SOURCE_FILE_AT_LINE (662)) COMMA_SOURCE_FILE_AT_LINE (662)).operator_concat (GALGAS_string ("' class method header") COMMA_SOURCE_FILE_AT_LINE (662)), var_routineSignature, object->mAttribute_mActualParameterList, ioArgument_ioVariableMap, var_actualParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (659)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_typeMethodInstructionForGeneration::constructor_new (object->mAttribute_mTypeName, object->mAttribute_mMethodName, var_actualParameterListForGeneration, var_hasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (669)) COMMA_SOURCE_FILE_AT_LINE (669)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_typeMethodCallInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_typeMethodCallInstructionAST.mSlotID,
                                                  categoryMethod_typeMethodCallInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_typeMethodCallInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_typeMethodCallInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@methodCallInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_methodCallInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_methodCallInstructionAST * object = (const cPtr_methodCallInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_methodCallInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_receiverExpression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mReceiverExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_receiverExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (686)) ;
  GALGAS_formalParameterSignature var_routineSignature ;
  GALGAS_bool var_hasCompilerArgument ;
  GALGAS_methodKind var_kind ;
  GALGAS_string var_errorMessage ;
  GALGAS_location joker_28396_0 ; // Joker input parameter
  GALGAS_methodQualifier joker_28420_0 ; // Joker input parameter
  var_receiverExpression.reader_mType (SOURCE_FILE_AT_LINE (696)).reader_mInstanceMethodMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (696)).method_searchKey (object->mAttribute_mMethodName, var_kind, var_routineSignature, joker_28396_0, var_hasCompilerArgument, joker_28420_0, var_errorMessage, inCompiler COMMA_SOURCE_FILE_AT_LINE (696)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_errorMessage.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (698)) ;
  }
  GALGAS_actualParameterListForGeneration var_actualParameterListForGeneration ;
  {
  routine_analyzeRoutineArguments (constinArgument_inAnalysisContext, object->mAttribute_mMethodName, GALGAS_string ("'").operator_concat (object->mAttribute_mMethodName.reader_string (SOURCE_FILE_AT_LINE (705)) COMMA_SOURCE_FILE_AT_LINE (705)).operator_concat (GALGAS_string ("' instance method header") COMMA_SOURCE_FILE_AT_LINE (705)), var_routineSignature, object->mAttribute_mActualParameterList, ioArgument_ioVariableMap, var_actualParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (702)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_methodCallInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_receiverExpression.reader_mType (SOURCE_FILE_AT_LINE (714)), var_receiverExpression, object->mAttribute_mMethodName.reader_string (SOURCE_FILE_AT_LINE (716)), var_kind, var_actualParameterListForGeneration, var_hasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (712)) COMMA_SOURCE_FILE_AT_LINE (712)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_methodCallInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_methodCallInstructionAST.mSlotID,
                                                  categoryMethod_methodCallInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_methodCallInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_methodCallInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@modifierCallInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_modifierCallInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                  const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                  GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                  GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_modifierCallInstructionAST * object = (const cPtr_modifierCallInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_modifierCallInstructionAST) ;
  GALGAS_unifiedTypeMapProxy var_receiverType ;
  GALGAS_string var_receiverVariableCppName ;
  GALGAS_string var_receiverVariableBaseName ;
  {
  ioArgument_ioVariableMap.modifier_searchForReadWriteAccess (object->mAttribute_mReceiverName, var_receiverType, var_receiverVariableCppName, var_receiverVariableBaseName, inCompiler COMMA_SOURCE_FILE_AT_LINE (757)) ;
  }
  cEnumerator_lstringlist enumerator_30506 (object->mAttribute_mReceiverStructAttributes, kEnumeration_up) ;
  while (enumerator_30506.hasCurrentObject ()) {
    GALGAS_attributeMap var_attributeMap = var_receiverType.reader_mAttributeMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (759)) ;
    var_attributeMap.method_searchKey (enumerator_30506.current_mValue (HERE), var_receiverType, inCompiler COMMA_SOURCE_FILE_AT_LINE (760)) ;
    enumerator_30506.gotoNextObject () ;
  }
  GALGAS_formalParameterSignature var_routineSignature ;
  GALGAS_bool var_hasCompilerArgument ;
  GALGAS_string var_modifierErrorMessage ;
  GALGAS_methodKind var_kind ;
  GALGAS_methodQualifier joker_30909_0 ; // Joker input parameter
  var_receiverType.reader_mModifierMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (767)).method_searchKey (object->mAttribute_mModifierName, var_kind, var_routineSignature, var_hasCompilerArgument, joker_30909_0, var_modifierErrorMessage, inCompiler COMMA_SOURCE_FILE_AT_LINE (767)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_modifierErrorMessage.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mModifierName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, var_modifierErrorMessage COMMA_SOURCE_FILE_AT_LINE (769)) ;
  }
  GALGAS_actualParameterListForGeneration var_actualParameterListForGeneration ;
  {
  routine_analyzeRoutineArguments (constinArgument_inAnalysisContext, object->mAttribute_mModifierName, GALGAS_string ("'").operator_concat (object->mAttribute_mModifierName.reader_string (SOURCE_FILE_AT_LINE (776)) COMMA_SOURCE_FILE_AT_LINE (776)).operator_concat (GALGAS_string ("' modifier header") COMMA_SOURCE_FILE_AT_LINE (776)), var_routineSignature, object->mAttribute_mActualParameterList, ioArgument_ioVariableMap, var_actualParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (773)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_modifierCallInstructionForGeneration::constructor_new (var_receiverVariableCppName, var_receiverVariableBaseName, object->mAttribute_mReceiverStructAttributes, var_receiverType, object->mAttribute_mModifierName, var_kind, var_actualParameterListForGeneration, var_hasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (783)) COMMA_SOURCE_FILE_AT_LINE (783)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_modifierCallInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_modifierCallInstructionAST.mSlotID,
                                                  categoryMethod_modifierCallInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_modifierCallInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_modifierCallInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@selfModifierCallInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_selfModifierCallInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                      const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                      GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                      GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_selfModifierCallInstructionAST * object = (const cPtr_selfModifierCallInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_selfModifierCallInstructionAST) ;
  GALGAS_unifiedTypeMapProxy var_selfTypeProxy ;
  GALGAS_string var_selfObjectCppName ;
  const enumGalgasBool test_0 = constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy.reader_isNull (SOURCE_FILE_AT_LINE (805)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mModifierName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("'self' can be used only in category modifiers") COMMA_SOURCE_FILE_AT_LINE (806)) ;
    var_selfObjectCppName.drop () ; // Release error dropped variable
    var_selfTypeProxy.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    var_selfObjectCppName = constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName ;
    var_selfTypeProxy = constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy ;
  }
  GALGAS_formalParameterSignature var_routineSignature ;
  GALGAS_bool var_hasCompilerArgument ;
  GALGAS_methodKind var_kind ;
  GALGAS_methodQualifier joker_32631_0 ; // Joker input parameter
  GALGAS_string joker_32634_0 ; // Joker input parameter
  var_selfTypeProxy.reader_mModifierMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (815)).method_searchKey (object->mAttribute_mModifierName, var_kind, var_routineSignature, var_hasCompilerArgument, joker_32631_0, joker_32634_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (815)) ;
  GALGAS_actualParameterListForGeneration var_actualParameterListForGeneration ;
  {
  routine_analyzeRoutineArguments (constinArgument_inAnalysisContext, object->mAttribute_mModifierName, GALGAS_string ("'").operator_concat (object->mAttribute_mModifierName.reader_string (SOURCE_FILE_AT_LINE (821)) COMMA_SOURCE_FILE_AT_LINE (821)).operator_concat (GALGAS_string ("' modifier header") COMMA_SOURCE_FILE_AT_LINE (821)), var_routineSignature, object->mAttribute_mActualParameterList, ioArgument_ioVariableMap, var_actualParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (818)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_selfModifierCallInstructionForGeneration::constructor_new (var_selfObjectCppName, var_selfTypeProxy, object->mAttribute_mModifierName, var_kind, var_actualParameterListForGeneration, var_hasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (828)) COMMA_SOURCE_FILE_AT_LINE (828)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_selfModifierCallInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_selfModifierCallInstructionAST.mSlotID,
                                                  categoryMethod_selfModifierCallInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_selfModifierCallInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_selfModifierCallInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@concatInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_concatInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                            const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                            GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                            GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_concatInstructionAST * object = (const cPtr_concatInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_concatInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_expression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mSourceExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (870)) ;
  GALGAS_unifiedTypeMapProxy var_targetType ;
  GALGAS_string var_targetVariableCppName ;
  GALGAS_string var_nameForCheckingFormalParameterUsing ;
  {
  ioArgument_ioVariableMap.modifier_searchForReadWriteAccess (object->mAttribute_mTargetVariableName, var_targetType, var_targetVariableCppName, var_nameForCheckingFormalParameterUsing, inCompiler COMMA_SOURCE_FILE_AT_LINE (879)) ;
  }
  cEnumerator_lstringlist enumerator_34779 (object->mAttribute_mStructAttributeList, kEnumeration_up) ;
  while (enumerator_34779.hasCurrentObject ()) {
    GALGAS_attributeMap var_attributeMap = var_targetType.reader_mAttributeMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (881)) ;
    var_attributeMap.method_searchKey (enumerator_34779.current_mValue (HERE), var_targetType, inCompiler COMMA_SOURCE_FILE_AT_LINE (882)) ;
    enumerator_34779.gotoNextObject () ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_targetType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (885)).operator_and (function_dotAssignOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (885)) COMMA_SOURCE_FILE_AT_LINE (885)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the target object has the '@").operator_concat (var_targetType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (887)) COMMA_SOURCE_FILE_AT_LINE (887)).operator_concat (GALGAS_string ("' type, but this type does not support the '.=' operator") COMMA_SOURCE_FILE_AT_LINE (887)) COMMA_SOURCE_FILE_AT_LINE (886)) ;
  }
  {
  routine_checkAssignmentTypes (var_targetType, var_expression.reader_mType (SOURCE_FILE_AT_LINE (891)), object->mAttribute_mInstructionLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (891)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_concatInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_targetType, var_targetVariableCppName, var_nameForCheckingFormalParameterUsing, object->mAttribute_mStructAttributeList, var_expression COMMA_SOURCE_FILE_AT_LINE (893)) COMMA_SOURCE_FILE_AT_LINE (893)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_concatInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_concatInstructionAST.mSlotID,
                                                  categoryMethod_concatInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_concatInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_concatInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@selfConcatInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_selfConcatInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_selfConcatInstructionAST * object = (const cPtr_selfConcatInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_selfConcatInstructionAST) ;
  GALGAS_unifiedTypeMapProxy var_selfTypeProxy ;
  GALGAS_string var_selfObjectCppName ;
  const enumGalgasBool test_0 = constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy.reader_isNull (SOURCE_FILE_AT_LINE (913)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("'self' can be used only in category modifiers") COMMA_SOURCE_FILE_AT_LINE (914)) ;
    var_selfObjectCppName.drop () ; // Release error dropped variable
    var_selfTypeProxy.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    var_selfObjectCppName = constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName ;
    var_selfTypeProxy = constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_selfTypeProxy.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (920)).operator_and (function_dotAssignOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (920)) COMMA_SOURCE_FILE_AT_LINE (920)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the target object has the '@").operator_concat (var_selfTypeProxy.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (922)) COMMA_SOURCE_FILE_AT_LINE (922)).operator_concat (GALGAS_string ("' type, but this type does not support the '.=' operator") COMMA_SOURCE_FILE_AT_LINE (922)) COMMA_SOURCE_FILE_AT_LINE (921)) ;
  }
  GALGAS_semanticExpressionForGeneration var_expression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mSourceExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (927)) ;
  {
  routine_checkAssignmentTypes (var_selfTypeProxy, var_expression.reader_mType (SOURCE_FILE_AT_LINE (933)), object->mAttribute_mInstructionLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (933)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_concatInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_selfTypeProxy, var_selfObjectCppName, var_selfObjectCppName, GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (940)), var_expression COMMA_SOURCE_FILE_AT_LINE (935)) COMMA_SOURCE_FILE_AT_LINE (935)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_selfConcatInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_selfConcatInstructionAST.mSlotID,
                                                  categoryMethod_selfConcatInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_selfConcatInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_selfConcatInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@plusEqualInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_plusEqualInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                               const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                               GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                               GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_plusEqualInstructionAST * object = (const cPtr_plusEqualInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_plusEqualInstructionAST) ;
  GALGAS_unifiedTypeMapProxy var_targetType ;
  GALGAS_string var_targetVariableCppName ;
  GALGAS_string var_nameForCheckingFormalParameterUsing ;
  {
  ioArgument_ioVariableMap.modifier_searchForReadWriteAccess (object->mAttribute_mReceiverName, var_targetType, var_targetVariableCppName, var_nameForCheckingFormalParameterUsing, inCompiler COMMA_SOURCE_FILE_AT_LINE (956)) ;
  }
  cEnumerator_lstringlist enumerator_37796 (object->mAttribute_mStructAttributeList, kEnumeration_up) ;
  while (enumerator_37796.hasCurrentObject ()) {
    GALGAS_attributeMap var_attributeMap = var_targetType.reader_mAttributeMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (958)) ;
    var_attributeMap.method_searchKey (enumerator_37796.current_mValue (HERE), var_targetType, inCompiler COMMA_SOURCE_FILE_AT_LINE (959)) ;
    enumerator_37796.gotoNextObject () ;
  }
  GALGAS_unifiedTypeMapProxyList var_addAssignOperatorArguments = var_targetType.reader_mAddAssignOperatorArguments (inCompiler COMMA_SOURCE_FILE_AT_LINE (962)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_addAssignOperatorArguments.reader_length (SOURCE_FILE_AT_LINE (963)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the target object has the '@").operator_concat (var_targetType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (965)) COMMA_SOURCE_FILE_AT_LINE (965)).operator_concat (GALGAS_string ("' type, but this type does not support the '+=' operator") COMMA_SOURCE_FILE_AT_LINE (965)) COMMA_SOURCE_FILE_AT_LINE (964)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, object->mAttribute_mExpressions.reader_length (SOURCE_FILE_AT_LINE (968)).objectCompare (var_addAssignOperatorArguments.reader_length (SOURCE_FILE_AT_LINE (968)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("calling the '+=' operator on an '@").operator_concat (var_targetType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (970)) COMMA_SOURCE_FILE_AT_LINE (970)).operator_concat (GALGAS_string ("' object requires ") COMMA_SOURCE_FILE_AT_LINE (970)).operator_concat (var_addAssignOperatorArguments.reader_length (SOURCE_FILE_AT_LINE (971)).reader_string (SOURCE_FILE_AT_LINE (971)) COMMA_SOURCE_FILE_AT_LINE (971)).operator_concat (GALGAS_string (" parameter(s), while this invocation has ") COMMA_SOURCE_FILE_AT_LINE (971)).operator_concat (object->mAttribute_mExpressions.reader_length (SOURCE_FILE_AT_LINE (972)).reader_string (SOURCE_FILE_AT_LINE (972)) COMMA_SOURCE_FILE_AT_LINE (972)).operator_concat (GALGAS_string (" parameter(s)") COMMA_SOURCE_FILE_AT_LINE (972)) COMMA_SOURCE_FILE_AT_LINE (969)) ;
    }else if (kBoolFalse == test_1) {
      GALGAS_semanticExpressionListForGeneration var_effectiveParameterList = GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (975)) ;
      cEnumerator_semanticExpressionListAST enumerator_38832 (object->mAttribute_mExpressions, kEnumeration_up) ;
      cEnumerator_unifiedTypeMapProxyList enumerator_38862 (var_addAssignOperatorArguments, kEnumeration_up) ;
      while (enumerator_38832.hasCurrentObject () && enumerator_38862.hasCurrentObject ()) {
        GALGAS_semanticExpressionForGeneration var_exp ;
        callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) enumerator_38832.current_mExpression (HERE).ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_exp, inCompiler COMMA_SOURCE_FILE_AT_LINE (978)) ;
        {
        routine_checkAssignmentTypes (enumerator_38862.current_mType (HERE), var_exp.reader_mType (SOURCE_FILE_AT_LINE (983)), enumerator_38832.current_mEndOfExpressionLocation (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (983)) ;
        }
        var_effectiveParameterList.addAssign_operation (var_exp COMMA_SOURCE_FILE_AT_LINE (984)) ;
        enumerator_38832.gotoNextObject () ;
        enumerator_38862.gotoNextObject () ;
      }
      ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_plusEqualnstructionForGeneration::constructor_new (var_targetVariableCppName, var_targetType, var_nameForCheckingFormalParameterUsing, object->mAttribute_mInstructionLocation, object->mAttribute_mStructAttributeList, var_effectiveParameterList COMMA_SOURCE_FILE_AT_LINE (987)) COMMA_SOURCE_FILE_AT_LINE (987)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_plusEqualInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_plusEqualInstructionAST.mSlotID,
                                                  categoryMethod_plusEqualInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_plusEqualInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_plusEqualInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@selfPlusEqualInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_selfPlusEqualInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                   const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                   GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                   GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_selfPlusEqualInstructionAST * object = (const cPtr_selfPlusEqualInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_selfPlusEqualInstructionAST) ;
  GALGAS_unifiedTypeMapProxy var_selfTypeProxy ;
  GALGAS_string var_selfObjectCppName ;
  const enumGalgasBool test_0 = constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy.reader_isNull (SOURCE_FILE_AT_LINE (1008)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("'self' can be used only in category modifiers") COMMA_SOURCE_FILE_AT_LINE (1009)) ;
    var_selfObjectCppName.drop () ; // Release error dropped variable
    var_selfTypeProxy.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    var_selfObjectCppName = constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName ;
    var_selfTypeProxy = constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy ;
  }
  GALGAS_unifiedTypeMapProxyList var_addAssignOperatorArguments = var_selfTypeProxy.reader_mAddAssignOperatorArguments (inCompiler COMMA_SOURCE_FILE_AT_LINE (1015)) ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_addAssignOperatorArguments.reader_length (SOURCE_FILE_AT_LINE (1016)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the target object has the '@").operator_concat (var_selfTypeProxy.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1018)) COMMA_SOURCE_FILE_AT_LINE (1018)).operator_concat (GALGAS_string ("' type, but this type does not support the '+=' operator") COMMA_SOURCE_FILE_AT_LINE (1018)) COMMA_SOURCE_FILE_AT_LINE (1017)) ;
  }else if (kBoolFalse == test_1) {
    const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, object->mAttribute_mExpressions.reader_length (SOURCE_FILE_AT_LINE (1021)).objectCompare (var_addAssignOperatorArguments.reader_length (SOURCE_FILE_AT_LINE (1021)))).boolEnum () ;
    if (kBoolTrue == test_2) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("calling the '+=' operator on an '@").operator_concat (var_selfTypeProxy.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1023)) COMMA_SOURCE_FILE_AT_LINE (1023)).operator_concat (GALGAS_string ("' object requires ") COMMA_SOURCE_FILE_AT_LINE (1023)).operator_concat (var_addAssignOperatorArguments.reader_length (SOURCE_FILE_AT_LINE (1024)).reader_string (SOURCE_FILE_AT_LINE (1024)) COMMA_SOURCE_FILE_AT_LINE (1024)).operator_concat (GALGAS_string (" parameter(s), while this invocation has ") COMMA_SOURCE_FILE_AT_LINE (1024)).operator_concat (object->mAttribute_mExpressions.reader_length (SOURCE_FILE_AT_LINE (1025)).reader_string (SOURCE_FILE_AT_LINE (1025)) COMMA_SOURCE_FILE_AT_LINE (1025)).operator_concat (GALGAS_string (" parameter(s)") COMMA_SOURCE_FILE_AT_LINE (1025)) COMMA_SOURCE_FILE_AT_LINE (1022)) ;
    }else if (kBoolFalse == test_2) {
      GALGAS_semanticExpressionListForGeneration var_effectiveParameterList = GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1028)) ;
      cEnumerator_semanticExpressionListAST enumerator_41101 (object->mAttribute_mExpressions, kEnumeration_up) ;
      cEnumerator_unifiedTypeMapProxyList enumerator_41131 (var_addAssignOperatorArguments, kEnumeration_up) ;
      while (enumerator_41101.hasCurrentObject () && enumerator_41131.hasCurrentObject ()) {
        GALGAS_semanticExpressionForGeneration var_exp ;
        callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) enumerator_41101.current_mExpression (HERE).ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_exp, inCompiler COMMA_SOURCE_FILE_AT_LINE (1031)) ;
        {
        routine_checkAssignmentTypes (enumerator_41131.current_mType (HERE), var_exp.reader_mType (SOURCE_FILE_AT_LINE (1036)), enumerator_41101.current_mEndOfExpressionLocation (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1036)) ;
        }
        var_effectiveParameterList.addAssign_operation (var_exp COMMA_SOURCE_FILE_AT_LINE (1037)) ;
        enumerator_41101.gotoNextObject () ;
        enumerator_41131.gotoNextObject () ;
      }
      ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_plusEqualnstructionForGeneration::constructor_new (var_selfObjectCppName, var_selfTypeProxy, GALGAS_string::makeEmptyString (), object->mAttribute_mInstructionLocation, GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1045)), var_effectiveParameterList COMMA_SOURCE_FILE_AT_LINE (1040)) COMMA_SOURCE_FILE_AT_LINE (1040)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_selfPlusEqualInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_selfPlusEqualInstructionAST.mSlotID,
                                                  categoryMethod_selfPlusEqualInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_selfPlusEqualInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_selfPlusEqualInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@incrementInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_incrementInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                               const GALGAS_analysisContext /* constinArgument_inAnalysisContext */,
                                                                               GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                               GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_incrementInstructionAST * object = (const cPtr_incrementInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_incrementInstructionAST) ;
  GALGAS_unifiedTypeMapProxy var_targetType ;
  GALGAS_string var_targetVariableCppName ;
  {
  GALGAS_string joker_42205_0 ; // Joker input parameter
  ioArgument_ioVariableMap.modifier_searchForReadWriteAccess (object->mAttribute_mReceiverName, var_targetType, var_targetVariableCppName, joker_42205_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1061)) ;
  }
  cEnumerator_lstringlist enumerator_42242 (object->mAttribute_mStructAttributeList, kEnumeration_up) ;
  while (enumerator_42242.hasCurrentObject ()) {
    GALGAS_attributeMap var_attributeMap = var_targetType.reader_mAttributeMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1063)) ;
    var_attributeMap.method_searchKey (enumerator_42242.current_mValue (HERE), var_targetType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1064)) ;
    enumerator_42242.gotoNextObject () ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_targetType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1067)).operator_and (function_incDecOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1067)) COMMA_SOURCE_FILE_AT_LINE (1067)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the target object has the '@").operator_concat (var_targetType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1069)) COMMA_SOURCE_FILE_AT_LINE (1069)).operator_concat (GALGAS_string ("' type, but this type does not support the '++' operator") COMMA_SOURCE_FILE_AT_LINE (1069)) COMMA_SOURCE_FILE_AT_LINE (1068)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_incrementInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_targetVariableCppName, var_targetType, object->mAttribute_mStructAttributeList COMMA_SOURCE_FILE_AT_LINE (1073)) COMMA_SOURCE_FILE_AT_LINE (1073)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_incrementInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_incrementInstructionAST.mSlotID,
                                                  categoryMethod_incrementInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_incrementInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_incrementInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@selfIncrementInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_selfIncrementInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                   const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                   GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                   GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_selfIncrementInstructionAST * object = (const cPtr_selfIncrementInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_selfIncrementInstructionAST) ;
  GALGAS_unifiedTypeMapProxy var_selfTypeProxy ;
  GALGAS_string var_selfObjectCppName ;
  const enumGalgasBool test_0 = constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy.reader_isNull (SOURCE_FILE_AT_LINE (1091)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("'self' can be used only in category modifiers") COMMA_SOURCE_FILE_AT_LINE (1092)) ;
    var_selfObjectCppName.drop () ; // Release error dropped variable
    var_selfTypeProxy.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    var_selfObjectCppName = constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName ;
    var_selfTypeProxy = constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_selfTypeProxy.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1098)).operator_and (function_incDecOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1098)) COMMA_SOURCE_FILE_AT_LINE (1098)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the target object has the '@").operator_concat (var_selfTypeProxy.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1100)) COMMA_SOURCE_FILE_AT_LINE (1100)).operator_concat (GALGAS_string ("' type, but this type does not support the '++' operator") COMMA_SOURCE_FILE_AT_LINE (1100)) COMMA_SOURCE_FILE_AT_LINE (1099)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_incrementInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_selfObjectCppName, var_selfTypeProxy, GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1108)) COMMA_SOURCE_FILE_AT_LINE (1104)) COMMA_SOURCE_FILE_AT_LINE (1104)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_selfIncrementInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_selfIncrementInstructionAST.mSlotID,
                                                  categoryMethod_selfIncrementInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_selfIncrementInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_selfIncrementInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@decrementInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_decrementInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                               const GALGAS_analysisContext /* constinArgument_inAnalysisContext */,
                                                                               GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                               GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_decrementInstructionAST * object = (const cPtr_decrementInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_decrementInstructionAST) ;
  GALGAS_unifiedTypeMapProxy var_targetType ;
  GALGAS_string var_targetVariableCppName ;
  {
  GALGAS_string joker_44606_0 ; // Joker input parameter
  ioArgument_ioVariableMap.modifier_searchForReadWriteAccess (object->mAttribute_mReceiverName, var_targetType, var_targetVariableCppName, joker_44606_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1122)) ;
  }
  cEnumerator_lstringlist enumerator_44643 (object->mAttribute_mStructAttributeList, kEnumeration_up) ;
  while (enumerator_44643.hasCurrentObject ()) {
    GALGAS_attributeMap var_attributeMap = var_targetType.reader_mAttributeMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1124)) ;
    var_attributeMap.method_searchKey (enumerator_44643.current_mValue (HERE), var_targetType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1125)) ;
    enumerator_44643.gotoNextObject () ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_targetType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1128)).operator_and (function_incDecOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1128)) COMMA_SOURCE_FILE_AT_LINE (1128)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the target object has the '@").operator_concat (var_targetType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1130)) COMMA_SOURCE_FILE_AT_LINE (1130)).operator_concat (GALGAS_string ("' type, but this type does not support the '--' operator") COMMA_SOURCE_FILE_AT_LINE (1130)) COMMA_SOURCE_FILE_AT_LINE (1129)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_decrementInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_targetVariableCppName, var_targetType, object->mAttribute_mStructAttributeList COMMA_SOURCE_FILE_AT_LINE (1134)) COMMA_SOURCE_FILE_AT_LINE (1134)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_decrementInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_decrementInstructionAST.mSlotID,
                                                  categoryMethod_decrementInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_decrementInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_decrementInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@selfDecrementInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_selfDecrementInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                   const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                   GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                   GALGAS_variableMap & /* ioArgument_ioVariableMap */,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_selfDecrementInstructionAST * object = (const cPtr_selfDecrementInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_selfDecrementInstructionAST) ;
  GALGAS_unifiedTypeMapProxy var_selfTypeProxy ;
  GALGAS_string var_selfObjectCppName ;
  const enumGalgasBool test_0 = constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy.reader_isNull (SOURCE_FILE_AT_LINE (1152)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("'self' can be used only in category modifiers") COMMA_SOURCE_FILE_AT_LINE (1153)) ;
    var_selfObjectCppName.drop () ; // Release error dropped variable
    var_selfTypeProxy.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    var_selfObjectCppName = constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName ;
    var_selfTypeProxy = constinArgument_inAnalysisContext.mAttribute_mSelfTypeProxy ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_selfTypeProxy.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1159)).operator_and (function_incDecOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1159)) COMMA_SOURCE_FILE_AT_LINE (1159)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the target object has the '@").operator_concat (var_selfTypeProxy.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1161)) COMMA_SOURCE_FILE_AT_LINE (1161)).operator_concat (GALGAS_string ("' type, but this type does not support the '--' operator") COMMA_SOURCE_FILE_AT_LINE (1161)) COMMA_SOURCE_FILE_AT_LINE (1160)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_decrementInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_selfObjectCppName, var_selfTypeProxy, GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1169)) COMMA_SOURCE_FILE_AT_LINE (1165)) COMMA_SOURCE_FILE_AT_LINE (1165)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_selfDecrementInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_selfDecrementInstructionAST.mSlotID,
                                                  categoryMethod_selfDecrementInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_selfDecrementInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_selfDecrementInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@messageInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_messageInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                             const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                             GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                             GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_messageInstructionAST * object = (const cPtr_messageInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_messageInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_expression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1182)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_expression.reader_mType (SOURCE_FILE_AT_LINE (1188)).objectCompare (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mStringType)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the expression has the '@").operator_concat (var_expression.reader_mType (SOURCE_FILE_AT_LINE (1190)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1190)) COMMA_SOURCE_FILE_AT_LINE (1190)).operator_concat (GALGAS_string ("' type, but the 'message' instruction requires an '@string' expression") COMMA_SOURCE_FILE_AT_LINE (1190)) COMMA_SOURCE_FILE_AT_LINE (1189)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_messageInstructionForGeneration::constructor_new (var_expression, object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1194)) COMMA_SOURCE_FILE_AT_LINE (1194)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_messageInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_messageInstructionAST.mSlotID,
                                                  categoryMethod_messageInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_messageInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_messageInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@logInstructionAST analyzeSemanticInstruction' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_logInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                         const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                         GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                         GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_logInstructionAST * object = (const cPtr_logInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_logInstructionAST) ;
  cEnumerator_logListAST enumerator_47759 (object->mAttribute_mLogList, kEnumeration_up) ;
  while (enumerator_47759.hasCurrentObject ()) {
    GALGAS_semanticExpressionForGeneration var_expression ;
    callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) enumerator_47759.current_mLogExpression (HERE).ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1210)) ;
    ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_logInstructionForGeneration::constructor_new (enumerator_47759.current_mLogMessage (HERE), var_expression COMMA_SOURCE_FILE_AT_LINE (1216)) COMMA_SOURCE_FILE_AT_LINE (1216)) ;
    enumerator_47759.gotoNextObject () ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_logInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_logInstructionAST.mSlotID,
                                                  categoryMethod_logInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_logInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_logInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@dropInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_dropInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                          const GALGAS_analysisContext /* constinArgument_inAnalysisContext */,
                                                                          GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                          GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_dropInstructionAST * object = (const cPtr_dropInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_dropInstructionAST) ;
  GALGAS_stringlist var_cppNameDropList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1230)) ;
  cEnumerator_lstringlist enumerator_48500 (object->mAttribute_mDropList, kEnumeration_up) ;
  while (enumerator_48500.hasCurrentObject ()) {
    GALGAS_string var_variableCppName ;
    {
    GALGAS_unifiedTypeMapProxy joker_48582_0 ; // Joker input parameter
    GALGAS_string joker_48602_0 ; // Joker input parameter
    ioArgument_ioVariableMap.modifier_searchForDropAccess (enumerator_48500.current_mValue (HERE), joker_48582_0, var_variableCppName, joker_48602_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1233)) ;
    }
    var_cppNameDropList.addAssign_operation (var_variableCppName COMMA_SOURCE_FILE_AT_LINE (1234)) ;
    enumerator_48500.gotoNextObject () ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_dropInstructionForGeneration::constructor_new (var_cppNameDropList, GALGAS_string ("drop instruction") COMMA_SOURCE_FILE_AT_LINE (1237)) COMMA_SOURCE_FILE_AT_LINE (1237)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_dropInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_dropInstructionAST.mSlotID,
                                                  categoryMethod_dropInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_dropInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_dropInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@ifInstructionAST analyzeSemanticInstruction' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ifInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                        const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                        GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                        GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ifInstructionAST * object = (const cPtr_ifInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_ifInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_analyzed_5F_if_5F_expression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_m_5F_if_5F_expression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_analyzed_5F_if_5F_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1334)) ;
  {
  ioArgument_ioVariableMap.modifier_openOverrideForSelectBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1339)) ;
  }
  GALGAS_semanticExpressionForGeneration var_if_5F_expression ;
  {
  routine_checkExpressionIsBoolean (constinArgument_inAnalysisContext, object->mAttribute_mEndOf_5F_if_5F_instruction, var_analyzed_5F_if_5F_expression, var_if_5F_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1342)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_then_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1352)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1353)), object->mAttribute_m_5F_then_5F_instructionList, object->mAttribute_mEndOf_5F_then_5F_branch, ioArgument_ioVariableMap, var_then_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1350)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_else_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1363)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1364)), object->mAttribute_m_5F_else_5F_instructionList, object->mAttribute_mEndOf_5F_if_5F_instruction, ioArgument_ioVariableMap, var_else_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1361)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_if_5F_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1370)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_ifInstructionForGeneration::constructor_new (object->mAttribute_mEndOf_5F_then_5F_branch, var_if_5F_expression, var_then_5F_instructionList, var_else_5F_instructionList COMMA_SOURCE_FILE_AT_LINE (1372)) COMMA_SOURCE_FILE_AT_LINE (1372)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ifInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_ifInstructionAST.mSlotID,
                                                  categoryMethod_ifInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ifInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_ifInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@forInstructionAST analyzeSemanticInstruction' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_forInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                         const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                         GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                         GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_forInstructionAST * object = (const cPtr_forInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_forInstructionAST) ;
  {
  ioArgument_ioVariableMap.modifier_openOverrideForSelectBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1388)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_openBranch (inCompiler COMMA_SOURCE_FILE_AT_LINE (1389)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1391)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_before_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1395)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1396)), object->mAttribute_mBeforeInstructionList, object->mAttribute_mEndOf_5F_before_5F_branch, ioArgument_ioVariableMap, var_before_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1393)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_before_5F_branch, inCompiler COMMA_SOURCE_FILE_AT_LINE (1402)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1404)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_between_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1408)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1409)), object->mAttribute_mBetweenInstructionList, object->mAttribute_mEndOf_5F_between_5F_branch, ioArgument_ioVariableMap, var_between_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1406)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_between_5F_branch, inCompiler COMMA_SOURCE_FILE_AT_LINE (1415)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1417)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_after_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1421)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1422)), object->mAttribute_mAfterInstructionList, object->mAttribute_mEndOf_5F_after_5F_branch, ioArgument_ioVariableMap, var_after_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1419)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_after_5F_branch, inCompiler COMMA_SOURCE_FILE_AT_LINE (1428)) ;
  }
  GALGAS_localInitializedVariableList var_localConstantListForDoBranch = GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1430)) ;
  GALGAS_foreachInstructionEnumeratedObjectListForGeneration var_enumerationList = GALGAS_foreachInstructionEnumeratedObjectListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1431)) ;
  cEnumerator_forInstructionEnumeratedObjectListAST enumerator_55665 (object->mAttribute_mEnumeratedObjectList, kEnumeration_up) ;
  while (enumerator_55665.hasCurrentObject ()) {
    GALGAS_semanticExpressionForGeneration var_enumerationExpression ;
    callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) enumerator_55665.current_mEnumeratedExpression (HERE).ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_enumerationExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1435)) ;
    GALGAS_string var_enumeratorCppName = GALGAS_string ("enumerator_").operator_concat (enumerator_55665.current_mEndOfEnumerationExpression (HERE).reader_locationIndex (inCompiler COMMA_SOURCE_FILE_AT_LINE (1441)).reader_string (SOURCE_FILE_AT_LINE (1441)) COMMA_SOURCE_FILE_AT_LINE (1441)) ;
    GALGAS_unifiedTypeMapProxy var_enumeratedElementType = var_enumerationExpression.reader_mType (SOURCE_FILE_AT_LINE (1442)).reader_mTypeForEnumeratedElement (inCompiler COMMA_SOURCE_FILE_AT_LINE (1442)) ;
    const enumGalgasBool test_0 = var_enumeratedElementType.reader_isNull (SOURCE_FILE_AT_LINE (1443)).boolEnum () ;
    if (kBoolTrue == test_0) {
      inCompiler->emitSemanticError (enumerator_55665.current_mEndOfEnumerationExpression (HERE), GALGAS_string ("an '@").operator_concat (var_enumerationExpression.reader_mType (SOURCE_FILE_AT_LINE (1444)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1444)) COMMA_SOURCE_FILE_AT_LINE (1444)).operator_concat (GALGAS_string ("' object cannot be enumerated") COMMA_SOURCE_FILE_AT_LINE (1444)) COMMA_SOURCE_FILE_AT_LINE (1444)) ;
    }else if (kBoolFalse == test_0) {
      var_localConstantListForDoBranch.addAssign_operation (var_enumeratedElementType, enumerator_55665.current_mEnumerationVariable (HERE), var_enumeratorCppName.operator_concat (GALGAS_string (".current (HERE)") COMMA_SOURCE_FILE_AT_LINE (1446)) COMMA_SOURCE_FILE_AT_LINE (1446)) ;
    }
    //--- @ifExpressionForGeneration
    GALGAS_string temp_1 ;
    const enumGalgasBool test_2 = enumerator_55665.current_mAscending (HERE).boolEnum () ;
    if (kBoolTrue == test_2) {
      temp_1 = GALGAS_string ("up") ;
    }else if (kBoolFalse == test_2) {
      temp_1 = GALGAS_string ("down") ;
    }
    var_enumerationList.addAssign_operation (temp_1, var_enumerationExpression, var_enumeratorCppName COMMA_SOURCE_FILE_AT_LINE (1449)) ;
    enumerator_55665.gotoNextObject () ;
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1456)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_openBranch (inCompiler COMMA_SOURCE_FILE_AT_LINE (1457)) ;
  }
  cEnumerator_localInitializedVariableList enumerator_56798 (var_localConstantListForDoBranch, kEnumeration_up) ;
  while (enumerator_56798.hasCurrentObject ()) {
    {
    ioArgument_ioVariableMap.modifier_insertUsedLocalConstant (enumerator_56798.current_mName (HERE), enumerator_56798.current_mType (HERE), enumerator_56798.current_mCppName (HERE), enumerator_56798.current_mCppName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1460)) ;
    }
    enumerator_56798.gotoNextObject () ;
  }
  GALGAS_semanticExpressionForGeneration var_uncheckedWhileExpression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mWhileExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_uncheckedWhileExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1464)) ;
  GALGAS_semanticExpressionForGeneration var_whileExpression ;
  {
  routine_checkExpressionIsBoolean (constinArgument_inAnalysisContext, object->mAttribute_mEndOf_5F_while_5F_expression, var_uncheckedWhileExpression, var_whileExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1470)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeBranch (object->mAttribute_mEndOf_5F_while_5F_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1477)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_while_5F_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1478)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1480)) ;
  }
  GALGAS_string var_indexCppName = GALGAS_string::makeEmptyString () ;
  GALGAS_localConstantList var_indexDeclaration = GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1482)) ;
  const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, object->mAttribute_mIndexVariableName.reader_string (SOURCE_FILE_AT_LINE (1483)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_3) {
    var_indexCppName = GALGAS_string ("index_").operator_concat (object->mAttribute_mInstructionLocation.reader_locationIndex (inCompiler COMMA_SOURCE_FILE_AT_LINE (1484)).reader_string (SOURCE_FILE_AT_LINE (1484)) COMMA_SOURCE_FILE_AT_LINE (1484)) ;
    var_indexDeclaration.addAssign_operation (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mUIntType, object->mAttribute_mIndexVariableName, GALGAS_bool (false), var_indexCppName COMMA_SOURCE_FILE_AT_LINE (1485)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_do_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, var_indexDeclaration, var_localConstantListForDoBranch, object->mAttribute_mDoInstructionList, object->mAttribute_mEndOf_5F_do_5F_branch, ioArgument_ioVariableMap, var_do_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1494)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_foreach_5F_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1504)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeBranch (object->mAttribute_mEndOf_5F_foreach_5F_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1506)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_foreach_5F_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1507)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_foreachInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_enumerationList, var_indexCppName, var_whileExpression, var_before_5F_instructionList, var_between_5F_instructionList, var_do_5F_instructionList, var_after_5F_instructionList COMMA_SOURCE_FILE_AT_LINE (1509)) COMMA_SOURCE_FILE_AT_LINE (1509)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_forInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_forInstructionAST.mSlotID,
                                                  categoryMethod_forInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_forInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_forInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@foreachInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_foreachInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                             const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                             GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                             GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_foreachInstructionAST * object = (const cPtr_foreachInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_foreachInstructionAST) ;
  {
  ioArgument_ioVariableMap.modifier_openOverrideForSelectBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1529)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_openBranch (inCompiler COMMA_SOURCE_FILE_AT_LINE (1530)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1532)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_before_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1536)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1537)), object->mAttribute_mBeforeInstructionList, object->mAttribute_mEndOf_5F_before_5F_branch, ioArgument_ioVariableMap, var_before_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1534)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_before_5F_branch, inCompiler COMMA_SOURCE_FILE_AT_LINE (1543)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1545)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_between_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1549)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1550)), object->mAttribute_mBetweenInstructionList, object->mAttribute_mEndOf_5F_between_5F_branch, ioArgument_ioVariableMap, var_between_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1547)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_between_5F_branch, inCompiler COMMA_SOURCE_FILE_AT_LINE (1556)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1558)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_after_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1562)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1563)), object->mAttribute_mAfterInstructionList, object->mAttribute_mEndOf_5F_after_5F_branch, ioArgument_ioVariableMap, var_after_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1560)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_after_5F_branch, inCompiler COMMA_SOURCE_FILE_AT_LINE (1569)) ;
  }
  GALGAS_foreachInstructionEnumeratedObjectListForGeneration var_enumerationList = GALGAS_foreachInstructionEnumeratedObjectListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1571)) ;
  cEnumerator_foreachInstructionEnumeratedObjectListAST enumerator_60587 (object->mAttribute_mEnumeratedObjectList, kEnumeration_up) ;
  while (enumerator_60587.hasCurrentObject ()) {
    GALGAS_semanticExpressionForGeneration var_enumerationExpression ;
    callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) enumerator_60587.current_mEnumeratedExpression (HERE).ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_enumerationExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1575)) ;
    GALGAS_string var_enumerationOrder = enumerator_60587.current_mEnumerationOrder (HERE).reader_string (SOURCE_FILE_AT_LINE (1581)) ;
    GALGAS_string var_enumeratorCppName = GALGAS_string ("enumerator_").operator_concat (enumerator_60587.current_mEndOfEnumerationExpression (HERE).reader_locationIndex (inCompiler COMMA_SOURCE_FILE_AT_LINE (1582)).reader_string (SOURCE_FILE_AT_LINE (1582)) COMMA_SOURCE_FILE_AT_LINE (1582)) ;
    GALGAS_enumerationDescriptorList var_enumerationDescriptorList = var_enumerationExpression.reader_mType (SOURCE_FILE_AT_LINE (1583)).reader_mEnumerationDescriptor (inCompiler COMMA_SOURCE_FILE_AT_LINE (1583)) ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_enumerationDescriptorList.reader_length (SOURCE_FILE_AT_LINE (1584)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_0) {
      inCompiler->emitSemanticError (enumerator_60587.current_mEndOfEnumerationExpression (HERE), GALGAS_string ("an '@").operator_concat (var_enumerationExpression.reader_mType (SOURCE_FILE_AT_LINE (1585)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1585)) COMMA_SOURCE_FILE_AT_LINE (1585)).operator_concat (GALGAS_string ("' object cannot be enumerated") COMMA_SOURCE_FILE_AT_LINE (1585)) COMMA_SOURCE_FILE_AT_LINE (1585)) ;
    }else if (kBoolFalse == test_0) {
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_enumerationOrder.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_1) {
        var_enumerationOrder = var_enumerationExpression.reader_mType (SOURCE_FILE_AT_LINE (1589)).reader_mEnumeratorVariants (inCompiler COMMA_SOURCE_FILE_AT_LINE (1589)).reader_mValueAtIndex (GALGAS_uint ((PMUInt32) 0U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1589)) ;
      }else if (kBoolFalse == test_1) {
        GALGAS_bool var_found = GALGAS_bool (false) ;
        GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
        cEnumerator_stringlist enumerator_61645 (var_enumerationExpression.reader_mType (SOURCE_FILE_AT_LINE (1593)).reader_mEnumeratorVariants (inCompiler COMMA_SOURCE_FILE_AT_LINE (1593)), kEnumeration_up) ;
        bool bool_2 = var_found.operator_not (SOURCE_FILE_AT_LINE (1593)).isValidAndTrue () ;
        if (enumerator_61645.hasCurrentObject () && bool_2) {
          while (enumerator_61645.hasCurrentObject () && bool_2) {
            var_found = GALGAS_bool (kIsEqual, var_enumerationOrder.objectCompare (enumerator_61645.current_mValue (HERE))) ;
            var_s.dotAssign_operation (GALGAS_string ("\n"
              "  \\").operator_concat (enumerator_61645.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (1595)) COMMA_SOURCE_FILE_AT_LINE (1595)) ;
            enumerator_61645.gotoNextObject () ;
            if (enumerator_61645.hasCurrentObject ()) {
              bool_2 = var_found.operator_not (SOURCE_FILE_AT_LINE (1593)).isValidAndTrue () ;
            }
          }
        }
        const enumGalgasBool test_3 = var_found.operator_not (SOURCE_FILE_AT_LINE (1597)).boolEnum () ;
        if (kBoolTrue == test_3) {
          GALGAS_location location_4 (enumerator_60587.current_mEnumerationOrder (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_4, GALGAS_string ("unknown enumeration specifier; available ones are :").operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (1598)) COMMA_SOURCE_FILE_AT_LINE (1598)) ;
        }
      }
      const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, enumerator_60587.current_mElementList (HERE).reader_length (SOURCE_FILE_AT_LINE (1602)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (enumerator_60587.current_mEndsWithEllipsis (HERE).operator_not (SOURCE_FILE_AT_LINE (1602)) COMMA_SOURCE_FILE_AT_LINE (1602)).boolEnum () ;
      if (kBoolTrue == test_5) {
        GALGAS_enumerationDescriptorList var_currentTypedAttributeList = var_enumerationExpression.reader_mType (SOURCE_FILE_AT_LINE (1603)).reader_mEnumerationDescriptor (inCompiler COMMA_SOURCE_FILE_AT_LINE (1603)) ;
        cEnumerator_enumerationDescriptorList enumerator_62172 (var_currentTypedAttributeList, kEnumeration_up) ;
        while (enumerator_62172.hasCurrentObject ()) {
          {
          ioArgument_ioVariableMap.modifier_insertUsedLocalConstant (GALGAS_lstring::constructor_new (enumerator_60587.current_mPrefix (HERE).reader_string (SOURCE_FILE_AT_LINE (1606)).operator_concat (enumerator_62172.current_mEnumerationName (HERE) COMMA_SOURCE_FILE_AT_LINE (1606)), enumerator_60587.current_mEndOfEnumerationExpression (HERE) COMMA_SOURCE_FILE_AT_LINE (1606)), enumerator_62172.current_mEnumeratedType (HERE), var_enumeratorCppName.operator_concat (GALGAS_string (".current_") COMMA_SOURCE_FILE_AT_LINE (1608)).operator_concat (enumerator_62172.current_mEnumerationName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1608)) COMMA_SOURCE_FILE_AT_LINE (1608)).operator_concat (GALGAS_string (" (HERE)") COMMA_SOURCE_FILE_AT_LINE (1608)), var_enumeratorCppName.operator_concat (GALGAS_string (".current_") COMMA_SOURCE_FILE_AT_LINE (1609)).operator_concat (enumerator_62172.current_mEnumerationName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1609)) COMMA_SOURCE_FILE_AT_LINE (1609)).operator_concat (GALGAS_string (" (HERE)") COMMA_SOURCE_FILE_AT_LINE (1609)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1605)) ;
          }
          enumerator_62172.gotoNextObject () ;
        }
      }else if (kBoolFalse == test_5) {
        const enumGalgasBool test_6 = enumerator_60587.current_mEndsWithEllipsis (HERE).operator_not (SOURCE_FILE_AT_LINE (1612)).operator_and (GALGAS_bool (kIsNotEqual, enumerator_60587.current_mElementList (HERE).reader_length (SOURCE_FILE_AT_LINE (1612)).objectCompare (var_enumerationDescriptorList.reader_length (SOURCE_FILE_AT_LINE (1612)))) COMMA_SOURCE_FILE_AT_LINE (1612)).boolEnum () ;
        if (kBoolTrue == test_6) {
          //--- @ifExpressionForGeneration
          GALGAS_string temp_7 ;
          const enumGalgasBool test_8 = GALGAS_bool (kIsStrictSup, var_enumerationDescriptorList.reader_length (SOURCE_FILE_AT_LINE (1616)).objectCompare (GALGAS_uint ((PMUInt32) 1U))).boolEnum () ;
          if (kBoolTrue == test_8) {
            temp_7 = GALGAS_string ("s") ;
          }else if (kBoolFalse == test_8) {
            temp_7 = GALGAS_string::makeEmptyString () ;
          }
          inCompiler->emitSemanticError (enumerator_60587.current_mEndOfElementList (HERE), GALGAS_string ("the '@").operator_concat (var_enumerationExpression.reader_mType (SOURCE_FILE_AT_LINE (1614)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1614)) COMMA_SOURCE_FILE_AT_LINE (1614)).operator_concat (GALGAS_string ("' type requires ") COMMA_SOURCE_FILE_AT_LINE (1614)).operator_concat (var_enumerationDescriptorList.reader_length (SOURCE_FILE_AT_LINE (1615)).reader_string (SOURCE_FILE_AT_LINE (1615)) COMMA_SOURCE_FILE_AT_LINE (1615)).operator_concat (GALGAS_string (" argument") COMMA_SOURCE_FILE_AT_LINE (1615)).operator_concat (temp_7 COMMA_SOURCE_FILE_AT_LINE (1616)).operator_concat (GALGAS_string (" for enumeration: this list provides ") COMMA_SOURCE_FILE_AT_LINE (1617)).operator_concat (enumerator_60587.current_mElementList (HERE).reader_length (SOURCE_FILE_AT_LINE (1618)).reader_string (SOURCE_FILE_AT_LINE (1618)) COMMA_SOURCE_FILE_AT_LINE (1618)) COMMA_SOURCE_FILE_AT_LINE (1613)) ;
        }else if (kBoolFalse == test_6) {
          const enumGalgasBool test_9 = enumerator_60587.current_mEndsWithEllipsis (HERE).operator_and (GALGAS_bool (kIsStrictSup, enumerator_60587.current_mElementList (HERE).reader_length (SOURCE_FILE_AT_LINE (1620)).objectCompare (var_enumerationDescriptorList.reader_length (SOURCE_FILE_AT_LINE (1620)))) COMMA_SOURCE_FILE_AT_LINE (1620)).boolEnum () ;
          if (kBoolTrue == test_9) {
            //--- @ifExpressionForGeneration
            GALGAS_string temp_10 ;
            const enumGalgasBool test_11 = GALGAS_bool (kIsStrictSup, var_enumerationDescriptorList.reader_length (SOURCE_FILE_AT_LINE (1624)).objectCompare (GALGAS_uint ((PMUInt32) 1U))).boolEnum () ;
            if (kBoolTrue == test_11) {
              temp_10 = GALGAS_string ("s") ;
            }else if (kBoolFalse == test_11) {
              temp_10 = GALGAS_string::makeEmptyString () ;
            }
            inCompiler->emitSemanticError (enumerator_60587.current_mEndOfElementList (HERE), GALGAS_string ("the '@").operator_concat (var_enumerationExpression.reader_mType (SOURCE_FILE_AT_LINE (1622)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1622)) COMMA_SOURCE_FILE_AT_LINE (1622)).operator_concat (GALGAS_string ("' type requires ") COMMA_SOURCE_FILE_AT_LINE (1622)).operator_concat (var_enumerationDescriptorList.reader_length (SOURCE_FILE_AT_LINE (1623)).reader_string (SOURCE_FILE_AT_LINE (1623)) COMMA_SOURCE_FILE_AT_LINE (1623)).operator_concat (GALGAS_string (" argument") COMMA_SOURCE_FILE_AT_LINE (1623)).operator_concat (temp_10 COMMA_SOURCE_FILE_AT_LINE (1624)).operator_concat (GALGAS_string (" or less for enumeration: this list provides ") COMMA_SOURCE_FILE_AT_LINE (1625)).operator_concat (enumerator_60587.current_mElementList (HERE).reader_length (SOURCE_FILE_AT_LINE (1626)).reader_string (SOURCE_FILE_AT_LINE (1626)) COMMA_SOURCE_FILE_AT_LINE (1626)) COMMA_SOURCE_FILE_AT_LINE (1621)) ;
          }else if (kBoolFalse == test_9) {
            cEnumerator_foreachInstructionEnumeratedObjectElementListAST enumerator_63541 (enumerator_60587.current_mElementList (HERE), kEnumeration_up) ;
            cEnumerator_enumerationDescriptorList enumerator_63570 (var_enumerationDescriptorList, kEnumeration_up) ;
            while (enumerator_63541.hasCurrentObject () && enumerator_63570.hasCurrentObject ()) {
              const enumGalgasBool test_12 = GALGAS_bool (kIsNotEqual, enumerator_63541.current_mConstantName (HERE).reader_string (SOURCE_FILE_AT_LINE (1630)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
              if (kBoolTrue == test_12) {
                GALGAS_unifiedTypeMapProxy var_foundType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, enumerator_63541.current_mTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1631)) ;
                const enumGalgasBool test_13 = GALGAS_bool (kIsNotEqual, var_foundType.objectCompare (enumerator_63570.current_mEnumeratedType (HERE))).boolEnum () ;
                if (kBoolTrue == test_13) {
                  GALGAS_location location_14 (enumerator_63541.current_mTypeName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
                  inCompiler->emitSemanticError (location_14, GALGAS_string ("incorrect '@").operator_concat (var_foundType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1633)) COMMA_SOURCE_FILE_AT_LINE (1633)).operator_concat (GALGAS_string ("' type: '@") COMMA_SOURCE_FILE_AT_LINE (1633)).operator_concat (enumerator_63570.current_mEnumeratedType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1633)) COMMA_SOURCE_FILE_AT_LINE (1633)).operator_concat (GALGAS_string ("' type required here") COMMA_SOURCE_FILE_AT_LINE (1633)) COMMA_SOURCE_FILE_AT_LINE (1633)) ;
                }
                {
                ioArgument_ioVariableMap.modifier_insertUsedLocalConstant (enumerator_63541.current_mConstantName (HERE), enumerator_63570.current_mEnumeratedType (HERE), var_enumeratorCppName.operator_concat (GALGAS_string (".current_") COMMA_SOURCE_FILE_AT_LINE (1638)).operator_concat (enumerator_63570.current_mEnumerationName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1638)) COMMA_SOURCE_FILE_AT_LINE (1638)).operator_concat (GALGAS_string (" (HERE)") COMMA_SOURCE_FILE_AT_LINE (1638)), var_enumeratorCppName.operator_concat (GALGAS_string (".current_") COMMA_SOURCE_FILE_AT_LINE (1639)).operator_concat (enumerator_63570.current_mEnumerationName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1639)) COMMA_SOURCE_FILE_AT_LINE (1639)).operator_concat (GALGAS_string (" (HERE)") COMMA_SOURCE_FILE_AT_LINE (1639)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1635)) ;
                }
              }
              enumerator_63541.gotoNextObject () ;
              enumerator_63570.gotoNextObject () ;
            }
          }
        }
      }
    }
    var_enumerationList.addAssign_operation (var_enumerationOrder, var_enumerationExpression, var_enumeratorCppName COMMA_SOURCE_FILE_AT_LINE (1646)) ;
    enumerator_60587.gotoNextObject () ;
  }
  GALGAS_semanticExpressionForGeneration var_uncheckedWhileExpression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mWhileExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_uncheckedWhileExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1650)) ;
  GALGAS_semanticExpressionForGeneration var_whileExpression ;
  {
  routine_checkExpressionIsBoolean (constinArgument_inAnalysisContext, object->mAttribute_mEndOf_5F_while_5F_expression, var_uncheckedWhileExpression, var_whileExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1656)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1663)) ;
  }
  GALGAS_string var_indexCppName = GALGAS_string::makeEmptyString () ;
  GALGAS_localConstantList var_indexDeclaration = GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1665)) ;
  const enumGalgasBool test_15 = GALGAS_bool (kIsNotEqual, object->mAttribute_mIndexVariableName.reader_string (SOURCE_FILE_AT_LINE (1666)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_15) {
    var_indexCppName = GALGAS_string ("index_").operator_concat (object->mAttribute_mInstructionLocation.reader_locationIndex (inCompiler COMMA_SOURCE_FILE_AT_LINE (1667)).reader_string (SOURCE_FILE_AT_LINE (1667)) COMMA_SOURCE_FILE_AT_LINE (1667)) ;
    var_indexDeclaration.addAssign_operation (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mUIntType, object->mAttribute_mIndexVariableName, GALGAS_bool (false), var_indexCppName COMMA_SOURCE_FILE_AT_LINE (1668)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_do_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, var_indexDeclaration, GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1680)), object->mAttribute_mDoInstructionList, object->mAttribute_mEndOf_5F_do_5F_branch, ioArgument_ioVariableMap, var_do_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1677)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_foreach_5F_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1687)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeBranch (object->mAttribute_mEndOf_5F_foreach_5F_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1689)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_foreach_5F_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1690)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_foreachInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_enumerationList, var_indexCppName, var_whileExpression, var_before_5F_instructionList, var_between_5F_instructionList, var_do_5F_instructionList, var_after_5F_instructionList COMMA_SOURCE_FILE_AT_LINE (1692)) COMMA_SOURCE_FILE_AT_LINE (1692)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_foreachInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_foreachInstructionAST.mSlotID,
                                                  categoryMethod_foreachInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_foreachInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_foreachInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@loopInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_loopInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                          const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                          GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                          GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_loopInstructionAST * object = (const cPtr_loopInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_loopInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_variantExpression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mVariantExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_variantExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1713)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_variantExpression.reader_mType (SOURCE_FILE_AT_LINE (1719)).objectCompare (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mUIntType)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mEndOfVariantExpression, GALGAS_string ("the variant expression type should be '@").operator_concat (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mUIntType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1721)) COMMA_SOURCE_FILE_AT_LINE (1721)).operator_concat (GALGAS_string ("', but it has '@") COMMA_SOURCE_FILE_AT_LINE (1721)).operator_concat (var_variantExpression.reader_mType (SOURCE_FILE_AT_LINE (1721)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1721)) COMMA_SOURCE_FILE_AT_LINE (1721)).operator_concat (GALGAS_string ("' type") COMMA_SOURCE_FILE_AT_LINE (1721)) COMMA_SOURCE_FILE_AT_LINE (1720)) ;
  }
  GALGAS_semanticExpressionForGeneration var_loopExpression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mLoopExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_loopExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1725)) ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_loopExpression.reader_mType (SOURCE_FILE_AT_LINE (1731)).objectCompare (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType)).boolEnum () ;
  if (kBoolTrue == test_1) {
    inCompiler->emitSemanticError (object->mAttribute_mEndOfLoopExpression, GALGAS_string ("the loop expression type should be '@").operator_concat (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1733)) COMMA_SOURCE_FILE_AT_LINE (1733)).operator_concat (GALGAS_string ("', but it has '@") COMMA_SOURCE_FILE_AT_LINE (1733)).operator_concat (var_loopExpression.reader_mType (SOURCE_FILE_AT_LINE (1733)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1733)) COMMA_SOURCE_FILE_AT_LINE (1733)).operator_concat (GALGAS_string ("' type") COMMA_SOURCE_FILE_AT_LINE (1733)) COMMA_SOURCE_FILE_AT_LINE (1732)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForRepeatBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1736)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_first_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1741)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1742)), object->mAttribute_mFirstInstructions, object->mAttribute_mEndOfFirstInstructions, ioArgument_ioVariableMap, var_first_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1739)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_second_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1752)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1753)), object->mAttribute_mSecondInstructions, object->mAttribute_mEndOfSecondInstructions, ioArgument_ioVariableMap, var_second_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1750)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOfLoopInstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1760)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_loopInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_variantExpression, var_first_5F_instructionList, var_loopExpression, var_second_5F_instructionList COMMA_SOURCE_FILE_AT_LINE (1762)) COMMA_SOURCE_FILE_AT_LINE (1762)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_loopInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_loopInstructionAST.mSlotID,
                                                  categoryMethod_loopInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_loopInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_loopInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@structuredCastInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_structuredCastInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                    const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                    GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                    GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_structuredCastInstructionAST * object = (const cPtr_structuredCastInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_structuredCastInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_castExpression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mCastExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_castExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1780)) ;
  {
  ioArgument_ioVariableMap.modifier_openOverrideForSelectBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1786)) ;
  }
  GALGAS_castInstructionBranchListForGeneration var_castBranchList = GALGAS_castInstructionBranchListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1788)) ;
  cEnumerator_castInstructionBranchListAST enumerator_69344 (object->mAttribute_mCastInstructionBranchList, kEnumeration_up) ;
  while (enumerator_69344.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_type = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, enumerator_69344.current_mTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1791)) ;
    GALGAS_unifiedTypeMapProxy var_t = var_type ;
    GALGAS_bool var_found = GALGAS_bool (kIsEqual, var_t.objectCompare (var_castExpression.reader_mType (SOURCE_FILE_AT_LINE (1794)))) ;
    if (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1795)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1795)).isValid ()) {
      PMUInt32 variant_69628 = constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1795)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1795)).uintValue () ;
      bool loop_69628 = true ;
      while (loop_69628) {
        loop_69628 = var_found.operator_not (SOURCE_FILE_AT_LINE (1796)).operator_and (var_t.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1796)).reader_isNull (SOURCE_FILE_AT_LINE (1796)).operator_not (SOURCE_FILE_AT_LINE (1796)) COMMA_SOURCE_FILE_AT_LINE (1796)).isValid () ;
        if (loop_69628) {
          loop_69628 = var_found.operator_not (SOURCE_FILE_AT_LINE (1796)).operator_and (var_t.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1796)).reader_isNull (SOURCE_FILE_AT_LINE (1796)).operator_not (SOURCE_FILE_AT_LINE (1796)) COMMA_SOURCE_FILE_AT_LINE (1796)).boolValue () ;
        }
        if (loop_69628 && (0 == variant_69628)) {
          loop_69628 = false ;
          inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (1795)) ;
        }
        if (loop_69628) {
          variant_69628 -- ;
          var_t = var_t.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1797)) ;
          var_found = GALGAS_bool (kIsEqual, var_t.objectCompare (var_castExpression.reader_mType (SOURCE_FILE_AT_LINE (1798)))) ;
        }
      }
    }
    const enumGalgasBool test_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (1800)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_location location_1 (enumerator_69344.current_mTypeName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '@").operator_concat (enumerator_69344.current_mTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1802)) COMMA_SOURCE_FILE_AT_LINE (1802)).operator_concat (GALGAS_string ("' is not a descendant of the '@") COMMA_SOURCE_FILE_AT_LINE (1802)).operator_concat (var_castExpression.reader_mType (SOURCE_FILE_AT_LINE (1802)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1802)) COMMA_SOURCE_FILE_AT_LINE (1802)).operator_concat (GALGAS_string ("' type of the cast expression") COMMA_SOURCE_FILE_AT_LINE (1802)) COMMA_SOURCE_FILE_AT_LINE (1801)) ;
    }
    GALGAS_string var_localConstantName ;
    GALGAS_localConstantList var_localConstantList = GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1807)) ;
    const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, enumerator_69344.current_mConstantVarName (HERE).mAttribute_string.reader_length (SOURCE_FILE_AT_LINE (1808)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_2) {
      var_localConstantName = GALGAS_string ("cast_").operator_concat (enumerator_69344.current_mConstantVarName (HERE).reader_location (SOURCE_FILE_AT_LINE (1809)).reader_locationIndex (inCompiler COMMA_SOURCE_FILE_AT_LINE (1809)).reader_string (SOURCE_FILE_AT_LINE (1809)) COMMA_SOURCE_FILE_AT_LINE (1809)).operator_concat (GALGAS_string ("_") COMMA_SOURCE_FILE_AT_LINE (1809)).operator_concat (enumerator_69344.current_mConstantVarName (HERE).reader_string (SOURCE_FILE_AT_LINE (1809)) COMMA_SOURCE_FILE_AT_LINE (1809)) ;
      var_localConstantList.addAssign_operation (var_type, enumerator_69344.current_mConstantVarName (HERE), enumerator_69344.current_mConstantVarNameIsUnused (HERE), var_localConstantName COMMA_SOURCE_FILE_AT_LINE (1810)) ;
    }else if (kBoolFalse == test_2) {
      var_localConstantName = GALGAS_string::makeEmptyString () ;
    }
    GALGAS_semanticInstructionListForGeneration var_instructionList ;
    {
    routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, var_localConstantList, GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1824)), enumerator_69344.current_mInstructionList (HERE), enumerator_69344.current_mEndOfInstructions (HERE), ioArgument_ioVariableMap, var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1821)) ;
    }
    var_castBranchList.addAssign_operation (enumerator_69344.current_mUseKindOfClass (HERE), var_type, var_localConstantName, var_instructionList COMMA_SOURCE_FILE_AT_LINE (1830)) ;
    enumerator_69344.gotoNextObject () ;
  }
  GALGAS_semanticInstructionListForGeneration var_else_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1836)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1837)), object->mAttribute_mElseInstructionList, object->mAttribute_mEndOfCastInstruction, ioArgument_ioVariableMap, var_else_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1834)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOfCastInstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1844)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_structuredCastInstructionForGeneration::constructor_new (var_castExpression, var_castBranchList, var_else_5F_instructionList COMMA_SOURCE_FILE_AT_LINE (1846)) COMMA_SOURCE_FILE_AT_LINE (1846)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_structuredCastInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_structuredCastInstructionAST.mSlotID,
                                                  categoryMethod_structuredCastInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_structuredCastInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_structuredCastInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@grammarInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_grammarInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                             const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                             GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                             GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_grammarInstructionAST * object = (const cPtr_grammarInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_grammarInstructionAST) ;
  GALGAS_grammarLabelMap var_grammarLabelMap ;
  GALGAS_bool joker_72036_0 ; // Joker input parameter
  constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mGrammarMap.method_searchKey (object->mAttribute_mGrammarComponentName, var_grammarLabelMap, joker_72036_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1862)) ;
  GALGAS_formalParameterSignature var_labelSignature ;
  var_grammarLabelMap.method_searchKey (object->mAttribute_mLabelName, var_labelSignature, inCompiler COMMA_SOURCE_FILE_AT_LINE (1869)) ;
  GALGAS_actualParameterListForGeneration var_actualParameterListForGeneration ;
  {
  routine_analyzeRoutineArguments (constinArgument_inAnalysisContext, object->mAttribute_mLabelName, GALGAS_string ("label of the ").operator_concat (object->mAttribute_mGrammarComponentName.reader_string (SOURCE_FILE_AT_LINE (1878)) COMMA_SOURCE_FILE_AT_LINE (1878)).operator_concat (GALGAS_string (" grammar") COMMA_SOURCE_FILE_AT_LINE (1878)), var_labelSignature, object->mAttribute_mActualParameterList, ioArgument_ioVariableMap, var_actualParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1875)) ;
  }
  GALGAS_semanticExpressionForGeneration var_sourceExpression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mSourceExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_sourceExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1886)) ;
  const enumGalgasBool test_0 = object->mAttribute_mSourceExpressionIsFile.boolEnum () ;
  if (kBoolTrue == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_sourceExpression.reader_mType (SOURCE_FILE_AT_LINE (1893)).objectCompare (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mLStringType)).boolEnum () ;
    if (kBoolTrue == test_1) {
      inCompiler->emitSemanticError (object->mAttribute_mEndOfSourceExpression, GALGAS_string ("this expression is the source file path and its type should be '@lstring', but it is '@").operator_concat (var_sourceExpression.reader_mType (SOURCE_FILE_AT_LINE (1895)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1895)) COMMA_SOURCE_FILE_AT_LINE (1895)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (1895)) COMMA_SOURCE_FILE_AT_LINE (1894)) ;
    }
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, var_sourceExpression.reader_mType (SOURCE_FILE_AT_LINE (1898)).objectCompare (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mStringType)).boolEnum () ;
    if (kBoolTrue == test_2) {
      inCompiler->emitSemanticError (object->mAttribute_mEndOfSourceExpression, GALGAS_string ("this expression is the source string and its type should be '@string', but it is '@").operator_concat (var_sourceExpression.reader_mType (SOURCE_FILE_AT_LINE (1900)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1900)) COMMA_SOURCE_FILE_AT_LINE (1900)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (1900)) COMMA_SOURCE_FILE_AT_LINE (1899)) ;
    }
  }
  const enumGalgasBool test_3 = object->mAttribute_mSourceExpressionIsFile.boolEnum () ;
  if (kBoolTrue == test_3) {
    ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_grammarInstructionWithSourceFileForGeneration::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mGrammarComponentName.reader_string (SOURCE_FILE_AT_LINE (1907)), object->mAttribute_mLabelName.reader_string (SOURCE_FILE_AT_LINE (1908)), var_sourceExpression, var_actualParameterListForGeneration COMMA_SOURCE_FILE_AT_LINE (1905)) COMMA_SOURCE_FILE_AT_LINE (1905)) ;
  }else if (kBoolFalse == test_3) {
    ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_grammarInstructionWithSourceExpressionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mGrammarComponentName.reader_string (SOURCE_FILE_AT_LINE (1915)), object->mAttribute_mLabelName.reader_string (SOURCE_FILE_AT_LINE (1916)), var_sourceExpression, var_actualParameterListForGeneration COMMA_SOURCE_FILE_AT_LINE (1913)) COMMA_SOURCE_FILE_AT_LINE (1913)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_grammarInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_grammarInstructionAST.mSlotID,
                                                  categoryMethod_grammarInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_grammarInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_grammarInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@readWriteAccessWithInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_readWriteAccessWithInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                         const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                         GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                         GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_readWriteAccessWithInstructionAST * object = (const cPtr_readWriteAccessWithInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_readWriteAccessWithInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_keyExpression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mKeyExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_keyExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1932)) ;
  GALGAS_string var_objectArrayCppName = GALGAS_string ("objectArray_").operator_concat (object->mAttribute_mInstructionLocation.reader_locationIndex (inCompiler COMMA_SOURCE_FILE_AT_LINE (1938)).reader_string (SOURCE_FILE_AT_LINE (1938)) COMMA_SOURCE_FILE_AT_LINE (1938)) ;
  GALGAS_unifiedTypeMapProxy var_targetType ;
  GALGAS_string var_receiverVariableCppName ;
  {
  GALGAS_string joker_74832_0 ; // Joker input parameter
  ioArgument_ioVariableMap.modifier_searchForReadWriteAccess (object->mAttribute_mReceiverName, var_targetType, var_receiverVariableCppName, joker_74832_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1942)) ;
  }
  cEnumerator_lstringlist enumerator_74859 (object->mAttribute_mFieldList, kEnumeration_up) ;
  while (enumerator_74859.hasCurrentObject ()) {
    GALGAS_attributeMap var_attributeMap = var_targetType.reader_mAttributeMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1944)) ;
    var_attributeMap.method_searchKey (enumerator_74859.current_mValue (HERE), var_targetType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1945)) ;
    enumerator_74859.gotoNextObject () ;
  }
  GALGAS_withAccessorMap var_withAccessorMap = var_targetType.reader_mWithAccessorMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1948)) ;
  GALGAS_unifiedTypeMapProxyList var_argumentTypeList ;
  const cMapElement_withAccessorMap * objectArray_75182 = (const cMapElement_withAccessorMap *) var_withAccessorMap.readAccessForWithInstruction_hasKey (object->mAttribute_mAccessName.reader_string (SOURCE_FILE_AT_LINE (1950))) ;
  if (NULL != objectArray_75182) {
      macroValidSharedObject (objectArray_75182, const cMapElement_withAccessorMap) ;
    var_argumentTypeList = GALGAS_unifiedTypeMapProxyList::constructor_listWithValue (objectArray_75182->mAttribute_mArgumentType COMMA_SOURCE_FILE_AT_LINE (1951)) ;
  }else{
    const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_withAccessorMap.reader_count (SOURCE_FILE_AT_LINE (1953)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_location location_1 (object->mAttribute_mAccessName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '@").operator_concat (var_targetType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1955)) COMMA_SOURCE_FILE_AT_LINE (1955)).operator_concat (GALGAS_string ("' type cannot be used in a 'with' instruction") COMMA_SOURCE_FILE_AT_LINE (1955)) COMMA_SOURCE_FILE_AT_LINE (1954)) ;
      var_argumentTypeList.drop () ; // Release error dropped variable
    }else if (kBoolFalse == test_0) {
      GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
      cEnumerator_withAccessorMap enumerator_75552 (var_withAccessorMap, kEnumeration_up) ;
      while (enumerator_75552.hasCurrentObject ()) {
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "  - ").operator_concat (enumerator_75552.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (1961)) COMMA_SOURCE_FILE_AT_LINE (1961)).operator_concat (GALGAS_string (" \?@") COMMA_SOURCE_FILE_AT_LINE (1961)).operator_concat (enumerator_75552.current_mArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1961)) COMMA_SOURCE_FILE_AT_LINE (1961)) COMMA_SOURCE_FILE_AT_LINE (1961)) ;
        enumerator_75552.gotoNextObject () ;
      }
      //--- @ifExpressionForGeneration
      GALGAS_string temp_2 ;
      const enumGalgasBool test_3 = GALGAS_bool (kIsStrictSup, var_withAccessorMap.reader_count (SOURCE_FILE_AT_LINE (1965)).objectCompare (GALGAS_uint ((PMUInt32) 1U))).boolEnum () ;
      if (kBoolTrue == test_3) {
        temp_2 = GALGAS_string ("accessors are") ;
      }else if (kBoolFalse == test_3) {
        temp_2 = GALGAS_string ("accessor is") ;
      }
      GALGAS_location location_4 (object->mAttribute_mAccessName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_4, GALGAS_string ("the '@").operator_concat (var_targetType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1964)) COMMA_SOURCE_FILE_AT_LINE (1964)).operator_concat (GALGAS_string ("' type does not define the '") COMMA_SOURCE_FILE_AT_LINE (1964)).operator_concat (object->mAttribute_mAccessName.reader_string (SOURCE_FILE_AT_LINE (1964)) COMMA_SOURCE_FILE_AT_LINE (1964)).operator_concat (GALGAS_string ("' accessor for the 'with' instruction; available ") COMMA_SOURCE_FILE_AT_LINE (1964)).operator_concat (temp_2 COMMA_SOURCE_FILE_AT_LINE (1965)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (1966)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (1966)) COMMA_SOURCE_FILE_AT_LINE (1963)) ;
      var_argumentTypeList.drop () ; // Release error dropped variable
    }
  }
  GALGAS_semanticExpressionListForGeneration var_effectiveExpressionList = GALGAS_semanticExpressionListForGeneration::constructor_listWithValue (var_keyExpression COMMA_SOURCE_FILE_AT_LINE (1972)) ;
  const enumGalgasBool test_5 = GALGAS_bool (kIsNotEqual, var_effectiveExpressionList.reader_length (SOURCE_FILE_AT_LINE (1973)).objectCompare (var_argumentTypeList.reader_length (SOURCE_FILE_AT_LINE (1973)))).boolEnum () ;
  if (kBoolTrue == test_5) {
    GALGAS_location location_6 (object->mAttribute_mAccessName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_6, GALGAS_string ("calling the '").operator_concat (object->mAttribute_mAccessName.reader_string (SOURCE_FILE_AT_LINE (1974)) COMMA_SOURCE_FILE_AT_LINE (1974)).operator_concat (GALGAS_string ("' accessor of '@") COMMA_SOURCE_FILE_AT_LINE (1974)).operator_concat (var_targetType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1974)) COMMA_SOURCE_FILE_AT_LINE (1974)).operator_concat (GALGAS_string ("' requires ") COMMA_SOURCE_FILE_AT_LINE (1974)).operator_concat (var_argumentTypeList.reader_length (SOURCE_FILE_AT_LINE (1975)).reader_string (SOURCE_FILE_AT_LINE (1975)) COMMA_SOURCE_FILE_AT_LINE (1975)).operator_concat (GALGAS_string (" parameter(s), while this call has ") COMMA_SOURCE_FILE_AT_LINE (1975)).operator_concat (var_effectiveExpressionList.reader_length (SOURCE_FILE_AT_LINE (1976)).reader_string (SOURCE_FILE_AT_LINE (1976)) COMMA_SOURCE_FILE_AT_LINE (1976)).operator_concat (GALGAS_string (" parameter(s)") COMMA_SOURCE_FILE_AT_LINE (1976)) COMMA_SOURCE_FILE_AT_LINE (1974)) ;
  }else if (kBoolFalse == test_5) {
    cEnumerator_semanticExpressionListForGeneration enumerator_76453 (var_effectiveExpressionList, kEnumeration_up) ;
    cEnumerator_unifiedTypeMapProxyList enumerator_76473 (var_argumentTypeList, kEnumeration_up) ;
    while (enumerator_76453.hasCurrentObject () && enumerator_76473.hasCurrentObject ()) {
      {
      routine_checkAssignmentTypes (enumerator_76473.current_mType (HERE), enumerator_76453.current_mExpression (HERE).reader_mType (SOURCE_FILE_AT_LINE (1979)), object->mAttribute_mAccessName.reader_location (SOURCE_FILE_AT_LINE (1979)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1979)) ;
      }
      enumerator_76453.gotoNextObject () ;
      enumerator_76473.gotoNextObject () ;
    }
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForSelectBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (1983)) ;
  }
  GALGAS_localInitializedVariableList var_localInitializedVariableList = GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (1985)) ;
  cEnumerator_typedAttributeList enumerator_76806 (var_targetType.reader_mCurrentTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (1986)), kEnumeration_up) ;
  while (enumerator_76806.hasCurrentObject ()) {
    var_localInitializedVariableList.addAssign_operation (enumerator_76806.current_mAttributeTypeProxy (HERE), GALGAS_lstring::constructor_new (object->mAttribute_mPrefix.reader_string (SOURCE_FILE_AT_LINE (1989)).operator_concat (enumerator_76806.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1989)) COMMA_SOURCE_FILE_AT_LINE (1989)), object->mAttribute_mAccessName.reader_location (SOURCE_FILE_AT_LINE (1989)) COMMA_SOURCE_FILE_AT_LINE (1989)), var_objectArrayCppName.operator_concat (GALGAS_string ("->mAttribute_") COMMA_SOURCE_FILE_AT_LINE (1990)).operator_concat (enumerator_76806.current_mAttributeName (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1990)) COMMA_SOURCE_FILE_AT_LINE (1990)) COMMA_SOURCE_FILE_AT_LINE (1987)) ;
    enumerator_76806.gotoNextObject () ;
  }
  GALGAS_semanticInstructionListForGeneration var_do_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1996)), var_localInitializedVariableList, object->mAttribute_m_5F_do_5F_Instructions, object->mAttribute_mEndOf_5F_do_5F_instructions, ioArgument_ioVariableMap, var_do_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1994)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_else_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (2007)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (2008)), object->mAttribute_m_5F_else_5F_Instructions, object->mAttribute_mEndOf_5F_else_5F_instructions, ioArgument_ioVariableMap, var_else_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (2005)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_else_5F_instructions, inCompiler COMMA_SOURCE_FILE_AT_LINE (2014)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_readWriteWithInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_receiverVariableCppName, var_targetType, object->mAttribute_mFieldList, object->mAttribute_mAccessName.reader_string (SOURCE_FILE_AT_LINE (2021)), var_objectArrayCppName, var_keyExpression, var_do_5F_instructionList, var_else_5F_instructionList COMMA_SOURCE_FILE_AT_LINE (2016)) COMMA_SOURCE_FILE_AT_LINE (2016)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_readWriteAccessWithInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_readWriteAccessWithInstructionAST.mSlotID,
                                                  categoryMethod_readWriteAccessWithInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_readWriteAccessWithInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_readWriteAccessWithInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@readAccessWithInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_readAccessWithInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                                    const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                                    GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                    GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_readAccessWithInstructionAST * object = (const cPtr_readAccessWithInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_readAccessWithInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_receiverExpression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mReceiverExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_receiverExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (2038)) ;
  GALGAS_unifiedTypeMapProxy var_receiverType = var_receiverExpression.reader_mType (SOURCE_FILE_AT_LINE (2043)) ;
  GALGAS_semanticExpressionForGeneration var_keyExpression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mKeyExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_keyExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (2046)) ;
  GALGAS_string var_objectArrayCppName = GALGAS_string ("objectArray_").operator_concat (object->mAttribute_mInstructionLocation.reader_locationIndex (inCompiler COMMA_SOURCE_FILE_AT_LINE (2052)).reader_string (SOURCE_FILE_AT_LINE (2052)) COMMA_SOURCE_FILE_AT_LINE (2052)) ;
  GALGAS_withAccessorMap var_withAccessorMap = var_receiverType.reader_mWithAccessorMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (2054)) ;
  GALGAS_unifiedTypeMapProxyList var_argumentTypeList ;
  const cMapElement_withAccessorMap * objectArray_79157 = (const cMapElement_withAccessorMap *) var_withAccessorMap.readAccessForWithInstruction_hasKey (object->mAttribute_mSearchMethodName.reader_string (SOURCE_FILE_AT_LINE (2056))) ;
  if (NULL != objectArray_79157) {
      macroValidSharedObject (objectArray_79157, const cMapElement_withAccessorMap) ;
    var_argumentTypeList = GALGAS_unifiedTypeMapProxyList::constructor_listWithValue (objectArray_79157->mAttribute_mArgumentType COMMA_SOURCE_FILE_AT_LINE (2057)) ;
  }else{
    const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_withAccessorMap.reader_count (SOURCE_FILE_AT_LINE (2059)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_location location_1 (object->mAttribute_mSearchMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '@").operator_concat (var_receiverType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2061)) COMMA_SOURCE_FILE_AT_LINE (2061)).operator_concat (GALGAS_string ("' type cannot be used in a 'with' instruction") COMMA_SOURCE_FILE_AT_LINE (2061)) COMMA_SOURCE_FILE_AT_LINE (2060)) ;
      var_argumentTypeList.drop () ; // Release error dropped variable
    }else if (kBoolFalse == test_0) {
      GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
      cEnumerator_withAccessorMap enumerator_79541 (var_withAccessorMap, kEnumeration_up) ;
      while (enumerator_79541.hasCurrentObject ()) {
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "  - ").operator_concat (enumerator_79541.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (2067)) COMMA_SOURCE_FILE_AT_LINE (2067)).operator_concat (GALGAS_string (" \?@") COMMA_SOURCE_FILE_AT_LINE (2067)).operator_concat (enumerator_79541.current_mArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2067)) COMMA_SOURCE_FILE_AT_LINE (2067)) COMMA_SOURCE_FILE_AT_LINE (2067)) ;
        enumerator_79541.gotoNextObject () ;
      }
      //--- @ifExpressionForGeneration
      GALGAS_string temp_2 ;
      const enumGalgasBool test_3 = GALGAS_bool (kIsStrictSup, var_withAccessorMap.reader_count (SOURCE_FILE_AT_LINE (2071)).objectCompare (GALGAS_uint ((PMUInt32) 1U))).boolEnum () ;
      if (kBoolTrue == test_3) {
        temp_2 = GALGAS_string ("accessors are") ;
      }else if (kBoolFalse == test_3) {
        temp_2 = GALGAS_string ("accessor is") ;
      }
      GALGAS_location location_4 (object->mAttribute_mSearchMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_4, GALGAS_string ("the '@").operator_concat (var_receiverType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2070)) COMMA_SOURCE_FILE_AT_LINE (2070)).operator_concat (GALGAS_string ("' type does not define the '") COMMA_SOURCE_FILE_AT_LINE (2070)).operator_concat (object->mAttribute_mSearchMethodName.reader_string (SOURCE_FILE_AT_LINE (2070)) COMMA_SOURCE_FILE_AT_LINE (2070)).operator_concat (GALGAS_string ("' accessor for the 'with' instruction; available ") COMMA_SOURCE_FILE_AT_LINE (2070)).operator_concat (temp_2 COMMA_SOURCE_FILE_AT_LINE (2071)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (2072)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (2072)) COMMA_SOURCE_FILE_AT_LINE (2069)) ;
      var_argumentTypeList.drop () ; // Release error dropped variable
    }
  }
  GALGAS_semanticExpressionListForGeneration var_effectiveExpressionList = GALGAS_semanticExpressionListForGeneration::constructor_listWithValue (var_keyExpression COMMA_SOURCE_FILE_AT_LINE (2078)) ;
  const enumGalgasBool test_5 = GALGAS_bool (kIsNotEqual, var_effectiveExpressionList.reader_length (SOURCE_FILE_AT_LINE (2079)).objectCompare (var_argumentTypeList.reader_length (SOURCE_FILE_AT_LINE (2079)))).boolEnum () ;
  if (kBoolTrue == test_5) {
    GALGAS_location location_6 (object->mAttribute_mSearchMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_6, GALGAS_string ("calling the '").operator_concat (object->mAttribute_mSearchMethodName.reader_string (SOURCE_FILE_AT_LINE (2080)) COMMA_SOURCE_FILE_AT_LINE (2080)).operator_concat (GALGAS_string ("' accessor of '@") COMMA_SOURCE_FILE_AT_LINE (2080)).operator_concat (var_receiverType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2080)) COMMA_SOURCE_FILE_AT_LINE (2080)).operator_concat (GALGAS_string ("' requires ") COMMA_SOURCE_FILE_AT_LINE (2080)).operator_concat (var_argumentTypeList.reader_length (SOURCE_FILE_AT_LINE (2081)).reader_string (SOURCE_FILE_AT_LINE (2081)) COMMA_SOURCE_FILE_AT_LINE (2081)).operator_concat (GALGAS_string (" parameter(s), while this call has ") COMMA_SOURCE_FILE_AT_LINE (2081)).operator_concat (var_effectiveExpressionList.reader_length (SOURCE_FILE_AT_LINE (2082)).reader_string (SOURCE_FILE_AT_LINE (2082)) COMMA_SOURCE_FILE_AT_LINE (2082)).operator_concat (GALGAS_string (" parameter(s)") COMMA_SOURCE_FILE_AT_LINE (2082)) COMMA_SOURCE_FILE_AT_LINE (2080)) ;
  }else if (kBoolFalse == test_5) {
    cEnumerator_semanticExpressionListForGeneration enumerator_80470 (var_effectiveExpressionList, kEnumeration_up) ;
    cEnumerator_unifiedTypeMapProxyList enumerator_80490 (var_argumentTypeList, kEnumeration_up) ;
    while (enumerator_80470.hasCurrentObject () && enumerator_80490.hasCurrentObject ()) {
      {
      routine_checkAssignmentTypes (enumerator_80490.current_mType (HERE), enumerator_80470.current_mExpression (HERE).reader_mType (SOURCE_FILE_AT_LINE (2085)), object->mAttribute_mSearchMethodName.reader_location (SOURCE_FILE_AT_LINE (2085)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2085)) ;
      }
      enumerator_80470.gotoNextObject () ;
      enumerator_80490.gotoNextObject () ;
    }
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForSelectBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (2089)) ;
  }
  GALGAS_localConstantList var_localConstantList = GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (2091)) ;
  cEnumerator_typedAttributeList enumerator_80809 (var_receiverType.reader_mCurrentTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (2092)), kEnumeration_up) ;
  while (enumerator_80809.hasCurrentObject ()) {
    var_localConstantList.addAssign_operation (enumerator_80809.current_mAttributeTypeProxy (HERE), GALGAS_lstring::constructor_new (object->mAttribute_mPrefix.reader_string (SOURCE_FILE_AT_LINE (2095)).operator_concat (enumerator_80809.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2095)) COMMA_SOURCE_FILE_AT_LINE (2095)), object->mAttribute_mSearchMethodName.reader_location (SOURCE_FILE_AT_LINE (2095)) COMMA_SOURCE_FILE_AT_LINE (2095)), GALGAS_bool (true), var_objectArrayCppName.operator_concat (GALGAS_string ("->mAttribute_") COMMA_SOURCE_FILE_AT_LINE (2097)).operator_concat (enumerator_80809.current_mAttributeName (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (2097)) COMMA_SOURCE_FILE_AT_LINE (2097)) COMMA_SOURCE_FILE_AT_LINE (2093)) ;
    enumerator_80809.gotoNextObject () ;
  }
  GALGAS_semanticInstructionListForGeneration var_do_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, var_localConstantList, GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (2104)), object->mAttribute_mDoBranchInstructions, object->mAttribute_mEndOf_5F_do_5F_instructions, ioArgument_ioVariableMap, var_do_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (2101)) ;
  }
  GALGAS_semanticInstructionListForGeneration var_else_5F_instructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (2114)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (2115)), object->mAttribute_mElseBranchInstructions, object->mAttribute_mEndOf_5F_else_5F_instructions, ioArgument_ioVariableMap, var_else_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (2112)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_else_5F_instructions, inCompiler COMMA_SOURCE_FILE_AT_LINE (2121)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_readOnlyWithInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, var_receiverExpression, object->mAttribute_mSearchMethodName.reader_string (SOURCE_FILE_AT_LINE (2126)), var_objectArrayCppName, var_keyExpression, var_do_5F_instructionList, var_else_5F_instructionList COMMA_SOURCE_FILE_AT_LINE (2123)) COMMA_SOURCE_FILE_AT_LINE (2123)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_readAccessWithInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_readAccessWithInstructionAST.mSlotID,
                                                  categoryMethod_readAccessWithInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_readAccessWithInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_readAccessWithInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@switchInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_switchInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                            const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                            GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                            GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_switchInstructionAST * object = (const cPtr_switchInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_switchInstructionAST) ;
  GALGAS_semanticExpressionForGeneration var_switchExpression ;
  callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) object->mAttribute_mSwitchExpression.ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_switchExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (2143)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_switchExpression.reader_mType (SOURCE_FILE_AT_LINE (2149)).reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (2149)).objectCompare (GALGAS_typeKindEnum::constructor_enumType (SOURCE_FILE_AT_LINE (2149)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mEndOfSwitchExpression, GALGAS_string ("the switch expression type should be an instance of an enumeration type (the '@").operator_concat (var_switchExpression.reader_mType (SOURCE_FILE_AT_LINE (2151)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2151)) COMMA_SOURCE_FILE_AT_LINE (2151)).operator_concat (GALGAS_string ("' type is not an enumeration type)") COMMA_SOURCE_FILE_AT_LINE (2151)) COMMA_SOURCE_FILE_AT_LINE (2150)) ;
  }
  GALGAS_stringset var_enumConstantStringSet = var_switchExpression.reader_mType (SOURCE_FILE_AT_LINE (2154)).reader_mEnumConstantSet (inCompiler COMMA_SOURCE_FILE_AT_LINE (2154)) ;
  GALGAS_stringset var_constantsNamedInSwitchInstruction = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (2155)) ;
  {
  ioArgument_ioVariableMap.modifier_openOverrideForSelectBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (2157)) ;
  }
  GALGAS_switchBranchesForGeneration var_switchBranchesForGeneration = GALGAS_switchBranchesForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (2158)) ;
  cEnumerator_switchBranchesAST enumerator_83253 (object->mAttribute_mBranches, kEnumeration_up) ;
  while (enumerator_83253.hasCurrentObject ()) {
    cEnumerator_lstringlist enumerator_83288 (enumerator_83253.current_mSwitchConstantList (HERE), kEnumeration_up) ;
    while (enumerator_83288.hasCurrentObject ()) {
      const enumGalgasBool test_1 = var_enumConstantStringSet.reader_hasKey (enumerator_83288.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (2161)) COMMA_SOURCE_FILE_AT_LINE (2161)).boolEnum () ;
      if (kBoolTrue == test_1) {
        const enumGalgasBool test_2 = var_constantsNamedInSwitchInstruction.reader_hasKey (enumerator_83288.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (2162)) COMMA_SOURCE_FILE_AT_LINE (2162)).boolEnum () ;
        if (kBoolTrue == test_2) {
          GALGAS_location location_3 (enumerator_83288.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_3, GALGAS_string ("the '").operator_concat (enumerator_83288.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (2164)) COMMA_SOURCE_FILE_AT_LINE (2164)).operator_concat (GALGAS_string ("' constant is already named in this switch instruction") COMMA_SOURCE_FILE_AT_LINE (2164)) COMMA_SOURCE_FILE_AT_LINE (2163)) ;
        }
        var_constantsNamedInSwitchInstruction.addAssign_operation (enumerator_83288.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (2167)) COMMA_SOURCE_FILE_AT_LINE (2167)) ;
      }else if (kBoolFalse == test_1) {
        GALGAS_location location_4 (enumerator_83288.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_4, GALGAS_string ("'").operator_concat (enumerator_83288.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (2170)) COMMA_SOURCE_FILE_AT_LINE (2170)).operator_concat (GALGAS_string ("' is not a constant of '@") COMMA_SOURCE_FILE_AT_LINE (2170)).operator_concat (var_switchExpression.reader_mType (SOURCE_FILE_AT_LINE (2170)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2170)) COMMA_SOURCE_FILE_AT_LINE (2170)).operator_concat (GALGAS_string ("' enumeration type") COMMA_SOURCE_FILE_AT_LINE (2170)) COMMA_SOURCE_FILE_AT_LINE (2169)) ;
      }
      enumerator_83288.gotoNextObject () ;
    }
    GALGAS_semanticInstructionListForGeneration var_instructionList ;
    {
    routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (2177)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (2178)), enumerator_83253.current_mInstructions (HERE), enumerator_83253.current_mEndOfBranch (HERE), ioArgument_ioVariableMap, var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (2175)) ;
    }
    var_switchBranchesForGeneration.addAssign_operation (enumerator_83253.current_mSwitchConstantList (HERE), var_instructionList COMMA_SOURCE_FILE_AT_LINE (2184)) ;
    enumerator_83253.gotoNextObject () ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_switch_5F_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (2186)) ;
  }
  GALGAS_stringset var_forgottenConstants = var_enumConstantStringSet.substract_operation (var_constantsNamedInSwitchInstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (2188)) ;
  const enumGalgasBool test_5 = GALGAS_bool (kIsStrictSup, var_forgottenConstants.reader_count (SOURCE_FILE_AT_LINE (2189)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_5) {
    GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
    cEnumerator_stringset enumerator_84504 (var_forgottenConstants, kEnumeration_up) ;
    while (enumerator_84504.hasCurrentObject ()) {
      var_s.dotAssign_operation (GALGAS_string ("\n"
        "  - ").operator_concat (enumerator_84504.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (2192)) COMMA_SOURCE_FILE_AT_LINE (2192)) ;
      enumerator_84504.gotoNextObject () ;
    }
    inCompiler->emitSemanticError (object->mAttribute_mEndOf_5F_switch_5F_instruction, GALGAS_string ("the switch instruction should name all enumeration constants; missing constants are:").operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (2195)) COMMA_SOURCE_FILE_AT_LINE (2194)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_switchInstructionForGeneration::constructor_new (var_switchExpression, var_switchBranchesForGeneration COMMA_SOURCE_FILE_AT_LINE (2199)) COMMA_SOURCE_FILE_AT_LINE (2199)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_switchInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_switchInstructionAST.mSlotID,
                                                  categoryMethod_switchInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_switchInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_switchInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@matchInstructionAST analyzeSemanticInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_matchInstructionAST_analyzeSemanticInstruction (const cPtr_semanticInstructionAST * inObject,
                                                                           const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                                                           GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                           GALGAS_variableMap & ioArgument_ioVariableMap,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_matchInstructionAST * object = (const cPtr_matchInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_matchInstructionAST) ;
  GALGAS_semanticExpressionListForGeneration var_expressionList = GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (2212)) ;
  cEnumerator_semanticExpressionListAST enumerator_85267 (object->mAttribute_mMatchedExpressionList, kEnumeration_up) ;
  while (enumerator_85267.hasCurrentObject ()) {
    GALGAS_semanticExpressionForGeneration var_matchedExpression ;
    callCategoryMethod_analyzeSemanticExpression ((const cPtr_semanticExpressionAST *) enumerator_85267.current_mExpression (HERE).ptr (), constinArgument_inAnalysisContext, ioArgument_ioVariableMap, var_matchedExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (2216)) ;
    var_expressionList.addAssign_operation (var_matchedExpression COMMA_SOURCE_FILE_AT_LINE (2221)) ;
    GALGAS_unifiedTypeMapProxy var_type = var_matchedExpression.reader_mType (SOURCE_FILE_AT_LINE (2223)) ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_type.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (2224)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (2224)))).operator_and (GALGAS_bool (kIsNotEqual, var_type.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (2224)).objectCompare (GALGAS_typeKindEnum::constructor_enumType (SOURCE_FILE_AT_LINE (2224)))) COMMA_SOURCE_FILE_AT_LINE (2224)).boolEnum () ;
    if (kBoolTrue == test_0) {
      inCompiler->emitSemanticError (enumerator_85267.current_mEndOfExpressionLocation (HERE), GALGAS_string ("this expression is an instance of '@").operator_concat (var_type.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2226)) COMMA_SOURCE_FILE_AT_LINE (2226)).operator_concat (GALGAS_string ("' type, but this type is neither an enumeration, neither a class") COMMA_SOURCE_FILE_AT_LINE (2226)) COMMA_SOURCE_FILE_AT_LINE (2225)) ;
    }
    enumerator_85267.gotoNextObject () ;
  }
  {
  ioArgument_ioVariableMap.modifier_openOverrideForSelectBlock (inCompiler COMMA_SOURCE_FILE_AT_LINE (2231)) ;
  }
  GALGAS_matchInstructionBranchListForGeneration var_matchInstructionBranchList = GALGAS_matchInstructionBranchListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (2232)) ;
  cEnumerator_matchInstructionBranchListAST enumerator_86153 (object->mAttribute_mMatchInstructionBranchList, kEnumeration_up) ;
  while (enumerator_86153.hasCurrentObject ()) {
    GALGAS_localConstantList var_localConstantList = GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (2235)) ;
    GALGAS_matchListForGeneration var_matchListForGeneration = GALGAS_matchListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (2236)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_expressionList.reader_length (SOURCE_FILE_AT_LINE (2237)).objectCompare (enumerator_86153.current_mMatchEntryList (HERE).reader_length (SOURCE_FILE_AT_LINE (2237)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      cEnumerator_semanticExpressionListForGeneration enumerator_86385 (var_expressionList, kEnumeration_up) ;
      cEnumerator_matchEntryListAST enumerator_86404 (enumerator_86153.current_mMatchEntryList (HERE), kEnumeration_up) ;
      while (enumerator_86385.hasCurrentObject () && enumerator_86404.hasCurrentObject ()) {
        GALGAS_unifiedTypeMapProxy var_type = enumerator_86385.current_mExpression (HERE).reader_mType (SOURCE_FILE_AT_LINE (2239)) ;
        const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, var_type.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (2240)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (2240)))).boolEnum () ;
        if (kBoolTrue == test_2) {
          const enumGalgasBool test_3 = enumerator_86404.current_mIsType (HERE).boolEnum () ;
          if (kBoolTrue == test_3) {
            GALGAS_unifiedTypeMapProxy var_namedType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, enumerator_86404.current_mTypeNameOrEnumerationConstantName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (2242)) ;
            GALGAS_unifiedTypeMapProxy var_t = var_type ;
            GALGAS_bool var_found = GALGAS_bool (kIsEqual, var_t.objectCompare (var_namedType)) ;
            if (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (2245)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2245)).isValid ()) {
              PMUInt32 variant_86815 = constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (2245)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2245)).uintValue () ;
              bool loop_86815 = true ;
              while (loop_86815) {
                loop_86815 = var_found.operator_not (SOURCE_FILE_AT_LINE (2246)).operator_and (var_t.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (2246)).reader_isNull (SOURCE_FILE_AT_LINE (2246)).operator_not (SOURCE_FILE_AT_LINE (2246)) COMMA_SOURCE_FILE_AT_LINE (2246)).isValid () ;
                if (loop_86815) {
                  loop_86815 = var_found.operator_not (SOURCE_FILE_AT_LINE (2246)).operator_and (var_t.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (2246)).reader_isNull (SOURCE_FILE_AT_LINE (2246)).operator_not (SOURCE_FILE_AT_LINE (2246)) COMMA_SOURCE_FILE_AT_LINE (2246)).boolValue () ;
                }
                if (loop_86815 && (0 == variant_86815)) {
                  loop_86815 = false ;
                  inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (2245)) ;
                }
                if (loop_86815) {
                  variant_86815 -- ;
                  var_t = var_t.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (2247)) ;
                  var_found = GALGAS_bool (kIsEqual, var_t.objectCompare (var_namedType)) ;
                }
              }
            }
            const enumGalgasBool test_4 = var_found.operator_not (SOURCE_FILE_AT_LINE (2250)).boolEnum () ;
            if (kBoolTrue == test_4) {
              GALGAS_location location_5 (enumerator_86404.current_mTypeNameOrEnumerationConstantName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_5, GALGAS_string ("the '@").operator_concat (enumerator_86404.current_mTypeNameOrEnumerationConstantName (HERE).reader_string (SOURCE_FILE_AT_LINE (2252)) COMMA_SOURCE_FILE_AT_LINE (2252)).operator_concat (GALGAS_string ("' is not a descendant of the '@") COMMA_SOURCE_FILE_AT_LINE (2252)).operator_concat (var_type.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2252)) COMMA_SOURCE_FILE_AT_LINE (2252)).operator_concat (GALGAS_string ("' type of the cast expression") COMMA_SOURCE_FILE_AT_LINE (2252)) COMMA_SOURCE_FILE_AT_LINE (2251)) ;
            }else if (kBoolFalse == test_4) {
              const enumGalgasBool test_6 = GALGAS_bool (kIsStrictSup, enumerator_86404.current_mLocalConstantName (HERE).reader_string (SOURCE_FILE_AT_LINE (2254)).reader_length (SOURCE_FILE_AT_LINE (2254)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
              if (kBoolTrue == test_6) {
                var_localConstantList.addAssign_operation (var_t, enumerator_86404.current_mLocalConstantName (HERE), GALGAS_bool (false), GALGAS_string ("match_instruction_constant_name") COMMA_SOURCE_FILE_AT_LINE (2255)) ;
              }
            }
          }else if (kBoolFalse == test_3) {
            GALGAS_location location_7 (enumerator_86404.current_mTypeNameOrEnumerationConstantName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_7, GALGAS_string ("a type that inherits from '@").operator_concat (enumerator_86385.current_mExpression (HERE).reader_mType (SOURCE_FILE_AT_LINE (2259)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2259)) COMMA_SOURCE_FILE_AT_LINE (2259)).operator_concat (GALGAS_string ("' class is expected here") COMMA_SOURCE_FILE_AT_LINE (2259)) COMMA_SOURCE_FILE_AT_LINE (2258)) ;
          }
          var_matchListForGeneration.addAssign_operation (GALGAS_bool (true), enumerator_86404.current_mTypeNameOrEnumerationConstantName (HERE).reader_string (SOURCE_FILE_AT_LINE (2262)), enumerator_86404.current_mLocalConstantName (HERE).reader_string (SOURCE_FILE_AT_LINE (2262)) COMMA_SOURCE_FILE_AT_LINE (2262)) ;
        }else if (kBoolFalse == test_2) {
          const enumGalgasBool test_8 = GALGAS_bool (kIsEqual, var_type.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (2263)).objectCompare (GALGAS_typeKindEnum::constructor_enumType (SOURCE_FILE_AT_LINE (2263)))).boolEnum () ;
          if (kBoolTrue == test_8) {
            const enumGalgasBool test_9 = enumerator_86404.current_mIsType (HERE).boolEnum () ;
            if (kBoolTrue == test_9) {
              GALGAS_location location_10 (enumerator_86404.current_mTypeNameOrEnumerationConstantName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_10, GALGAS_string ("a constant of the '@").operator_concat (enumerator_86385.current_mExpression (HERE).reader_mType (SOURCE_FILE_AT_LINE (2266)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2266)) COMMA_SOURCE_FILE_AT_LINE (2266)).operator_concat (GALGAS_string ("' enumeration type is expected here") COMMA_SOURCE_FILE_AT_LINE (2266)) COMMA_SOURCE_FILE_AT_LINE (2265)) ;
            }else if (kBoolFalse == test_9) {
              const enumGalgasBool test_11 = var_type.reader_mEnumConstantSet (inCompiler COMMA_SOURCE_FILE_AT_LINE (2268)).reader_hasKey (enumerator_86404.current_mTypeNameOrEnumerationConstantName (HERE).reader_string (SOURCE_FILE_AT_LINE (2268)) COMMA_SOURCE_FILE_AT_LINE (2268)).operator_not (SOURCE_FILE_AT_LINE (2268)).boolEnum () ;
              if (kBoolTrue == test_11) {
                GALGAS_location location_12 (enumerator_86404.current_mTypeNameOrEnumerationConstantName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
                inCompiler->emitSemanticError (location_12, GALGAS_string ("the '").operator_concat (enumerator_86404.current_mTypeNameOrEnumerationConstantName (HERE).reader_string (SOURCE_FILE_AT_LINE (2270)) COMMA_SOURCE_FILE_AT_LINE (2270)).operator_concat (GALGAS_string ("' symbol is not a constant of the '@") COMMA_SOURCE_FILE_AT_LINE (2270)).operator_concat (enumerator_86385.current_mExpression (HERE).reader_mType (SOURCE_FILE_AT_LINE (2270)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2270)) COMMA_SOURCE_FILE_AT_LINE (2270)).operator_concat (GALGAS_string ("' enumeration type") COMMA_SOURCE_FILE_AT_LINE (2270)) COMMA_SOURCE_FILE_AT_LINE (2269)) ;
              }
            }
            var_matchListForGeneration.addAssign_operation (GALGAS_bool (false), enumerator_86404.current_mTypeNameOrEnumerationConstantName (HERE).reader_string (SOURCE_FILE_AT_LINE (2275)), enumerator_86385.current_mExpression (HERE).reader_mType (SOURCE_FILE_AT_LINE (2276)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2276)) COMMA_SOURCE_FILE_AT_LINE (2273)) ;
          }else if (kBoolFalse == test_8) {
            GALGAS_location location_13 (enumerator_86404.current_mTypeNameOrEnumerationConstantName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_13, GALGAS_string ("internal error") COMMA_SOURCE_FILE_AT_LINE (2279)) ;
          }
        }
        enumerator_86385.gotoNextObject () ;
        enumerator_86404.gotoNextObject () ;
      }
    }else if (kBoolFalse == test_1) {
      inCompiler->emitSemanticError (enumerator_86153.current_mEndOfMatchEntryList (HERE), GALGAS_string ("this match list should contain ").operator_concat (var_expressionList.reader_length (SOURCE_FILE_AT_LINE (2284)).reader_string (SOURCE_FILE_AT_LINE (2284)) COMMA_SOURCE_FILE_AT_LINE (2284)).operator_concat (GALGAS_string (" elements, but it acually contains ") COMMA_SOURCE_FILE_AT_LINE (2284)).operator_concat (enumerator_86153.current_mMatchEntryList (HERE).reader_length (SOURCE_FILE_AT_LINE (2285)).reader_string (SOURCE_FILE_AT_LINE (2285)) COMMA_SOURCE_FILE_AT_LINE (2285)) COMMA_SOURCE_FILE_AT_LINE (2283)) ;
    }
    GALGAS_semanticInstructionListForGeneration var_instructionList ;
    {
    routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, var_localConstantList, GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (2293)), enumerator_86153.current_mMatchBranchInstructionList (HERE), enumerator_86153.current_mEndOf_5F_instructionList (HERE), ioArgument_ioVariableMap, var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (2290)) ;
    }
    var_matchInstructionBranchList.addAssign_operation (var_matchListForGeneration, var_instructionList COMMA_SOURCE_FILE_AT_LINE (2300)) ;
    enumerator_86153.gotoNextObject () ;
  }
  GALGAS_semanticInstructionListForGeneration var_elseInstructionList ;
  {
  routine_analyzeSemanticInstructionList (constinArgument_inAnalysisContext, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (2306)), GALGAS_localInitializedVariableList::constructor_emptyList (SOURCE_FILE_AT_LINE (2307)), object->mAttribute_mElseInstructionList, object->mAttribute_mEndOf_5F_match_5F_instruction, ioArgument_ioVariableMap, var_elseInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (2304)) ;
  }
  {
  ioArgument_ioVariableMap.modifier_closeOverride (object->mAttribute_mEndOf_5F_match_5F_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (2314)) ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_matchInstructionForGeneration::constructor_new (var_expressionList, var_matchInstructionBranchList, var_elseInstructionList COMMA_SOURCE_FILE_AT_LINE (2316)) COMMA_SOURCE_FILE_AT_LINE (2316)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_matchInstructionAST_analyzeSemanticInstruction (void) {
  enterCategoryMethod_analyzeSemanticInstruction (kTypeDescriptor_GALGAS_matchInstructionAST.mSlotID,
                                                  categoryMethod_matchInstructionAST_analyzeSemanticInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_matchInstructionAST_analyzeSemanticInstruction (defineCategoryMethod_matchInstructionAST_analyzeSemanticInstruction, NULL) ;

//---------------------------------------------------------------------------*

GALGAS_localConstantList_2E_element::GALGAS_localConstantList_2E_element (void) :
mAttribute_mType (),
mAttribute_mName (),
mAttribute_mNoWarningIfUnused (),
mAttribute_mCppName () {
}

//---------------------------------------------------------------------------*

GALGAS_localConstantList_2E_element::~ GALGAS_localConstantList_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_localConstantList_2E_element::GALGAS_localConstantList_2E_element (const GALGAS_unifiedTypeMapProxy & inOperand0,
                                                                          const GALGAS_lstring & inOperand1,
                                                                          const GALGAS_bool & inOperand2,
                                                                          const GALGAS_string & inOperand3) :
mAttribute_mType (inOperand0),
mAttribute_mName (inOperand1),
mAttribute_mNoWarningIfUnused (inOperand2),
mAttribute_mCppName (inOperand3) {
}

//---------------------------------------------------------------------------*

GALGAS_localConstantList_2E_element GALGAS_localConstantList_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_localConstantList_2E_element (GALGAS_unifiedTypeMapProxy::constructor_null (HERE),
                                              GALGAS_lstring::constructor_default (HERE),
                                              GALGAS_bool::constructor_default (HERE),
                                              GALGAS_string::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_localConstantList_2E_element GALGAS_localConstantList_2E_element::constructor_new (const GALGAS_unifiedTypeMapProxy & inOperand0,
                                                                                          const GALGAS_lstring & inOperand1,
                                                                                          const GALGAS_bool & inOperand2,
                                                                                          const GALGAS_string & inOperand3 
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_localConstantList_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_localConstantList_2E_element (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_localConstantList_2E_element::objectCompare (const GALGAS_localConstantList_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mType.objectCompare (inOperand.mAttribute_mType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mName.objectCompare (inOperand.mAttribute_mName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mNoWarningIfUnused.objectCompare (inOperand.mAttribute_mNoWarningIfUnused) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCppName.objectCompare (inOperand.mAttribute_mCppName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_localConstantList_2E_element::isValid (void) const {
  return mAttribute_mType.isValid () && mAttribute_mName.isValid () && mAttribute_mNoWarningIfUnused.isValid () && mAttribute_mCppName.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_localConstantList_2E_element::drop (void) {
  mAttribute_mType.drop () ;
  mAttribute_mName.drop () ;
  mAttribute_mNoWarningIfUnused.drop () ;
  mAttribute_mCppName.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_localConstantList_2E_element::description (C_String & ioString,
                                                       const PMSInt32 inIndentation) const {
  ioString << "<struct @localConstantList.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mNoWarningIfUnused.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCppName.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_localConstantList_2E_element::reader_mType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mType ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_localConstantList_2E_element::reader_mName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mName ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_localConstantList_2E_element::reader_mNoWarningIfUnused (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mNoWarningIfUnused ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_localConstantList_2E_element::reader_mCppName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCppName ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                      @localConstantList.element type                      *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_localConstantList_2E_element ("localConstantList.element",
                                                     NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_localConstantList_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_localConstantList_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_localConstantList_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_localConstantList_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_localConstantList_2E_element GALGAS_localConstantList_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                        C_Compiler * inCompiler,
                                                                                        const GALGAS_location & inErrorLocation
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_localConstantList_2E_element result ;
  const GALGAS_localConstantList_2E_element * p = (const GALGAS_localConstantList_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_localConstantList_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "localConstantList.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_localInitializedVariableList_2E_element::GALGAS_localInitializedVariableList_2E_element (void) :
mAttribute_mType (),
mAttribute_mName (),
mAttribute_mCppName () {
}

//---------------------------------------------------------------------------*

GALGAS_localInitializedVariableList_2E_element::~ GALGAS_localInitializedVariableList_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_localInitializedVariableList_2E_element::GALGAS_localInitializedVariableList_2E_element (const GALGAS_unifiedTypeMapProxy & inOperand0,
                                                                                                const GALGAS_lstring & inOperand1,
                                                                                                const GALGAS_string & inOperand2) :
mAttribute_mType (inOperand0),
mAttribute_mName (inOperand1),
mAttribute_mCppName (inOperand2) {
}

//---------------------------------------------------------------------------*

GALGAS_localInitializedVariableList_2E_element GALGAS_localInitializedVariableList_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_localInitializedVariableList_2E_element (GALGAS_unifiedTypeMapProxy::constructor_null (HERE),
                                                         GALGAS_lstring::constructor_default (HERE),
                                                         GALGAS_string::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_localInitializedVariableList_2E_element GALGAS_localInitializedVariableList_2E_element::constructor_new (const GALGAS_unifiedTypeMapProxy & inOperand0,
                                                                                                                const GALGAS_lstring & inOperand1,
                                                                                                                const GALGAS_string & inOperand2 
                                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_localInitializedVariableList_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_localInitializedVariableList_2E_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_localInitializedVariableList_2E_element::objectCompare (const GALGAS_localInitializedVariableList_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mType.objectCompare (inOperand.mAttribute_mType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mName.objectCompare (inOperand.mAttribute_mName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCppName.objectCompare (inOperand.mAttribute_mCppName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_localInitializedVariableList_2E_element::isValid (void) const {
  return mAttribute_mType.isValid () && mAttribute_mName.isValid () && mAttribute_mCppName.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_localInitializedVariableList_2E_element::drop (void) {
  mAttribute_mType.drop () ;
  mAttribute_mName.drop () ;
  mAttribute_mCppName.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_localInitializedVariableList_2E_element::description (C_String & ioString,
                                                                  const PMSInt32 inIndentation) const {
  ioString << "<struct @localInitializedVariableList.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCppName.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_localInitializedVariableList_2E_element::reader_mType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mType ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_localInitializedVariableList_2E_element::reader_mName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mName ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_localInitializedVariableList_2E_element::reader_mCppName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCppName ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                @localInitializedVariableList.element type                 *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_localInitializedVariableList_2E_element ("localInitializedVariableList.element",
                                                                NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_localInitializedVariableList_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_localInitializedVariableList_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_localInitializedVariableList_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_localInitializedVariableList_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_localInitializedVariableList_2E_element GALGAS_localInitializedVariableList_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                              C_Compiler * inCompiler,
                                                                                                              const GALGAS_location & inErrorLocation
                                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_localInitializedVariableList_2E_element result ;
  const GALGAS_localInitializedVariableList_2E_element * p = (const GALGAS_localInitializedVariableList_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_localInitializedVariableList_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "localInitializedVariableList.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


