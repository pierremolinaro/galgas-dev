//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'semantics_semantics.h'                        *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                      january 9th, 2006, at 14h53'9"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef semantics_semantics_DEFINED
#define semantics_semantics_DEFINED

#include <string.h>

#include "galgas/C_GGS_Object.h"
#include "galgas/AC_galgas_io.h"
#include "galgas/GGS_location.h"
#include "galgas/GGS_lbool.h"
#include "galgas/GGS_lchar.h"
#include "galgas/GGS_lstring.h"
#include "galgas/GGS_ldouble.h"
#include "galgas/GGS_luint.h"
#include "galgas/GGS_lsint.h"
#include "galgas/GGS_stringset.h"
#include "galgas/AC_galgas_map.h"
#include "galgas/C_Lexique.h"

// Include imported semantics
#include "common_semantics.h"

//---------------------------------------------------------------------------*
//                                                                           *
//   Include directives generated by extern types, methods or attributes     *
//                                                                           *
//---------------------------------------------------------------------------*

#include "cGalgasVariablesMap.h"
#include "cTableMethodesAimplementer.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

class cPtr_typeCplusPlusName ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeCplusPlusName'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeCplusPlusName {
  protected : cPtr_typeCplusPlusName * mPointer ;
  public : GGS_typeCplusPlusName (void) ;
  public : GGS_typeCplusPlusName (const GGS_typeCplusPlusName &) ;
  public : virtual ~GGS_typeCplusPlusName (void) ;
  public : void operator = (const GGS_typeCplusPlusName &) ;
  public : inline bool isBuilt (void) const { return mPointer != NULL ; }
  public : inline bool isEqualTo (const GGS_typeCplusPlusName & operand_) const {
    return mPointer == operand_.mPointer ;
  }
  public : void operator = (cPtr_typeCplusPlusName * inSource) ;
  public : GGS_typeCplusPlusName (cPtr_typeCplusPlusName * inSource) ;
  public : inline cPtr_typeCplusPlusName * getPtr (void) const {
    return mPointer ;
  }
  public : void drop_operation (void) ;
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : cPtr_typeCplusPlusName * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeCplusPlusName * operator () (LOCATION_ARGS) const { return mPointer ; }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@typeCplusPlusNameList'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeCplusPlusNameList ;

class GGS_typeCplusPlusNameList {
  public : typedef elementOf_GGS_typeCplusPlusNameList element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_typeCplusPlusNameList (void) ; // Default Constructor
  public : GGS_typeCplusPlusNameList (const GGS_typeCplusPlusNameList &) ; // Copy constructor
  public : void operator = (const GGS_typeCplusPlusNameList &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_typeCplusPlusNameList (void) ;

//--- Constructor 'empty'
  public : static GGS_typeCplusPlusNameList constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_typeCplusPlusName & argument_0) ;
  protected : void internalAppendItem (const GGS_typeCplusPlusName & argument_0) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

class cPtr_typeExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeExpression'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeExpression {
  protected : cPtr_typeExpression * mPointer ;
  public : GGS_typeExpression (void) ;
  public : GGS_typeExpression (const GGS_typeExpression &) ;
  public : virtual ~GGS_typeExpression (void) ;
  public : void operator = (const GGS_typeExpression &) ;
  public : inline bool isBuilt (void) const { return mPointer != NULL ; }
  public : inline bool isEqualTo (const GGS_typeExpression & operand_) const {
    return mPointer == operand_.mPointer ;
  }
  public : void operator = (cPtr_typeExpression * inSource) ;
  public : GGS_typeExpression (cPtr_typeExpression * inSource) ;
  public : inline cPtr_typeExpression * getPtr (void) const {
    return mPointer ;
  }
  public : void drop_operation (void) ;
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : cPtr_typeExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeExpression * operator () (LOCATION_ARGS) const { return mPointer ; }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Map '@typeClassMessagesMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeClassMessagesMap ;

class GGS_typeClassMessagesMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeClassMessagesMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_typeClassMessagesMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_typeClassMessagesMap constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lstring &  inParameter0) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lstring   & outParameter0) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_lstring & inParameter0,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_lstring & outParameter0,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@typeSemanticsTypesList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeSemanticsTypesList ;

class GGS_typeSemanticsTypesList {
  public : typedef elementOf_GGS_typeSemanticsTypesList element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_typeSemanticsTypesList (void) ; // Default Constructor
  public : GGS_typeSemanticsTypesList (const GGS_typeSemanticsTypesList &) ; // Copy constructor
  public : void operator = (const GGS_typeSemanticsTypesList &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_typeSemanticsTypesList (void) ;

//--- Constructor 'empty'
  public : static GGS_typeSemanticsTypesList constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1) ;
  protected : void internalAppendItem (const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  class map element 'e_typeVariablesMap'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeVariablesMap {
  public : GGS_AC_galgasType  mArgumentType ;
  public : GGS_typeCplusPlusName  mCplusPlusName ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          map 'typeVariablesMap'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeVariablesMap : public cGalgasVariablesMap <e_typeVariablesMap> {
//--- Get object pointer
  public : inline GGS_typeVariablesMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- Handle 'empty' constructor
  public : static GGS_typeVariablesMap constructor_empty (void) ;
//---
public : void methode_searchForReadOnlyAccess (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_galgasType   & outParameter0,
                                GGS_typeCplusPlusName   & outParameter1) ;
public : void methode_searchForReadOnlyAccessGetIndex (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                GGS_AC_galgasType   & outParameter0,
                                GGS_typeCplusPlusName   & outParameter1) ;
//---
public : void methode_searchForDestructiveReadAccess (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_galgasType   & outParameter0,
                                GGS_typeCplusPlusName   & outParameter1) ;
public : void methode_searchForDestructiveReadAccessGetIndex (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                GGS_AC_galgasType   & outParameter0,
                                GGS_typeCplusPlusName   & outParameter1) ;
//---
public : void methode_searchForReadWriteAccess (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_galgasType   & outParameter0,
                                GGS_typeCplusPlusName   & outParameter1) ;
public : void methode_searchForReadWriteAccessGetIndex (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                GGS_AC_galgasType   & outParameter0,
                                GGS_typeCplusPlusName   & outParameter1) ;
//---
public : void methode_searchForWriteAccess (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_galgasType   & outParameter0,
                                GGS_typeCplusPlusName   & outParameter1) ;
public : void methode_searchForWriteAccessGetIndex (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                GGS_AC_galgasType   & outParameter0,
                                GGS_typeCplusPlusName   & outParameter1) ;
//---
public : void methode_insertInArgument (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1) ;
public : void methode_insertInArgumentGetIndex (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1) ;
//---
public : void methode_insertConstInArgument (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1) ;
public : void methode_insertConstInArgumentGetIndex (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1) ;
//---
public : void methode_insertUsedConstInArgument (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1) ;
public : void methode_insertUsedConstInArgumentGetIndex (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1) ;
//---
public : void methode_insertUnusedConstInArgument (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1) ;
public : void methode_insertUnusedConstInArgumentGetIndex (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1) ;
//---
public : void methode_insertLocalVariable (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1) ;
public : void methode_insertLocalVariableGetIndex (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1) ;
//---
public : void methode_insertOutArgument (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1) ;
public : void methode_insertOutArgumentGetIndex (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1) ;
//---
public : void methode_insertInOutArgument (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1) ;
public : void methode_insertInOutArgumentGetIndex (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1) ;
//---
public : void methode_insertUnusedInOutArgument (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1) ;
public : void methode_insertUnusedInOutArgumentGetIndex (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@L_assignedVariables'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_assignedVariables ;

class GGS_L_assignedVariables {
  public : typedef elementOf_GGS_L_assignedVariables element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_L_assignedVariables (void) ; // Default Constructor
  public : GGS_L_assignedVariables (const GGS_L_assignedVariables &) ; // Copy constructor
  public : void operator = (const GGS_L_assignedVariables &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_L_assignedVariables (void) ;

//--- Constructor 'empty'
  public : static GGS_L_assignedVariables constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstring & argument_1) ;
  protected : void internalAppendItem (const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstring & argument_1) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

class cPtr_typeCible ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_typeCible'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeCible {
  protected : cPtr_typeCible * mPointer ;
  public : GGS_typeCible (void) ;
  public : GGS_typeCible (const GGS_typeCible &) ;
  public : virtual ~GGS_typeCible (void) ;
  public : void operator = (const GGS_typeCible &) ;
  public : inline bool isBuilt (void) const { return mPointer != NULL ; }
  public : inline bool isEqualTo (const GGS_typeCible & operand_) const {
    return mPointer == operand_.mPointer ;
  }
  public : void operator = (cPtr_typeCible * inSource) ;
  public : GGS_typeCible (cPtr_typeCible * inSource) ;
  public : inline cPtr_typeCible * getPtr (void) const {
    return mPointer ;
  }
  public : void drop_operation (void) ;
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : cPtr_typeCible * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeCible * operator () (LOCATION_ARGS) const { return mPointer ; }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         list '@typeListeCibles'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListeCibles ;

class GGS_typeListeCibles {
  public : typedef elementOf_GGS_typeListeCibles element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_typeListeCibles (void) ; // Default Constructor
  public : GGS_typeListeCibles (const GGS_typeListeCibles &) ; // Copy constructor
  public : void operator = (const GGS_typeListeCibles &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_typeListeCibles (void) ;

//--- Constructor 'empty'
  public : static GGS_typeListeCibles constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_typeCible & argument_0) ;
  protected : void internalAppendItem (const GGS_typeCible & argument_0) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  list '@typeListeTypesEtNomsArgMethode'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListeTypesEtNomsArgMethode ;

class GGS_typeListeTypesEtNomsArgMethode {
  public : typedef elementOf_GGS_typeListeTypesEtNomsArgMethode element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_typeListeTypesEtNomsArgMethode (void) ; // Default Constructor
  public : GGS_typeListeTypesEtNomsArgMethode (const GGS_typeListeTypesEtNomsArgMethode &) ; // Copy constructor
  public : void operator = (const GGS_typeListeTypesEtNomsArgMethode &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_typeListeTypesEtNomsArgMethode (void) ;

//--- Constructor 'empty'
  public : static GGS_typeListeTypesEtNomsArgMethode constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_formalArgumentPassingMode& argument_1,
                                const GGS_typeCplusPlusName & argument_2,
                                const GGS_bool& argument_3) ;
  protected : void internalAppendItem (const GGS_AC_galgasType & argument_0,
                                const GGS_formalArgumentPassingMode& argument_1,
                                const GGS_typeCplusPlusName & argument_2,
                                const GGS_bool& argument_3) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

class cPtr_typeInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeInstruction'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeInstruction {
  protected : cPtr_typeInstruction * mPointer ;
  public : GGS_typeInstruction (void) ;
  public : GGS_typeInstruction (const GGS_typeInstruction &) ;
  public : virtual ~GGS_typeInstruction (void) ;
  public : void operator = (const GGS_typeInstruction &) ;
  public : inline bool isBuilt (void) const { return mPointer != NULL ; }
  public : inline bool isEqualTo (const GGS_typeInstruction & operand_) const {
    return mPointer == operand_.mPointer ;
  }
  public : void operator = (cPtr_typeInstruction * inSource) ;
  public : GGS_typeInstruction (cPtr_typeInstruction * inSource) ;
  public : inline cPtr_typeInstruction * getPtr (void) const {
    return mPointer ;
  }
  public : void drop_operation (void) ;
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : cPtr_typeInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeInstruction * operator () (LOCATION_ARGS) const { return mPointer ; }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@typeInstructionsList'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeInstructionsList ;

class GGS_typeInstructionsList {
  public : typedef elementOf_GGS_typeInstructionsList element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_typeInstructionsList (void) ; // Default Constructor
  public : GGS_typeInstructionsList (const GGS_typeInstructionsList &) ; // Copy constructor
  public : void operator = (const GGS_typeInstructionsList &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_typeInstructionsList (void) ;

//--- Constructor 'empty'
  public : static GGS_typeInstructionsList constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_typeInstruction & argument_0) ;
  protected : void internalAppendItem (const GGS_typeInstruction & argument_0) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@L_nameWithType'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_nameWithType ;

class GGS_L_nameWithType {
  public : typedef elementOf_GGS_L_nameWithType element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_L_nameWithType (void) ; // Default Constructor
  public : GGS_L_nameWithType (const GGS_L_nameWithType &) ; // Copy constructor
  public : void operator = (const GGS_L_nameWithType &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_L_nameWithType (void) ;

//--- Constructor 'empty'
  public : static GGS_L_nameWithType constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
  protected : void internalAppendItem (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           class map element 'e_typeTableMethodesAimplementer'             *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeTableMethodesAimplementer {
  public : GGS_L_signature  aListeTypesParametres ;
  public : GGS_typeListeTypesEtNomsArgMethode  aListeTypeEtNomsArguments ;
  public : GGS_typeInstructionsList  mInstructionsList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   map 'typeTableMethodesAimplementer'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeTableMethodesAimplementer : public cTableMethodesAimplementer <e_typeTableMethodesAimplementer> {
//--- Get object pointer
  public : inline GGS_typeTableMethodesAimplementer * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- Handle 'empty' constructor
  public : static GGS_typeTableMethodesAimplementer constructor_empty (void) ;
//---
public : void methode_insertAbstract (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_signature &  inParameter0,
                                const GGS_typeListeTypesEtNomsArgMethode &  inParameter1,
                                const GGS_typeInstructionsList &  inParameter2) ;
public : void methode_insertAbstractGetIndex (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_L_signature &  inParameter0,
                                const GGS_typeListeTypesEtNomsArgMethode &  inParameter1,
                                const GGS_typeInstructionsList &  inParameter2) ;
//---
public : void methode_insertNotAbstract (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_signature &  inParameter0,
                                const GGS_typeListeTypesEtNomsArgMethode &  inParameter1,
                                const GGS_typeInstructionsList &  inParameter2) ;
public : void methode_insertNotAbstractGetIndex (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_L_signature &  inParameter0,
                                const GGS_typeListeTypesEtNomsArgMethode &  inParameter1,
                                const GGS_typeInstructionsList &  inParameter2) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@typeExpressionList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeExpressionList ;

class GGS_typeExpressionList {
  public : typedef elementOf_GGS_typeExpressionList element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_typeExpressionList (void) ; // Default Constructor
  public : GGS_typeExpressionList (const GGS_typeExpressionList &) ; // Copy constructor
  public : void operator = (const GGS_typeExpressionList &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_typeExpressionList (void) ;

//--- Constructor 'empty'
  public : static GGS_typeExpressionList constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_typeExpression & argument_0) ;
  protected : void internalAppendItem (const GGS_typeExpression & argument_0) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                list '@L_expression_instructionsList_list'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_expression_instructionsList_list ;

class GGS_L_expression_instructionsList_list {
  public : typedef elementOf_GGS_L_expression_instructionsList_list element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_L_expression_instructionsList_list (void) ; // Default Constructor
  public : GGS_L_expression_instructionsList_list (const GGS_L_expression_instructionsList_list &) ; // Copy constructor
  public : void operator = (const GGS_L_expression_instructionsList_list &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_L_expression_instructionsList_list (void) ;

//--- Constructor 'empty'
  public : static GGS_L_expression_instructionsList_list constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_typeExpression & argument_0,
                                const GGS_typeInstructionsList & argument_1) ;
  protected : void internalAppendItem (const GGS_typeExpression & argument_0,
                                const GGS_typeInstructionsList & argument_1) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Map '@typeTableRoutinesAimplementer'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableRoutinesAimplementer ;

class GGS_typeTableRoutinesAimplementer : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeTableRoutinesAimplementer element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_typeTableRoutinesAimplementer * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_typeTableRoutinesAimplementer constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Map '@typeTableAttributsSemantiques'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableAttributsSemantiques ;

class GGS_typeTableAttributsSemantiques : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeTableAttributsSemantiques element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_typeTableAttributsSemantiques * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_typeTableAttributsSemantiques constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_typeCplusPlusName &  inParameter0,
                                const GGS_AC_galgasType &  inParameter1) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_typeCplusPlusName   & outParameter0,
                                GGS_AC_galgasType   & outParameter1) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_typeCplusPlusName & inParameter0,
                                  const GGS_AC_galgasType & inParameter1,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_typeCplusPlusName & outParameter0,
                                  GGS_AC_galgasType & outParameter1,
                                  GGS_luint * outIndex) ;
} ;

void routine_buildMapWithLocalConstants (C_Lexique &,
                                GGS_L_nameWithType  ,
                                GGS_typeListeAttributsSemantiques  ,
                                GGS_typeVariablesMap  &,
                                GGS_location  ,
                                GGS_localConstantBuildStyleEnum ,
                                GGS_bool ) ;

void routine_checkAssignmentTypesCompatibility (C_Lexique &,
                                GGS_AC_galgasType  ,
                                GGS_AC_galgasType  ,
                                GGS_location  ) ;

void routine_verifierCompatibiliteTypes (C_Lexique &,
                                GGS_typeSemanticsTypesList  ,
                                GGS_typeListeAttributsSemantiques  ,
                                const GGS_location  &) ;

void routine_verifierCompatibiliteArgEffectifsSignature (C_Lexique &,
                                GGS_L_signature  ,
                                GGS_L_actualParametersSignature  ,
                                const GGS_location  &,
                                GGS_typeInstructionsList  &,
                                GGS_typeExpressionList  &) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@L_matchInstructionCasesList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_matchInstructionCasesList ;

class GGS_L_matchInstructionCasesList {
  public : typedef elementOf_GGS_L_matchInstructionCasesList element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_L_matchInstructionCasesList (void) ; // Default Constructor
  public : GGS_L_matchInstructionCasesList (const GGS_L_matchInstructionCasesList &) ; // Copy constructor
  public : void operator = (const GGS_L_matchInstructionCasesList &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_L_matchInstructionCasesList (void) ;

//--- Constructor 'empty'
  public : static GGS_L_matchInstructionCasesList constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeInstructionsList & argument_2) ;
  protected : void internalAppendItem (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeInstructionsList & argument_2) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@foreachEnumerationList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_foreachEnumerationList ;

class GGS_foreachEnumerationList {
  public : typedef elementOf_GGS_foreachEnumerationList element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_foreachEnumerationList (void) ; // Default Constructor
  public : GGS_foreachEnumerationList (const GGS_foreachEnumerationList &) ; // Copy constructor
  public : void operator = (const GGS_foreachEnumerationList &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_foreachEnumerationList (void) ;

//--- Constructor 'empty'
  public : static GGS_foreachEnumerationList constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_typeCplusPlusName & argument_0,
                                const GGS_location & argument_1,
                                const GGS_string& argument_2) ;
  protected : void internalAppendItem (const GGS_typeCplusPlusName & argument_0,
                                const GGS_location & argument_1,
                                const GGS_string& argument_2) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  list '@typeStructuredExtractCasesList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeStructuredExtractCasesList ;

class GGS_typeStructuredExtractCasesList {
  public : typedef elementOf_GGS_typeStructuredExtractCasesList element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_typeStructuredExtractCasesList (void) ; // Default Constructor
  public : GGS_typeStructuredExtractCasesList (const GGS_typeStructuredExtractCasesList &) ; // Copy constructor
  public : void operator = (const GGS_typeStructuredExtractCasesList &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_typeStructuredExtractCasesList (void) ;

//--- Constructor 'empty'
  public : static GGS_typeStructuredExtractCasesList constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_location & argument_1,
                                const GGS_typeInstructionsList & argument_2,
                                const GGS_bool& argument_3) ;
  protected : void internalAppendItem (const GGS_lstring & argument_0,
                                const GGS_location & argument_1,
                                const GGS_typeInstructionsList & argument_2,
                                const GGS_bool& argument_3) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Map '@typeTableNomRoutinesDeclarees'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableNomRoutinesDeclarees ;

class GGS_typeTableNomRoutinesDeclarees : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeTableNomRoutinesDeclarees element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_typeTableNomRoutinesDeclarees * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_typeTableNomRoutinesDeclarees constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex) ;
} ;

class cPtr_typeEntityToGenerate ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeEntityToGenerate'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeEntityToGenerate {
  protected : cPtr_typeEntityToGenerate * mPointer ;
  public : GGS_typeEntityToGenerate (void) ;
  public : GGS_typeEntityToGenerate (const GGS_typeEntityToGenerate &) ;
  public : virtual ~GGS_typeEntityToGenerate (void) ;
  public : void operator = (const GGS_typeEntityToGenerate &) ;
  public : inline bool isBuilt (void) const { return mPointer != NULL ; }
  public : inline bool isEqualTo (const GGS_typeEntityToGenerate & operand_) const {
    return mPointer == operand_.mPointer ;
  }
  public : void operator = (cPtr_typeEntityToGenerate * inSource) ;
  public : GGS_typeEntityToGenerate (cPtr_typeEntityToGenerate * inSource) ;
  public : inline cPtr_typeEntityToGenerate * getPtr (void) const {
    return mPointer ;
  }
  public : void drop_operation (void) ;
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : cPtr_typeEntityToGenerate * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeEntityToGenerate * operator () (LOCATION_ARGS) const { return mPointer ; }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                             Map '@stateMap'                               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_stateMap ;

class GGS_stateMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_stateMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_stateMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_stateMap constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@typeEntitiesToGenerateList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeEntitiesToGenerateList ;

class GGS_typeEntitiesToGenerateList {
  public : typedef elementOf_GGS_typeEntitiesToGenerateList element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_typeEntitiesToGenerateList (void) ; // Default Constructor
  public : GGS_typeEntitiesToGenerateList (const GGS_typeEntitiesToGenerateList &) ; // Copy constructor
  public : void operator = (const GGS_typeEntitiesToGenerateList &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_typeEntitiesToGenerateList (void) ;

//--- Constructor 'empty'
  public : static GGS_typeEntitiesToGenerateList constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_typeEntityToGenerate & argument_0) ;
  protected : void internalAppendItem (const GGS_typeEntityToGenerate & argument_0) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

void routine_enterBuiltinTypes (C_Lexique &,
                                GGS_M_semanticsEntitiesForUse  &) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map '@typeEnumCstMessageStringMap'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeEnumCstMessageStringMap ;

class GGS_typeEnumCstMessageStringMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeEnumCstMessageStringMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_typeEnumCstMessageStringMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_typeEnumCstMessageStringMap constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lstring &  inParameter0) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lstring   & outParameter0) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_lstring & inParameter0,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_lstring & outParameter0,
                                  GGS_luint * outIndex) ;
} ;

void appendJokersIfNeeded (C_Lexique &,
                                GGS_typeCplusPlusNameList  &,
                                GGS_uint  ,
                                GGS_uint  ,
                                GGS_typeCplusPlusName  ) ;

#include "include_typeCplusPlusName.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                          class 'typeDirectName'                           *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeDirectName.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeDirectName'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeDirectName {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeDirectName * constructor_new (const GGS_lstring & argument_0) ;
  #else
    public : inline static cPtr_typeDirectName * constructor_new (const GGS_lstring & argument_0) {
      return new cPtr_typeDirectName(argument_0) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'typeCppThisName'                           *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeCppThisName.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeCppThisName'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeCppThisName {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeCppThisName * constructor_new () ;
  #else
    public : inline static cPtr_typeCppThisName * constructor_new () {
      return new cPtr_typeCppThisName() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       class 'typeCppInheritedName'                        *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeCppInheritedName.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeCppInheritedName'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeCppInheritedName {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeCppInheritedName * constructor_new () ;
  #else
    public : inline static cPtr_typeCppInheritedName * constructor_new () {
      return new cPtr_typeCppInheritedName() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeAutomaticName'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeAutomaticName.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeAutomaticName'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeAutomaticName {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeAutomaticName * constructor_new (const GGS_lstring & argument_0) ;
  #else
    public : inline static cPtr_typeAutomaticName * constructor_new (const GGS_lstring & argument_0) {
      return new cPtr_typeAutomaticName(argument_0) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    class 'typeLocationAutomaticName'                      *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeLocationAutomaticName.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeLocationAutomaticName'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeLocationAutomaticName {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeLocationAutomaticName * constructor_new (const GGS_location & argument_0) ;
  #else
    public : inline static cPtr_typeLocationAutomaticName * constructor_new (const GGS_location & argument_0) {
      return new cPtr_typeLocationAutomaticName(argument_0) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'typeOperandName'                           *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeOperandName.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeOperandName'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeOperandName {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeOperandName * constructor_new (const GGS_lstring & argument_0,
                                const GGS_location & argument_1,
                                const GGS_bool& argument_2) ;
  #else
    public : inline static cPtr_typeOperandName * constructor_new (const GGS_lstring & argument_0,
                                const GGS_location & argument_1,
                                const GGS_bool& argument_2) {
      return new cPtr_typeOperandName(argument_0,
                                argument_1,
                                argument_2) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           class 'typeKeyName'                             *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeKeyName.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_typeKeyName'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeKeyName {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeKeyName * constructor_new (const GGS_location & argument_0) ;
  #else
    public : inline static cPtr_typeKeyName * constructor_new (const GGS_location & argument_0) {
      return new cPtr_typeKeyName(argument_0) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           class 'typeNullName'                            *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeNullName.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_typeNullName'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeNullName {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeNullName * constructor_new () ;
  #else
    public : inline static cPtr_typeNullName * constructor_new () {
      return new cPtr_typeNullName() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@typeCplusPlusNameList'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeCplusPlusNameList {
  private : elementOf_GGS_typeCplusPlusNameList * mNextItem ;
    public : GGS_typeCplusPlusName  mCppName ;
  public : elementOf_GGS_typeCplusPlusNameList (const GGS_typeCplusPlusName & ) ;

  public : inline elementOf_GGS_typeCplusPlusNameList * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_typeCplusPlusNameList (const elementOf_GGS_typeCplusPlusNameList &) ;
  private : void operator = (const elementOf_GGS_typeCplusPlusNameList &) ;
  public : inline ~elementOf_GGS_typeCplusPlusNameList (void) {}
  friend class GGS_typeCplusPlusNameList ;
} ;

#include "include_typeExpression.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@typeClassMessagesMap'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeClassMessagesMap {
  public : GGS_lstring  mMessage ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeClassMessagesMap : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_typeClassMessagesMap (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_typeClassMessagesMap & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_typeClassMessagesMap * nextObject (void) const { return (elementOf_GGS_typeClassMessagesMap *) mNextItem ; }
    public : inline elementOf_GGS_typeClassMessagesMap * infObject (void) const { return (elementOf_GGS_typeClassMessagesMap *) mInfPtr ; }
    public : inline elementOf_GGS_typeClassMessagesMap * supObject (void) const { return (elementOf_GGS_typeClassMessagesMap *) mSupPtr ; }
  //--- Data members
    public : e_typeClassMessagesMap mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@typeSemanticsTypesList'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeSemanticsTypesList {
  private : elementOf_GGS_typeSemanticsTypesList * mNextItem ;
    public : GGS_AC_galgasType  mType ;
    public : GGS_lstring  mGalgasVariableName ;
  public : elementOf_GGS_typeSemanticsTypesList (const GGS_AC_galgasType & ,
                                const GGS_lstring & ) ;

  public : inline elementOf_GGS_typeSemanticsTypesList * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_typeSemanticsTypesList (const elementOf_GGS_typeSemanticsTypesList &) ;
  private : void operator = (const elementOf_GGS_typeSemanticsTypesList &) ;
  public : inline ~elementOf_GGS_typeSemanticsTypesList (void) {}
  friend class GGS_typeSemanticsTypesList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@L_assignedVariables'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_assignedVariables {
  private : elementOf_GGS_L_assignedVariables * mNextItem ;
    public : GGS_typeCplusPlusName  aNomVariableCible ;
    public : GGS_lstring  aNomAttributSource ;
  public : elementOf_GGS_L_assignedVariables (const GGS_typeCplusPlusName & ,
                                const GGS_lstring & ) ;

  public : inline elementOf_GGS_L_assignedVariables * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_assignedVariables (const elementOf_GGS_L_assignedVariables &) ;
  private : void operator = (const elementOf_GGS_L_assignedVariables &) ;
  public : inline ~elementOf_GGS_L_assignedVariables (void) {}
  friend class GGS_L_assignedVariables ;
} ;

#include "include_typeCible.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@typeListeCibles'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListeCibles {
  private : elementOf_GGS_typeListeCibles * mNextItem ;
    public : GGS_typeCible  aCible ;
  public : elementOf_GGS_typeListeCibles (const GGS_typeCible & ) ;

  public : inline elementOf_GGS_typeListeCibles * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_typeListeCibles (const elementOf_GGS_typeListeCibles &) ;
  private : void operator = (const elementOf_GGS_typeListeCibles &) ;
  public : inline ~elementOf_GGS_typeListeCibles (void) {}
  friend class GGS_typeListeCibles ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Element of list '@typeListeTypesEtNomsArgMethode'              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListeTypesEtNomsArgMethode {
  private : elementOf_GGS_typeListeTypesEtNomsArgMethode * mNextItem ;
    public : GGS_AC_galgasType  mType ;
    public : GGS_formalArgumentPassingMode mFormalArgumentPassingMode ;
    public : GGS_typeCplusPlusName  mCppName ;
    public : GGS_bool aModeIn ;
  public : elementOf_GGS_typeListeTypesEtNomsArgMethode (const GGS_AC_galgasType & ,
                                const GGS_formalArgumentPassingMode& ,
                                const GGS_typeCplusPlusName & ,
                                const GGS_bool& ) ;

  public : inline elementOf_GGS_typeListeTypesEtNomsArgMethode * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_typeListeTypesEtNomsArgMethode (const elementOf_GGS_typeListeTypesEtNomsArgMethode &) ;
  private : void operator = (const elementOf_GGS_typeListeTypesEtNomsArgMethode &) ;
  public : inline ~elementOf_GGS_typeListeTypesEtNomsArgMethode (void) {}
  friend class GGS_typeListeTypesEtNomsArgMethode ;
} ;

#include "include_typeInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@typeInstructionsList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeInstructionsList {
  private : elementOf_GGS_typeInstructionsList * mNextItem ;
    public : GGS_typeInstruction  aInstruction ;
  public : elementOf_GGS_typeInstructionsList (const GGS_typeInstruction & ) ;

  public : inline elementOf_GGS_typeInstructionsList * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_typeInstructionsList (const elementOf_GGS_typeInstructionsList &) ;
  private : void operator = (const elementOf_GGS_typeInstructionsList &) ;
  public : inline ~elementOf_GGS_typeInstructionsList (void) {}
  friend class GGS_typeInstructionsList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@L_nameWithType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_nameWithType {
  private : elementOf_GGS_L_nameWithType * mNextItem ;
    public : GGS_lstring  mType ;
    public : GGS_lstring  mName ;
  public : elementOf_GGS_L_nameWithType (const GGS_lstring & ,
                                const GGS_lstring & ) ;

  public : inline elementOf_GGS_L_nameWithType * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_nameWithType (const elementOf_GGS_L_nameWithType &) ;
  private : void operator = (const elementOf_GGS_L_nameWithType &) ;
  public : inline ~elementOf_GGS_L_nameWithType (void) {}
  friend class GGS_L_nameWithType ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@typeExpressionList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeExpressionList {
  private : elementOf_GGS_typeExpressionList * mNextItem ;
    public : GGS_typeExpression  mExpression ;
  public : elementOf_GGS_typeExpressionList (const GGS_typeExpression & ) ;

  public : inline elementOf_GGS_typeExpressionList * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_typeExpressionList (const elementOf_GGS_typeExpressionList &) ;
  private : void operator = (const elementOf_GGS_typeExpressionList &) ;
  public : inline ~elementOf_GGS_typeExpressionList (void) {}
  friend class GGS_typeExpressionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       class 'typeErrorInstruction'                        *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeErrorInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeErrorInstruction'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeErrorInstruction {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeErrorInstruction * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1) ;
  #else
    public : inline static cPtr_typeErrorInstruction * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1) {
      return new cPtr_typeErrorInstruction(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      class 'typeWarningInstruction'                       *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeWarningInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeWarningInstruction'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeWarningInstruction {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeWarningInstruction * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1) ;
  #else
    public : inline static cPtr_typeWarningInstruction * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1) {
      return new cPtr_typeWarningInstruction(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      class 'typeMessageInstruction'                       *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeMessageInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeMessageInstruction'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeMessageInstruction {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeMessageInstruction * constructor_new (const GGS_typeExpression & argument_0) ;
  #else
    public : inline static cPtr_typeMessageInstruction * constructor_new (const GGS_typeExpression & argument_0) {
      return new cPtr_typeMessageInstruction(argument_0) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    class 'typeReaderCallInstruction'                      *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeReaderCallInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeReaderCallInstruction'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeReaderCallInstruction {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeReaderCallInstruction * constructor_new (const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeExpressionList & argument_2) ;
  #else
    public : inline static cPtr_typeReaderCallInstruction * constructor_new (const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeExpressionList & argument_2) {
      return new cPtr_typeReaderCallInstruction(argument_0,
                                argument_1,
                                argument_2) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   class 'typeModifierCallInstruction'                     *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeModifierCallInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_typeModifierCallInstruction'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeModifierCallInstruction {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeModifierCallInstruction * constructor_new (const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeExpressionList & argument_2) ;
  #else
    public : inline static cPtr_typeModifierCallInstruction * constructor_new (const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeExpressionList & argument_2) {
      return new cPtr_typeModifierCallInstruction(argument_0,
                                argument_1,
                                argument_2) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 class 'typeInstructionAppelMethodeListe'                  *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeInstructionAppelMethodeListe.h"

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS class 'GGS_typeInstructionAppelMethodeListe'             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeInstructionAppelMethodeListe {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeInstructionAppelMethodeListe * constructor_new (const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeCplusPlusNameList & argument_2) ;
  #else
    public : inline static cPtr_typeInstructionAppelMethodeListe * constructor_new (const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeCplusPlusNameList & argument_2) {
      return new cPtr_typeInstructionAppelMethodeListe(argument_0,
                                argument_1,
                                argument_2) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               class 'typeInstructionDeclarationVarLocale'                 *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeInstructionDeclarationVarLocale.h"

//---------------------------------------------------------------------------*
//                                                                           *
//          GALGAS class 'GGS_typeInstructionDeclarationVarLocale'           *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeInstructionDeclarationVarLocale {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeInstructionDeclarationVarLocale * constructor_new (const GGS_typeCplusPlusName & argument_0,
                                const GGS_AC_galgasType & argument_1) ;
  #else
    public : inline static cPtr_typeInstructionDeclarationVarLocale * constructor_new (const GGS_typeCplusPlusName & argument_0,
                                const GGS_AC_galgasType & argument_1) {
      return new cPtr_typeInstructionDeclarationVarLocale(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 class 'typeMapBlockPrologueInstruction'                   *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeMapBlockPrologueInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_typeMapBlockPrologueInstruction'             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeMapBlockPrologueInstruction {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeMapBlockPrologueInstruction * constructor_new (const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeExpressionList & argument_2) ;
  #else
    public : inline static cPtr_typeMapBlockPrologueInstruction * constructor_new (const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeExpressionList & argument_2) {
      return new cPtr_typeMapBlockPrologueInstruction(argument_0,
                                argument_1,
                                argument_2) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 class 'typeMapBlockEpilogueInstruction'                   *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeMapBlockEpilogueInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_typeMapBlockEpilogueInstruction'             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeMapBlockEpilogueInstruction {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeMapBlockEpilogueInstruction * constructor_new (const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeExpressionList & argument_2) ;
  #else
    public : inline static cPtr_typeMapBlockEpilogueInstruction * constructor_new (const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeExpressionList & argument_2) {
      return new cPtr_typeMapBlockEpilogueInstruction(argument_0,
                                argument_1,
                                argument_2) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    class 'typeReaderCallInExpression'                     *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeReaderCallInExpression.h"

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_typeReaderCallInExpression'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeReaderCallInExpression {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeReaderCallInExpression * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeExpressionList & argument_2) ;
  #else
    public : inline static cPtr_typeReaderCallInExpression * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeExpressionList & argument_2) {
      return new cPtr_typeReaderCallInExpression(argument_0,
                                argument_1,
                                argument_2) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'typeAndOperation'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeAndOperation.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeAndOperation'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeAndOperation {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeAndOperation * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1) ;
  #else
    public : inline static cPtr_typeAndOperation * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1) {
      return new cPtr_typeAndOperation(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'typeOrOperation'                           *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeOrOperation.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeOrOperation'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeOrOperation {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeOrOperation * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1) ;
  #else
    public : inline static cPtr_typeOrOperation * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1) {
      return new cPtr_typeOrOperation(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeMinusOperation'                         *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeMinusOperation.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeMinusOperation'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeMinusOperation {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeMinusOperation * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1) ;
  #else
    public : inline static cPtr_typeMinusOperation * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1) {
      return new cPtr_typeMinusOperation(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       class 'typeConcatOperation'                         *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeConcatOperation.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeConcatOperation'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeConcatOperation {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeConcatOperation * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1) ;
  #else
    public : inline static cPtr_typeConcatOperation * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1) {
      return new cPtr_typeConcatOperation(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           class 'typeTrueBool'                            *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeTrueBool.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_typeTrueBool'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeTrueBool {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeTrueBool * constructor_new () ;
  #else
    public : inline static cPtr_typeTrueBool * constructor_new () {
      return new cPtr_typeTrueBool() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          class 'typeFalseBool'                            *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeFalseBool.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_typeFalseBool'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeFalseBool {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeFalseBool * constructor_new () ;
  #else
    public : inline static cPtr_typeFalseBool * constructor_new () {
      return new cPtr_typeFalseBool() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   class 'typeLiteralStringExpression'                     *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeLiteralStringExpression.h"

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_typeLiteralStringExpression'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeLiteralStringExpression {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeLiteralStringExpression * constructor_new (const GGS_lstring & argument_0) ;
  #else
    public : inline static cPtr_typeLiteralStringExpression * constructor_new (const GGS_lstring & argument_0) {
      return new cPtr_typeLiteralStringExpression(argument_0) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    class 'typeLiteralUIntExpression'                      *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeLiteralUIntExpression.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeLiteralUIntExpression'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeLiteralUIntExpression {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeLiteralUIntExpression * constructor_new (const GGS_luint & argument_0) ;
  #else
    public : inline static cPtr_typeLiteralUIntExpression * constructor_new (const GGS_luint & argument_0) {
      return new cPtr_typeLiteralUIntExpression(argument_0) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    class 'typeLiteralSIntExpression'                      *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeLiteralSIntExpression.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeLiteralSIntExpression'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeLiteralSIntExpression {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeLiteralSIntExpression * constructor_new (const GGS_lsint & argument_0) ;
  #else
    public : inline static cPtr_typeLiteralSIntExpression * constructor_new (const GGS_lsint & argument_0) {
      return new cPtr_typeLiteralSIntExpression(argument_0) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    class 'typeLiteralCharExpression'                      *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeLiteralCharExpression.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeLiteralCharExpression'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeLiteralCharExpression {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeLiteralCharExpression * constructor_new (const GGS_lchar & argument_0) ;
  #else
    public : inline static cPtr_typeLiteralCharExpression * constructor_new (const GGS_lchar & argument_0) {
      return new cPtr_typeLiteralCharExpression(argument_0) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeHereExpression'                         *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeHereExpression.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeHereExpression'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeHereExpression {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeHereExpression * constructor_new () ;
  #else
    public : inline static cPtr_typeHereExpression * constructor_new () {
      return new cPtr_typeHereExpression() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    class 'typeConstructorExpression'                      *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeConstructorExpression.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeConstructorExpression'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeConstructorExpression {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeConstructorExpression * constructor_new (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeExpressionList & argument_2) ;
  #else
    public : inline static cPtr_typeConstructorExpression * constructor_new (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeExpressionList & argument_2) {
      return new cPtr_typeConstructorExpression(argument_0,
                                argument_1,
                                argument_2) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeTestComplement'                         *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeTestComplement.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeTestComplement'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeTestComplement {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeTestComplement * constructor_new (const GGS_typeExpression & argument_0) ;
  #else
    public : inline static cPtr_typeTestComplement * constructor_new (const GGS_typeExpression & argument_0) {
      return new cPtr_typeTestComplement(argument_0) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          class 'typeBoolOption'                           *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeBoolOption.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeBoolOption'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeBoolOption {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeBoolOption * constructor_new (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
  #else
    public : inline static cPtr_typeBoolOption * constructor_new (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) {
      return new cPtr_typeBoolOption(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          class 'typeUIntOption'                           *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeUIntOption.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeUIntOption'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeUIntOption {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeUIntOption * constructor_new (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
  #else
    public : inline static cPtr_typeUIntOption * constructor_new (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) {
      return new cPtr_typeUIntOption(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'typeStringOption'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeStringOption.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeStringOption'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeStringOption {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeStringOption * constructor_new (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
  #else
    public : inline static cPtr_typeStringOption * constructor_new (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) {
      return new cPtr_typeStringOption(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       class 'typeVarInExpression'                         *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeVarInExpression.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeVarInExpression'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeVarInExpression {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeVarInExpression * constructor_new (const GGS_typeCplusPlusName & argument_0) ;
  #else
    public : inline static cPtr_typeVarInExpression * constructor_new (const GGS_typeCplusPlusName & argument_0) {
      return new cPtr_typeVarInExpression(argument_0) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      class 'typeJokerInExpression'                        *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeJokerInExpression.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeJokerInExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeJokerInExpression {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeJokerInExpression * constructor_new (const GGS_location & argument_0) ;
  #else
    public : inline static cPtr_typeJokerInExpression * constructor_new (const GGS_location & argument_0) {
      return new cPtr_typeJokerInExpression(argument_0) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          class 'typeEqualTest'                            *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeEqualTest.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_typeEqualTest'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeEqualTest {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeEqualTest * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1) ;
  #else
    public : inline static cPtr_typeEqualTest * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1) {
      return new cPtr_typeEqualTest(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'typeNonEqualTest'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeNonEqualTest.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeNonEqualTest'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeNonEqualTest {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeNonEqualTest * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1) ;
  #else
    public : inline static cPtr_typeNonEqualTest * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1) {
      return new cPtr_typeNonEqualTest(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeStrictInfTest'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeStrictInfTest.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeStrictInfTest'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeStrictInfTest {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeStrictInfTest * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1) ;
  #else
    public : inline static cPtr_typeStrictInfTest * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1) {
      return new cPtr_typeStrictInfTest(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeInfOrEqualTest'                         *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeInfOrEqualTest.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeInfOrEqualTest'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeInfOrEqualTest {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeInfOrEqualTest * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1) ;
  #else
    public : inline static cPtr_typeInfOrEqualTest * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1) {
      return new cPtr_typeInfOrEqualTest(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeStrictSupTest'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeStrictSupTest.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeStrictSupTest'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeStrictSupTest {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeStrictSupTest * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1) ;
  #else
    public : inline static cPtr_typeStrictSupTest * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1) {
      return new cPtr_typeStrictSupTest(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeSupOrEqualTest'                         *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeSupOrEqualTest.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeSupOrEqualTest'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeSupOrEqualTest {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeSupOrEqualTest * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1) ;
  #else
    public : inline static cPtr_typeSupOrEqualTest * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1) {
      return new cPtr_typeSupOrEqualTest(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeTextTableCall'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeTextTableCall.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeTextTableCall'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeTextTableCall {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeTextTableCall * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeCplusPlusName & argument_2) ;
  #else
    public : inline static cPtr_typeTextTableCall * constructor_new (const GGS_typeExpression & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeCplusPlusName & argument_2) {
      return new cPtr_typeTextTableCall(argument_0,
                                argument_1,
                                argument_2) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     class 'C_assignmentInstruction'                       *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_C_assignmentInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_C_assignmentInstruction'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_C_assignmentInstruction {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_C_assignmentInstruction * constructor_new (const GGS_typeCplusPlusName & argument_0,
                                const GGS_typeExpression & argument_1) ;
  #else
    public : inline static cPtr_C_assignmentInstruction * constructor_new (const GGS_typeCplusPlusName & argument_0,
                                const GGS_typeExpression & argument_1) {
      return new cPtr_C_assignmentInstruction(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              class 'C_declarationInstructionWithAssignment'               *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_C_declarationInstructionWithAssignment.h"

//---------------------------------------------------------------------------*
//                                                                           *
//        GALGAS class 'GGS_C_declarationInstructionWithAssignment'          *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_C_declarationInstructionWithAssignment {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_C_declarationInstructionWithAssignment * constructor_new (const GGS_AC_galgasType & argument_0,
                                const GGS_typeCplusPlusName & argument_1,
                                const GGS_typeExpression & argument_2) ;
  #else
    public : inline static cPtr_C_declarationInstructionWithAssignment * constructor_new (const GGS_AC_galgasType & argument_0,
                                const GGS_typeCplusPlusName & argument_1,
                                const GGS_typeExpression & argument_2) {
      return new cPtr_C_declarationInstructionWithAssignment(argument_0,
                                argument_1,
                                argument_2) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Element of list '@L_expression_instructionsList_list'            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_expression_instructionsList_list {
  private : elementOf_GGS_L_expression_instructionsList_list * mNextItem ;
    public : GGS_typeExpression  mIFexpression ;
    public : GGS_typeInstructionsList  mInstructionsList ;
  public : elementOf_GGS_L_expression_instructionsList_list (const GGS_typeExpression & ,
                                const GGS_typeInstructionsList & ) ;

  public : inline elementOf_GGS_L_expression_instructionsList_list * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_expression_instructionsList_list (const elementOf_GGS_L_expression_instructionsList_list &) ;
  private : void operator = (const elementOf_GGS_L_expression_instructionsList_list &) ;
  public : inline ~elementOf_GGS_L_expression_instructionsList_list (void) {}
  friend class GGS_L_expression_instructionsList_list ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'C_if_instruction'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_C_if_instruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_C_if_instruction'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_C_if_instruction {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_C_if_instruction * constructor_new (const GGS_L_expression_instructionsList_list & argument_0,
                                const GGS_typeInstructionsList & argument_1) ;
  #else
    public : inline static cPtr_C_if_instruction * constructor_new (const GGS_L_expression_instructionsList_list & argument_0,
                                const GGS_typeInstructionsList & argument_1) {
      return new cPtr_C_if_instruction(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of map '@typeTableRoutinesAimplementer'               *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeTableRoutinesAimplementer {
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableRoutinesAimplementer : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_typeTableRoutinesAimplementer (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_typeTableRoutinesAimplementer & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_typeTableRoutinesAimplementer * nextObject (void) const { return (elementOf_GGS_typeTableRoutinesAimplementer *) mNextItem ; }
    public : inline elementOf_GGS_typeTableRoutinesAimplementer * infObject (void) const { return (elementOf_GGS_typeTableRoutinesAimplementer *) mInfPtr ; }
    public : inline elementOf_GGS_typeTableRoutinesAimplementer * supObject (void) const { return (elementOf_GGS_typeTableRoutinesAimplementer *) mSupPtr ; }
  //--- Data members
    public : e_typeTableRoutinesAimplementer mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//             Element of map '@typeTableAttributsSemantiques'               *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeTableAttributsSemantiques {
  public : GGS_typeCplusPlusName  aNomCppAttribut ;
  public : GGS_AC_galgasType  mAttributType ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableAttributsSemantiques : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_typeTableAttributsSemantiques (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_typeTableAttributsSemantiques & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_typeTableAttributsSemantiques * nextObject (void) const { return (elementOf_GGS_typeTableAttributsSemantiques *) mNextItem ; }
    public : inline elementOf_GGS_typeTableAttributsSemantiques * infObject (void) const { return (elementOf_GGS_typeTableAttributsSemantiques *) mInfPtr ; }
    public : inline elementOf_GGS_typeTableAttributsSemantiques * supObject (void) const { return (elementOf_GGS_typeTableAttributsSemantiques *) mSupPtr ; }
  //--- Data members
    public : e_typeTableAttributsSemantiques mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//                            class 'typeJoker'                              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeJoker.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_typeJoker'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeJoker {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeJoker * constructor_new () ;
  #else
    public : inline static cPtr_typeJoker * constructor_new () {
      return new cPtr_typeJoker() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          class 'typeEntiteDest'                           *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeEntiteDest.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeEntiteDest'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeEntiteDest {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeEntiteDest * constructor_new (const GGS_AC_galgasType & argument_0,
                                const GGS_typeCplusPlusName & argument_1,
                                const GGS_location & argument_2) ;
  #else
    public : inline static cPtr_typeEntiteDest * constructor_new (const GGS_AC_galgasType & argument_0,
                                const GGS_typeCplusPlusName & argument_1,
                                const GGS_location & argument_2) {
      return new cPtr_typeEntiteDest(argument_0,
                                argument_1,
                                argument_2) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      class 'typeEntiteNonTerminal'                        *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeEntiteNonTerminal.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeEntiteNonTerminal'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeEntiteNonTerminal {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeEntiteNonTerminal * constructor_new (const GGS_M_nonterminalSymbolAlts & argument_0) ;
  #else
    public : inline static cPtr_typeEntiteNonTerminal * constructor_new (const GGS_M_nonterminalSymbolAlts & argument_0) {
      return new cPtr_typeEntiteNonTerminal(argument_0) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       class 'C_grammarInstruction'                        *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_C_grammarInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_C_grammarInstruction'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_C_grammarInstruction {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_C_grammarInstruction * constructor_new (const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeExpressionList & argument_2,
                                const GGS_lstring & argument_3) ;
  #else
    public : inline static cPtr_C_grammarInstruction * constructor_new (const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeExpressionList & argument_2,
                                const GGS_lstring & argument_3) {
      return new cPtr_C_grammarInstruction(argument_0,
                                argument_1,
                                argument_2,
                                argument_3) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      class 'typeAppendInstruction'                        *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeAppendInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeAppendInstruction'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeAppendInstruction {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeAppendInstruction * constructor_new (const GGS_typeCplusPlusName & argument_0,
                                const GGS_typeExpressionList & argument_1) ;
  #else
    public : inline static cPtr_typeAppendInstruction * constructor_new (const GGS_typeCplusPlusName & argument_0,
                                const GGS_typeExpressionList & argument_1) {
      return new cPtr_typeAppendInstruction(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     class 'typeIncrementInstruction'                      *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeIncrementInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeIncrementInstruction'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeIncrementInstruction {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeIncrementInstruction * constructor_new (const GGS_typeCplusPlusName & argument_0) ;
  #else
    public : inline static cPtr_typeIncrementInstruction * constructor_new (const GGS_typeCplusPlusName & argument_0) {
      return new cPtr_typeIncrementInstruction(argument_0) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               class 'typeAppendInstructionWithAssignment'                 *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeAppendInstructionWithAssignment.h"

//---------------------------------------------------------------------------*
//                                                                           *
//          GALGAS class 'GGS_typeAppendInstructionWithAssignment'           *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeAppendInstructionWithAssignment {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeAppendInstructionWithAssignment * constructor_new (const GGS_typeCplusPlusName & argument_0,
                                const GGS_typeExpressionList & argument_1,
                                const GGS_typeCplusPlusName & argument_2) ;
  #else
    public : inline static cPtr_typeAppendInstructionWithAssignment * constructor_new (const GGS_typeCplusPlusName & argument_0,
                                const GGS_typeExpressionList & argument_1,
                                const GGS_typeCplusPlusName & argument_2) {
      return new cPtr_typeAppendInstructionWithAssignment(argument_0,
                                argument_1,
                                argument_2) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                class 'typeInstructionAppelActionExterne'                  *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeInstructionAppelActionExterne.h"

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS class 'GGS_typeInstructionAppelActionExterne'            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeInstructionAppelActionExterne {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeInstructionAppelActionExterne * constructor_new (const GGS_lstring & argument_0,
                                const GGS_typeExpressionList & argument_1,
                                const GGS_L_signature & argument_2) ;
  #else
    public : inline static cPtr_typeInstructionAppelActionExterne * constructor_new (const GGS_lstring & argument_0,
                                const GGS_typeExpressionList & argument_1,
                                const GGS_L_signature & argument_2) {
      return new cPtr_typeInstructionAppelActionExterne(argument_0,
                                argument_1,
                                argument_2) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@L_matchInstructionCasesList'               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_matchInstructionCasesList {
  private : elementOf_GGS_L_matchInstructionCasesList * mNextItem ;
    public : GGS_lstring  mCase1_name ;
    public : GGS_lstring  mCase2_name ;
    public : GGS_typeInstructionsList  mInstructionsList ;
  public : elementOf_GGS_L_matchInstructionCasesList (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_typeInstructionsList & ) ;

  public : inline elementOf_GGS_L_matchInstructionCasesList * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_matchInstructionCasesList (const elementOf_GGS_L_matchInstructionCasesList &) ;
  private : void operator = (const elementOf_GGS_L_matchInstructionCasesList &) ;
  public : inline ~elementOf_GGS_L_matchInstructionCasesList (void) {}
  friend class GGS_L_matchInstructionCasesList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       class 'typeMatchInstruction'                        *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeMatchInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeMatchInstruction'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeMatchInstruction {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeMatchInstruction * constructor_new (const GGS_location & argument_0,
                                const GGS_location & argument_1,
                                const GGS_typeCplusPlusName & argument_2,
                                const GGS_typeCplusPlusName & argument_3,
                                const GGS_lstring & argument_4,
                                const GGS_lstring & argument_5,
                                const GGS_bool& argument_6,
                                const GGS_bool& argument_7,
                                const GGS_L_matchInstructionCasesList & argument_8,
                                const GGS_typeInstructionsList & argument_9) ;
  #else
    public : inline static cPtr_typeMatchInstruction * constructor_new (const GGS_location & argument_0,
                                const GGS_location & argument_1,
                                const GGS_typeCplusPlusName & argument_2,
                                const GGS_typeCplusPlusName & argument_3,
                                const GGS_lstring & argument_4,
                                const GGS_lstring & argument_5,
                                const GGS_bool& argument_6,
                                const GGS_bool& argument_7,
                                const GGS_L_matchInstructionCasesList & argument_8,
                                const GGS_typeInstructionsList & argument_9) {
      return new cPtr_typeMatchInstruction(argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4,
                                argument_5,
                                argument_6,
                                argument_7,
                                argument_8,
                                argument_9) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@foreachEnumerationList'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_foreachEnumerationList {
  private : elementOf_GGS_foreachEnumerationList * mNextItem ;
    public : GGS_typeCplusPlusName  mCppEnumeratedVariableName ;
    public : GGS_location  mLocationOffset ;
    public : GGS_string mCppTypeName ;
  public : elementOf_GGS_foreachEnumerationList (const GGS_typeCplusPlusName & ,
                                const GGS_location & ,
                                const GGS_string& ) ;

  public : inline elementOf_GGS_foreachEnumerationList * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_foreachEnumerationList (const elementOf_GGS_foreachEnumerationList &) ;
  private : void operator = (const elementOf_GGS_foreachEnumerationList &) ;
  public : inline ~elementOf_GGS_foreachEnumerationList (void) {}
  friend class GGS_foreachEnumerationList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      class 'typeForeachInstruction'                       *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeForeachInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeForeachInstruction'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeForeachInstruction {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeForeachInstruction * constructor_new (const GGS_foreachEnumerationList & argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_typeInstructionsList & argument_2) ;
  #else
    public : inline static cPtr_typeForeachInstruction * constructor_new (const GGS_foreachEnumerationList & argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_typeInstructionsList & argument_2) {
      return new cPtr_typeForeachInstruction(argument_0,
                                argument_1,
                                argument_2) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   class 'typeSimpleExtractInstruction'                    *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeSimpleExtractInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_typeSimpleExtractInstruction'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeSimpleExtractInstruction {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeSimpleExtractInstruction * constructor_new (const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_L_assignedVariables & argument_2,
                                const GGS_typeExpression & argument_3,
                                const GGS_lstring & argument_4) ;
  #else
    public : inline static cPtr_typeSimpleExtractInstruction * constructor_new (const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_L_assignedVariables & argument_2,
                                const GGS_typeExpression & argument_3,
                                const GGS_lstring & argument_4) {
      return new cPtr_typeSimpleExtractInstruction(argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Element of list '@typeStructuredExtractCasesList'              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeStructuredExtractCasesList {
  private : elementOf_GGS_typeStructuredExtractCasesList * mNextItem ;
    public : GGS_lstring  mClassName ;
    public : GGS_location  mResultVarID ;
    public : GGS_typeInstructionsList  mInstructionsList ;
    public : GGS_bool mNoUsedParameter ;
  public : elementOf_GGS_typeStructuredExtractCasesList (const GGS_lstring & ,
                                const GGS_location & ,
                                const GGS_typeInstructionsList & ,
                                const GGS_bool& ) ;

  public : inline elementOf_GGS_typeStructuredExtractCasesList * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_typeStructuredExtractCasesList (const elementOf_GGS_typeStructuredExtractCasesList &) ;
  private : void operator = (const elementOf_GGS_typeStructuredExtractCasesList &) ;
  public : inline ~elementOf_GGS_typeStructuredExtractCasesList (void) {}
  friend class GGS_typeStructuredExtractCasesList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             class 'typeStructuredExtractInstructionWithElse'              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeStructuredExtractInstructionWithElse.h"

//---------------------------------------------------------------------------*
//                                                                           *
//       GALGAS class 'GGS_typeStructuredExtractInstructionWithElse'         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeStructuredExtractInstructionWithElse {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeStructuredExtractInstructionWithElse * constructor_new (const GGS_typeCplusPlusName & argument_0,
                                const GGS_typeStructuredExtractCasesList & argument_1,
                                const GGS_typeInstructionsList & argument_2) ;
  #else
    public : inline static cPtr_typeStructuredExtractInstructionWithElse * constructor_new (const GGS_typeCplusPlusName & argument_0,
                                const GGS_typeStructuredExtractCasesList & argument_1,
                                const GGS_typeInstructionsList & argument_2) {
      return new cPtr_typeStructuredExtractInstructionWithElse(argument_0,
                                argument_1,
                                argument_2) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    class 'typeRoutineCallInstruction'                     *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeRoutineCallInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_typeRoutineCallInstruction'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeRoutineCallInstruction {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeRoutineCallInstruction * constructor_new (const GGS_lstring & argument_0,
                                const GGS_typeExpressionList & argument_1) ;
  #else
    public : inline static cPtr_typeRoutineCallInstruction * constructor_new (const GGS_lstring & argument_0,
                                const GGS_typeExpressionList & argument_1) {
      return new cPtr_typeRoutineCallInstruction(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       class 'typeDropInstruction'                         *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeDropInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeDropInstruction'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeDropInstruction {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeDropInstruction * constructor_new (const GGS_typeCplusPlusName & argument_0) ;
  #else
    public : inline static cPtr_typeDropInstruction * constructor_new (const GGS_typeCplusPlusName & argument_0) {
      return new cPtr_typeDropInstruction(argument_0) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of map '@typeTableNomRoutinesDeclarees'               *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeTableNomRoutinesDeclarees {
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableNomRoutinesDeclarees : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_typeTableNomRoutinesDeclarees (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_typeTableNomRoutinesDeclarees & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_typeTableNomRoutinesDeclarees * nextObject (void) const { return (elementOf_GGS_typeTableNomRoutinesDeclarees *) mNextItem ; }
    public : inline elementOf_GGS_typeTableNomRoutinesDeclarees * infObject (void) const { return (elementOf_GGS_typeTableNomRoutinesDeclarees *) mInfPtr ; }
    public : inline elementOf_GGS_typeTableNomRoutinesDeclarees * supObject (void) const { return (elementOf_GGS_typeTableNomRoutinesDeclarees *) mSupPtr ; }
  //--- Data members
    public : e_typeTableNomRoutinesDeclarees mInfo ;
} ;
#include "include_typeEntityToGenerate.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                     class 'typeExternTypeToGenerate'                      *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeExternTypeToGenerate.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeExternTypeToGenerate'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeExternTypeToGenerate {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeExternTypeToGenerate * constructor_new (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
  #else
    public : inline static cPtr_typeExternTypeToGenerate * constructor_new (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) {
      return new cPtr_typeExternTypeToGenerate(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      class 'typeRoutineAengendrer'                        *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeRoutineAengendrer.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeRoutineAengendrer'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeRoutineAengendrer {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeRoutineAengendrer * constructor_new (const GGS_lstring & argument_0,
                                const GGS_typeListeTypesEtNomsArgMethode & argument_1,
                                const GGS_typeInstructionsList & argument_2) ;
  #else
    public : inline static cPtr_typeRoutineAengendrer * constructor_new (const GGS_lstring & argument_0,
                                const GGS_typeListeTypesEtNomsArgMethode & argument_1,
                                const GGS_typeInstructionsList & argument_2) {
      return new cPtr_typeRoutineAengendrer(argument_0,
                                argument_1,
                                argument_2) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      class 'C_listTypeToImplement'                        *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_C_listTypeToImplement.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_C_listTypeToImplement'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_C_listTypeToImplement {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_C_listTypeToImplement * constructor_new (const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_L_nameWithType & argument_2) ;
  #else
    public : inline static cPtr_C_listTypeToImplement * constructor_new (const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_L_nameWithType & argument_2) {
      return new cPtr_C_listTypeToImplement(argument_0,
                                argument_1,
                                argument_2) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 class 'typeDefinitionTableAimplementer'                   *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeDefinitionTableAimplementer.h"

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_typeDefinitionTableAimplementer'             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeDefinitionTableAimplementer {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeDefinitionTableAimplementer * constructor_new (const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_L_nameWithType & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_insertOrSearchMethodList & argument_4,
                                const GGS_insertOrSearchMethodList & argument_5,
                                const GGS_typeTableBlocsDeTable & argument_6) ;
  #else
    public : inline static cPtr_typeDefinitionTableAimplementer * constructor_new (const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_L_nameWithType & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_insertOrSearchMethodList & argument_4,
                                const GGS_insertOrSearchMethodList & argument_5,
                                const GGS_typeTableBlocsDeTable & argument_6) {
      return new cPtr_typeDefinitionTableAimplementer(argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4,
                                argument_5,
                                argument_6) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Element of map '@stateMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class e_stateMap {
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_stateMap : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_stateMap (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_stateMap & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_stateMap * nextObject (void) const { return (elementOf_GGS_stateMap *) mNextItem ; }
    public : inline elementOf_GGS_stateMap * infObject (void) const { return (elementOf_GGS_stateMap *) mInfPtr ; }
    public : inline elementOf_GGS_stateMap * supObject (void) const { return (elementOf_GGS_stateMap *) mSupPtr ; }
  //--- Data members
    public : e_stateMap mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'C_mapToImplement'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_C_mapToImplement.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_C_mapToImplement'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_C_mapToImplement {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_C_mapToImplement * constructor_new (const GGS_stateMap & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeListeAttributsSemantiques & argument_2,
                                const GGS_L_nameWithType & argument_3,
                                const GGS_insertOrSearchMethodList & argument_4,
                                const GGS_insertOrSearchMethodList & argument_5) ;
  #else
    public : inline static cPtr_C_mapToImplement * constructor_new (const GGS_stateMap & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeListeAttributsSemantiques & argument_2,
                                const GGS_L_nameWithType & argument_3,
                                const GGS_insertOrSearchMethodList & argument_4,
                                const GGS_insertOrSearchMethodList & argument_5) {
      return new cPtr_C_mapToImplement(argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4,
                                argument_5) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                class 'typeDefClasseAbstraiteAimplementer'                 *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeDefClasseAbstraiteAimplementer.h"

//---------------------------------------------------------------------------*
//                                                                           *
//          GALGAS class 'GGS_typeDefClasseAbstraiteAimplementer'            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeDefClasseAbstraiteAimplementer {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeDefClasseAbstraiteAimplementer * constructor_new (const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_typeTableMethodes & argument_2,
                                const GGS_typeTableMethodesAimplementer & argument_3,
                                const GGS_typeListeAttributsSemantiques & argument_4,
                                const GGS_L_nameWithType & argument_5,
                                const GGS_typeSuperClassesMap & argument_6,
                                const GGS_typeClassMessagesMap & argument_7) ;
  #else
    public : inline static cPtr_typeDefClasseAbstraiteAimplementer * constructor_new (const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_typeTableMethodes & argument_2,
                                const GGS_typeTableMethodesAimplementer & argument_3,
                                const GGS_typeListeAttributsSemantiques & argument_4,
                                const GGS_L_nameWithType & argument_5,
                                const GGS_typeSuperClassesMap & argument_6,
                                const GGS_typeClassMessagesMap & argument_7) {
      return new cPtr_typeDefClasseAbstraiteAimplementer(argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4,
                                argument_5,
                                argument_6,
                                argument_7) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              class 'typeDefClasseNonAbstraiteAimplementer'                *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeDefClasseNonAbstraiteAimplementer.h"

//---------------------------------------------------------------------------*
//                                                                           *
//         GALGAS class 'GGS_typeDefClasseNonAbstraiteAimplementer'          *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeDefClasseNonAbstraiteAimplementer {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeDefClasseNonAbstraiteAimplementer * constructor_new (const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_typeTableMethodes & argument_2,
                                const GGS_typeTableMethodesAimplementer & argument_3,
                                const GGS_typeListeAttributsSemantiques & argument_4,
                                const GGS_L_nameWithType & argument_5,
                                const GGS_typeSuperClassesMap & argument_6,
                                const GGS_typeClassMessagesMap & argument_7) ;
  #else
    public : inline static cPtr_typeDefClasseNonAbstraiteAimplementer * constructor_new (const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_typeTableMethodes & argument_2,
                                const GGS_typeTableMethodesAimplementer & argument_3,
                                const GGS_typeListeAttributsSemantiques & argument_4,
                                const GGS_L_nameWithType & argument_5,
                                const GGS_typeSuperClassesMap & argument_6,
                                const GGS_typeClassMessagesMap & argument_7) {
      return new cPtr_typeDefClasseNonAbstraiteAimplementer(argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4,
                                argument_5,
                                argument_6,
                                argument_7) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     class 'typeEntiteActionExterne'                       *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeEntiteActionExterne.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeEntiteActionExterne'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeEntiteActionExterne {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeEntiteActionExterne * constructor_new (const GGS_L_signature & argument_0) ;
  #else
    public : inline static cPtr_typeEntiteActionExterne * constructor_new (const GGS_L_signature & argument_0) {
      return new cPtr_typeEntiteActionExterne(argument_0) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   class 'typeActionExterneAengendrer'                     *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeActionExterneAengendrer.h"

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_typeActionExterneAengendrer'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeActionExterneAengendrer {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeActionExterneAengendrer * constructor_new (const GGS_lstring & argument_0,
                                const GGS_L_signature & argument_1) ;
  #else
    public : inline static cPtr_typeActionExterneAengendrer * constructor_new (const GGS_lstring & argument_0,
                                const GGS_L_signature & argument_1) {
      return new cPtr_typeActionExterneAengendrer(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@typeEntitiesToGenerateList'                *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeEntitiesToGenerateList {
  private : elementOf_GGS_typeEntitiesToGenerateList * mNextItem ;
    public : GGS_typeEntityToGenerate  mEntityToGenerate ;
  public : elementOf_GGS_typeEntitiesToGenerateList (const GGS_typeEntityToGenerate & ) ;

  public : inline elementOf_GGS_typeEntitiesToGenerateList * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_typeEntitiesToGenerateList (const elementOf_GGS_typeEntitiesToGenerateList &) ;
  private : void operator = (const elementOf_GGS_typeEntitiesToGenerateList &) ;
  public : inline ~elementOf_GGS_typeEntitiesToGenerateList (void) {}
  friend class GGS_typeEntitiesToGenerateList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of map '@typeEnumCstMessageStringMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeEnumCstMessageStringMap {
  public : GGS_lstring  mMessageString ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeEnumCstMessageStringMap : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_typeEnumCstMessageStringMap (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_typeEnumCstMessageStringMap & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_typeEnumCstMessageStringMap * nextObject (void) const { return (elementOf_GGS_typeEnumCstMessageStringMap *) mNextItem ; }
    public : inline elementOf_GGS_typeEnumCstMessageStringMap * infObject (void) const { return (elementOf_GGS_typeEnumCstMessageStringMap *) mInfPtr ; }
    public : inline elementOf_GGS_typeEnumCstMessageStringMap * supObject (void) const { return (elementOf_GGS_typeEnumCstMessageStringMap *) mSupPtr ; }
  //--- Data members
    public : e_typeEnumCstMessageStringMap mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//                          class 'enumGalgasType'                           *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_enumGalgasType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_enumGalgasType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_enumGalgasType {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_enumGalgasType * constructor_new (const GGS_lstring & argument_0,
                                const GGS_typeEnumConstantesMap & argument_1,
                                const GGS_typeEnumMessageMap & argument_2) ;
  #else
    public : inline static cPtr_enumGalgasType * constructor_new (const GGS_lstring & argument_0,
                                const GGS_typeEnumConstantesMap & argument_1,
                                const GGS_typeEnumMessageMap & argument_2) {
      return new cPtr_enumGalgasType(argument_0,
                                argument_1,
                                argument_2) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*

#endif
