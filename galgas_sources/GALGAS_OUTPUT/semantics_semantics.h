//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'semantics_semantics.h'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     october 28th, 2010, at 19h28'7"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef semantics_semantics_DEFINED
#define semantics_semantics_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

// Include imported semantics
#include "common_semantics.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeCplusPlusNameList ;
class GGS_typeClassMessagesMap ;
class GGS_typeSemanticsTypesList ;
class GGS_typeVariablesMap ;
#include "cGalgasVariablesMap.h"
class GGS_L_assignedVariables ;
class GGS_typeCible ;
class cPtr_typeCible ;
class GGS_typeListeCibles ;
class GGS_L_nameWithType ;
class GGS_typeTableMethodesAimplementer ;
#include "cTableMethodesAimplementer.h"
class GGS_typeExpressionList ;
class GGS_varToDropList ;
class GGS_typeErrorInstruction ;
class cPtr_typeErrorInstruction ;
class GGS_typeSendInstruction ;
class cPtr_typeSendInstruction ;
class GGS_typeWithInstruction ;
class cPtr_typeWithInstruction ;
class GGS_typeWarningInstruction ;
class cPtr_typeWarningInstruction ;
class GGS_typeMessageInstruction ;
class cPtr_typeMessageInstruction ;
class GGS_typeMethodCallInstruction ;
class cPtr_typeMethodCallInstruction ;
class GGS_typeCallOfTypeMethodInstruction ;
class cPtr_typeCallOfTypeMethodInstruction ;
class GGS_typeModifierCallInstruction ;
class cPtr_typeModifierCallInstruction ;
class GGS_typeInstructionAppelMethodeListe ;
class cPtr_typeInstructionAppelMethodeListe ;
class GGS_typeInstructionDeclarationVarLocale ;
class cPtr_typeInstructionDeclarationVarLocale ;
class GGS_typeMapBlockPrologueInstruction ;
class cPtr_typeMapBlockPrologueInstruction ;
class GGS_typeMapBlockEpilogueInstruction ;
class cPtr_typeMapBlockEpilogueInstruction ;
class GGS_typeReaderCallInExpression ;
class cPtr_typeReaderCallInExpression ;
class GGS_typeFileWrapperWithStaticPath ;
class cPtr_typeFileWrapperWithStaticPath ;
class GGS_typeFileWrapperTemplateCall ;
class cPtr_typeFileWrapperTemplateCall ;
class GGS_typeCategoryTemplateCall ;
class cPtr_typeCategoryTemplateCall ;
class GGS_typeFileWrapperObjectInstanciation ;
class cPtr_typeFileWrapperObjectInstanciation ;
class GGS_typeCastInExpression ;
class cPtr_typeCastInExpression ;
class GGS_objectCastInExpression ;
class cPtr_objectCastInExpression ;
class GGS_typeAndOperation ;
class cPtr_typeAndOperation ;
class GGS_typeOrOperation ;
class cPtr_typeOrOperation ;
class GGS_typeXorOperation ;
class cPtr_typeXorOperation ;
class GGS_typeConcatOperation ;
class cPtr_typeConcatOperation ;
class GGS_typeTrueBool ;
class cPtr_typeTrueBool ;
class GGS_typeFalseBool ;
class cPtr_typeFalseBool ;
class GGS_typeLiteralStringExpression ;
class cPtr_typeLiteralStringExpression ;
class GGS_typeLiteralUIntExpression ;
class cPtr_typeLiteralUIntExpression ;
class GGS_typeLiteralSIntExpression ;
class cPtr_typeLiteralSIntExpression ;
class GGS_typeLiteralUInt64Expression ;
class cPtr_typeLiteralUInt64Expression ;
class GGS_typeLiteralSInt64Expression ;
class cPtr_typeLiteralSInt64Expression ;
class GGS_typeLiteralCharExpression ;
class cPtr_typeLiteralCharExpression ;
class GGS_typeLiteralDoubleExpression ;
class cPtr_typeLiteralDoubleExpression ;
class GGS_typeHereExpression ;
class cPtr_typeHereExpression ;
class GGS_typeConstructorExpression ;
class cPtr_typeConstructorExpression ;
class GGS_typeIfThenElseExpression ;
class cPtr_typeIfThenElseExpression ;
class GGS_typeTestComplement ;
class cPtr_typeTestComplement ;
class GGS_typeLogicalNegate ;
class cPtr_typeLogicalNegate ;
class GGS_typeOptionAccess ;
class cPtr_typeOptionAccess ;
class GGS_typeFunctionCall ;
class cPtr_typeFunctionCall ;
class GGS_typeVarInExpression ;
class cPtr_typeVarInExpression ;
class GGS_typeJokerInExpression ;
class cPtr_typeJokerInExpression ;
class GGS_typeAddOperation ;
class cPtr_typeAddOperation ;
class GGS_typeSubOperation ;
class cPtr_typeSubOperation ;
class GGS_typeMultiplyOperation ;
class cPtr_typeMultiplyOperation ;
class GGS_typeDivideOperation ;
class cPtr_typeDivideOperation ;
class GGS_typeModuloOperation ;
class cPtr_typeModuloOperation ;
class GGS_typeUnaryMinusOperation ;
class cPtr_typeUnaryMinusOperation ;
class GGS_typeEqualTest ;
class cPtr_typeEqualTest ;
class GGS_typeNonEqualTest ;
class cPtr_typeNonEqualTest ;
class GGS_typeStrictInfTest ;
class cPtr_typeStrictInfTest ;
class GGS_typeInfOrEqualTest ;
class cPtr_typeInfOrEqualTest ;
class GGS_typeStrictSupTest ;
class cPtr_typeStrictSupTest ;
class GGS_typeSupOrEqualTest ;
class cPtr_typeSupOrEqualTest ;
class GGS_typeLeftShiftOperation ;
class cPtr_typeLeftShiftOperation ;
class GGS_typeRightShiftOperation ;
class cPtr_typeRightShiftOperation ;
class GGS_typeClassToTypeOperand ;
class cPtr_typeClassToTypeOperand ;
class GGS_typeFieldAccessOperation ;
class cPtr_typeFieldAccessOperation ;
class GGS_typeTextTableCall ;
class cPtr_typeTextTableCall ;
class GGS_C_assignmentInstruction ;
class cPtr_C_assignmentInstruction ;
class GGS_C_constantDeclarationInstruction ;
class cPtr_C_constantDeclarationInstruction ;
class GGS_C_dotEqualInstruction ;
class cPtr_C_dotEqualInstruction ;
class GGS_C_declarationInstructionWithAssignment ;
class cPtr_C_declarationInstructionWithAssignment ;
class GGS_C_while_instruction ;
class cPtr_C_while_instruction ;
class GGS_L_expression_instructionsList_list ;
class GGS_C_if_instruction ;
class cPtr_C_if_instruction ;
class GGS_L_switchBranchlist ;
class GGS_C_switch_instruction ;
class cPtr_C_switch_instruction ;
class GGS_typeTableRoutinesAimplementer ;
class GGS_typeTableAttributsSemantiques ;
class GGS_typeJoker ;
class cPtr_typeJoker ;
class GGS_typeEntiteDest ;
class cPtr_typeEntiteDest ;
class GGS_M_nonTerminalSymbolForSyntax ;
class GGS_C_grammarInstruction ;
class cPtr_C_grammarInstruction ;
class GGS_typeAppendInstruction ;
class cPtr_typeAppendInstruction ;
class GGS_typeIncrementInstruction ;
class cPtr_typeIncrementInstruction ;
class GGS_typeDecrementInstruction ;
class cPtr_typeDecrementInstruction ;
class GGS_L_matchInstructionCasesList ;
class GGS_typeMatchInstruction ;
class cPtr_typeMatchInstruction ;
class GGS_foreachEnumerationList ;
class GGS_typeForeachInstruction ;
class cPtr_typeForeachInstruction ;
class GGS_typeStructuredExtractCasesList ;
class GGS_typeStructuredExtractInstructionWithElse ;
class cPtr_typeStructuredExtractInstructionWithElse ;
class GGS_AC_elseOrDefaultForCastInstruction ;
class cPtr_AC_elseOrDefaultForCastInstruction ;
class GGS_C_elseForCastInstruction ;
class cPtr_C_elseForCastInstruction ;
class GGS_C_defaultForCastInstruction ;
class cPtr_C_defaultForCastInstruction ;
class GGS_typeStructuredCastBranchList ;
class GGS_typeStructuredCastInstruction ;
class cPtr_typeStructuredCastInstruction ;
class GGS_typeRoutineCallInstruction ;
class cPtr_typeRoutineCallInstruction ;
class GGS_typeLogInstruction ;
class cPtr_typeLogInstruction ;
class GGS_typeDropInstruction ;
class cPtr_typeDropInstruction ;
class GGS_typeTableNomRoutinesDeclarees ;
class GGS_typeEntityToGenerate ;
class cPtr_typeEntityToGenerate ;
class GGS_typeExternTypeToGenerate ;
class cPtr_typeExternTypeToGenerate ;
class GGS_typeRoutineAengendrer ;
class cPtr_typeRoutineAengendrer ;
class GGS_typeFonctionAengendrer ;
class cPtr_typeFonctionAengendrer ;
class GGS_typeOnceFunctionToGenerate ;
class cPtr_typeOnceFunctionToGenerate ;
class GGS_categoryMethodToImplement ;
class cPtr_categoryMethodToImplement ;
class GGS_categoryReaderToImplement ;
class cPtr_categoryReaderToImplement ;
class GGS_categoryTemplateToImplement ;
class cPtr_categoryTemplateToImplement ;
class GGS_C_listTypeToImplement ;
class cPtr_C_listTypeToImplement ;
class GGS_EXsortDescriptorList ;
class GGS_C_sortedListTypeToImplement ;
class cPtr_C_sortedListTypeToImplement ;
class GGS_typeDefinitionTableAimplementer ;
class cPtr_typeDefinitionTableAimplementer ;
class GGS_mapAutomatonStateMap ;
class GGS_mapAutomatonActionMap ;
class GGS_mapStateTransitionSortedList ;
class GGS_mapStateSortedList ;
class GGS_branchBehaviourSortedListForMapOverride ;
class GGS_mapOverrideList ;
class GGS_C_mapToImplement ;
class cPtr_C_mapToImplement ;
class GGS_C_classToImplement ;
class cPtr_C_classToImplement ;
class GGS_C_mapindexToImplement ;
class cPtr_C_mapindexToImplement ;
class GGS_C_domainToImplement ;
class cPtr_C_domainToImplement ;
class GGS_typeEntiteRoutineExterne ;
class cPtr_typeEntiteRoutineExterne ;
class GGS_typeEntiteFonctionExterne ;
class cPtr_typeEntiteFonctionExterne ;
class GGS_typeRoutineExterneAengendrer ;
class cPtr_typeRoutineExterneAengendrer ;
class GGS_typeFonctionExterneAengendrer ;
class cPtr_typeFonctionExterneAengendrer ;
class GGS_typeEntitiesToGenerateList ;
class GGS_typeGalgasListmapToImplement ;
class cPtr_typeGalgasListmapToImplement ;
class GGS_typeEnumCstMessageStringMap ;
class GGS_enumGalgasType ;
class cPtr_enumGalgasType ;
class GGS_ruleDescriptorForProgramList ;
class GGS_wrapperFileSortedListEX ;
class GGS_wrapperDirectorySortedListEX ;
class GGS_wrapperExtensionMapEX ;
class GGS_C_wrapperToImplement ;
class cPtr_C_wrapperToImplement ;
class GGS_C_structToImplement ;
class cPtr_C_structToImplement ;
class GGS_C_filewrapperTemplateToImplement ;
class cPtr_C_filewrapperTemplateToImplement ;
class GGS_templateVariableMapEX ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@typeCplusPlusNameList'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeCplusPlusNameList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeCplusPlusNameList ;

//---------------------------------------------------------------------------*

class GGS_typeCplusPlusNameList : public AC_GGS_list {
  public : typedef elementOf_GGS_typeCplusPlusNameList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_typeCplusPlusNameList constructor_emptyList (void) ;
  public : static GGS_typeCplusPlusNameList constructor_listWithValue (const GGS_typeCplusPlusName & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_typeCplusPlusNameList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_typeCplusPlusNameList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_typeCplusPlusNameList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_typeCplusPlusNameList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_typeCplusPlusName & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_typeCplusPlusName & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_typeCplusPlusName & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_typeCplusPlusName & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_typeCplusPlusNameList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_typeCplusPlusName & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_typeCplusPlusNameList operator_concat (const GGS_typeCplusPlusNameList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_typeCplusPlusName & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_typeCplusPlusName & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_typeCplusPlusName & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_typeCplusPlusName 
  reader_mCppNameAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMCppNameAtIndex (C_CompilerEx & inLexique,
                              const GGS_typeCplusPlusName  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeCplusPlusNameList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_typeCplusPlusNameList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_typeCplusPlusName   & _mCppName (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Map '@typeClassMessagesMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeClassMessagesMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeClassMessagesMap ;

//---------------------------------------------------------------------------*

class GGS_typeClassMessagesMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_typeClassMessagesMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_typeClassMessagesMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_typeClassMessagesMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeClassMessagesMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeClassMessagesMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeClassMessagesMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeClassMessagesMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_typeClassMessagesMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_lstring & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lstring &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lstring   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_lstring & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_lstring & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_typeClassMessagesMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_typeClassMessagesMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeClassMessagesMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_typeClassMessagesMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_typeClassMessagesMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mMessage (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@typeSemanticsTypesList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeSemanticsTypesList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeSemanticsTypesList ;

//---------------------------------------------------------------------------*

class GGS_typeSemanticsTypesList : public AC_GGS_list {
  public : typedef elementOf_GGS_typeSemanticsTypesList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_typeSemanticsTypesList constructor_emptyList (void) ;
  public : static GGS_typeSemanticsTypesList constructor_listWithValue (const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_typeSemanticsTypesList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_typeSemanticsTypesList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_typeSemanticsTypesList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_typeSemanticsTypesList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_AC_galgasType & _out_0,
                              GGS_lstring & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_AC_galgasType & _out_0,
                             GGS_lstring & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_AC_galgasType & _out_0,
                                GGS_lstring & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_AC_galgasType & _out_0,
                                 GGS_lstring & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_typeSemanticsTypesList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_typeSemanticsTypesList operator_concat (const GGS_typeSemanticsTypesList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_AC_galgasType 
  reader_mTypeAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mGalgasVariableNameAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMTypeAtIndex (C_CompilerEx & inLexique,
                              const GGS_AC_galgasType  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMGalgasVariableNameAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeSemanticsTypesList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_typeSemanticsTypesList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_AC_galgasType   & _mType (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mGalgasVariableName (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  class map element 'e_typeVariablesMap'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeVariablesMap {
  public : GGS_AC_galgasType  mArgumentType ;
  public : GGS_typeCplusPlusName  mCplusPlusName ;
  public : e_typeVariablesMap (void) ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@typeVariablesMap'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeVariablesMap : public cGalgasVariablesMap <e_typeVariablesMap> {
//--- Get object pointer
  public : inline GGS_typeVariablesMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeVariablesMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_typeVariablesMap & /* inOperand */) const { return GGS_bool (true) ; }
  public : GGS_bool operator_isNotEqual (const GGS_typeVariablesMap & /* inOperand */) const { return GGS_bool (true) ; }
//--- Handle 'emptyMap' constructor
  public : static GGS_typeVariablesMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;
//--- 'searchForReadOnlyAccess' search method
public : void modifier_searchForReadOnlyAccess (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_galgasType   & outParameter0,
                                GGS_typeCplusPlusName   & outParameter1 COMMA_LOCATION_ARGS) ;
public : void method_searchForReadOnlyAccessGetIndex (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                GGS_AC_galgasType   & outParameter0,
                                GGS_typeCplusPlusName   & outParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchForDestructiveReadAccess' search method
public : void modifier_searchForDestructiveReadAccess (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_galgasType   & outParameter0,
                                GGS_typeCplusPlusName   & outParameter1 COMMA_LOCATION_ARGS) ;
public : void method_searchForDestructiveReadAccessGetIndex (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                GGS_AC_galgasType   & outParameter0,
                                GGS_typeCplusPlusName   & outParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchForReadWriteAccess' search method
public : void modifier_searchForReadWriteAccess (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_galgasType   & outParameter0,
                                GGS_typeCplusPlusName   & outParameter1 COMMA_LOCATION_ARGS) ;
public : void method_searchForReadWriteAccessGetIndex (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                GGS_AC_galgasType   & outParameter0,
                                GGS_typeCplusPlusName   & outParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchForWriteAccess' search method
public : void modifier_searchForWriteAccess (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_galgasType   & outParameter0,
                                GGS_typeCplusPlusName   & outParameter1 COMMA_LOCATION_ARGS) ;
public : void method_searchForWriteAccessGetIndex (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                GGS_AC_galgasType   & outParameter0,
                                GGS_typeCplusPlusName   & outParameter1 COMMA_LOCATION_ARGS) ;
//---
public : void modifier_insertInArgument (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;
public : void modifier_insertInArgumentGetIndex (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;
//---
public : void modifier_insertUnusedInArgument (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;
public : void modifier_insertUnusedInArgumentGetIndex (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;
//---
public : void modifier_insertConstInArgument (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;
public : void modifier_insertConstInArgumentGetIndex (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;
//---
public : void modifier_insertUsedConstInArgument (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;
public : void modifier_insertUsedConstInArgumentGetIndex (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;
//---
public : void modifier_insertUsedConstInArgumentNoShadow (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;
public : void modifier_insertUsedConstInArgumentNoShadowGetIndex (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;
//---
public : void modifier_insertUnusedConstInArgument (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;
public : void modifier_insertUnusedConstInArgumentGetIndex (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;
//---
public : void modifier_insertLocalVariable (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;
public : void modifier_insertLocalVariableGetIndex (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;
//---
public : void modifier_insertOutArgument (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;
public : void modifier_insertOutArgumentGetIndex (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;
//---
public : void modifier_insertInOutArgument (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;
public : void modifier_insertInOutArgumentGetIndex (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;
//---
public : void modifier_insertWithInstructionLocalVariable (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;
public : void modifier_insertWithInstructionLocalVariableGetIndex (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;
//---
public : void modifier_insertUsedInOutArgument (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;
public : void modifier_insertUsedInOutArgumentGetIndex (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;
//---
public : void modifier_insertUnusedInOutArgument (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;
public : void modifier_insertUnusedInOutArgumentGetIndex (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;
  public : GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@L_assignedVariables'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_assignedVariables ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_L_assignedVariables ;

//---------------------------------------------------------------------------*

class GGS_L_assignedVariables : public AC_GGS_list {
  public : typedef elementOf_GGS_L_assignedVariables cElement ;

//--- Constructor 'emptyList'
  public : static GGS_L_assignedVariables constructor_emptyList (void) ;
  public : static GGS_L_assignedVariables constructor_listWithValue (const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_assignedVariables & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_L_assignedVariables
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_assignedVariables
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_L_assignedVariables * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_typeCplusPlusName & _out_0,
                              GGS_lstring & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_typeCplusPlusName & _out_0,
                             GGS_lstring & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_typeCplusPlusName & _out_0,
                                GGS_lstring & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_typeCplusPlusName & _out_0,
                                 GGS_lstring & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_L_assignedVariables inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_assignedVariables operator_concat (const GGS_L_assignedVariables & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_typeCplusPlusName 
  reader_aNomVariableCibleAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_aNomAttributSourceAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setANomVariableCibleAtIndex (C_CompilerEx & inLexique,
                              const GGS_typeCplusPlusName  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setANomAttributSourceAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_L_assignedVariables castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_L_assignedVariables & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_typeCplusPlusName   & _aNomVariableCible (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _aNomAttributSource (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_typeCible'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeCible ;

//---------------------------------------------------------------------------*

class GGS_typeCible : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_typeCible (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_typeCible (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeCible (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeCible
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeCible * getPtr (void) const {
    return (cPtr_typeCible *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeCible * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeCible * operator () (LOCATION_ARGS) const {
      return (cPtr_typeCible *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeCible castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__typeCible ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         list '@typeListeCibles'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListeCibles ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeListeCibles ;

//---------------------------------------------------------------------------*

class GGS_typeListeCibles : public AC_GGS_list {
  public : typedef elementOf_GGS_typeListeCibles cElement ;

//--- Constructor 'emptyList'
  public : static GGS_typeListeCibles constructor_emptyList (void) ;
  public : static GGS_typeListeCibles constructor_listWithValue (const GGS_typeCible & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_typeListeCibles & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_typeListeCibles
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_typeListeCibles
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_typeListeCibles * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_typeCible & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_typeCible & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_typeCible & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_typeCible & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_typeListeCibles inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_typeCible & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_typeListeCibles operator_concat (const GGS_typeListeCibles & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_typeCible & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_typeCible & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_typeCible & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_typeCible 
  reader_aCibleAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setACibleAtIndex (C_CompilerEx & inLexique,
                              const GGS_typeCible  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeListeCibles castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_typeListeCibles & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_typeCible   & _aCible (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@L_nameWithType'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_nameWithType ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_L_nameWithType ;

//---------------------------------------------------------------------------*

class GGS_L_nameWithType : public AC_GGS_list {
  public : typedef elementOf_GGS_L_nameWithType cElement ;

//--- Constructor 'emptyList'
  public : static GGS_L_nameWithType constructor_emptyList (void) ;
  public : static GGS_L_nameWithType constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_nameWithType & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_L_nameWithType
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_nameWithType
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_L_nameWithType * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstring & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstring & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstring & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstring & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_L_nameWithType inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_nameWithType operator_concat (const GGS_L_nameWithType & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mTypeAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mNameAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMTypeAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMNameAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_L_nameWithType castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_L_nameWithType & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mType (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mName (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           class map element 'e_typeTableMethodesAimplementer'             *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeTableMethodesAimplementer {
  public : GGS_L_EXsignature  aListeTypesParametres ;
  public : GGS_typeListeTypesEtNomsArgMethode  aListeTypeEtNomsArguments ;
  public : GGS_typeInstructionList  mInstructionList ;
  public : e_typeTableMethodesAimplementer (void) ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Map '@typeTableMethodesAimplementer'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeTableMethodesAimplementer : public cTableMethodesAimplementer <e_typeTableMethodesAimplementer> {
//--- Get object pointer
  public : inline GGS_typeTableMethodesAimplementer * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeTableMethodesAimplementer * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_typeTableMethodesAimplementer & /* inOperand */) const { return GGS_bool (true) ; }
  public : GGS_bool operator_isNotEqual (const GGS_typeTableMethodesAimplementer & /* inOperand */) const { return GGS_bool (true) ; }
//--- Handle 'emptyMap' constructor
  public : static GGS_typeTableMethodesAimplementer constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;
//---
public : void modifier_insertAbstract (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0,
                                const GGS_typeListeTypesEtNomsArgMethode &  inParameter1,
                                const GGS_typeInstructionList &  inParameter2 COMMA_LOCATION_ARGS) ;
public : void modifier_insertAbstractGetIndex (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_L_EXsignature &  inParameter0,
                                const GGS_typeListeTypesEtNomsArgMethode &  inParameter1,
                                const GGS_typeInstructionList &  inParameter2 COMMA_LOCATION_ARGS) ;
//---
public : void modifier_insertNotAbstract (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0,
                                const GGS_typeListeTypesEtNomsArgMethode &  inParameter1,
                                const GGS_typeInstructionList &  inParameter2 COMMA_LOCATION_ARGS) ;
public : void modifier_insertNotAbstractGetIndex (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_L_EXsignature &  inParameter0,
                                const GGS_typeListeTypesEtNomsArgMethode &  inParameter1,
                                const GGS_typeInstructionList &  inParameter2 COMMA_LOCATION_ARGS) ;
  public : GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@typeExpressionList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeExpressionList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeExpressionList ;

//---------------------------------------------------------------------------*

class GGS_typeExpressionList : public AC_GGS_list {
  public : typedef elementOf_GGS_typeExpressionList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_typeExpressionList constructor_emptyList (void) ;
  public : static GGS_typeExpressionList constructor_listWithValue (const GGS_typeExpression & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_typeExpressionList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_typeExpressionList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_typeExpressionList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_typeExpressionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_typeExpression & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_typeExpression & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_typeExpression & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_typeExpression & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_typeExpressionList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_typeExpression & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_typeExpressionList operator_concat (const GGS_typeExpressionList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_typeExpression & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_typeExpression & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_typeExpression & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_typeExpression 
  reader_mExpressionAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMExpressionAtIndex (C_CompilerEx & inLexique,
                              const GGS_typeExpression  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeExpressionList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_typeExpressionList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_typeExpression   & _mExpression (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@varToDropList'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_varToDropList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_varToDropList ;

//---------------------------------------------------------------------------*

class GGS_varToDropList : public AC_GGS_list {
  public : typedef elementOf_GGS_varToDropList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_varToDropList constructor_emptyList (void) ;
  public : static GGS_varToDropList constructor_listWithValue (const GGS_typeCplusPlusName & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_varToDropList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_varToDropList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_varToDropList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_varToDropList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_typeCplusPlusName & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_typeCplusPlusName & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_typeCplusPlusName & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_typeCplusPlusName & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_varToDropList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_typeCplusPlusName & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_varToDropList operator_concat (const GGS_varToDropList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_typeCplusPlusName & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_typeCplusPlusName & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_typeCplusPlusName & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_typeCplusPlusName 
  reader_mVarToDropAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMVarToDropAtIndex (C_CompilerEx & inLexique,
                              const GGS_typeCplusPlusName  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_varToDropList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_varToDropList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_typeCplusPlusName   & _mVarToDrop (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeErrorInstruction'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeErrorInstruction ;

//---------------------------------------------------------------------------*

class GGS_typeErrorInstruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_typeErrorInstruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_typeErrorInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeErrorInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeErrorInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeErrorInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_location & argument_2,
                                const GGS_varToDropList & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeErrorInstruction * getPtr (void) const {
    return (cPtr_typeErrorInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeExpression  reader_mErrorLocationExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mErrorMessageExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_mLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_varToDropList  reader_mVarToDropList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeErrorInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeErrorInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeErrorInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeErrorInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeErrorInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeSendInstruction'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeSendInstruction ;

//---------------------------------------------------------------------------*

class GGS_typeSendInstruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_typeSendInstruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_typeSendInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeSendInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeSendInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeSendInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeExpression & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeSendInstruction * getPtr (void) const {
    return (cPtr_typeSendInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeExpression  reader_mExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeSendInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeSendInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeSendInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeSendInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeSendInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeWithInstruction'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeWithInstruction ;

//---------------------------------------------------------------------------*

class GGS_typeWithInstruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_typeWithInstruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_typeWithInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeWithInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeWithInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeWithInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_string& argument_0,
                                const GGS_typeCplusPlusName & argument_1,
                                const GGS_lstringlist & argument_2,
                                const GGS_string& argument_3,
                                const GGS_typeExpression & argument_4,
                                const GGS_typeInstructionList & argument_5,
                                const GGS_typeInstructionList & argument_6,
                                const GGS_location & argument_7,
                                const GGS_bool& argument_8
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeWithInstruction * getPtr (void) const {
    return (cPtr_typeWithInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_string reader_mMapTypeName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeCplusPlusName  reader_mAccessedVariableCppName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mStructAttributeList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_mErrorMessageName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mKeyExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeInstructionList  reader_mDoBranchInstructionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeInstructionList  reader_mElseBranchInstructionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_mInstructionLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mReadWriteAccess (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeWithInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeWithInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeWithInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeWithInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeWithInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeWarningInstruction'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeWarningInstruction ;

//---------------------------------------------------------------------------*

class GGS_typeWarningInstruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_typeWarningInstruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_typeWarningInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeWarningInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeWarningInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeWarningInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_location & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeWarningInstruction * getPtr (void) const {
    return (cPtr_typeWarningInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeExpression  reader_mWarningLocationExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mWarningMessageExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_mLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeWarningInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeWarningInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeWarningInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeWarningInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeWarningInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeMessageInstruction'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeMessageInstruction ;

//---------------------------------------------------------------------------*

class GGS_typeMessageInstruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_typeMessageInstruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_typeMessageInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeMessageInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeMessageInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeMessageInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeExpression & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeMessageInstruction * getPtr (void) const {
    return (cPtr_typeMessageInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeExpression  reader_mMessageExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_mInstructionLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeMessageInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeMessageInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeMessageInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeMessageInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeMessageInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeMethodCallInstruction'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeMethodCallInstruction ;

//---------------------------------------------------------------------------*

class GGS_typeMethodCallInstruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_typeMethodCallInstruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_typeMethodCallInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeMethodCallInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeMethodCallInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeMethodCallInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_string& argument_3,
                                const GGS_typeExpressionList & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeMethodCallInstruction * getPtr (void) const {
    return (cPtr_typeMethodCallInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_galgasType  reader_mExpressionType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mMethodName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_mCategoryMethodClassBaseName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpressionList  reader_mExpressionsList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeMethodCallInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeMethodCallInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeMethodCallInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeMethodCallInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeMethodCallInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_typeCallOfTypeMethodInstruction'             *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeCallOfTypeMethodInstruction ;

//---------------------------------------------------------------------------*

class GGS_typeCallOfTypeMethodInstruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_typeCallOfTypeMethodInstruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_typeCallOfTypeMethodInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeCallOfTypeMethodInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeCallOfTypeMethodInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeCallOfTypeMethodInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeExpressionList & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeCallOfTypeMethodInstruction * getPtr (void) const {
    return (cPtr_typeCallOfTypeMethodInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTypeName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mTypeMethodName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpressionList  reader_mExpressionsList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeCallOfTypeMethodInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeCallOfTypeMethodInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeCallOfTypeMethodInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeCallOfTypeMethodInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeCallOfTypeMethodInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_typeModifierCallInstruction'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeModifierCallInstruction ;

//---------------------------------------------------------------------------*

class GGS_typeModifierCallInstruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_typeModifierCallInstruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_typeModifierCallInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeModifierCallInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeModifierCallInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeModifierCallInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_typeExpressionList & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeModifierCallInstruction * getPtr (void) const {
    return (cPtr_typeModifierCallInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeCplusPlusName  reader_aNomCppVariable (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mStructAttributeList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_aNomMethodeSimple (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpressionList  reader_mExpressionsList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeModifierCallInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeModifierCallInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeModifierCallInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeModifierCallInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeModifierCallInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS class 'GGS_typeInstructionAppelMethodeListe'             *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeInstructionAppelMethodeListe ;

//---------------------------------------------------------------------------*

class GGS_typeInstructionAppelMethodeListe : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_typeInstructionAppelMethodeListe (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_typeInstructionAppelMethodeListe (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeInstructionAppelMethodeListe (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeInstructionAppelMethodeListe
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeInstructionAppelMethodeListe constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeCplusPlusNameList & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeInstructionAppelMethodeListe * getPtr (void) const {
    return (cPtr_typeInstructionAppelMethodeListe *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeCplusPlusName  reader_aNomCppAttribut (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_aMethodeDeListe (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeCplusPlusNameList  reader_aListeNomsCppArguments (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeInstructionAppelMethodeListe * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeInstructionAppelMethodeListe * operator () (LOCATION_ARGS) const {
      return (cPtr_typeInstructionAppelMethodeListe *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeInstructionAppelMethodeListe castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeInstructionAppelMethodeListe ;

//---------------------------------------------------------------------------*
//                                                                           *
//          GALGAS class 'GGS_typeInstructionDeclarationVarLocale'           *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeInstructionDeclarationVarLocale ;

//---------------------------------------------------------------------------*

class GGS_typeInstructionDeclarationVarLocale : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_typeInstructionDeclarationVarLocale (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_typeInstructionDeclarationVarLocale (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeInstructionDeclarationVarLocale (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeInstructionDeclarationVarLocale
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeInstructionDeclarationVarLocale constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeCplusPlusName & argument_0,
                                const GGS_AC_galgasType & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeInstructionDeclarationVarLocale * getPtr (void) const {
    return (cPtr_typeInstructionDeclarationVarLocale *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeCplusPlusName  reader_aNomCppVariable (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_AC_galgasType  reader_aTypeVariable (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeInstructionDeclarationVarLocale * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeInstructionDeclarationVarLocale * operator () (LOCATION_ARGS) const {
      return (cPtr_typeInstructionDeclarationVarLocale *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeInstructionDeclarationVarLocale castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeInstructionDeclarationVarLocale ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_typeMapBlockPrologueInstruction'             *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeMapBlockPrologueInstruction ;

//---------------------------------------------------------------------------*

class GGS_typeMapBlockPrologueInstruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_typeMapBlockPrologueInstruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_typeMapBlockPrologueInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeMapBlockPrologueInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeMapBlockPrologueInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeMapBlockPrologueInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeExpressionList & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeMapBlockPrologueInstruction * getPtr (void) const {
    return (cPtr_typeMapBlockPrologueInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeCplusPlusName  reader_aNomVariableTable (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_aNomMethodeBloc (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpressionList  reader_mPrologueExpressionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeMapBlockPrologueInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeMapBlockPrologueInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeMapBlockPrologueInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeMapBlockPrologueInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeMapBlockPrologueInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_typeMapBlockEpilogueInstruction'             *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeMapBlockEpilogueInstruction ;

//---------------------------------------------------------------------------*

class GGS_typeMapBlockEpilogueInstruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_typeMapBlockEpilogueInstruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_typeMapBlockEpilogueInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeMapBlockEpilogueInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeMapBlockEpilogueInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeMapBlockEpilogueInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeExpressionList & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeMapBlockEpilogueInstruction * getPtr (void) const {
    return (cPtr_typeMapBlockEpilogueInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeCplusPlusName  reader_aNomVariableTable (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_aNomMethodeBloc (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpressionList  reader_mEpilogueExpressionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeMapBlockEpilogueInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeMapBlockEpilogueInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeMapBlockEpilogueInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeMapBlockEpilogueInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeMapBlockEpilogueInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_typeReaderCallInExpression'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeReaderCallInExpression ;

//---------------------------------------------------------------------------*

class GGS_typeReaderCallInExpression : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeReaderCallInExpression (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeReaderCallInExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeReaderCallInExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeReaderCallInExpression
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeReaderCallInExpression constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeExpression & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeExpressionList & argument_2,
                                const GGS_string& argument_3,
                                const GGS_string& argument_4,
                                const GGS_bool& argument_5
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeReaderCallInExpression * getPtr (void) const {
    return (cPtr_typeReaderCallInExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeExpression  reader_mExpressionValue (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mReaderName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpressionList  reader_mExpressionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_mConversionMethod (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_mCategoryReaderClassBaseName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mHasLexiqueAndLocationArguments (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeReaderCallInExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeReaderCallInExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_typeReaderCallInExpression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeReaderCallInExpression castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeReaderCallInExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_typeFileWrapperWithStaticPath'              *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeFileWrapperWithStaticPath ;

//---------------------------------------------------------------------------*

class GGS_typeFileWrapperWithStaticPath : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeFileWrapperWithStaticPath (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeFileWrapperWithStaticPath (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeFileWrapperWithStaticPath (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeFileWrapperWithStaticPath
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeFileWrapperWithStaticPath constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_uint & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeFileWrapperWithStaticPath * getPtr (void) const {
    return (cPtr_typeFileWrapperWithStaticPath *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mFileWrapperName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mFileIndex (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeFileWrapperWithStaticPath * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeFileWrapperWithStaticPath * operator () (LOCATION_ARGS) const {
      return (cPtr_typeFileWrapperWithStaticPath *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeFileWrapperWithStaticPath castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeFileWrapperWithStaticPath ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_typeFileWrapperTemplateCall'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeFileWrapperTemplateCall ;

//---------------------------------------------------------------------------*

class GGS_typeFileWrapperTemplateCall : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeFileWrapperTemplateCall (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeFileWrapperTemplateCall (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeFileWrapperTemplateCall (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeFileWrapperTemplateCall
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeFileWrapperTemplateCall constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeExpressionList & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeFileWrapperTemplateCall * getPtr (void) const {
    return (cPtr_typeFileWrapperTemplateCall *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mFileWrapperName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mTemplateName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpressionList  reader_mOutExpressionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeFileWrapperTemplateCall * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeFileWrapperTemplateCall * operator () (LOCATION_ARGS) const {
      return (cPtr_typeFileWrapperTemplateCall *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeFileWrapperTemplateCall castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeFileWrapperTemplateCall ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeCategoryTemplateCall'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeCategoryTemplateCall ;

//---------------------------------------------------------------------------*

class GGS_typeCategoryTemplateCall : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeCategoryTemplateCall (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeCategoryTemplateCall (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeCategoryTemplateCall (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeCategoryTemplateCall
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeCategoryTemplateCall constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeExpression & argument_0,
                                const GGS_string& argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_typeExpressionList & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeCategoryTemplateCall * getPtr (void) const {
    return (cPtr_typeCategoryTemplateCall *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeExpression  reader_mExpressionValue (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_mCategoryTemplateClassBaseName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mTemplateName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpressionList  reader_mOutExpressionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeCategoryTemplateCall * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeCategoryTemplateCall * operator () (LOCATION_ARGS) const {
      return (cPtr_typeCategoryTemplateCall *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeCategoryTemplateCall castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeCategoryTemplateCall ;

//---------------------------------------------------------------------------*
//                                                                           *
//          GALGAS class 'GGS_typeFileWrapperObjectInstanciation'            *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeFileWrapperObjectInstanciation ;

//---------------------------------------------------------------------------*

class GGS_typeFileWrapperObjectInstanciation : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeFileWrapperObjectInstanciation (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeFileWrapperObjectInstanciation (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeFileWrapperObjectInstanciation (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeFileWrapperObjectInstanciation
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeFileWrapperObjectInstanciation constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeFileWrapperObjectInstanciation * getPtr (void) const {
    return (cPtr_typeFileWrapperObjectInstanciation *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mFileWrapperName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeFileWrapperObjectInstanciation * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeFileWrapperObjectInstanciation * operator () (LOCATION_ARGS) const {
      return (cPtr_typeFileWrapperObjectInstanciation *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeFileWrapperObjectInstanciation castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeFileWrapperObjectInstanciation ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeCastInExpression'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeCastInExpression ;

//---------------------------------------------------------------------------*

class GGS_typeCastInExpression : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeCastInExpression (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeCastInExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeCastInExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeCastInExpression
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeCastInExpression constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeExpression & argument_0,
                                const GGS_bool& argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_typeExpression & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeCastInExpression * getPtr (void) const {
    return (cPtr_typeCastInExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeExpression  reader_mCastedExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mCheckForKindOfClass (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mCastTypeName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mErrorLocationExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeCastInExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeCastInExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_typeCastInExpression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeCastInExpression castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeCastInExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_objectCastInExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_objectCastInExpression ;

//---------------------------------------------------------------------------*

class GGS_objectCastInExpression : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_objectCastInExpression (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_objectCastInExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_objectCastInExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_objectCastInExpression
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_objectCastInExpression constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeExpression & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeExpression & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_objectCastInExpression * getPtr (void) const {
    return (cPtr_objectCastInExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeExpression  reader_mCastedExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mCastTypeName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mErrorLocationExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_objectCastInExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_objectCastInExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_objectCastInExpression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_objectCastInExpression castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__objectCastInExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeAndOperation'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeAndOperation ;

//---------------------------------------------------------------------------*

class GGS_typeAndOperation : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeAndOperation (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeAndOperation (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeAndOperation (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeAndOperation
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeAndOperation constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_typeExpression & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeAndOperation * getPtr (void) const {
    return (cPtr_typeAndOperation *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeAndOperation * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeAndOperation * operator () (LOCATION_ARGS) const {
      return (cPtr_typeAndOperation *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeAndOperation castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeAndOperation ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeOrOperation'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeOrOperation ;

//---------------------------------------------------------------------------*

class GGS_typeOrOperation : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeOrOperation (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeOrOperation (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeOrOperation (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeOrOperation
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeOrOperation constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_typeExpression & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeOrOperation * getPtr (void) const {
    return (cPtr_typeOrOperation *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeOrOperation * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeOrOperation * operator () (LOCATION_ARGS) const {
      return (cPtr_typeOrOperation *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeOrOperation castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeOrOperation ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeXorOperation'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeXorOperation ;

//---------------------------------------------------------------------------*

class GGS_typeXorOperation : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeXorOperation (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeXorOperation (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeXorOperation (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeXorOperation
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeXorOperation constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_typeExpression & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeXorOperation * getPtr (void) const {
    return (cPtr_typeXorOperation *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeXorOperation * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeXorOperation * operator () (LOCATION_ARGS) const {
      return (cPtr_typeXorOperation *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeXorOperation castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeXorOperation ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeConcatOperation'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeConcatOperation ;

//---------------------------------------------------------------------------*

class GGS_typeConcatOperation : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeConcatOperation (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeConcatOperation (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeConcatOperation (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeConcatOperation
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeConcatOperation constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_typeExpression & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeConcatOperation * getPtr (void) const {
    return (cPtr_typeConcatOperation *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeConcatOperation * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeConcatOperation * operator () (LOCATION_ARGS) const {
      return (cPtr_typeConcatOperation *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeConcatOperation castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeConcatOperation ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_typeTrueBool'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeTrueBool ;

//---------------------------------------------------------------------------*

class GGS_typeTrueBool : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeTrueBool (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeTrueBool (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeTrueBool (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeTrueBool
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeTrueBool constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeTrueBool * getPtr (void) const {
    return (cPtr_typeTrueBool *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeTrueBool * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeTrueBool * operator () (LOCATION_ARGS) const {
      return (cPtr_typeTrueBool *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeTrueBool castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeTrueBool ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_typeFalseBool'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeFalseBool ;

//---------------------------------------------------------------------------*

class GGS_typeFalseBool : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeFalseBool (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeFalseBool (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeFalseBool (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeFalseBool
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeFalseBool constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeFalseBool * getPtr (void) const {
    return (cPtr_typeFalseBool *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeFalseBool * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeFalseBool * operator () (LOCATION_ARGS) const {
      return (cPtr_typeFalseBool *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeFalseBool castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeFalseBool ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_typeLiteralStringExpression'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeLiteralStringExpression ;

//---------------------------------------------------------------------------*

class GGS_typeLiteralStringExpression : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeLiteralStringExpression (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeLiteralStringExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeLiteralStringExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeLiteralStringExpression
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeLiteralStringExpression constructor_new (C_CompilerEx & inLexique,
                                const GGS_stringlist & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeLiteralStringExpression * getPtr (void) const {
    return (cPtr_typeLiteralStringExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_stringlist  reader_mLiteralStringList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeLiteralStringExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeLiteralStringExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_typeLiteralStringExpression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeLiteralStringExpression castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeLiteralStringExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeLiteralUIntExpression'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeLiteralUIntExpression ;

//---------------------------------------------------------------------------*

class GGS_typeLiteralUIntExpression : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeLiteralUIntExpression (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeLiteralUIntExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeLiteralUIntExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeLiteralUIntExpression
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeLiteralUIntExpression constructor_new (C_CompilerEx & inLexique,
                                const GGS_luint & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeLiteralUIntExpression * getPtr (void) const {
    return (cPtr_typeLiteralUIntExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_luint  reader_mLiteralInt (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeLiteralUIntExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeLiteralUIntExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_typeLiteralUIntExpression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeLiteralUIntExpression castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeLiteralUIntExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeLiteralSIntExpression'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeLiteralSIntExpression ;

//---------------------------------------------------------------------------*

class GGS_typeLiteralSIntExpression : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeLiteralSIntExpression (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeLiteralSIntExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeLiteralSIntExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeLiteralSIntExpression
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeLiteralSIntExpression constructor_new (C_CompilerEx & inLexique,
                                const GGS_lsint & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeLiteralSIntExpression * getPtr (void) const {
    return (cPtr_typeLiteralSIntExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lsint  reader_mLiteralInt (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeLiteralSIntExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeLiteralSIntExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_typeLiteralSIntExpression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeLiteralSIntExpression castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeLiteralSIntExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_typeLiteralUInt64Expression'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeLiteralUInt64Expression ;

//---------------------------------------------------------------------------*

class GGS_typeLiteralUInt64Expression : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeLiteralUInt64Expression (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeLiteralUInt64Expression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeLiteralUInt64Expression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeLiteralUInt64Expression
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeLiteralUInt64Expression constructor_new (C_CompilerEx & inLexique,
                                const GGS_luint64 & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeLiteralUInt64Expression * getPtr (void) const {
    return (cPtr_typeLiteralUInt64Expression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_luint64  reader_mLiteralInt (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeLiteralUInt64Expression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeLiteralUInt64Expression * operator () (LOCATION_ARGS) const {
      return (cPtr_typeLiteralUInt64Expression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeLiteralUInt64Expression castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeLiteralUInt64Expression ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_typeLiteralSInt64Expression'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeLiteralSInt64Expression ;

//---------------------------------------------------------------------------*

class GGS_typeLiteralSInt64Expression : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeLiteralSInt64Expression (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeLiteralSInt64Expression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeLiteralSInt64Expression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeLiteralSInt64Expression
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeLiteralSInt64Expression constructor_new (C_CompilerEx & inLexique,
                                const GGS_lsint64 & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeLiteralSInt64Expression * getPtr (void) const {
    return (cPtr_typeLiteralSInt64Expression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lsint64  reader_mLiteralInt (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeLiteralSInt64Expression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeLiteralSInt64Expression * operator () (LOCATION_ARGS) const {
      return (cPtr_typeLiteralSInt64Expression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeLiteralSInt64Expression castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeLiteralSInt64Expression ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeLiteralCharExpression'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeLiteralCharExpression ;

//---------------------------------------------------------------------------*

class GGS_typeLiteralCharExpression : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeLiteralCharExpression (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeLiteralCharExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeLiteralCharExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeLiteralCharExpression
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeLiteralCharExpression constructor_new (C_CompilerEx & inLexique,
                                const GGS_lchar & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeLiteralCharExpression * getPtr (void) const {
    return (cPtr_typeLiteralCharExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lchar  reader_mLiteralChar (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeLiteralCharExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeLiteralCharExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_typeLiteralCharExpression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeLiteralCharExpression castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeLiteralCharExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_typeLiteralDoubleExpression'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeLiteralDoubleExpression ;

//---------------------------------------------------------------------------*

class GGS_typeLiteralDoubleExpression : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeLiteralDoubleExpression (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeLiteralDoubleExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeLiteralDoubleExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeLiteralDoubleExpression
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeLiteralDoubleExpression constructor_new (C_CompilerEx & inLexique,
                                const GGS_ldouble & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeLiteralDoubleExpression * getPtr (void) const {
    return (cPtr_typeLiteralDoubleExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_ldouble  reader_mLiteralDouble (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeLiteralDoubleExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeLiteralDoubleExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_typeLiteralDoubleExpression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeLiteralDoubleExpression castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeLiteralDoubleExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeHereExpression'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeHereExpression ;

//---------------------------------------------------------------------------*

class GGS_typeHereExpression : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeHereExpression (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeHereExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeHereExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeHereExpression
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeHereExpression constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeHereExpression * getPtr (void) const {
    return (cPtr_typeHereExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeHereExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeHereExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_typeHereExpression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeHereExpression castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeHereExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeConstructorExpression'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeConstructorExpression ;

//---------------------------------------------------------------------------*

class GGS_typeConstructorExpression : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeConstructorExpression (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeConstructorExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeConstructorExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeConstructorExpression
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeConstructorExpression constructor_new (C_CompilerEx & inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_bool& argument_2,
                                const GGS_typeExpressionList & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeConstructorExpression * getPtr (void) const {
    return (cPtr_typeConstructorExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_galgasType  reader_mType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mConstructorName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mHasLexiqueAndLocationArguments (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpressionList  reader_mExpressionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeConstructorExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeConstructorExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_typeConstructorExpression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeConstructorExpression castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeConstructorExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeIfThenElseExpression'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeIfThenElseExpression ;

//---------------------------------------------------------------------------*

class GGS_typeIfThenElseExpression : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeIfThenElseExpression (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeIfThenElseExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeIfThenElseExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeIfThenElseExpression
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeIfThenElseExpression constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeExpression & argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_typeExpression & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeIfThenElseExpression * getPtr (void) const {
    return (cPtr_typeIfThenElseExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeExpression  reader_mIfExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mThenExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mElseExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeIfThenElseExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeIfThenElseExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_typeIfThenElseExpression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeIfThenElseExpression castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeIfThenElseExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeTestComplement'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeTestComplement ;

//---------------------------------------------------------------------------*

class GGS_typeTestComplement : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeTestComplement (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeTestComplement (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeTestComplement (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeTestComplement
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeTestComplement constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_typeExpression & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeTestComplement * getPtr (void) const {
    return (cPtr_typeTestComplement *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeTestComplement * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeTestComplement * operator () (LOCATION_ARGS) const {
      return (cPtr_typeTestComplement *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeTestComplement castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeTestComplement ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeLogicalNegate'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeLogicalNegate ;

//---------------------------------------------------------------------------*

class GGS_typeLogicalNegate : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeLogicalNegate (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeLogicalNegate (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeLogicalNegate (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeLogicalNegate
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeLogicalNegate constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_typeExpression & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeLogicalNegate * getPtr (void) const {
    return (cPtr_typeLogicalNegate *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeLogicalNegate * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeLogicalNegate * operator () (LOCATION_ARGS) const {
      return (cPtr_typeLogicalNegate *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeLogicalNegate castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeLogicalNegate ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeOptionAccess'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeOptionAccess ;

//---------------------------------------------------------------------------*

class GGS_typeOptionAccess : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeOptionAccess (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeOptionAccess (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeOptionAccess (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeOptionAccess
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeOptionAccess constructor_new (C_CompilerEx & inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_string& argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_string& argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeOptionAccess * getPtr (void) const {
    return (cPtr_typeOptionAccess *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_galgasType  reader_mOptionType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_mOptionComponentName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mOptionName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_mAccessorName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeOptionAccess * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeOptionAccess * operator () (LOCATION_ARGS) const {
      return (cPtr_typeOptionAccess *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeOptionAccess castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeOptionAccess ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeFunctionCall'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeFunctionCall ;

//---------------------------------------------------------------------------*

class GGS_typeFunctionCall : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeFunctionCall (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeFunctionCall (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeFunctionCall (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeFunctionCall
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeFunctionCall constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeExpressionList & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeFunctionCall * getPtr (void) const {
    return (cPtr_typeFunctionCall *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mFunctionName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpressionList  reader_mExpressionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeFunctionCall * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeFunctionCall * operator () (LOCATION_ARGS) const {
      return (cPtr_typeFunctionCall *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeFunctionCall castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeFunctionCall ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeVarInExpression'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeVarInExpression ;

//---------------------------------------------------------------------------*

class GGS_typeVarInExpression : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeVarInExpression (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeVarInExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeVarInExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeVarInExpression
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeVarInExpression constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstringlist & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeVarInExpression * getPtr (void) const {
    return (cPtr_typeVarInExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeCplusPlusName  reader_mCppVarName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mStructAttributeList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeVarInExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeVarInExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_typeVarInExpression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeVarInExpression castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeVarInExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeJokerInExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeJokerInExpression ;

//---------------------------------------------------------------------------*

class GGS_typeJokerInExpression : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeJokerInExpression (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeJokerInExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeJokerInExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeJokerInExpression
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeJokerInExpression constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeJokerInExpression * getPtr (void) const {
    return (cPtr_typeJokerInExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeJokerInExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeJokerInExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_typeJokerInExpression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeJokerInExpression castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeJokerInExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeAddOperation'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeAddOperation ;

//---------------------------------------------------------------------------*

class GGS_typeAddOperation : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeAddOperation (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeAddOperation (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeAddOperation (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeAddOperation
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeAddOperation constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_typeExpression & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeAddOperation * getPtr (void) const {
    return (cPtr_typeAddOperation *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeAddOperation * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeAddOperation * operator () (LOCATION_ARGS) const {
      return (cPtr_typeAddOperation *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeAddOperation castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeAddOperation ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeSubOperation'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeSubOperation ;

//---------------------------------------------------------------------------*

class GGS_typeSubOperation : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeSubOperation (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeSubOperation (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeSubOperation (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeSubOperation
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeSubOperation constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_typeExpression & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeSubOperation * getPtr (void) const {
    return (cPtr_typeSubOperation *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeSubOperation * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeSubOperation * operator () (LOCATION_ARGS) const {
      return (cPtr_typeSubOperation *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeSubOperation castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeSubOperation ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeMultiplyOperation'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeMultiplyOperation ;

//---------------------------------------------------------------------------*

class GGS_typeMultiplyOperation : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeMultiplyOperation (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeMultiplyOperation (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeMultiplyOperation (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeMultiplyOperation
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeMultiplyOperation constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_typeExpression & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeMultiplyOperation * getPtr (void) const {
    return (cPtr_typeMultiplyOperation *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeMultiplyOperation * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeMultiplyOperation * operator () (LOCATION_ARGS) const {
      return (cPtr_typeMultiplyOperation *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeMultiplyOperation castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeMultiplyOperation ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeDivideOperation'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeDivideOperation ;

//---------------------------------------------------------------------------*

class GGS_typeDivideOperation : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeDivideOperation (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeDivideOperation (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeDivideOperation (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeDivideOperation
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeDivideOperation constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_typeExpression & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeDivideOperation * getPtr (void) const {
    return (cPtr_typeDivideOperation *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeDivideOperation * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeDivideOperation * operator () (LOCATION_ARGS) const {
      return (cPtr_typeDivideOperation *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeDivideOperation castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeDivideOperation ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeModuloOperation'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeModuloOperation ;

//---------------------------------------------------------------------------*

class GGS_typeModuloOperation : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeModuloOperation (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeModuloOperation (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeModuloOperation (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeModuloOperation
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeModuloOperation constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_typeExpression & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeModuloOperation * getPtr (void) const {
    return (cPtr_typeModuloOperation *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeModuloOperation * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeModuloOperation * operator () (LOCATION_ARGS) const {
      return (cPtr_typeModuloOperation *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeModuloOperation castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeModuloOperation ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeUnaryMinusOperation'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeUnaryMinusOperation ;

//---------------------------------------------------------------------------*

class GGS_typeUnaryMinusOperation : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeUnaryMinusOperation (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeUnaryMinusOperation (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeUnaryMinusOperation (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeUnaryMinusOperation
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeUnaryMinusOperation constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_typeExpression & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeUnaryMinusOperation * getPtr (void) const {
    return (cPtr_typeUnaryMinusOperation *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeUnaryMinusOperation * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeUnaryMinusOperation * operator () (LOCATION_ARGS) const {
      return (cPtr_typeUnaryMinusOperation *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeUnaryMinusOperation castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeUnaryMinusOperation ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_typeEqualTest'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeEqualTest ;

//---------------------------------------------------------------------------*

class GGS_typeEqualTest : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeEqualTest (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeEqualTest (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeEqualTest (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeEqualTest
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeEqualTest constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_typeExpression & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeEqualTest * getPtr (void) const {
    return (cPtr_typeEqualTest *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeEqualTest * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeEqualTest * operator () (LOCATION_ARGS) const {
      return (cPtr_typeEqualTest *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeEqualTest castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeEqualTest ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeNonEqualTest'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeNonEqualTest ;

//---------------------------------------------------------------------------*

class GGS_typeNonEqualTest : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeNonEqualTest (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeNonEqualTest (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeNonEqualTest (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeNonEqualTest
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeNonEqualTest constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_typeExpression & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeNonEqualTest * getPtr (void) const {
    return (cPtr_typeNonEqualTest *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeNonEqualTest * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeNonEqualTest * operator () (LOCATION_ARGS) const {
      return (cPtr_typeNonEqualTest *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeNonEqualTest castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeNonEqualTest ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeStrictInfTest'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeStrictInfTest ;

//---------------------------------------------------------------------------*

class GGS_typeStrictInfTest : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeStrictInfTest (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeStrictInfTest (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeStrictInfTest (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeStrictInfTest
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeStrictInfTest constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_typeExpression & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeStrictInfTest * getPtr (void) const {
    return (cPtr_typeStrictInfTest *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeStrictInfTest * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeStrictInfTest * operator () (LOCATION_ARGS) const {
      return (cPtr_typeStrictInfTest *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeStrictInfTest castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeStrictInfTest ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeInfOrEqualTest'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeInfOrEqualTest ;

//---------------------------------------------------------------------------*

class GGS_typeInfOrEqualTest : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeInfOrEqualTest (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeInfOrEqualTest (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeInfOrEqualTest (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeInfOrEqualTest
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeInfOrEqualTest constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_typeExpression & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeInfOrEqualTest * getPtr (void) const {
    return (cPtr_typeInfOrEqualTest *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeInfOrEqualTest * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeInfOrEqualTest * operator () (LOCATION_ARGS) const {
      return (cPtr_typeInfOrEqualTest *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeInfOrEqualTest castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeInfOrEqualTest ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeStrictSupTest'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeStrictSupTest ;

//---------------------------------------------------------------------------*

class GGS_typeStrictSupTest : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeStrictSupTest (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeStrictSupTest (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeStrictSupTest (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeStrictSupTest
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeStrictSupTest constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_typeExpression & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeStrictSupTest * getPtr (void) const {
    return (cPtr_typeStrictSupTest *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeStrictSupTest * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeStrictSupTest * operator () (LOCATION_ARGS) const {
      return (cPtr_typeStrictSupTest *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeStrictSupTest castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeStrictSupTest ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeSupOrEqualTest'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeSupOrEqualTest ;

//---------------------------------------------------------------------------*

class GGS_typeSupOrEqualTest : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeSupOrEqualTest (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeSupOrEqualTest (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeSupOrEqualTest (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeSupOrEqualTest
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeSupOrEqualTest constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_typeExpression & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeSupOrEqualTest * getPtr (void) const {
    return (cPtr_typeSupOrEqualTest *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeSupOrEqualTest * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeSupOrEqualTest * operator () (LOCATION_ARGS) const {
      return (cPtr_typeSupOrEqualTest *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeSupOrEqualTest castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeSupOrEqualTest ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeLeftShiftOperation'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeLeftShiftOperation ;

//---------------------------------------------------------------------------*

class GGS_typeLeftShiftOperation : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeLeftShiftOperation (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeLeftShiftOperation (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeLeftShiftOperation (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeLeftShiftOperation
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeLeftShiftOperation constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_typeExpression & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeLeftShiftOperation * getPtr (void) const {
    return (cPtr_typeLeftShiftOperation *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeLeftShiftOperation * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeLeftShiftOperation * operator () (LOCATION_ARGS) const {
      return (cPtr_typeLeftShiftOperation *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeLeftShiftOperation castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeLeftShiftOperation ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeRightShiftOperation'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeRightShiftOperation ;

//---------------------------------------------------------------------------*

class GGS_typeRightShiftOperation : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeRightShiftOperation (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeRightShiftOperation (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeRightShiftOperation (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeRightShiftOperation
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeRightShiftOperation constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_typeExpression & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeRightShiftOperation * getPtr (void) const {
    return (cPtr_typeRightShiftOperation *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mLeftExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mRightExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeRightShiftOperation * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeRightShiftOperation * operator () (LOCATION_ARGS) const {
      return (cPtr_typeRightShiftOperation *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeRightShiftOperation castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeRightShiftOperation ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeClassToTypeOperand'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeClassToTypeOperand ;

//---------------------------------------------------------------------------*

class GGS_typeClassToTypeOperand : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeClassToTypeOperand (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeClassToTypeOperand (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeClassToTypeOperand (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeClassToTypeOperand
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeClassToTypeOperand constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeClassToTypeOperand * getPtr (void) const {
    return (cPtr_typeClassToTypeOperand *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTypeName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeClassToTypeOperand * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeClassToTypeOperand * operator () (LOCATION_ARGS) const {
      return (cPtr_typeClassToTypeOperand *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeClassToTypeOperand castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeClassToTypeOperand ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeFieldAccessOperation'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeFieldAccessOperation ;

//---------------------------------------------------------------------------*

class GGS_typeFieldAccessOperation : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeFieldAccessOperation (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeFieldAccessOperation (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeFieldAccessOperation (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeFieldAccessOperation
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeFieldAccessOperation constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeExpression & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeFieldAccessOperation * getPtr (void) const {
    return (cPtr_typeFieldAccessOperation *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeExpression  reader_mExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mFieldName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeFieldAccessOperation * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeFieldAccessOperation * operator () (LOCATION_ARGS) const {
      return (cPtr_typeFieldAccessOperation *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeFieldAccessOperation castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeFieldAccessOperation ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeTextTableCall'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeTextTableCall ;

//---------------------------------------------------------------------------*

class GGS_typeTextTableCall : public GGS_typeExpression {
//--- Default constructor
  public : inline GGS_typeTextTableCall (void) :
  GGS_typeExpression () {}

//--- Pointer assignment constructor
  public : GGS_typeTextTableCall (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeTextTableCall (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeTextTableCall
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeTextTableCall constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeExpression & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeCplusPlusName & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeTextTableCall * getPtr (void) const {
    return (cPtr_typeTextTableCall *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeExpression  reader_mExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_aNomMethodeTest (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeCplusPlusName  reader_aNomCppClef (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeTextTableCall * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeTextTableCall * operator () (LOCATION_ARGS) const {
      return (cPtr_typeTextTableCall *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeTextTableCall castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeTextTableCall ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_C_assignmentInstruction'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_assignmentInstruction ;

//---------------------------------------------------------------------------*

class GGS_C_assignmentInstruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_C_assignmentInstruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_C_assignmentInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_assignmentInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_assignmentInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_assignmentInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_typeExpression & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_assignmentInstruction * getPtr (void) const {
    return (cPtr_C_assignmentInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeCplusPlusName  reader_mTargetVarCppName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mStructAttributeList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mSourceExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_assignmentInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_assignmentInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_C_assignmentInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_assignmentInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_assignmentInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS class 'GGS_C_constantDeclarationInstruction'             *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_constantDeclarationInstruction ;

//---------------------------------------------------------------------------*

class GGS_C_constantDeclarationInstruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_C_constantDeclarationInstruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_C_constantDeclarationInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_constantDeclarationInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_constantDeclarationInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_constantDeclarationInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_typeCplusPlusName & argument_1,
                                const GGS_typeExpression & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_constantDeclarationInstruction * getPtr (void) const {
    return (cPtr_C_constantDeclarationInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_galgasType  reader_mTargetType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeCplusPlusName  reader_mTargetVarCppName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mSourceExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_constantDeclarationInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_constantDeclarationInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_C_constantDeclarationInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_constantDeclarationInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_constantDeclarationInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_C_dotEqualInstruction'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_dotEqualInstruction ;

//---------------------------------------------------------------------------*

class GGS_C_dotEqualInstruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_C_dotEqualInstruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_C_dotEqualInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_dotEqualInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_dotEqualInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_dotEqualInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_typeExpression & argument_2,
                                const GGS_string& argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_dotEqualInstruction * getPtr (void) const {
    return (cPtr_C_dotEqualInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeCplusPlusName  reader_mTargetVarCppName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mStructAttributeList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mSourceExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_mSourceExpressionConverter (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_dotEqualInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_dotEqualInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_C_dotEqualInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_dotEqualInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_dotEqualInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//        GALGAS class 'GGS_C_declarationInstructionWithAssignment'          *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_declarationInstructionWithAssignment ;

//---------------------------------------------------------------------------*

class GGS_C_declarationInstructionWithAssignment : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_C_declarationInstructionWithAssignment (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_C_declarationInstructionWithAssignment (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_declarationInstructionWithAssignment (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_declarationInstructionWithAssignment
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_declarationInstructionWithAssignment constructor_new (C_CompilerEx & inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_typeCplusPlusName & argument_1,
                                const GGS_typeExpression & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_declarationInstructionWithAssignment * getPtr (void) const {
    return (cPtr_C_declarationInstructionWithAssignment *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_galgasType  reader_mVariableType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeCplusPlusName  reader_mTargetVarCppName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mSourceExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_declarationInstructionWithAssignment * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_declarationInstructionWithAssignment * operator () (LOCATION_ARGS) const {
      return (cPtr_C_declarationInstructionWithAssignment *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_declarationInstructionWithAssignment castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_declarationInstructionWithAssignment ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_C_while_instruction'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_while_instruction ;

//---------------------------------------------------------------------------*

class GGS_C_while_instruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_C_while_instruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_C_while_instruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_while_instruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_while_instruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_while_instruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeExpression & argument_0,
                                const GGS_typeInstructionList & argument_1,
                                const GGS_typeExpression & argument_2,
                                const GGS_typeInstructionList & argument_3,
                                const GGS_location & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_while_instruction * getPtr (void) const {
    return (cPtr_C_while_instruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeExpression  reader_mVariantExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeInstructionList  reader_mInstructionList1 (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mWhileExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeInstructionList  reader_mInstructionList2 (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_mLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_while_instruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_while_instruction * operator () (LOCATION_ARGS) const {
      return (cPtr_C_while_instruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_while_instruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_while_instruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                list '@L_expression_instructionsList_list'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_expression_instructionsList_list ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_L_expression_instructionsList_list ;

//---------------------------------------------------------------------------*

class GGS_L_expression_instructionsList_list : public AC_GGS_list {
  public : typedef elementOf_GGS_L_expression_instructionsList_list cElement ;

//--- Constructor 'emptyList'
  public : static GGS_L_expression_instructionsList_list constructor_emptyList (void) ;
  public : static GGS_L_expression_instructionsList_list constructor_listWithValue (const GGS_typeExpression & argument_0,
                                const GGS_typeInstructionList & argument_1,
                                const GGS_location & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_expression_instructionsList_list & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_L_expression_instructionsList_list
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_expression_instructionsList_list
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_L_expression_instructionsList_list * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_typeExpression & _out_0,
                              GGS_typeInstructionList & _out_1,
                              GGS_location & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_typeExpression & _out_0,
                             GGS_typeInstructionList & _out_1,
                             GGS_location & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_typeExpression & _out_0,
                                GGS_typeInstructionList & _out_1,
                                GGS_location & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_typeExpression & _out_0,
                                 GGS_typeInstructionList & _out_1,
                                 GGS_location & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_L_expression_instructionsList_list inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_typeExpression & argument_0,
                                const GGS_typeInstructionList & argument_1,
                                const GGS_location & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_expression_instructionsList_list operator_concat (const GGS_L_expression_instructionsList_list & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_typeExpression & argument_0,
                                const GGS_typeInstructionList & argument_1,
                                const GGS_location & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_typeExpression & argument_0,
                                const GGS_typeInstructionList & argument_1,
                                const GGS_location & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_typeExpression & argument_0,
                                const GGS_typeInstructionList & argument_1,
                                const GGS_location & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_typeExpression 
  reader_mIFexpressionAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_typeInstructionList 
  reader_mInstructionListAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_location 
  reader_mLocationAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMIFexpressionAtIndex (C_CompilerEx & inLexique,
                              const GGS_typeExpression  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_CompilerEx & inLexique,
                              const GGS_typeInstructionList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMLocationAtIndex (C_CompilerEx & inLexique,
                              const GGS_location  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_L_expression_instructionsList_list castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_L_expression_instructionsList_list & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_typeExpression   & _mIFexpression (LOCATION_ARGS) const ;
    public : /* const */ GGS_typeInstructionList   & _mInstructionList (LOCATION_ARGS) const ;
    public : /* const */ GGS_location   & _mLocation (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_C_if_instruction'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_if_instruction ;

//---------------------------------------------------------------------------*

class GGS_C_if_instruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_C_if_instruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_C_if_instruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_if_instruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_if_instruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_if_instruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_L_expression_instructionsList_list & argument_0,
                                const GGS_typeInstructionList & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_if_instruction * getPtr (void) const {
    return (cPtr_C_if_instruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_L_expression_instructionsList_list  reader_mIFbranchesList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeInstructionList  reader_mElseInstructionsList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_if_instruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_if_instruction * operator () (LOCATION_ARGS) const {
      return (cPtr_C_if_instruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_if_instruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_if_instruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@L_switchBranchlist'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_switchBranchlist ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_L_switchBranchlist ;

//---------------------------------------------------------------------------*

class GGS_L_switchBranchlist : public AC_GGS_list {
  public : typedef elementOf_GGS_L_switchBranchlist cElement ;

//--- Constructor 'emptyList'
  public : static GGS_L_switchBranchlist constructor_emptyList (void) ;
  public : static GGS_L_switchBranchlist constructor_listWithValue (const GGS_stringset & argument_0,
                                const GGS_typeInstructionList & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_switchBranchlist & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_L_switchBranchlist
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_switchBranchlist
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_L_switchBranchlist * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_stringset & _out_0,
                              GGS_typeInstructionList & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_stringset & _out_0,
                             GGS_typeInstructionList & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_stringset & _out_0,
                                GGS_typeInstructionList & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_stringset & _out_0,
                                 GGS_typeInstructionList & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_L_switchBranchlist inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_stringset & argument_0,
                                const GGS_typeInstructionList & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_switchBranchlist operator_concat (const GGS_L_switchBranchlist & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_stringset & argument_0,
                                const GGS_typeInstructionList & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_stringset & argument_0,
                                const GGS_typeInstructionList & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_stringset & argument_0,
                                const GGS_typeInstructionList & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_stringset 
  reader_mConstantSetAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_typeInstructionList 
  reader_mInstructionListAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMConstantSetAtIndex (C_CompilerEx & inLexique,
                              const GGS_stringset  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_CompilerEx & inLexique,
                              const GGS_typeInstructionList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_L_switchBranchlist castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_L_switchBranchlist & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_stringset   & _mConstantSet (LOCATION_ARGS) const ;
    public : /* const */ GGS_typeInstructionList   & _mInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_C_switch_instruction'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_switch_instruction ;

//---------------------------------------------------------------------------*

class GGS_C_switch_instruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_C_switch_instruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_C_switch_instruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_switch_instruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_switch_instruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_switch_instruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeExpression & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_L_switchBranchlist & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_switch_instruction * getPtr (void) const {
    return (cPtr_C_switch_instruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeExpression  reader_mSwitchExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mEnumTypeName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_L_switchBranchlist  reader_mBranchList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_switch_instruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_switch_instruction * operator () (LOCATION_ARGS) const {
      return (cPtr_C_switch_instruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_switch_instruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_switch_instruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Map '@typeTableRoutinesAimplementer'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableRoutinesAimplementer ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeTableRoutinesAimplementer ;

//---------------------------------------------------------------------------*

class GGS_typeTableRoutinesAimplementer : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_typeTableRoutinesAimplementer cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_typeTableRoutinesAimplementer & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_typeTableRoutinesAimplementer & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeTableRoutinesAimplementer castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeTableRoutinesAimplementer * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeTableRoutinesAimplementer * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeTableRoutinesAimplementer constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_typeTableRoutinesAimplementer constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey

                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_typeTableRoutinesAimplementer constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_typeTableRoutinesAimplementer & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeTableRoutinesAimplementer reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_typeTableRoutinesAimplementer & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_typeTableRoutinesAimplementer & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Map '@typeTableAttributsSemantiques'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableAttributsSemantiques ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeTableAttributsSemantiques ;

//---------------------------------------------------------------------------*

class GGS_typeTableAttributsSemantiques : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_typeTableAttributsSemantiques cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_typeTableAttributsSemantiques & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_typeTableAttributsSemantiques & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeTableAttributsSemantiques castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeTableAttributsSemantiques * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeTableAttributsSemantiques * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeTableAttributsSemantiques constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_typeTableAttributsSemantiques constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_typeCplusPlusName & inValue0,
                                             const GGS_AC_galgasType & inValue1
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_typeCplusPlusName &  inParameter0,
                                const GGS_AC_galgasType &  inParameter1 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_typeCplusPlusName   & outParameter0,
                                GGS_AC_galgasType   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_typeCplusPlusName & inParameter0,
                                   const GGS_AC_galgasType & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_typeCplusPlusName & outParameter0,
                                   GGS_AC_galgasType & outParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_typeTableAttributsSemantiques constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_typeTableAttributsSemantiques & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeTableAttributsSemantiques reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_typeTableAttributsSemantiques & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_typeTableAttributsSemantiques & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_typeCplusPlusName   & _aNomCppAttribut (LOCATION_ARGS) const ;
    public : /* const */ GGS_AC_galgasType   & _mAttributType (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'buildMapWithLocalConstants'                    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildMapWithLocalConstants (C_CompilerEx &,
                                GGS_bool ,
                                GGS_L_nameWithType  ,
                                GGS_typeListeAttributsSemantiques  ,
                                GGS_typeVariablesMap  &,
                                GGS_location  ,
                                GGS_localConstantBuildStyleEnum ,
                                GGS_bool  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'verifierCompatibiliteTypes'                    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_verifierCompatibiliteTypes (C_CompilerEx &,
                                const GGS_typeSemanticsTypesList  ,
                                const GGS_typeListeAttributsSemantiques  ,
                                const GGS_location   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Routine 'verifierCompatibiliteArgEffectifsSignature'            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_verifierCompatibiliteArgEffectifsSignature (C_CompilerEx &,
                                const GGS_L_EXsignature  ,
                                const GGS_L_actualParametersSignature  ,
                                const GGS_location  ,
                                GGS_typeInstructionList  &,
                                GGS_typeExpressionList  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_typeJoker'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeJoker ;

//---------------------------------------------------------------------------*

class GGS_typeJoker : public GGS_typeCible {
//--- Default constructor
  public : inline GGS_typeJoker (void) :
  GGS_typeCible () {}

//--- Pointer assignment constructor
  public : GGS_typeJoker (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeJoker (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeJoker
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeJoker constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeJoker * getPtr (void) const {
    return (cPtr_typeJoker *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeJoker * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeJoker * operator () (LOCATION_ARGS) const {
      return (cPtr_typeJoker *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeJoker castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeJoker ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeEntiteDest'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeEntiteDest ;

//---------------------------------------------------------------------------*

class GGS_typeEntiteDest : public GGS_typeCible {
//--- Default constructor
  public : inline GGS_typeEntiteDest (void) :
  GGS_typeCible () {}

//--- Pointer assignment constructor
  public : GGS_typeEntiteDest (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeEntiteDest (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeEntiteDest
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeEntiteDest constructor_new (C_CompilerEx & inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_typeCplusPlusName & argument_1,
                                const GGS_location & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeEntiteDest * getPtr (void) const {
    return (cPtr_typeEntiteDest *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_galgasType  reader_aTypeVarDest (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeCplusPlusName  reader_mCppName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_aPositionVariableCible (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeEntiteDest * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeEntiteDest * operator () (LOCATION_ARGS) const {
      return (cPtr_typeEntiteDest *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeEntiteDest castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeEntiteDest ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Map '@M_nonTerminalSymbolForSyntax'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonTerminalSymbolForSyntax ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_M_nonTerminalSymbolForSyntax ;

//---------------------------------------------------------------------------*

class GGS_M_nonTerminalSymbolForSyntax : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_M_nonTerminalSymbolForSyntax cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_M_nonTerminalSymbolForSyntax & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_M_nonTerminalSymbolForSyntax & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_M_nonTerminalSymbolForSyntax castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_nonTerminalSymbolForSyntax * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_nonTerminalSymbolForSyntax * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_nonTerminalSymbolForSyntax constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_M_nonTerminalSymbolForSyntax constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_M_nonterminalSymbolAlts & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_nonterminalSymbolAlts &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_nonterminalSymbolAlts   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_M_nonterminalSymbolAlts & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_M_nonterminalSymbolAlts & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_M_nonTerminalSymbolForSyntax constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_M_nonTerminalSymbolForSyntax & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_nonTerminalSymbolForSyntax reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_nonTerminalSymbolForSyntax & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_nonTerminalSymbolForSyntax & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_M_nonterminalSymbolAlts   & _mAltParametersMap (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_C_grammarInstruction'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_grammarInstruction ;

//---------------------------------------------------------------------------*

class GGS_C_grammarInstruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_C_grammarInstruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_C_grammarInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_grammarInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_grammarInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_grammarInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_bool& argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_typeExpressionList & argument_3,
                                const GGS_lstring & argument_4,
                                const GGS_lstring & argument_5,
                                const GGS_typeCplusPlusName & argument_6,
                                const GGS_typeExpression & argument_7,
                                const GGS_typeExpression & argument_8
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_grammarInstruction * getPtr (void) const {
    return (cPtr_C_grammarInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_bool reader_mSourceIsFile (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mSourceExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mGrammarName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpressionList  reader_mExpressionsList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mAltSymbol (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mLexiqueClassName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeCplusPlusName  reader_mSentStringName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mDependencyFileExtension (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mDependancyFilePath (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_grammarInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_grammarInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_C_grammarInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_grammarInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_grammarInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeAppendInstruction'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeAppendInstruction ;

//---------------------------------------------------------------------------*

class GGS_typeAppendInstruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_typeAppendInstruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_typeAppendInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeAppendInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeAppendInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeAppendInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_typeExpressionList & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeAppendInstruction * getPtr (void) const {
    return (cPtr_typeAppendInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeCplusPlusName  reader_mTargetVarCppName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mStructAttributeList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpressionList  reader_mSourceExpressions (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeAppendInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeAppendInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeAppendInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeAppendInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeAppendInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeIncrementInstruction'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeIncrementInstruction ;

//---------------------------------------------------------------------------*

class GGS_typeIncrementInstruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_typeIncrementInstruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_typeIncrementInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeIncrementInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeIncrementInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeIncrementInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_location & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeIncrementInstruction * getPtr (void) const {
    return (cPtr_typeIncrementInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeCplusPlusName  reader_mTargetVarCppName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mStructAttributeList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_mInstructionLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeIncrementInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeIncrementInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeIncrementInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeIncrementInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeIncrementInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeDecrementInstruction'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeDecrementInstruction ;

//---------------------------------------------------------------------------*

class GGS_typeDecrementInstruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_typeDecrementInstruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_typeDecrementInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeDecrementInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeDecrementInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeDecrementInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeCplusPlusName & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_location & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeDecrementInstruction * getPtr (void) const {
    return (cPtr_typeDecrementInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeCplusPlusName  reader_mTargetVarCppName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mStructAttributeList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_mInstructionLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeDecrementInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeDecrementInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeDecrementInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeDecrementInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeDecrementInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@L_matchInstructionCasesList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_matchInstructionCasesList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_L_matchInstructionCasesList ;

//---------------------------------------------------------------------------*

class GGS_L_matchInstructionCasesList : public AC_GGS_list {
  public : typedef elementOf_GGS_L_matchInstructionCasesList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_L_matchInstructionCasesList constructor_emptyList (void) ;
  public : static GGS_L_matchInstructionCasesList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeInstructionList & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_matchInstructionCasesList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_L_matchInstructionCasesList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_matchInstructionCasesList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_L_matchInstructionCasesList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstring & _out_1,
                              GGS_typeInstructionList & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstring & _out_1,
                             GGS_typeInstructionList & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstring & _out_1,
                                GGS_typeInstructionList & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstring & _out_1,
                                 GGS_typeInstructionList & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_L_matchInstructionCasesList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeInstructionList & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_matchInstructionCasesList operator_concat (const GGS_L_matchInstructionCasesList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeInstructionList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeInstructionList & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeInstructionList & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mCase1_nameAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mCase2_nameAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_typeInstructionList 
  reader_mInstructionListAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMCase1_nameAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMCase2_nameAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_CompilerEx & inLexique,
                              const GGS_typeInstructionList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_L_matchInstructionCasesList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_L_matchInstructionCasesList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mCase1_name (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mCase2_name (LOCATION_ARGS) const ;
    public : /* const */ GGS_typeInstructionList   & _mInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeMatchInstruction'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeMatchInstruction ;

//---------------------------------------------------------------------------*

class GGS_typeMatchInstruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_typeMatchInstruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_typeMatchInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeMatchInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeMatchInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeMatchInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_location & argument_1,
                                const GGS_typeCplusPlusName & argument_2,
                                const GGS_typeCplusPlusName & argument_3,
                                const GGS_lstring & argument_4,
                                const GGS_lstring & argument_5,
                                const GGS_bool& argument_6,
                                const GGS_bool& argument_7,
                                const GGS_L_matchInstructionCasesList & argument_8,
                                const GGS_typeInstructionList & argument_9
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeMatchInstruction * getPtr (void) const {
    return (cPtr_typeMatchInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_aIndicatif1 (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_aIndicatif2 (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeCplusPlusName  reader_aNomCppVariable1 (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeCplusPlusName  reader_aNomCppVariable2 (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_aNomTypeBase1 (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_aNomTypeBase2 (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mOperand1_isEnumeration (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mOperand2_isEnumeration (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_L_matchInstructionCasesList  reader_aListeCas (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeInstructionList  reader_mElseInstructionsList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeMatchInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeMatchInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeMatchInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeMatchInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeMatchInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@foreachEnumerationList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_foreachEnumerationList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_foreachEnumerationList ;

//---------------------------------------------------------------------------*

class GGS_foreachEnumerationList : public AC_GGS_list {
  public : typedef elementOf_GGS_foreachEnumerationList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_foreachEnumerationList constructor_emptyList (void) ;
  public : static GGS_foreachEnumerationList constructor_listWithValue (const GGS_bool& argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_location & argument_2,
                                const GGS_string& argument_3,
                                const GGS_bool& argument_4) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_foreachEnumerationList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_foreachEnumerationList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_foreachEnumerationList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_foreachEnumerationList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_bool& _out_0,
                              GGS_typeExpression & _out_1,
                              GGS_location & _out_2,
                              GGS_string& _out_3,
                              GGS_bool& _out_4
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_bool& _out_0,
                             GGS_typeExpression & _out_1,
                             GGS_location & _out_2,
                             GGS_string& _out_3,
                             GGS_bool& _out_4
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_bool& _out_0,
                                GGS_typeExpression & _out_1,
                                GGS_location & _out_2,
                                GGS_string& _out_3,
                                GGS_bool& _out_4
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_bool& _out_0,
                                 GGS_typeExpression & _out_1,
                                 GGS_location & _out_2,
                                 GGS_string& _out_3,
                                 GGS_bool& _out_4
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_foreachEnumerationList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_bool& argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_location & argument_2,
                                const GGS_string& argument_3,
                                const GGS_bool& argument_4) ;
//--- Handling '.' GALGAS operator
  public : GGS_foreachEnumerationList operator_concat (const GGS_foreachEnumerationList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_bool& argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_location & argument_2,
                                const GGS_string& argument_3,
                                const GGS_bool& argument_4
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_bool& argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_location & argument_2,
                                const GGS_string& argument_3,
                                const GGS_bool& argument_4
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_bool& argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_location & argument_2,
                                const GGS_string& argument_3,
                                const GGS_bool& argument_4
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_bool
  reader_mNewStyleAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression 
  reader_mSourceExpressionAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_location 
  reader_mLocationOffsetAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_string
  reader_mCppTypeNameAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_bool
  reader_mAscendingAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMNewStyleAtIndex (C_CompilerEx & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMSourceExpressionAtIndex (C_CompilerEx & inLexique,
                              const GGS_typeExpression  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMLocationOffsetAtIndex (C_CompilerEx & inLexique,
                              const GGS_location  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMCppTypeNameAtIndex (C_CompilerEx & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMAscendingAtIndex (C_CompilerEx & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_foreachEnumerationList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_foreachEnumerationList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_bool  & _mNewStyle (LOCATION_ARGS) const ;
    public : /* const */ GGS_typeExpression   & _mSourceExpression (LOCATION_ARGS) const ;
    public : /* const */ GGS_location   & _mLocationOffset (LOCATION_ARGS) const ;
    public : /* const */ GGS_string  & _mCppTypeName (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mAscending (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeForeachInstruction'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeForeachInstruction ;

//---------------------------------------------------------------------------*

class GGS_typeForeachInstruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_typeForeachInstruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_typeForeachInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeForeachInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeForeachInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeForeachInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_foreachEnumerationList & argument_0,
                                const GGS_typeCplusPlusName & argument_1,
                                const GGS_typeExpression & argument_2,
                                const GGS_typeInstructionList & argument_3,
                                const GGS_typeInstructionList & argument_4,
                                const GGS_typeInstructionList & argument_5,
                                const GGS_typeInstructionList & argument_6
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeForeachInstruction * getPtr (void) const {
    return (cPtr_typeForeachInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_foreachEnumerationList  reader_mForeachEnumerationList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeCplusPlusName  reader_mIndexVariable (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mWhileExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeInstructionList  reader_mBeforeInstructionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeInstructionList  reader_mDoInstructionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeInstructionList  reader_mBetweenInstructionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeInstructionList  reader_mAfterInstructionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeForeachInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeForeachInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeForeachInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeForeachInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeForeachInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  list '@typeStructuredExtractCasesList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeStructuredExtractCasesList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeStructuredExtractCasesList ;

//---------------------------------------------------------------------------*

class GGS_typeStructuredExtractCasesList : public AC_GGS_list {
  public : typedef elementOf_GGS_typeStructuredExtractCasesList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_typeStructuredExtractCasesList constructor_emptyList (void) ;
  public : static GGS_typeStructuredExtractCasesList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_location & argument_1,
                                const GGS_typeInstructionList & argument_2,
                                const GGS_bool& argument_3) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_typeStructuredExtractCasesList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_typeStructuredExtractCasesList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_typeStructuredExtractCasesList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_typeStructuredExtractCasesList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_lstring & _out_0,
                              GGS_location & _out_1,
                              GGS_typeInstructionList & _out_2,
                              GGS_bool& _out_3
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_lstring & _out_0,
                             GGS_location & _out_1,
                             GGS_typeInstructionList & _out_2,
                             GGS_bool& _out_3
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_lstring & _out_0,
                                GGS_location & _out_1,
                                GGS_typeInstructionList & _out_2,
                                GGS_bool& _out_3
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_location & _out_1,
                                 GGS_typeInstructionList & _out_2,
                                 GGS_bool& _out_3
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_typeStructuredExtractCasesList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_location & argument_1,
                                const GGS_typeInstructionList & argument_2,
                                const GGS_bool& argument_3) ;
//--- Handling '.' GALGAS operator
  public : GGS_typeStructuredExtractCasesList operator_concat (const GGS_typeStructuredExtractCasesList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_location & argument_1,
                                const GGS_typeInstructionList & argument_2,
                                const GGS_bool& argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_location & argument_1,
                                const GGS_typeInstructionList & argument_2,
                                const GGS_bool& argument_3
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_location & argument_1,
                                const GGS_typeInstructionList & argument_2,
                                const GGS_bool& argument_3
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mClassNameAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_location 
  reader_mResultVarIDAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_typeInstructionList 
  reader_mInstructionListAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_bool
  reader_mNoUsedParameterAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMClassNameAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMResultVarIDAtIndex (C_CompilerEx & inLexique,
                              const GGS_location  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_CompilerEx & inLexique,
                              const GGS_typeInstructionList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMNoUsedParameterAtIndex (C_CompilerEx & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeStructuredExtractCasesList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_typeStructuredExtractCasesList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mClassName (LOCATION_ARGS) const ;
    public : /* const */ GGS_location   & _mResultVarID (LOCATION_ARGS) const ;
    public : /* const */ GGS_typeInstructionList   & _mInstructionList (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mNoUsedParameter (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//       GALGAS class 'GGS_typeStructuredExtractInstructionWithElse'         *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeStructuredExtractInstructionWithElse ;

//---------------------------------------------------------------------------*

class GGS_typeStructuredExtractInstructionWithElse : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_typeStructuredExtractInstructionWithElse (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_typeStructuredExtractInstructionWithElse (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeStructuredExtractInstructionWithElse (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeStructuredExtractInstructionWithElse
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeStructuredExtractInstructionWithElse constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeCplusPlusName & argument_0,
                                const GGS_typeStructuredExtractCasesList & argument_1,
                                const GGS_typeInstructionList & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeStructuredExtractInstructionWithElse * getPtr (void) const {
    return (cPtr_typeStructuredExtractInstructionWithElse *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeCplusPlusName  reader_mVariableName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeStructuredExtractCasesList  reader_mCasesList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeInstructionList  reader_mElseInstructionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeStructuredExtractInstructionWithElse * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeStructuredExtractInstructionWithElse * operator () (LOCATION_ARGS) const {
      return (cPtr_typeStructuredExtractInstructionWithElse *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeStructuredExtractInstructionWithElse castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeStructuredExtractInstructionWithElse ;

//---------------------------------------------------------------------------*
//                                                                           *
//          GALGAS class 'GGS_AC_elseOrDefaultForCastInstruction'            *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_AC_elseOrDefaultForCastInstruction ;

//---------------------------------------------------------------------------*

class GGS_AC_elseOrDefaultForCastInstruction : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_AC_elseOrDefaultForCastInstruction (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_AC_elseOrDefaultForCastInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_AC_elseOrDefaultForCastInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_AC_elseOrDefaultForCastInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_AC_elseOrDefaultForCastInstruction * getPtr (void) const {
    return (cPtr_AC_elseOrDefaultForCastInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_AC_elseOrDefaultForCastInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_elseOrDefaultForCastInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_AC_elseOrDefaultForCastInstruction *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_AC_elseOrDefaultForCastInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__AC_elseOrDefaultForCastInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_C_elseForCastInstruction'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_elseForCastInstruction ;

//---------------------------------------------------------------------------*

class GGS_C_elseForCastInstruction : public GGS_AC_elseOrDefaultForCastInstruction {
//--- Default constructor
  public : inline GGS_C_elseForCastInstruction (void) :
  GGS_AC_elseOrDefaultForCastInstruction () {}

//--- Pointer assignment constructor
  public : GGS_C_elseForCastInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_elseForCastInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_elseForCastInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_elseForCastInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeInstructionList & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_elseForCastInstruction * getPtr (void) const {
    return (cPtr_C_elseForCastInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeInstructionList  reader_mElseInstructionList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_elseForCastInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_elseForCastInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_C_elseForCastInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_elseForCastInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_elseForCastInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_C_defaultForCastInstruction'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_defaultForCastInstruction ;

//---------------------------------------------------------------------------*

class GGS_C_defaultForCastInstruction : public GGS_AC_elseOrDefaultForCastInstruction {
//--- Default constructor
  public : inline GGS_C_defaultForCastInstruction (void) :
  GGS_AC_elseOrDefaultForCastInstruction () {}

//--- Pointer assignment constructor
  public : GGS_C_defaultForCastInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_defaultForCastInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_defaultForCastInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_defaultForCastInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeExpression & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_defaultForCastInstruction * getPtr (void) const {
    return (cPtr_C_defaultForCastInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeExpression  reader_mErrorLocationExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_mLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_defaultForCastInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_defaultForCastInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_C_defaultForCastInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_defaultForCastInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_defaultForCastInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@typeStructuredCastBranchList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeStructuredCastBranchList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeStructuredCastBranchList ;

//---------------------------------------------------------------------------*

class GGS_typeStructuredCastBranchList : public AC_GGS_list {
  public : typedef elementOf_GGS_typeStructuredCastBranchList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_typeStructuredCastBranchList constructor_emptyList (void) ;
  public : static GGS_typeStructuredCastBranchList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_bool& argument_1,
                                const GGS_typeCplusPlusNameList & argument_2,
                                const GGS_typeInstructionList & argument_3) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_typeStructuredCastBranchList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_typeStructuredCastBranchList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_typeStructuredCastBranchList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_typeStructuredCastBranchList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_lstring & _out_0,
                              GGS_bool& _out_1,
                              GGS_typeCplusPlusNameList & _out_2,
                              GGS_typeInstructionList & _out_3
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_lstring & _out_0,
                             GGS_bool& _out_1,
                             GGS_typeCplusPlusNameList & _out_2,
                             GGS_typeInstructionList & _out_3
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_lstring & _out_0,
                                GGS_bool& _out_1,
                                GGS_typeCplusPlusNameList & _out_2,
                                GGS_typeInstructionList & _out_3
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_bool& _out_1,
                                 GGS_typeCplusPlusNameList & _out_2,
                                 GGS_typeInstructionList & _out_3
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_typeStructuredCastBranchList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_bool& argument_1,
                                const GGS_typeCplusPlusNameList & argument_2,
                                const GGS_typeInstructionList & argument_3) ;
//--- Handling '.' GALGAS operator
  public : GGS_typeStructuredCastBranchList operator_concat (const GGS_typeStructuredCastBranchList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_bool& argument_1,
                                const GGS_typeCplusPlusNameList & argument_2,
                                const GGS_typeInstructionList & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_bool& argument_1,
                                const GGS_typeCplusPlusNameList & argument_2,
                                const GGS_typeInstructionList & argument_3
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_bool& argument_1,
                                const GGS_typeCplusPlusNameList & argument_2,
                                const GGS_typeInstructionList & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mCastClassNameAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_bool
  reader_mCheckForKindOfClassAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_typeCplusPlusNameList 
  reader_mLocalConstantNameAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_typeInstructionList 
  reader_mInstructionListAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMCastClassNameAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMCheckForKindOfClassAtIndex (C_CompilerEx & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMLocalConstantNameAtIndex (C_CompilerEx & inLexique,
                              const GGS_typeCplusPlusNameList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_CompilerEx & inLexique,
                              const GGS_typeInstructionList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeStructuredCastBranchList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_typeStructuredCastBranchList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mCastClassName (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mCheckForKindOfClass (LOCATION_ARGS) const ;
    public : /* const */ GGS_typeCplusPlusNameList   & _mLocalConstantName (LOCATION_ARGS) const ;
    public : /* const */ GGS_typeInstructionList   & _mInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_typeStructuredCastInstruction'              *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeStructuredCastInstruction ;

//---------------------------------------------------------------------------*

class GGS_typeStructuredCastInstruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_typeStructuredCastInstruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_typeStructuredCastInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeStructuredCastInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeStructuredCastInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeStructuredCastInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_typeStructuredCastBranchList & argument_3,
                                const GGS_AC_elseOrDefaultForCastInstruction & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeStructuredCastInstruction * getPtr (void) const {
    return (cPtr_typeStructuredCastInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mCastInstructionLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mSourceExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mSourceExpressionTypeName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeStructuredCastBranchList  reader_mBranchList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_AC_elseOrDefaultForCastInstruction  reader_mElseOrDefault (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeStructuredCastInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeStructuredCastInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeStructuredCastInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeStructuredCastInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeStructuredCastInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_typeRoutineCallInstruction'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeRoutineCallInstruction ;

//---------------------------------------------------------------------------*

class GGS_typeRoutineCallInstruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_typeRoutineCallInstruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_typeRoutineCallInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeRoutineCallInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeRoutineCallInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeRoutineCallInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeExpressionList & argument_1,
                                const GGS_L_EXsignature & argument_2,
                                const GGS_bool& argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeRoutineCallInstruction * getPtr (void) const {
    return (cPtr_typeRoutineCallInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mRoutineName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpressionList  reader_mExpressionsList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_L_EXsignature  reader_mFormalParameterList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mIsExternActionCall (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeRoutineCallInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeRoutineCallInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeRoutineCallInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeRoutineCallInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeRoutineCallInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeLogInstruction'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeLogInstruction ;

//---------------------------------------------------------------------------*

class GGS_typeLogInstruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_typeLogInstruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_typeLogInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeLogInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeLogInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeLogInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeExpression & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeLogInstruction * getPtr (void) const {
    return (cPtr_typeLogInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mLogMessage (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mLogExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeLogInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeLogInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeLogInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeLogInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeLogInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeDropInstruction'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeDropInstruction ;

//---------------------------------------------------------------------------*

class GGS_typeDropInstruction : public GGS_typeInstruction {
//--- Default constructor
  public : inline GGS_typeDropInstruction (void) :
  GGS_typeInstruction () {}

//--- Pointer assignment constructor
  public : GGS_typeDropInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeDropInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeDropInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeDropInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeCplusPlusName & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeDropInstruction * getPtr (void) const {
    return (cPtr_typeDropInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeCplusPlusName  reader_aVariableConsommee (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeDropInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeDropInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeDropInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeDropInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeDropInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Map '@typeTableNomRoutinesDeclarees'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableNomRoutinesDeclarees ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeTableNomRoutinesDeclarees ;

//---------------------------------------------------------------------------*

class GGS_typeTableNomRoutinesDeclarees : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_typeTableNomRoutinesDeclarees cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_typeTableNomRoutinesDeclarees & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_typeTableNomRoutinesDeclarees & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeTableNomRoutinesDeclarees castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeTableNomRoutinesDeclarees * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeTableNomRoutinesDeclarees * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeTableNomRoutinesDeclarees constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_typeTableNomRoutinesDeclarees constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey

                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_typeTableNomRoutinesDeclarees constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_typeTableNomRoutinesDeclarees & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeTableNomRoutinesDeclarees reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_typeTableNomRoutinesDeclarees & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_typeTableNomRoutinesDeclarees & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeEntityToGenerate'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeEntityToGenerate ;

//---------------------------------------------------------------------------*

class GGS_typeEntityToGenerate : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_typeEntityToGenerate (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_typeEntityToGenerate (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeEntityToGenerate (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeEntityToGenerate
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeEntityToGenerate * getPtr (void) const {
    return (cPtr_typeEntityToGenerate *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeEntityToGenerate * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeEntityToGenerate * operator () (LOCATION_ARGS) const {
      return (cPtr_typeEntityToGenerate *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeEntityToGenerate castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__typeEntityToGenerate ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeExternTypeToGenerate'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeExternTypeToGenerate ;

//---------------------------------------------------------------------------*

class GGS_typeExternTypeToGenerate : public GGS_typeEntityToGenerate {
//--- Default constructor
  public : inline GGS_typeExternTypeToGenerate (void) :
  GGS_typeEntityToGenerate () {}

//--- Pointer assignment constructor
  public : GGS_typeExternTypeToGenerate (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeExternTypeToGenerate (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeExternTypeToGenerate
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeExternTypeToGenerate constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_M_externTypeConstructorMap & argument_1,
                                const GGS_typeTableMethodes & argument_2,
                                const GGS_typeTableMethodes & argument_3,
                                const GGS_bool& argument_4,
                                const GGS_typeListeAttributsSemantiques & argument_5
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeExternTypeToGenerate * getPtr (void) const {
    return (cPtr_typeExternTypeToGenerate *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeExternTypeToGenerate * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeExternTypeToGenerate * operator () (LOCATION_ARGS) const {
      return (cPtr_typeExternTypeToGenerate *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeExternTypeToGenerate castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeExternTypeToGenerate ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeRoutineAengendrer'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeRoutineAengendrer ;

//---------------------------------------------------------------------------*

class GGS_typeRoutineAengendrer : public GGS_typeEntityToGenerate {
//--- Default constructor
  public : inline GGS_typeRoutineAengendrer (void) :
  GGS_typeEntityToGenerate () {}

//--- Pointer assignment constructor
  public : GGS_typeRoutineAengendrer (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeRoutineAengendrer (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeRoutineAengendrer
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeRoutineAengendrer constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeListeTypesEtNomsArgMethode & argument_1,
                                const GGS_typeInstructionList & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeRoutineAengendrer * getPtr (void) const {
    return (cPtr_typeRoutineAengendrer *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeRoutineAengendrer * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeRoutineAengendrer * operator () (LOCATION_ARGS) const {
      return (cPtr_typeRoutineAengendrer *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeRoutineAengendrer castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeRoutineAengendrer ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeFonctionAengendrer'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeFonctionAengendrer ;

//---------------------------------------------------------------------------*

class GGS_typeFonctionAengendrer : public GGS_typeEntityToGenerate {
//--- Default constructor
  public : inline GGS_typeFonctionAengendrer (void) :
  GGS_typeEntityToGenerate () {}

//--- Pointer assignment constructor
  public : GGS_typeFonctionAengendrer (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeFonctionAengendrer (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeFonctionAengendrer
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeFonctionAengendrer constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeListeTypesEtNomsArgMethode & argument_1,
                                const GGS_AC_galgasType & argument_2,
                                const GGS_typeCplusPlusName & argument_3,
                                const GGS_typeInstructionList & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeFonctionAengendrer * getPtr (void) const {
    return (cPtr_typeFonctionAengendrer *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeFonctionAengendrer * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeFonctionAengendrer * operator () (LOCATION_ARGS) const {
      return (cPtr_typeFonctionAengendrer *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeFonctionAengendrer castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeFonctionAengendrer ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_typeOnceFunctionToGenerate'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeOnceFunctionToGenerate ;

//---------------------------------------------------------------------------*

class GGS_typeOnceFunctionToGenerate : public GGS_typeEntityToGenerate {
//--- Default constructor
  public : inline GGS_typeOnceFunctionToGenerate (void) :
  GGS_typeEntityToGenerate () {}

//--- Pointer assignment constructor
  public : GGS_typeOnceFunctionToGenerate (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeOnceFunctionToGenerate (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeOnceFunctionToGenerate
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeOnceFunctionToGenerate constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_AC_galgasType & argument_1,
                                const GGS_typeCplusPlusName & argument_2,
                                const GGS_typeInstructionList & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeOnceFunctionToGenerate * getPtr (void) const {
    return (cPtr_typeOnceFunctionToGenerate *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeOnceFunctionToGenerate * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeOnceFunctionToGenerate * operator () (LOCATION_ARGS) const {
      return (cPtr_typeOnceFunctionToGenerate *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeOnceFunctionToGenerate castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeOnceFunctionToGenerate ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_categoryMethodToImplement'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_categoryMethodToImplement ;

//---------------------------------------------------------------------------*

class GGS_categoryMethodToImplement : public GGS_typeEntityToGenerate {
//--- Default constructor
  public : inline GGS_categoryMethodToImplement (void) :
  GGS_typeEntityToGenerate () {}

//--- Pointer assignment constructor
  public : GGS_categoryMethodToImplement (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_categoryMethodToImplement (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_categoryMethodToImplement
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_categoryMethodToImplement constructor_new (C_CompilerEx & inLexique,
                                const GGS_categoryMethodKind& argument_0,
                                const GGS_string& argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_typeListeTypesEtNomsArgMethode & argument_4,
                                const GGS_typeInstructionList & argument_5,
                                const GGS_location & argument_6
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_categoryMethodToImplement * getPtr (void) const {
    return (cPtr_categoryMethodToImplement *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_categoryMethodToImplement * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_categoryMethodToImplement * operator () (LOCATION_ARGS) const {
      return (cPtr_categoryMethodToImplement *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_categoryMethodToImplement castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__categoryMethodToImplement ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_categoryReaderToImplement'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_categoryReaderToImplement ;

//---------------------------------------------------------------------------*

class GGS_categoryReaderToImplement : public GGS_typeEntityToGenerate {
//--- Default constructor
  public : inline GGS_categoryReaderToImplement (void) :
  GGS_typeEntityToGenerate () {}

//--- Pointer assignment constructor
  public : GGS_categoryReaderToImplement (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_categoryReaderToImplement (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_categoryReaderToImplement
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_categoryReaderToImplement constructor_new (C_CompilerEx & inLexique,
                                const GGS_categoryMethodKind& argument_0,
                                const GGS_string& argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_typeListeTypesEtNomsArgMethode & argument_4,
                                const GGS_typeInstructionList & argument_5,
                                const GGS_location & argument_6,
                                const GGS_AC_galgasType & argument_7,
                                const GGS_typeCplusPlusName & argument_8
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_categoryReaderToImplement * getPtr (void) const {
    return (cPtr_categoryReaderToImplement *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_categoryReaderToImplement * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_categoryReaderToImplement * operator () (LOCATION_ARGS) const {
      return (cPtr_categoryReaderToImplement *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_categoryReaderToImplement castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__categoryReaderToImplement ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_categoryTemplateToImplement'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_categoryTemplateToImplement ;

//---------------------------------------------------------------------------*

class GGS_categoryTemplateToImplement : public GGS_typeEntityToGenerate {
//--- Default constructor
  public : inline GGS_categoryTemplateToImplement (void) :
  GGS_typeEntityToGenerate () {}

//--- Pointer assignment constructor
  public : GGS_categoryTemplateToImplement (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_categoryTemplateToImplement (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_categoryTemplateToImplement
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_categoryTemplateToImplement constructor_new (C_CompilerEx & inLexique,
                                const GGS_categoryMethodKind& argument_0,
                                const GGS_string& argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_typeListeTypesEtNomsArgMethode & argument_4,
                                const GGS_templateInstructionList & argument_5,
                                const GGS_location & argument_6,
                                const GGS_bool& argument_7
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_categoryTemplateToImplement * getPtr (void) const {
    return (cPtr_categoryTemplateToImplement *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_categoryTemplateToImplement * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_categoryTemplateToImplement * operator () (LOCATION_ARGS) const {
      return (cPtr_categoryTemplateToImplement *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_categoryTemplateToImplement castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__categoryTemplateToImplement ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_C_listTypeToImplement'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_listTypeToImplement ;

//---------------------------------------------------------------------------*

class GGS_C_listTypeToImplement : public GGS_typeEntityToGenerate {
//--- Default constructor
  public : inline GGS_C_listTypeToImplement (void) :
  GGS_typeEntityToGenerate () {}

//--- Pointer assignment constructor
  public : GGS_C_listTypeToImplement (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_listTypeToImplement (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_listTypeToImplement
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_listTypeToImplement constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_listTypeToImplement * getPtr (void) const {
    return (cPtr_C_listTypeToImplement *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_listTypeToImplement * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_listTypeToImplement * operator () (LOCATION_ARGS) const {
      return (cPtr_C_listTypeToImplement *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_listTypeToImplement castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_listTypeToImplement ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@EXsortDescriptorList'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_EXsortDescriptorList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_EXsortDescriptorList ;

//---------------------------------------------------------------------------*

class GGS_EXsortDescriptorList : public AC_GGS_list {
  public : typedef elementOf_GGS_EXsortDescriptorList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_EXsortDescriptorList constructor_emptyList (void) ;
  public : static GGS_EXsortDescriptorList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_bool& argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_EXsortDescriptorList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_EXsortDescriptorList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_EXsortDescriptorList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_EXsortDescriptorList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_lstring & _out_0,
                              GGS_bool& _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_lstring & _out_0,
                             GGS_bool& _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_lstring & _out_0,
                                GGS_bool& _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_bool& _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_EXsortDescriptorList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_bool& argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_EXsortDescriptorList operator_concat (const GGS_EXsortDescriptorList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_bool& argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_bool& argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_bool& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mSortAttributeAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_bool
  reader_mAscendingOrderAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMSortAttributeAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMAscendingOrderAtIndex (C_CompilerEx & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_EXsortDescriptorList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_EXsortDescriptorList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mSortAttribute (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mAscendingOrder (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_C_sortedListTypeToImplement'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_sortedListTypeToImplement ;

//---------------------------------------------------------------------------*

class GGS_C_sortedListTypeToImplement : public GGS_typeEntityToGenerate {
//--- Default constructor
  public : inline GGS_C_sortedListTypeToImplement (void) :
  GGS_typeEntityToGenerate () {}

//--- Pointer assignment constructor
  public : GGS_C_sortedListTypeToImplement (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_sortedListTypeToImplement (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_sortedListTypeToImplement
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_sortedListTypeToImplement constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_EXsortDescriptorList & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_sortedListTypeToImplement * getPtr (void) const {
    return (cPtr_C_sortedListTypeToImplement *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_sortedListTypeToImplement * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_sortedListTypeToImplement * operator () (LOCATION_ARGS) const {
      return (cPtr_C_sortedListTypeToImplement *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_sortedListTypeToImplement castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_sortedListTypeToImplement ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_typeDefinitionTableAimplementer'             *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeDefinitionTableAimplementer ;

//---------------------------------------------------------------------------*

class GGS_typeDefinitionTableAimplementer : public GGS_typeEntityToGenerate {
//--- Default constructor
  public : inline GGS_typeDefinitionTableAimplementer (void) :
  GGS_typeEntityToGenerate () {}

//--- Pointer assignment constructor
  public : GGS_typeDefinitionTableAimplementer (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeDefinitionTableAimplementer (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeDefinitionTableAimplementer
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeDefinitionTableAimplementer constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_insertOrSearchMethodList & argument_3,
                                const GGS_insertOrSearchMethodList & argument_4,
                                const GGS_typeTableBlocsDeTable & argument_5
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeDefinitionTableAimplementer * getPtr (void) const {
    return (cPtr_typeDefinitionTableAimplementer *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeDefinitionTableAimplementer * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeDefinitionTableAimplementer * operator () (LOCATION_ARGS) const {
      return (cPtr_typeDefinitionTableAimplementer *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeDefinitionTableAimplementer castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeDefinitionTableAimplementer ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Map '@mapAutomatonStateMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapAutomatonStateMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_mapAutomatonStateMap ;

//---------------------------------------------------------------------------*

class GGS_mapAutomatonStateMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_mapAutomatonStateMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_mapAutomatonStateMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_mapAutomatonStateMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_mapAutomatonStateMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_mapAutomatonStateMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_mapAutomatonStateMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_mapAutomatonStateMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_mapAutomatonStateMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_uint & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_uint &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_uint   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_uint & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_uint & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_mapAutomatonStateMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_mapAutomatonStateMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_mapAutomatonStateMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_mapAutomatonStateMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_mapAutomatonStateMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _mStateIndex (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Map '@mapAutomatonActionMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapAutomatonActionMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_mapAutomatonActionMap ;

//---------------------------------------------------------------------------*

class GGS_mapAutomatonActionMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_mapAutomatonActionMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_mapAutomatonActionMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_mapAutomatonActionMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_mapAutomatonActionMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_mapAutomatonActionMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_mapAutomatonActionMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_mapAutomatonActionMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_mapAutomatonActionMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_uint & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_uint &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_uint   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_uint & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_uint & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_mapAutomatonActionMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_mapAutomatonActionMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_mapAutomatonActionMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_mapAutomatonActionMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_mapAutomatonActionMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _mActionIndex (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               sorted list '@mapStateTransitionSortedList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapStateTransitionSortedList ;
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_mapStateTransitionSortedList ;

//---------------------------------------------------------------------------*


class GGS_mapStateTransitionSortedList : public AC_GGS_sortedlist {
  public : typedef elementOf_GGS_mapStateTransitionSortedList cElement ;
//--- Default Constructor
  public : GGS_mapStateTransitionSortedList (void) ;
//--- Copy Constructor
  public : GGS_mapStateTransitionSortedList (const GGS_mapStateTransitionSortedList & inSource) ;
//--- Comparison Operators
  public : GGS_bool operator_isEqual (const GGS_mapStateTransitionSortedList & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_mapStateTransitionSortedList & inOperand) const ;
//--- Constructor 'emptySortedList'
  public : static GGS_mapStateTransitionSortedList constructor_emptySortedList (void) ;
  public : static GGS_mapStateTransitionSortedList constructor_sortedListWithValue (const GGS_uint & argument_0,
                           const GGS_string& argument_1,
                           const GGS_uint & argument_2,
                           const GGS_string& argument_3,
                           const GGS_mapAutomatonMessageKind& argument_4,
                           const GGS_string& argument_5) ;
//--- Get smallest object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalSmallestObject () ;
  }
//--- Get greatest object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalGreatestObject () ;
  }
//--- Operators () used for method call
  public : const GGS_mapStateTransitionSortedList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'smallest'
  public : void method_smallest (C_CompilerEx & inLexique,
                              GGS_uint & _out_0,
                              GGS_string& _out_1,
                              GGS_uint & _out_2,
                              GGS_string& _out_3,
                              GGS_mapAutomatonMessageKind& _out_4,
                              GGS_string& _out_5
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'greatest'
  public : void method_greatest (C_CompilerEx & inLexique,
                             GGS_uint & _out_0,
                             GGS_string& _out_1,
                             GGS_uint & _out_2,
                             GGS_string& _out_3,
                             GGS_mapAutomatonMessageKind& _out_4,
                             GGS_string& _out_5
                             COMMA_LOCATION_ARGS) const ;
//--- Method 'popGreatest'
  public : void modifier_popGreatest (C_CompilerEx & inLexique,
                                GGS_uint & _out_0,
                                GGS_string& _out_1,
                                GGS_uint & _out_2,
                                GGS_string& _out_3,
                                GGS_mapAutomatonMessageKind& _out_4,
                                GGS_string& _out_5
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popSmallest'
  public : void modifier_popSmallest (C_CompilerEx & inLexique,
                                 GGS_uint & _out_0,
                                 GGS_string& _out_1,
                                 GGS_uint & _out_2,
                                 GGS_string& _out_3,
                                 GGS_mapAutomatonMessageKind& _out_4,
                                 GGS_string& _out_5
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_mapStateTransitionSortedList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_uint & argument_0,
                                const GGS_string& argument_1,
                                const GGS_uint & argument_2,
                                const GGS_string& argument_3,
                                const GGS_mapAutomatonMessageKind& argument_4,
                                const GGS_string& argument_5) ;
//--- Handling '.' GALGAS operator
  public : GGS_mapStateTransitionSortedList operator_concat (const GGS_mapStateTransitionSortedList & inOperand) const ;

//--- Internal Methods
  protected : void internalAppendValues (const GGS_uint & argument_0,
                                const GGS_string& argument_1,
                                const GGS_uint & argument_2,
                                const GGS_string& argument_3,
                                const GGS_mapAutomatonMessageKind& argument_4,
                                const GGS_string& argument_5) ;
//--- List Insulation
  protected : void insulateList (void) ;
//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_mapStateTransitionSortedList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- Sorted List Enumerator
  public : class cEnumerator : public cAbstractSortedListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_mapStateTransitionSortedList & inList,
                                 const bool inAscending) :
    cAbstractSortedListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint  & _mActionIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _mActionName (LOCATION_ARGS) const ;
    public : /* const */ GGS_uint  & _mTargetStateIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _mTargetStateName (LOCATION_ARGS) const ;
    public : /* const */ GGS_mapAutomatonMessageKind & _mTransitionMessageKind (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _mTransitionMessage (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    sorted list '@mapStateSortedList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapStateSortedList ;
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_mapStateSortedList ;

//---------------------------------------------------------------------------*


class GGS_mapStateSortedList : public AC_GGS_sortedlist {
  public : typedef elementOf_GGS_mapStateSortedList cElement ;
//--- Default Constructor
  public : GGS_mapStateSortedList (void) ;
//--- Copy Constructor
  public : GGS_mapStateSortedList (const GGS_mapStateSortedList & inSource) ;
//--- Comparison Operators
  public : GGS_bool operator_isEqual (const GGS_mapStateSortedList & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_mapStateSortedList & inOperand) const ;
//--- Constructor 'emptySortedList'
  public : static GGS_mapStateSortedList constructor_emptySortedList (void) ;
  public : static GGS_mapStateSortedList constructor_sortedListWithValue (const GGS_uint & argument_0,
                           const GGS_string& argument_1,
                           const GGS_mapAutomatonMessageKind& argument_2,
                           const GGS_string& argument_3,
                           const GGS_mapStateTransitionSortedList & argument_4) ;
//--- Get smallest object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalSmallestObject () ;
  }
//--- Get greatest object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalGreatestObject () ;
  }
//--- Operators () used for method call
  public : const GGS_mapStateSortedList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'smallest'
  public : void method_smallest (C_CompilerEx & inLexique,
                              GGS_uint & _out_0,
                              GGS_string& _out_1,
                              GGS_mapAutomatonMessageKind& _out_2,
                              GGS_string& _out_3,
                              GGS_mapStateTransitionSortedList & _out_4
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'greatest'
  public : void method_greatest (C_CompilerEx & inLexique,
                             GGS_uint & _out_0,
                             GGS_string& _out_1,
                             GGS_mapAutomatonMessageKind& _out_2,
                             GGS_string& _out_3,
                             GGS_mapStateTransitionSortedList & _out_4
                             COMMA_LOCATION_ARGS) const ;
//--- Method 'popGreatest'
  public : void modifier_popGreatest (C_CompilerEx & inLexique,
                                GGS_uint & _out_0,
                                GGS_string& _out_1,
                                GGS_mapAutomatonMessageKind& _out_2,
                                GGS_string& _out_3,
                                GGS_mapStateTransitionSortedList & _out_4
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popSmallest'
  public : void modifier_popSmallest (C_CompilerEx & inLexique,
                                 GGS_uint & _out_0,
                                 GGS_string& _out_1,
                                 GGS_mapAutomatonMessageKind& _out_2,
                                 GGS_string& _out_3,
                                 GGS_mapStateTransitionSortedList & _out_4
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_mapStateSortedList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_uint & argument_0,
                                const GGS_string& argument_1,
                                const GGS_mapAutomatonMessageKind& argument_2,
                                const GGS_string& argument_3,
                                const GGS_mapStateTransitionSortedList & argument_4) ;
//--- Handling '.' GALGAS operator
  public : GGS_mapStateSortedList operator_concat (const GGS_mapStateSortedList & inOperand) const ;

//--- Internal Methods
  protected : void internalAppendValues (const GGS_uint & argument_0,
                                const GGS_string& argument_1,
                                const GGS_mapAutomatonMessageKind& argument_2,
                                const GGS_string& argument_3,
                                const GGS_mapStateTransitionSortedList & argument_4) ;
//--- List Insulation
  protected : void insulateList (void) ;
//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_mapStateSortedList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- Sorted List Enumerator
  public : class cEnumerator : public cAbstractSortedListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_mapStateSortedList & inList,
                                 const bool inAscending) :
    cAbstractSortedListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint  & _mStateIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _mStateName (LOCATION_ARGS) const ;
    public : /* const */ GGS_mapAutomatonMessageKind & _mStateMessageKind (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _mStateMessage (LOCATION_ARGS) const ;
    public : /* const */ GGS_mapStateTransitionSortedList  & _mTransitionList (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          sorted list '@branchBehaviourSortedListForMapOverride'           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_branchBehaviourSortedListForMapOverride ;
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_branchBehaviourSortedListForMapOverride ;

//---------------------------------------------------------------------------*


class GGS_branchBehaviourSortedListForMapOverride : public AC_GGS_sortedlist {
  public : typedef elementOf_GGS_branchBehaviourSortedListForMapOverride cElement ;
//--- Default Constructor
  public : GGS_branchBehaviourSortedListForMapOverride (void) ;
//--- Copy Constructor
  public : GGS_branchBehaviourSortedListForMapOverride (const GGS_branchBehaviourSortedListForMapOverride & inSource) ;
//--- Comparison Operators
  public : GGS_bool operator_isEqual (const GGS_branchBehaviourSortedListForMapOverride & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_branchBehaviourSortedListForMapOverride & inOperand) const ;
//--- Constructor 'emptySortedList'
  public : static GGS_branchBehaviourSortedListForMapOverride constructor_emptySortedList (void) ;
  public : static GGS_branchBehaviourSortedListForMapOverride constructor_sortedListWithValue (const GGS_uint & argument_0,
                           const GGS_string& argument_1,
                           const GGS_uint & argument_2,
                           const GGS_string& argument_3,
                           const GGS_uint & argument_4,
                           const GGS_string& argument_5,
                           const GGS_mapAutomatonMessageKind& argument_6,
                           const GGS_string& argument_7) ;
//--- Get smallest object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalSmallestObject () ;
  }
//--- Get greatest object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalGreatestObject () ;
  }
//--- Operators () used for method call
  public : const GGS_branchBehaviourSortedListForMapOverride * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'smallest'
  public : void method_smallest (C_CompilerEx & inLexique,
                              GGS_uint & _out_0,
                              GGS_string& _out_1,
                              GGS_uint & _out_2,
                              GGS_string& _out_3,
                              GGS_uint & _out_4,
                              GGS_string& _out_5,
                              GGS_mapAutomatonMessageKind& _out_6,
                              GGS_string& _out_7
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'greatest'
  public : void method_greatest (C_CompilerEx & inLexique,
                             GGS_uint & _out_0,
                             GGS_string& _out_1,
                             GGS_uint & _out_2,
                             GGS_string& _out_3,
                             GGS_uint & _out_4,
                             GGS_string& _out_5,
                             GGS_mapAutomatonMessageKind& _out_6,
                             GGS_string& _out_7
                             COMMA_LOCATION_ARGS) const ;
//--- Method 'popGreatest'
  public : void modifier_popGreatest (C_CompilerEx & inLexique,
                                GGS_uint & _out_0,
                                GGS_string& _out_1,
                                GGS_uint & _out_2,
                                GGS_string& _out_3,
                                GGS_uint & _out_4,
                                GGS_string& _out_5,
                                GGS_mapAutomatonMessageKind& _out_6,
                                GGS_string& _out_7
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popSmallest'
  public : void modifier_popSmallest (C_CompilerEx & inLexique,
                                 GGS_uint & _out_0,
                                 GGS_string& _out_1,
                                 GGS_uint & _out_2,
                                 GGS_string& _out_3,
                                 GGS_uint & _out_4,
                                 GGS_string& _out_5,
                                 GGS_mapAutomatonMessageKind& _out_6,
                                 GGS_string& _out_7
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_branchBehaviourSortedListForMapOverride inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_uint & argument_0,
                                const GGS_string& argument_1,
                                const GGS_uint & argument_2,
                                const GGS_string& argument_3,
                                const GGS_uint & argument_4,
                                const GGS_string& argument_5,
                                const GGS_mapAutomatonMessageKind& argument_6,
                                const GGS_string& argument_7) ;
//--- Handling '.' GALGAS operator
  public : GGS_branchBehaviourSortedListForMapOverride operator_concat (const GGS_branchBehaviourSortedListForMapOverride & inOperand) const ;

//--- Internal Methods
  protected : void internalAppendValues (const GGS_uint & argument_0,
                                const GGS_string& argument_1,
                                const GGS_uint & argument_2,
                                const GGS_string& argument_3,
                                const GGS_uint & argument_4,
                                const GGS_string& argument_5,
                                const GGS_mapAutomatonMessageKind& argument_6,
                                const GGS_string& argument_7) ;
//--- List Insulation
  protected : void insulateList (void) ;
//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_branchBehaviourSortedListForMapOverride castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- Sorted List Enumerator
  public : class cEnumerator : public cAbstractSortedListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_branchBehaviourSortedListForMapOverride & inList,
                                 const bool inAscending) :
    cAbstractSortedListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint  & _mStartStateIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _mStartStateName (LOCATION_ARGS) const ;
    public : /* const */ GGS_uint  & _mCurrentStateIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _mCurrentStateName (LOCATION_ARGS) const ;
    public : /* const */ GGS_uint  & _mFinalStateIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _mFinalStateName (LOCATION_ARGS) const ;
    public : /* const */ GGS_mapAutomatonMessageKind & _mStateMessageKind (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _mBehaviourMessage (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         list '@mapOverrideList'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapOverrideList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_mapOverrideList ;

//---------------------------------------------------------------------------*

class GGS_mapOverrideList : public AC_GGS_list {
  public : typedef elementOf_GGS_mapOverrideList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_mapOverrideList constructor_emptyList (void) ;
  public : static GGS_mapOverrideList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_branchBehaviourSortedListForMapOverride & argument_1,
                                const GGS_branchBehaviourSortedListForMapOverride & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_mapOverrideList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_mapOverrideList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_mapOverrideList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_mapOverrideList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_lstring & _out_0,
                              GGS_branchBehaviourSortedListForMapOverride & _out_1,
                              GGS_branchBehaviourSortedListForMapOverride & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_lstring & _out_0,
                             GGS_branchBehaviourSortedListForMapOverride & _out_1,
                             GGS_branchBehaviourSortedListForMapOverride & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_lstring & _out_0,
                                GGS_branchBehaviourSortedListForMapOverride & _out_1,
                                GGS_branchBehaviourSortedListForMapOverride & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_branchBehaviourSortedListForMapOverride & _out_1,
                                 GGS_branchBehaviourSortedListForMapOverride & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_mapOverrideList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_branchBehaviourSortedListForMapOverride & argument_1,
                                const GGS_branchBehaviourSortedListForMapOverride & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_mapOverrideList operator_concat (const GGS_mapOverrideList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_branchBehaviourSortedListForMapOverride & argument_1,
                                const GGS_branchBehaviourSortedListForMapOverride & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_branchBehaviourSortedListForMapOverride & argument_1,
                                const GGS_branchBehaviourSortedListForMapOverride & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_branchBehaviourSortedListForMapOverride & argument_1,
                                const GGS_branchBehaviourSortedListForMapOverride & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mOverrideNameAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_branchBehaviourSortedListForMapOverride 
  reader_mBranchBehaviourSortedListForMapOverrideAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_branchBehaviourSortedListForMapOverride 
  reader_mBranchCombinationSortedListForMapOverrideAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMOverrideNameAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMBranchBehaviourSortedListForMapOverrideAtIndex (C_CompilerEx & inLexique,
                              const GGS_branchBehaviourSortedListForMapOverride  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMBranchCombinationSortedListForMapOverrideAtIndex (C_CompilerEx & inLexique,
                              const GGS_branchBehaviourSortedListForMapOverride  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_mapOverrideList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_mapOverrideList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mOverrideName (LOCATION_ARGS) const ;
    public : /* const */ GGS_branchBehaviourSortedListForMapOverride   & _mBranchBehaviourSortedListForMapOverride (LOCATION_ARGS) const ;
    public : /* const */ GGS_branchBehaviourSortedListForMapOverride   & _mBranchCombinationSortedListForMapOverride (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_C_mapToImplement'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_mapToImplement ;

//---------------------------------------------------------------------------*

class GGS_C_mapToImplement : public GGS_typeEntityToGenerate {
//--- Default constructor
  public : inline GGS_C_mapToImplement (void) :
  GGS_typeEntityToGenerate () {}

//--- Pointer assignment constructor
  public : GGS_C_mapToImplement (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_mapToImplement (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_mapToImplement
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_mapToImplement constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_typeSemanticAttributesMap & argument_2,
                                const GGS_insertOrSearchMethodList & argument_3,
                                const GGS_insertOrSearchMethodList & argument_4,
                                const GGS_insertOrSearchMethodList & argument_5,
                                const GGS_bool& argument_6,
                                const GGS_mapStateSortedList & argument_7,
                                const GGS_uint & argument_8,
                                const GGS_mapOverrideList & argument_9
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_mapToImplement * getPtr (void) const {
    return (cPtr_C_mapToImplement *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_bool reader_mHasInsertOrReplaceModifier (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapStateSortedList  reader_mMapStateSortedList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mActionCount (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapOverrideList  reader_mMapOverrideList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_mapToImplement * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_mapToImplement * operator () (LOCATION_ARGS) const {
      return (cPtr_C_mapToImplement *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_mapToImplement castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_mapToImplement ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_C_classToImplement'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_classToImplement ;

//---------------------------------------------------------------------------*

class GGS_C_classToImplement : public GGS_typeEntityToGenerate {
//--- Default constructor
  public : inline GGS_C_classToImplement (void) :
  GGS_typeEntityToGenerate () {}

//--- Pointer assignment constructor
  public : GGS_C_classToImplement (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_classToImplement (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_classToImplement
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_classToImplement constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_bool& argument_1,
                                const GGS_typeListeAttributsSemantiques & argument_2,
                                const GGS_typeTableMethodes & argument_3,
                                const GGS_typeTableMethodesAimplementer & argument_4,
                                const GGS_typeListeAttributsSemantiques & argument_5,
                                const GGS_typeSuperClassesMap & argument_6,
                                const GGS_typeClassMessagesMap & argument_7,
                                const GGS_string& argument_8,
                                const GGS_bool& argument_9,
                                const GGS_L_lazyAttributeList & argument_10,
                                const GGS_typeListeAttributsSemantiques & argument_11,
                                const GGS_typeListeAttributsSemantiques & argument_12
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_classToImplement * getPtr (void) const {
    return (cPtr_C_classToImplement *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_classToImplement * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_classToImplement * operator () (LOCATION_ARGS) const {
      return (cPtr_C_classToImplement *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_classToImplement castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_classToImplement ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_C_mapindexToImplement'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_mapindexToImplement ;

//---------------------------------------------------------------------------*

class GGS_C_mapindexToImplement : public GGS_typeEntityToGenerate {
//--- Default constructor
  public : inline GGS_C_mapindexToImplement (void) :
  GGS_typeEntityToGenerate () {}

//--- Pointer assignment constructor
  public : GGS_C_mapindexToImplement (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_mapindexToImplement (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_mapindexToImplement
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_mapindexToImplement constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeListeAttributsSemantiques & argument_2,
                                const GGS_EXmapMethodMap & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_mapindexToImplement * getPtr (void) const {
    return (cPtr_C_mapindexToImplement *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_mapindexToImplement * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_mapindexToImplement * operator () (LOCATION_ARGS) const {
      return (cPtr_C_mapindexToImplement *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_mapindexToImplement castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_mapindexToImplement ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_C_domainToImplement'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_domainToImplement ;

//---------------------------------------------------------------------------*

class GGS_C_domainToImplement : public GGS_typeEntityToGenerate {
//--- Default constructor
  public : inline GGS_C_domainToImplement (void) :
  GGS_typeEntityToGenerate () {}

//--- Pointer assignment constructor
  public : GGS_C_domainToImplement (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_domainToImplement (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_domainToImplement
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_domainToImplement constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_domainAttributeMap & argument_1,
                                const GGS_domainRelationMap & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_domainToImplement * getPtr (void) const {
    return (cPtr_C_domainToImplement *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_domainToImplement * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_domainToImplement * operator () (LOCATION_ARGS) const {
      return (cPtr_C_domainToImplement *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_domainToImplement castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_domainToImplement ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeEntiteRoutineExterne'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeEntiteRoutineExterne ;

//---------------------------------------------------------------------------*

class GGS_typeEntiteRoutineExterne : public GGS_AC_semanticsEntity {
//--- Default constructor
  public : inline GGS_typeEntiteRoutineExterne (void) :
  GGS_AC_semanticsEntity () {}

//--- Pointer assignment constructor
  public : GGS_typeEntiteRoutineExterne (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeEntiteRoutineExterne (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeEntiteRoutineExterne
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeEntiteRoutineExterne constructor_new (C_CompilerEx & inLexique,
                                const GGS_L_EXsignature & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeEntiteRoutineExterne * getPtr (void) const {
    return (cPtr_typeEntiteRoutineExterne *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_L_EXsignature  reader_aSignature (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- 'messageTypeEntite' message
  public : GGS_string reader_messageTypeEntite (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeEntiteRoutineExterne * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeEntiteRoutineExterne * operator () (LOCATION_ARGS) const {
      return (cPtr_typeEntiteRoutineExterne *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeEntiteRoutineExterne castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeEntiteRoutineExterne ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeEntiteFonctionExterne'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeEntiteFonctionExterne ;

//---------------------------------------------------------------------------*

class GGS_typeEntiteFonctionExterne : public GGS_AC_semanticsEntity {
//--- Default constructor
  public : inline GGS_typeEntiteFonctionExterne (void) :
  GGS_AC_semanticsEntity () {}

//--- Pointer assignment constructor
  public : GGS_typeEntiteFonctionExterne (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeEntiteFonctionExterne (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeEntiteFonctionExterne
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeEntiteFonctionExterne constructor_new (C_CompilerEx & inLexique,
                                const GGS_L_EXsignature & argument_0,
                                const GGS_AC_galgasType & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeEntiteFonctionExterne * getPtr (void) const {
    return (cPtr_typeEntiteFonctionExterne *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_L_EXsignature  reader_aSignature (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_AC_galgasType  reader_mReturnedType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- 'messageTypeEntite' message
  public : GGS_string reader_messageTypeEntite (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeEntiteFonctionExterne * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeEntiteFonctionExterne * operator () (LOCATION_ARGS) const {
      return (cPtr_typeEntiteFonctionExterne *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeEntiteFonctionExterne castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeEntiteFonctionExterne ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_typeRoutineExterneAengendrer'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeRoutineExterneAengendrer ;

//---------------------------------------------------------------------------*

class GGS_typeRoutineExterneAengendrer : public GGS_typeEntityToGenerate {
//--- Default constructor
  public : inline GGS_typeRoutineExterneAengendrer (void) :
  GGS_typeEntityToGenerate () {}

//--- Pointer assignment constructor
  public : GGS_typeRoutineExterneAengendrer (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeRoutineExterneAengendrer (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeRoutineExterneAengendrer
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeRoutineExterneAengendrer constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_L_EXsignature & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeRoutineExterneAengendrer * getPtr (void) const {
    return (cPtr_typeRoutineExterneAengendrer *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeRoutineExterneAengendrer * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeRoutineExterneAengendrer * operator () (LOCATION_ARGS) const {
      return (cPtr_typeRoutineExterneAengendrer *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeRoutineExterneAengendrer castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeRoutineExterneAengendrer ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_typeFonctionExterneAengendrer'              *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeFonctionExterneAengendrer ;

//---------------------------------------------------------------------------*

class GGS_typeFonctionExterneAengendrer : public GGS_typeEntityToGenerate {
//--- Default constructor
  public : inline GGS_typeFonctionExterneAengendrer (void) :
  GGS_typeEntityToGenerate () {}

//--- Pointer assignment constructor
  public : GGS_typeFonctionExterneAengendrer (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeFonctionExterneAengendrer (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeFonctionExterneAengendrer
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeFonctionExterneAengendrer constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_L_EXsignature & argument_1,
                                const GGS_AC_galgasType & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeFonctionExterneAengendrer * getPtr (void) const {
    return (cPtr_typeFonctionExterneAengendrer *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeFonctionExterneAengendrer * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeFonctionExterneAengendrer * operator () (LOCATION_ARGS) const {
      return (cPtr_typeFonctionExterneAengendrer *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeFonctionExterneAengendrer castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeFonctionExterneAengendrer ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@typeEntitiesToGenerateList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeEntitiesToGenerateList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeEntitiesToGenerateList ;

//---------------------------------------------------------------------------*

class GGS_typeEntitiesToGenerateList : public AC_GGS_list {
  public : typedef elementOf_GGS_typeEntitiesToGenerateList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_typeEntitiesToGenerateList constructor_emptyList (void) ;
  public : static GGS_typeEntitiesToGenerateList constructor_listWithValue (const GGS_typeEntityToGenerate & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_typeEntitiesToGenerateList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_typeEntitiesToGenerateList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_typeEntitiesToGenerateList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_typeEntitiesToGenerateList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_typeEntityToGenerate & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_typeEntityToGenerate & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_typeEntityToGenerate & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_typeEntityToGenerate & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_typeEntitiesToGenerateList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_typeEntityToGenerate & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_typeEntitiesToGenerateList operator_concat (const GGS_typeEntitiesToGenerateList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_typeEntityToGenerate & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_typeEntityToGenerate & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_typeEntityToGenerate & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_typeEntityToGenerate 
  reader_mEntityToGenerateAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMEntityToGenerateAtIndex (C_CompilerEx & inLexique,
                              const GGS_typeEntityToGenerate  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeEntitiesToGenerateList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_typeEntitiesToGenerateList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_typeEntityToGenerate   & _mEntityToGenerate (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_typeGalgasListmapToImplement'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgasListmapToImplement ;

//---------------------------------------------------------------------------*

class GGS_typeGalgasListmapToImplement : public GGS_typeEntityToGenerate {
//--- Default constructor
  public : inline GGS_typeGalgasListmapToImplement (void) :
  GGS_typeEntityToGenerate () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasListmapToImplement (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasListmapToImplement (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgasListmapToImplement
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasListmapToImplement constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeListeAttributsSemantiques & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasListmapToImplement * getPtr (void) const {
    return (cPtr_typeGalgasListmapToImplement *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasListmapToImplement * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasListmapToImplement * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasListmapToImplement *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgasListmapToImplement castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgasListmapToImplement ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map '@typeEnumCstMessageStringMap'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeEnumCstMessageStringMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeEnumCstMessageStringMap ;

//---------------------------------------------------------------------------*

class GGS_typeEnumCstMessageStringMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_typeEnumCstMessageStringMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_typeEnumCstMessageStringMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_typeEnumCstMessageStringMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeEnumCstMessageStringMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeEnumCstMessageStringMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeEnumCstMessageStringMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeEnumCstMessageStringMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_typeEnumCstMessageStringMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_lstring & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lstring &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lstring   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_lstring & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_lstring & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_typeEnumCstMessageStringMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_typeEnumCstMessageStringMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeEnumCstMessageStringMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_typeEnumCstMessageStringMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_typeEnumCstMessageStringMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mMessageString (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_enumGalgasType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_enumGalgasType ;

//---------------------------------------------------------------------------*

class GGS_enumGalgasType : public GGS_typeEntityToGenerate {
//--- Default constructor
  public : inline GGS_enumGalgasType (void) :
  GGS_typeEntityToGenerate () {}

//--- Pointer assignment constructor
  public : GGS_enumGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_enumGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_enumGalgasType
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_enumGalgasType constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_enumConstantMap & argument_1,
                                const GGS_typeEnumMessageMap & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_enumGalgasType * getPtr (void) const {
    return (cPtr_enumGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_enumGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_enumGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_enumGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_enumGalgasType castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__enumGalgasType ;

void routine_appendJokersIfNeeded (C_CompilerEx &,
                                GGS_typeCplusPlusNameList  &,
                                GGS_uint  ,
                                GGS_uint  ,
                                GGS_typeCplusPlusName   COMMA_LOCATION_ARGS) ;

void routine_generateSemanticsComponent (C_CompilerEx &,
                                GGS_lstring  &,
                                GGS_stringset  &,
                                GGS_string &,
                                GGS_typeEntitiesToGenerateList  &,
                                GGS_stringset  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@ruleDescriptorForProgramList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ruleDescriptorForProgramList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_ruleDescriptorForProgramList ;

//---------------------------------------------------------------------------*

class GGS_ruleDescriptorForProgramList : public AC_GGS_list {
  public : typedef elementOf_GGS_ruleDescriptorForProgramList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_ruleDescriptorForProgramList constructor_emptyList (void) ;
  public : static GGS_ruleDescriptorForProgramList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_typeInstructionList & argument_3) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_ruleDescriptorForProgramList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_ruleDescriptorForProgramList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_ruleDescriptorForProgramList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_ruleDescriptorForProgramList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_lstring & _out_0,
                              GGS_string& _out_1,
                              GGS_lstring & _out_2,
                              GGS_typeInstructionList & _out_3
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_lstring & _out_0,
                             GGS_string& _out_1,
                             GGS_lstring & _out_2,
                             GGS_typeInstructionList & _out_3
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_lstring & _out_0,
                                GGS_string& _out_1,
                                GGS_lstring & _out_2,
                                GGS_typeInstructionList & _out_3
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_string& _out_1,
                                 GGS_lstring & _out_2,
                                 GGS_typeInstructionList & _out_3
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_ruleDescriptorForProgramList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_typeInstructionList & argument_3) ;
//--- Handling '.' GALGAS operator
  public : GGS_ruleDescriptorForProgramList operator_concat (const GGS_ruleDescriptorForProgramList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_typeInstructionList & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_typeInstructionList & argument_3
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_typeInstructionList & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mSourceExtensionAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_string
  reader_mHelpMessageAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mSourceFileNameAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_typeInstructionList 
  reader_mInstructionListAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMSourceExtensionAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMHelpMessageAtIndex (C_CompilerEx & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMSourceFileNameAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_CompilerEx & inLexique,
                              const GGS_typeInstructionList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_ruleDescriptorForProgramList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_ruleDescriptorForProgramList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mSourceExtension (LOCATION_ARGS) const ;
    public : /* const */ GGS_string  & _mHelpMessage (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mSourceFileName (LOCATION_ARGS) const ;
    public : /* const */ GGS_typeInstructionList   & _mInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  sorted list '@wrapperFileSortedListEX'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_wrapperFileSortedListEX ;
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_wrapperFileSortedListEX ;

//---------------------------------------------------------------------------*


class GGS_wrapperFileSortedListEX : public AC_GGS_sortedlist {
  public : typedef elementOf_GGS_wrapperFileSortedListEX cElement ;
//--- Default Constructor
  public : GGS_wrapperFileSortedListEX (void) ;
//--- Copy Constructor
  public : GGS_wrapperFileSortedListEX (const GGS_wrapperFileSortedListEX & inSource) ;
//--- Comparison Operators
  public : GGS_bool operator_isEqual (const GGS_wrapperFileSortedListEX & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_wrapperFileSortedListEX & inOperand) const ;
//--- Constructor 'emptySortedList'
  public : static GGS_wrapperFileSortedListEX constructor_emptySortedList (void) ;
  public : static GGS_wrapperFileSortedListEX constructor_sortedListWithValue (const GGS_string& argument_0,
                           const GGS_string& argument_1,
                           const GGS_uint & argument_2,
                           const GGS_uint & argument_3) ;
//--- Get smallest object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalSmallestObject () ;
  }
//--- Get greatest object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalGreatestObject () ;
  }
//--- Operators () used for method call
  public : const GGS_wrapperFileSortedListEX * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'smallest'
  public : void method_smallest (C_CompilerEx & inLexique,
                              GGS_string& _out_0,
                              GGS_string& _out_1,
                              GGS_uint & _out_2,
                              GGS_uint & _out_3
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'greatest'
  public : void method_greatest (C_CompilerEx & inLexique,
                             GGS_string& _out_0,
                             GGS_string& _out_1,
                             GGS_uint & _out_2,
                             GGS_uint & _out_3
                             COMMA_LOCATION_ARGS) const ;
//--- Method 'popGreatest'
  public : void modifier_popGreatest (C_CompilerEx & inLexique,
                                GGS_string& _out_0,
                                GGS_string& _out_1,
                                GGS_uint & _out_2,
                                GGS_uint & _out_3
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popSmallest'
  public : void modifier_popSmallest (C_CompilerEx & inLexique,
                                 GGS_string& _out_0,
                                 GGS_string& _out_1,
                                 GGS_uint & _out_2,
                                 GGS_uint & _out_3
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_wrapperFileSortedListEX inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_uint & argument_2,
                                const GGS_uint & argument_3) ;
//--- Handling '.' GALGAS operator
  public : GGS_wrapperFileSortedListEX operator_concat (const GGS_wrapperFileSortedListEX & inOperand) const ;

//--- Internal Methods
  protected : void internalAppendValues (const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_uint & argument_2,
                                const GGS_uint & argument_3) ;
//--- List Insulation
  protected : void insulateList (void) ;
//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_wrapperFileSortedListEX castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- Sorted List Enumerator
  public : class cEnumerator : public cAbstractSortedListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_wrapperFileSortedListEX & inList,
                                 const bool inAscending) :
    cAbstractSortedListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_string & _mRegularFileName (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _mAbsoluteFilePath (LOCATION_ARGS) const ;
    public : /* const */ GGS_uint  & _mWrapperDirectoryIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_uint  & _mWrapperFileIndex (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               sorted list '@wrapperDirectorySortedListEX'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_wrapperDirectorySortedListEX ;
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_wrapperDirectorySortedListEX ;

//---------------------------------------------------------------------------*


class GGS_wrapperDirectorySortedListEX : public AC_GGS_sortedlist {
  public : typedef elementOf_GGS_wrapperDirectorySortedListEX cElement ;
//--- Default Constructor
  public : GGS_wrapperDirectorySortedListEX (void) ;
//--- Copy Constructor
  public : GGS_wrapperDirectorySortedListEX (const GGS_wrapperDirectorySortedListEX & inSource) ;
//--- Comparison Operators
  public : GGS_bool operator_isEqual (const GGS_wrapperDirectorySortedListEX & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_wrapperDirectorySortedListEX & inOperand) const ;
//--- Constructor 'emptySortedList'
  public : static GGS_wrapperDirectorySortedListEX constructor_emptySortedList (void) ;
  public : static GGS_wrapperDirectorySortedListEX constructor_sortedListWithValue (const GGS_string& argument_0,
                           const GGS_wrapperFileSortedListEX & argument_1,
                           const GGS_wrapperDirectorySortedListEX & argument_2,
                           const GGS_uint & argument_3) ;
//--- Get smallest object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalSmallestObject () ;
  }
//--- Get greatest object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalGreatestObject () ;
  }
//--- Operators () used for method call
  public : const GGS_wrapperDirectorySortedListEX * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'smallest'
  public : void method_smallest (C_CompilerEx & inLexique,
                              GGS_string& _out_0,
                              GGS_wrapperFileSortedListEX & _out_1,
                              GGS_wrapperDirectorySortedListEX & _out_2,
                              GGS_uint & _out_3
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'greatest'
  public : void method_greatest (C_CompilerEx & inLexique,
                             GGS_string& _out_0,
                             GGS_wrapperFileSortedListEX & _out_1,
                             GGS_wrapperDirectorySortedListEX & _out_2,
                             GGS_uint & _out_3
                             COMMA_LOCATION_ARGS) const ;
//--- Method 'popGreatest'
  public : void modifier_popGreatest (C_CompilerEx & inLexique,
                                GGS_string& _out_0,
                                GGS_wrapperFileSortedListEX & _out_1,
                                GGS_wrapperDirectorySortedListEX & _out_2,
                                GGS_uint & _out_3
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popSmallest'
  public : void modifier_popSmallest (C_CompilerEx & inLexique,
                                 GGS_string& _out_0,
                                 GGS_wrapperFileSortedListEX & _out_1,
                                 GGS_wrapperDirectorySortedListEX & _out_2,
                                 GGS_uint & _out_3
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_wrapperDirectorySortedListEX inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_string& argument_0,
                                const GGS_wrapperFileSortedListEX & argument_1,
                                const GGS_wrapperDirectorySortedListEX & argument_2,
                                const GGS_uint & argument_3) ;
//--- Handling '.' GALGAS operator
  public : GGS_wrapperDirectorySortedListEX operator_concat (const GGS_wrapperDirectorySortedListEX & inOperand) const ;

//--- Internal Methods
  protected : void internalAppendValues (const GGS_string& argument_0,
                                const GGS_wrapperFileSortedListEX & argument_1,
                                const GGS_wrapperDirectorySortedListEX & argument_2,
                                const GGS_uint & argument_3) ;
//--- List Insulation
  protected : void insulateList (void) ;
//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_wrapperDirectorySortedListEX castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- Sorted List Enumerator
  public : class cEnumerator : public cAbstractSortedListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_wrapperDirectorySortedListEX & inList,
                                 const bool inAscending) :
    cAbstractSortedListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_string & _mDirectoryName (LOCATION_ARGS) const ;
    public : /* const */ GGS_wrapperFileSortedListEX  & _mRegularFileSortedList (LOCATION_ARGS) const ;
    public : /* const */ GGS_wrapperDirectorySortedListEX  & _mDirectorySortedList (LOCATION_ARGS) const ;
    public : /* const */ GGS_uint  & _mWrapperDirectoryIndex (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Map '@wrapperExtensionMapEX'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_wrapperExtensionMapEX ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_wrapperExtensionMapEX ;

//---------------------------------------------------------------------------*

class GGS_wrapperExtensionMapEX : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_wrapperExtensionMapEX cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_wrapperExtensionMapEX & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_wrapperExtensionMapEX & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_wrapperExtensionMapEX castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_wrapperExtensionMapEX * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_wrapperExtensionMapEX * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_wrapperExtensionMapEX constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_wrapperExtensionMapEX constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey

                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_wrapperExtensionMapEX constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_wrapperExtensionMapEX & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_wrapperExtensionMapEX reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_wrapperExtensionMapEX & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_wrapperExtensionMapEX & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_C_wrapperToImplement'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_wrapperToImplement ;

//---------------------------------------------------------------------------*

class GGS_C_wrapperToImplement : public GGS_typeEntityToGenerate {
//--- Default constructor
  public : inline GGS_C_wrapperToImplement (void) :
  GGS_typeEntityToGenerate () {}

//--- Pointer assignment constructor
  public : GGS_C_wrapperToImplement (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_wrapperToImplement (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_wrapperToImplement
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_wrapperToImplement constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_wrapperExtensionMapEX & argument_2,
                                const GGS_wrapperFileSortedListEX & argument_3,
                                const GGS_wrapperDirectorySortedListEX & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_wrapperToImplement * getPtr (void) const {
    return (cPtr_C_wrapperToImplement *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_wrapperToImplement * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_wrapperToImplement * operator () (LOCATION_ARGS) const {
      return (cPtr_C_wrapperToImplement *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_wrapperToImplement castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_wrapperToImplement ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_C_structToImplement'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_structToImplement ;

//---------------------------------------------------------------------------*

class GGS_C_structToImplement : public GGS_typeEntityToGenerate {
//--- Default constructor
  public : inline GGS_C_structToImplement (void) :
  GGS_typeEntityToGenerate () {}

//--- Pointer assignment constructor
  public : GGS_C_structToImplement (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_structToImplement (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_structToImplement
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_structToImplement constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_structToImplement * getPtr (void) const {
    return (cPtr_C_structToImplement *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_structToImplement * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_structToImplement * operator () (LOCATION_ARGS) const {
      return (cPtr_C_structToImplement *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_structToImplement castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_structToImplement ;

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS class 'GGS_C_filewrapperTemplateToImplement'             *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_filewrapperTemplateToImplement ;

//---------------------------------------------------------------------------*

class GGS_C_filewrapperTemplateToImplement : public GGS_typeEntityToGenerate {
//--- Default constructor
  public : inline GGS_C_filewrapperTemplateToImplement (void) :
  GGS_typeEntityToGenerate () {}

//--- Pointer assignment constructor
  public : GGS_C_filewrapperTemplateToImplement (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_filewrapperTemplateToImplement (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_filewrapperTemplateToImplement
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_filewrapperTemplateToImplement constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeListeTypesEtNomsArgMethode & argument_2,
                                const GGS_templateInstructionList & argument_3,
                                const GGS_bool& argument_4
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_filewrapperTemplateToImplement * getPtr (void) const {
    return (cPtr_C_filewrapperTemplateToImplement *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_filewrapperTemplateToImplement * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_filewrapperTemplateToImplement * operator () (LOCATION_ARGS) const {
      return (cPtr_C_filewrapperTemplateToImplement *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_filewrapperTemplateToImplement castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_filewrapperTemplateToImplement ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Map '@templateVariableMapEX'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_templateVariableMapEX ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateVariableMapEX ;

//---------------------------------------------------------------------------*

class GGS_templateVariableMapEX : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_templateVariableMapEX cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_templateVariableMapEX & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_templateVariableMapEX & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateVariableMapEX castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_templateVariableMapEX * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_templateVariableMapEX * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_templateVariableMapEX constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_templateVariableMapEX constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_AC_galgasType & inValue0,
                                             const GGS_typeCplusPlusName & inValue1
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_typeCplusPlusName &  inParameter1 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_galgasType   & outParameter0,
                                GGS_typeCplusPlusName   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_AC_galgasType & inParameter0,
                                   const GGS_typeCplusPlusName & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_AC_galgasType & outParameter0,
                                   GGS_typeCplusPlusName & outParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_templateVariableMapEX constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_templateVariableMapEX & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_templateVariableMapEX reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_templateVariableMapEX & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_templateVariableMapEX & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_AC_galgasType   & _mArgumentType (LOCATION_ARGS) const ;
    public : /* const */ GGS_typeCplusPlusName   & _mCplusPlusName (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@typeCplusPlusNameList'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeCplusPlusNameList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_typeCplusPlusName  mCppName ;
//--- Constructor
  public : elementOf_GGS_typeCplusPlusNameList (const GGS_typeCplusPlusName & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_typeCplusPlusNameList * nextObject (void) const { return (elementOf_GGS_typeCplusPlusNameList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_typeCplusPlusNameList * previousObject (void) const { return (elementOf_GGS_typeCplusPlusNameList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_typeCplusPlusNameList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@typeClassMessagesMap'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeClassMessagesMap {
  public : GGS_lstring  mMessage ;

  public : e_typeClassMessagesMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeClassMessagesMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeClassMessagesMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_typeClassMessagesMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_typeClassMessagesMap * nextObject (void) const { return (elementOf_GGS_typeClassMessagesMap *) mNextItem ; }
  public : inline elementOf_GGS_typeClassMessagesMap * infObject (void) const { return (elementOf_GGS_typeClassMessagesMap *) mInfPtr ; }
  public : inline elementOf_GGS_typeClassMessagesMap * supObject (void) const { return (elementOf_GGS_typeClassMessagesMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeClassMessagesMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@typeSemanticsTypesList'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeSemanticsTypesList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_AC_galgasType  mType ;
  public : GGS_lstring  mGalgasVariableName ;
//--- Constructor
  public : elementOf_GGS_typeSemanticsTypesList (const GGS_AC_galgasType & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_typeSemanticsTypesList * nextObject (void) const { return (elementOf_GGS_typeSemanticsTypesList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_typeSemanticsTypesList * previousObject (void) const { return (elementOf_GGS_typeSemanticsTypesList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_typeSemanticsTypesList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@L_assignedVariables'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_assignedVariables : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_typeCplusPlusName  aNomVariableCible ;
  public : GGS_lstring  aNomAttributSource ;
//--- Constructor
  public : elementOf_GGS_L_assignedVariables (const GGS_typeCplusPlusName & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_assignedVariables * nextObject (void) const { return (elementOf_GGS_L_assignedVariables *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_assignedVariables * previousObject (void) const { return (elementOf_GGS_L_assignedVariables *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_L_assignedVariables ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_typeCible'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_typeCible : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_typeCible (LOCATION_ARGS) ;

//--- Attributes
//--- Method 'verifierType'
  public : virtual void method_verifierType (C_CompilerEx &,
                                GGS_AC_galgasType  ,
                                GGS_lstring & ,
                                GGS_L_assignedVariables & ,
                                GGS_typeCplusPlusNameList & 
                                COMMA_LOCATION_ARGS) const = 0 ;

//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@typeListeCibles'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListeCibles : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_typeCible  aCible ;
//--- Constructor
  public : elementOf_GGS_typeListeCibles (const GGS_typeCible & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_typeListeCibles * nextObject (void) const { return (elementOf_GGS_typeListeCibles *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_typeListeCibles * previousObject (void) const { return (elementOf_GGS_typeListeCibles *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_typeListeCibles ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@L_nameWithType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_nameWithType : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mType ;
  public : GGS_lstring  mName ;
//--- Constructor
  public : elementOf_GGS_L_nameWithType (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_nameWithType * nextObject (void) const { return (elementOf_GGS_L_nameWithType *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_nameWithType * previousObject (void) const { return (elementOf_GGS_L_nameWithType *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_L_nameWithType ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@typeExpressionList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeExpressionList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_typeExpression  mExpression ;
//--- Constructor
  public : elementOf_GGS_typeExpressionList (const GGS_typeExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_typeExpressionList * nextObject (void) const { return (elementOf_GGS_typeExpressionList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_typeExpressionList * previousObject (void) const { return (elementOf_GGS_typeExpressionList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_typeExpressionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@varToDropList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_varToDropList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_typeCplusPlusName  mVarToDrop ;
//--- Constructor
  public : elementOf_GGS_varToDropList (const GGS_typeCplusPlusName & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_varToDropList * nextObject (void) const { return (elementOf_GGS_varToDropList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_varToDropList * previousObject (void) const { return (elementOf_GGS_varToDropList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_varToDropList ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeErrorInstruction.h"

//---------------------------------------------------------------------------*

#include "include_typeSendInstruction.h"

//---------------------------------------------------------------------------*

#include "include_typeWithInstruction.h"

//---------------------------------------------------------------------------*

#include "include_typeWarningInstruction.h"

//---------------------------------------------------------------------------*

#include "include_typeMessageInstruction.h"

//---------------------------------------------------------------------------*

#include "include_typeMethodCallInstruction.h"

//---------------------------------------------------------------------------*

#include "include_typeCallOfTypeMethodInstruction.h"

//---------------------------------------------------------------------------*

#include "include_typeModifierCallInstruction.h"

//---------------------------------------------------------------------------*

#include "include_typeInstructionAppelMethodeListe.h"

//---------------------------------------------------------------------------*

#include "include_typeInstructionDeclarationVarLocale.h"

//---------------------------------------------------------------------------*

#include "include_typeMapBlockPrologueInstruction.h"

//---------------------------------------------------------------------------*

#include "include_typeMapBlockEpilogueInstruction.h"

//---------------------------------------------------------------------------*

#include "include_typeReaderCallInExpression.h"

//---------------------------------------------------------------------------*

#include "include_typeFileWrapperWithStaticPath.h"

//---------------------------------------------------------------------------*

#include "include_typeFileWrapperTemplateCall.h"

//---------------------------------------------------------------------------*

#include "include_typeCategoryTemplateCall.h"

//---------------------------------------------------------------------------*

#include "include_typeFileWrapperObjectInstanciation.h"

//---------------------------------------------------------------------------*

#include "include_typeCastInExpression.h"

//---------------------------------------------------------------------------*

#include "include_objectCastInExpression.h"

//---------------------------------------------------------------------------*

#include "include_typeAndOperation.h"

//---------------------------------------------------------------------------*

#include "include_typeOrOperation.h"

//---------------------------------------------------------------------------*

#include "include_typeXorOperation.h"

//---------------------------------------------------------------------------*

#include "include_typeConcatOperation.h"

//---------------------------------------------------------------------------*

#include "include_typeTrueBool.h"

//---------------------------------------------------------------------------*

#include "include_typeFalseBool.h"

//---------------------------------------------------------------------------*

#include "include_typeLiteralStringExpression.h"

//---------------------------------------------------------------------------*

#include "include_typeLiteralUIntExpression.h"

//---------------------------------------------------------------------------*

#include "include_typeLiteralSIntExpression.h"

//---------------------------------------------------------------------------*

#include "include_typeLiteralUInt64Expression.h"

//---------------------------------------------------------------------------*

#include "include_typeLiteralSInt64Expression.h"

//---------------------------------------------------------------------------*

#include "include_typeLiteralCharExpression.h"

//---------------------------------------------------------------------------*

#include "include_typeLiteralDoubleExpression.h"

//---------------------------------------------------------------------------*

#include "include_typeHereExpression.h"

//---------------------------------------------------------------------------*

#include "include_typeConstructorExpression.h"

//---------------------------------------------------------------------------*

#include "include_typeIfThenElseExpression.h"

//---------------------------------------------------------------------------*

#include "include_typeTestComplement.h"

//---------------------------------------------------------------------------*

#include "include_typeLogicalNegate.h"

//---------------------------------------------------------------------------*

#include "include_typeOptionAccess.h"

//---------------------------------------------------------------------------*

#include "include_typeFunctionCall.h"

//---------------------------------------------------------------------------*

#include "include_typeVarInExpression.h"

//---------------------------------------------------------------------------*

#include "include_typeJokerInExpression.h"

//---------------------------------------------------------------------------*

#include "include_typeAddOperation.h"

//---------------------------------------------------------------------------*

#include "include_typeSubOperation.h"

//---------------------------------------------------------------------------*

#include "include_typeMultiplyOperation.h"

//---------------------------------------------------------------------------*

#include "include_typeDivideOperation.h"

//---------------------------------------------------------------------------*

#include "include_typeModuloOperation.h"

//---------------------------------------------------------------------------*

#include "include_typeUnaryMinusOperation.h"

//---------------------------------------------------------------------------*

#include "include_typeEqualTest.h"

//---------------------------------------------------------------------------*

#include "include_typeNonEqualTest.h"

//---------------------------------------------------------------------------*

#include "include_typeStrictInfTest.h"

//---------------------------------------------------------------------------*

#include "include_typeInfOrEqualTest.h"

//---------------------------------------------------------------------------*

#include "include_typeStrictSupTest.h"

//---------------------------------------------------------------------------*

#include "include_typeSupOrEqualTest.h"

//---------------------------------------------------------------------------*

#include "include_typeLeftShiftOperation.h"

//---------------------------------------------------------------------------*

#include "include_typeRightShiftOperation.h"

//---------------------------------------------------------------------------*

#include "include_typeClassToTypeOperand.h"

//---------------------------------------------------------------------------*

#include "include_typeFieldAccessOperation.h"

//---------------------------------------------------------------------------*

#include "include_typeTextTableCall.h"

//---------------------------------------------------------------------------*

#include "include_C_assignmentInstruction.h"

//---------------------------------------------------------------------------*

#include "include_C_constantDeclarationInstruction.h"

//---------------------------------------------------------------------------*

#include "include_C_dotEqualInstruction.h"

//---------------------------------------------------------------------------*

#include "include_C_declarationInstructionWithAssignment.h"

//---------------------------------------------------------------------------*

#include "include_C_while_instruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//          Element of list '@L_expression_instructionsList_list'            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_expression_instructionsList_list : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_typeExpression  mIFexpression ;
  public : GGS_typeInstructionList  mInstructionList ;
  public : GGS_location  mLocation ;
//--- Constructor
  public : elementOf_GGS_L_expression_instructionsList_list (const GGS_typeExpression & ,
                                const GGS_typeInstructionList & ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_expression_instructionsList_list * nextObject (void) const { return (elementOf_GGS_L_expression_instructionsList_list *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_expression_instructionsList_list * previousObject (void) const { return (elementOf_GGS_L_expression_instructionsList_list *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_L_expression_instructionsList_list ;
} ;

//---------------------------------------------------------------------------*

#include "include_C_if_instruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@L_switchBranchlist'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_switchBranchlist : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_stringset  mConstantSet ;
  public : GGS_typeInstructionList  mInstructionList ;
//--- Constructor
  public : elementOf_GGS_L_switchBranchlist (const GGS_stringset & ,
                                const GGS_typeInstructionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_switchBranchlist * nextObject (void) const { return (elementOf_GGS_L_switchBranchlist *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_switchBranchlist * previousObject (void) const { return (elementOf_GGS_L_switchBranchlist *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_L_switchBranchlist ;
} ;

//---------------------------------------------------------------------------*

#include "include_C_switch_instruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of map '@typeTableRoutinesAimplementer'               *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeTableRoutinesAimplementer {

} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableRoutinesAimplementer : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeTableRoutinesAimplementer (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_typeTableRoutinesAimplementer & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_typeTableRoutinesAimplementer * nextObject (void) const { return (elementOf_GGS_typeTableRoutinesAimplementer *) mNextItem ; }
  public : inline elementOf_GGS_typeTableRoutinesAimplementer * infObject (void) const { return (elementOf_GGS_typeTableRoutinesAimplementer *) mInfPtr ; }
  public : inline elementOf_GGS_typeTableRoutinesAimplementer * supObject (void) const { return (elementOf_GGS_typeTableRoutinesAimplementer *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeTableRoutinesAimplementer mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of map '@typeTableAttributsSemantiques'               *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeTableAttributsSemantiques {
  public : GGS_typeCplusPlusName  aNomCppAttribut ;
  public : GGS_AC_galgasType  mAttributType ;

  public : e_typeTableAttributsSemantiques (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableAttributsSemantiques : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeTableAttributsSemantiques (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_typeTableAttributsSemantiques & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_typeTableAttributsSemantiques * nextObject (void) const { return (elementOf_GGS_typeTableAttributsSemantiques *) mNextItem ; }
  public : inline elementOf_GGS_typeTableAttributsSemantiques * infObject (void) const { return (elementOf_GGS_typeTableAttributsSemantiques *) mInfPtr ; }
  public : inline elementOf_GGS_typeTableAttributsSemantiques * supObject (void) const { return (elementOf_GGS_typeTableAttributsSemantiques *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeTableAttributsSemantiques mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_typeJoker'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_typeJoker : public cPtr_typeCible {
  private : typedef cPtr_typeCible inherited ;
//--- Constructor
  public : cPtr_typeJoker (LOCATION_ARGS) ;

//--- Attributes
//--- Method 'verifierType'
  public : virtual void method_verifierType (C_CompilerEx &,
                                GGS_AC_galgasType  ,
                                GGS_lstring & ,
                                GGS_L_assignedVariables & ,
                                GGS_typeCplusPlusNameList & 
                                COMMA_LOCATION_ARGS) const ;

//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   abstract class 'cPtr_typeEntiteDest'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_typeEntiteDest : public cPtr_typeCible {
  private : typedef cPtr_typeCible inherited ;
//--- Constructor
  public : cPtr_typeEntiteDest (const GGS_AC_galgasType & ,
                                const GGS_typeCplusPlusName & ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_AC_galgasType  aTypeVarDest ;
  public : GGS_typeCplusPlusName  mCppName ;
  public : GGS_location  aPositionVariableCible ;
//--- Method 'verifierType'
  public : virtual void method_verifierType (C_CompilerEx &,
                                GGS_AC_galgasType  ,
                                GGS_lstring & ,
                                GGS_L_assignedVariables & ,
                                GGS_typeCplusPlusNameList & 
                                COMMA_LOCATION_ARGS) const ;

//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of map '@M_nonTerminalSymbolForSyntax'               *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_nonTerminalSymbolForSyntax {
  public : GGS_M_nonterminalSymbolAlts  mAltParametersMap ;

  public : e_M_nonTerminalSymbolForSyntax (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonTerminalSymbolForSyntax : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_nonTerminalSymbolForSyntax (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_M_nonTerminalSymbolForSyntax & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_M_nonTerminalSymbolForSyntax * nextObject (void) const { return (elementOf_GGS_M_nonTerminalSymbolForSyntax *) mNextItem ; }
  public : inline elementOf_GGS_M_nonTerminalSymbolForSyntax * infObject (void) const { return (elementOf_GGS_M_nonTerminalSymbolForSyntax *) mInfPtr ; }
  public : inline elementOf_GGS_M_nonTerminalSymbolForSyntax * supObject (void) const { return (elementOf_GGS_M_nonTerminalSymbolForSyntax *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_nonTerminalSymbolForSyntax mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_C_grammarInstruction.h"

//---------------------------------------------------------------------------*

#include "include_typeAppendInstruction.h"

//---------------------------------------------------------------------------*

#include "include_typeIncrementInstruction.h"

//---------------------------------------------------------------------------*

#include "include_typeDecrementInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@L_matchInstructionCasesList'               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_matchInstructionCasesList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mCase1_name ;
  public : GGS_lstring  mCase2_name ;
  public : GGS_typeInstructionList  mInstructionList ;
//--- Constructor
  public : elementOf_GGS_L_matchInstructionCasesList (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_typeInstructionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_matchInstructionCasesList * nextObject (void) const { return (elementOf_GGS_L_matchInstructionCasesList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_matchInstructionCasesList * previousObject (void) const { return (elementOf_GGS_L_matchInstructionCasesList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_L_matchInstructionCasesList ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeMatchInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@foreachEnumerationList'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_foreachEnumerationList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_bool mNewStyle ;
  public : GGS_typeExpression  mSourceExpression ;
  public : GGS_location  mLocationOffset ;
  public : GGS_string mCppTypeName ;
  public : GGS_bool mAscending ;
//--- Constructor
  public : elementOf_GGS_foreachEnumerationList (const GGS_bool& ,
                                const GGS_typeExpression & ,
                                const GGS_location & ,
                                const GGS_string& ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_foreachEnumerationList * nextObject (void) const { return (elementOf_GGS_foreachEnumerationList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_foreachEnumerationList * previousObject (void) const { return (elementOf_GGS_foreachEnumerationList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_foreachEnumerationList ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeForeachInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//            Element of list '@typeStructuredExtractCasesList'              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeStructuredExtractCasesList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mClassName ;
  public : GGS_location  mResultVarID ;
  public : GGS_typeInstructionList  mInstructionList ;
  public : GGS_bool mNoUsedParameter ;
//--- Constructor
  public : elementOf_GGS_typeStructuredExtractCasesList (const GGS_lstring & ,
                                const GGS_location & ,
                                const GGS_typeInstructionList & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_typeStructuredExtractCasesList * nextObject (void) const { return (elementOf_GGS_typeStructuredExtractCasesList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_typeStructuredExtractCasesList * previousObject (void) const { return (elementOf_GGS_typeStructuredExtractCasesList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_typeStructuredExtractCasesList ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeStructuredExtractInstructionWithElse.h"

//---------------------------------------------------------------------------*

#include "include_AC_elseOrDefaultForCastInstruction.h"

//---------------------------------------------------------------------------*

#include "include_C_elseForCastInstruction.h"

//---------------------------------------------------------------------------*

#include "include_C_defaultForCastInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@typeStructuredCastBranchList'               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeStructuredCastBranchList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mCastClassName ;
  public : GGS_bool mCheckForKindOfClass ;
  public : GGS_typeCplusPlusNameList  mLocalConstantName ;
  public : GGS_typeInstructionList  mInstructionList ;
//--- Constructor
  public : elementOf_GGS_typeStructuredCastBranchList (const GGS_lstring & ,
                                const GGS_bool& ,
                                const GGS_typeCplusPlusNameList & ,
                                const GGS_typeInstructionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_typeStructuredCastBranchList * nextObject (void) const { return (elementOf_GGS_typeStructuredCastBranchList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_typeStructuredCastBranchList * previousObject (void) const { return (elementOf_GGS_typeStructuredCastBranchList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_typeStructuredCastBranchList ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeStructuredCastInstruction.h"

//---------------------------------------------------------------------------*

#include "include_typeRoutineCallInstruction.h"

//---------------------------------------------------------------------------*

#include "include_typeLogInstruction.h"

//---------------------------------------------------------------------------*

#include "include_typeDropInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of map '@typeTableNomRoutinesDeclarees'               *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeTableNomRoutinesDeclarees {

} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableNomRoutinesDeclarees : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeTableNomRoutinesDeclarees (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_typeTableNomRoutinesDeclarees & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_typeTableNomRoutinesDeclarees * nextObject (void) const { return (elementOf_GGS_typeTableNomRoutinesDeclarees *) mNextItem ; }
  public : inline elementOf_GGS_typeTableNomRoutinesDeclarees * infObject (void) const { return (elementOf_GGS_typeTableNomRoutinesDeclarees *) mInfPtr ; }
  public : inline elementOf_GGS_typeTableNomRoutinesDeclarees * supObject (void) const { return (elementOf_GGS_typeTableNomRoutinesDeclarees *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeTableNomRoutinesDeclarees mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeEntityToGenerate.h"

//---------------------------------------------------------------------------*

#include "include_typeExternTypeToGenerate.h"

//---------------------------------------------------------------------------*

#include "include_typeRoutineAengendrer.h"

//---------------------------------------------------------------------------*

#include "include_typeFonctionAengendrer.h"

//---------------------------------------------------------------------------*

#include "include_typeOnceFunctionToGenerate.h"

//---------------------------------------------------------------------------*

#include "include_categoryMethodToImplement.h"

//---------------------------------------------------------------------------*

#include "include_categoryReaderToImplement.h"

//---------------------------------------------------------------------------*

#include "include_categoryTemplateToImplement.h"

//---------------------------------------------------------------------------*

#include "include_C_listTypeToImplement.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@EXsortDescriptorList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_EXsortDescriptorList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mSortAttribute ;
  public : GGS_bool mAscendingOrder ;
//--- Constructor
  public : elementOf_GGS_EXsortDescriptorList (const GGS_lstring & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_EXsortDescriptorList * nextObject (void) const { return (elementOf_GGS_EXsortDescriptorList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_EXsortDescriptorList * previousObject (void) const { return (elementOf_GGS_EXsortDescriptorList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_EXsortDescriptorList ;
} ;

//---------------------------------------------------------------------------*

#include "include_C_sortedListTypeToImplement.h"

//---------------------------------------------------------------------------*

#include "include_typeDefinitionTableAimplementer.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@mapAutomatonStateMap'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_mapAutomatonStateMap {
  public : GGS_uint  mStateIndex ;

  public : e_mapAutomatonStateMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_mapAutomatonStateMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_mapAutomatonStateMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_mapAutomatonStateMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_mapAutomatonStateMap * nextObject (void) const { return (elementOf_GGS_mapAutomatonStateMap *) mNextItem ; }
  public : inline elementOf_GGS_mapAutomatonStateMap * infObject (void) const { return (elementOf_GGS_mapAutomatonStateMap *) mInfPtr ; }
  public : inline elementOf_GGS_mapAutomatonStateMap * supObject (void) const { return (elementOf_GGS_mapAutomatonStateMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_mapAutomatonStateMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of map '@mapAutomatonActionMap'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_mapAutomatonActionMap {
  public : GGS_uint  mActionIndex ;

  public : e_mapAutomatonActionMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_mapAutomatonActionMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_mapAutomatonActionMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_mapAutomatonActionMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_mapAutomatonActionMap * nextObject (void) const { return (elementOf_GGS_mapAutomatonActionMap *) mNextItem ; }
  public : inline elementOf_GGS_mapAutomatonActionMap * infObject (void) const { return (elementOf_GGS_mapAutomatonActionMap *) mInfPtr ; }
  public : inline elementOf_GGS_mapAutomatonActionMap * supObject (void) const { return (elementOf_GGS_mapAutomatonActionMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_mapAutomatonActionMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Element of sorted list '@mapStateTransitionSortedList'           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapStateTransitionSortedList : public AC_GGS_sortedlist::cSortedListElement {
//--- Attributes
  public : GGS_uint  mActionIndex ;
  public : GGS_string mActionName ;
  public : GGS_uint  mTargetStateIndex ;
  public : GGS_string mTargetStateName ;
  public : GGS_mapAutomatonMessageKind mTransitionMessageKind ;
  public : GGS_string mTransitionMessage ;
//--- Constructor
  public : elementOf_GGS_mapStateTransitionSortedList (const GGS_uint & ,
                                const GGS_string& ,
                                const GGS_uint & ,
                                const GGS_string& ,
                                const GGS_mapAutomatonMessageKind& ,
                                const GGS_string& ) ;

//--- Access to next
  public : inline elementOf_GGS_mapStateTransitionSortedList * nextObject (void) const { return (elementOf_GGS_mapStateTransitionSortedList *) internalNextItem () ; }
//--- Access to previous
  public : inline elementOf_GGS_mapStateTransitionSortedList * previousObject (void) const { return (elementOf_GGS_mapStateTransitionSortedList *) internalPreviousItem () ; }
//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cSortedListElement * inOperand) const ;
//--- Method used for sorting elements
  protected : virtual PMSInt32 compareForSorting (const cSortedListElement * inOperand) const ;
//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;
  friend class GGS_mapStateTransitionSortedList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of sorted list '@mapStateSortedList'                *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapStateSortedList : public AC_GGS_sortedlist::cSortedListElement {
//--- Attributes
  public : GGS_uint  mStateIndex ;
  public : GGS_string mStateName ;
  public : GGS_mapAutomatonMessageKind mStateMessageKind ;
  public : GGS_string mStateMessage ;
  public : GGS_mapStateTransitionSortedList  mTransitionList ;
//--- Constructor
  public : elementOf_GGS_mapStateSortedList (const GGS_uint & ,
                                const GGS_string& ,
                                const GGS_mapAutomatonMessageKind& ,
                                const GGS_string& ,
                                const GGS_mapStateTransitionSortedList & ) ;

//--- Access to next
  public : inline elementOf_GGS_mapStateSortedList * nextObject (void) const { return (elementOf_GGS_mapStateSortedList *) internalNextItem () ; }
//--- Access to previous
  public : inline elementOf_GGS_mapStateSortedList * previousObject (void) const { return (elementOf_GGS_mapStateSortedList *) internalPreviousItem () ; }
//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cSortedListElement * inOperand) const ;
//--- Method used for sorting elements
  protected : virtual PMSInt32 compareForSorting (const cSortedListElement * inOperand) const ;
//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;
  friend class GGS_mapStateSortedList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Element of sorted list '@branchBehaviourSortedListForMapOverride'      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_branchBehaviourSortedListForMapOverride : public AC_GGS_sortedlist::cSortedListElement {
//--- Attributes
  public : GGS_uint  mStartStateIndex ;
  public : GGS_string mStartStateName ;
  public : GGS_uint  mCurrentStateIndex ;
  public : GGS_string mCurrentStateName ;
  public : GGS_uint  mFinalStateIndex ;
  public : GGS_string mFinalStateName ;
  public : GGS_mapAutomatonMessageKind mStateMessageKind ;
  public : GGS_string mBehaviourMessage ;
//--- Constructor
  public : elementOf_GGS_branchBehaviourSortedListForMapOverride (const GGS_uint & ,
                                const GGS_string& ,
                                const GGS_uint & ,
                                const GGS_string& ,
                                const GGS_uint & ,
                                const GGS_string& ,
                                const GGS_mapAutomatonMessageKind& ,
                                const GGS_string& ) ;

//--- Access to next
  public : inline elementOf_GGS_branchBehaviourSortedListForMapOverride * nextObject (void) const { return (elementOf_GGS_branchBehaviourSortedListForMapOverride *) internalNextItem () ; }
//--- Access to previous
  public : inline elementOf_GGS_branchBehaviourSortedListForMapOverride * previousObject (void) const { return (elementOf_GGS_branchBehaviourSortedListForMapOverride *) internalPreviousItem () ; }
//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cSortedListElement * inOperand) const ;
//--- Method used for sorting elements
  protected : virtual PMSInt32 compareForSorting (const cSortedListElement * inOperand) const ;
//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;
  friend class GGS_branchBehaviourSortedListForMapOverride ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@mapOverrideList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapOverrideList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mOverrideName ;
  public : GGS_branchBehaviourSortedListForMapOverride  mBranchBehaviourSortedListForMapOverride ;
  public : GGS_branchBehaviourSortedListForMapOverride  mBranchCombinationSortedListForMapOverride ;
//--- Constructor
  public : elementOf_GGS_mapOverrideList (const GGS_lstring & ,
                                const GGS_branchBehaviourSortedListForMapOverride & ,
                                const GGS_branchBehaviourSortedListForMapOverride & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_mapOverrideList * nextObject (void) const { return (elementOf_GGS_mapOverrideList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_mapOverrideList * previousObject (void) const { return (elementOf_GGS_mapOverrideList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_mapOverrideList ;
} ;

//---------------------------------------------------------------------------*

#include "include_C_mapToImplement.h"

//---------------------------------------------------------------------------*

#include "include_C_classToImplement.h"

//---------------------------------------------------------------------------*

#include "include_C_mapindexToImplement.h"

//---------------------------------------------------------------------------*

#include "include_C_domainToImplement.h"

//---------------------------------------------------------------------------*

#include "include_typeEntiteRoutineExterne.h"

//---------------------------------------------------------------------------*

#include "include_typeEntiteFonctionExterne.h"

//---------------------------------------------------------------------------*

#include "include_typeRoutineExterneAengendrer.h"

//---------------------------------------------------------------------------*

#include "include_typeFonctionExterneAengendrer.h"

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@typeEntitiesToGenerateList'                *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeEntitiesToGenerateList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_typeEntityToGenerate  mEntityToGenerate ;
//--- Constructor
  public : elementOf_GGS_typeEntitiesToGenerateList (const GGS_typeEntityToGenerate & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_typeEntitiesToGenerateList * nextObject (void) const { return (elementOf_GGS_typeEntitiesToGenerateList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_typeEntitiesToGenerateList * previousObject (void) const { return (elementOf_GGS_typeEntitiesToGenerateList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_typeEntitiesToGenerateList ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgasListmapToImplement.h"

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of map '@typeEnumCstMessageStringMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeEnumCstMessageStringMap {
  public : GGS_lstring  mMessageString ;

  public : e_typeEnumCstMessageStringMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeEnumCstMessageStringMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeEnumCstMessageStringMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_typeEnumCstMessageStringMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_typeEnumCstMessageStringMap * nextObject (void) const { return (elementOf_GGS_typeEnumCstMessageStringMap *) mNextItem ; }
  public : inline elementOf_GGS_typeEnumCstMessageStringMap * infObject (void) const { return (elementOf_GGS_typeEnumCstMessageStringMap *) mInfPtr ; }
  public : inline elementOf_GGS_typeEnumCstMessageStringMap * supObject (void) const { return (elementOf_GGS_typeEnumCstMessageStringMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeEnumCstMessageStringMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_enumGalgasType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@ruleDescriptorForProgramList'               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ruleDescriptorForProgramList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mSourceExtension ;
  public : GGS_string mHelpMessage ;
  public : GGS_lstring  mSourceFileName ;
  public : GGS_typeInstructionList  mInstructionList ;
//--- Constructor
  public : elementOf_GGS_ruleDescriptorForProgramList (const GGS_lstring & ,
                                const GGS_string& ,
                                const GGS_lstring & ,
                                const GGS_typeInstructionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_ruleDescriptorForProgramList * nextObject (void) const { return (elementOf_GGS_ruleDescriptorForProgramList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_ruleDescriptorForProgramList * previousObject (void) const { return (elementOf_GGS_ruleDescriptorForProgramList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_ruleDescriptorForProgramList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Element of sorted list '@wrapperFileSortedListEX'              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_wrapperFileSortedListEX : public AC_GGS_sortedlist::cSortedListElement {
//--- Attributes
  public : GGS_string mRegularFileName ;
  public : GGS_string mAbsoluteFilePath ;
  public : GGS_uint  mWrapperDirectoryIndex ;
  public : GGS_uint  mWrapperFileIndex ;
//--- Constructor
  public : elementOf_GGS_wrapperFileSortedListEX (const GGS_string& ,
                                const GGS_string& ,
                                const GGS_uint & ,
                                const GGS_uint & ) ;

//--- Access to next
  public : inline elementOf_GGS_wrapperFileSortedListEX * nextObject (void) const { return (elementOf_GGS_wrapperFileSortedListEX *) internalNextItem () ; }
//--- Access to previous
  public : inline elementOf_GGS_wrapperFileSortedListEX * previousObject (void) const { return (elementOf_GGS_wrapperFileSortedListEX *) internalPreviousItem () ; }
//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cSortedListElement * inOperand) const ;
//--- Method used for sorting elements
  protected : virtual PMSInt32 compareForSorting (const cSortedListElement * inOperand) const ;
//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;
  friend class GGS_wrapperFileSortedListEX ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Element of sorted list '@wrapperDirectorySortedListEX'           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_wrapperDirectorySortedListEX : public AC_GGS_sortedlist::cSortedListElement {
//--- Attributes
  public : GGS_string mDirectoryName ;
  public : GGS_wrapperFileSortedListEX  mRegularFileSortedList ;
  public : GGS_wrapperDirectorySortedListEX  mDirectorySortedList ;
  public : GGS_uint  mWrapperDirectoryIndex ;
//--- Constructor
  public : elementOf_GGS_wrapperDirectorySortedListEX (const GGS_string& ,
                                const GGS_wrapperFileSortedListEX & ,
                                const GGS_wrapperDirectorySortedListEX & ,
                                const GGS_uint & ) ;

//--- Access to next
  public : inline elementOf_GGS_wrapperDirectorySortedListEX * nextObject (void) const { return (elementOf_GGS_wrapperDirectorySortedListEX *) internalNextItem () ; }
//--- Access to previous
  public : inline elementOf_GGS_wrapperDirectorySortedListEX * previousObject (void) const { return (elementOf_GGS_wrapperDirectorySortedListEX *) internalPreviousItem () ; }
//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cSortedListElement * inOperand) const ;
//--- Method used for sorting elements
  protected : virtual PMSInt32 compareForSorting (const cSortedListElement * inOperand) const ;
//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;
  friend class GGS_wrapperDirectorySortedListEX ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of map '@wrapperExtensionMapEX'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_wrapperExtensionMapEX {

} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_wrapperExtensionMapEX : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_wrapperExtensionMapEX (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_wrapperExtensionMapEX & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_wrapperExtensionMapEX * nextObject (void) const { return (elementOf_GGS_wrapperExtensionMapEX *) mNextItem ; }
  public : inline elementOf_GGS_wrapperExtensionMapEX * infObject (void) const { return (elementOf_GGS_wrapperExtensionMapEX *) mInfPtr ; }
  public : inline elementOf_GGS_wrapperExtensionMapEX * supObject (void) const { return (elementOf_GGS_wrapperExtensionMapEX *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_wrapperExtensionMapEX mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_C_wrapperToImplement.h"

//---------------------------------------------------------------------------*

#include "include_C_structToImplement.h"

//---------------------------------------------------------------------------*

#include "include_C_filewrapperTemplateToImplement.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of map '@templateVariableMapEX'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_templateVariableMapEX {
  public : GGS_AC_galgasType  mArgumentType ;
  public : GGS_typeCplusPlusName  mCplusPlusName ;

  public : e_templateVariableMapEX (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_templateVariableMapEX : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_templateVariableMapEX (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_templateVariableMapEX & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_templateVariableMapEX * nextObject (void) const { return (elementOf_GGS_templateVariableMapEX *) mNextItem ; }
  public : inline elementOf_GGS_templateVariableMapEX * infObject (void) const { return (elementOf_GGS_templateVariableMapEX *) mInfPtr ; }
  public : inline elementOf_GGS_templateVariableMapEX * supObject (void) const { return (elementOf_GGS_templateVariableMapEX *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_templateVariableMapEX mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

#endif
