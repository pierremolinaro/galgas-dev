//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'templateAnalysis.h'                          *
//             Generated by version version GALGAS_BETA_VERSION              *
//                    november 20th, 2010, at 18h16'24"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef templateAnalysis_ENTITIES_DEFINED
#define templateAnalysis_ENTITIES_DEFINED

//---------------------------------------------------------------------------*

#include "galgas2/predefined-types.h"

//---------------------------------------------------------------------------*

#include "templateTypesForAST.h"
#include "semanticExpressionAnalysis.h"
#include "semanticsDecoratedTypes.h"
#include "semanticContext.h"
#include "semanticsClassMethods.h"
#include "semanticsTypes.h"
#include "semanticsTypesForAST.h"
#include "semanticsInstanceMethods.h"
#include "semanticsModifiers.h"
#include "semanticsReaders.h"
#include "semanticsConstructors.h"
#include "optionCompilation.h"
#include "allASTTypes.h"
#include "lexiqueTypesForAST.h"
#include "optionTypesForAST.h"
#include "guiTypesForAST.h"
#include "syntaxMetamodel.h"
#include "grammarMetamodel.h"
#include "optionSemantics.h"
#include "programMetamodel.h"
#include "templateDecoratedTypes.h"

//---------------------------------------------------------------------------*

class GALGAS_templateVariableMap ;
class GALGAS_templateAnalysisContext ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         @templateVariableMap map                          *
//                                                                           *
//---------------------------------------------------------------------------*

class cMapElement_templateVariableMap ;

//---------------------------------------------------------------------------*

extern const char * kSearchErrorMessage_templateVariableMap_searchKey ;

//---------------------------------------------------------------------------*

class GALGAS_templateVariableMap : public AC_GALGAS_map {
//--------------------------------- Default constructor
  public : GALGAS_templateVariableMap (void) ;

//--------------------------------- Handle copy
  public : GALGAS_templateVariableMap (const GALGAS_templateVariableMap & inSource) ;
  public : GALGAS_templateVariableMap & operator = (const GALGAS_templateVariableMap & inSource) ;

//-- Start of generic part --*

//--------------------------------- Object cloning
  protected : virtual AC_GALGAS_root * clonedObject (void) const ;

//--------------------------------- Object extraction
  public : static GALGAS_templateVariableMap extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler,
                                                            const GALGAS_location & inErrorLocation
                                                            COMMA_LOCATION_ARGS) ;

//--------------------------------- GALGAS constructors
  public : static GALGAS_templateVariableMap constructor_emptyMap (LOCATION_ARGS) ;

  public : static GALGAS_templateVariableMap constructor_mapWithMapToOverride (const GALGAS_templateVariableMap & inOperand0
                                                                               COMMA_LOCATION_ARGS) ;


//--------------------------------- Modifiers
  public : VIRTUAL_IN_DEBUG void modifier_insertKey (GALGAS_lstring constinArgument0,
                                                     GALGAS_unifiedTypeMapProxy constinArgument1,
                                                     GALGAS_string constinArgument2,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMCppNameForKey (GALGAS_string constinArgument0,
                                                             GALGAS_string constinArgument1,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMTypeProxyForKey (GALGAS_unifiedTypeMapProxy constinArgument0,
                                                               GALGAS_string constinArgument1,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) ;


//--------------------------------- Instance Methods
  public : VIRTUAL_IN_DEBUG void method_searchKey (GALGAS_lstring constinArgument0,
                                                   GALGAS_unifiedTypeMapProxy & outArgument1,
                                                   GALGAS_string & outArgument2,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const ;

//--------------------------------- Class Methods

//--------------------------------- Readers
  public : VIRTUAL_IN_DEBUG GALGAS_string reader_mCppNameForKey (const GALGAS_string & constinOperand0,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_unifiedTypeMapProxy reader_mTypeProxyForKey (const GALGAS_string & constinOperand0,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_templateVariableMap reader_overriddenMap (LOCATION_ARGS) const ;


//--------------------------------- Introspection
  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * staticTypeDescriptor (void) const ;
//--------------------------------- 'with' accessors
  public : VIRTUAL_IN_DEBUG cMapElement_templateVariableMap * readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                        const GALGAS_string & inKey
                                                                                                        COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG cMapElement_templateVariableMap * readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                           const GALGAS_lstring & inKey
                                                                                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- Friend

  friend class cEnumerator_templateVariableMap ;
 
} ; // End of GALGAS_templateVariableMap class

//---------------------------------------------------------------------------*
//   Enumerator declaration                                                  *
//---------------------------------------------------------------------------*

class cEnumerator_templateVariableMap : public cGenericAbstractEnumerator {
  public : cEnumerator_templateVariableMap (const GALGAS_templateVariableMap & inEnumeratedObject,
                                            const bool inAscending) ;

//--- Current element access
  public : GALGAS_lstring current_lkey (LOCATION_ARGS) const ;
  public : GALGAS_unifiedTypeMapProxy current_mTypeProxy (LOCATION_ARGS) const ;
  public : GALGAS_string current_mCppName (LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_templateVariableMap ;

//--------------------------------- 'with' accessors
cCollectionElement * readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                               GALGAS_templateVariableMap & ioMap,
                                                               GALGAS_string & inKey
                                                               COMMA_LOCATION_ARGS) ;

cCollectionElement * readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                  GALGAS_templateVariableMap & ioMap,
                                                                  GALGAS_lstring & inKey
                                                                  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      @templateAnalysisContext struct                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GALGAS_templateAnalysisContext : public AC_GALGAS_root {
//--------------------------------- Public data members
  public : GALGAS_semanticContext mAttribute_mSemanticContext ;
  public : GALGAS_predefinedTypes mAttribute_mPredefinedTypes ;
  public : GALGAS_templateVariableMap mAttribute_mTemplateVariableMap ;


//--------------------------------- Accessors
  public : VIRTUAL_IN_DEBUG bool isValid (void) const ;
  public : VIRTUAL_IN_DEBUG void drop (void) ;

//--------------------------------- Default constructor
  public : GALGAS_templateAnalysisContext (void) ;

//--------------------------------- Virtual destructor (in debug mode)
  public : VIRTUAL_IN_DEBUG ~ GALGAS_templateAnalysisContext (void) ;

//--------------------------------- Native constructor
  public : GALGAS_templateAnalysisContext (const GALGAS_semanticContext & in_mSemanticContext,
                                           const GALGAS_predefinedTypes & in_mPredefinedTypes,
                                           const GALGAS_templateVariableMap & in_mTemplateVariableMap) ;

//-- Start of generic part --*

//--------------------------------- Object cloning
  protected : virtual AC_GALGAS_root * clonedObject (void) const ;

//--------------------------------- Object extraction
  public : static GALGAS_templateAnalysisContext extractObject (const GALGAS_object & inObject,
                                                                C_Compiler * inCompiler,
                                                                const GALGAS_location & inErrorLocation
                                                                COMMA_LOCATION_ARGS) ;

//--------------------------------- GALGAS constructors
  public : static GALGAS_templateAnalysisContext constructor_new (const GALGAS_semanticContext & inOperand0,
                                                                  const GALGAS_predefinedTypes & inOperand1,
                                                                  const GALGAS_templateVariableMap & inOperand2
                                                                  COMMA_LOCATION_ARGS) ;

//--------------------------------- Implementation of reader 'description'
  public : VIRTUAL_IN_DEBUG void description (C_String & ioString,
                                              const PMSInt32 inIndentation) const ;
//--------------------------------- Comparison
  public : enumComparisonResult objectCompare (const GALGAS_templateAnalysisContext & inOperand) const ;

//--------------------------------- Modifiers

//--------------------------------- Instance Methods
//--------------------------------- Class Methods

//--------------------------------- Readers
  public : VIRTUAL_IN_DEBUG GALGAS_predefinedTypes reader_mPredefinedTypes (LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_semanticContext reader_mSemanticContext (LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_templateVariableMap reader_mTemplateVariableMap (LOCATION_ARGS) const ;


//--------------------------------- Introspection
  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * staticTypeDescriptor (void) const ;
 
} ; // End of GALGAS_templateAnalysisContext class


//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_templateAnalysisContext ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'templateInstructionListAnalysis'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_templateInstructionListAnalysis (const GALGAS_templateAnalysisContext constinArgument0,
                                              const GALGAS_templateInstructionListAST constinArgument1,
                                              GALGAS_templateInstructionListForGeneration & ioArgument2,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Abstract category method '@templateExpressionAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*categoryMethodSignature_templateExpressionAST_templateExpressionAnalysis) (const cPtr_templateExpressionAST * inObject,
                                                                                          const GALGAS_templateAnalysisContext constinArgument0,
                                                                                          GALGAS_semanticExpressionForGeneration & outArgument1,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_templateExpressionAnalysis (const PMSInt32 inClassIndex,
                                                     categoryMethodSignature_templateExpressionAST_templateExpressionAnalysis inMethod) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                    const GALGAS_templateAnalysisContext constin_inAnalysisContext,
                                                    GALGAS_semanticExpressionForGeneration & out_outExpression,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Abstract category method '@templateInstructionAST templateInstructionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*categoryMethodSignature_templateInstructionAST_templateInstructionAnalysis) (const cPtr_templateInstructionAST * inObject,
                                                                                            const GALGAS_templateAnalysisContext constinArgument0,
                                                                                            GALGAS_templateInstructionListForGeneration & ioArgument1,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_templateInstructionAnalysis (const PMSInt32 inClassIndex,
                                                      categoryMethodSignature_templateInstructionAST_templateInstructionAnalysis inMethod) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_templateInstructionAnalysis (const cPtr_templateInstructionAST * inObject,
                                                     const GALGAS_templateAnalysisContext constin_inAnalysisContext,
                                                     GALGAS_templateInstructionListForGeneration & io_ioInstructionList,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Class for element of '@templateVariableMap' map              *
//                                                                           *
//---------------------------------------------------------------------------*

class cMapElement_templateVariableMap : public cMapElement {
//--- Map attributes
  public : GALGAS_unifiedTypeMapProxy mAttribute_mTypeProxy ;
  public : GALGAS_string mAttribute_mCppName ;

//--- Constructor
  public : cMapElement_templateVariableMap (const GALGAS_lstring & inKey,
                                            const GALGAS_unifiedTypeMapProxy & in_mTypeProxy,
                                            const GALGAS_string & in_mCppName
                                            COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cMapElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

#endif
