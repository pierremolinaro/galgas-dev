//---------------------------------------------------------------------------*
//                                                                           *
//                         File 'optionSemantics.h'                          *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                    november 11th, 2010, at 12h16'28"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef optionSemantics_DEFINED
#define optionSemantics_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_commandLineOptionMap ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Map '@commandLineOptionMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_commandLineOptionMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_commandLineOptionMap ;

//---------------------------------------------------------------------------*

class GGS_commandLineOptionMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_commandLineOptionMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_commandLineOptionMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_commandLineOptionMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_commandLineOptionMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_commandLineOptionMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_commandLineOptionMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_commandLineOptionMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_commandLineOptionMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_char& inValue0,
                                             const GGS_string& inValue1,
                                             const GGS_string& inValue2,
                                             const GGS_string& inValue3
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_char&  inParameter0,
                                const GGS_string&  inParameter1,
                                const GGS_string&  inParameter2,
                                const GGS_string&  inParameter3 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_char  & outParameter0,
                                GGS_string  & outParameter1,
                                GGS_string  & outParameter2,
                                GGS_string  & outParameter3 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_char& inParameter0,
                                   const GGS_string& inParameter1,
                                   const GGS_string& inParameter2,
                                   const GGS_string& inParameter3,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_char& outParameter0,
                                   GGS_string& outParameter1,
                                   GGS_string& outParameter2,
                                   GGS_string& outParameter3,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_commandLineOptionMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_commandLineOptionMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_commandLineOptionMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_commandLineOptionMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_commandLineOptionMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_char  & _mOptionChar (LOCATION_ARGS) const ;
    public : /* const */ GGS_string  & _mOptionString (LOCATION_ARGS) const ;
    public : /* const */ GGS_string  & _mComment (LOCATION_ARGS) const ;
    public : /* const */ GGS_string  & _mDefaultValue (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@commandLineOptionMap'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_commandLineOptionMap {
  public : GGS_char mOptionChar ;
  public : GGS_string mOptionString ;
  public : GGS_string mComment ;
  public : GGS_string mDefaultValue ;

  public : e_commandLineOptionMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_commandLineOptionMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_commandLineOptionMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_commandLineOptionMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_commandLineOptionMap * nextObject (void) const { return (elementOf_GGS_commandLineOptionMap *) mNextItem ; }
  public : inline elementOf_GGS_commandLineOptionMap * infObject (void) const { return (elementOf_GGS_commandLineOptionMap *) mInfPtr ; }
  public : inline elementOf_GGS_commandLineOptionMap * supObject (void) const { return (elementOf_GGS_commandLineOptionMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_commandLineOptionMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

#endif
