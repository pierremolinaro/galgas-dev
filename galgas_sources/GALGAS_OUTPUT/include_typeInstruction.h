//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'include_typeInstruction.h'                      *
//                Generated by version 1.0.0 (LL(1) grammar)                 *
//                     october 29th, 2005, at 20h9'42"                       *
//                                                                           *
// This program is free software; you can redistribute it and/or modify it   *
// under the terms of the GNU General Public License as published by the     *
// Free Software Foundation.                                                 *
//                                                                           *
// This program is distributed in the hope it will be useful, but WITHOUT    *
// ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or     *
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for  *
// more details.                                                             *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_typeInstruction'                    *
//                                                                           *
//---------------------------------------------------------------------------*

#ifndef typeInstruction_DEFINED
#define typeInstruction_DEFINED

//---------------------------------------------------------------------------*

class cPtr_typeInstruction : public C_GGS_Object {
//--- START OF USER ZONE 2

public : virtual void generateInstruction (AC_OutputStream & inCppFile,
                                           const C_String & inLexiqueClassName,
                                           const C_String & inTargetFileName,
                                           sint32 & ioPrototypeIndex,
                                           const bool inGenerateDebug,
                                           const bool inGenerateSemanticInstructions) const = 0 ;
public : virtual void generateSelectAndRepeatPrototypes (AC_OutputStream & inHfile,
                                                         const C_String & inLexiqueClassName,
                                                         const C_String & inTargetFileName,
                                                         sint32 & ioPrototypeIndex,
                                                         const bool inNotDeclared) ;
public : virtual bool isLexiqueFormalArgumentUsed (const bool inGenerateSemanticInstructions) const = 0 ;
public : virtual bool formalArgumentIsUsed (const GGS_typeCplusPlusName & inArgumentCppName,
                                            const bool inGenerateSemanticInstructions) const = 0 ;
public : virtual bool isSyntacticInstruction (void) const { return false ; }

//--- END OF USER ZONE 2

} ;

//---------------------------------------------------------------------------*

#endif

