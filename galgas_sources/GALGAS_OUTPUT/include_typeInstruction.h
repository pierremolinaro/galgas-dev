//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'include_typeInstruction.h'                      *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       may 21th, 2009, at 15h9'43"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1

class GGS_typeCplusPlusName ;

//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_typeInstruction'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_typeInstruction : public cPtr__AC_galgas_class {
//--- START OF USER ZONE 2

  public : virtual void
  generateInstruction (AC_OutputStream & inCppFile,
                       const C_String & inTargetFileName,
                       PMSInt32 & ioPrototypeIndex,
                       const bool inGenerateDebug,
                       const bool inGenerateSemanticInstructions) const = 0 ;

public : virtual void generateSelectAndRepeatPrototypes (AC_OutputStream & inHfile,
                                                         const C_String & inLexiqueClassName,
                                                         const C_String & inTargetFileName,
                                                         PMSInt32 & ioPrototypeIndex,
                                                         const bool inNotDeclared) ;
public : virtual bool isLexiqueFormalArgumentUsed (const bool inGenerateSemanticInstructions) const = 0 ;
public : virtual bool formalArgumentIsUsed (const GGS_typeCplusPlusName & inArgumentCppName,
                                            const bool inGenerateSemanticInstructions) const = 0 ;
public : virtual bool isSyntacticInstruction (void) const { return false ; }

  public : virtual bool
  formalCurrentObjectArgumentIsUsed (void) const = 0 ;

//--- END OF USER ZONE 2

//--- Constructor
  public : cPtr_typeInstruction (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_typeInstruction (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & inLexique,
                        C_String & ioString,
                        const PMSInt32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*

