//---------------------------------------------------------------------------*
//                                                                           *
//                  File 'semanticInstructionsAnalysis.h'                    *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       may 17th, 2010, at 16h16'54"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef semanticInstructionsAnalysis_DEFINED
#define semanticInstructionsAnalysis_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

// Include imported semantics
#include "semanticExpressionAnalysis.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_localConstantList ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@semanticInstructionAST.analyzeSemanticInstruction'    *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction)  (C_Compiler & inLexique,
                                const cPtr_semanticInstructionAST * inObjectPtr,
                                const GGS_semanticContext  var_cas_inSemanticContext,
                                const GGS_predefinedTypes  var_cas_inPredefinedTypes,
                                GGS_semanticInstructionListForGeneration  & var_cas_ioInstructionListForGeneration,
                                GGS_variableMap  & var_cas_ioVariableMap,
                                GGS_stringlist  & var_cas_ioLocalVariableCppNameList,
                                GGS_bool & var_cas_ioUsesCompilerArgument
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction (typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction
findCategoryMethod__semanticInstructionAST__analyzeSemanticInstruction (AC_galgasClassRunTimeInformationEX * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@localConstantList'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_localConstantList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_localConstantList ;

//---------------------------------------------------------------------------*

class GGS_localConstantList : public AC_GGS_list {
  public : typedef elementOf_GGS_localConstantList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_localConstantList constructor_emptyList (void) ;
  public : static GGS_localConstantList constructor_listWithValue (const GGS_unifiedTypeMapProxy & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_bool& argument_2,
                                const GGS_string& argument_3) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_localConstantList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_localConstantList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_localConstantList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_localConstantList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_unifiedTypeMapProxy & _out_0,
                              GGS_lstring & _out_1,
                              GGS_bool& _out_2,
                              GGS_string& _out_3
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_unifiedTypeMapProxy & _out_0,
                             GGS_lstring & _out_1,
                             GGS_bool& _out_2,
                             GGS_string& _out_3
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_unifiedTypeMapProxy & _out_0,
                                GGS_lstring & _out_1,
                                GGS_bool& _out_2,
                                GGS_string& _out_3
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_unifiedTypeMapProxy & _out_0,
                                 GGS_lstring & _out_1,
                                 GGS_bool& _out_2,
                                 GGS_string& _out_3
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_localConstantList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_unifiedTypeMapProxy & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_bool& argument_2,
                                const GGS_string& argument_3) ;
//--- Handling '.' GALGAS operator
  public : GGS_localConstantList operator_concat (const GGS_localConstantList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_unifiedTypeMapProxy & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_bool& argument_2,
                                const GGS_string& argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_unifiedTypeMapProxy & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_bool& argument_2,
                                const GGS_string& argument_3
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_unifiedTypeMapProxy & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_bool& argument_2,
                                const GGS_string& argument_3
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_unifiedTypeMapProxy 
  reader_mTypeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_bool
  reader_mNoWarningIfUnusedAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_string
  reader_mCppNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMTypeAtIndex (C_Compiler & inLexique,
                              const GGS_unifiedTypeMapProxy  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMNoWarningIfUnusedAtIndex (C_Compiler & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMCppNameAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_localConstantList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_localConstantList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_unifiedTypeMapProxy   & _mType (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mName (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mNoWarningIfUnused (LOCATION_ARGS) const ;
    public : /* const */ GGS_string  & _mCppName (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'analyzeSemanticInstructionList'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeSemanticInstructionList (C_Compiler &,
                                const GGS_semanticContext ,
                                const GGS_predefinedTypes ,
                                const GGS_localConstantList  ,
                                const GGS_semanticInstructionListAST  ,
                                const GGS_location  ,
                                GGS_variableMap  &,
                                GGS_semanticInstructionListForGeneration  &,
                                GGS_bool & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Routine 'analyzeErrorOrWarningInstruction'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeErrorOrWarningInstruction (C_Compiler &,
                                const GGS_semanticContext ,
                                const GGS_predefinedTypes ,
                                const GGS_semanticExpressionAST  ,
                                const GGS_semanticExpressionAST  ,
                                const GGS_location  ,
                                const GGS_string ,
                                GGS_variableMap  &,
                                GGS_semanticExpressionForGeneration  &,
                                GGS_semanticExpressionForGeneration  &,
                                GGS_bool & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@actualParameterAST.checkAgainstFormalArgument'      *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__actualParameterAST__checkAgainstFormalArgument)  (C_Compiler & inLexique,
                                const cPtr_actualParameterAST * inObjectPtr,
                                const GGS_semanticContext  var_cas_inSemanticContext,
                                const GGS_predefinedTypes  var_cas_inPredefinedTypes,
                                const GGS_unifiedTypeMapProxy   var_cas_inFormalArgumentType,
                                const GGS_formalArgumentPassingModeAST  var_cas_inFormalArgumentPassingMode,
                                GGS_variableMap  & var_cas_ioVariableMap,
                                GGS_actualParameterListForGeneration  & var_cas_ioActualParameterListForGeneration,
                                GGS_temporaryInputVariableForRoutineInvocationForGeneration  & var_cas_ioTemporaryInputVariableForRoutineInvocationForGeneration,
                                GGS_stringset  & var_cas_ioExclusiveVariableSet,
                                GGS_bool & var_cas_ioUsesCompilerArgument
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__actualParameterAST__checkAgainstFormalArgument (typeCategoryMethod__actualParameterAST__checkAgainstFormalArgument inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__actualParameterAST__checkAgainstFormalArgument
findCategoryMethod__actualParameterAST__checkAgainstFormalArgument (AC_galgasClassRunTimeInformationEX * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'analyzeRoutineArguments'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeRoutineArguments (C_Compiler &,
                                const GGS_semanticContext ,
                                const GGS_predefinedTypes ,
                                const GGS_lstring  ,
                                const GGS_string ,
                                const GGS_formalParameterSignature  ,
                                const GGS_actualParameterListAST  ,
                                GGS_variableMap  &,
                                GGS_actualParameterListForGeneration  &,
                                GGS_temporaryInputVariableForRoutineInvocationForGeneration  &,
                                GGS_bool & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@localConstantList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_localConstantList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_unifiedTypeMapProxy  mType ;
  public : GGS_lstring  mName ;
  public : GGS_bool mNoWarningIfUnused ;
  public : GGS_string mCppName ;
//--- Constructor
  public : elementOf_GGS_localConstantList (const GGS_unifiedTypeMapProxy & ,
                                const GGS_lstring & ,
                                const GGS_bool& ,
                                const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_localConstantList * nextObject (void) const { return (elementOf_GGS_localConstantList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_localConstantList * previousObject (void) const { return (elementOf_GGS_localConstantList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_localConstantList ;
} ;

//---------------------------------------------------------------------------*

#endif
