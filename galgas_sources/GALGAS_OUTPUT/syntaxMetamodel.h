//---------------------------------------------------------------------------*
//                                                                           *
//                         File 'syntaxMetamodel.h'                          *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       june 6th, 2008, at 22h37'32"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef syntaxMetamodel_METAMODEL_DEFINED
#define syntaxMetamodel_METAMODEL_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/predefined_types.h"
#include "commonSemantics.h"
#include "instructionMetamodel.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*

sint32 _metamodel_index_for_syntaxMetamodel (void) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_syntaxComponentRoot ;
class GGS_syntaxComponentRoot ;
class cPtr_syntaxComponentRoot ;
class GGS__list_syntaxInstructions ;
class GGS_syntaxInstructions ;
class cPtr_syntaxInstructions ;
class GGS__list_nonTerminalLabel ;
class GGS_nonTerminalLabel ;
class cPtr_nonTerminalLabel ;
class GGS__list_nonterminalDeclaration ;
class GGS_nonterminalDeclaration ;
class cPtr_nonterminalDeclaration ;
class GGS__list_syntaxRuleLabel ;
class GGS_syntaxRuleLabel ;
class cPtr_syntaxRuleLabel ;
class GGS__list_syntaxRule ;
class GGS_syntaxRule ;
class cPtr_syntaxRule ;
class GGS__list_nonterminalCallInstruction ;
class GGS_nonterminalCallInstruction ;
class cPtr_nonterminalCallInstruction ;
class GGS__list_terminalCheckInstruction ;
class GGS_terminalCheckInstruction ;
class cPtr_terminalCheckInstruction ;
class GGS__list_repeatInstruction ;
class GGS_repeatInstruction ;
class cPtr_repeatInstruction ;
class GGS__list_selectInstruction ;
class GGS_selectInstruction ;
class cPtr_selectInstruction ;
class GGS__list_parseDoInstruction ;
class GGS_parseDoInstruction ;
class cPtr_parseDoInstruction ;
class GGS__list_blockInstruction ;
class GGS_blockInstruction ;
class cPtr_blockInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS entity '@syntaxComponentRoot'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_syntaxComponentRoot : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_syntaxComponentRoot constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS__list_nonterminalDeclaration & argument_1,
                                const GGS__list_syntaxRule & argument_2,
                                const GGS__list_semanticDeclaration & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_syntaxComponentRoot * getPtr (void) const {
    return (cPtr_syntaxComponentRoot *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mSyntaxComponentName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_nonterminalDeclaration  reader_mNonterminalDeclarations (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_syntaxRule  reader_mRules (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_semanticDeclaration  reader_mSemanticDeclarations (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_syntaxComponentRoot * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_syntaxComponentRoot * operator () (void) const {
      return (cPtr_syntaxComponentRoot *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS list of entity '@syntaxComponentRoot'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_syntaxComponentRoot : public AC_galgas_entity_list {
  public : typedef cPtr_syntaxComponentRoot cElement ;
//--- Constructor 'emptyList'
  public : static GGS__list_syntaxComponentRoot constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_syntaxComponentRoot
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_syntaxComponentRoot & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  } */
//--- Get last object
/*  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  } */
//--- Operator () used for method call
  public : inline const GGS__list_syntaxComponentRoot * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_syntaxComponentRoot & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_syntaxComponentRoot & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_syntaxComponentRoot & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_syntaxComponentRoot & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_syntaxComponentRoot & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_syntaxComponentRoot _operator_concat (const GGS__list_syntaxComponentRoot & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_syntaxComponentRoot & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS__list_nonterminalDeclaration & argument_1,
                                const GGS__list_syntaxRule & argument_2,
                                const GGS__list_semanticDeclaration & argument_3) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS__list_nonterminalDeclaration & argument_1,
                                const GGS__list_syntaxRule & argument_2,
                                const GGS__list_semanticDeclaration & argument_3) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_syntaxComponentRoot & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS entity '@syntaxInstructions'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_syntaxInstructions : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_syntaxInstructions constructor_new (C_Compiler & inLexique,
                                const GGS__list_syntaxInstruction & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_syntaxInstructions * getPtr (void) const {
    return (cPtr_syntaxInstructions *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS__list_syntaxInstruction  reader_mInstruction (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_syntaxInstructions * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_syntaxInstructions * operator () (void) const {
      return (cPtr_syntaxInstructions *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS list of entity '@syntaxInstructions'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_syntaxInstructions : public AC_galgas_entity_list {
  public : typedef cPtr_syntaxInstructions cElement ;
//--- Constructor 'emptyList'
  public : static GGS__list_syntaxInstructions constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_syntaxInstructions
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_syntaxInstructions & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  } */
//--- Get last object
/*  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  } */
//--- Operator () used for method call
  public : inline const GGS__list_syntaxInstructions * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_syntaxInstructions & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_syntaxInstructions & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_syntaxInstructions & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_syntaxInstructions & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_syntaxInstructions & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_syntaxInstructions _operator_concat (const GGS__list_syntaxInstructions & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_syntaxInstructions & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS__list_syntaxInstruction & argument_0) ; */

/*  protected : void _internalPrependValues (const GGS__list_syntaxInstruction & argument_0) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_syntaxInstructions & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS entity '@nonTerminalLabel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_nonTerminalLabel : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_nonTerminalLabel constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_lstring & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_nonTerminalLabel * getPtr (void) const {
    return (cPtr_nonTerminalLabel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mLabelName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_formalParameters  reader_mFormalParameters (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mReturnedEntityName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_nonTerminalLabel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_nonTerminalLabel * operator () (void) const {
      return (cPtr_nonTerminalLabel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS list of entity '@nonTerminalLabel'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_nonTerminalLabel : public AC_galgas_entity_list {
  public : typedef cPtr_nonTerminalLabel cElement ;
//--- Constructor 'emptyList'
  public : static GGS__list_nonTerminalLabel constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_nonTerminalLabel
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_nonTerminalLabel & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  } */
//--- Get last object
/*  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  } */
//--- Operator () used for method call
  public : inline const GGS__list_nonTerminalLabel * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_nonTerminalLabel & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_nonTerminalLabel & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_nonTerminalLabel & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_nonTerminalLabel & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_nonTerminalLabel & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_nonTerminalLabel _operator_concat (const GGS__list_nonTerminalLabel & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_nonTerminalLabel & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_lstring & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_lstring & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_nonTerminalLabel & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS entity '@nonterminalDeclaration'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_nonterminalDeclaration : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_nonterminalDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS__list_nonTerminalLabel & argument_1,
                                const GGS_bool& argument_2
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_nonterminalDeclaration * getPtr (void) const {
    return (cPtr_nonterminalDeclaration *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mNonterminalName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_nonTerminalLabel  reader_mLabels (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mHasParseLabel (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_nonterminalDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_nonterminalDeclaration * operator () (void) const {
      return (cPtr_nonterminalDeclaration *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS list of entity '@nonterminalDeclaration'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_nonterminalDeclaration : public AC_galgas_entity_list {
  public : typedef cPtr_nonterminalDeclaration cElement ;
//--- Constructor 'emptyList'
  public : static GGS__list_nonterminalDeclaration constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_nonterminalDeclaration
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_nonterminalDeclaration & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  } */
//--- Get last object
/*  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  } */
//--- Operator () used for method call
  public : inline const GGS__list_nonterminalDeclaration * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_nonterminalDeclaration & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_nonterminalDeclaration & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_nonterminalDeclaration & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_nonterminalDeclaration & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_nonterminalDeclaration & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_nonterminalDeclaration _operator_concat (const GGS__list_nonterminalDeclaration & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_nonterminalDeclaration & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS__list_nonTerminalLabel & argument_1,
                                const GGS_bool& argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS__list_nonTerminalLabel & argument_1,
                                const GGS_bool& argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_nonterminalDeclaration & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS entity '@syntaxRuleLabel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_syntaxRuleLabel : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_syntaxRuleLabel constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_syntaxInstructions & argument_4
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_syntaxRuleLabel * getPtr (void) const {
    return (cPtr_syntaxRuleLabel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mLabelName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_formalParameters  reader_mFormalParameters (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mReturnedEntityName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mReturnedVariableName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_syntaxInstructions  reader_mSyntaxInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_syntaxRuleLabel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_syntaxRuleLabel * operator () (void) const {
      return (cPtr_syntaxRuleLabel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS list of entity '@syntaxRuleLabel'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_syntaxRuleLabel : public AC_galgas_entity_list {
  public : typedef cPtr_syntaxRuleLabel cElement ;
//--- Constructor 'emptyList'
  public : static GGS__list_syntaxRuleLabel constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_syntaxRuleLabel
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_syntaxRuleLabel & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  } */
//--- Get last object
/*  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  } */
//--- Operator () used for method call
  public : inline const GGS__list_syntaxRuleLabel * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_syntaxRuleLabel & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_syntaxRuleLabel & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_syntaxRuleLabel & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_syntaxRuleLabel & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_syntaxRuleLabel & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_syntaxRuleLabel _operator_concat (const GGS__list_syntaxRuleLabel & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_syntaxRuleLabel & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_syntaxInstructions & argument_4) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_syntaxInstructions & argument_4) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_syntaxRuleLabel & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS entity '@syntaxRule'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_syntaxRule : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_syntaxRule constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS__list_syntaxRuleLabel & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_syntaxRule * getPtr (void) const {
    return (cPtr_syntaxRule *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mNonterminalName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_syntaxRuleLabel  reader_mLabelList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_syntaxRule * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_syntaxRule * operator () (void) const {
      return (cPtr_syntaxRule *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS list of entity '@syntaxRule'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_syntaxRule : public AC_galgas_entity_list {
  public : typedef cPtr_syntaxRule cElement ;
//--- Constructor 'emptyList'
  public : static GGS__list_syntaxRule constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_syntaxRule
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_syntaxRule & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  } */
//--- Get last object
/*  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  } */
//--- Operator () used for method call
  public : inline const GGS__list_syntaxRule * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_syntaxRule & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_syntaxRule & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_syntaxRule & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_syntaxRule & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_syntaxRule & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_syntaxRule _operator_concat (const GGS__list_syntaxRule & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_syntaxRule & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS__list_syntaxRuleLabel & argument_1) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS__list_syntaxRuleLabel & argument_1) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_syntaxRule & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS entity '@nonterminalCallInstruction'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_nonterminalCallInstruction : public GGS_syntaxInstruction {
//--- 'new' constructor
  public : static GGS_nonterminalCallInstruction constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_actualParameters & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_bool& argument_4
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mNonterminalName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mLabelName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_actualParameters  reader_mActualParameterList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mReturnedValueTargetVariableName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mReturnedValueIsAssigned (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_nonterminalCallInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_nonterminalCallInstruction * operator () (void) const {
      return (cPtr_nonterminalCallInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS list of entity '@nonterminalCallInstruction'             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_nonterminalCallInstruction : public AC_galgas_entity_list {
  public : typedef cPtr_nonterminalCallInstruction cElement ;
//--- Constructor 'emptyList'
  public : static GGS__list_nonterminalCallInstruction constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_nonterminalCallInstruction
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_nonterminalCallInstruction & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  } */
//--- Get last object
/*  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  } */
//--- Operator () used for method call
  public : inline const GGS__list_nonterminalCallInstruction * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_nonterminalCallInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_nonterminalCallInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_nonterminalCallInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_nonterminalCallInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_nonterminalCallInstruction & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_nonterminalCallInstruction _operator_concat (const GGS__list_nonterminalCallInstruction & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_nonterminalCallInstruction & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_actualParameters & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_bool& argument_4) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_actualParameters & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_bool& argument_4) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_nonterminalCallInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS entity '@terminalCheckInstruction'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_terminalCheckInstruction : public GGS_syntaxInstruction {
//--- 'new' constructor
  public : static GGS_terminalCheckInstruction constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTerminalName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mReturnedValueTargetVariableNames (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_terminalCheckInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_terminalCheckInstruction * operator () (void) const {
      return (cPtr_terminalCheckInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS list of entity '@terminalCheckInstruction'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_terminalCheckInstruction : public AC_galgas_entity_list {
  public : typedef cPtr_terminalCheckInstruction cElement ;
//--- Constructor 'emptyList'
  public : static GGS__list_terminalCheckInstruction constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_terminalCheckInstruction
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_terminalCheckInstruction & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  } */
//--- Get last object
/*  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  } */
//--- Operator () used for method call
  public : inline const GGS__list_terminalCheckInstruction * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_terminalCheckInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_terminalCheckInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_terminalCheckInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_terminalCheckInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_terminalCheckInstruction & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_terminalCheckInstruction _operator_concat (const GGS__list_terminalCheckInstruction & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_terminalCheckInstruction & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_terminalCheckInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS entity '@repeatInstruction'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_repeatInstruction : public GGS_syntaxInstruction {
//--- 'new' constructor
  public : static GGS_repeatInstruction constructor_new (C_Compiler & inLexique,
                                const GGS_syntaxInstructions & argument_0,
                                const GGS__list_syntaxInstructions & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_syntaxInstructions  reader_mRepeatedInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_syntaxInstructions  reader_mRepeatBranchList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_repeatInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_repeatInstruction * operator () (void) const {
      return (cPtr_repeatInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS list of entity '@repeatInstruction'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_repeatInstruction : public AC_galgas_entity_list {
  public : typedef cPtr_repeatInstruction cElement ;
//--- Constructor 'emptyList'
  public : static GGS__list_repeatInstruction constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_repeatInstruction
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_repeatInstruction & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  } */
//--- Get last object
/*  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  } */
//--- Operator () used for method call
  public : inline const GGS__list_repeatInstruction * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_repeatInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_repeatInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_repeatInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_repeatInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_repeatInstruction & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_repeatInstruction _operator_concat (const GGS__list_repeatInstruction & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_repeatInstruction & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_syntaxInstructions & argument_0,
                                const GGS__list_syntaxInstructions & argument_1) ; */

/*  protected : void _internalPrependValues (const GGS_syntaxInstructions & argument_0,
                                const GGS__list_syntaxInstructions & argument_1) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_repeatInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS entity '@selectInstruction'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_selectInstruction : public GGS_syntaxInstruction {
//--- 'new' constructor
  public : static GGS_selectInstruction constructor_new (C_Compiler & inLexique,
                                const GGS__list_syntaxInstructions & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS__list_syntaxInstructions  reader_mSelectBranchList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_selectInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_selectInstruction * operator () (void) const {
      return (cPtr_selectInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS list of entity '@selectInstruction'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_selectInstruction : public AC_galgas_entity_list {
  public : typedef cPtr_selectInstruction cElement ;
//--- Constructor 'emptyList'
  public : static GGS__list_selectInstruction constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_selectInstruction
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_selectInstruction & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  } */
//--- Get last object
/*  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  } */
//--- Operator () used for method call
  public : inline const GGS__list_selectInstruction * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_selectInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_selectInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_selectInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_selectInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_selectInstruction & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_selectInstruction _operator_concat (const GGS__list_selectInstruction & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_selectInstruction & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS__list_syntaxInstructions & argument_0) ; */

/*  protected : void _internalPrependValues (const GGS__list_syntaxInstructions & argument_0) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_selectInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS entity '@parseDoInstruction'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_parseDoInstruction : public GGS_syntaxInstruction {
//--- 'new' constructor
  public : static GGS_parseDoInstruction constructor_new (C_Compiler & inLexique,
                                const GGS__list_syntaxInstructions & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS__list_syntaxInstructions  reader_mParseDoBranchList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_parseDoInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_parseDoInstruction * operator () (void) const {
      return (cPtr_parseDoInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS list of entity '@parseDoInstruction'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_parseDoInstruction : public AC_galgas_entity_list {
  public : typedef cPtr_parseDoInstruction cElement ;
//--- Constructor 'emptyList'
  public : static GGS__list_parseDoInstruction constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_parseDoInstruction
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_parseDoInstruction & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  } */
//--- Get last object
/*  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  } */
//--- Operator () used for method call
  public : inline const GGS__list_parseDoInstruction * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_parseDoInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_parseDoInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_parseDoInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_parseDoInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_parseDoInstruction & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_parseDoInstruction _operator_concat (const GGS__list_parseDoInstruction & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_parseDoInstruction & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS__list_syntaxInstructions & argument_0) ; */

/*  protected : void _internalPrependValues (const GGS__list_syntaxInstructions & argument_0) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_parseDoInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS entity '@blockInstruction'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_blockInstruction : public GGS_syntaxInstruction {
//--- 'new' constructor
  public : static GGS_blockInstruction constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_actualParameters & argument_2,
                                const GGS_syntaxInstructions & argument_3,
                                const GGS_actualParameters & argument_4
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mReceiverVariable (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mBlockMethodName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_actualParameters  reader_mPrologActualParameterList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_syntaxInstructions  reader_mInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_actualParameters  reader_mEpilogActualParameterList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_blockInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_blockInstruction * operator () (void) const {
      return (cPtr_blockInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS list of entity '@blockInstruction'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_blockInstruction : public AC_galgas_entity_list {
  public : typedef cPtr_blockInstruction cElement ;
//--- Constructor 'emptyList'
  public : static GGS__list_blockInstruction constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_blockInstruction
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_blockInstruction & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  } */
//--- Get last object
/*  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  } */
//--- Operator () used for method call
  public : inline const GGS__list_blockInstruction * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_blockInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_blockInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_blockInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_blockInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_blockInstruction & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_blockInstruction _operator_concat (const GGS__list_blockInstruction & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_blockInstruction & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_actualParameters & argument_2,
                                const GGS_syntaxInstructions & argument_3,
                                const GGS_actualParameters & argument_4) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_actualParameters & argument_2,
                                const GGS_syntaxInstructions & argument_3,
                                const GGS_actualParameters & argument_4) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_blockInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@syntaxComponentRoot'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_syntaxComponentRoot : public cPtr_entity {
//--- Attributes
  public : GGS_lstring  mSyntaxComponentName ;
  public : GGS__list_nonterminalDeclaration  mNonterminalDeclarations ;
  public : GGS__list_syntaxRule  mRules ;
  public : GGS__list_semanticDeclaration  mSemanticDeclarations ;
//--- Constructor
  public : cPtr_syntaxComponentRoot (const GGS_lstring & ,
                                const GGS__list_nonterminalDeclaration & ,
                                const GGS__list_syntaxRule & ,
                                const GGS__list_semanticDeclaration & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_syntaxComponentRoot * nextObject (void) const {
    return (cPtr_syntaxComponentRoot *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_syntaxComponentRoot * previousObject (void) const {
    return (cPtr_syntaxComponentRoot *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_syntaxComponentRoot * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_syntaxComponentRoot ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@syntaxInstructions'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_syntaxInstructions : public cPtr_entity {
//--- Attributes
  public : GGS__list_syntaxInstruction  mInstruction ;
//--- Constructor
  public : cPtr_syntaxInstructions (const GGS__list_syntaxInstruction & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_syntaxInstructions * nextObject (void) const {
    return (cPtr_syntaxInstructions *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_syntaxInstructions * previousObject (void) const {
    return (cPtr_syntaxInstructions *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_syntaxInstructions * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_syntaxInstructions ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@nonTerminalLabel'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_nonTerminalLabel : public cPtr_entity {
//--- Attributes
  public : GGS_lstring  mLabelName ;
  public : GGS_formalParameters  mFormalParameters ;
  public : GGS_lstring  mReturnedEntityName ;
//--- Constructor
  public : cPtr_nonTerminalLabel (const GGS_lstring & ,
                                const GGS_formalParameters & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_nonTerminalLabel * nextObject (void) const {
    return (cPtr_nonTerminalLabel *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_nonTerminalLabel * previousObject (void) const {
    return (cPtr_nonTerminalLabel *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_nonTerminalLabel * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_nonTerminalLabel ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@nonterminalDeclaration'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_nonterminalDeclaration : public cPtr_entity {
//--- Attributes
  public : GGS_lstring  mNonterminalName ;
  public : GGS__list_nonTerminalLabel  mLabels ;
  public : GGS_bool mHasParseLabel ;
//--- Constructor
  public : cPtr_nonterminalDeclaration (const GGS_lstring & ,
                                const GGS__list_nonTerminalLabel & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_nonterminalDeclaration * nextObject (void) const {
    return (cPtr_nonterminalDeclaration *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_nonterminalDeclaration * previousObject (void) const {
    return (cPtr_nonterminalDeclaration *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_nonterminalDeclaration * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_nonterminalDeclaration ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@syntaxRuleLabel'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_syntaxRuleLabel : public cPtr_entity {
//--- Attributes
  public : GGS_lstring  mLabelName ;
  public : GGS_formalParameters  mFormalParameters ;
  public : GGS_lstring  mReturnedEntityName ;
  public : GGS_lstring  mReturnedVariableName ;
  public : GGS_syntaxInstructions  mSyntaxInstructionList ;
//--- Constructor
  public : cPtr_syntaxRuleLabel (const GGS_lstring & ,
                                const GGS_formalParameters & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_syntaxInstructions & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_syntaxRuleLabel * nextObject (void) const {
    return (cPtr_syntaxRuleLabel *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_syntaxRuleLabel * previousObject (void) const {
    return (cPtr_syntaxRuleLabel *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_syntaxRuleLabel * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_syntaxRuleLabel ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of list '@syntaxRule'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_syntaxRule : public cPtr_entity {
//--- Attributes
  public : GGS_lstring  mNonterminalName ;
  public : GGS__list_syntaxRuleLabel  mLabelList ;
//--- Constructor
  public : cPtr_syntaxRule (const GGS_lstring & ,
                                const GGS__list_syntaxRuleLabel & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_syntaxRule * nextObject (void) const {
    return (cPtr_syntaxRule *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_syntaxRule * previousObject (void) const {
    return (cPtr_syntaxRule *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_syntaxRule * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_syntaxRule ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@nonterminalCallInstruction'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_nonterminalCallInstruction : public cPtr_syntaxInstruction {
//--- Attributes
  public : GGS_lstring  mNonterminalName ;
  public : GGS_lstring  mLabelName ;
  public : GGS_actualParameters  mActualParameterList ;
  public : GGS_lstring  mReturnedValueTargetVariableName ;
  public : GGS_bool mReturnedValueIsAssigned ;
//--- Constructor
  public : cPtr_nonterminalCallInstruction (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_actualParameters & ,
                                const GGS_lstring & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_nonterminalCallInstruction * nextObject (void) const {
    return (cPtr_nonterminalCallInstruction *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_nonterminalCallInstruction * previousObject (void) const {
    return (cPtr_nonterminalCallInstruction *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_nonterminalCallInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_nonterminalCallInstruction ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@terminalCheckInstruction'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_terminalCheckInstruction : public cPtr_syntaxInstruction {
//--- Attributes
  public : GGS_lstring  mTerminalName ;
  public : GGS_lstringlist  mReturnedValueTargetVariableNames ;
//--- Constructor
  public : cPtr_terminalCheckInstruction (const GGS_lstring & ,
                                const GGS_lstringlist & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_terminalCheckInstruction * nextObject (void) const {
    return (cPtr_terminalCheckInstruction *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_terminalCheckInstruction * previousObject (void) const {
    return (cPtr_terminalCheckInstruction *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_terminalCheckInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_terminalCheckInstruction ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@repeatInstruction'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_repeatInstruction : public cPtr_syntaxInstruction {
//--- Attributes
  public : GGS_syntaxInstructions  mRepeatedInstructionList ;
  public : GGS__list_syntaxInstructions  mRepeatBranchList ;
//--- Constructor
  public : cPtr_repeatInstruction (const GGS_syntaxInstructions & ,
                                const GGS__list_syntaxInstructions & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_repeatInstruction * nextObject (void) const {
    return (cPtr_repeatInstruction *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_repeatInstruction * previousObject (void) const {
    return (cPtr_repeatInstruction *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_repeatInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_repeatInstruction ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@selectInstruction'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_selectInstruction : public cPtr_syntaxInstruction {
//--- Attributes
  public : GGS__list_syntaxInstructions  mSelectBranchList ;
//--- Constructor
  public : cPtr_selectInstruction (const GGS__list_syntaxInstructions & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_selectInstruction * nextObject (void) const {
    return (cPtr_selectInstruction *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_selectInstruction * previousObject (void) const {
    return (cPtr_selectInstruction *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_selectInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_selectInstruction ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@parseDoInstruction'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_parseDoInstruction : public cPtr_syntaxInstruction {
//--- Attributes
  public : GGS__list_syntaxInstructions  mParseDoBranchList ;
//--- Constructor
  public : cPtr_parseDoInstruction (const GGS__list_syntaxInstructions & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_parseDoInstruction * nextObject (void) const {
    return (cPtr_parseDoInstruction *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_parseDoInstruction * previousObject (void) const {
    return (cPtr_parseDoInstruction *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_parseDoInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_parseDoInstruction ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@blockInstruction'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_blockInstruction : public cPtr_syntaxInstruction {
//--- Attributes
  public : GGS_lstring  mReceiverVariable ;
  public : GGS_lstring  mBlockMethodName ;
  public : GGS_actualParameters  mPrologActualParameterList ;
  public : GGS_syntaxInstructions  mInstructionList ;
  public : GGS_actualParameters  mEpilogActualParameterList ;
//--- Constructor
  public : cPtr_blockInstruction (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_actualParameters & ,
                                const GGS_syntaxInstructions & ,
                                const GGS_actualParameters & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_blockInstruction * nextObject (void) const {
    return (cPtr_blockInstruction *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_blockInstruction * previousObject (void) const {
    return (cPtr_blockInstruction *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_blockInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_blockInstruction ;
} ;

//---------------------------------------------------------------------------*

#endif
