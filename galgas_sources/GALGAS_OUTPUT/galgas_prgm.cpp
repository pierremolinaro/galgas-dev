//-----------------------------------------------------------------------------*
//                                                                             *
//                           File 'galgas_prgm.cpp'                            *
//                         Generated by version 2.7.0                          *
//                        july 21th, 2014, at 8h15'3"                          *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas_prgm.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "utilities/F_DisplayException.h"
#include "utilities/basic-allocation.h"
#include "utilities/cpp-allocation.h"
#include "utilities/C_PrologueEpilogue.h"
#include "command_line_interface/F_mainForLIBPM.h"
#include "command_line_interface/C_builtin_CLI_Options.h"
#include "command_line_interface/F_Analyze_CLI_Options.h"
#include "project_header.h"

//-----------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "templateGrammar.h"
#include "galgas_cli_options.h"
#include "grammarLL1grammar.h"
#include "syntaxSLRgrammar.h"
#include "lexiqueLL1grammar.h"
#include "semanticsSLRgrammar.h"
#include "guiGrammar.h"
#include "programSLRgrammar.h"
#include "projectLL1grammar.h"
#include "galgas3ProjectGrammar.h"
#include "galgas3Grammar.h"

//-----------------------------------------------------------------------------*
//                                                                             *
//                      print_tool_help_message                                *
//                                                                             *
//-----------------------------------------------------------------------------*

static void print_tool_help_message (void) {
  co << "Compiled with GALGAS revision NUMERO_REVISION_GALGAS\n" ;
}

//-----------------------------------------------------------------------------*

static const char * kSourceFileExtensions [] = {
  "gTemplate",
  "gOption",
  "gLexique",
  "gSemantics",
  "gSyntax",
  "gGrammar",
  "gGui",
  "gProgram",
  "gProject",
  "galgasProject",
  "galgas",
  NULL
} ;    

//-----------------------------------------------------------------------------*

static const char * kSourceFileHelpMessages [] = {
  "a GALGAS Template source file",
  "a GALGAS option source file",
  "a GALGAS lexique source file",
  "a GALGAS semantics source file",
  "a GALGAS syntax source file",
  "a GALGAS grammar source file",
  "a GALGAS GUI source file",
  "a GALGAS program source file",
  "a GALGAS project source file",
  "a GALGAS project source file",
  "a GALGAS source file",
  NULL
} ;    

//-----------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const char * kVersionString = "version " PROJECT_VERSION_STRING " [debug]" ;
#else
  static const char * kVersionString = "version " PROJECT_VERSION_STRING ;
#endif

//-----------------------------------------------------------------------------*
//                                                                             *
//                      M A I N    F O R    L I B P M                          *
//                                                                             *
//-----------------------------------------------------------------------------*

int mainForLIBPM (int inArgc, const char * inArgv []) {
//--- Analyze Command Line Options
  TC_UniqueArray <C_String> sourceFilesArray ;
  F_Analyze_CLI_Options (inArgc, inArgv,
                         kVersionString,
                         sourceFilesArray,
                         kSourceFileExtensions,
                         kSourceFileHelpMessages,
                         print_tool_help_message) ;
//---
  bool verboseOptionOn = true ;
  int16_t returnCode = 0 ; // No error
//--- Set Execution mode
  C_String executionModeOptionErrorMessage ;
  setExecutionMode (executionModeOptionErrorMessage) ;
  if (executionModeOptionErrorMessage.length () > 0) {
    co << executionModeOptionErrorMessage ;
    returnCode = 1 ;
  }else{
  //--- Common lexique object
    C_Compiler * commonLexique = NULL ;
    macroMyNew (commonLexique, C_Compiler (NULL, "", "" COMMA_HERE)) ;
    try{
      routine_before (commonLexique COMMA_HERE) ;
      verboseOptionOn = gOption_galgas_5F_builtin_5F_options_verbose_5F_output.mValue ;
      for (int32_t i=0 ; i<sourceFilesArray.count () ; i++) {
        setCurrentCompiledFilePath (sourceFilesArray (i COMMA_HERE)) ;
        if (gOption_galgas_5F_builtin_5F_options_trace.mValue) {
          enableTraceWithPath (sourceFilesArray (i COMMA_HERE)) ;
        }
        const C_String fileExtension = sourceFilesArray (i COMMA_HERE).pathExtension () ;
        const GALGAS_string sfp = GALGAS_string (sourceFilesArray (i COMMA_HERE)) ;
        const GALGAS_location location = commonLexique->here () ;
        const GALGAS_lstring sourceFilePath (sfp, location) ;
        int16_t r = 0 ;
        if (fileExtension == "gTemplate") {
          if (executionModeIsIndexing ()) {
            cGrammar_projectLL_31_grammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__30_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "gOption") {
          if (executionModeIsIndexing ()) {
            cGrammar_optionLL_31_grammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__31_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "gLexique") {
          if (executionModeIsIndexing ()) {
            cGrammar_lexiqueLL_31_grammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__32_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "gSemantics") {
          if (executionModeIsIndexing ()) {
            cGrammar_semanticsSLRgrammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__33_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "gSyntax") {
          if (executionModeIsIndexing ()) {
            cGrammar_syntaxSLRgrammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__34_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "gGrammar") {
          if (executionModeIsIndexing ()) {
            cGrammar_grammarLL_31_grammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__35_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "gGui") {
          if (executionModeIsIndexing ()) {
            cGrammar_guiGrammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__36_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "gProgram") {
          if (executionModeIsIndexing ()) {
            cGrammar_programSLRgrammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__37_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "gProject") {
          if (executionModeIsIndexing ()) {
            cGrammar_projectLL_31_grammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__38_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "galgasProject") {
          if (executionModeIsIndexing ()) {
            cGrammar_galgas_33_ProjectGrammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__39_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "galgas") {
          if (executionModeIsIndexing ()) {
            cGrammar_projectLL_31_grammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__31__30_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else{
          printf ("*** Error: unhandled extension for file '%s' ***\n", sourceFilesArray (i COMMA_HERE).cString (HERE)) ;
          r = 1 ;
        }
        if (r != 0) {
          returnCode = r ;
        }
        closeTrace () ;
      }
    //--- Error or warnings ?
      if (totalErrorCount () > 0) {
        returnCode = 1 ; // Error code
      }else if (totalWarningCount () > 0) {
        if (gOption_galgas_5F_builtin_5F_options_treat_5F_warnings_5F_as_5F_error.mValue) {
          returnCode = 1 ; // Error code
          if (verboseOptionOn) {
            printf ("** Note: warnings are treated as errors. **\n") ;
          }
        }
      }
    //--- Epilogue
      routine_after (commonLexique COMMA_HERE) ;
    //--- Display error and warnings count
      if (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.mValue || (totalWarningCount () > 0) || (totalErrorCount () > 0)) {
        C_String message ;
        if (totalWarningCount () == 0) {
          message << "No warning" ;
        }else if (totalWarningCount () == 1) {
          message << "1 warning" ;
        }else{
          message << cStringWithSigned (totalWarningCount ()) << " warnings" ;
        }
        message << ", " ;
        if (totalErrorCount () == 0) {
          message << "no error" ;
        }else if (totalErrorCount () == 1) {
          message << "1 error" ;
        }else{
          message << cStringWithSigned (totalErrorCount ()) << " errors" ;
        }
        message << ".\n" ;
        ggs_printMessage (message COMMA_HERE) ;
      }
    }catch (const ::std:: exception & e) {
      F_default_display_exception (e) ;
      returnCode = 1 ; // Error code
    }catch (...) {
      printf ("**** Unknow exception ****\n") ;
      throw ;
    }
    macroDetachSharedObject (commonLexique) ;
  }
  return returnCode ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                                 @table type                                 *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_table ("table",
                              NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_table::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_table ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_table::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_table (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_table GALGAS_table::extractObject (const GALGAS_object & inObject,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) {
  GALGAS_table result ;
  const GALGAS_table * p = (const GALGAS_table *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_table *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("table", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_table::cMapElement_table (const GALGAS_lstring & inKey,
                                      const GALGAS_uint & in_mAnAttribute
                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mAnAttribute (in_mAnAttribute) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_table::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAnAttribute.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_table::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_table (mAttribute_lkey, mAttribute_mAnAttribute COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_table::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAnAttribute" ":" ;
  mAttribute_mAnAttribute.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_table::compare (const cCollectionElement * inOperand) const {
  cMapElement_table * operand = (cMapElement_table *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mAnAttribute.objectCompare (operand->mAttribute_mAnAttribute) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_table::GALGAS_table (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_table::GALGAS_table (const GALGAS_table & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_table & GALGAS_table::operator = (const GALGAS_table & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_table GALGAS_table::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_table result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_table GALGAS_table::constructor_mapWithMapToOverride (const GALGAS_table & inMapToOverride
                                                             COMMA_LOCATION_ARGS) {
  GALGAS_table result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_table GALGAS_table::reader_overriddenMap (C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_table result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_table::addAssign_operation (const GALGAS_lstring & inKey,
                                        const GALGAS_uint & inArgument0,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) {
  cMapElement_table * p = NULL ;
  macroMyNew (p, cMapElement_table (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@table insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

GALGAS_uint GALGAS_table::reader_mAnAttributeForKey (const GALGAS_string & inKey,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_table * p = (const cMapElement_table *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_table) ;
    result = p->mAttribute_mAnAttribute ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_table::modifier_setMAnAttributeForKey (GALGAS_uint inAttributeValue,
                                                   GALGAS_string inKey,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_table * p = (cMapElement_table *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_table) ;
    p->mAttribute_mAnAttribute = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_table * GALGAS_table::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                            const GALGAS_string & inKey
                                                                            COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_table * result = (cMapElement_table *) p ;
  macroNullOrValidSharedObject (result, cMapElement_table) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_table::cEnumerator_table (const GALGAS_table & inEnumeratedObject,
                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_table_2D_element cEnumerator_table::current (LOCATION_ARGS) const {
  const cMapElement_table * p = (const cMapElement_table *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_table) ;
  return GALGAS_table_2D_element (p->mAttribute_lkey, p->mAttribute_mAnAttribute) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_table::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_uint cEnumerator_table::current_mAnAttribute (LOCATION_ARGS) const {
  const cMapElement_table * p = (const cMapElement_table *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_table) ;
  return p->mAttribute_mAnAttribute ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                              Routine 'before'                               *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_before (C_Compiler * inCompiler
                     COMMA_UNUSED_LOCATION_ARGS) {
  {
    GALGAS_string var_creationProjectName = GALGAS_string (gOption_galgas_5F_cli_5F_options_create_5F_project.reader_value ()) ;
    {
    routine_projectCreation (var_creationProjectName, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 42)) ;
    }
  }
  {
    const enumGalgasBool test_0 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_printPredefinedLexicalActions.reader_value ()).boolEnum () ;
    if (kBoolTrue == test_0) {
      {
      routine_printPredefinedLexicalActions (inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 48)) ;
      }
    }
  }
  {
    {
    routine_generatePredefinedTypeFiles (GALGAS_string (gOption_galgas_5F_cli_5F_options_generatePredefinedTypes.reader_value ()), inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 54)) ;
    }
  }
  {
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, GALGAS_string (gOption_galgas_5F_cli_5F_options_extractLIBPMOption.reader_value ()).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
    if (kBoolTrue == test_1) {
      {
      routine_updateLIBPMatPath (GALGAS_string (gOption_galgas_5F_cli_5F_options_extractLIBPMOption.reader_value ()), inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 60)) ;
      }
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                           Routine 'programRule_0'                           *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_programRule_5F__30_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_templateInstructionListAST joker_3411_0 ; // Joker input parameter
  cGrammar_templateGrammar::_performSourceFileParsing_ (inCompiler, constinArgument_inSourceFile, joker_3411_0  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 78)) ;
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                           Routine 'programRule_1'                           *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_programRule_5F__31_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_parsedComponentStruct var_parsedComponentStruct = GALGAS_parsedComponentStruct::constructor_new (GALGAS_parsedSemanticsComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 88)), GALGAS_parsedLexiqueComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 89)), GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 90)), GALGAS_parsedOptionComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 91)), GALGAS_parsedGrammarComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 92)), GALGAS_parsedProgramComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 93)), GALGAS_parsedGuiComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 94)) COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 87)) ;
  {
  routine_compileOptionComponentFromSourceFile (constinArgument_inSourceFile, function_outputDirectory (constinArgument_inSourceFile, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 96)), var_parsedComponentStruct, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 96)) ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                           Routine 'programRule_2'                           *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_programRule_5F__32_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_parsedComponentStruct var_parsedComponentStruct = GALGAS_parsedComponentStruct::constructor_new (GALGAS_parsedSemanticsComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 106)), GALGAS_parsedLexiqueComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 107)), GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 108)), GALGAS_parsedOptionComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 109)), GALGAS_parsedGrammarComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 110)), GALGAS_parsedProgramComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 111)), GALGAS_parsedGuiComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 112)) COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 105)) ;
  {
  routine_compileLexiqueComponentFromSource (constinArgument_inSourceFile, function_outputDirectory (constinArgument_inSourceFile, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 114)), var_parsedComponentStruct, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 114)) ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                           Routine 'programRule_3'                           *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_programRule_5F__33_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_parsedComponentStruct var_parsedComponentStruct = GALGAS_parsedComponentStruct::constructor_new (GALGAS_parsedSemanticsComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 124)), GALGAS_parsedLexiqueComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 125)), GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 126)), GALGAS_parsedOptionComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 127)), GALGAS_parsedGrammarComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 128)), GALGAS_parsedProgramComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 129)), GALGAS_parsedGuiComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 130)) COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 123)) ;
  {
  routine_compileSemanticsComponentFromSourceFile (constinArgument_inSourceFile, function_outputDirectory (constinArgument_inSourceFile, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 132)), var_parsedComponentStruct, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 132)) ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                           Routine 'programRule_4'                           *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_programRule_5F__34_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_parsedComponentStruct var_parsedComponentStruct = GALGAS_parsedComponentStruct::constructor_new (GALGAS_parsedSemanticsComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 142)), GALGAS_parsedLexiqueComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 143)), GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 144)), GALGAS_parsedOptionComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 145)), GALGAS_parsedGrammarComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 146)), GALGAS_parsedProgramComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 147)), GALGAS_parsedGuiComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 148)) COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 141)) ;
  {
  routine_compileSyntaxComponentFromSourceFile (constinArgument_inSourceFile, function_outputDirectory (constinArgument_inSourceFile, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 150)), var_parsedComponentStruct, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 150)) ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                           Routine 'programRule_5'                           *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_programRule_5F__35_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_parsedComponentStruct var_parsedComponentStruct = GALGAS_parsedComponentStruct::constructor_new (GALGAS_parsedSemanticsComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 160)), GALGAS_parsedLexiqueComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 161)), GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 162)), GALGAS_parsedOptionComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 163)), GALGAS_parsedGrammarComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 164)), GALGAS_parsedProgramComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 165)), GALGAS_parsedGuiComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 166)) COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 159)) ;
  {
  routine_compileGrammarComponentFromSourceFile (constinArgument_inSourceFile, function_outputDirectory (constinArgument_inSourceFile, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 170)), var_parsedComponentStruct, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 168)) ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                           Routine 'programRule_6'                           *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_programRule_5F__36_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_parsedComponentStruct var_parsedComponentStruct = GALGAS_parsedComponentStruct::constructor_new (GALGAS_parsedSemanticsComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 181)), GALGAS_parsedLexiqueComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 182)), GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 183)), GALGAS_parsedOptionComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 184)), GALGAS_parsedGrammarComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 185)), GALGAS_parsedProgramComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 186)), GALGAS_parsedGuiComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 187)) COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 180)) ;
  {
  routine_compileGuiComponentFromSourceFile (constinArgument_inSourceFile, function_outputDirectory (constinArgument_inSourceFile, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 189)), var_parsedComponentStruct, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 189)) ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                           Routine 'programRule_7'                           *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_programRule_5F__37_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_parsedComponentStruct var_parsedComponentStruct = GALGAS_parsedComponentStruct::constructor_new (GALGAS_parsedSemanticsComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 199)), GALGAS_parsedLexiqueComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 200)), GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 201)), GALGAS_parsedOptionComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 202)), GALGAS_parsedGrammarComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 203)), GALGAS_parsedProgramComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 204)), GALGAS_parsedGuiComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 205)) COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 198)) ;
  {
  routine_compileProgramComponentFromSourceFile (constinArgument_inSourceFile, function_outputDirectory (constinArgument_inSourceFile, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 207)), var_parsedComponentStruct, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 207)) ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                           Routine 'programRule_8'                           *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_programRule_5F__38_ (const GALGAS_lstring constinArgument_inProjectSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_outputDirectory = function_outputDirectory (constinArgument_inProjectSourceFile, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 220)) ;
  GALGAS_projectComponentAST var_projectComponentAST ;
  var_projectComponentAST.drop () ;
  C_String syntaxDirectedTranslationResult_8710 ;
  cGrammar_projectLL_31_grammar::_performSourceFileParsing_ (inCompiler, syntaxDirectedTranslationResult_8710, constinArgument_inProjectSourceFile, var_projectComponentAST  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 222)) ;
  const GALGAS_string var_translatedProject (syntaxDirectedTranslationResult_8710) ;
  const enumGalgasBool test_0 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_convertToGalgas_33_.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_string var_directory = constinArgument_inProjectSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 224)).operator_concat (GALGAS_string ("/../")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 224)) ;
    GALGAS_string var_newProjectFile = var_directory.operator_concat (GALGAS_string ("+")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 225)).operator_concat (var_projectComponentAST.mAttribute_mTargetName.reader_string (SOURCE_FILE ("galgas_prgm.gProgram", 225))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 225)).operator_concat (GALGAS_string (".galgasProject")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 225)) ;
    GALGAS_bool joker_9134_0 ; // Joker input parameter
    var_translatedProject.method_writeToFileWhenDifferentContents (var_newProjectFile, joker_9134_0, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 226)) ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_projectComponentAST.reader_mProjectName (SOURCE_FILE ("galgas_prgm.gProgram", 229)).reader_string (SOURCE_FILE ("galgas_prgm.gProgram", 229)).objectCompare (constinArgument_inProjectSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 229)).reader_stringByDeletingPathExtension (SOURCE_FILE ("galgas_prgm.gProgram", 229)))).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_location location_2 (var_projectComponentAST.reader_mProjectName (SOURCE_FILE ("galgas_prgm.gProgram", 230)).reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, GALGAS_string ("the project name ('").operator_concat (var_projectComponentAST.reader_mProjectName (SOURCE_FILE ("galgas_prgm.gProgram", 231)).reader_string (SOURCE_FILE ("galgas_prgm.gProgram", 231))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 231)).operator_concat (GALGAS_string ("') should be the same as the source file base name ('")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 231)).operator_concat (constinArgument_inProjectSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 232)).reader_stringByDeletingPathExtension (SOURCE_FILE ("galgas_prgm.gProgram", 232))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 231)).operator_concat (GALGAS_string ("')")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 232))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 230)) ;
  }
  GALGAS_string var_targetName = var_projectComponentAST.reader_mTargetName (SOURCE_FILE ("galgas_prgm.gProgram", 235)).reader_string (SOURCE_FILE ("galgas_prgm.gProgram", 235)) ;
  const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, var_targetName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_location location_4 (var_projectComponentAST.reader_mTargetName (SOURCE_FILE ("galgas_prgm.gProgram", 237)).reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_4, GALGAS_string ("the target name should not be empty")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 237)) ;
  }
  GALGAS_projectQualifiedFeatureMap var_projectQualifiedFeatureMap = GALGAS_projectQualifiedFeatureMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 240)) ;
  cEnumerator_qualifiedFeatureList enumerator_9945 (var_projectComponentAST.mAttribute_mQualifiedFeatureList, kEnumeration_up) ;
  while (enumerator_9945.hasCurrentObject ()) {
    {
    var_projectQualifiedFeatureMap.modifier_insertKey (enumerator_9945.current_mFeatureName (HERE), enumerator_9945.current_mFeatureValue (HERE), inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 242)) ;
    }
    enumerator_9945.gotoNextObject () ;
  }
  GALGAS_parsedComponentStruct var_parsedComponentStruct = GALGAS_parsedComponentStruct::constructor_new (GALGAS_parsedSemanticsComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 249)), GALGAS_parsedLexiqueComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 250)), GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 251)), GALGAS_parsedOptionComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 252)), GALGAS_parsedGrammarComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 253)), GALGAS_parsedProgramComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 254)), GALGAS_parsedGuiComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 255)) COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 248)) ;
  cEnumerator_projectSourceList enumerator_10541 (var_projectComponentAST.reader_mProjectSourceList (SOURCE_FILE ("galgas_prgm.gProgram", 258)), kEnumeration_up) ;
  while (enumerator_10541.hasCurrentObject ()) {
    GALGAS_string var_extension = enumerator_10541.current_mFilePath (HERE).mAttribute_string.reader_pathExtension (SOURCE_FILE ("galgas_prgm.gProgram", 259)) ;
    GALGAS_lstring var_componentName = GALGAS_lstring::constructor_new (enumerator_10541.current_mFilePath (HERE).mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 261)).reader_stringByDeletingPathExtension (SOURCE_FILE ("galgas_prgm.gProgram", 261)), enumerator_10541.current_mFilePath (HERE).reader_location (SOURCE_FILE ("galgas_prgm.gProgram", 262))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 260)) ;
    GALGAS_lstring var_fullFilePath = GALGAS_lstring::constructor_new (constinArgument_inProjectSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 265)).operator_concat (GALGAS_string ("/")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 265)).operator_concat (enumerator_10541.current_mFilePath (HERE).reader_string (SOURCE_FILE ("galgas_prgm.gProgram", 265))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 265)), enumerator_10541.current_mFilePath (HERE).reader_location (SOURCE_FILE ("galgas_prgm.gProgram", 266))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 264)) ;
    if (enumerator_10541.current_mSourceKind (HERE).isValid ()) {
      switch (enumerator_10541.current_mSourceKind (HERE).enumValue ()) {
      case GALGAS_sourceFileKind::kNotBuilt:
        break ;
      case GALGAS_sourceFileKind::kEnum_externSourceFile: {
        } break ;
      case GALGAS_sourceFileKind::kEnum_guiSourceFile: {
        const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, var_extension.objectCompare (GALGAS_string ("gGui"))).boolEnum () ;
        if (kBoolTrue == test_5) {
          const enumGalgasBool test_6 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_6) {
            inCompiler->printMessage (GALGAS_string ("*** Parse '").operator_concat (var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 273))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 273)).operator_concat (GALGAS_string ("'\n")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 273))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 273)) ;
          }
          GALGAS_guiComponentAST var_guiComponentRoot ;
          var_guiComponentRoot.drop () ;
          C_String syntaxDirectedTranslationResult_11229 ;
          cGrammar_guiGrammar::_performSourceFileParsing_ (inCompiler, syntaxDirectedTranslationResult_11229, var_fullFilePath, var_guiComponentRoot  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 276)) ;
          const GALGAS_string var_translatedGUI (syntaxDirectedTranslationResult_11229) ;
          const enumGalgasBool test_7 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_convertToGalgas_33_.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_7) {
            GALGAS_string var_projectName = var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 278)).reader_stringByDeletingPathExtension (SOURCE_FILE ("galgas_prgm.gProgram", 278)) ;
            GALGAS_string var_directory = var_fullFilePath.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 279)).operator_concat (GALGAS_string ("/../galgas-sources/")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 279)) ;
            GALGAS_string var_newProjectFile = var_directory.operator_concat (var_projectName  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 280)).operator_concat (GALGAS_string (".galgas")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 280)) ;
            GALGAS_bool joker_11709_0 ; // Joker input parameter
            var_translatedGUI.method_writeToFileWhenDifferentContents (var_newProjectFile, joker_11709_0, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 281)) ;
          }
          {
          var_parsedComponentStruct.mAttribute_mParsedGuiComponentMap.modifier_insertKey (var_componentName, var_fullFilePath, var_guiComponentRoot, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 283)) ;
          }
        }else if (kBoolFalse == test_5) {
          GALGAS_location location_8 (enumerator_10541.current_mFilePath (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_8, GALGAS_string ("extension of a gui component should be '.gGui'.")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 285)) ;
        }
        } break ;
      case GALGAS_sourceFileKind::kEnum_lexiqueSourceFile: {
        const enumGalgasBool test_9 = GALGAS_bool (kIsEqual, var_extension.objectCompare (GALGAS_string ("gLexique"))).boolEnum () ;
        if (kBoolTrue == test_9) {
          const enumGalgasBool test_10 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_10) {
            inCompiler->printMessage (GALGAS_string ("*** Parse '").operator_concat (var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 290))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 290)).operator_concat (GALGAS_string ("'\n")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 290))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 290)) ;
          }
          GALGAS_galgas_33_LexiqueComponentListAST_2D_element var_lexiqueComponentRoot ;
          var_lexiqueComponentRoot.drop () ;
          C_String syntaxDirectedTranslationResult_12262 ;
          cGrammar_lexiqueLL_31_grammar::_performSourceFileParsing_ (inCompiler, syntaxDirectedTranslationResult_12262, var_fullFilePath, var_lexiqueComponentRoot  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 293)) ;
          const GALGAS_string var_translatedSource (syntaxDirectedTranslationResult_12262) ;
          const enumGalgasBool test_11 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_convertToGalgas_33_.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_11) {
            GALGAS_string var_projectName = var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 295)).reader_stringByDeletingPathExtension (SOURCE_FILE ("galgas_prgm.gProgram", 295)) ;
            GALGAS_string var_directory = var_fullFilePath.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 296)).operator_concat (GALGAS_string ("/../galgas-sources/")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 296)) ;
            GALGAS_string var_newProjectFile = var_directory.operator_concat (var_projectName  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 297)).operator_concat (GALGAS_string (".galgas")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 297)) ;
            GALGAS_bool joker_12752_0 ; // Joker input parameter
            var_translatedSource.method_writeToFileWhenDifferentContents (var_newProjectFile, joker_12752_0, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 298)) ;
          }
          {
          var_parsedComponentStruct.mAttribute_mParsedLexiqueComponentMap.modifier_insertKey (var_componentName, var_lexiqueComponentRoot, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 300)) ;
          }
        }else if (kBoolFalse == test_9) {
          GALGAS_location location_12 (enumerator_10541.current_mFilePath (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_12, GALGAS_string ("extension of a lexique component should be '.gLexique'.")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 302)) ;
        }
        } break ;
      case GALGAS_sourceFileKind::kEnum_optionSourceFile: {
        const enumGalgasBool test_13 = GALGAS_bool (kIsEqual, var_extension.objectCompare (GALGAS_string ("gOption"))).boolEnum () ;
        if (kBoolTrue == test_13) {
          const enumGalgasBool test_14 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_14) {
            inCompiler->printMessage (GALGAS_string ("*** Parse '").operator_concat (var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 307))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 307)).operator_concat (GALGAS_string ("'\n")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 307))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 307)) ;
          }
          GALGAS_optionComponentAST var_optionComponentAST ;
          var_optionComponentAST.drop () ;
          C_String syntaxDirectedTranslationResult_13282 ;
          cGrammar_optionLL_31_grammar::_performSourceFileParsing_ (inCompiler, syntaxDirectedTranslationResult_13282, var_fullFilePath, var_optionComponentAST  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 310)) ;
          const GALGAS_string var_translatedSource (syntaxDirectedTranslationResult_13282) ;
          const enumGalgasBool test_15 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_convertToGalgas_33_.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_15) {
            GALGAS_string var_projectName = var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 312)).reader_stringByDeletingPathExtension (SOURCE_FILE ("galgas_prgm.gProgram", 312)) ;
            GALGAS_string var_directory = var_fullFilePath.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 313)).operator_concat (GALGAS_string ("/../galgas-sources/")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 313)) ;
            GALGAS_string var_newProjectFile = var_directory.operator_concat (var_projectName  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 314)).operator_concat (GALGAS_string (".galgas")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 314)) ;
            GALGAS_bool joker_13770_0 ; // Joker input parameter
            var_translatedSource.method_writeToFileWhenDifferentContents (var_newProjectFile, joker_13770_0, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 315)) ;
          }
          GALGAS_commandLineOptionMap var_boolOptionMap ;
          GALGAS_commandLineOptionMap var_UIntOptionMap ;
          GALGAS_commandLineOptionMap var_stringOptionMap ;
          {
          routine_semanticAnalysisOfOptionComponent (var_optionComponentAST, var_boolOptionMap, var_UIntOptionMap, var_stringOptionMap, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 321)) ;
          }
          {
          var_parsedComponentStruct.mAttribute_mParsedOptionComponentMap.modifier_insertKey (var_componentName, var_boolOptionMap, var_UIntOptionMap, var_stringOptionMap, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 327)) ;
          }
        }else if (kBoolFalse == test_13) {
          GALGAS_location location_16 (enumerator_10541.current_mFilePath (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_16, GALGAS_string ("extension of an option component should be '.gOption'.")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 334)) ;
        }
        } break ;
      case GALGAS_sourceFileKind::kEnum_semanticsSourceFile: {
        const enumGalgasBool test_17 = GALGAS_bool (kIsEqual, var_extension.objectCompare (GALGAS_string ("gSemantics"))).boolEnum () ;
        if (kBoolTrue == test_17) {
          const enumGalgasBool test_18 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_18) {
            inCompiler->printMessage (GALGAS_string ("*** Parse '").operator_concat (var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 339))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 339)).operator_concat (GALGAS_string ("'\n")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 339))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 339)) ;
          }
          GALGAS_semanticsComponentAST var_semanticsComponentRoot ;
          var_semanticsComponentRoot.drop () ;
          C_String syntaxDirectedTranslationResult_14736 ;
          cGrammar_semanticsSLRgrammar::_performSourceFileParsing_ (inCompiler, syntaxDirectedTranslationResult_14736, var_fullFilePath, var_semanticsComponentRoot  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 342)) ;
          const GALGAS_string var_translatedSource (syntaxDirectedTranslationResult_14736) ;
          const enumGalgasBool test_19 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_convertToGalgas_33_.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_19) {
            GALGAS_string var_projectName = var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 344)).reader_stringByDeletingPathExtension (SOURCE_FILE ("galgas_prgm.gProgram", 344)) ;
            GALGAS_string var_directory = var_fullFilePath.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 345)).operator_concat (GALGAS_string ("/../galgas-sources/")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 345)) ;
            GALGAS_string var_newProjectFile = var_directory.operator_concat (var_projectName  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 346)).operator_concat (GALGAS_string (".galgas")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 346)) ;
            GALGAS_bool joker_15228_0 ; // Joker input parameter
            var_translatedSource.method_writeToFileWhenDifferentContents (var_newProjectFile, joker_15228_0, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 347)) ;
          }
          {
          var_parsedComponentStruct.mAttribute_mParsedSemanticsComponentMap.modifier_insertKey (var_componentName, var_fullFilePath, var_semanticsComponentRoot, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 349)) ;
          }
        }else if (kBoolFalse == test_17) {
          GALGAS_location location_20 (enumerator_10541.current_mFilePath (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_20, GALGAS_string ("extension of a semantics component should be '.gSemantics'.")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 351)) ;
        }
        } break ;
      case GALGAS_sourceFileKind::kEnum_syntaxSourceFile: {
        const enumGalgasBool test_21 = GALGAS_bool (kIsEqual, var_extension.objectCompare (GALGAS_string ("gSyntax"))).boolEnum () ;
        if (kBoolTrue == test_21) {
          const enumGalgasBool test_22 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_22) {
            inCompiler->printMessage (GALGAS_string ("*** Parse '").operator_concat (var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 356))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 356)).operator_concat (GALGAS_string ("'\n")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 356))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 356)) ;
          }
          GALGAS_galgas_33_SyntaxComponentListAST_2D_element var_syntaxComponentRoot ;
          var_syntaxComponentRoot.drop () ;
          C_String syntaxDirectedTranslationResult_15800 ;
          cGrammar_syntaxSLRgrammar::_performSourceFileParsing_ (inCompiler, syntaxDirectedTranslationResult_15800, var_fullFilePath, var_syntaxComponentRoot  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 359)) ;
          const GALGAS_string var_translatedSource (syntaxDirectedTranslationResult_15800) ;
          const enumGalgasBool test_23 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_convertToGalgas_33_.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_23) {
            GALGAS_string var_projectName = var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 361)).reader_stringByDeletingPathExtension (SOURCE_FILE ("galgas_prgm.gProgram", 361)) ;
            GALGAS_string var_directory = var_fullFilePath.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 362)).operator_concat (GALGAS_string ("/../galgas-sources/")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 362)) ;
            GALGAS_string var_newProjectFile = var_directory.operator_concat (var_projectName  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 363)).operator_concat (GALGAS_string (".galgas")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 363)) ;
            GALGAS_bool joker_16289_0 ; // Joker input parameter
            var_translatedSource.method_writeToFileWhenDifferentContents (var_newProjectFile, joker_16289_0, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 364)) ;
          }
          {
          var_parsedComponentStruct.mAttribute_mParsedSyntaxComponentMap.modifier_insertKey (var_componentName, var_fullFilePath, var_syntaxComponentRoot, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 366)) ;
          }
        }else if (kBoolFalse == test_21) {
          GALGAS_location location_24 (enumerator_10541.current_mFilePath (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_24, GALGAS_string ("extension of a syntax component should be '.gSyntax'.")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 368)) ;
        }
        } break ;
      case GALGAS_sourceFileKind::kEnum_grammarSourceFile: {
        const enumGalgasBool test_25 = GALGAS_bool (kIsEqual, var_extension.objectCompare (GALGAS_string ("gGrammar"))).boolEnum () ;
        if (kBoolTrue == test_25) {
          const enumGalgasBool test_26 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_26) {
            inCompiler->printMessage (GALGAS_string ("*** Parse '").operator_concat (var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 373))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 373)).operator_concat (GALGAS_string ("'\n")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 373))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 373)) ;
          }
          GALGAS_galgas_33_GrammarComponentListAST_2D_element var_grammarComponentRoot ;
          var_grammarComponentRoot.drop () ;
          C_String syntaxDirectedTranslationResult_16854 ;
          cGrammar_grammarLL_31_grammar::_performSourceFileParsing_ (inCompiler, syntaxDirectedTranslationResult_16854, var_fullFilePath, var_grammarComponentRoot  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 376)) ;
          const GALGAS_string var_translatedSource (syntaxDirectedTranslationResult_16854) ;
          const enumGalgasBool test_27 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_convertToGalgas_33_.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_27) {
            GALGAS_string var_projectName = var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 378)).reader_stringByDeletingPathExtension (SOURCE_FILE ("galgas_prgm.gProgram", 378)) ;
            GALGAS_string var_directory = var_fullFilePath.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 379)).operator_concat (GALGAS_string ("/../galgas-sources/")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 379)) ;
            GALGAS_string var_newProjectFile = var_directory.operator_concat (var_projectName  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 380)).operator_concat (GALGAS_string (".galgas")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 380)) ;
            GALGAS_bool joker_17344_0 ; // Joker input parameter
            var_translatedSource.method_writeToFileWhenDifferentContents (var_newProjectFile, joker_17344_0, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 381)) ;
          }
          {
          var_parsedComponentStruct.mAttribute_mParsedGrammarComponentMap.modifier_insertKey (var_componentName, var_fullFilePath, var_grammarComponentRoot, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 383)) ;
          }
        }else if (kBoolFalse == test_25) {
          GALGAS_location location_28 (enumerator_10541.current_mFilePath (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_28, GALGAS_string ("extension of a grammar component should be '.gGrammar'.")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 385)) ;
        }
        } break ;
      case GALGAS_sourceFileKind::kEnum_programSourceFile: {
        const enumGalgasBool test_29 = GALGAS_bool (kIsEqual, var_extension.objectCompare (GALGAS_string ("gProgram"))).boolEnum () ;
        if (kBoolTrue == test_29) {
          const enumGalgasBool test_30 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_30) {
            inCompiler->printMessage (GALGAS_string ("*** Parse '").operator_concat (var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 390))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 390)).operator_concat (GALGAS_string ("'\n")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 390))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 390)) ;
          }
          GALGAS_programComponentAST var_programComponentAST ;
          var_programComponentAST.drop () ;
          C_String syntaxDirectedTranslationResult_17893 ;
          cGrammar_programSLRgrammar::_performSourceFileParsing_ (inCompiler, syntaxDirectedTranslationResult_17893, var_fullFilePath, var_programComponentAST  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 393)) ;
          const GALGAS_string var_translatedSource (syntaxDirectedTranslationResult_17893) ;
          const enumGalgasBool test_31 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_convertToGalgas_33_.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_31) {
            GALGAS_string var_projectName = var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 395)).reader_stringByDeletingPathExtension (SOURCE_FILE ("galgas_prgm.gProgram", 395)) ;
            GALGAS_string var_directory = var_fullFilePath.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 396)).operator_concat (GALGAS_string ("/../galgas-sources/")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 396)) ;
            GALGAS_string var_newProjectFile = var_directory.operator_concat (var_projectName  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 397)).operator_concat (GALGAS_string (".galgas")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 397)) ;
            GALGAS_bool joker_18382_0 ; // Joker input parameter
            var_translatedSource.method_writeToFileWhenDifferentContents (var_newProjectFile, joker_18382_0, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 398)) ;
          }
          {
          var_parsedComponentStruct.mAttribute_mParsedProgramComponentMap.modifier_insertKey (var_componentName, var_fullFilePath, var_programComponentAST, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 400)) ;
          }
        }else if (kBoolFalse == test_29) {
          GALGAS_location location_32 (enumerator_10541.current_mFilePath (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_32, GALGAS_string ("extension of a program component should be '.gProgram'.")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 402)) ;
        }
        } break ;
      }
    }
    enumerator_10541.gotoNextObject () ;
  }
  GALGAS_stringset var_handledExtensionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas_prgm.gProgram", 407)) ;
  const enumGalgasBool test_33 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("galgas_prgm.gProgram", 408)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_33) {
    cEnumerator_parsedLexiqueComponentMap enumerator_18897 (var_parsedComponentStruct.mAttribute_mParsedLexiqueComponentMap, kEnumeration_up) ;
    while (enumerator_18897.hasCurrentObject ()) {
      const enumGalgasBool test_34 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
      if (kBoolTrue == test_34) {
        inCompiler->printMessage (GALGAS_string ("*** Compiling '").operator_concat (enumerator_18897.current_lkey (HERE).reader_string (SOURCE_FILE ("galgas_prgm.gProgram", 412))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 412)).operator_concat (GALGAS_string (".gLexique'\n")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 412))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 412)) ;
      }
      {
      routine_compileLexiqueComponentFromAST (enumerator_18897.current_lkey (HERE).mAttribute_string, var_outputDirectory, enumerator_18897.current_mLexiqueComponentAST (HERE), inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 414)) ;
      }
      enumerator_18897.gotoNextObject () ;
    }
    cEnumerator_parsedGuiComponentMap enumerator_19240 (var_parsedComponentStruct.mAttribute_mParsedGuiComponentMap, kEnumeration_up) ;
    while (enumerator_19240.hasCurrentObject ()) {
      const enumGalgasBool test_35 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
      if (kBoolTrue == test_35) {
        inCompiler->printMessage (GALGAS_string ("*** Compiling '").operator_concat (enumerator_19240.current_lkey (HERE).reader_string (SOURCE_FILE ("galgas_prgm.gProgram", 423))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 423)).operator_concat (GALGAS_string (".gGui'\n")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 423))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 423)) ;
      }
      {
      routine_compileGuiComponentFromAST (enumerator_19240.current_mSourceFullFilePath (HERE), var_outputDirectory, enumerator_19240.current_mGuiComponentAST (HERE), var_parsedComponentStruct, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 425)) ;
      }
      enumerator_19240.gotoNextObject () ;
    }
    cEnumerator_parsedOptionComponentMap enumerator_19616 (var_parsedComponentStruct.mAttribute_mParsedOptionComponentMap, kEnumeration_up) ;
    while (enumerator_19616.hasCurrentObject ()) {
      const enumGalgasBool test_36 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
      if (kBoolTrue == test_36) {
        inCompiler->printMessage (GALGAS_string ("*** Compiling '").operator_concat (enumerator_19616.current_lkey (HERE).reader_string (SOURCE_FILE ("galgas_prgm.gProgram", 435))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 435)).operator_concat (GALGAS_string (".gOption'\n")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 435))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 435)) ;
      }
      {
      routine_compileOptionComponentAST (var_outputDirectory, enumerator_19616.current_lkey (HERE), enumerator_19616.current_mBoolOptionMap (HERE), enumerator_19616.current_mUIntOptionMap (HERE), enumerator_19616.current_mStringOptionMap (HERE), inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 437)) ;
      }
      enumerator_19616.gotoNextObject () ;
    }
    cEnumerator_parsedSemanticsComponentMap enumerator_20000 (var_parsedComponentStruct.mAttribute_mParsedSemanticsComponentMap, kEnumeration_up) ;
    while (enumerator_20000.hasCurrentObject ()) {
      const enumGalgasBool test_37 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
      if (kBoolTrue == test_37) {
        inCompiler->printMessage (GALGAS_string ("*** Compiling '").operator_concat (enumerator_20000.current_lkey (HERE).reader_string (SOURCE_FILE ("galgas_prgm.gProgram", 448))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 448)).operator_concat (GALGAS_string (".gSemantics'\n")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 448))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 448)) ;
      }
      {
      routine_compileSemanticsComponentAST (enumerator_20000.current_mSourceFullFilePath (HERE), var_outputDirectory, enumerator_20000.current_mSemanticComponentRoot (HERE), var_parsedComponentStruct, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 450)) ;
      }
      enumerator_20000.gotoNextObject () ;
    }
    cEnumerator_parsedSyntaxComponentMap enumerator_20390 (var_parsedComponentStruct.mAttribute_mParsedSyntaxComponentMap, kEnumeration_up) ;
    while (enumerator_20390.hasCurrentObject ()) {
      const enumGalgasBool test_38 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
      if (kBoolTrue == test_38) {
        inCompiler->printMessage (GALGAS_string ("*** Compiling '").operator_concat (enumerator_20390.current_lkey (HERE).reader_string (SOURCE_FILE ("galgas_prgm.gProgram", 460))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 460)).operator_concat (GALGAS_string (".gSyntax'\n")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 460))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 460)) ;
      }
      {
      routine_compileSyntaxComponentFromAST (enumerator_20390.current_mSourceFullFilePath (HERE), var_outputDirectory, enumerator_20390.current_mSyntaxComponentRoot (HERE), var_parsedComponentStruct, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 462)) ;
      }
      enumerator_20390.gotoNextObject () ;
    }
    cEnumerator_parsedGrammarComponentMap enumerator_20778 (var_parsedComponentStruct.mAttribute_mParsedGrammarComponentMap, kEnumeration_up) ;
    while (enumerator_20778.hasCurrentObject ()) {
      const enumGalgasBool test_39 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
      if (kBoolTrue == test_39) {
        inCompiler->printMessage (GALGAS_string ("*** Compiling '").operator_concat (enumerator_20778.current_lkey (HERE).reader_string (SOURCE_FILE ("galgas_prgm.gProgram", 472))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 472)).operator_concat (GALGAS_string (".gGrammar'\n")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 472))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 472)) ;
      }
      {
      routine_compileGrammarComponentFromAST (enumerator_20778.current_mSourceFullFilePath (HERE), var_outputDirectory, enumerator_20778.current_mGrammarComponentRoot (HERE), var_parsedComponentStruct, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 474)) ;
      }
      enumerator_20778.gotoNextObject () ;
    }
    cEnumerator_parsedProgramComponentMap enumerator_21169 (var_parsedComponentStruct.mAttribute_mParsedProgramComponentMap, kEnumeration_up) ;
    while (enumerator_21169.hasCurrentObject ()) {
      cEnumerator_programRuleList enumerator_21222 (enumerator_21169.current_mProgramComponentAST (HERE).mAttribute_mProgramRules, kEnumeration_up) ;
      while (enumerator_21222.hasCurrentObject ()) {
        var_handledExtensionSet.addAssign_operation (enumerator_21222.current_mSourceFileExtension (HERE).mAttribute_string  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 484)) ;
        enumerator_21222.gotoNextObject () ;
      }
      const enumGalgasBool test_40 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
      if (kBoolTrue == test_40) {
        inCompiler->printMessage (GALGAS_string ("*** Compiling '").operator_concat (enumerator_21169.current_lkey (HERE).reader_string (SOURCE_FILE ("galgas_prgm.gProgram", 487))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 487)).operator_concat (GALGAS_string (".gProgram'\n")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 487))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 487)) ;
      }
      {
      routine_compileProgramComponentFromAST (enumerator_21169.current_mSourceFullFilePath (HERE), var_outputDirectory, enumerator_21169.current_mProgramComponentAST (HERE), var_parsedComponentStruct, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 489)) ;
      }
      enumerator_21169.gotoNextObject () ;
    }
  }
  const enumGalgasBool test_41 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("galgas_prgm.gProgram", 498)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_41) {
    const enumGalgasBool test_42 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
    if (kBoolTrue == test_42) {
      inCompiler->printMessage (GALGAS_string ("*** Perform global checkings\n")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 500)) ;
    }
    {
    routine_performProjectGlobalCheckings (var_parsedComponentStruct, constinArgument_inProjectSourceFile.mAttribute_string, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 502)) ;
    }
  }
  const enumGalgasBool test_43 = GALGAS_bool (kIsEqual, GALGAS_uint ((uint32_t) 0U).objectCompare (GALGAS_uint::constructor_errorCount (SOURCE_FILE ("galgas_prgm.gProgram", 508)))).boolEnum () ;
  if (kBoolTrue == test_43) {
    {
    routine_updateTargets (constinArgument_inProjectSourceFile, var_projectComponentAST.mAttribute_mMajorVersion.mAttribute_uint.reader_string (SOURCE_FILE ("galgas_prgm.gProgram", 511)).operator_concat (GALGAS_string (".")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 511)).operator_concat (var_projectComponentAST.mAttribute_mMinorVersion.mAttribute_uint.reader_string (SOURCE_FILE ("galgas_prgm.gProgram", 511))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 511)).operator_concat (GALGAS_string (".")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 511)).operator_concat (var_projectComponentAST.mAttribute_mRevisionVersion.mAttribute_uint.reader_string (SOURCE_FILE ("galgas_prgm.gProgram", 511))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 511)), var_projectComponentAST.reader_mProjectName (SOURCE_FILE ("galgas_prgm.gProgram", 512)), var_targetName, var_projectQualifiedFeatureMap, var_projectComponentAST.reader_mGenerationFeatureList (SOURCE_FILE ("galgas_prgm.gProgram", 515)), var_projectComponentAST.reader_mProjectSourceList (SOURCE_FILE ("galgas_prgm.gProgram", 516)), var_handledExtensionSet, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 509)) ;
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                           Routine 'programRule_9'                           *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_programRule_5F__39_ (const GALGAS_lstring constinArgument_inProjectSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->printMessage (GALGAS_string ("*** Parsing project files\n")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 533)) ;
  }
  GALGAS_galgas_33_ProjectComponentAST var_projectComponentAST ;
  var_projectComponentAST.drop () ;
  cGrammar_galgas_33_ProjectGrammar::_performSourceFileParsing_ (inCompiler, constinArgument_inProjectSourceFile, var_projectComponentAST  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 535)) ;
  GALGAS_galgas_33_DeclarationAST var_declarationAST = GALGAS_galgas_33_DeclarationAST::constructor_default (SOURCE_FILE ("galgas_prgm.gProgram", 538)) ;
  cEnumerator_lstringlist enumerator_23277 (var_projectComponentAST.mAttribute_mProjectSourceList, kEnumeration_up) ;
  while (enumerator_23277.hasCurrentObject ()) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, enumerator_23277.current_mValue (HERE).mAttribute_string.reader_pathExtension (SOURCE_FILE ("galgas_prgm.gProgram", 540)).objectCompare (GALGAS_string ("galgas"))).boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_string var_absoluteSourcePath = enumerator_23277.current_mValue (HERE).mAttribute_string.reader_absolutePathFromPath (constinArgument_inProjectSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 541)) COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 541)) ;
      cGrammar_galgas_33_Grammar::_performSourceFileParsing_ (inCompiler, GALGAS_lstring::constructor_new (var_absoluteSourcePath, enumerator_23277.current_mValue (HERE).mAttribute_location  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 542)), var_declarationAST  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 542)) ;
    }else if (kBoolFalse == test_1) {
      GALGAS_location location_2 (enumerator_23277.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("only \".galgas\" extension is allowed here")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 544)) ;
    }
    enumerator_23277.gotoNextObject () ;
  }
  GALGAS_stringlist var_handCodedSourceAppFileList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("galgas_prgm.gProgram", 548)) ;
  GALGAS_stringlist var_handCodedSourceToolFileList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("galgas_prgm.gProgram", 549)) ;
  GALGAS_stringlist var_handCodedLinkToolFileList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("galgas_prgm.gProgram", 550)) ;
  GALGAS_stringset var_handCodedSourceDirectorySet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas_prgm.gProgram", 551)) ;
  cEnumerator_galgas_33_QualifiedFeatureList enumerator_24021 (var_projectComponentAST.mAttribute_mQualifiedFeatureList, kEnumeration_up) ;
  while (enumerator_24021.hasCurrentObject ()) {
    const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, enumerator_24021.current_mFeatureName (HERE).mAttribute_string.objectCompare (GALGAS_string ("tool-source"))).boolEnum () ;
    if (kBoolTrue == test_3) {
      var_handCodedSourceToolFileList.addAssign_operation (enumerator_24021.current_mFeatureValue (HERE).mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 554))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 554)) ;
      GALGAS_string var_directory = enumerator_24021.current_mFeatureValue (HERE).mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 555)) ;
      const enumGalgasBool test_4 = GALGAS_bool (kIsNotEqual, var_directory.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_4) {
        var_handCodedSourceDirectorySet.addAssign_operation (GALGAS_string ("../").add_operation (var_directory, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 557))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 557)) ;
      }
    }else if (kBoolFalse == test_3) {
      const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, enumerator_24021.current_mFeatureName (HERE).mAttribute_string.objectCompare (GALGAS_string ("app-source"))).boolEnum () ;
      if (kBoolTrue == test_5) {
        var_handCodedSourceAppFileList.addAssign_operation (enumerator_24021.current_mFeatureValue (HERE).mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 560))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 560)) ;
        GALGAS_string var_directory = enumerator_24021.current_mFeatureValue (HERE).mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 561)) ;
        const enumGalgasBool test_6 = GALGAS_bool (kIsNotEqual, var_directory.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
        if (kBoolTrue == test_6) {
          var_handCodedSourceDirectorySet.addAssign_operation (GALGAS_string ("../").add_operation (var_directory, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 563))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 563)) ;
        }
      }else if (kBoolFalse == test_5) {
        const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, enumerator_24021.current_mFeatureName (HERE).mAttribute_string.objectCompare (GALGAS_string ("tool-link"))).boolEnum () ;
        if (kBoolTrue == test_7) {
          var_handCodedLinkToolFileList.addAssign_operation (enumerator_24021.current_mFeatureValue (HERE).mAttribute_string  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 566)) ;
        }
      }
    }
    enumerator_24021.gotoNextObject () ;
  }
  GALGAS_string var_productDirectory = constinArgument_inProjectSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("galgas_prgm.gProgram", 582)).operator_concat (GALGAS_string ("/build/output")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 582)) ;
  GALGAS_stringlist var_appProductFileList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("galgas_prgm.gProgram", 583)) ;
  GALGAS_semanticContext var_semanticContext = GALGAS_semanticContext::constructor_default (SOURCE_FILE ("galgas_prgm.gProgram", 584)) ;
  GALGAS_semanticDeclarationSortedListForGeneration var_semanticDeclarationSortedListForGeneration ;
  const enumGalgasBool test_8 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("galgas_prgm.gProgram", 586)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_8) {
    {
    routine_compileSemanticDeclarationsGalgas_33_ (constinArgument_inProjectSourceFile.mAttribute_string, var_projectComponentAST.mAttribute_mEndOfSourceFile, var_declarationAST.mAttribute_mSemanticDeclarationList, var_declarationAST.mAttribute_mOptionComponentList, var_declarationAST.mAttribute_mLexiqueComponentList, var_declarationAST.mAttribute_mGrammarComponentList, var_semanticContext, var_semanticDeclarationSortedListForGeneration, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 587)) ;
    }
  }else if (kBoolFalse == test_8) {
    var_semanticDeclarationSortedListForGeneration = GALGAS_semanticDeclarationSortedListForGeneration::constructor_emptySortedList (SOURCE_FILE ("galgas_prgm.gProgram", 598)) ;
  }
  GALGAS_lexiqueComponentGenerationList var_lexiqueComponentGenerationList = GALGAS_lexiqueComponentGenerationList::constructor_emptyList (SOURCE_FILE ("galgas_prgm.gProgram", 601)) ;
  const enumGalgasBool test_9 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("galgas_prgm.gProgram", 602)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_9) {
    cEnumerator_galgas_33_LexiqueComponentListAST enumerator_26870 (var_declarationAST.mAttribute_mLexiqueComponentList, kEnumeration_up) ;
    while (enumerator_26870.hasCurrentObject ()) {
      {
      routine_compileLexiqueComponentGalgas_33_ (enumerator_26870.current (HERE), var_lexiqueComponentGenerationList, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 604)) ;
      }
      enumerator_26870.gotoNextObject () ;
    }
  }
  GALGAS_parsedSyntaxComponentMap var_parsedSyntaxComponentMap = GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 611)) ;
  GALGAS_syntaxListForGeneration var_syntaxListForGeneration = GALGAS_syntaxListForGeneration::constructor_emptyList (SOURCE_FILE ("galgas_prgm.gProgram", 612)) ;
  const enumGalgasBool test_10 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("galgas_prgm.gProgram", 613)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_10) {
    {
    routine_compileAllSyntaxComponentsGalgas_33_ (var_declarationAST.mAttribute_mSyntaxComponentList, var_semanticContext, var_parsedSyntaxComponentMap, var_syntaxListForGeneration, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 614)) ;
    }
  }
  GALGAS_grammarComponentGenerationList var_grammarGenerationList = GALGAS_grammarComponentGenerationList::constructor_emptyList (SOURCE_FILE ("galgas_prgm.gProgram", 622)) ;
  const enumGalgasBool test_11 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("galgas_prgm.gProgram", 623)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_11) {
    cEnumerator_galgas_33_GrammarComponentListAST enumerator_27662 (var_declarationAST.mAttribute_mGrammarComponentList, kEnumeration_up) ;
    while (enumerator_27662.hasCurrentObject ()) {
      {
      routine_compileGrammarComponentGalgas_33_ (var_productDirectory, enumerator_27662.current (HERE), var_parsedSyntaxComponentMap, var_semanticContext, var_grammarGenerationList, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 625)) ;
      }
      enumerator_27662.gotoNextObject () ;
    }
  }
  GALGAS_string var_programHeaderContents = GALGAS_string::makeEmptyString () ;
  GALGAS_string var_programCppContents = GALGAS_string::makeEmptyString () ;
  const enumGalgasBool test_12 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("galgas_prgm.gProgram", 637)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_12) {
    {
    routine_compileProgramComponentGalgas_33_ (var_productDirectory, var_declarationAST.mAttribute_mPrologueDeclarationList, var_declarationAST.mAttribute_mSourceRuleList, var_declarationAST.mAttribute_mEpilogueDeclarationList, var_semanticContext, var_programHeaderContents, var_programCppContents, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 638)) ;
    }
  }
  const enumGalgasBool test_13 = GALGAS_bool (kIsEqual, GALGAS_uint ((uint32_t) 0U).objectCompare (GALGAS_uint::constructor_errorCount (SOURCE_FILE ("galgas_prgm.gProgram", 649)))).operator_and (GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()) COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 649)).boolEnum () ;
  if (kBoolTrue == test_13) {
    inCompiler->printMessage (GALGAS_string ("*** Generating files\n")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 650)) ;
  }
  GALGAS_stringlist var_toolCppFileList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("galgas_prgm.gProgram", 652)) ;
  GALGAS_stringset var_allProductFileSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas_prgm.gProgram", 653)) ;
  {
  routine_generateProgramComponentGalgas_33_ (var_productDirectory, var_programHeaderContents, var_programCppContents, var_toolCppFileList, var_allProductFileSet, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 655)) ;
  }
  var_programHeaderContents.drop () ; // drop instruction
  var_programCppContents.drop () ; // drop instruction
  {
  routine_generateGrammarComponentGalgas_33_ (var_productDirectory, var_grammarGenerationList, var_toolCppFileList, var_allProductFileSet, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 664)) ;
  }
  var_grammarGenerationList.drop () ; // drop instruction
  const enumGalgasBool test_14 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("galgas_prgm.gProgram", 672)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_14) {
    {
    routine_generateLexiqueComponentsGalgas_33_ (var_productDirectory, var_lexiqueComponentGenerationList, var_toolCppFileList, var_appProductFileList, var_allProductFileSet, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 673)) ;
    }
  }
  var_lexiqueComponentGenerationList.drop () ; // drop instruction
  const enumGalgasBool test_15 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("galgas_prgm.gProgram", 683)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_15) {
    cEnumerator_optionComponentMapForSemanticAnalysis enumerator_29596 (var_semanticContext.mAttribute_mOptionComponentMapForSemanticAnalysis, kEnumeration_up) ;
    while (enumerator_29596.hasCurrentObject ()) {
      const enumGalgasBool test_16 = enumerator_29596.current_mIsPredefined (HERE).operator_not (SOURCE_FILE ("galgas_prgm.gProgram", 685)).boolEnum () ;
      if (kBoolTrue == test_16) {
        {
        routine_generateOptionComponentGalgas_33_ (var_productDirectory, enumerator_29596.current_lkey (HERE).mAttribute_string, enumerator_29596.current_mBoolOptionMap (HERE), enumerator_29596.current_mUIntOptionMap (HERE), enumerator_29596.current_mStringOptionMap (HERE), var_toolCppFileList, var_appProductFileList, var_allProductFileSet, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 686)) ;
        }
      }
      enumerator_29596.gotoNextObject () ;
    }
  }
  const enumGalgasBool test_17 = GALGAS_bool (kIsEqual, GALGAS_uint ((uint32_t) 0U).objectCompare (GALGAS_uint::constructor_errorCount (SOURCE_FILE ("galgas_prgm.gProgram", 700)))).boolEnum () ;
  if (kBoolTrue == test_17) {
    cEnumerator_syntaxListForGeneration enumerator_30079 (var_syntaxListForGeneration, kEnumeration_up) ;
    while (enumerator_30079.hasCurrentObject ()) {
      {
      routine_generateSyntaxComponentGalgas_33_ (var_productDirectory, enumerator_30079.current (HERE), var_semanticContext, var_toolCppFileList, var_allProductFileSet, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 702)) ;
      }
      enumerator_30079.gotoNextObject () ;
    }
  }
  {
  routine_generateSemanticDeclarationsGalgas_33_ (var_productDirectory, var_semanticContext, var_semanticDeclarationSortedListForGeneration, var_toolCppFileList, var_allProductFileSet, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 712)) ;
  }
  const enumGalgasBool test_18 = GALGAS_bool (kIsEqual, GALGAS_uint ((uint32_t) 0U).objectCompare (GALGAS_uint::constructor_errorCount (SOURCE_FILE ("galgas_prgm.gProgram", 720)))).boolEnum () ;
  if (kBoolTrue == test_18) {
    GALGAS_stringset var_handledExtensionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas_prgm.gProgram", 721)) ;
    cEnumerator_programRuleList enumerator_30686 (var_declarationAST.mAttribute_mSourceRuleList, kEnumeration_up) ;
    while (enumerator_30686.hasCurrentObject ()) {
      var_handledExtensionSet.addAssign_operation (enumerator_30686.current_mSourceFileExtension (HERE).mAttribute_string  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 723)) ;
      enumerator_30686.gotoNextObject () ;
    }
    GALGAS_stringset var_ignoredFeatureSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas_prgm.gProgram", 726)) ;
    var_ignoredFeatureSet.addAssign_operation (GALGAS_string ("tool-source")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 727)) ;
    var_ignoredFeatureSet.addAssign_operation (GALGAS_string ("tool-link")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 728)) ;
    var_ignoredFeatureSet.addAssign_operation (GALGAS_string ("app-source")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 729)) ;
    GALGAS_projectQualifiedFeatureMap var_projectQualifiedFeatureMap = GALGAS_projectQualifiedFeatureMap::constructor_emptyMap (SOURCE_FILE ("galgas_prgm.gProgram", 730)) ;
    cEnumerator_galgas_33_QualifiedFeatureList enumerator_31102 (var_projectComponentAST.mAttribute_mQualifiedFeatureList, kEnumeration_up) ;
    while (enumerator_31102.hasCurrentObject ()) {
      const enumGalgasBool test_19 = var_ignoredFeatureSet.reader_hasKey (enumerator_31102.current_mFeatureName (HERE).mAttribute_string COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 732)).operator_not (SOURCE_FILE ("galgas_prgm.gProgram", 732)).boolEnum () ;
      if (kBoolTrue == test_19) {
        {
        var_projectQualifiedFeatureMap.modifier_insertKey (enumerator_31102.current_mFeatureName (HERE), enumerator_31102.current_mFeatureValue (HERE), inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 733)) ;
        }
      }
      enumerator_31102.gotoNextObject () ;
    }
    {
    routine_updateGalgas_33_Targets (constinArgument_inProjectSourceFile, var_projectComponentAST.mAttribute_mTargetName.mAttribute_string, var_projectComponentAST.mAttribute_mEndOfSourceFile, var_projectComponentAST.mAttribute_mMajorVersion.mAttribute_uint.reader_string (SOURCE_FILE ("galgas_prgm.gProgram", 743)).operator_concat (GALGAS_string (".")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 743)).operator_concat (var_projectComponentAST.mAttribute_mMinorVersion.mAttribute_uint.reader_string (SOURCE_FILE ("galgas_prgm.gProgram", 743))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 743)).operator_concat (GALGAS_string (".")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 743)).operator_concat (var_projectComponentAST.mAttribute_mRevisionVersion.mAttribute_uint.reader_string (SOURCE_FILE ("galgas_prgm.gProgram", 743))  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 743)), var_projectQualifiedFeatureMap, var_projectComponentAST.mAttribute_mGenerationFeatureList, var_toolCppFileList, var_appProductFileList, var_handCodedSourceToolFileList, var_handCodedSourceDirectorySet, var_handledExtensionSet, var_handCodedLinkToolFileList, var_allProductFileSet, inCompiler  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 739)) ;
    }
  }
  const enumGalgasBool test_20 = GALGAS_bool (kIsEqual, GALGAS_uint ((uint32_t) 0U).objectCompare (GALGAS_uint::constructor_errorCount (SOURCE_FILE ("galgas_prgm.gProgram", 756)))).boolEnum () ;
  if (kBoolTrue == test_20) {
    GALGAS_stringset var_allActualFileSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas_prgm.gProgram", 757)) ;
    cEnumerator_stringlist enumerator_32118 (var_productDirectory.reader_regularFiles (GALGAS_bool (false) COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 758)), kEnumeration_up) ;
    while (enumerator_32118.hasCurrentObject ()) {
      var_allActualFileSet.addAssign_operation (enumerator_32118.current_mValue (HERE)  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 759)) ;
      enumerator_32118.gotoNextObject () ;
    }
    GALGAS_stringset var_uselessFileSet = var_allActualFileSet.substract_operation (var_allProductFileSet, inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 761)) ;
    cEnumerator_stringset enumerator_32269 (var_uselessFileSet, kEnumeration_up) ;
    while (enumerator_32269.hasCurrentObject ()) {
      {
      GALGAS_string::class_method_deleteFile (var_productDirectory.operator_concat (GALGAS_string ("/")  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 763)).operator_concat (enumerator_32269.current_key (HERE)  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 763)), inCompiler COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 763)) ;
      }
      enumerator_32269.gotoNextObject () ;
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                          Routine 'programRule_10'                           *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_programRule_5F__31__30_ (const GALGAS_lstring constinArgument_inSourceFile,
                                      C_Compiler * inCompiler
                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_galgas_33_DeclarationAST var_declaration = GALGAS_galgas_33_DeclarationAST::constructor_default (SOURCE_FILE ("galgas_prgm.gProgram", 778)) ;
  cGrammar_galgas_33_Grammar::_performSourceFileParsing_ (inCompiler, constinArgument_inSourceFile, var_declaration  COMMA_SOURCE_FILE ("galgas_prgm.gProgram", 779)) ;
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                               Routine 'after'                               *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_after (C_Compiler * /* inCompiler */
                    COMMA_UNUSED_LOCATION_ARGS) {
  {
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                             @table-element type                             *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_table_2D_element ("table-element",
                                         NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_table_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_table_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_table_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_table_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_table_2D_element GALGAS_table_2D_element::extractObject (const GALGAS_object & inObject,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  GALGAS_table_2D_element result ;
  const GALGAS_table_2D_element * p = (const GALGAS_table_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_table_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("table-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_table_2D_element::GALGAS_table_2D_element (void) :
mAttribute_lkey (),
mAttribute_mAnAttribute () {
}

//-----------------------------------------------------------------------------*

GALGAS_table_2D_element::~ GALGAS_table_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_table_2D_element::GALGAS_table_2D_element (const GALGAS_lstring & inOperand0,
                                                  const GALGAS_uint & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mAnAttribute (inOperand1) {
}

//-----------------------------------------------------------------------------*

GALGAS_table_2D_element GALGAS_table_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_table_2D_element (GALGAS_lstring::constructor_default (HERE),
                                  GALGAS_uint::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_table_2D_element GALGAS_table_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                  const GALGAS_uint & inOperand1 
                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_table_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_table_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_table_2D_element::objectCompare (const GALGAS_table_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAnAttribute.objectCompare (inOperand.mAttribute_mAnAttribute) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_table_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAnAttribute.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_table_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mAnAttribute.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_table_2D_element::description (C_String & ioString,
                                           const int32_t inIndentation) const {
  ioString << "<struct @table-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAnAttribute.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_table_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_uint GALGAS_table_2D_element::reader_mAnAttribute (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAnAttribute ;
}



//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


