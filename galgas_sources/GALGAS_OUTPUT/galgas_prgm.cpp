//-----------------------------------------------------------------------------*
//                                                                             *
//                           File 'galgas_prgm.cpp'                            *
//                         Generated by version 2.6.0                          *
//                        july 8th, 2014, at 15h18'22"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas_prgm.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/F_DisplayException.h"
#include "utilities/basic-allocation.h"
#include "utilities/cpp-allocation.h"
#include "utilities/C_PrologueEpilogue.h"
#include "command_line_interface/F_mainForLIBPM.h"
#include "command_line_interface/C_builtin_CLI_Options.h"
#include "command_line_interface/F_Analyze_CLI_Options.h"
#include "project_header.h"

//-----------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "templateGrammar.h"
#include "galgas_cli_options.h"
#include "grammarLL1grammar.h"
#include "syntaxSLRgrammar.h"
#include "lexiqueLL1grammar.h"
#include "semanticsSLRgrammar.h"
#include "guiGrammar.h"
#include "programSLRgrammar.h"
#include "projectLL1grammar.h"
#include "galgas3ProjectGrammar.h"
#include "galgas3Grammar.h"

//-----------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "galgas_prgm.gProgram", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//-----------------------------------------------------------------------------*
//                                                                             *
//                      print_tool_help_message                                *
//                                                                             *
//-----------------------------------------------------------------------------*

static void print_tool_help_message (void) {
  co << "Compiled with GALGAS revision NUMERO_REVISION_GALGAS\n" ;
}

//-----------------------------------------------------------------------------*

static const char * kSourceFileExtensions [] = {
  "gOption",
  "gLexique",
  "gSemantics",
  "gSyntax",
  "gGrammar",
  "gGui",
  "gProgram",
  "gProject",
  "gTemplate",
  "galgasProject",
  "galgas",
  NULL
} ;    

//-----------------------------------------------------------------------------*

static const char * kSourceFileHelpMessages [] = {
  "a GALGAS option source file",
  "a GALGAS lexique source file",
  "a GALGAS semantics source file",
  "a GALGAS syntax source file",
  "a GALGAS grammar source file",
  "a GALGAS GUI source file",
  "a GALGAS program source file",
  "a GALGAS project source file",
  "a GALGAS Template source file",
  "a GALGAS project source file",
  "a GALGAS source file",
  NULL
} ;    

//-----------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const char * kVersionString = "version " PROJECT_VERSION_STRING " [debug]" ;
#else
  static const char * kVersionString = "version " PROJECT_VERSION_STRING ;
#endif

//-----------------------------------------------------------------------------*
//                                                                             *
//                      M A I N    F O R    L I B P M                          *
//                                                                             *
//-----------------------------------------------------------------------------*

int mainForLIBPM (int inArgc, const char * inArgv []) {
//--- Analyze Command Line Options
  TC_UniqueArray <C_String> sourceFilesArray ;
  F_Analyze_CLI_Options (inArgc, inArgv,
                         kVersionString,
                         sourceFilesArray,
                         kSourceFileExtensions,
                         kSourceFileHelpMessages,
                         print_tool_help_message) ;
//---
  bool verboseOptionOn = true ;
  int16_t returnCode = 0 ; // No error
//--- Set Execution mode
  C_String executionModeOptionErrorMessage ;
  setExecutionMode (executionModeOptionErrorMessage) ;
  if (executionModeOptionErrorMessage.length () > 0) {
    co << executionModeOptionErrorMessage ;
    returnCode = 1 ;
  }else{
  //--- Common lexique object
    C_Compiler * commonLexique = NULL ;
    macroMyNew (commonLexique, C_Compiler (NULL, "", "" COMMA_HERE)) ;
    try{
      routine_before (commonLexique COMMA_HERE) ;
      verboseOptionOn = gOption_galgas_5F_builtin_5F_options_verbose_5F_output.mValue ;
      for (int32_t i=0 ; i<sourceFilesArray.count () ; i++) {
        setCurrentCompiledFilePath (sourceFilesArray (i COMMA_HERE)) ;
        if (gOption_galgas_5F_builtin_5F_options_trace.mValue) {
          enableTraceWithPath (sourceFilesArray (i COMMA_HERE)) ;
        }
        const C_String fileExtension = sourceFilesArray (i COMMA_HERE).pathExtension () ;
        const GALGAS_string sfp = GALGAS_string (sourceFilesArray (i COMMA_HERE)) ;
        const GALGAS_location location = commonLexique->here () ;
        const GALGAS_lstring sourceFilePath (sfp, location) ;
        int16_t r = 0 ;
        if (fileExtension == "gOption") {
          if (executionModeIsIndexing ()) {
            cGrammar_optionLL_31_grammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__30_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "gLexique") {
          if (executionModeIsIndexing ()) {
            cGrammar_lexiqueLL_31_grammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__31_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "gSemantics") {
          if (executionModeIsIndexing ()) {
            cGrammar_semanticsSLRgrammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__32_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "gSyntax") {
          if (executionModeIsIndexing ()) {
            cGrammar_syntaxSLRgrammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__33_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "gGrammar") {
          if (executionModeIsIndexing ()) {
            cGrammar_grammarLL_31_grammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__34_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "gGui") {
          if (executionModeIsIndexing ()) {
            cGrammar_guiGrammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__35_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "gProgram") {
          if (executionModeIsIndexing ()) {
            cGrammar_programSLRgrammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__36_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "gProject") {
          if (executionModeIsIndexing ()) {
            cGrammar_projectLL_31_grammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__37_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "gTemplate") {
          if (executionModeIsIndexing ()) {
            cGrammar_projectLL_31_grammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__38_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "galgasProject") {
          if (executionModeIsIndexing ()) {
            cGrammar_galgas_33_ProjectGrammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__39_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "galgas") {
          if (executionModeIsIndexing ()) {
            cGrammar_projectLL_31_grammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__31__30_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else{
          printf ("*** Error: unhandled extension for file '%s' ***\n", sourceFilesArray (i COMMA_HERE).cString (HERE)) ;
          r = 1 ;
        }
        if (r != 0) {
          returnCode = r ;
        }
        closeTrace () ;
      }
    //--- Error or warnings ?
      if (totalErrorCount () > 0) {
        returnCode = 1 ; // Error code
      }else if (totalWarningCount () > 0) {
        if (gOption_galgas_5F_builtin_5F_options_treat_5F_warnings_5F_as_5F_error.mValue) {
          returnCode = 1 ; // Error code
          if (verboseOptionOn) {
            printf ("** Note: warnings are treated as errors. **\n") ;
          }
        }
      }
    //--- Epilogue
      routine_after (commonLexique COMMA_HERE) ;
    //--- Display error and warnings count
      if (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.mValue || (totalWarningCount () > 0) || (totalErrorCount () > 0)) {
        C_String message ;
        if (totalWarningCount () == 0) {
          message << "No warning" ;
        }else if (totalWarningCount () == 1) {
          message << "1 warning" ;
        }else{
          message << cStringWithSigned (totalWarningCount ()) << " warnings" ;
        }
        message << ", " ;
        if (totalErrorCount () == 0) {
          message << "no error" ;
        }else if (totalErrorCount () == 1) {
          message << "1 error" ;
        }else{
          message << cStringWithSigned (totalErrorCount ()) << " errors" ;
        }
        message << ".\n" ;
        ggs_printMessage (message COMMA_HERE) ;
      }
    }catch (const ::std:: exception & e) {
      F_default_display_exception (e) ;
      returnCode = 1 ; // Error code
    }catch (...) {
      printf ("**** Unknow exception ****\n") ;
      throw ;
    }
    macroDetachSharedObject (commonLexique) ;
  }
  return returnCode ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                              Routine 'before'                               *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_before (C_Compiler * inCompiler
                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_creationProjectName = GALGAS_string (gOption_galgas_5F_cli_5F_options_create_5F_project.reader_value ()) ;
  {
  routine_projectCreation (var_creationProjectName, inCompiler COMMA_SOURCE_FILE_AT_LINE (41)) ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_printPredefinedLexicalActions.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_0) {
    {
    routine_printPredefinedLexicalActions (inCompiler COMMA_SOURCE_FILE_AT_LINE (44)) ;
    }
  }
  {
  routine_generatePredefinedTypeFiles (GALGAS_string (gOption_galgas_5F_cli_5F_options_generatePredefinedTypes.reader_value ()), inCompiler COMMA_SOURCE_FILE_AT_LINE (47)) ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, GALGAS_string (gOption_galgas_5F_cli_5F_options_extractLIBPMOption.reader_value ()).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_1) {
    {
    routine_updateLIBPMatPath (GALGAS_string (gOption_galgas_5F_cli_5F_options_extractLIBPMOption.reader_value ()), inCompiler COMMA_SOURCE_FILE_AT_LINE (50)) ;
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                           Routine 'programRule_0'                           *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_programRule_5F__30_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_parsedComponentStruct var_parsedComponentStruct = GALGAS_parsedComponentStruct::constructor_new (GALGAS_parsedSemanticsComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (61)), GALGAS_parsedLexiqueComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (62)), GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (63)), GALGAS_parsedOptionComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (64)), GALGAS_parsedGrammarComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (65)), GALGAS_parsedProgramComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (66)), GALGAS_parsedGuiComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (67)) COMMA_SOURCE_FILE_AT_LINE (60)) ;
  {
  routine_compileOptionComponentFromSourceFile (constinArgument_inSourceFile, function_outputDirectory (constinArgument_inSourceFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (69)), var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (69)) ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                           Routine 'programRule_1'                           *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_programRule_5F__31_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_parsedComponentStruct var_parsedComponentStruct = GALGAS_parsedComponentStruct::constructor_new (GALGAS_parsedSemanticsComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (79)), GALGAS_parsedLexiqueComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (80)), GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (81)), GALGAS_parsedOptionComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (82)), GALGAS_parsedGrammarComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (83)), GALGAS_parsedProgramComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (84)), GALGAS_parsedGuiComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (85)) COMMA_SOURCE_FILE_AT_LINE (78)) ;
  {
  routine_compileLexiqueComponentFromSource (constinArgument_inSourceFile, function_outputDirectory (constinArgument_inSourceFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (87)), var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (87)) ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                           Routine 'programRule_2'                           *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_programRule_5F__32_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_parsedComponentStruct var_parsedComponentStruct = GALGAS_parsedComponentStruct::constructor_new (GALGAS_parsedSemanticsComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (97)), GALGAS_parsedLexiqueComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (98)), GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (99)), GALGAS_parsedOptionComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (100)), GALGAS_parsedGrammarComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (101)), GALGAS_parsedProgramComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (102)), GALGAS_parsedGuiComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (103)) COMMA_SOURCE_FILE_AT_LINE (96)) ;
  {
  routine_compileSemanticsComponentFromSourceFile (constinArgument_inSourceFile, function_outputDirectory (constinArgument_inSourceFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (105)), var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (105)) ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                           Routine 'programRule_3'                           *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_programRule_5F__33_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_parsedComponentStruct var_parsedComponentStruct = GALGAS_parsedComponentStruct::constructor_new (GALGAS_parsedSemanticsComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (115)), GALGAS_parsedLexiqueComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (116)), GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (117)), GALGAS_parsedOptionComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (118)), GALGAS_parsedGrammarComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (119)), GALGAS_parsedProgramComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (120)), GALGAS_parsedGuiComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (121)) COMMA_SOURCE_FILE_AT_LINE (114)) ;
  {
  routine_compileSyntaxComponentFromSourceFile (constinArgument_inSourceFile, function_outputDirectory (constinArgument_inSourceFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (123)), var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (123)) ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                           Routine 'programRule_4'                           *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_programRule_5F__34_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_parsedComponentStruct var_parsedComponentStruct = GALGAS_parsedComponentStruct::constructor_new (GALGAS_parsedSemanticsComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (133)), GALGAS_parsedLexiqueComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (134)), GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (135)), GALGAS_parsedOptionComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (136)), GALGAS_parsedGrammarComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (137)), GALGAS_parsedProgramComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (138)), GALGAS_parsedGuiComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (139)) COMMA_SOURCE_FILE_AT_LINE (132)) ;
  {
  routine_compileGrammarComponentFromSourceFile (constinArgument_inSourceFile, function_outputDirectory (constinArgument_inSourceFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (143)), var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (141)) ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                           Routine 'programRule_5'                           *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_programRule_5F__35_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_parsedComponentStruct var_parsedComponentStruct = GALGAS_parsedComponentStruct::constructor_new (GALGAS_parsedSemanticsComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (154)), GALGAS_parsedLexiqueComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (155)), GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (156)), GALGAS_parsedOptionComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (157)), GALGAS_parsedGrammarComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (158)), GALGAS_parsedProgramComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (159)), GALGAS_parsedGuiComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (160)) COMMA_SOURCE_FILE_AT_LINE (153)) ;
  {
  routine_compileGuiComponentFromSourceFile (constinArgument_inSourceFile, function_outputDirectory (constinArgument_inSourceFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (162)), var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (162)) ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                           Routine 'programRule_6'                           *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_programRule_5F__36_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_parsedComponentStruct var_parsedComponentStruct = GALGAS_parsedComponentStruct::constructor_new (GALGAS_parsedSemanticsComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (172)), GALGAS_parsedLexiqueComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (173)), GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (174)), GALGAS_parsedOptionComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (175)), GALGAS_parsedGrammarComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (176)), GALGAS_parsedProgramComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (177)), GALGAS_parsedGuiComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (178)) COMMA_SOURCE_FILE_AT_LINE (171)) ;
  {
  routine_compileProgramComponentFromSourceFile (constinArgument_inSourceFile, function_outputDirectory (constinArgument_inSourceFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (180)), var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (180)) ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                           Routine 'programRule_7'                           *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_programRule_5F__37_ (const GALGAS_lstring constinArgument_inProjectSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_outputDirectory = function_outputDirectory (constinArgument_inProjectSourceFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (193)) ;
  GALGAS_projectComponentAST var_projectComponentAST ;
  C_String syntaxDirectedTranslationResult_8032 ;
  cGrammar_projectLL_31_grammar::_performSourceFileParsing_ (inCompiler, syntaxDirectedTranslationResult_8032, constinArgument_inProjectSourceFile, var_projectComponentAST COMMA_SOURCE_FILE_AT_LINE (195)) ;
  const GALGAS_string var_translatedProject (syntaxDirectedTranslationResult_8032) ;
  const enumGalgasBool test_0 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_convertToGalgas_33_.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_string var_projectName = constinArgument_inProjectSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (197)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (197)) ;
    GALGAS_string var_directory = constinArgument_inProjectSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (198)).operator_concat (GALGAS_string ("/../") COMMA_SOURCE_FILE_AT_LINE (198)) ;
    GALGAS_string var_newProjectFile = var_directory.operator_concat (var_projectName COMMA_SOURCE_FILE_AT_LINE (199)).operator_concat (GALGAS_string (".galgasProject") COMMA_SOURCE_FILE_AT_LINE (199)) ;
    GALGAS_bool joker_8528_0 ; // Joker input parameter
    var_translatedProject.method_writeToFileWhenDifferentContents (var_newProjectFile, joker_8528_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (200)) ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_projectComponentAST.reader_mProjectName (SOURCE_FILE_AT_LINE (203)).reader_string (SOURCE_FILE_AT_LINE (203)).objectCompare (constinArgument_inProjectSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (203)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (203)))).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_location location_2 (var_projectComponentAST.reader_mProjectName (SOURCE_FILE_AT_LINE (204)).reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, GALGAS_string ("the project name ('").operator_concat (var_projectComponentAST.reader_mProjectName (SOURCE_FILE_AT_LINE (205)).reader_string (SOURCE_FILE_AT_LINE (205)) COMMA_SOURCE_FILE_AT_LINE (205)).operator_concat (GALGAS_string ("') should be the same as the source file base name ('") COMMA_SOURCE_FILE_AT_LINE (205)).operator_concat (constinArgument_inProjectSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (206)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (206)) COMMA_SOURCE_FILE_AT_LINE (205)).operator_concat (GALGAS_string ("')") COMMA_SOURCE_FILE_AT_LINE (206)) COMMA_SOURCE_FILE_AT_LINE (204)) ;
  }
  GALGAS_string var_targetName = var_projectComponentAST.reader_mTargetName (SOURCE_FILE_AT_LINE (209)).reader_string (SOURCE_FILE_AT_LINE (209)) ;
  const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, var_targetName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_location location_4 (var_projectComponentAST.reader_mTargetName (SOURCE_FILE_AT_LINE (211)).reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_4, GALGAS_string ("the target name should not be empty") COMMA_SOURCE_FILE_AT_LINE (211)) ;
  }
  GALGAS_projectQualifiedFeatureMap var_projectQualifiedFeatureMap = GALGAS_projectQualifiedFeatureMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (214)) ;
  cEnumerator_qualifiedFeatureList enumerator_9339 (var_projectComponentAST.mAttribute_mQualifiedFeatureList, kEnumeration_up) ;
  while (enumerator_9339.hasCurrentObject ()) {
    {
    var_projectQualifiedFeatureMap.modifier_insertKey (enumerator_9339.current_mFeatureName (HERE), enumerator_9339.current_mFeatureValue (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (216)) ;
    }
    enumerator_9339.gotoNextObject () ;
  }
  GALGAS_parsedComponentStruct var_parsedComponentStruct = GALGAS_parsedComponentStruct::constructor_new (GALGAS_parsedSemanticsComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (223)), GALGAS_parsedLexiqueComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (224)), GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (225)), GALGAS_parsedOptionComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (226)), GALGAS_parsedGrammarComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (227)), GALGAS_parsedProgramComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (228)), GALGAS_parsedGuiComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (229)) COMMA_SOURCE_FILE_AT_LINE (222)) ;
  cEnumerator_projectSourceList enumerator_9935 (var_projectComponentAST.reader_mProjectSourceList (SOURCE_FILE_AT_LINE (232)), kEnumeration_up) ;
  while (enumerator_9935.hasCurrentObject ()) {
    GALGAS_string var_extension = enumerator_9935.current_mFilePath (HERE).mAttribute_string.reader_pathExtension (SOURCE_FILE_AT_LINE (233)) ;
    GALGAS_lstring var_componentName = GALGAS_lstring::constructor_new (enumerator_9935.current_mFilePath (HERE).mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (235)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (235)), enumerator_9935.current_mFilePath (HERE).reader_location (SOURCE_FILE_AT_LINE (236)) COMMA_SOURCE_FILE_AT_LINE (234)) ;
    GALGAS_lstring var_fullFilePath = GALGAS_lstring::constructor_new (constinArgument_inProjectSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (239)).operator_concat (GALGAS_string ("/") COMMA_SOURCE_FILE_AT_LINE (239)).operator_concat (enumerator_9935.current_mFilePath (HERE).reader_string (SOURCE_FILE_AT_LINE (239)) COMMA_SOURCE_FILE_AT_LINE (239)), enumerator_9935.current_mFilePath (HERE).reader_location (SOURCE_FILE_AT_LINE (240)) COMMA_SOURCE_FILE_AT_LINE (238)) ;
    if (enumerator_9935.current_mSourceKind (HERE).isValid ()) {
      switch (enumerator_9935.current_mSourceKind (HERE).enumValue ()) {
      case GALGAS_sourceFileKind::kNotBuilt:
        break ;
      case GALGAS_sourceFileKind::kEnum_externSourceFile: {
        } break ;
      case GALGAS_sourceFileKind::kEnum_guiSourceFile: {
        const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, var_extension.objectCompare (GALGAS_string ("gGui"))).boolEnum () ;
        if (kBoolTrue == test_5) {
          const enumGalgasBool test_6 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_6) {
            inCompiler->printMessage (GALGAS_string ("*** Parse '").operator_concat (var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (247)) COMMA_SOURCE_FILE_AT_LINE (247)).operator_concat (GALGAS_string ("'\n") COMMA_SOURCE_FILE_AT_LINE (247)) COMMA_SOURCE_FILE_AT_LINE (247)) ;
          }
          GALGAS_guiComponentAST var_guiComponentRoot ;
          C_String syntaxDirectedTranslationResult_10623 ;
          cGrammar_guiGrammar::_performSourceFileParsing_ (inCompiler, syntaxDirectedTranslationResult_10623, var_fullFilePath, var_guiComponentRoot COMMA_SOURCE_FILE_AT_LINE (250)) ;
          const GALGAS_string var_translatedGUI (syntaxDirectedTranslationResult_10623) ;
          const enumGalgasBool test_7 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_convertToGalgas_33_.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_7) {
            GALGAS_string var_projectName = var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (252)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (252)) ;
            GALGAS_string var_directory = var_fullFilePath.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (253)).operator_concat (GALGAS_string ("/../galgas-sources/") COMMA_SOURCE_FILE_AT_LINE (253)) ;
            GALGAS_string var_newProjectFile = var_directory.operator_concat (var_projectName COMMA_SOURCE_FILE_AT_LINE (254)).operator_concat (GALGAS_string (".galgas") COMMA_SOURCE_FILE_AT_LINE (254)) ;
            GALGAS_bool joker_11103_0 ; // Joker input parameter
            var_translatedGUI.method_writeToFileWhenDifferentContents (var_newProjectFile, joker_11103_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (255)) ;
          }
          {
          var_parsedComponentStruct.mAttribute_mParsedGuiComponentMap.modifier_insertKey (var_componentName, var_fullFilePath, var_guiComponentRoot, inCompiler COMMA_SOURCE_FILE_AT_LINE (257)) ;
          }
        }else if (kBoolFalse == test_5) {
          GALGAS_location location_8 (enumerator_9935.current_mFilePath (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_8, GALGAS_string ("extension of a gui component should be '.gGui'.") COMMA_SOURCE_FILE_AT_LINE (259)) ;
        }
        } break ;
      case GALGAS_sourceFileKind::kEnum_lexiqueSourceFile: {
        const enumGalgasBool test_9 = GALGAS_bool (kIsEqual, var_extension.objectCompare (GALGAS_string ("gLexique"))).boolEnum () ;
        if (kBoolTrue == test_9) {
          const enumGalgasBool test_10 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_10) {
            inCompiler->printMessage (GALGAS_string ("*** Parse '").operator_concat (var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (264)) COMMA_SOURCE_FILE_AT_LINE (264)).operator_concat (GALGAS_string ("'\n") COMMA_SOURCE_FILE_AT_LINE (264)) COMMA_SOURCE_FILE_AT_LINE (264)) ;
          }
          GALGAS_lexiqueComponentAST var_lexiqueComponentRoot ;
          C_String syntaxDirectedTranslationResult_11637 ;
          cGrammar_lexiqueLL_31_grammar::_performSourceFileParsing_ (inCompiler, syntaxDirectedTranslationResult_11637, var_fullFilePath, var_lexiqueComponentRoot COMMA_SOURCE_FILE_AT_LINE (267)) ;
          const GALGAS_string var_translatedSource (syntaxDirectedTranslationResult_11637) ;
          const enumGalgasBool test_11 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_convertToGalgas_33_.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_11) {
            GALGAS_string var_projectName = var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (269)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (269)) ;
            GALGAS_string var_directory = var_fullFilePath.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (270)).operator_concat (GALGAS_string ("/../galgas-sources/") COMMA_SOURCE_FILE_AT_LINE (270)) ;
            GALGAS_string var_newProjectFile = var_directory.operator_concat (var_projectName COMMA_SOURCE_FILE_AT_LINE (271)).operator_concat (GALGAS_string (".galgas") COMMA_SOURCE_FILE_AT_LINE (271)) ;
            GALGAS_bool joker_12127_0 ; // Joker input parameter
            var_translatedSource.method_writeToFileWhenDifferentContents (var_newProjectFile, joker_12127_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (272)) ;
          }
          {
          var_parsedComponentStruct.mAttribute_mParsedLexiqueComponentMap.modifier_insertKey (var_componentName, var_lexiqueComponentRoot, inCompiler COMMA_SOURCE_FILE_AT_LINE (274)) ;
          }
        }else if (kBoolFalse == test_9) {
          GALGAS_location location_12 (enumerator_9935.current_mFilePath (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_12, GALGAS_string ("extension of a lexique component should be '.gLexique'.") COMMA_SOURCE_FILE_AT_LINE (276)) ;
        }
        } break ;
      case GALGAS_sourceFileKind::kEnum_optionSourceFile: {
        const enumGalgasBool test_13 = GALGAS_bool (kIsEqual, var_extension.objectCompare (GALGAS_string ("gOption"))).boolEnum () ;
        if (kBoolTrue == test_13) {
          const enumGalgasBool test_14 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_14) {
            inCompiler->printMessage (GALGAS_string ("*** Parse '").operator_concat (var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (281)) COMMA_SOURCE_FILE_AT_LINE (281)).operator_concat (GALGAS_string ("'\n") COMMA_SOURCE_FILE_AT_LINE (281)) COMMA_SOURCE_FILE_AT_LINE (281)) ;
          }
          GALGAS_optionComponentAST var_optionComponentAST ;
          C_String syntaxDirectedTranslationResult_12657 ;
          cGrammar_optionLL_31_grammar::_performSourceFileParsing_ (inCompiler, syntaxDirectedTranslationResult_12657, var_fullFilePath, var_optionComponentAST COMMA_SOURCE_FILE_AT_LINE (284)) ;
          const GALGAS_string var_translatedSource (syntaxDirectedTranslationResult_12657) ;
          const enumGalgasBool test_15 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_convertToGalgas_33_.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_15) {
            GALGAS_string var_projectName = var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (286)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (286)) ;
            GALGAS_string var_directory = var_fullFilePath.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (287)).operator_concat (GALGAS_string ("/../galgas-sources/") COMMA_SOURCE_FILE_AT_LINE (287)) ;
            GALGAS_string var_newProjectFile = var_directory.operator_concat (var_projectName COMMA_SOURCE_FILE_AT_LINE (288)).operator_concat (GALGAS_string (".galgas") COMMA_SOURCE_FILE_AT_LINE (288)) ;
            GALGAS_bool joker_13145_0 ; // Joker input parameter
            var_translatedSource.method_writeToFileWhenDifferentContents (var_newProjectFile, joker_13145_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (289)) ;
          }
          GALGAS_commandLineOptionMap var_boolOptionMap ;
          GALGAS_commandLineOptionMap var_UIntOptionMap ;
          GALGAS_commandLineOptionMap var_stringOptionMap ;
          {
          routine_semanticAnalysisOfOptionComponent (var_optionComponentAST, var_boolOptionMap, var_UIntOptionMap, var_stringOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (295)) ;
          }
          {
          var_parsedComponentStruct.mAttribute_mParsedOptionComponentMap.modifier_insertKey (var_componentName, var_boolOptionMap, var_UIntOptionMap, var_stringOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (301)) ;
          }
        }else if (kBoolFalse == test_13) {
          GALGAS_location location_16 (enumerator_9935.current_mFilePath (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_16, GALGAS_string ("extension of an option component should be '.gOption'.") COMMA_SOURCE_FILE_AT_LINE (308)) ;
        }
        } break ;
      case GALGAS_sourceFileKind::kEnum_semanticsSourceFile: {
        const enumGalgasBool test_17 = GALGAS_bool (kIsEqual, var_extension.objectCompare (GALGAS_string ("gSemantics"))).boolEnum () ;
        if (kBoolTrue == test_17) {
          const enumGalgasBool test_18 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_18) {
            inCompiler->printMessage (GALGAS_string ("*** Parse '").operator_concat (var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (313)) COMMA_SOURCE_FILE_AT_LINE (313)).operator_concat (GALGAS_string ("'\n") COMMA_SOURCE_FILE_AT_LINE (313)) COMMA_SOURCE_FILE_AT_LINE (313)) ;
          }
          GALGAS_semanticsComponentAST var_semanticsComponentRoot ;
          C_String syntaxDirectedTranslationResult_14111 ;
          cGrammar_semanticsSLRgrammar::_performSourceFileParsing_ (inCompiler, syntaxDirectedTranslationResult_14111, var_fullFilePath, var_semanticsComponentRoot COMMA_SOURCE_FILE_AT_LINE (316)) ;
          const GALGAS_string var_translatedSource (syntaxDirectedTranslationResult_14111) ;
          const enumGalgasBool test_19 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_convertToGalgas_33_.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_19) {
            GALGAS_string var_projectName = var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (318)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (318)) ;
            GALGAS_string var_directory = var_fullFilePath.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (319)).operator_concat (GALGAS_string ("/../galgas-sources/") COMMA_SOURCE_FILE_AT_LINE (319)) ;
            GALGAS_string var_newProjectFile = var_directory.operator_concat (var_projectName COMMA_SOURCE_FILE_AT_LINE (320)).operator_concat (GALGAS_string (".galgas") COMMA_SOURCE_FILE_AT_LINE (320)) ;
            GALGAS_bool joker_14603_0 ; // Joker input parameter
            var_translatedSource.method_writeToFileWhenDifferentContents (var_newProjectFile, joker_14603_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (321)) ;
          }
          {
          var_parsedComponentStruct.mAttribute_mParsedSemanticsComponentMap.modifier_insertKey (var_componentName, var_fullFilePath, var_semanticsComponentRoot, inCompiler COMMA_SOURCE_FILE_AT_LINE (323)) ;
          }
        }else if (kBoolFalse == test_17) {
          GALGAS_location location_20 (enumerator_9935.current_mFilePath (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_20, GALGAS_string ("extension of a semantics component should be '.gSemantics'.") COMMA_SOURCE_FILE_AT_LINE (325)) ;
        }
        } break ;
      case GALGAS_sourceFileKind::kEnum_syntaxSourceFile: {
        const enumGalgasBool test_21 = GALGAS_bool (kIsEqual, var_extension.objectCompare (GALGAS_string ("gSyntax"))).boolEnum () ;
        if (kBoolTrue == test_21) {
          const enumGalgasBool test_22 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_22) {
            inCompiler->printMessage (GALGAS_string ("*** Parse '").operator_concat (var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (330)) COMMA_SOURCE_FILE_AT_LINE (330)).operator_concat (GALGAS_string ("'\n") COMMA_SOURCE_FILE_AT_LINE (330)) COMMA_SOURCE_FILE_AT_LINE (330)) ;
          }
          GALGAS_syntaxComponentAST var_syntaxComponentRoot ;
          C_String syntaxDirectedTranslationResult_15156 ;
          cGrammar_syntaxSLRgrammar::_performSourceFileParsing_ (inCompiler, syntaxDirectedTranslationResult_15156, var_fullFilePath, var_syntaxComponentRoot COMMA_SOURCE_FILE_AT_LINE (333)) ;
          const GALGAS_string var_translatedSource (syntaxDirectedTranslationResult_15156) ;
          const enumGalgasBool test_23 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_convertToGalgas_33_.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_23) {
            GALGAS_string var_projectName = var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (335)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (335)) ;
            GALGAS_string var_directory = var_fullFilePath.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (336)).operator_concat (GALGAS_string ("/../galgas-sources/") COMMA_SOURCE_FILE_AT_LINE (336)) ;
            GALGAS_string var_newProjectFile = var_directory.operator_concat (var_projectName COMMA_SOURCE_FILE_AT_LINE (337)).operator_concat (GALGAS_string (".galgas") COMMA_SOURCE_FILE_AT_LINE (337)) ;
            GALGAS_bool joker_15645_0 ; // Joker input parameter
            var_translatedSource.method_writeToFileWhenDifferentContents (var_newProjectFile, joker_15645_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (338)) ;
          }
          {
          var_parsedComponentStruct.mAttribute_mParsedSyntaxComponentMap.modifier_insertKey (var_componentName, var_fullFilePath, var_syntaxComponentRoot, inCompiler COMMA_SOURCE_FILE_AT_LINE (340)) ;
          }
        }else if (kBoolFalse == test_21) {
          GALGAS_location location_24 (enumerator_9935.current_mFilePath (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_24, GALGAS_string ("extension of a syntax component should be '.gSyntax'.") COMMA_SOURCE_FILE_AT_LINE (342)) ;
        }
        } break ;
      case GALGAS_sourceFileKind::kEnum_grammarSourceFile: {
        const enumGalgasBool test_25 = GALGAS_bool (kIsEqual, var_extension.objectCompare (GALGAS_string ("gGrammar"))).boolEnum () ;
        if (kBoolTrue == test_25) {
          const enumGalgasBool test_26 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_26) {
            inCompiler->printMessage (GALGAS_string ("*** Parse '").operator_concat (var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (347)) COMMA_SOURCE_FILE_AT_LINE (347)).operator_concat (GALGAS_string ("'\n") COMMA_SOURCE_FILE_AT_LINE (347)) COMMA_SOURCE_FILE_AT_LINE (347)) ;
          }
          GALGAS_grammarComponentAST var_grammarComponentRoot ;
          C_String syntaxDirectedTranslationResult_16191 ;
          cGrammar_grammarLL_31_grammar::_performSourceFileParsing_ (inCompiler, syntaxDirectedTranslationResult_16191, var_fullFilePath, var_grammarComponentRoot COMMA_SOURCE_FILE_AT_LINE (350)) ;
          const GALGAS_string var_translatedSource (syntaxDirectedTranslationResult_16191) ;
          const enumGalgasBool test_27 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_convertToGalgas_33_.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_27) {
            GALGAS_string var_projectName = var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (352)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (352)) ;
            GALGAS_string var_directory = var_fullFilePath.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (353)).operator_concat (GALGAS_string ("/../galgas-sources/") COMMA_SOURCE_FILE_AT_LINE (353)) ;
            GALGAS_string var_newProjectFile = var_directory.operator_concat (var_projectName COMMA_SOURCE_FILE_AT_LINE (354)).operator_concat (GALGAS_string (".galgas") COMMA_SOURCE_FILE_AT_LINE (354)) ;
            GALGAS_bool joker_16681_0 ; // Joker input parameter
            var_translatedSource.method_writeToFileWhenDifferentContents (var_newProjectFile, joker_16681_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (355)) ;
          }
          {
          var_parsedComponentStruct.mAttribute_mParsedGrammarComponentMap.modifier_insertKey (var_componentName, var_fullFilePath, var_grammarComponentRoot, inCompiler COMMA_SOURCE_FILE_AT_LINE (357)) ;
          }
        }else if (kBoolFalse == test_25) {
          GALGAS_location location_28 (enumerator_9935.current_mFilePath (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_28, GALGAS_string ("extension of a grammar component should be '.gGrammar'.") COMMA_SOURCE_FILE_AT_LINE (359)) ;
        }
        } break ;
      case GALGAS_sourceFileKind::kEnum_programSourceFile: {
        const enumGalgasBool test_29 = GALGAS_bool (kIsEqual, var_extension.objectCompare (GALGAS_string ("gProgram"))).boolEnum () ;
        if (kBoolTrue == test_29) {
          const enumGalgasBool test_30 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_30) {
            inCompiler->printMessage (GALGAS_string ("*** Parse '").operator_concat (var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (364)) COMMA_SOURCE_FILE_AT_LINE (364)).operator_concat (GALGAS_string ("'\n") COMMA_SOURCE_FILE_AT_LINE (364)) COMMA_SOURCE_FILE_AT_LINE (364)) ;
          }
          GALGAS_programComponentAST var_programComponentAST ;
          C_String syntaxDirectedTranslationResult_17230 ;
          cGrammar_programSLRgrammar::_performSourceFileParsing_ (inCompiler, syntaxDirectedTranslationResult_17230, var_fullFilePath, var_programComponentAST COMMA_SOURCE_FILE_AT_LINE (367)) ;
          const GALGAS_string var_translatedSource (syntaxDirectedTranslationResult_17230) ;
          const enumGalgasBool test_31 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_convertToGalgas_33_.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_31) {
            GALGAS_string var_projectName = var_fullFilePath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (369)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (369)) ;
            GALGAS_string var_directory = var_fullFilePath.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (370)).operator_concat (GALGAS_string ("/../galgas-sources/") COMMA_SOURCE_FILE_AT_LINE (370)) ;
            GALGAS_string var_newProjectFile = var_directory.operator_concat (var_projectName COMMA_SOURCE_FILE_AT_LINE (371)).operator_concat (GALGAS_string (".galgas") COMMA_SOURCE_FILE_AT_LINE (371)) ;
            GALGAS_bool joker_17719_0 ; // Joker input parameter
            var_translatedSource.method_writeToFileWhenDifferentContents (var_newProjectFile, joker_17719_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (372)) ;
          }
          {
          var_parsedComponentStruct.mAttribute_mParsedProgramComponentMap.modifier_insertKey (var_componentName, var_fullFilePath, var_programComponentAST, inCompiler COMMA_SOURCE_FILE_AT_LINE (374)) ;
          }
        }else if (kBoolFalse == test_29) {
          GALGAS_location location_32 (enumerator_9935.current_mFilePath (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_32, GALGAS_string ("extension of a program component should be '.gProgram'.") COMMA_SOURCE_FILE_AT_LINE (376)) ;
        }
        } break ;
      }
    }
    enumerator_9935.gotoNextObject () ;
  }
  GALGAS_stringset var_handledExtensionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (381)) ;
  const enumGalgasBool test_33 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (382)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_33) {
    cEnumerator_parsedLexiqueComponentMap enumerator_18234 (var_parsedComponentStruct.mAttribute_mParsedLexiqueComponentMap, kEnumeration_up) ;
    while (enumerator_18234.hasCurrentObject ()) {
      const enumGalgasBool test_34 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
      if (kBoolTrue == test_34) {
        inCompiler->printMessage (GALGAS_string ("*** Compiling '").operator_concat (enumerator_18234.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (386)) COMMA_SOURCE_FILE_AT_LINE (386)).operator_concat (GALGAS_string (".gLexique'\n") COMMA_SOURCE_FILE_AT_LINE (386)) COMMA_SOURCE_FILE_AT_LINE (386)) ;
      }
      {
      routine_compileLexiqueComponentFromAST (enumerator_18234.current_lkey (HERE).mAttribute_string, var_outputDirectory, enumerator_18234.current_mLexiqueComponentAST (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (388)) ;
      }
      enumerator_18234.gotoNextObject () ;
    }
    cEnumerator_parsedGuiComponentMap enumerator_18577 (var_parsedComponentStruct.mAttribute_mParsedGuiComponentMap, kEnumeration_up) ;
    while (enumerator_18577.hasCurrentObject ()) {
      const enumGalgasBool test_35 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
      if (kBoolTrue == test_35) {
        inCompiler->printMessage (GALGAS_string ("*** Compiling '").operator_concat (enumerator_18577.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (397)) COMMA_SOURCE_FILE_AT_LINE (397)).operator_concat (GALGAS_string (".gGui'\n") COMMA_SOURCE_FILE_AT_LINE (397)) COMMA_SOURCE_FILE_AT_LINE (397)) ;
      }
      {
      routine_compileGuiComponentFromAST (enumerator_18577.current_mSourceFullFilePath (HERE), var_outputDirectory, enumerator_18577.current_mGuiComponentAST (HERE), var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (399)) ;
      }
      enumerator_18577.gotoNextObject () ;
    }
    cEnumerator_parsedOptionComponentMap enumerator_18953 (var_parsedComponentStruct.mAttribute_mParsedOptionComponentMap, kEnumeration_up) ;
    while (enumerator_18953.hasCurrentObject ()) {
      const enumGalgasBool test_36 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
      if (kBoolTrue == test_36) {
        inCompiler->printMessage (GALGAS_string ("*** Compiling '").operator_concat (enumerator_18953.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (409)) COMMA_SOURCE_FILE_AT_LINE (409)).operator_concat (GALGAS_string (".gOption'\n") COMMA_SOURCE_FILE_AT_LINE (409)) COMMA_SOURCE_FILE_AT_LINE (409)) ;
      }
      {
      routine_compileOptionComponentAST (var_outputDirectory, enumerator_18953.current_lkey (HERE), enumerator_18953.current_mBoolOptionMap (HERE), enumerator_18953.current_mUIntOptionMap (HERE), enumerator_18953.current_mStringOptionMap (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (411)) ;
      }
      enumerator_18953.gotoNextObject () ;
    }
    cEnumerator_parsedSemanticsComponentMap enumerator_19337 (var_parsedComponentStruct.mAttribute_mParsedSemanticsComponentMap, kEnumeration_up) ;
    while (enumerator_19337.hasCurrentObject ()) {
      const enumGalgasBool test_37 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
      if (kBoolTrue == test_37) {
        inCompiler->printMessage (GALGAS_string ("*** Compiling '").operator_concat (enumerator_19337.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (422)) COMMA_SOURCE_FILE_AT_LINE (422)).operator_concat (GALGAS_string (".gSemantics'\n") COMMA_SOURCE_FILE_AT_LINE (422)) COMMA_SOURCE_FILE_AT_LINE (422)) ;
      }
      {
      routine_compileSemanticsComponentAST (enumerator_19337.current_mSourceFullFilePath (HERE), var_outputDirectory, enumerator_19337.current_mSemanticComponentRoot (HERE), var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (424)) ;
      }
      enumerator_19337.gotoNextObject () ;
    }
    cEnumerator_parsedSyntaxComponentMap enumerator_19727 (var_parsedComponentStruct.mAttribute_mParsedSyntaxComponentMap, kEnumeration_up) ;
    while (enumerator_19727.hasCurrentObject ()) {
      const enumGalgasBool test_38 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
      if (kBoolTrue == test_38) {
        inCompiler->printMessage (GALGAS_string ("*** Compiling '").operator_concat (enumerator_19727.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (434)) COMMA_SOURCE_FILE_AT_LINE (434)).operator_concat (GALGAS_string (".gSyntax'\n") COMMA_SOURCE_FILE_AT_LINE (434)) COMMA_SOURCE_FILE_AT_LINE (434)) ;
      }
      {
      routine_compileSyntaxComponentFromAST (enumerator_19727.current_mSourceFullFilePath (HERE), var_outputDirectory, enumerator_19727.current_mSyntaxComponentRoot (HERE), var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (436)) ;
      }
      enumerator_19727.gotoNextObject () ;
    }
    cEnumerator_parsedGrammarComponentMap enumerator_20115 (var_parsedComponentStruct.mAttribute_mParsedGrammarComponentMap, kEnumeration_up) ;
    while (enumerator_20115.hasCurrentObject ()) {
      const enumGalgasBool test_39 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
      if (kBoolTrue == test_39) {
        inCompiler->printMessage (GALGAS_string ("*** Compiling '").operator_concat (enumerator_20115.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (446)) COMMA_SOURCE_FILE_AT_LINE (446)).operator_concat (GALGAS_string (".gGrammar'\n") COMMA_SOURCE_FILE_AT_LINE (446)) COMMA_SOURCE_FILE_AT_LINE (446)) ;
      }
      {
      routine_compileGrammarComponentFromAST (enumerator_20115.current_mSourceFullFilePath (HERE), var_outputDirectory, enumerator_20115.current_mGrammarComponentRoot (HERE), var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (448)) ;
      }
      enumerator_20115.gotoNextObject () ;
    }
    cEnumerator_parsedProgramComponentMap enumerator_20506 (var_parsedComponentStruct.mAttribute_mParsedProgramComponentMap, kEnumeration_up) ;
    while (enumerator_20506.hasCurrentObject ()) {
      cEnumerator_programRuleList enumerator_20559 (enumerator_20506.current_mProgramComponentAST (HERE).mAttribute_mProgramRules, kEnumeration_up) ;
      while (enumerator_20559.hasCurrentObject ()) {
        var_handledExtensionSet.addAssign_operation (enumerator_20559.current_mSourceFileExtension (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (458)) ;
        enumerator_20559.gotoNextObject () ;
      }
      const enumGalgasBool test_40 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
      if (kBoolTrue == test_40) {
        inCompiler->printMessage (GALGAS_string ("*** Compiling '").operator_concat (enumerator_20506.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (461)) COMMA_SOURCE_FILE_AT_LINE (461)).operator_concat (GALGAS_string (".gProgram'\n") COMMA_SOURCE_FILE_AT_LINE (461)) COMMA_SOURCE_FILE_AT_LINE (461)) ;
      }
      {
      routine_compileProgramComponentFromAST (enumerator_20506.current_mSourceFullFilePath (HERE), var_outputDirectory, enumerator_20506.current_mProgramComponentAST (HERE), var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (463)) ;
      }
      enumerator_20506.gotoNextObject () ;
    }
  }
  const enumGalgasBool test_41 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (472)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_41) {
    const enumGalgasBool test_42 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
    if (kBoolTrue == test_42) {
      inCompiler->printMessage (GALGAS_string ("*** Perform global checkings\n") COMMA_SOURCE_FILE_AT_LINE (474)) ;
    }
    {
    routine_performProjectGlobalCheckings (var_parsedComponentStruct, constinArgument_inProjectSourceFile.mAttribute_string, var_projectComponentAST.reader_mEndOfSourceFile (SOURCE_FILE_AT_LINE (479)), inCompiler COMMA_SOURCE_FILE_AT_LINE (476)) ;
    }
  }
  const enumGalgasBool test_43 = GALGAS_bool (kIsEqual, GALGAS_uint ((uint32_t) 0U).objectCompare (GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (483)))).boolEnum () ;
  if (kBoolTrue == test_43) {
    {
    routine_updateTargets (constinArgument_inProjectSourceFile, var_projectComponentAST.mAttribute_mMajorVersion.mAttribute_uint.reader_string (SOURCE_FILE_AT_LINE (486)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (486)).operator_concat (var_projectComponentAST.mAttribute_mMinorVersion.mAttribute_uint.reader_string (SOURCE_FILE_AT_LINE (486)) COMMA_SOURCE_FILE_AT_LINE (486)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (486)).operator_concat (var_projectComponentAST.mAttribute_mRevisionVersion.mAttribute_uint.reader_string (SOURCE_FILE_AT_LINE (486)) COMMA_SOURCE_FILE_AT_LINE (486)), var_projectComponentAST.reader_mProjectName (SOURCE_FILE_AT_LINE (487)), var_targetName, var_projectQualifiedFeatureMap, var_projectComponentAST.reader_mGenerationFeatureList (SOURCE_FILE_AT_LINE (490)), var_projectComponentAST.reader_mProjectSourceList (SOURCE_FILE_AT_LINE (491)), var_handledExtensionSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (484)) ;
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                           Routine 'programRule_8'                           *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_programRule_5F__38_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_templateInstructionListAST joker_22443_0 ; // Joker input parameter
  cGrammar_templateGrammar::_performSourceFileParsing_ (inCompiler, constinArgument_inSourceFile, joker_22443_0 COMMA_SOURCE_FILE_AT_LINE (509)) ;
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                           Routine 'programRule_9'                           *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_programRule_5F__39_ (const GALGAS_lstring constinArgument_inProjectSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  inCompiler->printMessage (GALGAS_string ("** Parsing project files\n") COMMA_SOURCE_FILE_AT_LINE (522)) ;
  GALGAS_galgas_33_ProjectComponentAST var_projectComponentAST ;
  cGrammar_galgas_33_ProjectGrammar::_performSourceFileParsing_ (inCompiler, constinArgument_inProjectSourceFile, var_projectComponentAST COMMA_SOURCE_FILE_AT_LINE (523)) ;
  GALGAS_galgas_33_DeclarationAST var_declarationAST = GALGAS_galgas_33_DeclarationAST::constructor_default (SOURCE_FILE_AT_LINE (526)) ;
  cEnumerator_lstringlist enumerator_23240 (var_projectComponentAST.mAttribute_mProjectSourceList, kEnumeration_up) ;
  while (enumerator_23240.hasCurrentObject ()) {
    const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, enumerator_23240.current_mValue (HERE).mAttribute_string.reader_pathExtension (SOURCE_FILE_AT_LINE (528)).objectCompare (GALGAS_string ("galgas"))).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_string var_absoluteSourcePath = enumerator_23240.current_mValue (HERE).mAttribute_string.reader_absolutePathFromPath (constinArgument_inProjectSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (529)) COMMA_SOURCE_FILE_AT_LINE (529)) ;
      cGrammar_galgas_33_Grammar::_performSourceFileParsing_ (inCompiler, GALGAS_lstring::constructor_new (var_absoluteSourcePath, enumerator_23240.current_mValue (HERE).mAttribute_location COMMA_SOURCE_FILE_AT_LINE (530)), var_declarationAST COMMA_SOURCE_FILE_AT_LINE (530)) ;
    }
    enumerator_23240.gotoNextObject () ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (533)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    inCompiler->printMessage (GALGAS_string ("  Semantic declarations: ").operator_concat (var_declarationAST.mAttribute_mSemanticDeclarationList.reader_length (SOURCE_FILE_AT_LINE (535)).reader_string (SOURCE_FILE_AT_LINE (535)) COMMA_SOURCE_FILE_AT_LINE (535)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (535)) COMMA_SOURCE_FILE_AT_LINE (535)) ;
    inCompiler->printMessage (GALGAS_string ("  Lexique components: ").operator_concat (var_declarationAST.mAttribute_mLexiqueComponentList.reader_length (SOURCE_FILE_AT_LINE (536)).reader_string (SOURCE_FILE_AT_LINE (536)) COMMA_SOURCE_FILE_AT_LINE (536)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (536)) COMMA_SOURCE_FILE_AT_LINE (536)) ;
    inCompiler->printMessage (GALGAS_string ("  Syntax components: ").operator_concat (var_declarationAST.mAttribute_mSyntaxComponentList.reader_length (SOURCE_FILE_AT_LINE (537)).reader_string (SOURCE_FILE_AT_LINE (537)) COMMA_SOURCE_FILE_AT_LINE (537)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (537)) COMMA_SOURCE_FILE_AT_LINE (537)) ;
    inCompiler->printMessage (GALGAS_string ("  Grammar components: ").operator_concat (var_declarationAST.mAttribute_mGrammarComponentList.reader_length (SOURCE_FILE_AT_LINE (538)).reader_string (SOURCE_FILE_AT_LINE (538)) COMMA_SOURCE_FILE_AT_LINE (538)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (538)) COMMA_SOURCE_FILE_AT_LINE (538)) ;
    inCompiler->printMessage (GALGAS_string ("  GUI components: ").operator_concat (var_declarationAST.mAttribute_mGUIComponentList.reader_length (SOURCE_FILE_AT_LINE (539)).reader_string (SOURCE_FILE_AT_LINE (539)) COMMA_SOURCE_FILE_AT_LINE (539)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (539)) COMMA_SOURCE_FILE_AT_LINE (539)) ;
    inCompiler->printMessage (GALGAS_string ("  Option components: ").operator_concat (var_declarationAST.mAttribute_mOptionComponentList.reader_length (SOURCE_FILE_AT_LINE (540)).reader_string (SOURCE_FILE_AT_LINE (540)) COMMA_SOURCE_FILE_AT_LINE (540)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (540)) COMMA_SOURCE_FILE_AT_LINE (540)) ;
    inCompiler->printMessage (GALGAS_string ("  Source rules: ").operator_concat (var_declarationAST.mAttribute_mSourceRuleList.reader_length (SOURCE_FILE_AT_LINE (541)).reader_string (SOURCE_FILE_AT_LINE (541)) COMMA_SOURCE_FILE_AT_LINE (541)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (541)) COMMA_SOURCE_FILE_AT_LINE (541)) ;
    inCompiler->printMessage (GALGAS_string ("  Prologue procs: ").operator_concat (var_declarationAST.mAttribute_mPrologueDeclarationList.reader_length (SOURCE_FILE_AT_LINE (542)).reader_string (SOURCE_FILE_AT_LINE (542)) COMMA_SOURCE_FILE_AT_LINE (542)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (542)) COMMA_SOURCE_FILE_AT_LINE (542)) ;
    inCompiler->printMessage (GALGAS_string ("  Epilogue procs: ").operator_concat (var_declarationAST.mAttribute_mEpilogueDeclarationList.reader_length (SOURCE_FILE_AT_LINE (543)).reader_string (SOURCE_FILE_AT_LINE (543)) COMMA_SOURCE_FILE_AT_LINE (543)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (543)) COMMA_SOURCE_FILE_AT_LINE (543)) ;
    {
    routine_compileSemanticDeclarations (constinArgument_inProjectSourceFile.mAttribute_string, var_projectComponentAST.mAttribute_mEndOfSourceFile, var_declarationAST.mAttribute_mSemanticDeclarationList, var_declarationAST.mAttribute_mOptionComponentList, var_declarationAST.mAttribute_mLexiqueComponentList, var_declarationAST.mAttribute_mGrammarComponentList, inCompiler COMMA_SOURCE_FILE_AT_LINE (545)) ;
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                          Routine 'programRule_10'                           *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_programRule_5F__31__30_ (const GALGAS_lstring constinArgument_inSourceFile,
                                      C_Compiler * inCompiler
                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_galgas_33_DeclarationAST var_declaration = GALGAS_galgas_33_DeclarationAST::constructor_default (SOURCE_FILE_AT_LINE (566)) ;
  cGrammar_galgas_33_Grammar::_performSourceFileParsing_ (inCompiler, constinArgument_inSourceFile, var_declaration COMMA_SOURCE_FILE_AT_LINE (567)) ;
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                               Routine 'after'                               *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_after (C_Compiler * /* inCompiler */
                    COMMA_UNUSED_LOCATION_ARGS) {
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


