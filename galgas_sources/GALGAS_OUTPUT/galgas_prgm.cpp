//---------------------------------------------------------------------------*
//                                                                           *
//                          File 'galgas_prgm.cpp'                           *
//             Generated by version version GALGAS_BETA_VERSION              *
//                    november 28th, 2010, at 17h25'45"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "galgas_prgm.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/F_DisplayException.h"
#include "utilities/basic-allocation.h"
#include "utilities/cpp-allocation.h"
#include "command_line_interface/mainForLIBPM.h"
#include "command_line_interface/F_Analyze_CLI_Options.h"
#include "command_line_interface/C_builtin_CLI_Options.h"

//---------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "templateGrammar.h"
#include "galgas_cli_options.h"
#include "grammarLL1grammar.h"
#include "syntaxSLRgrammar.h"
#include "lexiqueLL1grammar.h"
#include "semanticsSLRgrammar.h"
#include "guiGrammar.h"
#include "programSLRgrammar.h"
#include "projectLL1grammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "galgas_prgm.gProgram", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*

static C_BoolCommandLineOption gOption_performIndexing ("galgas_cli_options",
                                                        "perform_indexing",
                                                        '\0',
                                                        "perform-indexing",
                                                        "Perform indexing") ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      M A I N    F O R    L I B P M                        *
//                                                                           *
//---------------------------------------------------------------------------*

int mainForLIBPM  (const int argc, const char * argv []) {
  bool verboseOptionOn = true ;
  PMSInt16 returnCode = 0 ; // No error
  {
  //--- Input/output parameters
    const char * extensions [] = {
      "gOption",
      "gLexique",
      "gSemantics",
      "gSyntax",
      "gGrammar",
      "gGui",
      "gProgram",
      "gProject",
      NULL
    } ;    
    const char * helpMessages [] = {
      "a GALGAS option source file",
      "a GALGAS lexique source file",
      "a GALGAS semantics source file",
      "a GALGAS syntax source file",
      "a GALGAS grammar source file",
      "a GALGAS GUI source file",
      "a GALGAS program source file",
      "a GALGAS project source file",
      NULL
    } ;    
    TC_UniqueArray <C_String> sourceFilesArray ;
  //--- Analyze Command Line Options
    F_Analyze_CLI_Options (argc, argv,
      #ifndef DO_NOT_GENERATE_CHECKINGS
        "version " "version GALGAS_BETA_VERSION" " [debug]",
      #else
        "version " "version GALGAS_BETA_VERSION",
      #endif
                           sourceFilesArray,
                           extensions,
                           helpMessages) ;
  //--- Build galgas io object
    C_galgas_io * galgasIOptr = NULL ;
    macroMyNew (galgasIOptr, C_galgas_io (HERE)) ;
  //--- Common lexique object
    C_Compiler * commonLexique = NULL ;
    macroMyNew (commonLexique, C_Compiler (NULL, "", "", galgasIOptr COMMA_HERE)) ;
  //--- Ask Save On Close ? (Carbon and Windows SIOUX Only)
    #ifdef SIOUX_IS_IMPLEMENTED
      SIOUXSettings.asktosaveonclose = gOption_generic_5F_cli_5F_options_options_asktosaveonclose.mValue ;
    #endif
  //--- Enable 64 bit alloc debug ? Only if compiled in 64 bit and in debug mode
    #ifndef DO_NOT_GENERATE_CHECKINGS
      #ifdef __LP64__
        if (gOption_generic_5F_cli_5F_options_enable_5F_allocation_5F_debugging.mValue) {
          enableAllocDebugFor64BitTool () ;
        }
      #endif
    #endif
    try{
      routine_before (commonLexique COMMA_HERE) ;
      verboseOptionOn = gOption_galgas_5F_cli_5F_options_verbose_5F_output.mValue ;
      for (PMSInt32 i=0 ; i<sourceFilesArray.count () ; i++) {
        const C_String fileExtension = sourceFilesArray (i COMMA_HERE).pathExtension () ;
        const GALGAS_string sfp = GALGAS_string (sourceFilesArray (i COMMA_HERE)) ;
        const GALGAS_location location = commonLexique->here () ;
        const GALGAS_lstring sourceFilePath (sfp, location) ;
        PMSInt16 r = 0 ;
        if (fileExtension == "gOption") {
          if (gOption_performIndexing.mValue) {
            cGrammar_optionLL_31_grammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__30_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "gLexique") {
          if (gOption_performIndexing.mValue) {
            cGrammar_lexiqueLL_31_grammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__31_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "gSemantics") {
          if (gOption_performIndexing.mValue) {
            cGrammar_semanticsSLRgrammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__32_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "gSyntax") {
          if (gOption_performIndexing.mValue) {
            cGrammar_syntaxSLRgrammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__33_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "gGrammar") {
          if (gOption_performIndexing.mValue) {
            cGrammar_grammarLL_31_grammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__34_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "gGui") {
          if (gOption_performIndexing.mValue) {
            cGrammar_guiGrammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__35_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "gProgram") {
          if (gOption_performIndexing.mValue) {
            cGrammar_programSLRgrammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__36_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else if (fileExtension == "gProject") {
          if (gOption_performIndexing.mValue) {
            cGrammar_projectLL_31_grammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
          }else{
            routine_programRule_5F__37_ (sourceFilePath, commonLexique COMMA_HERE) ;
          }
        }else{
          printf ("*** Error: unhandled extension for file '%s' ***\n", sourceFilesArray (i COMMA_HERE).cString (HERE)) ;
          r = 1 ;
        }
        if (r != 0) {
          returnCode = r ;
        }
      }
    //--- Error or warnings ?
      if (commonLexique->totalErrorCount () > 0) {
        returnCode = 1 ; // Error code
      }else if (commonLexique->totalWarningCount () > 0) {
        if (gOption_galgas_5F_cli_5F_options_treat_5F_warnings_5F_as_5F_error.mValue) {
          returnCode = 1 ; // Error code
          if (verboseOptionOn) {
            printf ("** Note: warnings are treated as errors. **\n") ;
          }
        }
      }
    //--- Epilogue
      routine_after (commonLexique COMMA_HERE) ;
    //--- Display error and warnings count
      if (gOption_galgas_5F_cli_5F_options_verbose_5F_output.mValue || (commonLexique->totalWarningCount () > 0) || (commonLexique->totalErrorCount () > 0)) {
        if (commonLexique->totalWarningCount () == 0) {
          printf ("No warning") ;
        }else if (commonLexique->totalWarningCount () == 1) {
          printf ("1 warning") ;
        }else{
          printf ("%u warnings", commonLexique->totalWarningCount ()) ;
        }
        printf (", ") ;
        if (commonLexique->totalErrorCount () == 0) {
          printf ("no error") ;
        }else if (commonLexique->totalErrorCount () == 1) {
          printf ("1 error") ;
        }else{
          printf ("%u errors", commonLexique->totalErrorCount ()) ;
        }
        printf (".\n") ;
      }
    }catch (const M_STD_NAMESPACE exception & e) {
      F_default_display_exception (e) ;
      returnCode = 1 ; // Error code
    }catch (...) {
      throw ;
    }
    macroDetachSharedObject (galgasIOptr) ;
    macroDetachSharedObject (commonLexique) ;
  }
  return returnCode ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                             Routine 'before'                              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_before (C_Compiler * inCompiler
                     COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_libpmVarName = GALGAS_string ("LIBPM_PATH") ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (var_libpmVarName.reader_doesEnvironmentVariableExist (SOURCE_FILE_AT_LINE (37)).operator_not (SOURCE_FILE_AT_LINE (37))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("the '").operator_concat (var_libpmVarName COMMA_SOURCE_FILE_AT_LINE (38)).operator_concat (GALGAS_string ("' environnement variable is not set; GALGAS requires it to be defined with the absolute path to the 'libpm' directory") COMMA_SOURCE_FILE_AT_LINE (39)) COMMA_SOURCE_FILE_AT_LINE (38)) ;
  }else if (test_0.isValid ()) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_libpmPosixPath = GALGAS_string::constructor_stringWithEnvironmentVariable (var_libpmVarName, inCompiler COMMA_SOURCE_FILE_AT_LINE (41)).reader_unixPathWithNativePath (SOURCE_FILE_AT_LINE (41)) ;
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_1 (var_libpmPosixPath.reader_directoryExists (SOURCE_FILE_AT_LINE (42)).operator_not (SOURCE_FILE_AT_LINE (42))) ;
    if (test_1.isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("the '").operator_concat (var_libpmVarName COMMA_SOURCE_FILE_AT_LINE (43)).operator_concat (GALGAS_string ("' environnement variable is set to '") COMMA_SOURCE_FILE_AT_LINE (44)).operator_concat (GALGAS_string::constructor_stringWithEnvironmentVariable (var_libpmVarName, inCompiler COMMA_SOURCE_FILE_AT_LINE (44)) COMMA_SOURCE_FILE_AT_LINE (44)).operator_concat (GALGAS_string ("', but this value does not designate any directory (it should designate the 'libpm' directory") COMMA_SOURCE_FILE_AT_LINE (45)) COMMA_SOURCE_FILE_AT_LINE (43)) ;
    }else if (test_1.isValid ()) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_libpmVersionFilePath = var_libpmPosixPath.operator_concat (GALGAS_string ("/version_libpm.h") COMMA_SOURCE_FILE_AT_LINE (47)) ;
      //-------- @ifInstructionForGeneration
      const GALGAS_bool test_2 (var_libpmVersionFilePath.reader_fileExists (SOURCE_FILE_AT_LINE (48)).operator_not (SOURCE_FILE_AT_LINE (48))) ;
      if (test_2.isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("the '").operator_concat (var_libpmVarName COMMA_SOURCE_FILE_AT_LINE (49)).operator_concat (GALGAS_string ("' environnement variable is set to '") COMMA_SOURCE_FILE_AT_LINE (50)).operator_concat (GALGAS_string::constructor_stringWithEnvironmentVariable (var_libpmVarName, inCompiler COMMA_SOURCE_FILE_AT_LINE (50)) COMMA_SOURCE_FILE_AT_LINE (50)).operator_concat (GALGAS_string ("', but this value does not designate a valid 'libpm' directory (it does not contain the 'version_libpm.h' file)") COMMA_SOURCE_FILE_AT_LINE (51)) COMMA_SOURCE_FILE_AT_LINE (49)) ;
      }
    }
  }
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_creationProjectName = GALGAS_string (gOption_galgas_5F_cli_5F_options_create_5F_project.reader_value ()) ;
  { //-------- @routineCallInstructionForGeneration
  routine_projectCreation (var_creationProjectName, inCompiler COMMA_SOURCE_FILE_AT_LINE (57)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_3 (GALGAS_bool (gOption_galgas_5F_cli_5F_options_printPredefinedLexicalActions.reader_value ())) ;
  if (test_3.isValidAndTrue ()) {
    { //-------- @routineCallInstructionForGeneration
    routine_printPredefinedLexicalActions (inCompiler COMMA_SOURCE_FILE_AT_LINE (60)) ;
    } //-------- @routineCallInstructionForGeneration
  }
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_4 (GALGAS_bool (gOption_galgas_5F_cli_5F_options_printPredefinedTypes.reader_value ())) ;
  if (test_4.isValidAndTrue ()) {
    { //-------- @routineCallInstructionForGeneration
    routine_printPredefinedTypes (inCompiler COMMA_SOURCE_FILE_AT_LINE (64)) ;
    } //-------- @routineCallInstructionForGeneration
  }
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_printFeature = GALGAS_string (gOption_galgas_5F_cli_5F_options_printPredefinedTypeFeature.reader_value ()) ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_5 (GALGAS_bool (kIsNotEqual, var_printFeature.objectCompare (GALGAS_string::makeEmptyString ()))) ;
  if (test_5.isValidAndTrue ()) {
    { //-------- @routineCallInstructionForGeneration
    routine_printPredefinedTypeFeature (var_printFeature, inCompiler COMMA_SOURCE_FILE_AT_LINE (69)) ;
    } //-------- @routineCallInstructionForGeneration
  }
  { //-------- @routineCallInstructionForGeneration
  routine_generatePredefinedTypeFiles (GALGAS_string (gOption_galgas_5F_cli_5F_options_generatePredefinedTypes.reader_value ()), inCompiler COMMA_SOURCE_FILE_AT_LINE (72)) ;
  } //-------- @routineCallInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'programRule_0'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_programRule_5F__30_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_parsedComponentStruct var_parsedComponentStruct = GALGAS_parsedComponentStruct::constructor_new (GALGAS_parsedSemanticsComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (82)), GALGAS_parsedLexiqueComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (83)), GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (84)), GALGAS_parsedOptionComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (85)), GALGAS_parsedGrammarComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (86)), GALGAS_parsedProgramComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (87)) COMMA_SOURCE_FILE_AT_LINE (81)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_compileOptionComponent (constinArgument_inSourceFile, function_outputDirectory (constinArgument_inSourceFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (89)), var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (89)) ;
  } //-------- @routineCallInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'programRule_1'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_programRule_5F__31_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_parsedComponentStruct var_parsedComponentStruct = GALGAS_parsedComponentStruct::constructor_new (GALGAS_parsedSemanticsComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (99)), GALGAS_parsedLexiqueComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (100)), GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (101)), GALGAS_parsedOptionComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (102)), GALGAS_parsedGrammarComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (103)), GALGAS_parsedProgramComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (104)) COMMA_SOURCE_FILE_AT_LINE (98)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_compileLexiqueComponent (constinArgument_inSourceFile, function_outputDirectory (constinArgument_inSourceFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (106)), var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (106)) ;
  } //-------- @routineCallInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'programRule_2'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_programRule_5F__32_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_parsedComponentStruct var_parsedComponentStruct = GALGAS_parsedComponentStruct::constructor_new (GALGAS_parsedSemanticsComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (116)), GALGAS_parsedLexiqueComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (117)), GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (118)), GALGAS_parsedOptionComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (119)), GALGAS_parsedGrammarComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (120)), GALGAS_parsedProgramComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (121)) COMMA_SOURCE_FILE_AT_LINE (115)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_compileSemanticsComponent (constinArgument_inSourceFile, function_outputDirectory (constinArgument_inSourceFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (123)), var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (123)) ;
  } //-------- @routineCallInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'programRule_3'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_programRule_5F__33_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_parsedComponentStruct var_parsedComponentStruct = GALGAS_parsedComponentStruct::constructor_new (GALGAS_parsedSemanticsComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (133)), GALGAS_parsedLexiqueComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (134)), GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (135)), GALGAS_parsedOptionComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (136)), GALGAS_parsedGrammarComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (137)), GALGAS_parsedProgramComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (138)) COMMA_SOURCE_FILE_AT_LINE (132)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_compileSyntaxComponent (constinArgument_inSourceFile, function_outputDirectory (constinArgument_inSourceFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (140)), var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (140)) ;
  } //-------- @routineCallInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'programRule_4'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_programRule_5F__34_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_parsedComponentStruct var_parsedComponentStruct = GALGAS_parsedComponentStruct::constructor_new (GALGAS_parsedSemanticsComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (150)), GALGAS_parsedLexiqueComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (151)), GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (152)), GALGAS_parsedOptionComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (153)), GALGAS_parsedGrammarComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (154)), GALGAS_parsedProgramComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (155)) COMMA_SOURCE_FILE_AT_LINE (149)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_compileGrammarComponent (constinArgument_inSourceFile, function_outputDirectory (constinArgument_inSourceFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (159)), constinArgument_inSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (160)), var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (157)) ;
  } //-------- @routineCallInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'programRule_5'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_programRule_5F__35_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_parsedComponentStruct var_parsedComponentStruct = GALGAS_parsedComponentStruct::constructor_new (GALGAS_parsedSemanticsComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (171)), GALGAS_parsedLexiqueComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (172)), GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (173)), GALGAS_parsedOptionComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (174)), GALGAS_parsedGrammarComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (175)), GALGAS_parsedProgramComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (176)) COMMA_SOURCE_FILE_AT_LINE (170)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_compileGuiComponent (constinArgument_inSourceFile, function_outputDirectory (constinArgument_inSourceFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (178)), var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (178)) ;
  } //-------- @routineCallInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'programRule_6'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_programRule_5F__36_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_parsedComponentStruct var_parsedComponentStruct = GALGAS_parsedComponentStruct::constructor_new (GALGAS_parsedSemanticsComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (188)), GALGAS_parsedLexiqueComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (189)), GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (190)), GALGAS_parsedOptionComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (191)), GALGAS_parsedGrammarComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (192)), GALGAS_parsedProgramComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (193)) COMMA_SOURCE_FILE_AT_LINE (187)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_compileProgramComponent (constinArgument_inSourceFile, function_outputDirectory (constinArgument_inSourceFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (195)), var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (195)) ;
  } //-------- @routineCallInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'programRule_7'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_programRule_5F__37_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_outputDirectory = function_outputDirectory (constinArgument_inSourceFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (208)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_projectComponentAST var_projectComponent ;
  { //-------- @grammarInstructionWithSourceFileForGeneration
  cGrammar_projectLL_31_grammar::_performSourceFileParsing_ (inCompiler, constinArgument_inSourceFile, var_projectComponent COMMA_SOURCE_FILE_AT_LINE (211)) ;
  } //-------- END @grammarInstructionWithSourceFileForGeneration
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (GALGAS_bool (kIsNotEqual, var_projectComponent.reader_mProjectName (SOURCE_FILE_AT_LINE (213)).reader_string (SOURCE_FILE_AT_LINE (213)).objectCompare (constinArgument_inSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (213)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (213))))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_1 (var_projectComponent.reader_mProjectName (SOURCE_FILE_AT_LINE (214)).reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the project name ('").operator_concat (var_projectComponent.reader_mProjectName (SOURCE_FILE_AT_LINE (215)).reader_string (SOURCE_FILE_AT_LINE (215)) COMMA_SOURCE_FILE_AT_LINE (215)).operator_concat (GALGAS_string ("') should be the same as the source file base name ('") COMMA_SOURCE_FILE_AT_LINE (215)).operator_concat (constinArgument_inSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (216)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (216)) COMMA_SOURCE_FILE_AT_LINE (216)).operator_concat (GALGAS_string ("')") COMMA_SOURCE_FILE_AT_LINE (216)) COMMA_SOURCE_FILE_AT_LINE (214)) ;
  }
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_targetName = var_projectComponent.reader_mTargetName (SOURCE_FILE_AT_LINE (219)).reader_string (SOURCE_FILE_AT_LINE (219)) ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_2 (GALGAS_bool (kIsEqual, var_targetName.objectCompare (GALGAS_string::makeEmptyString ()))) ;
  if (test_2.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_3 (var_projectComponent.reader_mTargetName (SOURCE_FILE_AT_LINE (221)).reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_3, GALGAS_string ("the target name should not be empty") COMMA_SOURCE_FILE_AT_LINE (221)) ;
  }
  { //-------- @routineCallInstructionForGeneration
  routine_updateTargets (constinArgument_inSourceFile, var_projectComponent.reader_mProjectName (SOURCE_FILE_AT_LINE (226)), var_targetName, var_projectComponent.reader_mGenerationFeatureList (SOURCE_FILE_AT_LINE (228)), var_projectComponent.reader_mProjectSourceList (SOURCE_FILE_AT_LINE (229)), inCompiler COMMA_SOURCE_FILE_AT_LINE (224)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_parsedComponentStruct var_parsedComponentStruct = GALGAS_parsedComponentStruct::constructor_new (GALGAS_parsedSemanticsComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (233)), GALGAS_parsedLexiqueComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (234)), GALGAS_parsedSyntaxComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (235)), GALGAS_parsedOptionComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (236)), GALGAS_parsedGrammarComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (237)), GALGAS_parsedProgramComponentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (238)) COMMA_SOURCE_FILE_AT_LINE (232)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_projectSourceList enumerator_10246 (var_projectComponent.reader_mProjectSourceList (SOURCE_FILE_AT_LINE (241)), true) ;
  //--- simple foreach instruction
  while (enumerator_10246.hasCurrentObject ()) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_extension = enumerator_10246.current_mFilePath (HERE).mAttribute_string.reader_pathExtension (SOURCE_FILE_AT_LINE (242)) ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_lstring var_fullFilePath = GALGAS_lstring::constructor_new (constinArgument_inSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (244)).operator_concat (GALGAS_string ("/") COMMA_SOURCE_FILE_AT_LINE (244)).operator_concat (enumerator_10246.current_mFilePath (HERE).reader_string (SOURCE_FILE_AT_LINE (244)) COMMA_SOURCE_FILE_AT_LINE (244)), enumerator_10246.current_mFilePath (HERE).reader_location (SOURCE_FILE_AT_LINE (245)) COMMA_SOURCE_FILE_AT_LINE (243)) ;
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_4 (GALGAS_bool (kIsNotEqual, enumerator_10246.current_mSourceKind (HERE).objectCompare (GALGAS_sourceFileKind::constructor_externSourceFile (SOURCE_FILE_AT_LINE (247))))) ;
    if (test_4.isValidAndTrue ()) {
      //-------- @messageInstructionForGeneration
      inCompiler->printMessage (GALGAS_string ("*** Compiling '").operator_concat (enumerator_10246.current_mFilePath (HERE).reader_string (SOURCE_FILE_AT_LINE (248)) COMMA_SOURCE_FILE_AT_LINE (248)).operator_concat (GALGAS_string ("'\n") COMMA_SOURCE_FILE_AT_LINE (248)) COMMA_SOURCE_FILE_AT_LINE (248)) ;
    }
    //------- @switchInstructionForGeneration
    if (enumerator_10246.current_mSourceKind (HERE).isValid ()) {
      switch (enumerator_10246.current_mSourceKind (HERE).enumValue ()) {
      case GALGAS_sourceFileKind::kNotBuilt:
        break ;
      case GALGAS_sourceFileKind::kEnum_externSourceFile: {
        } break ;
      case GALGAS_sourceFileKind::kEnum_guiSourceFile: {
        //-------- @ifInstructionForGeneration
        const GALGAS_bool test_5 (GALGAS_bool (kIsEqual, var_extension.objectCompare (GALGAS_string ("gGui")))) ;
        if (test_5.isValidAndTrue ()) {
          { //-------- @routineCallInstructionForGeneration
          routine_compileGuiComponent (var_fullFilePath, var_outputDirectory, var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (254)) ;
          } //-------- @routineCallInstructionForGeneration
        }else if (test_5.isValid ()) {
          //-------- @errorInstructionForGeneration
          GALGAS_location location_6 (enumerator_10246.current_mFilePath (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_6, GALGAS_string ("extension of a gui component should be '.gGui'.") COMMA_SOURCE_FILE_AT_LINE (256)) ;
        }
        } break ;
      case GALGAS_sourceFileKind::kEnum_lexiqueSourceFile: {
        //-------- @ifInstructionForGeneration
        const GALGAS_bool test_7 (GALGAS_bool (kIsEqual, var_extension.objectCompare (GALGAS_string ("gLexique")))) ;
        if (test_7.isValidAndTrue ()) {
          { //-------- @routineCallInstructionForGeneration
          routine_compileLexiqueComponent (var_fullFilePath, var_outputDirectory, var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (260)) ;
          } //-------- @routineCallInstructionForGeneration
        }else if (test_7.isValid ()) {
          //-------- @errorInstructionForGeneration
          GALGAS_location location_8 (enumerator_10246.current_mFilePath (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_8, GALGAS_string ("extension of a lexique component should be '.gLexique'.") COMMA_SOURCE_FILE_AT_LINE (262)) ;
        }
        } break ;
      case GALGAS_sourceFileKind::kEnum_optionSourceFile: {
        //-------- @ifInstructionForGeneration
        const GALGAS_bool test_9 (GALGAS_bool (kIsEqual, var_extension.objectCompare (GALGAS_string ("gOption")))) ;
        if (test_9.isValidAndTrue ()) {
          { //-------- @routineCallInstructionForGeneration
          routine_compileOptionComponent (var_fullFilePath, var_outputDirectory, var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (266)) ;
          } //-------- @routineCallInstructionForGeneration
        }else if (test_9.isValid ()) {
          //-------- @errorInstructionForGeneration
          GALGAS_location location_10 (enumerator_10246.current_mFilePath (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_10, GALGAS_string ("extension of an option component should be '.gOption'.") COMMA_SOURCE_FILE_AT_LINE (268)) ;
        }
        } break ;
      case GALGAS_sourceFileKind::kEnum_semanticsSourceFile: {
        //-------- @ifInstructionForGeneration
        const GALGAS_bool test_11 (GALGAS_bool (kIsEqual, var_extension.objectCompare (GALGAS_string ("gSemantics")))) ;
        if (test_11.isValidAndTrue ()) {
          { //-------- @routineCallInstructionForGeneration
          routine_compileSemanticsComponent (var_fullFilePath, var_outputDirectory, var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (272)) ;
          } //-------- @routineCallInstructionForGeneration
        }else if (test_11.isValid ()) {
          //-------- @errorInstructionForGeneration
          GALGAS_location location_12 (enumerator_10246.current_mFilePath (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_12, GALGAS_string ("extension of a semantics component should be '.gSemantics'.") COMMA_SOURCE_FILE_AT_LINE (274)) ;
        }
        } break ;
      case GALGAS_sourceFileKind::kEnum_syntaxSourceFile: {
        //-------- @ifInstructionForGeneration
        const GALGAS_bool test_13 (GALGAS_bool (kIsEqual, var_extension.objectCompare (GALGAS_string ("gSyntax")))) ;
        if (test_13.isValidAndTrue ()) {
          { //-------- @routineCallInstructionForGeneration
          routine_compileSyntaxComponent (var_fullFilePath, function_outputDirectory (constinArgument_inSourceFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (278)), var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (278)) ;
          } //-------- @routineCallInstructionForGeneration
        }else if (test_13.isValid ()) {
          //-------- @errorInstructionForGeneration
          GALGAS_location location_14 (enumerator_10246.current_mFilePath (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_14, GALGAS_string ("extension of a syntax component should be '.gSyntax'.") COMMA_SOURCE_FILE_AT_LINE (280)) ;
        }
        } break ;
      case GALGAS_sourceFileKind::kEnum_grammarSourceFile: {
        //-------- @ifInstructionForGeneration
        const GALGAS_bool test_15 (GALGAS_bool (kIsEqual, var_extension.objectCompare (GALGAS_string ("gGrammar")))) ;
        if (test_15.isValidAndTrue ()) {
          { //-------- @routineCallInstructionForGeneration
          routine_compileGrammarComponent (var_fullFilePath, function_outputDirectory (constinArgument_inSourceFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (286)), constinArgument_inSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (287)), var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (284)) ;
          } //-------- @routineCallInstructionForGeneration
        }else if (test_15.isValid ()) {
          //-------- @errorInstructionForGeneration
          GALGAS_location location_16 (enumerator_10246.current_mFilePath (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_16, GALGAS_string ("extension of a grammar component should be '.gGrammar'.") COMMA_SOURCE_FILE_AT_LINE (291)) ;
        }
        } break ;
      case GALGAS_sourceFileKind::kEnum_programSourceFile: {
        //-------- @ifInstructionForGeneration
        const GALGAS_bool test_17 (GALGAS_bool (kIsEqual, var_extension.objectCompare (GALGAS_string ("gProgram")))) ;
        if (test_17.isValidAndTrue ()) {
          { //-------- @routineCallInstructionForGeneration
          routine_compileProgramComponent (var_fullFilePath, var_outputDirectory, var_parsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (295)) ;
          } //-------- @routineCallInstructionForGeneration
        }else if (test_17.isValid ()) {
          //-------- @errorInstructionForGeneration
          GALGAS_location location_18 (enumerator_10246.current_mFilePath (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_18, GALGAS_string ("extension of a program component should be '.gProgram'.") COMMA_SOURCE_FILE_AT_LINE (297)) ;
        }
        } break ;
      }
    }
    enumerator_10246.gotoNextObject () ;
  }
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_19 (GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (inCompiler COMMA_SOURCE_FILE_AT_LINE (302)).objectCompare (GALGAS_uint ((PMUInt32) 0U)))) ;
  if (test_19.isValidAndTrue ()) {
    //-------- @messageInstructionForGeneration
    inCompiler->printMessage (GALGAS_string ("*** Perform global checkings\n") COMMA_SOURCE_FILE_AT_LINE (303)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_performProjectGlobalCheckings (var_parsedComponentStruct, var_projectComponent.reader_mEndOfSourceFile (SOURCE_FILE_AT_LINE (304)), inCompiler COMMA_SOURCE_FILE_AT_LINE (304)) ;
    } //-------- @routineCallInstructionForGeneration
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                              Routine 'after'                              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_after (C_Compiler * /* inCompiler */
                    COMMA_UNUSED_LOCATION_ARGS) {
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


