//---------------------------------------------------------------------------*
//                                                                           *
//                   File 'parameterArgumentBuilder.cpp'                     *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                       june 1st, 2007, at 17h14'40"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "parameterArgumentBuilder.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "parameterArgumentBuilder.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'formal_parameter_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_formalParameters parameterArgumentBuilder::
parameterArgumentBuilder::
pr_formal_parameter_list_parameterArgumentBuilder_44_6_ (galgas_scanner & _inLexique) {
  GGS_formalParameterList  var_cas_mFormalParameterList ;
  var_cas_mFormalParameterList = GGS_formalParameterList::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_parameterArgumentBuilder_0 (_inLexique)) {
        case 2 : {
          var_cas_mFormalParameterList._addModel (nt_formal_parameter_ (_inLexique)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_formalParameters _entityInstance = GGS_formalParameters::constructor_new (_inLexique, var_cas_mFormalParameterList COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'formal_parameter'            *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_formalParameter parameterArgumentBuilder::
parameterArgumentBuilder::
pr_formal_parameter_parameterArgumentBuilder_53_6_ (galgas_scanner & _inLexique) {
  GGS_formalArgumentPassingMode var_cas_mFormalParameterPassingMode ;
  GGS_lstring  var_cas_mFormalParameterTypeName ;
  GGS_lstring  var_cas_mFormalParameterName ;
  GGS_bool var_cas_mIsUnused ;
  switch (select_parameterArgumentBuilder_1 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
      var_cas_mFormalParameterPassingMode = GGS_formalArgumentPassingMode::constructor_argumentIn (_inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
      var_cas_mFormalParameterPassingMode = GGS_formalArgumentPassingMode::constructor_argumentConstantIn (_inLexique COMMA_HERE) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_21) COMMA_HERE) ;
      var_cas_mFormalParameterPassingMode = GGS_formalArgumentPassingMode::constructor_argumentInOut (_inLexique COMMA_HERE) ;
      } break ;
    case 4 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
      var_cas_mFormalParameterPassingMode = GGS_formalArgumentPassingMode::constructor_argumentOut (_inLexique COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique._assignFromAttribute_tokenString (var_cas_mFormalParameterTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_parameterArgumentBuilder_2 (_inLexique)) {
    case 1 : {
      var_cas_mIsUnused = GGS_bool (true, false) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
      var_cas_mIsUnused = GGS_bool (true, true) ;
      } break ;
    default :
      break ;
  }
  _inLexique._assignFromAttribute_tokenString (var_cas_mFormalParameterName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_formalParameter _entityInstance = GGS_formalParameter::constructor_new (_inLexique, var_cas_mFormalParameterPassingMode, var_cas_mFormalParameterTypeName, var_cas_mFormalParameterName, var_cas_mIsUnused COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'actual_parameter'            *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_outputActualParameter parameterArgumentBuilder::
parameterArgumentBuilder::
pr_actual_parameter_parameterArgumentBuilder_83_6_ (galgas_scanner & _inLexique) {
  GGS_semanticExpression  var_cas_mOutputActualParameterExpression ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
  var_cas_mOutputActualParameterExpression = nt_expression_ (_inLexique) ;
  GGS_outputActualParameter _entityInstance = GGS_outputActualParameter::constructor_new (_inLexique, var_cas_mOutputActualParameterExpression COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'actual_parameter'            *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_outputInputActualParameter parameterArgumentBuilder::
parameterArgumentBuilder::
pr_actual_parameter_parameterArgumentBuilder_90_6_ (galgas_scanner & _inLexique) {
  GGS_lstring  var_cas_mOutputInputActualParameterName ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_3F) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mOutputInputActualParameterName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_outputInputActualParameter _entityInstance = GGS_outputInputActualParameter::constructor_new (_inLexique, var_cas_mOutputInputActualParameterName COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'actual_parameter'            *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_inputActualParameter parameterArgumentBuilder::
parameterArgumentBuilder::
pr_actual_parameter_parameterArgumentBuilder_97_6_ (galgas_scanner & _inLexique) {
  GGS_lstring  var_cas_mInputActualParameterName ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mInputActualParameterName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_inputActualParameter _entityInstance = GGS_inputActualParameter::constructor_new (_inLexique, var_cas_mInputActualParameterName COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'actual_parameter'            *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_inputJokerActualParameter parameterArgumentBuilder::
parameterArgumentBuilder::
pr_actual_parameter_parameterArgumentBuilder_104_6_ (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
  GGS_inputJokerActualParameter _entityInstance = GGS_inputJokerActualParameter::constructor_new (_inLexique COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'actual_parameter_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_actualParameters parameterArgumentBuilder::
parameterArgumentBuilder::
pr_actual_parameter_list_parameterArgumentBuilder_111_6_ (galgas_scanner & _inLexique) {
  GGS_actualParameterList  var_cas_mActualParameter ;
  var_cas_mActualParameter = GGS_actualParameterList::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_parameterArgumentBuilder_3 (_inLexique)) {
        case 2 : {
          var_cas_mActualParameter._addModel (nt_actual_parameter_ (_inLexique)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_actualParameters _entityInstance = GGS_actualParameters::constructor_new (_inLexique, var_cas_mActualParameter COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*

