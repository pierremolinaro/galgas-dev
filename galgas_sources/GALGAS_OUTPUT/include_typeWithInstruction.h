//---------------------------------------------------------------------------*
//                                                                           *
//                   File 'include_typeWithInstruction.h'                    *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       may 31th, 2009, at 22h20'55"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_typeWithInstruction'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_typeWithInstruction : public cPtr_typeInstruction {
  private : typedef cPtr_typeInstruction inherited ;
//--- START OF USER ZONE 2

  public : virtual void
  generateInstruction (AC_OutputStream & inCppFile,
                       const C_String & inTargetFileName,
                       PMSInt32 & ioPrototypeIndex,
                       const bool inGenerateDebug,
                       const bool inGenerateSemanticInstructions) const ;

  public : virtual bool
  isLexiqueFormalArgumentUsed (const bool inGenerateSemanticInstructions) const ;

  public : virtual bool
  formalArgumentIsUsed (const GGS_typeCplusPlusName & inArgumentCppName,
                        const bool inGenerateSemanticInstructions) const ;

  public : virtual bool
  formalCurrentObjectArgumentIsUsed (void) const ;


//--- END OF USER ZONE 2

//--- Constructor
  public : cPtr_typeWithInstruction (const GGS_string& ,
                                const GGS_typeCplusPlusName & ,
                                const GGS_lstringlist & ,
                                const GGS_string& ,
                                const GGS_typeExpression & ,
                                const GGS_typeInstructionList & ,
                                const GGS_typeInstructionList & ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_typeWithInstruction (void) {}
  #endif

//--- Attributes
  public : GGS_string mMapTypeName ;
  public : GGS_typeCplusPlusName  mAccessedVariableCppName ;
  public : GGS_lstringlist  mStructAttributeList ;
  public : GGS_string mErrorMessageName ;
  public : GGS_typeExpression  mKeyExpression ;
  public : GGS_typeInstructionList  mDoBranchInstructionList ;
  public : GGS_typeInstructionList  mElseBranchInstructionList ;
  public : GGS_location  mInstructionLocation ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*

