//---------------------------------------------------------------------------*
//                                                                           *
//                         File 'guiCompilation.h'                           *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                    november 11th, 2010, at 12h16'29"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef guiCompilation_DEFINED
#define guiCompilation_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

// Include imported semantics
#include "allASTTypes.h"
#include "lexiqueCompilation.h"
#include "optionCompilation.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_guiCommandLineOptionList ;
class GGS_extensionMap ;
class GGS_nibAndClassList ;
class GGS_textMacroList ;
class GGS_importedLexiqueList ;
class GGS_guiAnalysisContext ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@guiCommandLineOptionList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_guiCommandLineOptionList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_guiCommandLineOptionList ;

//---------------------------------------------------------------------------*

class GGS_guiCommandLineOptionList : public AC_GGS_list {
  public : typedef elementOf_GGS_guiCommandLineOptionList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_guiCommandLineOptionList constructor_emptyList (void) ;
  public : static GGS_guiCommandLineOptionList constructor_listWithValue (const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_char& argument_2,
                                const GGS_string& argument_3,
                                const GGS_string& argument_4) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_guiCommandLineOptionList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_guiCommandLineOptionList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_guiCommandLineOptionList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_guiCommandLineOptionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_string& _out_0,
                              GGS_string& _out_1,
                              GGS_char& _out_2,
                              GGS_string& _out_3,
                              GGS_string& _out_4
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_string& _out_0,
                             GGS_string& _out_1,
                             GGS_char& _out_2,
                             GGS_string& _out_3,
                             GGS_string& _out_4
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_string& _out_0,
                                GGS_string& _out_1,
                                GGS_char& _out_2,
                                GGS_string& _out_3,
                                GGS_string& _out_4
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_string& _out_0,
                                 GGS_string& _out_1,
                                 GGS_char& _out_2,
                                 GGS_string& _out_3,
                                 GGS_string& _out_4
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_guiCommandLineOptionList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_char& argument_2,
                                const GGS_string& argument_3,
                                const GGS_string& argument_4) ;
//--- Handling '.' GALGAS operator
  public : GGS_guiCommandLineOptionList operator_concat (const GGS_guiCommandLineOptionList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_char& argument_2,
                                const GGS_string& argument_3,
                                const GGS_string& argument_4
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_char& argument_2,
                                const GGS_string& argument_3,
                                const GGS_string& argument_4
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_char& argument_2,
                                const GGS_string& argument_3,
                                const GGS_string& argument_4
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_string
  reader_mOptionComponentAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_string
  reader_mOptionIdentifierAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_char
  reader_mOptionCharAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_string
  reader_mOptionStringAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_string
  reader_mCommentAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMOptionComponentAtIndex (C_CompilerEx & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMOptionIdentifierAtIndex (C_CompilerEx & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMOptionCharAtIndex (C_CompilerEx & inLexique,
                              const GGS_char & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMOptionStringAtIndex (C_CompilerEx & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMCommentAtIndex (C_CompilerEx & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_guiCommandLineOptionList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_guiCommandLineOptionList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_string  & _mOptionComponent (LOCATION_ARGS) const ;
    public : /* const */ GGS_string  & _mOptionIdentifier (LOCATION_ARGS) const ;
    public : /* const */ GGS_char  & _mOptionChar (LOCATION_ARGS) const ;
    public : /* const */ GGS_string  & _mOptionString (LOCATION_ARGS) const ;
    public : /* const */ GGS_string  & _mComment (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@extensionMap'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_extensionMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_extensionMap ;

//---------------------------------------------------------------------------*

class GGS_extensionMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_extensionMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_extensionMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_extensionMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_extensionMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_extensionMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_extensionMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_extensionMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_extensionMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_string& inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_string&  inParameter0 COMMA_LOCATION_ARGS) ;

//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_string& inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_string& outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_extensionMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_extensionMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_extensionMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_extensionMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_extensionMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_string  & _mLexiqueName (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         list '@nibAndClassList'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_nibAndClassList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_nibAndClassList ;

//---------------------------------------------------------------------------*

class GGS_nibAndClassList : public AC_GGS_list {
  public : typedef elementOf_GGS_nibAndClassList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_nibAndClassList constructor_emptyList (void) ;
  public : static GGS_nibAndClassList constructor_listWithValue (const GGS_string& argument_0,
                                const GGS_string& argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_nibAndClassList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_nibAndClassList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_nibAndClassList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_nibAndClassList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_string& _out_0,
                              GGS_string& _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_string& _out_0,
                             GGS_string& _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_string& _out_0,
                                GGS_string& _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_string& _out_0,
                                 GGS_string& _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_nibAndClassList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_string& argument_0,
                                const GGS_string& argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_nibAndClassList operator_concat (const GGS_nibAndClassList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_string& argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_string& argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_string& argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_string
  reader_mNibNameAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_string
  reader_mClassNameAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMNibNameAtIndex (C_CompilerEx & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMClassNameAtIndex (C_CompilerEx & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_nibAndClassList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_nibAndClassList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_string  & _mNibName (LOCATION_ARGS) const ;
    public : /* const */ GGS_string  & _mClassName (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@textMacroList'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_textMacroList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_textMacroList ;

//---------------------------------------------------------------------------*

class GGS_textMacroList : public AC_GGS_list {
  public : typedef elementOf_GGS_textMacroList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_textMacroList constructor_emptyList (void) ;
  public : static GGS_textMacroList constructor_listWithValue (const GGS_string& argument_0,
                                const GGS_string& argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_textMacroList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_textMacroList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_textMacroList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_textMacroList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_string& _out_0,
                              GGS_string& _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_string& _out_0,
                             GGS_string& _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_string& _out_0,
                                GGS_string& _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_string& _out_0,
                                 GGS_string& _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_textMacroList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_string& argument_0,
                                const GGS_string& argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_textMacroList operator_concat (const GGS_textMacroList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_string& argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_string& argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_string& argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_string
  reader_mKeyAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_string
  reader_mContentsAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMKeyAtIndex (C_CompilerEx & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMContentsAtIndex (C_CompilerEx & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_textMacroList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_textMacroList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_string  & _mKey (LOCATION_ARGS) const ;
    public : /* const */ GGS_string  & _mContents (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@importedLexiqueList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_importedLexiqueList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_importedLexiqueList ;

//---------------------------------------------------------------------------*

class GGS_importedLexiqueList : public AC_GGS_list {
  public : typedef elementOf_GGS_importedLexiqueList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_importedLexiqueList constructor_emptyList (void) ;
  public : static GGS_importedLexiqueList constructor_listWithValue (const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_string& argument_2,
                                const GGS_textMacroList & argument_3,
                                const GGS_guiLabelListAST & argument_4) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_importedLexiqueList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_importedLexiqueList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_importedLexiqueList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_importedLexiqueList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_string& _out_0,
                              GGS_string& _out_1,
                              GGS_string& _out_2,
                              GGS_textMacroList & _out_3,
                              GGS_guiLabelListAST & _out_4
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_string& _out_0,
                             GGS_string& _out_1,
                             GGS_string& _out_2,
                             GGS_textMacroList & _out_3,
                             GGS_guiLabelListAST & _out_4
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_string& _out_0,
                                GGS_string& _out_1,
                                GGS_string& _out_2,
                                GGS_textMacroList & _out_3,
                                GGS_guiLabelListAST & _out_4
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_string& _out_0,
                                 GGS_string& _out_1,
                                 GGS_string& _out_2,
                                 GGS_textMacroList & _out_3,
                                 GGS_guiLabelListAST & _out_4
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_importedLexiqueList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_string& argument_2,
                                const GGS_textMacroList & argument_3,
                                const GGS_guiLabelListAST & argument_4) ;
//--- Handling '.' GALGAS operator
  public : GGS_importedLexiqueList operator_concat (const GGS_importedLexiqueList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_string& argument_2,
                                const GGS_textMacroList & argument_3,
                                const GGS_guiLabelListAST & argument_4
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_string& argument_2,
                                const GGS_textMacroList & argument_3,
                                const GGS_guiLabelListAST & argument_4
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_string& argument_2,
                                const GGS_textMacroList & argument_3,
                                const GGS_guiLabelListAST & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_string
  reader_mLexiqueClassNameAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_string
  reader_mBlockCommentAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_string
  reader_mTitleAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_textMacroList 
  reader_mTextMacroListAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_guiLabelListAST 
  reader_mLabelsAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMLexiqueClassNameAtIndex (C_CompilerEx & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMBlockCommentAtIndex (C_CompilerEx & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMTitleAtIndex (C_CompilerEx & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMTextMacroListAtIndex (C_CompilerEx & inLexique,
                              const GGS_textMacroList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMLabelsAtIndex (C_CompilerEx & inLexique,
                              const GGS_guiLabelListAST  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_importedLexiqueList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_importedLexiqueList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_string  & _mLexiqueClassName (LOCATION_ARGS) const ;
    public : /* const */ GGS_string  & _mBlockComment (LOCATION_ARGS) const ;
    public : /* const */ GGS_string  & _mTitle (LOCATION_ARGS) const ;
    public : /* const */ GGS_textMacroList   & _mTextMacroList (LOCATION_ARGS) const ;
    public : /* const */ GGS_guiLabelListAST   & _mLabels (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'compileGuiComponent'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileGuiComponent (C_CompilerEx &,
                                const GGS_lstring  ,
                                const GGS_string ,
                                GGS_parsedComponentStruct & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@guiCommandLineOptionList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_guiCommandLineOptionList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_string mOptionComponent ;
  public : GGS_string mOptionIdentifier ;
  public : GGS_char mOptionChar ;
  public : GGS_string mOptionString ;
  public : GGS_string mComment ;
//--- Constructor
  public : elementOf_GGS_guiCommandLineOptionList (const GGS_string& ,
                                const GGS_string& ,
                                const GGS_char& ,
                                const GGS_string& ,
                                const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_guiCommandLineOptionList * nextObject (void) const { return (elementOf_GGS_guiCommandLineOptionList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_guiCommandLineOptionList * previousObject (void) const { return (elementOf_GGS_guiCommandLineOptionList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_guiCommandLineOptionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@extensionMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_extensionMap {
  public : GGS_string mLexiqueName ;

  public : e_extensionMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_extensionMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_extensionMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_extensionMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_extensionMap * nextObject (void) const { return (elementOf_GGS_extensionMap *) mNextItem ; }
  public : inline elementOf_GGS_extensionMap * infObject (void) const { return (elementOf_GGS_extensionMap *) mInfPtr ; }
  public : inline elementOf_GGS_extensionMap * supObject (void) const { return (elementOf_GGS_extensionMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_extensionMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@nibAndClassList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_nibAndClassList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_string mNibName ;
  public : GGS_string mClassName ;
//--- Constructor
  public : elementOf_GGS_nibAndClassList (const GGS_string& ,
                                const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_nibAndClassList * nextObject (void) const { return (elementOf_GGS_nibAndClassList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_nibAndClassList * previousObject (void) const { return (elementOf_GGS_nibAndClassList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_nibAndClassList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@textMacroList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_textMacroList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_string mKey ;
  public : GGS_string mContents ;
//--- Constructor
  public : elementOf_GGS_textMacroList (const GGS_string& ,
                                const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_textMacroList * nextObject (void) const { return (elementOf_GGS_textMacroList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_textMacroList * previousObject (void) const { return (elementOf_GGS_textMacroList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_textMacroList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@importedLexiqueList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_importedLexiqueList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_string mLexiqueClassName ;
  public : GGS_string mBlockComment ;
  public : GGS_string mTitle ;
  public : GGS_textMacroList  mTextMacroList ;
  public : GGS_guiLabelListAST  mLabels ;
//--- Constructor
  public : elementOf_GGS_importedLexiqueList (const GGS_string& ,
                                const GGS_string& ,
                                const GGS_string& ,
                                const GGS_textMacroList & ,
                                const GGS_guiLabelListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_importedLexiqueList * nextObject (void) const { return (elementOf_GGS_importedLexiqueList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_importedLexiqueList * previousObject (void) const { return (elementOf_GGS_importedLexiqueList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_importedLexiqueList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Declarations for 'guiAnalysisContext' struct                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_guiAnalysisContext ;

//---------------------------------------------------------------------------*

class GGS_guiAnalysisContext : public GGS__root {
//--- Default constructor
  public : GGS_guiAnalysisContext (void) ;

//--- Virtual destructor
  public : virtual ~GGS_guiAnalysisContext (void) ;

//--- Handle 'drop' instruction
  public : void drop (void) ;

//--- Method 'isBuilt'
  public : bool isBuilt (void) const ;

//--- Support for method call handling in GALGAS
  public : inline const GGS_guiAnalysisContext * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
  public : inline GGS_guiAnalysisContext * operator () (UNUSED_LOCATION_ARGS) { return this ; }

//--- Comparison
  public : GGS_bool operator_isEqual (const GGS_guiAnalysisContext & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_guiAnalysisContext & inOperand) const ;

//--- Reader 'description'
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_guiAnalysisContext castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Galgas 'new' destructor
  public : static GGS_guiAnalysisContext constructor_new (const GGS_stringlist & argument_0,
                 const GGS_guiCommandLineOptionList & argument_1,
                 const GGS_guiCommandLineOptionList & argument_2,
                 const GGS_guiCommandLineOptionList & argument_3,
                 const GGS_nibAndClassList & argument_4,
                 const GGS_extensionMap & argument_5,
                 const GGS_importedLexiqueList & argument_6) ;

//--- Readers
  public : inline GGS_stringlist 
  reader_mImportedOptionComponentList (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mImportedOptionComponentList ;
  }

  public : inline GGS_guiCommandLineOptionList 
  reader_mBoolOptionList (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mBoolOptionList ;
  }

  public : inline GGS_guiCommandLineOptionList 
  reader_mUIntOptionList (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mUIntOptionList ;
  }

  public : inline GGS_guiCommandLineOptionList 
  reader_mStringOptionList (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mStringOptionList ;
  }

  public : inline GGS_nibAndClassList 
  reader_mNibAndClassList (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mNibAndClassList ;
  }

  public : inline GGS_extensionMap 
  reader_mExtensionMap (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mExtensionMap ;
  }

  public : inline GGS_importedLexiqueList 
  reader_mWithLexiqueList (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mWithLexiqueList ;
  }

//--- Attributes
  public : GGS_stringlist  mImportedOptionComponentList ;
  public : GGS_guiCommandLineOptionList  mBoolOptionList ;
  public : GGS_guiCommandLineOptionList  mUIntOptionList ;
  public : GGS_guiCommandLineOptionList  mStringOptionList ;
  public : GGS_nibAndClassList  mNibAndClassList ;
  public : GGS_extensionMap  mExtensionMap ;
  public : GGS_importedLexiqueList  mWithLexiqueList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Declarations for 'guiGenerationTemplates' wrapper              *
//                                                                           *
//---------------------------------------------------------------------------*

extern const cDirectoryWrapperEx gWrapperDirectory_0_guiGenerationTemplates ;

//---------------------------------------------------------------------------*
//                                                                           *
//  'gui_implementation' template of 'guiGenerationTemplates' filewrapper    *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_guiGenerationTemplates_gui_implementation (C_CompilerEx & inLexique,
                                const GGS_guiAnalysisContext& var_cas_GUI_CONTEXT) ;

//---------------------------------------------------------------------------*

#endif
