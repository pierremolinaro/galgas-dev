//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'lexiqueModelBuilder.cpp'                       *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     october 12th, 2009, at 21h24'40"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "lexiqueModelBuilder.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "lexiqueModelBuilder.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//    Implementation of production rule 'lexique_component_start_symbol'     *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexique_component_start_symbol_lexiqueModelBuilder_73_37_ (galgas_scanner & inLexique,
                                GGS_lexiqueComponentRoot  &var_cas_outLexiqueComponentRoot) {
  GGS_lstring  var_cas_lexiqueComponentName ;
  GGS_bool var_cas_isTemplate ;
  GGS_metamodelTemplateDelimitorList  var_cas_templateDelimitorList = GGS_metamodelTemplateDelimitorList ::constructor_emptyList () ;
  GGS_templateReplacementList  var_cas_templateReplacementList = GGS_templateReplacementList ::constructor_emptyList () ;
  GGS_lexicalAttributeList  var_cas_lexicalAttributeList = GGS_lexicalAttributeList ::constructor_emptyList () ;
  GGS_lexicalStyleList  var_cas_lexicalStyleList = GGS_lexicalStyleList ::constructor_emptyList () ;
  GGS_terminalDeclarationList  var_cas_terminalDeclarationList = GGS_terminalDeclarationList ::constructor_emptyList () ;
  GGS_lexicalMessageDeclarationList  var_cas_lexicalMessageDeclarationList = GGS_lexicalMessageDeclarationList ::constructor_emptyList () ;
  GGS_lexicalListDeclarationList  var_cas_lexicalListDeclarationList = GGS_lexicalListDeclarationList ::constructor_emptyList () ;
  GGS_lexicalRuleList  var_cas_lexicalRuleList = GGS_lexicalRuleList ::constructor_emptyList () ;
  GGS_externRoutineList  var_cas_externRoutineList = GGS_externRoutineList ::constructor_emptyList () ;
  GGS_externFunctionList  var_cas_externFunctionList = GGS_externFunctionList ::constructor_emptyList () ;
  switch (select_lexiqueModelBuilder_0 (inLexique)) {
    case 1 : {
      var_cas_isTemplate = GGS_bool (true) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_template) COMMA_HERE) ;
      } break ;
    case 2 : {
      var_cas_isTemplate = GGS_bool (false) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_lexique) COMMA_HERE) ;
  inLexique.assignFromAttribute_tokenString (var_cas_lexiqueComponentName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
  { bool syntaxRepeat_1 = true ;
    while (syntaxRepeat_1) {
      switch (select_repeat_lexiqueModelBuilder_1 (inLexique)) {
        case 2 : {
          nt_extern_routine_or_function_declaration_ (inLexique, var_cas_externRoutineList, var_cas_externFunctionList) ;
          } break ;
        case 3 : {
          nt_template_delimitor_ (inLexique, var_cas_templateDelimitorList) ;
          } break ;
        case 4 : {
          nt_template_replacement_ (inLexique, var_cas_templateReplacementList) ;
          } break ;
        case 5 : {
          nt_lexical_attribute_declaration_ (inLexique, var_cas_lexicalAttributeList) ;
          } break ;
        case 6 : {
          nt_style_declaration_ (inLexique, var_cas_lexicalStyleList) ;
          } break ;
        case 7 : {
          nt_terminal_declaration_ (inLexique, var_cas_terminalDeclarationList) ;
          } break ;
        case 8 : {
          nt_lexical_list_declaration_ (inLexique, var_cas_lexicalListDeclarationList) ;
          } break ;
        case 9 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_rule) COMMA_HERE) ;
          switch (select_lexiqueModelBuilder_2 (inLexique)) {
            case 1 : {
              nt_lexical_explicit_rule_ (inLexique, var_cas_lexicalRuleList) ;
              } break ;
            case 2 : {
              nt_lexical_implicit_rule_ (inLexique, var_cas_lexicalRuleList) ;
              } break ;
            default :
              break ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
          } break ;
        case 10 : {
          nt_lexical_message_declaration_ (inLexique, var_cas_lexicalMessageDeclarationList) ;
          } break ;
        default :
          syntaxRepeat_1 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_lexique) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outLexiqueComponentRoot = GGS_lexiqueComponentRoot ::constructor_new (inLexique, var_cas_lexiqueComponentName, var_cas_isTemplate, var_cas_templateDelimitorList, var_cas_templateReplacementList, var_cas_lexicalAttributeList, var_cas_lexicalStyleList, var_cas_terminalDeclarationList, var_cas_lexicalMessageDeclarationList, var_cas_lexicalListDeclarationList, var_cas_lexicalRuleList, var_cas_externRoutineList, var_cas_externFunctionList COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'template_delimitor'           *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_template_delimitor_lexiqueModelBuilder_144_25_ (galgas_scanner & inLexique,
                                GGS_metamodelTemplateDelimitorList  &var_cas_ioTemplateDelimitorList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_template) COMMA_HERE) ;
  GGS_lstring  var_cas_startString ;
  inLexique.assignFromAttribute_tokenString (var_cas_startString) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
  GGS_lstringlist  var_cas_optionList = GGS_lstringlist ::constructor_emptyList () ;
  switch (select_lexiqueModelBuilder_3 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_feature) COMMA_HERE) ;
      { bool syntaxRepeat_4 = true ;
        while (syntaxRepeat_4) {
            GGS_lstring  var_cas_optionName ;
            inLexique.assignFromAttribute_tokenString (var_cas_optionName) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            var_cas_optionList.addAssign_operation (var_cas_optionName) ;
          switch (select_repeat_lexiqueModelBuilder_4 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_4 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E__2E__2E_) COMMA_HERE) ;
  GGS_lstring  var_cas_endString ;
  inLexique.assignFromAttribute_tokenString (var_cas_endString) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_ioTemplateDelimitorList.addAssign_operation (var_cas_startString, var_cas_optionList, var_cas_endString) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'template_replacement'          *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_template_replacement_lexiqueModelBuilder_168_27_ (galgas_scanner & inLexique,
                                GGS_templateReplacementList  &var_cas_ioTemplateReplacement) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_replace) COMMA_HERE) ;
  GGS_lstring  var_cas_matchString ;
  inLexique.assignFromAttribute_tokenString (var_cas_matchString) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
  GGS_lstring  var_cas_replacementString ;
  GGS_lstring  var_cas_replacementFunction ;
  switch (select_lexiqueModelBuilder_5 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E__2E__2E_) COMMA_HERE) ;
      inLexique.assignFromAttribute_tokenString (var_cas_replacementString) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
      inLexique.assignFromAttribute_tokenString (var_cas_replacementFunction) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D__3E_) COMMA_HERE) ;
      inLexique.assignFromAttribute_tokenString (var_cas_replacementString) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
      var_cas_replacementFunction = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_ioTemplateReplacement.addAssign_operation (var_cas_matchString, var_cas_replacementString, var_cas_replacementFunction) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of production rule 'lexical_message_declaration'       *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_message_declaration_lexiqueModelBuilder_189_34_ (galgas_scanner & inLexique,
                                GGS_lexicalMessageDeclarationList  &var_cas_ioLexicalMessageDeclarationList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  GGS_lstring  var_cas_messageName ;
  inLexique.assignFromAttribute_tokenString (var_cas_messageName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
  GGS_lstring  var_cas_messageValue ;
  inLexique.assignFromAttribute_tokenString (var_cas_messageValue) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_ioLexicalMessageDeclarationList.addAssign_operation (var_cas_messageName, var_cas_messageValue) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'lexical_implicit_rule'          *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_implicit_rule_lexiqueModelBuilder_204_28_ (galgas_scanner & inLexique,
                                GGS_lexicalRuleList  &var_cas_ioLexicalImplicitRuleList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  GGS_lstring  var_cas_listName ;
  inLexique.assignFromAttribute_tokenString (var_cas_listName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  var_cas_ioLexicalImplicitRuleList.addAssign_operation (GGS_lexicalImplicitRule ::constructor_new (inLexique, var_cas_listName COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'lexical_explicit_rule'          *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_explicit_rule_lexiqueModelBuilder_213_28_ (galgas_scanner & inLexique,
                                GGS_lexicalRuleList  &var_cas_ioLexicalExplicitRuleList) {
  GGS_lexicalExpression  var_cas_lexicalRuleExpression ;
  nt_lexical_expression_ (inLexique, var_cas_lexicalRuleExpression) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
  GGS_lexicalInstructionList  var_cas_instructionList = GGS_lexicalInstructionList ::constructor_emptyList () ;
  { bool syntaxRepeat_6 = true ;
    while (syntaxRepeat_6) {
      switch (select_repeat_lexiqueModelBuilder_6 (inLexique)) {
        case 2 : {
          nt_lexical_instruction_ (inLexique, var_cas_instructionList) ;
          } break ;
        default :
          syntaxRepeat_6 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_rule) COMMA_HERE) ;
  var_cas_ioLexicalExplicitRuleList.addAssign_operation (GGS_lexicalExplicitRule ::constructor_new (inLexique, var_cas_lexicalRuleExpression, var_cas_instructionList COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'lexical_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_instruction_lexiqueModelBuilder_229_26_ (galgas_scanner & inLexique,
                                GGS_lexicalInstructionList  &var_cas_ioInstructionList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_send) COMMA_HERE) ;
  GGS_lexicalInstruction  var_cas_instruction ;
  nt_lexical_send_instruction_ (inLexique, var_cas_instruction) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_instruction) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'lexical_send_instruction'        *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_send_instruction_lexiqueModelBuilder_239_31_ (galgas_scanner & inLexique,
                                GGS_lexicalInstruction  &var_cas_outInstruction) {
  GGS_lstring  var_cas_sentTerminal ;
  inLexique.assignFromAttribute_tokenString (var_cas_sentTerminal) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_terminal) COMMA_HERE) ;
  var_cas_outInstruction = GGS_lexicalSimpleSendInstruction ::constructor_new (inLexique, var_cas_sentTerminal COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'lexical_send_instruction'        *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_send_instruction_lexiqueModelBuilder_247_31_ (galgas_scanner & inLexique,
                                GGS_lexicalInstruction  &var_cas_outInstruction) {
  GGS_lexicalSendSearchList  var_cas_lexicalSendSearchList = GGS_lexicalSendSearchList ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
  { bool syntaxRepeat_7 = true ;
    while (syntaxRepeat_7) {
        GGS_lstring  var_cas_attributeName ;
        inLexique.assignFromAttribute_tokenString (var_cas_attributeName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
        GGS_lstring  var_cas_searchListName ;
        inLexique.assignFromAttribute_tokenString (var_cas_searchListName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        var_cas_lexicalSendSearchList.addAssign_operation (var_cas_attributeName, var_cas_searchListName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_default) COMMA_HERE) ;
      switch (select_repeat_lexiqueModelBuilder_7 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_7 = false ;
          break ;
      }
    }
  }
  GGS_lexicalSendDefaultAction  var_cas_lexicalSendDefaultAction ;
  switch (select_lexiqueModelBuilder_8 (inLexique)) {
    case 1 : {
      GGS_lstring  var_cas_defaultSentTerminal ;
      inLexique.assignFromAttribute_tokenString (var_cas_defaultSentTerminal) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_terminal) COMMA_HERE) ;
      var_cas_lexicalSendDefaultAction = GGS_lexicalSendTerminalByDefault ::constructor_new (inLexique, var_cas_defaultSentTerminal COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
      GGS_lstring  var_cas_defaultErrorMessageName ;
      inLexique.assignFromAttribute_tokenString (var_cas_defaultErrorMessageName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      var_cas_lexicalSendDefaultAction = GGS_lexicalErrorByDefault ::constructor_new (inLexique, var_cas_defaultErrorMessageName COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  var_cas_outInstruction = GGS_lexicalStructuredSendInstruction ::constructor_new (inLexique, var_cas_lexicalSendSearchList, var_cas_lexicalSendDefaultAction COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'lexical_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_instruction_lexiqueModelBuilder_280_26_ (galgas_scanner & inLexique,
                                GGS_lexicalInstructionList  &var_cas_ioInstructionList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_repeat) COMMA_HERE) ;
  GGS_lexicalInstructionList  var_cas_repeatedInstructionList = GGS_lexicalInstructionList ::constructor_emptyList () ;
  { bool syntaxRepeat_9 = true ;
    while (syntaxRepeat_9) {
      switch (select_repeat_lexiqueModelBuilder_9 (inLexique)) {
        case 2 : {
          nt_lexical_instruction_ (inLexique, var_cas_repeatedInstructionList) ;
          } break ;
        default :
          syntaxRepeat_9 = false ;
          break ;
      }
    }
  }
  GGS_lexicalWhileBranchList  var_cas_lexicalWhileBranchList = GGS_lexicalWhileBranchList ::constructor_emptyList () ;
  { bool syntaxRepeat_10 = true ;
    while (syntaxRepeat_10) {
        nt_repeat_while_branch_ (inLexique, var_cas_lexicalWhileBranchList) ;
      switch (select_repeat_lexiqueModelBuilder_10 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_10 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_repeat) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  GGS_lexicalInstruction  var_cas_i = GGS_lexicalRepeatInstruction ::constructor_new (inLexique, var_cas_repeatedInstructionList, var_cas_lexicalWhileBranchList COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_i) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'repeat_while_branch'           *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_repeat_while_branch_lexiqueModelBuilder_304_26_ (galgas_scanner & inLexique,
                                GGS_lexicalWhileBranchList  &var_cas_ioLexicalWhileBranchList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
  GGS_lexicalExpression  var_cas_whileExpression ;
  nt_lexical_expression_ (inLexique, var_cas_whileExpression) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
  GGS_lexicalInstructionList  var_cas_whileInstructionList = GGS_lexicalInstructionList ::constructor_emptyList () ;
  { bool syntaxRepeat_11 = true ;
    while (syntaxRepeat_11) {
      switch (select_repeat_lexiqueModelBuilder_11 (inLexique)) {
        case 2 : {
          nt_lexical_instruction_ (inLexique, var_cas_whileInstructionList) ;
          } break ;
        default :
          syntaxRepeat_11 = false ;
          break ;
      }
    }
  }
  var_cas_ioLexicalWhileBranchList.addAssign_operation (var_cas_whileExpression, var_cas_whileInstructionList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'lexical_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_instruction_lexiqueModelBuilder_319_26_ (galgas_scanner & inLexique,
                                GGS_lexicalInstructionList  &var_cas_ioInstructionList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_select) COMMA_HERE) ;
  GGS_lexicalSelectBranchList  var_cas_lexicalWhileBranchList = GGS_lexicalSelectBranchList ::constructor_emptyList () ;
  { bool syntaxRepeat_12 = true ;
    while (syntaxRepeat_12) {
        GGS_lexicalExpression  var_cas_selectExpression ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
        nt_lexical_expression_ (inLexique, var_cas_selectExpression) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
        GGS_lexicalInstructionList  var_cas_selectInstructionList = GGS_lexicalInstructionList ::constructor_emptyList () ;
        { bool syntaxRepeat_13 = true ;
          while (syntaxRepeat_13) {
            switch (select_repeat_lexiqueModelBuilder_13 (inLexique)) {
              case 2 : {
                nt_lexical_instruction_ (inLexique, var_cas_selectInstructionList) ;
                } break ;
              default :
                syntaxRepeat_13 = false ;
                break ;
            }
          }
        }
        var_cas_lexicalWhileBranchList.addAssign_operation (var_cas_selectExpression, var_cas_selectInstructionList) ;
      switch (select_repeat_lexiqueModelBuilder_12 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_12 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_default) COMMA_HERE) ;
  GGS_lexicalInstructionList  var_cas_defaultInstructionList = GGS_lexicalInstructionList ::constructor_emptyList () ;
  { bool syntaxRepeat_14 = true ;
    while (syntaxRepeat_14) {
      switch (select_repeat_lexiqueModelBuilder_14 (inLexique)) {
        case 2 : {
          nt_lexical_instruction_ (inLexique, var_cas_defaultInstructionList) ;
          } break ;
        default :
          syntaxRepeat_14 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_select) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  GGS_lexicalInstruction  var_cas_i = GGS_lexicalSelectInstruction ::constructor_new (inLexique, var_cas_lexicalWhileBranchList, var_cas_defaultInstructionList COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_i) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'lexical_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_instruction_lexiqueModelBuilder_353_26_ (galgas_scanner & inLexique,
                                GGS_lexicalInstructionList  &var_cas_ioInstructionList) {
  GGS_lstring  var_cas_actionName ;
  inLexique.assignFromAttribute_tokenString (var_cas_actionName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_lexicalRoutineCallActualArgumentList  var_cas_actualArgumentList = GGS_lexicalRoutineCallActualArgumentList ::constructor_emptyList () ;
  { bool syntaxRepeat_15 = true ;
    while (syntaxRepeat_15) {
      switch (select_repeat_lexiqueModelBuilder_15 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_) COMMA_HERE) ;
          GGS_location  var_cas_passingModeLocation = GGS_location (inLexique) ;
          GGS_lexicalRoutineOrFunctionFormalInputArgument  var_cas_arg ;
          nt_lexical_output_effective_argument_ (inLexique, var_cas_arg) ;
          var_cas_actualArgumentList.addAssign_operation (GGS_lexicalFormalInputArgument ::constructor_new (inLexique, var_cas_passingModeLocation, var_cas_arg COMMA_HERE)) ;
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21__3F_) COMMA_HERE) ;
          GGS_location  var_cas_passingModeLocation = GGS_location (inLexique) ;
          GGS_lstring  var_cas_attributeName ;
          inLexique.assignFromAttribute_tokenString (var_cas_attributeName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_lexicalAttributeInputOutputArgument  var_cas_arg = GGS_lexicalAttributeInputOutputArgument ::constructor_new (inLexique, var_cas_passingModeLocation, var_cas_attributeName COMMA_HERE) ;
          var_cas_actualArgumentList.addAssign_operation (var_cas_arg) ;
          } break ;
        default :
          syntaxRepeat_15 = false ;
          break ;
      }
    }
  }
  GGS_lstringlist  var_cas_errorMessageList = GGS_lstringlist ::constructor_emptyList () ;
  switch (select_lexiqueModelBuilder_16 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
      { bool syntaxRepeat_17 = true ;
        while (syntaxRepeat_17) {
            GGS_lstring  var_cas_errorMessageName ;
            inLexique.assignFromAttribute_tokenString (var_cas_errorMessageName) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            var_cas_errorMessageList.addAssign_operation (var_cas_errorMessageName) ;
          switch (select_repeat_lexiqueModelBuilder_17 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_17 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  GGS_lexicalInstruction  var_cas_i = GGS_lexicalRoutineInstruction ::constructor_new (inLexique, var_cas_actionName, var_cas_actualArgumentList, var_cas_errorMessageList COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (var_cas_i) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of production rule 'lexical_output_effective_argument'    *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_output_effective_argument_lexiqueModelBuilder_394_40_ (galgas_scanner & inLexique,
                                GGS_lexicalRoutineOrFunctionFormalInputArgument  &var_cas_outEffectiveArgument) {
  GGS_lchar  var_cas_character ;
  inLexique.assignFromAttribute_charValue (var_cas_character) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_char) COMMA_HERE) ;
  var_cas_outEffectiveArgument = GGS_lexicalCharacterInputArgument ::constructor_new (inLexique, var_cas_character COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of production rule 'lexical_output_effective_argument'    *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_output_effective_argument_lexiqueModelBuilder_403_40_ (galgas_scanner & inLexique,
                                GGS_lexicalRoutineOrFunctionFormalInputArgument  &var_cas_outEffectiveArgument) {
  GGS_luint  var_cas_unsignedValue ;
  inLexique.assignFromAttribute_uint32value (var_cas_unsignedValue) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5F_literal_5F_integer) COMMA_HERE) ;
  var_cas_outEffectiveArgument = GGS_lexicalUnsignedInputArgument ::constructor_new (inLexique, var_cas_unsignedValue COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of production rule 'lexical_output_effective_argument'    *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_output_effective_argument_lexiqueModelBuilder_412_40_ (galgas_scanner & inLexique,
                                GGS_lexicalRoutineOrFunctionFormalInputArgument  &var_cas_outEffectiveArgument) {
  GGS_location  var_cas_currentLocation = GGS_location (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A_) COMMA_HERE) ;
  var_cas_outEffectiveArgument = GGS_lexicalCurrentCharacterInputArgument ::constructor_new (inLexique, var_cas_currentLocation COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of production rule 'lexical_output_effective_argument'    *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_output_effective_argument_lexiqueModelBuilder_422_40_ (galgas_scanner & inLexique,
                                GGS_lexicalRoutineOrFunctionFormalInputArgument  &var_cas_outEffectiveArgument) {
  GGS_lstring  var_cas_idf ;
  inLexique.assignFromAttribute_tokenString (var_cas_idf) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  nt_function_call_or_attribute_ (inLexique, var_cas_idf, var_cas_outEffectiveArgument) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'function_call_or_attribute'       *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_function_call_or_attribute_lexiqueModelBuilder_431_33_ (galgas_scanner & inLexique,
                                const GGS_lstring  var_cas_inIdf,
                                GGS_lexicalRoutineOrFunctionFormalInputArgument  &var_cas_outArgument) {
  var_cas_outArgument = GGS_lexicalAttributeInputArgument ::constructor_new (inLexique, var_cas_inIdf COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'function_call_or_attribute'       *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_function_call_or_attribute_lexiqueModelBuilder_437_33_ (galgas_scanner & inLexique,
                                const GGS_lstring  var_cas_inIdf,
                                GGS_lexicalRoutineOrFunctionFormalInputArgument  &var_cas_outArgument) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28_) COMMA_HERE) ;
  GGS_lexicalFunctionCallActualArgumentList  var_cas_functionActualArgumentList = GGS_lexicalFunctionCallActualArgumentList ::constructor_emptyList () ;
  { bool syntaxRepeat_18 = true ;
    while (syntaxRepeat_18) {
      switch (select_repeat_lexiqueModelBuilder_18 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_) COMMA_HERE) ;
          GGS_lexicalRoutineOrFunctionFormalInputArgument  var_cas_arg ;
          nt_lexical_output_effective_argument_ (inLexique, var_cas_arg) ;
          var_cas_functionActualArgumentList.addAssign_operation (var_cas_arg) ;
          } break ;
        default :
          syntaxRepeat_18 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29_) COMMA_HERE) ;
  var_cas_outArgument = GGS_lexicalFunctionInputArgument ::constructor_new (inLexique, var_cas_inIdf, var_cas_functionActualArgumentList COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'lexical_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_instruction_lexiqueModelBuilder_453_26_ (galgas_scanner & inLexique,
                                GGS_lexicalInstructionList  &var_cas_ioInstructionList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  GGS_lstring  var_cas_errorMessageName ;
  inLexique.assignFromAttribute_tokenString (var_cas_errorMessageName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (GGS_lexicalErrorInstruction ::constructor_new (inLexique, var_cas_errorMessageName COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'lexical_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_instruction_lexiqueModelBuilder_463_26_ (galgas_scanner & inLexique,
                                GGS_lexicalInstructionList  &var_cas_ioInstructionList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_warning) COMMA_HERE) ;
  GGS_lstring  var_cas_warningMessageName ;
  inLexique.assignFromAttribute_tokenString (var_cas_warningMessageName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (GGS_lexicalWarningInstruction ::constructor_new (inLexique, var_cas_warningMessageName COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'lexical_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_instruction_lexiqueModelBuilder_472_26_ (galgas_scanner & inLexique,
                                GGS_lexicalInstructionList  &var_cas_ioInstructionList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_drop) COMMA_HERE) ;
  GGS_lstring  var_cas_terminalName ;
  inLexique.assignFromAttribute_tokenString (var_cas_terminalName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_terminal) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (GGS_lexicalDropInstruction ::constructor_new (inLexique, var_cas_terminalName COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'lexical_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_instruction_lexiqueModelBuilder_482_26_ (galgas_scanner & inLexique,
                                GGS_lexicalInstructionList  &var_cas_ioInstructionList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_tag) COMMA_HERE) ;
  GGS_lstring  var_cas_tagName ;
  inLexique.assignFromAttribute_tokenString (var_cas_tagName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (GGS_lexicalTagInstruction ::constructor_new (inLexique, var_cas_tagName COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'lexical_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_instruction_lexiqueModelBuilder_492_26_ (galgas_scanner & inLexique,
                                GGS_lexicalInstructionList  &var_cas_ioInstructionList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_rewind) COMMA_HERE) ;
  GGS_lstring  var_cas_tagName ;
  inLexique.assignFromAttribute_tokenString (var_cas_tagName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_send) COMMA_HERE) ;
  GGS_lstring  var_cas_terminalName ;
  inLexique.assignFromAttribute_tokenString (var_cas_terminalName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_terminal) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (GGS_lexicalRewindInstruction ::constructor_new (inLexique, var_cas_tagName, var_cas_terminalName COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'lexical_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_instruction_lexiqueModelBuilder_505_26_ (galgas_scanner & inLexique,
                                GGS_lexicalInstructionList  &var_cas_ioInstructionList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_log) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_ioInstructionList.addAssign_operation (GGS_lexicalLogInstruction ::constructor_new (inLexique COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'lexical_expression'           *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_expression_lexiqueModelBuilder_513_25_ (galgas_scanner & inLexique,
                                GGS_lexicalExpression  &var_cas_outExpression) {
  nt_lexical_term_ (inLexique, var_cas_outExpression) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'lexical_term'              *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_term_lexiqueModelBuilder_519_19_ (galgas_scanner & inLexique,
                                GGS_lexicalExpression  &var_cas_outExpression) {
  nt_lexical_factor_ (inLexique, var_cas_outExpression) ;
  { bool syntaxRepeat_19 = true ;
    while (syntaxRepeat_19) {
      switch (select_repeat_lexiqueModelBuilder_19 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7C_) COMMA_HERE) ;
          GGS_lexicalExpression  var_cas_rightExpression ;
          nt_lexical_factor_ (inLexique, var_cas_rightExpression) ;
          var_cas_outExpression = GGS_lexicalOrExpression ::constructor_new (inLexique, var_cas_outExpression, var_cas_rightExpression COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_19 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'lexical_factor'             *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_factor_lexiqueModelBuilder_532_21_ (galgas_scanner & inLexique,
                                GGS_lexicalExpression  &var_cas_outExpression) {
  GGS_lstring  var_cas_string ;
  inLexique.assignFromAttribute_tokenString (var_cas_string) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
  var_cas_outExpression = GGS_lexicalStringMatch ::constructor_new (inLexique, var_cas_string COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'lexical_factor'             *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_factor_lexiqueModelBuilder_540_21_ (galgas_scanner & inLexique,
                                GGS_lexicalExpression  &var_cas_outExpression) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7E_) COMMA_HERE) ;
  GGS_lstring  var_cas_string ;
  inLexique.assignFromAttribute_tokenString (var_cas_string) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  GGS_lstring  var_cas_errorMessage ;
  inLexique.assignFromAttribute_tokenString (var_cas_errorMessage) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  var_cas_outExpression = GGS_lexicalStringNotMatch ::constructor_new (inLexique, var_cas_string, var_cas_errorMessage COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'lexical_factor'             *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_factor_lexiqueModelBuilder_552_21_ (galgas_scanner & inLexique,
                                GGS_lexicalExpression  &var_cas_outExpression) {
  GGS_lchar  var_cas_character ;
  inLexique.assignFromAttribute_charValue (var_cas_character) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_char) COMMA_HERE) ;
  switch (select_lexiqueModelBuilder_20 (inLexique)) {
    case 1 : {
      var_cas_outExpression = GGS_lexicalCharacterMatch ::constructor_new (inLexique, var_cas_character COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D__3E_) COMMA_HERE) ;
      GGS_lchar  var_cas_upperBound ;
      inLexique.assignFromAttribute_charValue (var_cas_upperBound) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_char) COMMA_HERE) ;
      var_cas_outExpression = GGS_lexicalCharacterIntervalMatch ::constructor_new (inLexique, var_cas_character, var_cas_upperBound COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'lexical_factor'             *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_factor_lexiqueModelBuilder_567_21_ (galgas_scanner & inLexique,
                                GGS_lexicalExpression  &var_cas_outExpression) {
  GGS_lstring  var_cas_characterSet ;
  inLexique.assignFromAttribute_tokenString (var_cas_characterSet) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  var_cas_outExpression = GGS_lexicalCharacterSetMatch ::constructor_new (inLexique, var_cas_characterSet COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'lexical_list_declaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_list_declaration_lexiqueModelBuilder_574_31_ (galgas_scanner & inLexique,
                                GGS_lexicalListDeclarationList  &var_cas_ioLexicalListDeclarationList) {
  GGS_lstring  var_cas_name ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  inLexique.assignFromAttribute_tokenString (var_cas_name) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_lstringlist  var_cas_sentAttributeList = GGS_lstringlist ::constructor_emptyList () ;
  { bool syntaxRepeat_21 = true ;
    while (syntaxRepeat_21) {
      switch (select_repeat_lexiqueModelBuilder_21 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_) COMMA_HERE) ;
          GGS_lstring  var_cas_sentAttribute ;
          inLexique.assignFromAttribute_tokenString (var_cas_sentAttribute) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_sentAttributeList.addAssign_operation (var_cas_sentAttribute) ;
          } break ;
        default :
          syntaxRepeat_21 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  GGS_lstring  var_cas_errorMessage ;
  inLexique.assignFromAttribute_tokenString (var_cas_errorMessage) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
  GGS_lstring  var_cas_theStyle ;
  switch (select_lexiqueModelBuilder_22 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_style) COMMA_HERE) ;
      inLexique.assignFromAttribute_tokenString (var_cas_theStyle) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    case 2 : {
      var_cas_theStyle = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
  GGS_lexicalListEntryList  var_cas_entryList = GGS_lexicalListEntryList ::constructor_emptyList () ;
  { bool syntaxRepeat_23 = true ;
    while (syntaxRepeat_23) {
        nt_lexical_list_entry_ (inLexique, var_cas_entryList) ;
      switch (select_repeat_lexiqueModelBuilder_23 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_23 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_ioLexicalListDeclarationList.addAssign_operation (var_cas_name, var_cas_theStyle, var_cas_errorMessage, var_cas_sentAttributeList, var_cas_entryList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'lexical_list_entry'           *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_list_entry_lexiqueModelBuilder_610_25_ (galgas_scanner & inLexique,
                                GGS_lexicalListEntryList  &var_cas_ioLexicalListEntryList) {
  GGS_lstring  var_cas_entrySpelling ;
  inLexique.assignFromAttribute_tokenString (var_cas_entrySpelling) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
  GGS_lstringlist  var_cas_optionList = GGS_lstringlist ::constructor_emptyList () ;
  switch (select_lexiqueModelBuilder_24 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_feature) COMMA_HERE) ;
      GGS_lstring  var_cas_optionName ;
      inLexique.assignFromAttribute_tokenString (var_cas_optionName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      var_cas_optionList.addAssign_operation (var_cas_optionName) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  var_cas_terminalSpelling ;
  switch (select_lexiqueModelBuilder_25 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D__3E_) COMMA_HERE) ;
      inLexique.assignFromAttribute_tokenString (var_cas_terminalSpelling) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_terminal) COMMA_HERE) ;
      } break ;
    case 2 : {
      var_cas_terminalSpelling = var_cas_entrySpelling ;
      } break ;
    default :
      break ;
  }
  var_cas_ioLexicalListEntryList.addAssign_operation (var_cas_entrySpelling, var_cas_terminalSpelling, var_cas_optionList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Implementation of production rule 'lexical_attribute_declaration'      *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_lexical_attribute_declaration_lexiqueModelBuilder_631_36_ (galgas_scanner & inLexique,
                                GGS_lexicalAttributeList  &var_cas_ioLexicalAttributeList) {
  GGS_lstring  var_cas_typeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_typeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_name ;
  inLexique.assignFromAttribute_tokenString (var_cas_name) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_ioLexicalAttributeList.addAssign_operation (var_cas_typeName, var_cas_name) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'terminal_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_terminal_declaration_lexiqueModelBuilder_642_27_ (galgas_scanner & inLexique,
                                GGS_terminalDeclarationList  &var_cas_ioTerminalDeclarationList) {
  GGS_lstring  var_cas_name ;
  inLexique.assignFromAttribute_tokenString (var_cas_name) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_terminal) COMMA_HERE) ;
  GGS_lstringlist  var_cas_sentAttributeList = GGS_lstringlist ::constructor_emptyList () ;
  { bool syntaxRepeat_26 = true ;
    while (syntaxRepeat_26) {
      switch (select_repeat_lexiqueModelBuilder_26 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_) COMMA_HERE) ;
          GGS_lstring  var_cas_sentAttribute ;
          inLexique.assignFromAttribute_tokenString (var_cas_sentAttribute) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_sentAttributeList.addAssign_operation (var_cas_sentAttribute) ;
          } break ;
        default :
          syntaxRepeat_26 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  GGS_lstring  var_cas_errorMessage ;
  inLexique.assignFromAttribute_tokenString (var_cas_errorMessage) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
  GGS_lstring  var_cas_theStyle ;
  switch (select_lexiqueModelBuilder_27 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_style) COMMA_HERE) ;
      inLexique.assignFromAttribute_tokenString (var_cas_theStyle) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    case 2 : {
      var_cas_theStyle = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_lstringlist  var_cas_optionList = GGS_lstringlist ::constructor_emptyList () ;
  switch (select_lexiqueModelBuilder_28 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_feature) COMMA_HERE) ;
      { bool syntaxRepeat_29 = true ;
        while (syntaxRepeat_29) {
            GGS_lstring  var_cas_optionName ;
            inLexique.assignFromAttribute_tokenString (var_cas_optionName) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            var_cas_optionList.addAssign_operation (var_cas_optionName) ;
          switch (select_repeat_lexiqueModelBuilder_29 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_29 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_ioTerminalDeclarationList.addAssign_operation (var_cas_name, var_cas_sentAttributeList, var_cas_errorMessage, var_cas_theStyle, var_cas_optionList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'style_declaration'            *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_style_declaration_lexiqueModelBuilder_681_24_ (galgas_scanner & inLexique,
                                GGS_lexicalStyleList  &var_cas_ioLexicalStyleList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_style) COMMA_HERE) ;
  GGS_lstring  var_cas_name ;
  inLexique.assignFromAttribute_tokenString (var_cas_name) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D__3E_) COMMA_HERE) ;
  GGS_lstring  var_cas_comment ;
  inLexique.assignFromAttribute_tokenString (var_cas_comment) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_ioLexicalStyleList.addAssign_operation (var_cas_name, var_cas_comment) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of production rule 'extern_routine_or_function_declaration' *
//                                                                           *
//---------------------------------------------------------------------------*

void lexiqueModelBuilder::
pr_extern_routine_or_function_declaration_lexiqueModelBuilder_692_45_ (galgas_scanner & inLexique,
                                GGS_externRoutineList  &var_cas_ioExternRoutineList,
                                GGS_externFunctionList  &var_cas_ioExternFunctionList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extern) COMMA_HERE) ;
  switch (select_lexiqueModelBuilder_30 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
      GGS_lstring  var_cas_routineName ;
      inLexique.assignFromAttribute_tokenString (var_cas_routineName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_lexicalExternRoutineFormalArgumentList  var_cas_lexicalRoutineFormalArgumentList = GGS_lexicalExternRoutineFormalArgumentList ::constructor_emptyList () ;
      { bool syntaxRepeat_31 = true ;
        while (syntaxRepeat_31) {
          switch (select_repeat_lexiqueModelBuilder_31 (inLexique)) {
            case 2 : {
              GGS_lexicalArgumentMode var_cas_lexicalArgumentMode ;
              switch (select_lexiqueModelBuilder_32 (inLexique)) {
                case 1 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F__21_) COMMA_HERE) ;
                  var_cas_lexicalArgumentMode = GGS_lexicalArgumentMode::constructor_lexicalInputOutputMode (inLexique COMMA_HERE) ;
                  } break ;
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_) COMMA_HERE) ;
                  var_cas_lexicalArgumentMode = GGS_lexicalArgumentMode::constructor_lexicalInputMode (inLexique COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              GGS_lstring  var_cas_lexicalTypeName ;
              inLexique.assignFromAttribute_tokenString (var_cas_lexicalTypeName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5F_name) COMMA_HERE) ;
              GGS_lstring  var_cas_formalArgumentName ;
              inLexique.assignFromAttribute_tokenString (var_cas_formalArgumentName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_lexicalRoutineFormalArgumentList.addAssign_operation (var_cas_lexicalArgumentMode, var_cas_lexicalTypeName, var_cas_formalArgumentName) ;
              } break ;
            default :
              syntaxRepeat_31 = false ;
              break ;
          }
        }
      }
      GGS_stringlist  var_cas_errorMessageList = GGS_stringlist ::constructor_emptyList () ;
      switch (select_lexiqueModelBuilder_33 (inLexique)) {
        case 1 : {
          } break ;
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
          { bool syntaxRepeat_34 = true ;
            while (syntaxRepeat_34) {
                GGS_lstring  var_cas_errorMessageName ;
                inLexique.assignFromAttribute_tokenString (var_cas_errorMessageName) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                var_cas_errorMessageList.addAssign_operation (var_cas_errorMessageName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (721))) ;
              switch (select_repeat_lexiqueModelBuilder_34 (inLexique)) {
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C_) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_34 = false ;
                  break ;
              }
            }
          }
          } break ;
        default :
          break ;
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
      var_cas_ioExternRoutineList.addAssign_operation (var_cas_routineName, var_cas_lexicalRoutineFormalArgumentList, var_cas_errorMessageList) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_function) COMMA_HERE) ;
      GGS_lstring  var_cas_functionName ;
      inLexique.assignFromAttribute_tokenString (var_cas_functionName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_lexicalExternFunctionFormalArgumentList  var_cas_lexicalFunctionFormalArgumentList = GGS_lexicalExternFunctionFormalArgumentList ::constructor_emptyList () ;
      { bool syntaxRepeat_35 = true ;
        while (syntaxRepeat_35) {
          switch (select_repeat_lexiqueModelBuilder_35 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_) COMMA_HERE) ;
              GGS_lstring  var_cas_lexicalTypeName ;
              inLexique.assignFromAttribute_tokenString (var_cas_lexicalTypeName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5F_name) COMMA_HERE) ;
              GGS_lstring  var_cas_formalArgumentName ;
              inLexique.assignFromAttribute_tokenString (var_cas_formalArgumentName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_lexicalFunctionFormalArgumentList.addAssign_operation (var_cas_lexicalTypeName, var_cas_formalArgumentName) ;
              } break ;
            default :
              syntaxRepeat_35 = false ;
              break ;
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D__3E_) COMMA_HERE) ;
      GGS_lstring  var_cas_returnedTypeName ;
      inLexique.assignFromAttribute_tokenString (var_cas_returnedTypeName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5F_name) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
      var_cas_ioExternFunctionList.addAssign_operation (var_cas_functionName, var_cas_lexicalFunctionFormalArgumentList, var_cas_returnedTypeName) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

