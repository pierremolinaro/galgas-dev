//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'lexiqueModelBuilder.cpp'                       *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                       may 17th, 2007, at 18h5'47"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "lexiqueModelBuilder.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "lexiqueModelBuilder.ggs", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//#define DEBUG_TRACE_ENABLED

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//    Implementation of production rule 'lexique_component_start_symbol'     *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexiqueComponentRoot lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexique_component_start_symbol_lexiqueModelBuilder_74_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexique_component_start_symbol>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mLexiqueComponentName ;
  GGS_lexicalAttributeList  var_cas_mLexicalAttributeList ;
  var_cas_mLexicalAttributeList = GGS_lexicalAttributeList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_lexicalStyleList  var_cas_mLexicalStyleList ;
  var_cas_mLexicalStyleList = GGS_lexicalStyleList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_terminalDeclarationList  var_cas_mTerminalDeclarationList ;
  var_cas_mTerminalDeclarationList = GGS_terminalDeclarationList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_lexicalErrorMessageDeclarationList  var_cas_mLexicalErrorMessageDeclarationList ;
  var_cas_mLexicalErrorMessageDeclarationList = GGS_lexicalErrorMessageDeclarationList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_lexicalListDeclarationList  var_cas_mLexicalListDeclarationList ;
  var_cas_mLexicalListDeclarationList = GGS_lexicalListDeclarationList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_lexicalImplicitRuleList  var_cas_mLexicalImplicitRuleList ;
  var_cas_mLexicalImplicitRuleList = GGS_lexicalImplicitRuleList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_lexicalExplicitRuleList  var_cas_mLexicalExplicitRuleList ;
  var_cas_mLexicalExplicitRuleList = GGS_lexicalExplicitRuleList::constructor_emptyList (_inLexique COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$lexique$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_lexique) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mLexiqueComponentName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$:$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_lexiqueModelBuilder_0 (_inLexique)) {
        case 2 : {
          var_cas_mLexicalAttributeList._addModel (nt_lexical_attribute_declaration_ (_inLexique)) ;
          } break ;
        case 3 : {
          var_cas_mLexicalStyleList._addModel (nt_style_declaration_ (_inLexique)) ;
          } break ;
        case 4 : {
          var_cas_mTerminalDeclarationList._addModel (nt_terminal_declaration_ (_inLexique)) ;
          } break ;
        case 5 : {
          var_cas_mLexicalListDeclarationList._addModel (nt_lexical_list_declaration_ (_inLexique)) ;
          } break ;
        case 6 : {
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$rule$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_rule) COMMA_HERE) ;
          switch (select_lexiqueModelBuilder_1 (_inLexique)) {
            case 1 : {
              var_cas_mLexicalExplicitRuleList._addModel (nt_lexical_explicit_rule_ (_inLexique)) ;
              } break ;
            case 2 : {
              var_cas_mLexicalImplicitRuleList._addModel (nt_lexical_implicit_rule_ (_inLexique)) ;
              } break ;
            default :
              break ;
          }
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$;$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        case 7 : {
          var_cas_mLexicalErrorMessageDeclarationList._addModel (nt_lexical_error_message_declaration_ (_inLexique)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$end$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$lexique$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_lexique) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexiqueComponentRoot _entityInstance = GGS_lexiqueComponentRoot::constructor_new (_inLexique, var_cas_mLexiqueComponentName, var_cas_mLexicalAttributeList, var_cas_mLexicalStyleList, var_cas_mTerminalDeclarationList, var_cas_mLexicalErrorMessageDeclarationList, var_cas_mLexicalListDeclarationList, var_cas_mLexicalImplicitRuleList, var_cas_mLexicalExplicitRuleList COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of production rule 'lexical_error_message_declaration'    *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalErrorMessageDeclaration lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_error_message_declaration_lexiqueModelBuilder_107_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_error_message_declaration>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mMessageName ;
  GGS_lstring  var_cas_mMessageValue ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$message$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mMessageName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$:$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mMessageValue) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$literal_string$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalErrorMessageDeclaration _entityInstance = GGS_lexicalErrorMessageDeclaration::constructor_new (_inLexique, var_cas_mMessageName, var_cas_mMessageValue COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'lexical_implicit_rule'          *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalImplicitRule lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_implicit_rule_lexiqueModelBuilder_117_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_implicit_rule>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mListName ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$list$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mListName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalImplicitRule _entityInstance = GGS_lexicalImplicitRule::constructor_new (_inLexique, var_cas_mListName COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'lexical_explicit_rule'          *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalExplicitRule lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_explicit_rule_lexiqueModelBuilder_124_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_explicit_rule>", NULL, "") ;
  #endif
  GGS_lexicalExpression  var_cas_mLexicalRuleExpression ;
  GGS_lexicalInstructionList  var_cas_mInstructionList ;
  var_cas_mInstructionList = GGS_lexicalInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_mLexicalRuleExpression = nt_lexical_expression_ (_inLexique) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$:$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_lexiqueModelBuilder_2 (_inLexique)) {
        case 2 : {
          var_cas_mInstructionList._addModel (nt_lexical_instruction_ (_inLexique)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$end$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$rule$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_rule) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalExplicitRule _entityInstance = GGS_lexicalExplicitRule::constructor_new (_inLexique, var_cas_mLexicalRuleExpression, var_cas_mInstructionList COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'lexical_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalInstruction lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_instruction_lexiqueModelBuilder_137_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_instruction>", NULL, "") ;
  #endif
  GGS_lexicalInstruction  var_cas_outInstruction ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$send$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_send) COMMA_HERE) ;
  var_cas_outInstruction = nt_lexical_send_instruction_ (_inLexique) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  return var_cas_outInstruction ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'lexical_send_instruction'        *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalSimpleSendInstruction lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_send_instruction_lexiqueModelBuilder_145_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_send_instruction>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mSentTerminal ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mSentTerminal) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$terminal$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_terminal) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalSimpleSendInstruction _entityInstance = GGS_lexicalSimpleSendInstruction::constructor_new (_inLexique, var_cas_mSentTerminal COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'lexical_send_instruction'        *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalStructuredSendInstruction lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_send_instruction_lexiqueModelBuilder_151_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_send_instruction>", NULL, "") ;
  #endif
  GGS_lexicalSendSearchList  var_cas_mLexicalSendSearchList ;
  var_cas_mLexicalSendSearchList = GGS_lexicalSendSearchList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_lexicalSendDefaultAction  var_cas_mLexicalSendDefaultAction ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        var_cas_mLexicalSendSearchList._addModel (nt_search_in_lexical_send_ (_inLexique)) ;
      switch (select_repeat_lexiqueModelBuilder_3 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$default$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_default) COMMA_HERE) ;
  var_cas_mLexicalSendDefaultAction = nt_default_send_action_ (_inLexique) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalStructuredSendInstruction _entityInstance = GGS_lexicalStructuredSendInstruction::constructor_new (_inLexique, var_cas_mLexicalSendSearchList, var_cas_mLexicalSendDefaultAction COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'search_in_lexical_send'         *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalSendSearch lexiqueModelBuilder::
lexiqueModelBuilder::
pr_search_in_lexical_send_lexiqueModelBuilder_162_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<search_in_lexical_send>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mAttributeName ;
  GGS_lstring  var_cas_mSearchListName ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$search$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_search) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mAttributeName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$in$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mSearchListName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalSendSearch _entityInstance = GGS_lexicalSendSearch::constructor_new (_inLexique, var_cas_mAttributeName, var_cas_mSearchListName COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'default_send_action'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalSendTerminalByDefault lexiqueModelBuilder::
lexiqueModelBuilder::
pr_default_send_action_lexiqueModelBuilder_171_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<default_send_action>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mDefaultSentTerminal ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mDefaultSentTerminal) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$terminal$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_terminal) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalSendTerminalByDefault _entityInstance = GGS_lexicalSendTerminalByDefault::constructor_new (_inLexique, var_cas_mDefaultSentTerminal COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'default_send_action'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalErrorByDefault lexiqueModelBuilder::
lexiqueModelBuilder::
pr_default_send_action_lexiqueModelBuilder_177_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<default_send_action>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mDefaultErrorMessageName ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$error$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mDefaultErrorMessageName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalErrorByDefault _entityInstance = GGS_lexicalErrorByDefault::constructor_new (_inLexique, var_cas_mDefaultErrorMessageName COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'lexical_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalRepeatInstruction lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_instruction_lexiqueModelBuilder_184_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_instruction>", NULL, "") ;
  #endif
  GGS_lexicalInstructionList  var_cas_mRepeatedInstructionList ;
  var_cas_mRepeatedInstructionList = GGS_lexicalInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_lexicalWhileBranchList  var_cas_mLexicalWhileBranchList ;
  var_cas_mLexicalWhileBranchList = GGS_lexicalWhileBranchList::constructor_emptyList (_inLexique COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$repeat$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_repeat) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_lexiqueModelBuilder_4 (_inLexique)) {
        case 2 : {
          var_cas_mRepeatedInstructionList._addModel (nt_lexical_instruction_ (_inLexique)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        var_cas_mLexicalWhileBranchList._addModel (nt_repeat_while_branch_ (_inLexique)) ;
      switch (select_repeat_lexiqueModelBuilder_5 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$end$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$repeat$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_repeat) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalRepeatInstruction _entityInstance = GGS_lexicalRepeatInstruction::constructor_new (_inLexique, var_cas_mRepeatedInstructionList, var_cas_mLexicalWhileBranchList COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'repeat_while_branch'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalWhileBranch lexiqueModelBuilder::
lexiqueModelBuilder::
pr_repeat_while_branch_lexiqueModelBuilder_201_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<repeat_while_branch>", NULL, "") ;
  #endif
  GGS_lexicalExpression  var_cas_mWhileExpression ;
  GGS_lexicalInstructionList  var_cas_mWhileInstructionList ;
  var_cas_mWhileInstructionList = GGS_lexicalInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$while$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
  var_cas_mWhileExpression = nt_lexical_expression_ (_inLexique) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$:$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_lexiqueModelBuilder_6 (_inLexique)) {
        case 2 : {
          var_cas_mWhileInstructionList._addModel (nt_lexical_instruction_ (_inLexique)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalWhileBranch _entityInstance = GGS_lexicalWhileBranch::constructor_new (_inLexique, var_cas_mWhileExpression, var_cas_mWhileInstructionList COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'lexical_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalSelectInstruction lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_instruction_lexiqueModelBuilder_213_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_instruction>", NULL, "") ;
  #endif
  GGS_lexicalSelectBranchList  var_cas_mLexicalWhileBranchList ;
  var_cas_mLexicalWhileBranchList = GGS_lexicalSelectBranchList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_lexicalInstructionList  var_cas_mDefaultInstructionList ;
  var_cas_mDefaultInstructionList = GGS_lexicalInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$select$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_select) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        var_cas_mLexicalWhileBranchList._addModel (nt_lexical_select_branch_ (_inLexique)) ;
      switch (select_repeat_lexiqueModelBuilder_7 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$default$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_default) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_lexiqueModelBuilder_8 (_inLexique)) {
        case 2 : {
          var_cas_mDefaultInstructionList._addModel (nt_lexical_instruction_ (_inLexique)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$end$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$select$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_select) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalSelectInstruction _entityInstance = GGS_lexicalSelectInstruction::constructor_new (_inLexique, var_cas_mLexicalWhileBranchList, var_cas_mDefaultInstructionList COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'lexical_select_branch'          *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalSelectBranch lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_select_branch_lexiqueModelBuilder_231_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_select_branch>", NULL, "") ;
  #endif
  GGS_lexicalExpression  var_cas_mSelectExpression ;
  GGS_lexicalInstructionList  var_cas_mSelectInstructionList ;
  var_cas_mSelectInstructionList = GGS_lexicalInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$when$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  var_cas_mSelectExpression = nt_lexical_expression_ (_inLexique) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$:$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_lexiqueModelBuilder_9 (_inLexique)) {
        case 2 : {
          var_cas_mSelectInstructionList._addModel (nt_lexical_instruction_ (_inLexique)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalSelectBranch _entityInstance = GGS_lexicalSelectBranch::constructor_new (_inLexique, var_cas_mSelectExpression, var_cas_mSelectInstructionList COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'lexical_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalActionInstruction lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_instruction_lexiqueModelBuilder_243_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_instruction>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mActionName ;
  GGS_lexicalActualArgumentList  var_cas_mActualArgumentList ;
  var_cas_mActualArgumentList = GGS_lexicalActualArgumentList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_lstringlist  var_cas_mErrorMessageList ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mActionName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$($", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        var_cas_mActualArgumentList._addModel (nt_lexical_action_effective_argument_ (_inLexique)) ;
      switch (select_repeat_lexiqueModelBuilder_10 (_inLexique)) {
        case 2 : {
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$,$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$)$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
  var_cas_mErrorMessageList = GGS_lstringlist::constructor_emptyList (_inLexique COMMA_HERE) ;
  switch (select_lexiqueModelBuilder_11 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      #ifdef DEBUG_TRACE_ENABLED
        { C_String message_ ;
          _inLexique.didParseTerminal ("$error$", message_) ;
        }
      #endif
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_errorMessageName ;
            _inLexique._assignFromAttribute_tokenString (var_cas_errorMessageName) ;
            #ifdef DEBUG_TRACE_ENABLED
              { C_String message_ (" ?") ;
                message_ << ' ' << _inLexique._attributeValue_tokenString () ;
                _inLexique.didParseTerminal ("$identifier$", message_) ;
              }
            #endif
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            var_cas_mErrorMessageList._addAssign_operation (var_cas_errorMessageName) ;
          switch (select_repeat_lexiqueModelBuilder_12 (_inLexique)) {
            case 2 : {
              #ifdef DEBUG_TRACE_ENABLED
                { C_String message_ ;
                  _inLexique.didParseTerminal ("$,$", message_) ;
                }
              #endif
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalActionInstruction _entityInstance = GGS_lexicalActionInstruction::constructor_new (_inLexique, var_cas_mActionName, var_cas_mActualArgumentList, var_cas_mErrorMessageList COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of production rule 'lexical_action_effective_argument'    *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalCharacterArgument lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_action_effective_argument_lexiqueModelBuilder_269_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_action_effective_argument>", NULL, "") ;
  #endif
  GGS_lchar  var_cas_mCharacter ;
  _inLexique._assignFromAttribute_charValue (var_cas_mCharacter) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_charValue () ;
      _inLexique.didParseTerminal ("$literal_char$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fchar) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalCharacterArgument _entityInstance = GGS_lexicalCharacterArgument::constructor_new (_inLexique, var_cas_mCharacter COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of production rule 'lexical_action_effective_argument'    *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalCurrentCharacterArgument lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_action_effective_argument_lexiqueModelBuilder_275_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_action_effective_argument>", NULL, "") ;
  #endif
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$*$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalCurrentCharacterArgument _entityInstance = GGS_lexicalCurrentCharacterArgument::constructor_new (_inLexique COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of production rule 'lexical_action_effective_argument'    *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalActualArgument lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_action_effective_argument_lexiqueModelBuilder_281_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_action_effective_argument>", NULL, "") ;
  #endif
  GGS_lexicalActualArgument  var_cas_outArgument ;
  GGS_lstring  var_cas_idf ;
  _inLexique._assignFromAttribute_tokenString (var_cas_idf) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  var_cas_outArgument = nt_function_call_or_attribute_ (_inLexique, var_cas_idf) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  return var_cas_outArgument ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'function_call_or_attribute'       *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalAttributeArgument lexiqueModelBuilder::
lexiqueModelBuilder::
pr_function_call_or_attribute_lexiqueModelBuilder_289_6_ (galgas_scanner & _inLexique,
                                const GGS_lstring  var_cas_inIdf) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<function_call_or_attribute>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mAttributeName ;
  var_cas_mAttributeName = var_cas_inIdf ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalAttributeArgument _entityInstance = GGS_lexicalAttributeArgument::constructor_new (_inLexique, var_cas_mAttributeName COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'function_call_or_attribute'       *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalFunctionArgument lexiqueModelBuilder::
lexiqueModelBuilder::
pr_function_call_or_attribute_lexiqueModelBuilder_295_6_ (galgas_scanner & _inLexique,
                                const GGS_lstring  var_cas_inIdf) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<function_call_or_attribute>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mFunctionName ;
  GGS_lexicalActualArgumentList  var_cas_mFunctionActualArgumentList ;
  var_cas_mFunctionActualArgumentList = GGS_lexicalActualArgumentList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_mFunctionName = var_cas_inIdf ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$($", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        var_cas_mFunctionActualArgumentList._addModel (nt_lexical_action_effective_argument_ (_inLexique)) ;
      switch (select_repeat_lexiqueModelBuilder_13 (_inLexique)) {
        case 2 : {
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$,$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$)$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalFunctionArgument _entityInstance = GGS_lexicalFunctionArgument::constructor_new (_inLexique, var_cas_mFunctionName, var_cas_mFunctionActualArgumentList COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'lexical_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalErrorInstruction lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_instruction_lexiqueModelBuilder_308_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_instruction>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mErrorMessageName ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$error$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mErrorMessageName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalErrorInstruction _entityInstance = GGS_lexicalErrorInstruction::constructor_new (_inLexique, var_cas_mErrorMessageName COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'lexical_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalDropInstruction lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_instruction_lexiqueModelBuilder_316_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_instruction>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mTerminalName ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$drop$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_drop) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mTerminalName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$terminal$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_terminal) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalDropInstruction _entityInstance = GGS_lexicalDropInstruction::constructor_new (_inLexique, var_cas_mTerminalName COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'lexical_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalTagInstruction lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_instruction_lexiqueModelBuilder_324_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_instruction>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mTagName ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$tag$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_tag) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mTagName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalTagInstruction _entityInstance = GGS_lexicalTagInstruction::constructor_new (_inLexique, var_cas_mTagName COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'lexical_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalRewindInstruction lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_instruction_lexiqueModelBuilder_332_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_instruction>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mTagName ;
  GGS_lstring  var_cas_mTerminalName ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$rewind$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_rewind) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mTagName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$send$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_send) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mTerminalName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$terminal$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_terminal) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalRewindInstruction _entityInstance = GGS_lexicalRewindInstruction::constructor_new (_inLexique, var_cas_mTagName, var_cas_mTerminalName COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'lexical_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalLogInstruction lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_instruction_lexiqueModelBuilder_342_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_instruction>", NULL, "") ;
  #endif
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$log$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_log) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalLogInstruction _entityInstance = GGS_lexicalLogInstruction::constructor_new (_inLexique COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'lexical_expression'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalExpression lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_expression_lexiqueModelBuilder_349_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_expression>", NULL, "") ;
  #endif
  GGS_lexicalExpression  var_cas_outExpression ;
  var_cas_outExpression = nt_lexical_term_ (_inLexique) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  return var_cas_outExpression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'lexical_term'              *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalExpression lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_term_lexiqueModelBuilder_355_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_term>", NULL, "") ;
  #endif
  GGS_lexicalExpression  var_cas_outExpression ;
  var_cas_outExpression = nt_lexical_factor_ (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_lexiqueModelBuilder_14 (_inLexique)) {
        case 2 : {
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$|$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7C) COMMA_HERE) ;
          GGS_lexicalExpression  var_cas_rightExpression ;
          var_cas_rightExpression = nt_lexical_factor_ (_inLexique) ;
          var_cas_outExpression = nt_build_lexical_or_ (_inLexique, var_cas_outExpression, var_cas_rightExpression) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  return var_cas_outExpression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'build_lexical_or'            *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalOrExpression lexiqueModelBuilder::
lexiqueModelBuilder::
pr_build_lexical_or_lexiqueModelBuilder_368_6_ (galgas_scanner & _inLexique,
                                const GGS_lexicalExpression  var_cas_inLeftExpression,
                                const GGS_lexicalExpression  var_cas_inRightExpression) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<build_lexical_or>", NULL, "") ;
  #endif
  GGS_lexicalExpression  var_cas_mLeftOperand ;
  GGS_lexicalExpression  var_cas_mRightOperand ;
  var_cas_mLeftOperand = var_cas_inLeftExpression ;
  var_cas_mRightOperand = var_cas_inRightExpression ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalOrExpression _entityInstance = GGS_lexicalOrExpression::constructor_new (_inLexique, var_cas_mLeftOperand, var_cas_mRightOperand COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'lexical_factor'             *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalStringMatch lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_factor_lexiqueModelBuilder_378_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_factor>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mString ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mString) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$literal_string$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalStringMatch _entityInstance = GGS_lexicalStringMatch::constructor_new (_inLexique, var_cas_mString COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'lexical_factor'             *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalStringNotMatch lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_factor_lexiqueModelBuilder_384_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_factor>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mString ;
  GGS_lstring  var_cas_mErrorMessage ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$~$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7E) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mString) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$literal_string$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$error$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mErrorMessage) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalStringNotMatch _entityInstance = GGS_lexicalStringNotMatch::constructor_new (_inLexique, var_cas_mString, var_cas_mErrorMessage COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'lexical_factor'             *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalExpression lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_factor_lexiqueModelBuilder_393_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_factor>", NULL, "") ;
  #endif
  GGS_lexicalExpression  var_cas_outExpression ;
  GGS_lchar  var_cas_character ;
  _inLexique._assignFromAttribute_charValue (var_cas_character) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_charValue () ;
      _inLexique.didParseTerminal ("$literal_char$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fchar) COMMA_HERE) ;
  var_cas_outExpression = nt_character_or_interval_ (_inLexique, var_cas_character) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  return var_cas_outExpression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'character_or_interval'          *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalCharacterMatch lexiqueModelBuilder::
lexiqueModelBuilder::
pr_character_or_interval_lexiqueModelBuilder_401_6_ (galgas_scanner & _inLexique,
                                const GGS_lchar  var_cas_inCharacter) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<character_or_interval>", NULL, "") ;
  #endif
  GGS_lchar  var_cas_mCharacter ;
  var_cas_mCharacter = var_cas_inCharacter ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalCharacterMatch _entityInstance = GGS_lexicalCharacterMatch::constructor_new (_inLexique, var_cas_mCharacter COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'character_or_interval'          *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalCharacterIntervalMatch lexiqueModelBuilder::
lexiqueModelBuilder::
pr_character_or_interval_lexiqueModelBuilder_407_6_ (galgas_scanner & _inLexique,
                                const GGS_lchar  var_cas_inCharacter) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<character_or_interval>", NULL, "") ;
  #endif
  GGS_lchar  var_cas_mLowerBound ;
  GGS_lchar  var_cas_mUpperBound ;
  var_cas_mLowerBound = var_cas_inCharacter ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$->$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
  _inLexique._assignFromAttribute_charValue (var_cas_mUpperBound) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_charValue () ;
      _inLexique.didParseTerminal ("$literal_char$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fchar) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalCharacterIntervalMatch _entityInstance = GGS_lexicalCharacterIntervalMatch::constructor_new (_inLexique, var_cas_mLowerBound, var_cas_mUpperBound COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'lexical_list_declaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalListDeclaration lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_list_declaration_lexiqueModelBuilder_415_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_list_declaration>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mName ;
  GGS_lstring  var_cas_mStyle ;
  GGS_lstring  var_cas_mErrorMessage ;
  GGS_lstringlist  var_cas_mSentAttributeList ;
  GGS_lexicalListEntryList  var_cas_mEntryList ;
  var_cas_mEntryList = GGS_lexicalListEntryList::constructor_emptyList (_inLexique COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$list$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_list) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  var_cas_mSentAttributeList = GGS_lstringlist::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_lexiqueModelBuilder_15 (_inLexique)) {
        case 2 : {
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$!$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          GGS_lstring  var_cas_sentAttribute ;
          _inLexique._assignFromAttribute_tokenString (var_cas_sentAttribute) ;
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ (" ?") ;
              message_ << ' ' << _inLexique._attributeValue_tokenString () ;
              _inLexique.didParseTerminal ("$identifier$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_mSentAttributeList._addAssign_operation (var_cas_sentAttribute) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$error$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$message$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mErrorMessage) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$literal_string$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  switch (select_lexiqueModelBuilder_16 (_inLexique)) {
    case 1 : {
      #ifdef DEBUG_TRACE_ENABLED
        { C_String message_ ;
          _inLexique.didParseTerminal ("$style$", message_) ;
        }
      #endif
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_style) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mStyle) ;
      #ifdef DEBUG_TRACE_ENABLED
        { C_String message_ (" ?") ;
          message_ << ' ' << _inLexique._attributeValue_tokenString () ;
          _inLexique.didParseTerminal ("$identifier$", message_) ;
        }
      #endif
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    case 2 : {
      var_cas_mStyle = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$:$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        var_cas_mEntryList._addModel (nt_lexical_list_entry_ (_inLexique)) ;
      switch (select_repeat_lexiqueModelBuilder_17 (_inLexique)) {
        case 2 : {
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$,$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalListDeclaration _entityInstance = GGS_lexicalListDeclaration::constructor_new (_inLexique, var_cas_mName, var_cas_mStyle, var_cas_mErrorMessage, var_cas_mSentAttributeList, var_cas_mEntryList COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'lexical_list_entry'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalListEntry lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_list_entry_lexiqueModelBuilder_446_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_list_entry>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mEntrySpelling ;
  GGS_lstring  var_cas_mTerminalSpelling ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mEntrySpelling) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$literal_string$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  switch (select_lexiqueModelBuilder_18 (_inLexique)) {
    case 1 : {
      #ifdef DEBUG_TRACE_ENABLED
        { C_String message_ ;
          _inLexique.didParseTerminal ("$->$", message_) ;
        }
      #endif
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mTerminalSpelling) ;
      #ifdef DEBUG_TRACE_ENABLED
        { C_String message_ (" ?") ;
          message_ << ' ' << _inLexique._attributeValue_tokenString () ;
          _inLexique.didParseTerminal ("$literal_string$", message_) ;
        }
      #endif
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
      } break ;
    case 2 : {
      var_cas_mTerminalSpelling = var_cas_mEntrySpelling ;
      } break ;
    default :
      break ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalListEntry _entityInstance = GGS_lexicalListEntry::constructor_new (_inLexique, var_cas_mEntrySpelling, var_cas_mTerminalSpelling COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Implementation of production rule 'lexical_attribute_declaration'      *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalAttribute lexiqueModelBuilder::
lexiqueModelBuilder::
pr_lexical_attribute_declaration_lexiqueModelBuilder_458_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<lexical_attribute_declaration>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mTypeName ;
  GGS_lstring  var_cas_mName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mTypeName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$type_name$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalAttribute _entityInstance = GGS_lexicalAttribute::constructor_new (_inLexique, var_cas_mTypeName, var_cas_mName COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'terminal_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_terminalDeclaration lexiqueModelBuilder::
lexiqueModelBuilder::
pr_terminal_declaration_lexiqueModelBuilder_466_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<terminal_declaration>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mName ;
  GGS_lstringlist  var_cas_mSentAttributeList ;
  GGS_lstring  var_cas_mErrorMessage ;
  GGS_lstring  var_cas_mStyle ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$terminal$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_terminal) COMMA_HERE) ;
  var_cas_mSentAttributeList = GGS_lstringlist::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_lexiqueModelBuilder_19 (_inLexique)) {
        case 2 : {
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ ;
              _inLexique.didParseTerminal ("$!$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          GGS_lstring  var_cas_sentAttribute ;
          _inLexique._assignFromAttribute_tokenString (var_cas_sentAttribute) ;
          #ifdef DEBUG_TRACE_ENABLED
            { C_String message_ (" ?") ;
              message_ << ' ' << _inLexique._attributeValue_tokenString () ;
              _inLexique.didParseTerminal ("$identifier$", message_) ;
            }
          #endif
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_mSentAttributeList._addAssign_operation (var_cas_sentAttribute) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$error$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$message$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mErrorMessage) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$literal_string$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  switch (select_lexiqueModelBuilder_20 (_inLexique)) {
    case 1 : {
      #ifdef DEBUG_TRACE_ENABLED
        { C_String message_ ;
          _inLexique.didParseTerminal ("$style$", message_) ;
        }
      #endif
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_style) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_mStyle) ;
      #ifdef DEBUG_TRACE_ENABLED
        { C_String message_ (" ?") ;
          message_ << ' ' << _inLexique._attributeValue_tokenString () ;
          _inLexique.didParseTerminal ("$identifier$", message_) ;
        }
      #endif
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    case 2 : {
      var_cas_mStyle = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_terminalDeclaration _entityInstance = GGS_terminalDeclaration::constructor_new (_inLexique, var_cas_mName, var_cas_mSentAttributeList, var_cas_mErrorMessage, var_cas_mStyle COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'style_declaration'            *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_lexicalStyle lexiqueModelBuilder::
lexiqueModelBuilder::
pr_style_declaration_lexiqueModelBuilder_490_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<style_declaration>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mName ;
  GGS_lstring  var_cas_mComment ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$style$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_style) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$->$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mComment) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$literal_string$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_lexicalStyle _entityInstance = GGS_lexicalStyle::constructor_new (_inLexique, var_cas_mName, var_cas_mComment COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*

