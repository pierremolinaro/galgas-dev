//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'common_semantics.h'                          *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                       april 4th, 2007, at 13h29'9"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef common_semantics_DEFINED
#define common_semantics_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/C_GGS_Object.h"
#include "galgas/GGS_location.h"
#include "galgas/GGS_lbool.h"
#include "galgas/GGS_lchar.h"
#include "galgas/GGS_lstring.h"
#include "galgas/GGS_ldouble.h"
#include "galgas/GGS_luint.h"
#include "galgas/GGS_lsint.h"
#include "galgas/GGS_luint64.h"
#include "galgas/GGS_lsint64.h"
#include "galgas/GGS_stringset.h"
#include "galgas/GGS_binaryset.h"
#include "galgas/predefined_types.h"
#include "galgas/AC_galgas_class.h"
#include "galgas/AC_galgas_entity.h"
#include "galgas/AC_galgas_domain.h"
#include "galgas/AC_galgas_mapindex.h"
#include "galgas/AC_galgas_map.h"
#include "galgas/AC_galgas_list.h"
#include "galgas/AC_galgas_sortedlist.h"

//---------------------------------------------------------------------------*

#include "galgas/C_Lexique.h"

// Include imported semantics
#include "commonSemantics.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_L_lstringList ;
class GGS_L_signature ;
class GGS_typeListModel ;
class GGS_TypeModel ;
class cPtr_TypeModel ;
class GGS_BoolModel ;
class cPtr_BoolModel ;
class GGS_CharModel ;
class cPtr_CharModel ;
class GGS_UIntModel ;
class cPtr_UIntModel ;
class GGS_SIntModel ;
class cPtr_SIntModel ;
class GGS_UInt64Model ;
class cPtr_UInt64Model ;
class GGS_SInt64Model ;
class cPtr_SInt64Model ;
class GGS_DoubleModel ;
class cPtr_DoubleModel ;
class GGS_StringModel ;
class cPtr_StringModel ;
class GGS_LBoolModel ;
class cPtr_LBoolModel ;
class GGS_LCharModel ;
class cPtr_LCharModel ;
class GGS_LUIntModel ;
class cPtr_LUIntModel ;
class GGS_LSIntModel ;
class cPtr_LSIntModel ;
class GGS_LUInt64Model ;
class cPtr_LUInt64Model ;
class GGS_LSInt64Model ;
class cPtr_LSInt64Model ;
class GGS_LDoubleModel ;
class cPtr_LDoubleModel ;
class GGS_LStringModel ;
class cPtr_LStringModel ;
class GGS_StringsetModel ;
class cPtr_StringsetModel ;
class GGS_LocationModel ;
class cPtr_LocationModel ;
class GGS_ListModel ;
class cPtr_ListModel ;
class GGS_MapModel ;
class cPtr_MapModel ;
class GGS_enumConstantMap ;
class GGS_enumMessageMap ;
class GGS_EnumModel ;
class cPtr_EnumModel ;
class GGS_constructorMap ;
class GGS_readerMap ;
class GGS_modifierMap ;
class GGS_ExternTypeModel ;
class cPtr_ExternTypeModel ;
class GGS_classMessageMap ;
class GGS_ClassModel ;
class cPtr_ClassModel ;
class GGS_ModelMap ;
class GGS_ActionMap ;
class GGS_localConstantBuildStyleEnum ;
class GGS_AC_galgasType ;
class cPtr_AC_galgasType ;
class GGS_entityPropertyMap ;
class GGS_mapEntityMap ;
class GGS_typeSuperClassesMap ;
class GGS_entityToImplementMap ;
class GGS_typeListeAttributsSemantiques ;
class GGS_typeTypesList ;
class GGS_L_EXsignature ;
class GGS_L_actualParametersSignature ;
class GGS_M_accessors_map ;
class GGS_typeGalgas_jokerInParameterList ;
class cPtr_typeGalgas_jokerInParameterList ;
class GGS_typeGalgas_bool ;
class cPtr_typeGalgas_bool ;
class GGS_typeGalgas_uint ;
class cPtr_typeGalgas_uint ;
class GGS_typeGalgas_char ;
class cPtr_typeGalgas_char ;
class GGS_typeGalgas_string ;
class cPtr_typeGalgas_string ;
class GGS_typeGalgas_sint ;
class cPtr_typeGalgas_sint ;
class GGS_typeGalgas_sint64 ;
class cPtr_typeGalgas_sint64 ;
class GGS_typeGalgas_uint64 ;
class cPtr_typeGalgas_uint64 ;
class GGS_typeGalgas_double ;
class cPtr_typeGalgas_double ;
class GGS_typeGalgas_binaryset ;
class cPtr_typeGalgas_binaryset ;
class GGS_C_galgasPrimitiveType ;
class cPtr_C_galgasPrimitiveType ;
class GGS_typeGalgas_location ;
class cPtr_typeGalgas_location ;
class GGS_typeGalgas_lstring ;
class cPtr_typeGalgas_lstring ;
class GGS_typeGalgas_lchar ;
class cPtr_typeGalgas_lchar ;
class GGS_typeGalgas_lbool ;
class cPtr_typeGalgas_lbool ;
class GGS_typeGalgas_luint ;
class cPtr_typeGalgas_luint ;
class GGS_typeGalgas_luint64 ;
class cPtr_typeGalgas_luint64 ;
class GGS_typeGalgas_lsint ;
class cPtr_typeGalgas_lsint ;
class GGS_typeGalgas_lsint64 ;
class cPtr_typeGalgas_lsint64 ;
class GGS_typeGalgas_ldouble ;
class cPtr_typeGalgas_ldouble ;
class GGS_typeGalgas_stringset ;
class cPtr_typeGalgas_stringset ;
class GGS_typeTableMethodes ;
class GGS_typeGalgasUndefinedExternType ;
class cPtr_typeGalgasUndefinedExternType ;
class GGS_M_externTypeConstructorMap ;
class GGS_typeGalgasExternType ;
class cPtr_typeGalgasExternType ;
class GGS_M_terminalSymbolsMapForUse ;
class GGS_M_lexiqueComponents ;
class GGS_typeTableEnAvant ;
class GGS_M_nonterminalSymbolAlts ;
class GGS_AC_semanticsEntity ;
class cPtr_AC_semanticsEntity ;
class GGS_C_grammarForSemantics ;
class cPtr_C_grammarForSemantics ;
class GGS_M_semanticsEntitiesForUse ;
class GGS_AC_typeForGrammarComponent ;
class cPtr_AC_typeForGrammarComponent ;
class GGS_M_typesForGrammarComponent ;
class GGS_AC_instruction_ForGrammar ;
class cPtr_AC_instruction_ForGrammar ;
class GGS_L_ruleSyntaxSignature ;
class GGS_L_grammarsMap ;
class GGS_M_nonterminalSymbolAltsForGrammar ;
class GGS_L_productionRules_ForGrammarComponent ;
class GGS_M_nonTerminalSymbolsForGrammar ;
class GGS_M_syntaxComponents ;
class GGS_T_terminalInstruction_forGrammarComponent ;
class cPtr_T_terminalInstruction_forGrammarComponent ;
class GGS_T_nonterminalInstruction_forGrammarComponent ;
class cPtr_T_nonterminalInstruction_forGrammarComponent ;
class GGS_L_branchList_ForGrammarComponent ;
class GGS_T_selectInstruction_forGrammarComponent ;
class cPtr_T_selectInstruction_forGrammarComponent ;
class GGS_T_repeatInstruction_forGrammarComponent ;
class cPtr_T_repeatInstruction_forGrammarComponent ;
class GGS_L_syntaxComponents_ForGrammar ;
class GGS_M_startSymbolEntityAndMetamodel ;
class GGS_L_identifiers ;
class GGS_typeClassInheritedMessagesMap ;
class GGS_typeSemanticAttributesMap ;
class GGS_insertOrSearchMethodList ;
class GGS_typeDefEntiteUtilisable ;
class cPtr_typeDefEntiteUtilisable ;
class GGS_typeGalgasUndefinedListType ;
class cPtr_typeGalgasUndefinedListType ;
class GGS_typeGalgasListType ;
class cPtr_typeGalgasListType ;
class GGS_domainModifierMap ;
class GGS_domainAttributeMap ;
class GGS_typeGalgasDomainType ;
class cPtr_typeGalgasDomainType ;
class GGS_typeGalgasUndefinedSortedListType ;
class cPtr_typeGalgasUndefinedSortedListType ;
class GGS_typeGalgasSortedListType ;
class cPtr_typeGalgasSortedListType ;
class GGS_typeTableBlocsDeTable ;
class GGS_typeGalgasUndefinedMapType ;
class cPtr_typeGalgasUndefinedMapType ;
class GGS_mapModifierMap ;
class GGS_mapMethodMap ;
class GGS_typeGalgasMapType ;
class cPtr_typeGalgasMapType ;
class GGS_typeGalgasUndefinedMapindexType ;
class cPtr_typeGalgasUndefinedMapindexType ;
class GGS_mapIndexSearchReaderMap ;
class GGS_typeGalgasMapindexType ;
class cPtr_typeGalgasMapindexType ;
class GGS_typeGalgasUndefinedClassType ;
class cPtr_typeGalgasUndefinedClassType ;
class GGS_typeGalgasNewClassType ;
class cPtr_typeGalgasNewClassType ;
class GGS_typeGalgasClassType ;
class cPtr_typeGalgasClassType ;
class GGS_typeEntiteType ;
class cPtr_typeEntiteType ;
class GGS_typeEntiteRoutine ;
class cPtr_typeEntiteRoutine ;
class GGS_typeGalgas_singleReferenceEntity ;
class cPtr_typeGalgas_singleReferenceEntity ;
class GGS_typeGalgas_multipleReferenceEntity ;
class cPtr_typeGalgas_multipleReferenceEntity ;
class GGS_typeEnumMessageMap ;
class GGS_typeGalgas_enum ;
class cPtr_typeGalgas_enum ;
class GGS_M_cli_options ;
class GGS_M_optionComponents ;
class GGS_M_grammarComponents ;
class GGS_M_semanticsComponents ;
class GGS_M_metamodelsComponents ;
class GGS_M_treewalkingComponents ;
class GGS_L_nibAndClassList ;
class GGS_labelForPopUpList ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@L_lstringList'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_lstringList ;

class GGS_L_lstringList : public AC_galgas_list {
  public : typedef elementOf_GGS_L_lstringList element_type ;

//--- Constructor 'emptyList'
  public : static GGS_L_lstringList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_L_lstringList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_lstringList & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_L_lstringList
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_lstringList
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operators () used for method call
  public : const GGS_L_lstringList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_lstring & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_lstring & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_lstring & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_lstring & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_lstringList _operator_concat (const GGS_L_lstringList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           list '@L_signature'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_signature ;

class GGS_L_signature : public AC_galgas_list {
  public : typedef elementOf_GGS_L_signature element_type ;

//--- Constructor 'emptyList'
  public : static GGS_L_signature constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_L_signature constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_formalArgumentPassingMode& argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_signature & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_L_signature
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_signature
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operators () used for method call
  public : const GGS_L_signature * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_formalArgumentPassingMode& _out_0,
                              GGS_lstring & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_formalArgumentPassingMode& _out_0,
                             GGS_lstring & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_formalArgumentPassingMode& _out_0,
                                GGS_lstring & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_formalArgumentPassingMode& _out_0,
                                 GGS_lstring & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_formalArgumentPassingMode& argument_0,
                                const GGS_lstring & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_signature _operator_concat (const GGS_L_signature & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_formalArgumentPassingMode& argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_formalArgumentPassingMode& argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_formalArgumentPassingMode& argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@typeListModel'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListModel ;

class GGS_typeListModel : public AC_galgas_list {
  public : typedef elementOf_GGS_typeListModel element_type ;

//--- Constructor 'emptyList'
  public : static GGS_typeListModel constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_typeListModel constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_typeListModel & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_typeListModel
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_typeListModel
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operators () used for method call
  public : const GGS_typeListModel * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_lstring & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_lstring & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_lstring & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_lstring & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_typeListModel _operator_concat (const GGS_typeListModel & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_TypeModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_TypeModel : public AC_galgas_class {
//--- getPtr
  public : inline cPtr_TypeModel * getPtr (void) const {
    return (cPtr_TypeModel *) mPointer ;
  }
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_TypeModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_TypeModel * operator () (LOCATION_ARGS) const {
      return (cPtr_TypeModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_BoolModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_BoolModel : public GGS_TypeModel {
//--- 'new' constructor
  public : static GGS_BoolModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_BoolModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_BoolModel * operator () (LOCATION_ARGS) const {
      return (cPtr_BoolModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_CharModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_CharModel : public GGS_TypeModel {
//--- 'new' constructor
  public : static GGS_CharModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_CharModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_CharModel * operator () (LOCATION_ARGS) const {
      return (cPtr_CharModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_UIntModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_UIntModel : public GGS_TypeModel {
//--- 'new' constructor
  public : static GGS_UIntModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_UIntModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_UIntModel * operator () (LOCATION_ARGS) const {
      return (cPtr_UIntModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_SIntModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_SIntModel : public GGS_TypeModel {
//--- 'new' constructor
  public : static GGS_SIntModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_SIntModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_SIntModel * operator () (LOCATION_ARGS) const {
      return (cPtr_SIntModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_UInt64Model'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_UInt64Model : public GGS_TypeModel {
//--- 'new' constructor
  public : static GGS_UInt64Model constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_UInt64Model * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_UInt64Model * operator () (LOCATION_ARGS) const {
      return (cPtr_UInt64Model *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_SInt64Model'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_SInt64Model : public GGS_TypeModel {
//--- 'new' constructor
  public : static GGS_SInt64Model constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_SInt64Model * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_SInt64Model * operator () (LOCATION_ARGS) const {
      return (cPtr_SInt64Model *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_DoubleModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_DoubleModel : public GGS_TypeModel {
//--- 'new' constructor
  public : static GGS_DoubleModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_DoubleModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_DoubleModel * operator () (LOCATION_ARGS) const {
      return (cPtr_DoubleModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_StringModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_StringModel : public GGS_TypeModel {
//--- 'new' constructor
  public : static GGS_StringModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_StringModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_StringModel * operator () (LOCATION_ARGS) const {
      return (cPtr_StringModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_LBoolModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LBoolModel : public GGS_TypeModel {
//--- 'new' constructor
  public : static GGS_LBoolModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LBoolModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LBoolModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LBoolModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_LCharModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LCharModel : public GGS_TypeModel {
//--- 'new' constructor
  public : static GGS_LCharModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LCharModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LCharModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LCharModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_LUIntModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LUIntModel : public GGS_TypeModel {
//--- 'new' constructor
  public : static GGS_LUIntModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LUIntModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LUIntModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LUIntModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_LSIntModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LSIntModel : public GGS_TypeModel {
//--- 'new' constructor
  public : static GGS_LSIntModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LSIntModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LSIntModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LSIntModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_LUInt64Model'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LUInt64Model : public GGS_TypeModel {
//--- 'new' constructor
  public : static GGS_LUInt64Model constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LUInt64Model * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LUInt64Model * operator () (LOCATION_ARGS) const {
      return (cPtr_LUInt64Model *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_LSInt64Model'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LSInt64Model : public GGS_TypeModel {
//--- 'new' constructor
  public : static GGS_LSInt64Model constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LSInt64Model * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LSInt64Model * operator () (LOCATION_ARGS) const {
      return (cPtr_LSInt64Model *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_LDoubleModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LDoubleModel : public GGS_TypeModel {
//--- 'new' constructor
  public : static GGS_LDoubleModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LDoubleModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LDoubleModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LDoubleModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_LStringModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LStringModel : public GGS_TypeModel {
//--- 'new' constructor
  public : static GGS_LStringModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LStringModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LStringModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LStringModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_StringsetModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_StringsetModel : public GGS_TypeModel {
//--- 'new' constructor
  public : static GGS_StringsetModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_StringsetModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_StringsetModel * operator () (LOCATION_ARGS) const {
      return (cPtr_StringsetModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_LocationModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LocationModel : public GGS_TypeModel {
//--- 'new' constructor
  public : static GGS_LocationModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LocationModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LocationModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LocationModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_ListModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_ListModel : public GGS_TypeModel {
//--- 'new' constructor
  public : static GGS_ListModel constructor_new (C_Compiler & inLexique,
                                const GGS_typeListModel & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeListModel  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_ListModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_ListModel * operator () (LOCATION_ARGS) const {
      return (cPtr_ListModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_MapModel'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_MapModel : public GGS_TypeModel {
//--- 'new' constructor
  public : static GGS_MapModel constructor_new (C_Compiler & inLexique,
                                const GGS_typeListModel & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeListModel  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_MapModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_MapModel * operator () (LOCATION_ARGS) const {
      return (cPtr_MapModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@enumConstantMap'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumConstantMap ;

class GGS_enumConstantMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_enumConstantMap element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_enumConstantMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_enumConstantMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_enumConstantMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_enumConstantMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_enumConstantMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_enumConstantMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_enumConstantMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_enumConstantMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@enumMessageMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumMessageMap ;

class GGS_enumMessageMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_enumMessageMap element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_enumMessageMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_enumMessageMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_enumMessageMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_enumMessageMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_enumMessageMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_enumMessageMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_enumMessageMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_enumMessageMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_EnumModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_EnumModel : public GGS_TypeModel {
//--- 'new' constructor
  public : static GGS_EnumModel constructor_new (C_Compiler & inLexique,
                                const GGS_enumConstantMap & argument_0,
                                const GGS_enumMessageMap & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_enumConstantMap  reader_mEnumConstantesMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_enumMessageMap  reader_mMessagesMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_EnumModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_EnumModel * operator () (LOCATION_ARGS) const {
      return (cPtr_EnumModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@constructorMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_constructorMap ;

class GGS_constructorMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_constructorMap element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_constructorMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_constructorMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_constructorMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_constructorMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_constructorMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_typeListModel &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_typeListModel   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_typeListModel & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_typeListModel & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_constructorMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_constructorMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_constructorMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                             Map '@readerMap'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_readerMap ;

class GGS_readerMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_readerMap element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_readerMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_readerMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_readerMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_readerMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_readerMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_signature &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_signature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_L_signature & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_L_signature & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_readerMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_readerMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_readerMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Map '@modifierMap'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_modifierMap ;

class GGS_modifierMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_modifierMap element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_modifierMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_modifierMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_modifierMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_modifierMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_modifierMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_signature &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_signature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_L_signature & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_L_signature & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_modifierMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_modifierMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_modifierMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_ExternTypeModel'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_ExternTypeModel : public GGS_TypeModel {
//--- 'new' constructor
  public : static GGS_ExternTypeModel constructor_new (C_Compiler & inLexique,
                                const GGS_constructorMap & argument_0,
                                const GGS_readerMap & argument_1,
                                const GGS_modifierMap & argument_2,
                                const GGS_typeListModel & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_constructorMap  reader_mExternTypeConstructorMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_readerMap  reader_mReaderMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_modifierMap  reader_mModifierMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeListModel  reader_mAddAssignFormalInputArgumentList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_ExternTypeModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_ExternTypeModel * operator () (LOCATION_ARGS) const {
      return (cPtr_ExternTypeModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@classMessageMap'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_classMessageMap ;

class GGS_classMessageMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_classMessageMap element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_classMessageMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_classMessageMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_classMessageMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_classMessageMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_classMessageMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_classMessageMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_classMessageMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_classMessageMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_ClassModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_ClassModel : public GGS_TypeModel {
//--- 'new' constructor
  public : static GGS_ClassModel constructor_new (C_Compiler & inLexique,
                                const GGS_bool& argument_0,
                                const GGS_stringset & argument_1,
                                const GGS_typeListModel & argument_2,
                                const GGS_classMessageMap & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_bool reader_mIsAbstract (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_stringset  reader_mSuperClasses (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeListModel  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_classMessageMap  reader_mMessageMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_ClassModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_ClassModel * operator () (LOCATION_ARGS) const {
      return (cPtr_ClassModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                             Map '@ModelMap'                               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ModelMap ;

class GGS_ModelMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_ModelMap element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_ModelMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_ModelMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_ModelMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_ModelMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_ModelMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_TypeModel &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_TypeModel   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_TypeModel & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_TypeModel & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_ModelMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_ModelMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_ModelMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                             Map '@ActionMap'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ActionMap ;

class GGS_ActionMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_ActionMap element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_ActionMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_ActionMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_ActionMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_ActionMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_ActionMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_signature &  inParameter0,
                                const GGS_bool&  inParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_signature   & outParameter0,
                                GGS_bool  & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_L_signature & inParameter0,
                                   const GGS_bool& inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_L_signature & outParameter0,
                                   GGS_bool& outParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_ActionMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_ActionMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_ActionMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Class for 'localConstantBuildStyleEnum' Enumeration             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_localConstantBuildStyleEnum {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_listStyle, enum_mapStyle, enum_firstIsKeyOtherMapStyle} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const {return mValue ; }

//--- Default constructor
  public : inline GGS_localConstantBuildStyleEnum (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_localConstantBuildStyleEnum (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline uint16 bitCount (void) { return 2 ; }

//--- Is built ?
  public : bool _isBuilt (void) const ;

//--- Construction from GALGAS constructor
  public : static inline GGS_localConstantBuildStyleEnum constructor_listStyle (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_localConstantBuildStyleEnum (enum_listStyle) ;
  }
  public : static inline GGS_localConstantBuildStyleEnum constructor_mapStyle (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_localConstantBuildStyleEnum (enum_mapStyle) ;
  }
  public : static inline GGS_localConstantBuildStyleEnum constructor_firstIsKeyOtherMapStyle (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_localConstantBuildStyleEnum (enum_firstIsKeyOtherMapStyle) ;
  }

//--- Messages

//--- 'description' reader
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;

//--- Drop operation
  public : inline void _drop_operation (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool _operator_isEqual (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool _operator_infOrEqual (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool _operator_supOrEqual (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool _operator_strictInf (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool _operator_strictSup (const GGS_localConstantBuildStyleEnum inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_AC_galgasType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_AC_galgasType : public AC_galgas_class {
//--- getPtr
  public : inline cPtr_AC_galgasType * getPtr (void) const {
    return (cPtr_AC_galgasType *) mPointer ;
  }
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_AC_galgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_galgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_AC_galgasType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@entityPropertyMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_entityPropertyMap ;

class GGS_entityPropertyMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_entityPropertyMap element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_entityPropertyMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_entityPropertyMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_entityPropertyMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_entityPropertyMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_entityPropertyMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_galgasType   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_AC_galgasType & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_AC_galgasType & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_entityPropertyMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_entityPropertyMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_entityPropertyMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@mapEntityMap'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapEntityMap ;

class GGS_mapEntityMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_mapEntityMap element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_mapEntityMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_mapEntityMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_mapEntityMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_mapEntityMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_mapEntityMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lstring &  inParameter0,
                                const GGS_lstring &  inParameter1,
                                const GGS_lstring &  inParameter2,
                                const GGS_bool&  inParameter3 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lstring   & outParameter0,
                                GGS_lstring   & outParameter1,
                                GGS_lstring   & outParameter2,
                                GGS_bool  & outParameter3 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_lstring & inParameter0,
                                   const GGS_lstring & inParameter1,
                                   const GGS_lstring & inParameter2,
                                   const GGS_bool& inParameter3,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_lstring & outParameter0,
                                   GGS_lstring & outParameter1,
                                   GGS_lstring & outParameter2,
                                   GGS_bool& outParameter3,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_mapEntityMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_mapEntityMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_mapEntityMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@typeSuperClassesMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeSuperClassesMap ;

class GGS_typeSuperClassesMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeSuperClassesMap element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_typeSuperClassesMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_typeSuperClassesMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeSuperClassesMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeSuperClassesMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeSuperClassesMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_typeSuperClassesMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_typeSuperClassesMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeSuperClassesMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Map '@entityToImplementMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_entityToImplementMap ;

class GGS_entityToImplementMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_entityToImplementMap element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_entityToImplementMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_entityToImplementMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_entityToImplementMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_entityToImplementMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_entityToImplementMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_entityPropertyMap &  inParameter0,
                                const GGS_bool&  inParameter1,
                                const GGS_entityPropertyMap &  inParameter2,
                                const GGS_lstring &  inParameter3,
                                const GGS_typeSuperClassesMap &  inParameter4,
                                const GGS_typeListeAttributsSemantiques &  inParameter5,
                                const GGS_string&  inParameter6,
                                const GGS_uint &  inParameter7 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_entityPropertyMap   & outParameter0,
                                GGS_bool  & outParameter1,
                                GGS_entityPropertyMap   & outParameter2,
                                GGS_lstring   & outParameter3,
                                GGS_typeSuperClassesMap   & outParameter4,
                                GGS_typeListeAttributsSemantiques   & outParameter5,
                                GGS_string  & outParameter6,
                                GGS_uint   & outParameter7 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_entityPropertyMap & inParameter0,
                                   const GGS_bool& inParameter1,
                                   const GGS_entityPropertyMap & inParameter2,
                                   const GGS_lstring & inParameter3,
                                   const GGS_typeSuperClassesMap & inParameter4,
                                   const GGS_typeListeAttributsSemantiques & inParameter5,
                                   const GGS_string& inParameter6,
                                   const GGS_uint & inParameter7,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_entityPropertyMap & outParameter0,
                                   GGS_bool& outParameter1,
                                   GGS_entityPropertyMap & outParameter2,
                                   GGS_lstring & outParameter3,
                                   GGS_typeSuperClassesMap & outParameter4,
                                   GGS_typeListeAttributsSemantiques & outParameter5,
                                   GGS_string& outParameter6,
                                   GGS_uint & outParameter7,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_entityToImplementMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_entityToImplementMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_entityToImplementMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  list '@typeListeAttributsSemantiques'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListeAttributsSemantiques ;

class GGS_typeListeAttributsSemantiques : public AC_galgas_list {
  public : typedef elementOf_GGS_typeListeAttributsSemantiques element_type ;

//--- Constructor 'emptyList'
  public : static GGS_typeListeAttributsSemantiques constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_typeListeAttributsSemantiques constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_typeListeAttributsSemantiques & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_typeListeAttributsSemantiques
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_typeListeAttributsSemantiques
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operators () used for method call
  public : const GGS_typeListeAttributsSemantiques * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_AC_galgasType & _out_0,
                              GGS_lstring & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_AC_galgasType & _out_0,
                             GGS_lstring & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_AC_galgasType & _out_0,
                                GGS_lstring & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_AC_galgasType & _out_0,
                                 GGS_lstring & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_typeListeAttributsSemantiques _operator_concat (const GGS_typeListeAttributsSemantiques & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@typeTypesList'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTypesList ;

class GGS_typeTypesList : public AC_galgas_list {
  public : typedef elementOf_GGS_typeTypesList element_type ;

//--- Constructor 'emptyList'
  public : static GGS_typeTypesList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_typeTypesList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_typeTypesList & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_typeTypesList
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_typeTypesList
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operators () used for method call
  public : const GGS_typeTypesList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_AC_galgasType & _out_0,
                              GGS_location & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_AC_galgasType & _out_0,
                             GGS_location & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_AC_galgasType & _out_0,
                                GGS_location & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_AC_galgasType & _out_0,
                                 GGS_location & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_location & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_typeTypesList _operator_concat (const GGS_typeTypesList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_AC_galgasType & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_AC_galgasType & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@L_EXsignature'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_EXsignature ;

class GGS_L_EXsignature : public AC_galgas_list {
  public : typedef elementOf_GGS_L_EXsignature element_type ;

//--- Constructor 'emptyList'
  public : static GGS_L_EXsignature constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_L_EXsignature constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_formalArgumentPassingMode& argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_EXsignature & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_L_EXsignature
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_EXsignature
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operators () used for method call
  public : const GGS_L_EXsignature * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_AC_galgasType & _out_0,
                              GGS_formalArgumentPassingMode& _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_AC_galgasType & _out_0,
                             GGS_formalArgumentPassingMode& _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_AC_galgasType & _out_0,
                                GGS_formalArgumentPassingMode& _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_AC_galgasType & _out_0,
                                 GGS_formalArgumentPassingMode& _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_formalArgumentPassingMode& argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_EXsignature _operator_concat (const GGS_L_EXsignature & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_formalArgumentPassingMode& argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_AC_galgasType & argument_0,
                                const GGS_formalArgumentPassingMode& argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_AC_galgasType & argument_0,
                                const GGS_formalArgumentPassingMode& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@L_actualParametersSignature'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_actualParametersSignature ;

class GGS_L_actualParametersSignature : public AC_galgas_list {
  public : typedef elementOf_GGS_L_actualParametersSignature element_type ;

//--- Constructor 'emptyList'
  public : static GGS_L_actualParametersSignature constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_L_actualParametersSignature constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_actualParametersPassingMode& argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_actualParametersSignature & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_L_actualParametersSignature
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_actualParametersSignature
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operators () used for method call
  public : const GGS_L_actualParametersSignature * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_AC_galgasType & _out_0,
                              GGS_actualParametersPassingMode& _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_AC_galgasType & _out_0,
                             GGS_actualParametersPassingMode& _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_AC_galgasType & _out_0,
                                GGS_actualParametersPassingMode& _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_AC_galgasType & _out_0,
                                 GGS_actualParametersPassingMode& _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_actualParametersPassingMode& argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_actualParametersSignature _operator_concat (const GGS_L_actualParametersSignature & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_actualParametersPassingMode& argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_AC_galgasType & argument_0,
                                const GGS_actualParametersPassingMode& argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_AC_galgasType & argument_0,
                                const GGS_actualParametersPassingMode& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@M_accessors_map'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_accessors_map ;

class GGS_M_accessors_map : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_accessors_map element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_accessors_map & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_accessors_map & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_accessors_map * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_accessors_map * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_accessors_map constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0,
                                const GGS_AC_galgasType &  inParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0,
                                GGS_AC_galgasType   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_L_EXsignature & inParameter0,
                                   const GGS_AC_galgasType & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_L_EXsignature & outParameter0,
                                   GGS_AC_galgasType & outParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_accessors_map constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_accessors_map & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_accessors_map reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_typeGalgas_jokerInParameterList'             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_jokerInParameterList : public GGS_AC_galgasType {
//--- 'new' constructor
  public : static GGS_typeGalgas_jokerInParameterList constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_jokerInParameterList * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_jokerInParameterList * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_jokerInParameterList *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_bool'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_bool : public GGS_AC_galgasType {
//--- 'new' constructor
  public : static GGS_typeGalgas_bool constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_bool * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_bool * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_bool *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_uint'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_uint : public GGS_AC_galgasType {
//--- 'new' constructor
  public : static GGS_typeGalgas_uint constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_uint * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_uint * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_uint *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_char'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_char : public GGS_AC_galgasType {
//--- 'new' constructor
  public : static GGS_typeGalgas_char constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_char * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_char * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_char *) mPointer ;
    }
  #endif
} ;

void routine_extern_build_stringlist_type (C_Compiler &,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_string'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_string : public GGS_AC_galgasType {
//--- 'new' constructor
  public : static GGS_typeGalgas_string constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_string * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_string * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_string *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_sint'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_sint : public GGS_AC_galgasType {
//--- 'new' constructor
  public : static GGS_typeGalgas_sint constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_sint * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_sint * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_sint *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_sint64'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_sint64 : public GGS_AC_galgasType {
//--- 'new' constructor
  public : static GGS_typeGalgas_sint64 constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_sint64 * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_sint64 * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_sint64 *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_uint64'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_uint64 : public GGS_AC_galgasType {
//--- 'new' constructor
  public : static GGS_typeGalgas_uint64 constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_uint64 * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_uint64 * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_uint64 *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_double'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_double : public GGS_AC_galgasType {
//--- 'new' constructor
  public : static GGS_typeGalgas_double constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_double * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_double * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_double *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeGalgas_binaryset'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_binaryset : public GGS_AC_galgasType {
//--- 'new' constructor
  public : static GGS_typeGalgas_binaryset constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_binaryset * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_binaryset * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_binaryset *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_C_galgasPrimitiveType'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_C_galgasPrimitiveType : public GGS_AC_galgasType {
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_galgasPrimitiveType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_galgasPrimitiveType * operator () (LOCATION_ARGS) const {
      return (cPtr_C_galgasPrimitiveType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgas_location'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_location : public GGS_C_galgasPrimitiveType {
//--- 'new' constructor
  public : static GGS_typeGalgas_location constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_location * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_location * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_location *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgas_lstring'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_lstring : public GGS_C_galgasPrimitiveType {
//--- 'new' constructor
  public : static GGS_typeGalgas_lstring constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_lstring * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_lstring * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_lstring *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_lchar'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_lchar : public GGS_C_galgasPrimitiveType {
//--- 'new' constructor
  public : static GGS_typeGalgas_lchar constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_lchar * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_lchar * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_lchar *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_lbool'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_lbool : public GGS_C_galgasPrimitiveType {
//--- 'new' constructor
  public : static GGS_typeGalgas_lbool constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_lbool * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_lbool * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_lbool *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_luint'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_luint : public GGS_C_galgasPrimitiveType {
//--- 'new' constructor
  public : static GGS_typeGalgas_luint constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_luint * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_luint * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_luint *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgas_luint64'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_luint64 : public GGS_C_galgasPrimitiveType {
//--- 'new' constructor
  public : static GGS_typeGalgas_luint64 constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_luint64 * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_luint64 * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_luint64 *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_lsint'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_lsint : public GGS_C_galgasPrimitiveType {
//--- 'new' constructor
  public : static GGS_typeGalgas_lsint constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_lsint * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_lsint * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_lsint *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgas_lsint64'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_lsint64 : public GGS_C_galgasPrimitiveType {
//--- 'new' constructor
  public : static GGS_typeGalgas_lsint64 constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_lsint64 * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_lsint64 * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_lsint64 *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgas_ldouble'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_ldouble : public GGS_C_galgasPrimitiveType {
//--- 'new' constructor
  public : static GGS_typeGalgas_ldouble constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_ldouble * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_ldouble * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_ldouble *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeGalgas_stringset'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_stringset : public GGS_AC_galgasType {
//--- 'new' constructor
  public : static GGS_typeGalgas_stringset constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_stringset * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_stringset * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_stringset *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@typeTableMethodes'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableMethodes ;

class GGS_typeTableMethodes : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeTableMethodes element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_typeTableMethodes & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_typeTableMethodes & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeTableMethodes * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeTableMethodes * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeTableMethodes constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_L_EXsignature & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_L_EXsignature & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_typeTableMethodes constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_typeTableMethodes & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeTableMethodes reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_typeGalgasUndefinedExternType'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedExternType : public GGS_AC_galgasType {
//--- 'new' constructor
  public : static GGS_typeGalgasUndefinedExternType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mGalgasClassName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mCppClassName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasUndefinedExternType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasUndefinedExternType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasUndefinedExternType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map '@M_externTypeConstructorMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_externTypeConstructorMap ;

class GGS_M_externTypeConstructorMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_externTypeConstructorMap element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_externTypeConstructorMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_externTypeConstructorMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_externTypeConstructorMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_externTypeConstructorMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_externTypeConstructorMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_typeListeAttributsSemantiques &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_typeListeAttributsSemantiques   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_typeListeAttributsSemantiques & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_typeListeAttributsSemantiques & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_externTypeConstructorMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_externTypeConstructorMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_externTypeConstructorMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeGalgasExternType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasExternType : public GGS_typeGalgasUndefinedExternType {
//--- 'new' constructor
  public : static GGS_typeGalgasExternType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_M_externTypeConstructorMap & argument_2,
                                const GGS_typeTableMethodes & argument_3,
                                const GGS_typeTableMethodes & argument_4,
                                const GGS_bool& argument_5,
                                const GGS_typeListeAttributsSemantiques & argument_6
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_M_externTypeConstructorMap  reader_mConstructorMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeTableMethodes  reader_mModifiersMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeTableMethodes  reader_mReadersInInstructionMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mAcceptAddAssignOperatorCall (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeListeAttributsSemantiques  reader_mAddAssignOperatorCallTypeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasExternType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasExternType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasExternType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map '@M_terminalSymbolsMapForUse'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_terminalSymbolsMapForUse ;

class GGS_M_terminalSymbolsMapForUse : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_terminalSymbolsMapForUse element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_terminalSymbolsMapForUse & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_terminalSymbolsMapForUse & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_terminalSymbolsMapForUse * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_terminalSymbolsMapForUse * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_terminalSymbolsMapForUse constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_typeListeAttributsSemantiques &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_typeListeAttributsSemantiques   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- 'searchKeyGetID' Search Method
  public : void method_searchKeyGetID (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                GGS_typeListeAttributsSemantiques   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_typeListeAttributsSemantiques & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_typeListeAttributsSemantiques & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_terminalSymbolsMapForUse constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_terminalSymbolsMapForUse & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_terminalSymbolsMapForUse reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@M_lexiqueComponents'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_lexiqueComponents ;

class GGS_M_lexiqueComponents : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_lexiqueComponents element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_lexiqueComponents & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_lexiqueComponents & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_lexiqueComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_lexiqueComponents * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_lexiqueComponents constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_terminalSymbolsMapForUse &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_terminalSymbolsMapForUse   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_M_terminalSymbolsMapForUse & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_M_terminalSymbolsMapForUse & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_lexiqueComponents constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_lexiqueComponents & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_lexiqueComponents reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@typeTableEnAvant'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableEnAvant ;

class GGS_typeTableEnAvant : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeTableEnAvant element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_typeTableEnAvant & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_typeTableEnAvant & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeTableEnAvant * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeTableEnAvant * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeTableEnAvant constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_galgasType   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_AC_galgasType & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_AC_galgasType & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_typeTableEnAvant constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_typeTableEnAvant & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeTableEnAvant reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Map '@M_nonterminalSymbolAlts'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonterminalSymbolAlts ;

class GGS_M_nonterminalSymbolAlts : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_nonterminalSymbolAlts element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_nonterminalSymbolAlts & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_nonterminalSymbolAlts & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_nonterminalSymbolAlts * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_nonterminalSymbolAlts * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_nonterminalSymbolAlts constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0,
                                const GGS_lstring &  inParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0,
                                GGS_lstring   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_L_EXsignature & inParameter0,
                                   const GGS_lstring & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_L_EXsignature & outParameter0,
                                   GGS_lstring & outParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_nonterminalSymbolAlts constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_nonterminalSymbolAlts & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_nonterminalSymbolAlts reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_AC_semanticsEntity'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_AC_semanticsEntity : public AC_galgas_class {
//--- getPtr
  public : inline cPtr_AC_semanticsEntity * getPtr (void) const {
    return (cPtr_AC_semanticsEntity *) mPointer ;
  }
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'messageTypeEntite' message
  public : GGS_string reader_messageTypeEntite (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_AC_semanticsEntity * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_semanticsEntity * operator () (LOCATION_ARGS) const {
      return (cPtr_AC_semanticsEntity *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_C_grammarForSemantics'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_C_grammarForSemantics : public GGS_AC_semanticsEntity {
//--- 'new' constructor
  public : static GGS_C_grammarForSemantics constructor_new (C_Compiler & inLexique,
                                const GGS_M_nonterminalSymbolAlts & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_M_nonterminalSymbolAlts  reader_mGrammarAltMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mLexiqueClassName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- 'messageTypeEntite' message
  public : GGS_string reader_messageTypeEntite (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_grammarForSemantics * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_grammarForSemantics * operator () (LOCATION_ARGS) const {
      return (cPtr_C_grammarForSemantics *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Map '@M_semanticsEntitiesForUse'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_semanticsEntitiesForUse ;

class GGS_M_semanticsEntitiesForUse : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_semanticsEntitiesForUse element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_semanticsEntitiesForUse & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_semanticsEntitiesForUse & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_semanticsEntitiesForUse * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_semanticsEntitiesForUse * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_semanticsEntitiesForUse constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_semanticsEntity &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_semanticsEntity   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_AC_semanticsEntity & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_AC_semanticsEntity & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_semanticsEntitiesForUse constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_semanticsEntitiesForUse & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_semanticsEntitiesForUse reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_AC_typeForGrammarComponent'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_AC_typeForGrammarComponent : public AC_galgas_class {
//--- getPtr
  public : inline cPtr_AC_typeForGrammarComponent * getPtr (void) const {
    return (cPtr_AC_typeForGrammarComponent *) mPointer ;
  }
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'typeForGrammarComponentMessage' message
  public : GGS_string reader_typeForGrammarComponentMessage (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_AC_typeForGrammarComponent * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_typeForGrammarComponent * operator () (LOCATION_ARGS) const {
      return (cPtr_AC_typeForGrammarComponent *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map '@M_typesForGrammarComponent'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_typesForGrammarComponent ;

class GGS_M_typesForGrammarComponent : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_typesForGrammarComponent element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_typesForGrammarComponent & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_typesForGrammarComponent & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_typesForGrammarComponent * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_typesForGrammarComponent * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_typesForGrammarComponent constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_typeForGrammarComponent &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_typeForGrammarComponent   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_AC_typeForGrammarComponent & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_AC_typeForGrammarComponent & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_typesForGrammarComponent constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_typesForGrammarComponent & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_typesForGrammarComponent reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

void routine_checkSignature_ForGrammarComponent (C_Compiler &,
                                const GGS_L_signature  &,
                                const GGS_L_signature  &,
                                const GGS_location  &,
                                const GGS_location  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_AC_instruction_ForGrammar'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_AC_instruction_ForGrammar : public AC_galgas_class {
//--- getPtr
  public : inline cPtr_AC_instruction_ForGrammar * getPtr (void) const {
    return (cPtr_AC_instruction_ForGrammar *) mPointer ;
  }
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mStartLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_AC_instruction_ForGrammar * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_instruction_ForGrammar * operator () (LOCATION_ARGS) const {
      return (cPtr_AC_instruction_ForGrammar *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@L_ruleSyntaxSignature'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_ruleSyntaxSignature ;

class GGS_L_ruleSyntaxSignature : public AC_galgas_list {
  public : typedef elementOf_GGS_L_ruleSyntaxSignature element_type ;

//--- Constructor 'emptyList'
  public : static GGS_L_ruleSyntaxSignature constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_L_ruleSyntaxSignature constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_AC_instruction_ForGrammar & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_ruleSyntaxSignature & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_L_ruleSyntaxSignature
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_ruleSyntaxSignature
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operators () used for method call
  public : const GGS_L_ruleSyntaxSignature * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_AC_instruction_ForGrammar & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_AC_instruction_ForGrammar & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_AC_instruction_ForGrammar & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_AC_instruction_ForGrammar & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_AC_instruction_ForGrammar & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_ruleSyntaxSignature _operator_concat (const GGS_L_ruleSyntaxSignature & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_AC_instruction_ForGrammar & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_AC_instruction_ForGrammar & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_AC_instruction_ForGrammar & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@L_grammarsMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_grammarsMap ;

class GGS_L_grammarsMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_L_grammarsMap element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_L_grammarsMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_L_grammarsMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_L_grammarsMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_L_grammarsMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_L_grammarsMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_nonterminalSymbolAlts &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_nonterminalSymbolAlts   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_M_nonterminalSymbolAlts & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_M_nonterminalSymbolAlts & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_L_grammarsMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_L_grammarsMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_L_grammarsMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Map '@M_nonterminalSymbolAltsForGrammar'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonterminalSymbolAltsForGrammar ;

class GGS_M_nonterminalSymbolAltsForGrammar : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_nonterminalSymbolAltsForGrammar element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_nonterminalSymbolAltsForGrammar & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_nonterminalSymbolAltsForGrammar & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_nonterminalSymbolAltsForGrammar * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_nonterminalSymbolAltsForGrammar * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_nonterminalSymbolAltsForGrammar constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_signature &  inParameter0,
                                const GGS_lstring &  inParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_signature   & outParameter0,
                                GGS_lstring   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_L_signature & inParameter0,
                                   const GGS_lstring & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_L_signature & outParameter0,
                                   GGS_lstring & outParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_nonterminalSymbolAltsForGrammar constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_nonterminalSymbolAltsForGrammar & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_nonterminalSymbolAltsForGrammar reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              list '@L_productionRules_ForGrammarComponent'                *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_productionRules_ForGrammarComponent ;

class GGS_L_productionRules_ForGrammarComponent : public AC_galgas_list {
  public : typedef elementOf_GGS_L_productionRules_ForGrammarComponent element_type ;

//--- Constructor 'emptyList'
  public : static GGS_L_productionRules_ForGrammarComponent constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_L_productionRules_ForGrammarComponent constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_L_ruleSyntaxSignature & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_productionRules_ForGrammarComponent & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_L_productionRules_ForGrammarComponent
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_productionRules_ForGrammarComponent
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operators () used for method call
  public : const GGS_L_productionRules_ForGrammarComponent * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_lstring & _out_0,
                              GGS_uint & _out_1,
                              GGS_L_ruleSyntaxSignature & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_lstring & _out_0,
                             GGS_uint & _out_1,
                             GGS_L_ruleSyntaxSignature & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_lstring & _out_0,
                                GGS_uint & _out_1,
                                GGS_L_ruleSyntaxSignature & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_uint & _out_1,
                                 GGS_L_ruleSyntaxSignature & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_L_ruleSyntaxSignature & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_productionRules_ForGrammarComponent _operator_concat (const GGS_L_productionRules_ForGrammarComponent & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_L_ruleSyntaxSignature & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_L_ruleSyntaxSignature & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_L_ruleSyntaxSignature & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Map '@M_nonTerminalSymbolsForGrammar'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonTerminalSymbolsForGrammar ;

class GGS_M_nonTerminalSymbolsForGrammar : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_nonTerminalSymbolsForGrammar element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_nonTerminalSymbolsForGrammar & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_nonTerminalSymbolsForGrammar & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_nonTerminalSymbolsForGrammar * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_nonTerminalSymbolsForGrammar * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_nonTerminalSymbolsForGrammar constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_nonterminalSymbolAltsForGrammar &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_nonterminalSymbolAltsForGrammar   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- 'searchKeyGetID' Search Method
  public : void method_searchKeyGetID (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                GGS_M_nonterminalSymbolAltsForGrammar   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_M_nonterminalSymbolAltsForGrammar & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_M_nonterminalSymbolAltsForGrammar & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_nonTerminalSymbolsForGrammar constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_nonTerminalSymbolsForGrammar & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_nonTerminalSymbolsForGrammar reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@M_syntaxComponents'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_syntaxComponents ;

class GGS_M_syntaxComponents : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_syntaxComponents element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_syntaxComponents & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_syntaxComponents & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_syntaxComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_syntaxComponents * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_syntaxComponents constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_nonTerminalSymbolsForGrammar &  inParameter0,
                                const GGS_L_productionRules_ForGrammarComponent &  inParameter1,
                                const GGS_lstring &  inParameter2 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_nonTerminalSymbolsForGrammar   & outParameter0,
                                GGS_L_productionRules_ForGrammarComponent   & outParameter1,
                                GGS_lstring   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_M_nonTerminalSymbolsForGrammar & inParameter0,
                                   const GGS_L_productionRules_ForGrammarComponent & inParameter1,
                                   const GGS_lstring & inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_M_nonTerminalSymbolsForGrammar & outParameter0,
                                   GGS_L_productionRules_ForGrammarComponent & outParameter1,
                                   GGS_lstring & outParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_syntaxComponents constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_syntaxComponents & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_syntaxComponents reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//       GALGAS class 'GGS_T_terminalInstruction_forGrammarComponent'        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_T_terminalInstruction_forGrammarComponent : public GGS_AC_instruction_ForGrammar {
//--- 'new' constructor
  public : static GGS_T_terminalInstruction_forGrammarComponent constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_uint & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTerminalSymbolName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mTerminalSymbolIndex (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_T_terminalInstruction_forGrammarComponent * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_T_terminalInstruction_forGrammarComponent * operator () (LOCATION_ARGS) const {
      return (cPtr_T_terminalInstruction_forGrammarComponent *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//     GALGAS class 'GGS_T_nonterminalInstruction_forGrammarComponent'       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_T_nonterminalInstruction_forGrammarComponent : public GGS_AC_instruction_ForGrammar {
//--- 'new' constructor
  public : static GGS_T_nonterminalInstruction_forGrammarComponent constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_uint & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mNonterminalSymbolName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mNonterminalSymbolIndex (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_T_nonterminalInstruction_forGrammarComponent * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_T_nonterminalInstruction_forGrammarComponent * operator () (LOCATION_ARGS) const {
      return (cPtr_T_nonterminalInstruction_forGrammarComponent *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 list '@L_branchList_ForGrammarComponent'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_branchList_ForGrammarComponent ;

class GGS_L_branchList_ForGrammarComponent : public AC_galgas_list {
  public : typedef elementOf_GGS_L_branchList_ForGrammarComponent element_type ;

//--- Constructor 'emptyList'
  public : static GGS_L_branchList_ForGrammarComponent constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_L_branchList_ForGrammarComponent constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_L_ruleSyntaxSignature & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_branchList_ForGrammarComponent & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_L_branchList_ForGrammarComponent
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_branchList_ForGrammarComponent
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operators () used for method call
  public : const GGS_L_branchList_ForGrammarComponent * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_L_ruleSyntaxSignature & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_L_ruleSyntaxSignature & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_L_ruleSyntaxSignature & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_L_ruleSyntaxSignature & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_L_ruleSyntaxSignature & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_branchList_ForGrammarComponent _operator_concat (const GGS_L_branchList_ForGrammarComponent & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_L_ruleSyntaxSignature & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_L_ruleSyntaxSignature & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_L_ruleSyntaxSignature & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//        GALGAS class 'GGS_T_selectInstruction_forGrammarComponent'         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_T_selectInstruction_forGrammarComponent : public GGS_AC_instruction_ForGrammar {
//--- 'new' constructor
  public : static GGS_T_selectInstruction_forGrammarComponent constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_L_branchList_ForGrammarComponent & argument_1,
                                const GGS_uint & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_L_branchList_ForGrammarComponent  reader_mSelectList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mAddedNonterminalmSymbolIndex (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_T_selectInstruction_forGrammarComponent * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_T_selectInstruction_forGrammarComponent * operator () (LOCATION_ARGS) const {
      return (cPtr_T_selectInstruction_forGrammarComponent *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//        GALGAS class 'GGS_T_repeatInstruction_forGrammarComponent'         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_T_repeatInstruction_forGrammarComponent : public GGS_AC_instruction_ForGrammar {
//--- 'new' constructor
  public : static GGS_T_repeatInstruction_forGrammarComponent constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_L_branchList_ForGrammarComponent & argument_1,
                                const GGS_uint & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_L_branchList_ForGrammarComponent  reader_mRepeatList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mAddedNonterminalmSymbolIndex (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_T_repeatInstruction_forGrammarComponent * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_T_repeatInstruction_forGrammarComponent * operator () (LOCATION_ARGS) const {
      return (cPtr_T_repeatInstruction_forGrammarComponent *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  list '@L_syntaxComponents_ForGrammar'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_syntaxComponents_ForGrammar ;

class GGS_L_syntaxComponents_ForGrammar : public AC_galgas_list {
  public : typedef elementOf_GGS_L_syntaxComponents_ForGrammar element_type ;

//--- Constructor 'emptyList'
  public : static GGS_L_syntaxComponents_ForGrammar constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_L_syntaxComponents_ForGrammar constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_M_nonTerminalSymbolsForGrammar & argument_0,
                                const GGS_L_productionRules_ForGrammarComponent & argument_1,
                                const GGS_lstring & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_syntaxComponents_ForGrammar & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_L_syntaxComponents_ForGrammar
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_syntaxComponents_ForGrammar
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operators () used for method call
  public : const GGS_L_syntaxComponents_ForGrammar * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_M_nonTerminalSymbolsForGrammar & _out_0,
                              GGS_L_productionRules_ForGrammarComponent & _out_1,
                              GGS_lstring & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_M_nonTerminalSymbolsForGrammar & _out_0,
                             GGS_L_productionRules_ForGrammarComponent & _out_1,
                             GGS_lstring & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_M_nonTerminalSymbolsForGrammar & _out_0,
                                GGS_L_productionRules_ForGrammarComponent & _out_1,
                                GGS_lstring & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_M_nonTerminalSymbolsForGrammar & _out_0,
                                 GGS_L_productionRules_ForGrammarComponent & _out_1,
                                 GGS_lstring & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_M_nonTerminalSymbolsForGrammar & argument_0,
                                const GGS_L_productionRules_ForGrammarComponent & argument_1,
                                const GGS_lstring & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_syntaxComponents_ForGrammar _operator_concat (const GGS_L_syntaxComponents_ForGrammar & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_M_nonTerminalSymbolsForGrammar & argument_0,
                                const GGS_L_productionRules_ForGrammarComponent & argument_1,
                                const GGS_lstring & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_M_nonTerminalSymbolsForGrammar & argument_0,
                                const GGS_L_productionRules_ForGrammarComponent & argument_1,
                                const GGS_lstring & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_M_nonTerminalSymbolsForGrammar & argument_0,
                                const GGS_L_productionRules_ForGrammarComponent & argument_1,
                                const GGS_lstring & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Map '@M_startSymbolEntityAndMetamodel'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_startSymbolEntityAndMetamodel ;

class GGS_M_startSymbolEntityAndMetamodel : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_startSymbolEntityAndMetamodel element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_startSymbolEntityAndMetamodel & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_startSymbolEntityAndMetamodel & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_startSymbolEntityAndMetamodel * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_startSymbolEntityAndMetamodel * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_startSymbolEntityAndMetamodel constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lstring &  inParameter0,
                                const GGS_lstring &  inParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lstring   & outParameter0,
                                GGS_lstring   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_lstring & inParameter0,
                                   const GGS_lstring & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_lstring & outParameter0,
                                   GGS_lstring & outParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_startSymbolEntityAndMetamodel constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_startSymbolEntityAndMetamodel & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_startSymbolEntityAndMetamodel reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@L_identifiers'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_identifiers ;

class GGS_L_identifiers : public AC_galgas_list {
  public : typedef elementOf_GGS_L_identifiers element_type ;

//--- Constructor 'emptyList'
  public : static GGS_L_identifiers constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_L_identifiers constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_identifiers & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_L_identifiers
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_identifiers
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operators () used for method call
  public : const GGS_L_identifiers * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_lstring & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_lstring & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_lstring & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_lstring & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_identifiers _operator_concat (const GGS_L_identifiers & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Map '@typeClassInheritedMessagesMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeClassInheritedMessagesMap ;

class GGS_typeClassInheritedMessagesMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeClassInheritedMessagesMap element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_typeClassInheritedMessagesMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_typeClassInheritedMessagesMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeClassInheritedMessagesMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeClassInheritedMessagesMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeClassInheritedMessagesMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_typeClassInheritedMessagesMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_typeClassInheritedMessagesMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeClassInheritedMessagesMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Map '@typeSemanticAttributesMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeSemanticAttributesMap ;

class GGS_typeSemanticAttributesMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeSemanticAttributesMap element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_typeSemanticAttributesMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_typeSemanticAttributesMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeSemanticAttributesMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeSemanticAttributesMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeSemanticAttributesMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_galgasType   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_AC_galgasType & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_AC_galgasType & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_typeSemanticAttributesMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_typeSemanticAttributesMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeSemanticAttributesMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@insertOrSearchMethodList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_insertOrSearchMethodList ;

class GGS_insertOrSearchMethodList : public AC_galgas_list {
  public : typedef elementOf_GGS_insertOrSearchMethodList element_type ;

//--- Constructor 'emptyList'
  public : static GGS_insertOrSearchMethodList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_insertOrSearchMethodList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_bool& argument_2,
                                const GGS_string& argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_insertOrSearchMethodList & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_insertOrSearchMethodList
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_insertOrSearchMethodList
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operators () used for method call
  public : const GGS_insertOrSearchMethodList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_lstring & _out_0,
                              GGS_string& _out_1,
                              GGS_bool& _out_2,
                              GGS_string& _out_3
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_lstring & _out_0,
                             GGS_string& _out_1,
                             GGS_bool& _out_2,
                             GGS_string& _out_3
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_lstring & _out_0,
                                GGS_string& _out_1,
                                GGS_bool& _out_2,
                                GGS_string& _out_3
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_string& _out_1,
                                 GGS_bool& _out_2,
                                 GGS_string& _out_3
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_bool& argument_2,
                                const GGS_string& argument_3) ;
//--- Handling '.' GALGAS operator
  public : GGS_insertOrSearchMethodList _operator_concat (const GGS_insertOrSearchMethodList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_bool& argument_2,
                                const GGS_string& argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_bool& argument_2,
                                const GGS_string& argument_3
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_bool& argument_2,
                                const GGS_string& argument_3
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeDefEntiteUtilisable'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeDefEntiteUtilisable : public AC_galgas_class {
//--- getPtr
  public : inline cPtr_typeDefEntiteUtilisable * getPtr (void) const {
    return (cPtr_typeDefEntiteUtilisable *) mPointer ;
  }
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- 'messageTypeEntite' message
  public : GGS_string reader_messageTypeEntite (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeDefEntiteUtilisable * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeDefEntiteUtilisable * operator () (LOCATION_ARGS) const {
      return (cPtr_typeDefEntiteUtilisable *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_typeGalgasUndefinedListType'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedListType : public GGS_AC_galgasType {
//--- 'new' constructor
  public : static GGS_typeGalgasUndefinedListType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mListTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasUndefinedListType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasUndefinedListType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasUndefinedListType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgasListType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasListType : public GGS_typeGalgasUndefinedListType {
//--- 'new' constructor
  public : static GGS_typeGalgasListType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_L_EXsignature & argument_2,
                                const GGS_L_EXsignature & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeListeAttributsSemantiques  reader_mNonExternAttributesList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_L_EXsignature  reader_mExtractSignature (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_L_EXsignature  reader_mInputSignature (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasListType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasListType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasListType *) mPointer ;
    }
  #endif
} ;

void routine_build_uint64list_type (C_Compiler &,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

void routine_build_stringlist_type (C_Compiler &,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

void routine_build_lstringlist_type (C_Compiler &,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@domainModifierMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_domainModifierMap ;

class GGS_domainModifierMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_domainModifierMap element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_domainModifierMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_domainModifierMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_domainModifierMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_domainModifierMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_domainModifierMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_L_EXsignature & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_L_EXsignature & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_domainModifierMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_domainModifierMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_domainModifierMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@domainAttributeMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_domainAttributeMap ;

class GGS_domainAttributeMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_domainAttributeMap element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_domainAttributeMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_domainAttributeMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_domainAttributeMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_domainAttributeMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_domainAttributeMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_domainAttributeMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_domainAttributeMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_domainAttributeMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeGalgasDomainType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasDomainType : public GGS_AC_galgasType {
//--- 'new' constructor
  public : static GGS_typeGalgasDomainType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_domainAttributeMap & argument_1,
                                const GGS_domainModifierMap & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mDomainTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_domainAttributeMap  reader_mAttributeMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_domainModifierMap  reader_mDomainModifierMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasDomainType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasDomainType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasDomainType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS class 'GGS_typeGalgasUndefinedSortedListType'            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedSortedListType : public GGS_AC_galgasType {
//--- 'new' constructor
  public : static GGS_typeGalgasUndefinedSortedListType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mListTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasUndefinedSortedListType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasUndefinedSortedListType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasUndefinedSortedListType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeGalgasSortedListType'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasSortedListType : public GGS_typeGalgasUndefinedSortedListType {
//--- 'new' constructor
  public : static GGS_typeGalgasSortedListType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_L_EXsignature & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeListeAttributsSemantiques  reader_mNonExternAttributesList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_L_EXsignature  reader_mExtractSignature (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasSortedListType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasSortedListType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasSortedListType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Map '@typeTableBlocsDeTable'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableBlocsDeTable ;

class GGS_typeTableBlocsDeTable : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeTableBlocsDeTable element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_typeTableBlocsDeTable & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_typeTableBlocsDeTable & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeTableBlocsDeTable * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeTableBlocsDeTable * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeTableBlocsDeTable constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0,
                                const GGS_L_EXsignature &  inParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0,
                                GGS_L_EXsignature   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_L_EXsignature & inParameter0,
                                   const GGS_L_EXsignature & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_L_EXsignature & outParameter0,
                                   GGS_L_EXsignature & outParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_typeTableBlocsDeTable constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_typeTableBlocsDeTable & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeTableBlocsDeTable reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_typeGalgasUndefinedMapType'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedMapType : public GGS_AC_galgasType {
//--- 'new' constructor
  public : static GGS_typeGalgasUndefinedMapType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMapTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasUndefinedMapType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasUndefinedMapType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasUndefinedMapType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@mapModifierMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapModifierMap ;

class GGS_mapModifierMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_mapModifierMap element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_mapModifierMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_mapModifierMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_mapModifierMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_mapModifierMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_mapModifierMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_L_EXsignature & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_L_EXsignature & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_mapModifierMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_mapModifierMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_mapModifierMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@mapMethodMap'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapMethodMap ;

class GGS_mapMethodMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_mapMethodMap element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_mapMethodMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_mapMethodMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_mapMethodMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_mapMethodMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_mapMethodMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_L_EXsignature & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_L_EXsignature & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_mapMethodMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_mapMethodMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_mapMethodMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgasMapType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasMapType : public GGS_typeGalgasUndefinedMapType {
//--- 'new' constructor
  public : static GGS_typeGalgasMapType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_typeTableBlocsDeTable & argument_2,
                                const GGS_mapModifierMap & argument_3,
                                const GGS_mapMethodMap & argument_4
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeListeAttributsSemantiques  reader_mNonExternAttributesList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeTableBlocsDeTable  reader_aTableMethodesSurcharger (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapModifierMap  reader_mModifierMethodMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapMethodMap  reader_mReaderMethodMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasMapType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasMapType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasMapType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_typeGalgasUndefinedMapindexType'             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedMapindexType : public GGS_AC_galgasType {
//--- 'new' constructor
  public : static GGS_typeGalgasUndefinedMapindexType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMapindexTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasUndefinedMapindexType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasUndefinedMapindexType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasUndefinedMapindexType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Map '@mapIndexSearchReaderMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapIndexSearchReaderMap ;

class GGS_mapIndexSearchReaderMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_mapIndexSearchReaderMap element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_mapIndexSearchReaderMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_mapIndexSearchReaderMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_mapIndexSearchReaderMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_mapIndexSearchReaderMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_mapIndexSearchReaderMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lstring &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lstring   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_lstring & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_lstring & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_mapIndexSearchReaderMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_mapIndexSearchReaderMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_mapIndexSearchReaderMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeGalgasMapindexType'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasMapindexType : public GGS_typeGalgasUndefinedMapindexType {
//--- 'new' constructor
  public : static GGS_typeGalgasMapindexType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeListeAttributsSemantiques & argument_2,
                                const GGS_mapIndexSearchReaderMap & argument_3,
                                const GGS_typeTableBlocsDeTable & argument_4,
                                const GGS_mapModifierMap & argument_5,
                                const GGS_mapMethodMap & argument_6
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMapTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeListeAttributsSemantiques  reader_mMapAttributesList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapIndexSearchReaderMap  reader_mMapIndexSearchReaderMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeTableBlocsDeTable  reader_aTableMethodesSurcharger (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapModifierMap  reader_mModifierMethodMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapMethodMap  reader_mReaderMethodMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasMapindexType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasMapindexType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasMapindexType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_typeGalgasUndefinedClassType'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedClassType : public GGS_AC_galgasType {
//--- 'new' constructor
  public : static GGS_typeGalgasUndefinedClassType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mClassTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasUndefinedClassType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasUndefinedClassType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasUndefinedClassType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeGalgasNewClassType'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasNewClassType : public GGS_typeGalgasUndefinedClassType {
//--- 'new' constructor
  public : static GGS_typeGalgasNewClassType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeSuperClassesMap & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeSuperClassesMap  reader_mSuperClassMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasNewClassType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasNewClassType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasNewClassType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgasClassType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasClassType : public GGS_typeGalgasUndefinedClassType {
//--- 'new' constructor
  public : static GGS_typeGalgasClassType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeTableMethodes & argument_1,
                                const GGS_typeListeAttributsSemantiques & argument_2,
                                const GGS_typeSuperClassesMap & argument_3,
                                const GGS_typeClassInheritedMessagesMap & argument_4,
                                const GGS_typeSemanticAttributesMap & argument_5,
                                const GGS_bool& argument_6
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeTableMethodes  reader_mReaderMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeListeAttributsSemantiques  reader_mNonExternAttributesList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeSuperClassesMap  reader_mAncestorClassesMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeClassInheritedMessagesMap  reader_mMessagesMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeSemanticAttributesMap  reader_mNonExternAttributesMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mClassIsAbstract (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasClassType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasClassType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasClassType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeEntiteType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeEntiteType : public GGS_AC_semanticsEntity {
//--- 'new' constructor
  public : static GGS_typeEntiteType constructor_new (C_Compiler & inLexique,
                                const GGS_AC_galgasType & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_galgasType  reader_aDefType (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- 'messageTypeEntite' message
  public : GGS_string reader_messageTypeEntite (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeEntiteType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeEntiteType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeEntiteType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeEntiteRoutine'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeEntiteRoutine : public GGS_AC_semanticsEntity {
//--- 'new' constructor
  public : static GGS_typeEntiteRoutine constructor_new (C_Compiler & inLexique,
                                const GGS_L_EXsignature & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_L_EXsignature  reader_aListeArgumentsFormels (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- 'messageTypeEntite' message
  public : GGS_string reader_messageTypeEntite (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeEntiteRoutine * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeEntiteRoutine * operator () (LOCATION_ARGS) const {
      return (cPtr_typeEntiteRoutine *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS class 'GGS_typeGalgas_singleReferenceEntity'             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_singleReferenceEntity : public GGS_AC_galgasType {
//--- 'new' constructor
  public : static GGS_typeGalgas_singleReferenceEntity constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mEntityTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_singleReferenceEntity * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_singleReferenceEntity * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_singleReferenceEntity *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          GALGAS class 'GGS_typeGalgas_multipleReferenceEntity'            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_multipleReferenceEntity : public GGS_AC_galgasType {
//--- 'new' constructor
  public : static GGS_typeGalgas_multipleReferenceEntity constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_luint & argument_1,
                                const GGS_luint & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mEntityTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_luint  reader_mLowerBound (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_luint  reader_mUpperBound (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_multipleReferenceEntity * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_multipleReferenceEntity * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_multipleReferenceEntity *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@typeEnumMessageMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeEnumMessageMap ;

class GGS_typeEnumMessageMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeEnumMessageMap element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_typeEnumMessageMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_typeEnumMessageMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeEnumMessageMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeEnumMessageMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeEnumMessageMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_lstringList &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_lstringList   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_L_lstringList & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_L_lstringList & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_typeEnumMessageMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_typeEnumMessageMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeEnumMessageMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_enum'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_enum : public GGS_AC_galgasType {
//--- 'new' constructor
  public : static GGS_typeGalgas_enum constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_enumConstantMap & argument_1,
                                const GGS_typeEnumMessageMap & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mEnumTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_enumConstantMap  reader_mEnumConstantesMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeEnumMessageMap  reader_mMessagesMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_enum * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_enum * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_enum *) mPointer ;
    }
  #endif
} ;

void routine_checkAssignmentTypesCompatibility (C_Compiler &,
                                const GGS_AC_galgasType  &,
                                const GGS_AC_galgasType  &,
                                const GGS_location  &,
                                const GGS_bool & COMMA_LOCATION_ARGS) ;

void routine_verifierCompatibiliteSignatures (C_Compiler &,
                                const GGS_L_EXsignature  &,
                                const GGS_L_EXsignature  &,
                                const GGS_location  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@M_cli_options'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_cli_options ;

class GGS_M_cli_options : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_cli_options element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_cli_options & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_cli_options & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_cli_options * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_cli_options * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_cli_options constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lchar &  inParameter0,
                                const GGS_lstring &  inParameter1,
                                const GGS_lstring &  inParameter2,
                                const GGS_string&  inParameter3 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lchar   & outParameter0,
                                GGS_lstring   & outParameter1,
                                GGS_lstring   & outParameter2,
                                GGS_string  & outParameter3 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_lchar & inParameter0,
                                   const GGS_lstring & inParameter1,
                                   const GGS_lstring & inParameter2,
                                   const GGS_string& inParameter3,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_lchar & outParameter0,
                                   GGS_lstring & outParameter1,
                                   GGS_lstring & outParameter2,
                                   GGS_string& outParameter3,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_cli_options constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_cli_options & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_cli_options reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@M_optionComponents'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_optionComponents ;

class GGS_M_optionComponents : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_optionComponents element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_optionComponents & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_optionComponents & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_optionComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_optionComponents * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_optionComponents constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_cli_options &  inParameter0,
                                const GGS_M_cli_options &  inParameter1,
                                const GGS_M_cli_options &  inParameter2 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_cli_options   & outParameter0,
                                GGS_M_cli_options   & outParameter1,
                                GGS_M_cli_options   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_M_cli_options & inParameter0,
                                   const GGS_M_cli_options & inParameter1,
                                   const GGS_M_cli_options & inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_M_cli_options & outParameter0,
                                   GGS_M_cli_options & outParameter1,
                                   GGS_M_cli_options & outParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_optionComponents constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_optionComponents & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_optionComponents reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@M_grammarComponents'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_grammarComponents ;

class GGS_M_grammarComponents : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_grammarComponents element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_grammarComponents & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_grammarComponents & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_grammarComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_grammarComponents * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_grammarComponents constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_nonterminalSymbolAltsForGrammar &  inParameter0,
                                const GGS_lstring &  inParameter1,
                                const GGS_M_optionComponents &  inParameter2 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_nonterminalSymbolAltsForGrammar   & outParameter0,
                                GGS_lstring   & outParameter1,
                                GGS_M_optionComponents   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_M_nonterminalSymbolAltsForGrammar & inParameter0,
                                   const GGS_lstring & inParameter1,
                                   const GGS_M_optionComponents & inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_M_nonterminalSymbolAltsForGrammar & outParameter0,
                                   GGS_lstring & outParameter1,
                                   GGS_M_optionComponents & outParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_grammarComponents constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_grammarComponents & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_grammarComponents reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Map '@M_semanticsComponents'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_semanticsComponents ;

class GGS_M_semanticsComponents : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_semanticsComponents element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_semanticsComponents & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_semanticsComponents & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_semanticsComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_semanticsComponents * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_semanticsComponents constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_ModelMap &  inParameter0,
                                const GGS_ActionMap &  inParameter1,
                                const GGS_stringset &  inParameter2,
                                const GGS_stringset &  inParameter3,
                                const GGS_stringset &  inParameter4,
                                const GGS_M_optionComponents &  inParameter5,
                                const GGS_M_semanticsEntitiesForUse &  inParameter6 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_ModelMap   & outParameter0,
                                GGS_ActionMap   & outParameter1,
                                GGS_stringset   & outParameter2,
                                GGS_stringset   & outParameter3,
                                GGS_stringset   & outParameter4,
                                GGS_M_optionComponents   & outParameter5,
                                GGS_M_semanticsEntitiesForUse   & outParameter6 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_ModelMap & inParameter0,
                                   const GGS_ActionMap & inParameter1,
                                   const GGS_stringset & inParameter2,
                                   const GGS_stringset & inParameter3,
                                   const GGS_stringset & inParameter4,
                                   const GGS_M_optionComponents & inParameter5,
                                   const GGS_M_semanticsEntitiesForUse & inParameter6,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_ModelMap & outParameter0,
                                   GGS_ActionMap & outParameter1,
                                   GGS_stringset & outParameter2,
                                   GGS_stringset & outParameter3,
                                   GGS_stringset & outParameter4,
                                   GGS_M_optionComponents & outParameter5,
                                   GGS_M_semanticsEntitiesForUse & outParameter6,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_semanticsComponents constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_semanticsComponents & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_semanticsComponents reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Map '@M_metamodelsComponents'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_metamodelsComponents ;

class GGS_M_metamodelsComponents : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_metamodelsComponents element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_metamodelsComponents & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_metamodelsComponents & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_metamodelsComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_metamodelsComponents * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_metamodelsComponents constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lstring &  inParameter0,
                                const GGS_entityToImplementMap &  inParameter1,
                                const GGS_stringset &  inParameter2 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lstring   & outParameter0,
                                GGS_entityToImplementMap   & outParameter1,
                                GGS_stringset   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_lstring & inParameter0,
                                   const GGS_entityToImplementMap & inParameter1,
                                   const GGS_stringset & inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_lstring & outParameter0,
                                   GGS_entityToImplementMap & outParameter1,
                                   GGS_stringset & outParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_metamodelsComponents constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_metamodelsComponents & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_metamodelsComponents reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Map '@M_treewalkingComponents'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_treewalkingComponents ;

class GGS_M_treewalkingComponents : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_treewalkingComponents element_type ;

//--- Get pointers
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_treewalkingComponents & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_treewalkingComponents & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_treewalkingComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_treewalkingComponents * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_treewalkingComponents constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_string&  inParameter0,
                                const GGS_L_EXsignature &  inParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_string  & outParameter0,
                                GGS_L_EXsignature   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_string& inParameter0,
                                   const GGS_L_EXsignature & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_string& outParameter0,
                                   GGS_L_EXsignature & outParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_treewalkingComponents constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_treewalkingComponents & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_treewalkingComponents reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@L_nibAndClassList'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_nibAndClassList ;

class GGS_L_nibAndClassList : public AC_galgas_list {
  public : typedef elementOf_GGS_L_nibAndClassList element_type ;

//--- Constructor 'emptyList'
  public : static GGS_L_nibAndClassList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_L_nibAndClassList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_nibAndClassList & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_L_nibAndClassList
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_nibAndClassList
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operators () used for method call
  public : const GGS_L_nibAndClassList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_lstring & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_lstring & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_lstring & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_lstring & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_nibAndClassList _operator_concat (const GGS_L_nibAndClassList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@labelForPopUpList'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_labelForPopUpList ;

class GGS_labelForPopUpList : public AC_galgas_list {
  public : typedef elementOf_GGS_labelForPopUpList element_type ;

//--- Constructor 'emptyList'
  public : static GGS_labelForPopUpList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_labelForPopUpList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_uint & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_labelForPopUpList & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_labelForPopUpList
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_labelForPopUpList
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operators () used for method call
  public : const GGS_labelForPopUpList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_lstring & _out_0,
                              GGS_uint & _out_1,
                              GGS_lstring & _out_2,
                              GGS_uint & _out_3
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_lstring & _out_0,
                             GGS_uint & _out_1,
                             GGS_lstring & _out_2,
                             GGS_uint & _out_3
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_lstring & _out_0,
                                GGS_uint & _out_1,
                                GGS_lstring & _out_2,
                                GGS_uint & _out_3
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_uint & _out_1,
                                 GGS_lstring & _out_2,
                                 GGS_uint & _out_3
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_uint & argument_3) ;
//--- Handling '.' GALGAS operator
  public : GGS_labelForPopUpList _operator_concat (const GGS_labelForPopUpList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_uint & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_uint & argument_3
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_uint & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;
} ;

void routine_handleStringReaderCall (C_Compiler &,
                                const GGS_lstring  &,
                                GGS_typeListeAttributsSemantiques  &,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

void routine_handleReaderCall (C_Compiler &,
                                const GGS_AC_galgasType  &,
                                const GGS_lstring  &,
                                GGS_typeListeAttributsSemantiques  &,
                                GGS_AC_galgasType  &,
                                GGS_string & COMMA_LOCATION_ARGS) ;

void routine_check_KL_escapeCharacters (C_Compiler &,
                                GGS_lstring   COMMA_LOCATION_ARGS) ;

void routine_check_K_escapeCharacters (C_Compiler &,
                                GGS_lstring   COMMA_LOCATION_ARGS) ;

void routine_importSemanticsComponent (C_Compiler &,
                                GGS_M_semanticsComponents  &,
                                GGS_M_metamodelsComponents  &,
                                GGS_ModelMap  &,
                                GGS_ActionMap  &,
                                GGS_stringset  &,
                                GGS_stringset  &,
                                GGS_lstring   COMMA_LOCATION_ARGS) ;

void routine_enterBuiltinTypes (C_Compiler &,
                                GGS_M_semanticsEntitiesForUse  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@L_lstringList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_lstringList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mString ;
//--- Constructor
  public : elementOf_GGS_L_lstringList (const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_lstringList * nextObject (void) const { return (elementOf_GGS_L_lstringList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_lstringList * previousObject (void) const { return (elementOf_GGS_L_lstringList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_L_lstringList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of list '@L_signature'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_signature : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_formalArgumentPassingMode mFormalArgumentPassingMode ;
  public : GGS_lstring  mGalgasTypeName ;
//--- Constructor
  public : elementOf_GGS_L_signature (const GGS_formalArgumentPassingMode& ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_signature * nextObject (void) const { return (elementOf_GGS_L_signature *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_signature * previousObject (void) const { return (elementOf_GGS_L_signature *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_L_signature ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@typeListModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListModel : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mTypeName ;
//--- Constructor
  public : elementOf_GGS_typeListModel (const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_typeListModel * nextObject (void) const { return (elementOf_GGS_typeListModel *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_typeListModel * previousObject (void) const { return (elementOf_GGS_typeListModel *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_typeListModel ;
} ;

//---------------------------------------------------------------------------*

#include "include_TypeModel.h"

//---------------------------------------------------------------------------*

#include "include_BoolModel.h"

//---------------------------------------------------------------------------*

#include "include_CharModel.h"

//---------------------------------------------------------------------------*

#include "include_UIntModel.h"

//---------------------------------------------------------------------------*

#include "include_SIntModel.h"

//---------------------------------------------------------------------------*

#include "include_UInt64Model.h"

//---------------------------------------------------------------------------*

#include "include_SInt64Model.h"

//---------------------------------------------------------------------------*

#include "include_DoubleModel.h"

//---------------------------------------------------------------------------*

#include "include_StringModel.h"

//---------------------------------------------------------------------------*

#include "include_LBoolModel.h"

//---------------------------------------------------------------------------*

#include "include_LCharModel.h"

//---------------------------------------------------------------------------*

#include "include_LUIntModel.h"

//---------------------------------------------------------------------------*

#include "include_LSIntModel.h"

//---------------------------------------------------------------------------*

#include "include_LUInt64Model.h"

//---------------------------------------------------------------------------*

#include "include_LSInt64Model.h"

//---------------------------------------------------------------------------*

#include "include_LDoubleModel.h"

//---------------------------------------------------------------------------*

#include "include_LStringModel.h"

//---------------------------------------------------------------------------*

#include "include_StringsetModel.h"

//---------------------------------------------------------------------------*

#include "include_LocationModel.h"

//---------------------------------------------------------------------------*

#include "include_ListModel.h"

//---------------------------------------------------------------------------*

#include "include_MapModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@enumConstantMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_enumConstantMap {
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_enumConstantMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_enumConstantMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_enumConstantMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_enumConstantMap * nextObject (void) const { return (elementOf_GGS_enumConstantMap *) mNextItem ; }
  public : inline elementOf_GGS_enumConstantMap * infObject (void) const { return (elementOf_GGS_enumConstantMap *) mInfPtr ; }
  public : inline elementOf_GGS_enumConstantMap * supObject (void) const { return (elementOf_GGS_enumConstantMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_enumConstantMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@enumMessageMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_enumMessageMap {
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_enumMessageMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_enumMessageMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_enumMessageMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_enumMessageMap * nextObject (void) const { return (elementOf_GGS_enumMessageMap *) mNextItem ; }
  public : inline elementOf_GGS_enumMessageMap * infObject (void) const { return (elementOf_GGS_enumMessageMap *) mInfPtr ; }
  public : inline elementOf_GGS_enumMessageMap * supObject (void) const { return (elementOf_GGS_enumMessageMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_enumMessageMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_EnumModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@constructorMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_constructorMap {
  public : GGS_typeListModel  mFormalInputArgumentList ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_constructorMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_constructorMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_constructorMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_constructorMap * nextObject (void) const { return (elementOf_GGS_constructorMap *) mNextItem ; }
  public : inline elementOf_GGS_constructorMap * infObject (void) const { return (elementOf_GGS_constructorMap *) mInfPtr ; }
  public : inline elementOf_GGS_constructorMap * supObject (void) const { return (elementOf_GGS_constructorMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_constructorMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of map '@readerMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class e_readerMap {
  public : GGS_L_signature  mReaderFormalArgumentList ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_readerMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_readerMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_readerMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_readerMap * nextObject (void) const { return (elementOf_GGS_readerMap *) mNextItem ; }
  public : inline elementOf_GGS_readerMap * infObject (void) const { return (elementOf_GGS_readerMap *) mInfPtr ; }
  public : inline elementOf_GGS_readerMap * supObject (void) const { return (elementOf_GGS_readerMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_readerMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@modifierMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class e_modifierMap {
  public : GGS_L_signature  mModifierFormalArgumentList ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_modifierMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_modifierMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_modifierMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_modifierMap * nextObject (void) const { return (elementOf_GGS_modifierMap *) mNextItem ; }
  public : inline elementOf_GGS_modifierMap * infObject (void) const { return (elementOf_GGS_modifierMap *) mInfPtr ; }
  public : inline elementOf_GGS_modifierMap * supObject (void) const { return (elementOf_GGS_modifierMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_modifierMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_ExternTypeModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@classMessageMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_classMessageMap {
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_classMessageMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_classMessageMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_classMessageMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_classMessageMap * nextObject (void) const { return (elementOf_GGS_classMessageMap *) mNextItem ; }
  public : inline elementOf_GGS_classMessageMap * infObject (void) const { return (elementOf_GGS_classMessageMap *) mInfPtr ; }
  public : inline elementOf_GGS_classMessageMap * supObject (void) const { return (elementOf_GGS_classMessageMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_classMessageMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_ClassModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                        Element of map '@ModelMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class e_ModelMap {
  public : GGS_TypeModel  mType ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_ModelMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_ModelMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_ModelMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_ModelMap * nextObject (void) const { return (elementOf_GGS_ModelMap *) mNextItem ; }
  public : inline elementOf_GGS_ModelMap * infObject (void) const { return (elementOf_GGS_ModelMap *) mInfPtr ; }
  public : inline elementOf_GGS_ModelMap * supObject (void) const { return (elementOf_GGS_ModelMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_ModelMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of map '@ActionMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class e_ActionMap {
  public : GGS_L_signature  mSignature ;
  public : GGS_bool mIsExtern ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_ActionMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_ActionMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_ActionMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_ActionMap * nextObject (void) const { return (elementOf_GGS_ActionMap *) mNextItem ; }
  public : inline elementOf_GGS_ActionMap * infObject (void) const { return (elementOf_GGS_ActionMap *) mInfPtr ; }
  public : inline elementOf_GGS_ActionMap * supObject (void) const { return (elementOf_GGS_ActionMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_ActionMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_AC_galgasType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@entityPropertyMap'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_entityPropertyMap {
  public : GGS_AC_galgasType  mPropertyType ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_entityPropertyMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_entityPropertyMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_entityPropertyMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_entityPropertyMap * nextObject (void) const { return (elementOf_GGS_entityPropertyMap *) mNextItem ; }
  public : inline elementOf_GGS_entityPropertyMap * infObject (void) const { return (elementOf_GGS_entityPropertyMap *) mInfPtr ; }
  public : inline elementOf_GGS_entityPropertyMap * supObject (void) const { return (elementOf_GGS_entityPropertyMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_entityPropertyMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@mapEntityMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_mapEntityMap {
  public : GGS_lstring  mElementEntityName ;
  public : GGS_lstring  mInsertErrorMessage ;
  public : GGS_lstring  mSearchErrorMessage ;
  public : GGS_bool mElementTypeIsOveriddenByConstraints ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_mapEntityMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_mapEntityMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_mapEntityMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_mapEntityMap * nextObject (void) const { return (elementOf_GGS_mapEntityMap *) mNextItem ; }
  public : inline elementOf_GGS_mapEntityMap * infObject (void) const { return (elementOf_GGS_mapEntityMap *) mInfPtr ; }
  public : inline elementOf_GGS_mapEntityMap * supObject (void) const { return (elementOf_GGS_mapEntityMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_mapEntityMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@typeSuperClassesMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeSuperClassesMap {
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeSuperClassesMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeSuperClassesMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_typeSuperClassesMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_typeSuperClassesMap * nextObject (void) const { return (elementOf_GGS_typeSuperClassesMap *) mNextItem ; }
  public : inline elementOf_GGS_typeSuperClassesMap * infObject (void) const { return (elementOf_GGS_typeSuperClassesMap *) mInfPtr ; }
  public : inline elementOf_GGS_typeSuperClassesMap * supObject (void) const { return (elementOf_GGS_typeSuperClassesMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeSuperClassesMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@entityToImplementMap'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_entityToImplementMap {
  public : GGS_entityPropertyMap  mAllMetamodelPropertyMap ;
  public : GGS_bool mIsAbstract ;
  public : GGS_entityPropertyMap  mCurrentMetamodelPropertyMap ;
  public : GGS_lstring  mSuperEntityName ;
  public : GGS_typeSuperClassesMap  mAncestorClassesMap ;
  public : GGS_typeListeAttributsSemantiques  mPropertyList ;
  public : GGS_string mMetamodelName ;
  public : GGS_uint  mID ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_entityToImplementMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_entityToImplementMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_entityToImplementMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_entityToImplementMap * nextObject (void) const { return (elementOf_GGS_entityToImplementMap *) mNextItem ; }
  public : inline elementOf_GGS_entityToImplementMap * infObject (void) const { return (elementOf_GGS_entityToImplementMap *) mInfPtr ; }
  public : inline elementOf_GGS_entityToImplementMap * supObject (void) const { return (elementOf_GGS_entityToImplementMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_entityToImplementMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@typeListeAttributsSemantiques'              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListeAttributsSemantiques : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_AC_galgasType  mAttributType ;
  public : GGS_lstring  aNomAttribut ;
//--- Constructor
  public : elementOf_GGS_typeListeAttributsSemantiques (const GGS_AC_galgasType & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_typeListeAttributsSemantiques * nextObject (void) const { return (elementOf_GGS_typeListeAttributsSemantiques *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_typeListeAttributsSemantiques * previousObject (void) const { return (elementOf_GGS_typeListeAttributsSemantiques *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_typeListeAttributsSemantiques ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@typeTypesList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTypesList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_AC_galgasType  mType ;
  public : GGS_location  mEndOfExpressionLocation ;
//--- Constructor
  public : elementOf_GGS_typeTypesList (const GGS_AC_galgasType & ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_typeTypesList * nextObject (void) const { return (elementOf_GGS_typeTypesList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_typeTypesList * previousObject (void) const { return (elementOf_GGS_typeTypesList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_typeTypesList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@L_EXsignature'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_EXsignature : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_AC_galgasType  mType ;
  public : GGS_formalArgumentPassingMode mFormalArgumentPassingMode ;
//--- Constructor
  public : elementOf_GGS_L_EXsignature (const GGS_AC_galgasType & ,
                                const GGS_formalArgumentPassingMode& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_EXsignature * nextObject (void) const { return (elementOf_GGS_L_EXsignature *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_EXsignature * previousObject (void) const { return (elementOf_GGS_L_EXsignature *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_L_EXsignature ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@L_actualParametersSignature'               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_actualParametersSignature : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_AC_galgasType  mType ;
  public : GGS_actualParametersPassingMode mFormalArgumentPassingMode ;
//--- Constructor
  public : elementOf_GGS_L_actualParametersSignature (const GGS_AC_galgasType & ,
                                const GGS_actualParametersPassingMode& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_actualParametersSignature * nextObject (void) const { return (elementOf_GGS_L_actualParametersSignature *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_actualParametersSignature * previousObject (void) const { return (elementOf_GGS_L_actualParametersSignature *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_L_actualParametersSignature ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@M_accessors_map'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_accessors_map {
  public : GGS_L_EXsignature  mAccessorSignature ;
  public : GGS_AC_galgasType  mReturnedType ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_accessors_map : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_accessors_map (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_accessors_map & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_accessors_map * nextObject (void) const { return (elementOf_GGS_M_accessors_map *) mNextItem ; }
  public : inline elementOf_GGS_M_accessors_map * infObject (void) const { return (elementOf_GGS_M_accessors_map *) mInfPtr ; }
  public : inline elementOf_GGS_M_accessors_map * supObject (void) const { return (elementOf_GGS_M_accessors_map *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_accessors_map mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgas_jokerInParameterList.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_bool.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_uint.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_char.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_string.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_sint.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_sint64.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_uint64.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_double.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_binaryset.h"

//---------------------------------------------------------------------------*

#include "include_C_galgasPrimitiveType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_location.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_lstring.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_lchar.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_lbool.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_luint.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_luint64.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_lsint.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_lsint64.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_ldouble.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_stringset.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@typeTableMethodes'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeTableMethodes {
  public : GGS_L_EXsignature  aListeTypesParametres ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableMethodes : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeTableMethodes (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_typeTableMethodes & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_typeTableMethodes * nextObject (void) const { return (elementOf_GGS_typeTableMethodes *) mNextItem ; }
  public : inline elementOf_GGS_typeTableMethodes * infObject (void) const { return (elementOf_GGS_typeTableMethodes *) mInfPtr ; }
  public : inline elementOf_GGS_typeTableMethodes * supObject (void) const { return (elementOf_GGS_typeTableMethodes *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeTableMethodes mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedExternType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@M_externTypeConstructorMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_externTypeConstructorMap {
  public : GGS_typeListeAttributsSemantiques  aListeDesAttributs ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_externTypeConstructorMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_externTypeConstructorMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_externTypeConstructorMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_externTypeConstructorMap * nextObject (void) const { return (elementOf_GGS_M_externTypeConstructorMap *) mNextItem ; }
  public : inline elementOf_GGS_M_externTypeConstructorMap * infObject (void) const { return (elementOf_GGS_M_externTypeConstructorMap *) mInfPtr ; }
  public : inline elementOf_GGS_M_externTypeConstructorMap * supObject (void) const { return (elementOf_GGS_M_externTypeConstructorMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_externTypeConstructorMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgasExternType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@M_terminalSymbolsMapForUse'                *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_terminalSymbolsMapForUse {
  public : GGS_typeListeAttributsSemantiques  aListeDesAttributs ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_terminalSymbolsMapForUse : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_terminalSymbolsMapForUse (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_terminalSymbolsMapForUse & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_terminalSymbolsMapForUse * nextObject (void) const { return (elementOf_GGS_M_terminalSymbolsMapForUse *) mNextItem ; }
  public : inline elementOf_GGS_M_terminalSymbolsMapForUse * infObject (void) const { return (elementOf_GGS_M_terminalSymbolsMapForUse *) mInfPtr ; }
  public : inline elementOf_GGS_M_terminalSymbolsMapForUse * supObject (void) const { return (elementOf_GGS_M_terminalSymbolsMapForUse *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_terminalSymbolsMapForUse mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@M_lexiqueComponents'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_lexiqueComponents {
  public : GGS_M_terminalSymbolsMapForUse  mTerminalSymbolMap ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_lexiqueComponents : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_lexiqueComponents (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_lexiqueComponents & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_lexiqueComponents * nextObject (void) const { return (elementOf_GGS_M_lexiqueComponents *) mNextItem ; }
  public : inline elementOf_GGS_M_lexiqueComponents * infObject (void) const { return (elementOf_GGS_M_lexiqueComponents *) mInfPtr ; }
  public : inline elementOf_GGS_M_lexiqueComponents * supObject (void) const { return (elementOf_GGS_M_lexiqueComponents *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_lexiqueComponents mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@typeTableEnAvant'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeTableEnAvant {
  public : GGS_AC_galgasType  mType ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableEnAvant : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeTableEnAvant (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_typeTableEnAvant & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_typeTableEnAvant * nextObject (void) const { return (elementOf_GGS_typeTableEnAvant *) mNextItem ; }
  public : inline elementOf_GGS_typeTableEnAvant * infObject (void) const { return (elementOf_GGS_typeTableEnAvant *) mInfPtr ; }
  public : inline elementOf_GGS_typeTableEnAvant * supObject (void) const { return (elementOf_GGS_typeTableEnAvant *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeTableEnAvant mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of map '@M_nonterminalSymbolAlts'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_nonterminalSymbolAlts {
  public : GGS_L_EXsignature  mFormalParametersList ;
  public : GGS_lstring  mReturnedEntity ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonterminalSymbolAlts : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_nonterminalSymbolAlts (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_nonterminalSymbolAlts & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_nonterminalSymbolAlts * nextObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAlts *) mNextItem ; }
  public : inline elementOf_GGS_M_nonterminalSymbolAlts * infObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAlts *) mInfPtr ; }
  public : inline elementOf_GGS_M_nonterminalSymbolAlts * supObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAlts *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_nonterminalSymbolAlts mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_AC_semanticsEntity.h"

//---------------------------------------------------------------------------*

#include "include_C_grammarForSemantics.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@M_semanticsEntitiesForUse'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_semanticsEntitiesForUse {
  public : GGS_AC_semanticsEntity  aDefEntite ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_semanticsEntitiesForUse : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_semanticsEntitiesForUse (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_semanticsEntitiesForUse & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_semanticsEntitiesForUse * nextObject (void) const { return (elementOf_GGS_M_semanticsEntitiesForUse *) mNextItem ; }
  public : inline elementOf_GGS_M_semanticsEntitiesForUse * infObject (void) const { return (elementOf_GGS_M_semanticsEntitiesForUse *) mInfPtr ; }
  public : inline elementOf_GGS_M_semanticsEntitiesForUse * supObject (void) const { return (elementOf_GGS_M_semanticsEntitiesForUse *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_semanticsEntitiesForUse mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_AC_typeForGrammarComponent.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@M_typesForGrammarComponent'                *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_typesForGrammarComponent {
  public : GGS_AC_typeForGrammarComponent  mType ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_typesForGrammarComponent : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_typesForGrammarComponent (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_typesForGrammarComponent & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_typesForGrammarComponent * nextObject (void) const { return (elementOf_GGS_M_typesForGrammarComponent *) mNextItem ; }
  public : inline elementOf_GGS_M_typesForGrammarComponent * infObject (void) const { return (elementOf_GGS_M_typesForGrammarComponent *) mInfPtr ; }
  public : inline elementOf_GGS_M_typesForGrammarComponent * supObject (void) const { return (elementOf_GGS_M_typesForGrammarComponent *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_typesForGrammarComponent mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_AC_instruction_ForGrammar.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@L_ruleSyntaxSignature'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_ruleSyntaxSignature : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_AC_instruction_ForGrammar  mInstruction ;
//--- Constructor
  public : elementOf_GGS_L_ruleSyntaxSignature (const GGS_AC_instruction_ForGrammar & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_ruleSyntaxSignature * nextObject (void) const { return (elementOf_GGS_L_ruleSyntaxSignature *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_ruleSyntaxSignature * previousObject (void) const { return (elementOf_GGS_L_ruleSyntaxSignature *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_L_ruleSyntaxSignature ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@L_grammarsMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_L_grammarsMap {
  public : GGS_M_nonterminalSymbolAlts  mStartSymbolParametersMap ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_L_grammarsMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_L_grammarsMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_L_grammarsMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_L_grammarsMap * nextObject (void) const { return (elementOf_GGS_L_grammarsMap *) mNextItem ; }
  public : inline elementOf_GGS_L_grammarsMap * infObject (void) const { return (elementOf_GGS_L_grammarsMap *) mInfPtr ; }
  public : inline elementOf_GGS_L_grammarsMap * supObject (void) const { return (elementOf_GGS_L_grammarsMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_L_grammarsMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Element of map '@M_nonterminalSymbolAltsForGrammar'             *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_nonterminalSymbolAltsForGrammar {
  public : GGS_L_signature  mFormalParametersList ;
  public : GGS_lstring  mReturnedEntityTypeName ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonterminalSymbolAltsForGrammar : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_nonterminalSymbolAltsForGrammar (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_nonterminalSymbolAltsForGrammar & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_nonterminalSymbolAltsForGrammar * nextObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAltsForGrammar *) mNextItem ; }
  public : inline elementOf_GGS_M_nonterminalSymbolAltsForGrammar * infObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAltsForGrammar *) mInfPtr ; }
  public : inline elementOf_GGS_M_nonterminalSymbolAltsForGrammar * supObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAltsForGrammar *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_nonterminalSymbolAltsForGrammar mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Element of list '@L_productionRules_ForGrammarComponent'          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_productionRules_ForGrammarComponent : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mLeftNonterminalSymbol ;
  public : GGS_uint  mLeftNonterminalSymbolIndex ;
  public : GGS_L_ruleSyntaxSignature  mInstructionList ;
//--- Constructor
  public : elementOf_GGS_L_productionRules_ForGrammarComponent (const GGS_lstring & ,
                                const GGS_uint & ,
                                const GGS_L_ruleSyntaxSignature & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_productionRules_ForGrammarComponent * nextObject (void) const { return (elementOf_GGS_L_productionRules_ForGrammarComponent *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_productionRules_ForGrammarComponent * previousObject (void) const { return (elementOf_GGS_L_productionRules_ForGrammarComponent *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_L_productionRules_ForGrammarComponent ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of map '@M_nonTerminalSymbolsForGrammar'              *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_nonTerminalSymbolsForGrammar {
  public : GGS_M_nonterminalSymbolAltsForGrammar  mNonterminalSymbolParametersMap ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonTerminalSymbolsForGrammar : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_nonTerminalSymbolsForGrammar (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_nonTerminalSymbolsForGrammar & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_nonTerminalSymbolsForGrammar * nextObject (void) const { return (elementOf_GGS_M_nonTerminalSymbolsForGrammar *) mNextItem ; }
  public : inline elementOf_GGS_M_nonTerminalSymbolsForGrammar * infObject (void) const { return (elementOf_GGS_M_nonTerminalSymbolsForGrammar *) mInfPtr ; }
  public : inline elementOf_GGS_M_nonTerminalSymbolsForGrammar * supObject (void) const { return (elementOf_GGS_M_nonTerminalSymbolsForGrammar *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_nonTerminalSymbolsForGrammar mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@M_syntaxComponents'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_syntaxComponents {
  public : GGS_M_nonTerminalSymbolsForGrammar  mNonterminalSymbolsMap ;
  public : GGS_L_productionRules_ForGrammarComponent  mProductionRulesList ;
  public : GGS_lstring  mLexiqueComponentName ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_syntaxComponents : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_syntaxComponents (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_syntaxComponents & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_syntaxComponents * nextObject (void) const { return (elementOf_GGS_M_syntaxComponents *) mNextItem ; }
  public : inline elementOf_GGS_M_syntaxComponents * infObject (void) const { return (elementOf_GGS_M_syntaxComponents *) mInfPtr ; }
  public : inline elementOf_GGS_M_syntaxComponents * supObject (void) const { return (elementOf_GGS_M_syntaxComponents *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_syntaxComponents mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_T_terminalInstruction_forGrammarComponent.h"

//---------------------------------------------------------------------------*

#include "include_T_nonterminalInstruction_forGrammarComponent.h"

//---------------------------------------------------------------------------*
//                                                                           *
//           Element of list '@L_branchList_ForGrammarComponent'             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_branchList_ForGrammarComponent : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_L_ruleSyntaxSignature  mInstructionList ;
//--- Constructor
  public : elementOf_GGS_L_branchList_ForGrammarComponent (const GGS_L_ruleSyntaxSignature & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_branchList_ForGrammarComponent * nextObject (void) const { return (elementOf_GGS_L_branchList_ForGrammarComponent *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_branchList_ForGrammarComponent * previousObject (void) const { return (elementOf_GGS_L_branchList_ForGrammarComponent *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_L_branchList_ForGrammarComponent ;
} ;

//---------------------------------------------------------------------------*

#include "include_T_selectInstruction_forGrammarComponent.h"

//---------------------------------------------------------------------------*

#include "include_T_repeatInstruction_forGrammarComponent.h"

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@L_syntaxComponents_ForGrammar'              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_syntaxComponents_ForGrammar : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_M_nonTerminalSymbolsForGrammar  mNonterminalSymbolsMap ;
  public : GGS_L_productionRules_ForGrammarComponent  mProductionRulesList ;
  public : GGS_lstring  mSyntaxComponentName ;
//--- Constructor
  public : elementOf_GGS_L_syntaxComponents_ForGrammar (const GGS_M_nonTerminalSymbolsForGrammar & ,
                                const GGS_L_productionRules_ForGrammarComponent & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_syntaxComponents_ForGrammar * nextObject (void) const { return (elementOf_GGS_L_syntaxComponents_ForGrammar *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_syntaxComponents_ForGrammar * previousObject (void) const { return (elementOf_GGS_L_syntaxComponents_ForGrammar *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_L_syntaxComponents_ForGrammar ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Element of map '@M_startSymbolEntityAndMetamodel'              *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_startSymbolEntityAndMetamodel {
  public : GGS_lstring  mReturnedEntityName ;
  public : GGS_lstring  mReturnedMetamodelName ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_startSymbolEntityAndMetamodel : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_startSymbolEntityAndMetamodel (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_startSymbolEntityAndMetamodel & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_startSymbolEntityAndMetamodel * nextObject (void) const { return (elementOf_GGS_M_startSymbolEntityAndMetamodel *) mNextItem ; }
  public : inline elementOf_GGS_M_startSymbolEntityAndMetamodel * infObject (void) const { return (elementOf_GGS_M_startSymbolEntityAndMetamodel *) mInfPtr ; }
  public : inline elementOf_GGS_M_startSymbolEntityAndMetamodel * supObject (void) const { return (elementOf_GGS_M_startSymbolEntityAndMetamodel *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_startSymbolEntityAndMetamodel mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@L_identifiers'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_identifiers : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  aIdentificateur ;
//--- Constructor
  public : elementOf_GGS_L_identifiers (const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_identifiers * nextObject (void) const { return (elementOf_GGS_L_identifiers *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_identifiers * previousObject (void) const { return (elementOf_GGS_L_identifiers *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_L_identifiers ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of map '@typeClassInheritedMessagesMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeClassInheritedMessagesMap {
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeClassInheritedMessagesMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeClassInheritedMessagesMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_typeClassInheritedMessagesMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_typeClassInheritedMessagesMap * nextObject (void) const { return (elementOf_GGS_typeClassInheritedMessagesMap *) mNextItem ; }
  public : inline elementOf_GGS_typeClassInheritedMessagesMap * infObject (void) const { return (elementOf_GGS_typeClassInheritedMessagesMap *) mInfPtr ; }
  public : inline elementOf_GGS_typeClassInheritedMessagesMap * supObject (void) const { return (elementOf_GGS_typeClassInheritedMessagesMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeClassInheritedMessagesMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@typeSemanticAttributesMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeSemanticAttributesMap {
  public : GGS_AC_galgasType  mAttributType ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeSemanticAttributesMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeSemanticAttributesMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_typeSemanticAttributesMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_typeSemanticAttributesMap * nextObject (void) const { return (elementOf_GGS_typeSemanticAttributesMap *) mNextItem ; }
  public : inline elementOf_GGS_typeSemanticAttributesMap * infObject (void) const { return (elementOf_GGS_typeSemanticAttributesMap *) mInfPtr ; }
  public : inline elementOf_GGS_typeSemanticAttributesMap * supObject (void) const { return (elementOf_GGS_typeSemanticAttributesMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeSemanticAttributesMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@insertOrSearchMethodList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_insertOrSearchMethodList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mMethodName ;
  public : GGS_string mErrorMessage ;
  public : GGS_bool mIsGetIndexMethod ;
  public : GGS_string mShadowErrorMessage ;
//--- Constructor
  public : elementOf_GGS_insertOrSearchMethodList (const GGS_lstring & ,
                                const GGS_string& ,
                                const GGS_bool& ,
                                const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_insertOrSearchMethodList * nextObject (void) const { return (elementOf_GGS_insertOrSearchMethodList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_insertOrSearchMethodList * previousObject (void) const { return (elementOf_GGS_insertOrSearchMethodList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_insertOrSearchMethodList ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeDefEntiteUtilisable.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedListType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasListType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@domainModifierMap'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_domainModifierMap {
  public : GGS_L_EXsignature  mFormalParametersList ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_domainModifierMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_domainModifierMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_domainModifierMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_domainModifierMap * nextObject (void) const { return (elementOf_GGS_domainModifierMap *) mNextItem ; }
  public : inline elementOf_GGS_domainModifierMap * infObject (void) const { return (elementOf_GGS_domainModifierMap *) mInfPtr ; }
  public : inline elementOf_GGS_domainModifierMap * supObject (void) const { return (elementOf_GGS_domainModifierMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_domainModifierMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@domainAttributeMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_domainAttributeMap {
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_domainAttributeMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_domainAttributeMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_domainAttributeMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_domainAttributeMap * nextObject (void) const { return (elementOf_GGS_domainAttributeMap *) mNextItem ; }
  public : inline elementOf_GGS_domainAttributeMap * infObject (void) const { return (elementOf_GGS_domainAttributeMap *) mInfPtr ; }
  public : inline elementOf_GGS_domainAttributeMap * supObject (void) const { return (elementOf_GGS_domainAttributeMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_domainAttributeMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgasDomainType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedSortedListType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasSortedListType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of map '@typeTableBlocsDeTable'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeTableBlocsDeTable {
  public : GGS_L_EXsignature  aSignatureDebut ;
  public : GGS_L_EXsignature  aSignatureFin ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableBlocsDeTable : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeTableBlocsDeTable (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_typeTableBlocsDeTable & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_typeTableBlocsDeTable * nextObject (void) const { return (elementOf_GGS_typeTableBlocsDeTable *) mNextItem ; }
  public : inline elementOf_GGS_typeTableBlocsDeTable * infObject (void) const { return (elementOf_GGS_typeTableBlocsDeTable *) mInfPtr ; }
  public : inline elementOf_GGS_typeTableBlocsDeTable * supObject (void) const { return (elementOf_GGS_typeTableBlocsDeTable *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeTableBlocsDeTable mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedMapType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@mapModifierMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_mapModifierMap {
  public : GGS_L_EXsignature  mMethodSignature ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_mapModifierMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_mapModifierMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_mapModifierMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_mapModifierMap * nextObject (void) const { return (elementOf_GGS_mapModifierMap *) mNextItem ; }
  public : inline elementOf_GGS_mapModifierMap * infObject (void) const { return (elementOf_GGS_mapModifierMap *) mInfPtr ; }
  public : inline elementOf_GGS_mapModifierMap * supObject (void) const { return (elementOf_GGS_mapModifierMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_mapModifierMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@mapMethodMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_mapMethodMap {
  public : GGS_L_EXsignature  mMethodSignature ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_mapMethodMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_mapMethodMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_mapMethodMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_mapMethodMap * nextObject (void) const { return (elementOf_GGS_mapMethodMap *) mNextItem ; }
  public : inline elementOf_GGS_mapMethodMap * infObject (void) const { return (elementOf_GGS_mapMethodMap *) mInfPtr ; }
  public : inline elementOf_GGS_mapMethodMap * supObject (void) const { return (elementOf_GGS_mapMethodMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_mapMethodMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgasMapType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedMapindexType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of map '@mapIndexSearchReaderMap'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class e_mapIndexSearchReaderMap {
  public : GGS_lstring  mRetrieveErrorMessage ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_mapIndexSearchReaderMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_mapIndexSearchReaderMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_mapIndexSearchReaderMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_mapIndexSearchReaderMap * nextObject (void) const { return (elementOf_GGS_mapIndexSearchReaderMap *) mNextItem ; }
  public : inline elementOf_GGS_mapIndexSearchReaderMap * infObject (void) const { return (elementOf_GGS_mapIndexSearchReaderMap *) mInfPtr ; }
  public : inline elementOf_GGS_mapIndexSearchReaderMap * supObject (void) const { return (elementOf_GGS_mapIndexSearchReaderMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_mapIndexSearchReaderMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgasMapindexType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedClassType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasNewClassType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasClassType.h"

//---------------------------------------------------------------------------*

#include "include_typeEntiteType.h"

//---------------------------------------------------------------------------*

#include "include_typeEntiteRoutine.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_singleReferenceEntity.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_multipleReferenceEntity.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@typeEnumMessageMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeEnumMessageMap {
  public : GGS_L_lstringList  mMessageStringList ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeEnumMessageMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeEnumMessageMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_typeEnumMessageMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_typeEnumMessageMap * nextObject (void) const { return (elementOf_GGS_typeEnumMessageMap *) mNextItem ; }
  public : inline elementOf_GGS_typeEnumMessageMap * infObject (void) const { return (elementOf_GGS_typeEnumMessageMap *) mInfPtr ; }
  public : inline elementOf_GGS_typeEnumMessageMap * supObject (void) const { return (elementOf_GGS_typeEnumMessageMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeEnumMessageMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgas_enum.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@M_cli_options'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_cli_options {
  public : GGS_lchar  mOptionChar ;
  public : GGS_lstring  mOptionString ;
  public : GGS_lstring  mComment ;
  public : GGS_string mDefaultValue ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_cli_options : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_cli_options (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_cli_options & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_cli_options * nextObject (void) const { return (elementOf_GGS_M_cli_options *) mNextItem ; }
  public : inline elementOf_GGS_M_cli_options * infObject (void) const { return (elementOf_GGS_M_cli_options *) mInfPtr ; }
  public : inline elementOf_GGS_M_cli_options * supObject (void) const { return (elementOf_GGS_M_cli_options *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_cli_options mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@M_optionComponents'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_optionComponents {
  public : GGS_M_cli_options  mBoolOptionsMap ;
  public : GGS_M_cli_options  mUintOptionsMap ;
  public : GGS_M_cli_options  mStringOptionsMap ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_optionComponents : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_optionComponents (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_optionComponents & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_optionComponents * nextObject (void) const { return (elementOf_GGS_M_optionComponents *) mNextItem ; }
  public : inline elementOf_GGS_M_optionComponents * infObject (void) const { return (elementOf_GGS_M_optionComponents *) mInfPtr ; }
  public : inline elementOf_GGS_M_optionComponents * supObject (void) const { return (elementOf_GGS_M_optionComponents *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_optionComponents mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@M_grammarComponents'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_grammarComponents {
  public : GGS_M_nonterminalSymbolAltsForGrammar  mNonterminalSymbolParametersMap ;
  public : GGS_lstring  mLexiqueName ;
  public : GGS_M_optionComponents  mOptionsMap ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_grammarComponents : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_grammarComponents (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_grammarComponents & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_grammarComponents * nextObject (void) const { return (elementOf_GGS_M_grammarComponents *) mNextItem ; }
  public : inline elementOf_GGS_M_grammarComponents * infObject (void) const { return (elementOf_GGS_M_grammarComponents *) mInfPtr ; }
  public : inline elementOf_GGS_M_grammarComponents * supObject (void) const { return (elementOf_GGS_M_grammarComponents *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_grammarComponents mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of map '@M_semanticsComponents'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_semanticsComponents {
  public : GGS_ModelMap  mModelMap ;
  public : GGS_ActionMap  mActionMap ;
  public : GGS_stringset  mImportedSemanticsComponents ;
  public : GGS_stringset  mImportedMetamodelComponents ;
  public : GGS_stringset  mImportedOptionsComponents ;
  public : GGS_M_optionComponents  mOptionsComponents ;
  public : GGS_M_semanticsEntitiesForUse  mSemanticsEntitiesMap ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_semanticsComponents : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_semanticsComponents (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_semanticsComponents & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_semanticsComponents * nextObject (void) const { return (elementOf_GGS_M_semanticsComponents *) mNextItem ; }
  public : inline elementOf_GGS_M_semanticsComponents * infObject (void) const { return (elementOf_GGS_M_semanticsComponents *) mInfPtr ; }
  public : inline elementOf_GGS_M_semanticsComponents * supObject (void) const { return (elementOf_GGS_M_semanticsComponents *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_semanticsComponents mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of map '@M_metamodelsComponents'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_metamodelsComponents {
  public : GGS_lstring  mRootEntity ;
  public : GGS_entityToImplementMap  mEntityMap ;
  public : GGS_stringset  mSuperMetamodels ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_metamodelsComponents : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_metamodelsComponents (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_metamodelsComponents & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_metamodelsComponents * nextObject (void) const { return (elementOf_GGS_M_metamodelsComponents *) mNextItem ; }
  public : inline elementOf_GGS_M_metamodelsComponents * infObject (void) const { return (elementOf_GGS_M_metamodelsComponents *) mInfPtr ; }
  public : inline elementOf_GGS_M_metamodelsComponents * supObject (void) const { return (elementOf_GGS_M_metamodelsComponents *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_metamodelsComponents mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of map '@M_treewalkingComponents'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_treewalkingComponents {
  public : GGS_string mRootEntityName ;
  public : GGS_L_EXsignature  mRoutineSignature ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_treewalkingComponents : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_treewalkingComponents (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_treewalkingComponents & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_treewalkingComponents * nextObject (void) const { return (elementOf_GGS_M_treewalkingComponents *) mNextItem ; }
  public : inline elementOf_GGS_M_treewalkingComponents * infObject (void) const { return (elementOf_GGS_M_treewalkingComponents *) mInfPtr ; }
  public : inline elementOf_GGS_M_treewalkingComponents * supObject (void) const { return (elementOf_GGS_M_treewalkingComponents *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_treewalkingComponents mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@L_nibAndClassList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_nibAndClassList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mValue ;
//--- Constructor
  public : elementOf_GGS_L_nibAndClassList (const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_nibAndClassList * nextObject (void) const { return (elementOf_GGS_L_nibAndClassList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_nibAndClassList * previousObject (void) const { return (elementOf_GGS_L_nibAndClassList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_L_nibAndClassList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@labelForPopUpList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_labelForPopUpList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mTerminal1 ;
  public : GGS_uint  mTerminal1ID ;
  public : GGS_lstring  mTerminal2 ;
  public : GGS_uint  mTerminal2ID ;
//--- Constructor
  public : elementOf_GGS_labelForPopUpList (const GGS_lstring & ,
                                const GGS_uint & ,
                                const GGS_lstring & ,
                                const GGS_uint & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_labelForPopUpList * nextObject (void) const { return (elementOf_GGS_labelForPopUpList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_labelForPopUpList * previousObject (void) const { return (elementOf_GGS_labelForPopUpList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_labelForPopUpList ;
} ;

//---------------------------------------------------------------------------*

#endif
