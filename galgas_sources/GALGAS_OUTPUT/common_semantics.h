//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'common_semantics.h'                          *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     october 29th, 2010, at 22h17'40"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef common_semantics_DEFINED
#define common_semantics_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

// Include imported semantics
#include "grammarSemantics.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_AC_semanticsEntity ;
class cPtr_AC_semanticsEntity ;
class GGS_M_semanticsEntitiesForUse ;
class GGS_EXactualParametersPassingMode ;
class GGS_typeInstruction ;
class cPtr_typeInstruction ;
class GGS_typeInstructionList ;
class GGS_typeListModel ;
class GGS_TypeModel ;
class cPtr_TypeModel ;
class GGS_BoolModel ;
class cPtr_BoolModel ;
class GGS_CharModel ;
class cPtr_CharModel ;
class GGS_UIntModel ;
class cPtr_UIntModel ;
class GGS_SIntModel ;
class cPtr_SIntModel ;
class GGS_UInt64Model ;
class cPtr_UInt64Model ;
class GGS_SInt64Model ;
class cPtr_SInt64Model ;
class GGS_DoubleModel ;
class cPtr_DoubleModel ;
class GGS_StringModel ;
class cPtr_StringModel ;
class GGS_LBoolModel ;
class cPtr_LBoolModel ;
class GGS_LCharModel ;
class cPtr_LCharModel ;
class GGS_LUIntModel ;
class cPtr_LUIntModel ;
class GGS_LSIntModel ;
class cPtr_LSIntModel ;
class GGS_LUInt64Model ;
class cPtr_LUInt64Model ;
class GGS_LSInt64Model ;
class cPtr_LSInt64Model ;
class GGS_LDoubleModel ;
class cPtr_LDoubleModel ;
class GGS_LStringModel ;
class cPtr_LStringModel ;
class GGS_StringsetModel ;
class cPtr_StringsetModel ;
class GGS_LocationModel ;
class cPtr_LocationModel ;
class GGS_ListModel ;
class cPtr_ListModel ;
class GGS_MapModel ;
class cPtr_MapModel ;
class GGS_enumConstantMap ;
class GGS_enumUsedConstantMap ;
class GGS_EXenumMessageMap ;
class GGS_EnumModel ;
class cPtr_EnumModel ;
class GGS_externTypeConstructorMap ;
class GGS_externTypeReaderMap ;
class GGS_externTypeModifierMap ;
class GGS_ExternTypeModel ;
class cPtr_ExternTypeModel ;
class GGS_classMessageMap ;
class GGS_ClassModel ;
class cPtr_ClassModel ;
class GGS_ModelMap ;
class GGS_ActionMap ;
class GGS_localConstantBuildStyleEnum ;
class GGS_AC_galgasType ;
class cPtr_AC_galgasType ;
class GGS_typeEntiteType ;
class cPtr_typeEntiteType ;
class GGS_typeCplusPlusName ;
class cPtr_typeCplusPlusName ;
class GGS_typeDirectName ;
class cPtr_typeDirectName ;
class GGS_typeCurrentObjectName ;
class cPtr_typeCurrentObjectName ;
class GGS_typeCppStarThisName ;
class cPtr_typeCppStarThisName ;
class GGS_typeCppThisInCategoryName ;
class cPtr_typeCppThisInCategoryName ;
class GGS_typeCppInheritedName ;
class cPtr_typeCppInheritedName ;
class GGS_typeAutomaticName ;
class cPtr_typeAutomaticName ;
class GGS_typeLocationAutomaticName ;
class cPtr_typeLocationAutomaticName ;
class GGS_typeOperandName ;
class cPtr_typeOperandName ;
class GGS_typeKeyName ;
class cPtr_typeKeyName ;
class GGS_typeNullName ;
class cPtr_typeNullName ;
class GGS_typeListeTypesEtNomsArgMethode ;
class GGS_typeSuperClassesMap ;
class GGS_typeListeAttributsSemantiques ;
class GGS_typeTypesList ;
class GGS_L_EXsignature ;
class GGS_categoryMethodKind ;
class GGS_EXcategoryMethodMap ;
class GGS_EXcategoryReaderMap ;
class GGS_EXcategoryTemplateMap ;
class GGS_L_actualParametersSignature ;
class GGS_M_accessors_map ;
class GGS_typeGalgas_jokerInParameterList ;
class cPtr_typeGalgas_jokerInParameterList ;
class GGS_typeGalgas_bool ;
class cPtr_typeGalgas_bool ;
class GGS_typeGalgas_uint ;
class cPtr_typeGalgas_uint ;
class GGS_typeGalgas_char ;
class cPtr_typeGalgas_char ;
class GGS_typeGalgas_string ;
class cPtr_typeGalgas_string ;
class GGS_typeGalgas_sint ;
class cPtr_typeGalgas_sint ;
class GGS_typeGalgas_sint64 ;
class cPtr_typeGalgas_sint64 ;
class GGS_typeGalgas_uint64 ;
class cPtr_typeGalgas_uint64 ;
class GGS_typeGalgas_double ;
class cPtr_typeGalgas_double ;
class GGS_typeGalgas_binaryset ;
class cPtr_typeGalgas_binaryset ;
class GGS_C_galgasPrimitiveType ;
class cPtr_C_galgasPrimitiveType ;
class GGS_typeGalgas_location ;
class cPtr_typeGalgas_location ;
class GGS_typeGalgas_lstring ;
class cPtr_typeGalgas_lstring ;
class GGS_typeGalgas_lchar ;
class cPtr_typeGalgas_lchar ;
class GGS_typeGalgas_lbool ;
class cPtr_typeGalgas_lbool ;
class GGS_typeGalgas_luint ;
class cPtr_typeGalgas_luint ;
class GGS_typeGalgas_luint64 ;
class cPtr_typeGalgas_luint64 ;
class GGS_typeGalgas_lsint ;
class cPtr_typeGalgas_lsint ;
class GGS_typeGalgas_lsint64 ;
class cPtr_typeGalgas_lsint64 ;
class GGS_typeGalgas_ldouble ;
class cPtr_typeGalgas_ldouble ;
class GGS_typeGalgas_stringset ;
class cPtr_typeGalgas_stringset ;
class GGS_typeGalgas_filewrapper ;
class cPtr_typeGalgas_filewrapper ;
class GGS_typeGalgas_data ;
class cPtr_typeGalgas_data ;
class GGS_typeGalgas_object ;
class cPtr_typeGalgas_object ;
class GGS_typeGalgas_type ;
class cPtr_typeGalgas_type ;
class GGS_typeGalgas_function ;
class cPtr_typeGalgas_function ;
class GGS_typeTableMethodes ;
class GGS_typeGalgasUndefinedExternType ;
class cPtr_typeGalgasUndefinedExternType ;
class GGS_M_externTypeConstructorMap ;
class GGS_typeGalgasExternType ;
class cPtr_typeGalgasExternType ;
class GGS_M_terminalSymbolsMapForUse ;
class GGS_M_lexiqueComponents ;
class GGS_typeTableEnAvant ;
class GGS_M_nonterminalSymbolAlts ;
class GGS_C_grammarForSemantics ;
class cPtr_C_grammarForSemantics ;
class GGS_AC_typeForGrammarComponent ;
class cPtr_AC_typeForGrammarComponent ;
class GGS_M_typesForGrammarComponent ;
class GGS_L_grammarsMap ;
class GGS_typeClassInheritedMessagesMap ;
class GGS_typeSemanticAttributesMap ;
class GGS_insertOrSearchMethodList ;
class GGS_typeDefEntiteUtilisable ;
class cPtr_typeDefEntiteUtilisable ;
class GGS_typeGalgasUndefinedListType ;
class cPtr_typeGalgasUndefinedListType ;
class GGS_typeGalgasListType ;
class cPtr_typeGalgasListType ;
class GGS_typeGalgasStructType ;
class cPtr_typeGalgasStructType ;
class GGS_typeGalgasListmapType ;
class cPtr_typeGalgasListmapType ;
class GGS_domainRelationMap ;
class GGS_domainModifierMap ;
class GGS_domainAttributeMap ;
class GGS_typeGalgasDomainType ;
class cPtr_typeGalgasDomainType ;
class GGS_typeGalgasUndefinedSortedListType ;
class cPtr_typeGalgasUndefinedSortedListType ;
class GGS_typeGalgasSortedListType ;
class cPtr_typeGalgasSortedListType ;
class GGS_typeTableBlocsDeTable ;
class GGS_typeGalgasUndefinedMapType ;
class cPtr_typeGalgasUndefinedMapType ;
class GGS_mapModifierMap ;
class GGS_EXmapMethodMap ;
class GGS_typeGalgasMapType ;
class cPtr_typeGalgasMapType ;
class GGS_typeGalgasUndefinedMapindexType ;
class cPtr_typeGalgasUndefinedMapindexType ;
class GGS_typeGalgasMapindexType ;
class cPtr_typeGalgasMapindexType ;
class GGS_typeGalgasUndefinedClassType ;
class cPtr_typeGalgasUndefinedClassType ;
class GGS_L_lazyAttributeList ;
class GGS_typeGalgasClassType ;
class cPtr_typeGalgasClassType ;
class GGS_typeEntiteRoutine ;
class cPtr_typeEntiteRoutine ;
class GGS_typeEntiteFonction ;
class cPtr_typeEntiteFonction ;
class GGS_typeEnumMessageMap ;
class GGS_typeGalgas_enum ;
class cPtr_typeGalgas_enum ;
class GGS_M_cli_options ;
class GGS_M_optionComponents ;
class GGS_M_grammarComponents ;
class GGS_M_semanticsComponents ;
class GGS_M_regularFilesEX ;
class GGS_filewrapperTemplateMapEX ;
class GGS_M_filewrappersEX ;
class GGS_labelForPopUpList ;
class GGS_EXtextMacroList ;
class GGS_EXreaderMap ;
class GGS_typeGalgas_application ;
class cPtr_typeGalgas_application ;
class GGS_templateInstruction ;
class cPtr_templateInstruction ;
class GGS_templateInstructionList ;
class GGS_typeExpression ;
class cPtr_typeExpression ;
class GGS_templateInstructionString ;
class cPtr_templateInstructionString ;
class GGS_templateInstructionExpression ;
class cPtr_templateInstructionExpression ;
class GGS_templateBlockInstruction ;
class cPtr_templateBlockInstruction ;
class GGS_templateInstructionGetColumnLocation ;
class cPtr_templateInstructionGetColumnLocation ;
class GGS_templateInstructionGotoColumnLocation ;
class cPtr_templateInstructionGotoColumnLocation ;
class GGS_templateInstructionForeach ;
class cPtr_templateInstructionForeach ;
class GGS_templateInstructionIfBranchList ;
class GGS_templateInstructionIf ;
class cPtr_templateInstructionIf ;
class GGS_templateInstructionSwitchBranchList ;
class GGS_templateInstructionSwitch ;
class cPtr_templateInstructionSwitch ;
class GGS_EXsemanticContext ;
class GGS_M_syntaxComponents ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_AC_semanticsEntity'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_AC_semanticsEntity ;

//---------------------------------------------------------------------------*

class GGS_AC_semanticsEntity : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_AC_semanticsEntity (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_AC_semanticsEntity (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_AC_semanticsEntity (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_AC_semanticsEntity
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_AC_semanticsEntity * getPtr (void) const {
    return (cPtr_AC_semanticsEntity *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageTypeEntite' message
  public : GGS_string reader_messageTypeEntite (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_AC_semanticsEntity * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_semanticsEntity * operator () (LOCATION_ARGS) const {
      return (cPtr_AC_semanticsEntity *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_AC_semanticsEntity castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__AC_semanticsEntity ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Map '@M_semanticsEntitiesForUse'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_semanticsEntitiesForUse ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_M_semanticsEntitiesForUse ;

//---------------------------------------------------------------------------*

class GGS_M_semanticsEntitiesForUse : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_M_semanticsEntitiesForUse cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_M_semanticsEntitiesForUse & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_M_semanticsEntitiesForUse & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_M_semanticsEntitiesForUse castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_semanticsEntitiesForUse * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_semanticsEntitiesForUse * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_semanticsEntitiesForUse constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_M_semanticsEntitiesForUse constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_AC_semanticsEntity & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_semanticsEntity &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_semanticsEntity   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_AC_semanticsEntity & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_AC_semanticsEntity & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_M_semanticsEntitiesForUse constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_M_semanticsEntitiesForUse & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_semanticsEntitiesForUse reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_semanticsEntitiesForUse & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_semanticsEntitiesForUse & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_AC_semanticsEntity   & _aDefEntite (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Class for 'EXactualParametersPassingMode' Enumeration            *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_EXactualParametersPassingMode ;

//---------------------------------------------------------------------------*

class GGS_EXactualParametersPassingMode : public GGS__root {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_parameterIn, enum_parameterOut, enum_parameterOutIn} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const { return mValue ; }

//--- Default constructor
  public : inline GGS_EXactualParametersPassingMode (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_EXactualParametersPassingMode (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline PMUInt16 bitCount (void) { return 2 ; }

//--- Is built ?
  public : bool isBuilt (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_EXactualParametersPassingMode castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Construction from GALGAS constructor
  public : static inline GGS_EXactualParametersPassingMode  constructor_parameterIn (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_EXactualParametersPassingMode (enum_parameterIn) ;
  }
  public : static inline GGS_EXactualParametersPassingMode  constructor_parameterOut (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_EXactualParametersPassingMode (enum_parameterOut) ;
  }
  public : static inline GGS_EXactualParametersPassingMode  constructor_parameterOutIn (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_EXactualParametersPassingMode (enum_parameterOutIn) ;
  }

//--- Readers
  public : GGS_string reader_actualArgumentMessage (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- 'description' reader
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--- Drop operation
  public : inline void drop (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool operator_isEqual (const GGS_EXactualParametersPassingMode inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_EXactualParametersPassingMode inOperand) const ;
  public : GGS_bool operator_infOrEqual (const GGS_EXactualParametersPassingMode inOperand) const ;
  public : GGS_bool operator_supOrEqual (const GGS_EXactualParametersPassingMode inOperand) const ;
  public : GGS_bool operator_strictInf (const GGS_EXactualParametersPassingMode inOperand) const ;
  public : GGS_bool operator_strictSup (const GGS_EXactualParametersPassingMode inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeInstruction'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeInstruction ;

//---------------------------------------------------------------------------*

class GGS_typeInstruction : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_typeInstruction (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_typeInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeInstruction * getPtr (void) const {
    return (cPtr_typeInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeInstruction *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__typeInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@typeInstructionList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeInstructionList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeInstructionList ;

//---------------------------------------------------------------------------*

class GGS_typeInstructionList : public AC_GGS_list {
  public : typedef elementOf_GGS_typeInstructionList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_typeInstructionList constructor_emptyList (void) ;
  public : static GGS_typeInstructionList constructor_listWithValue (const GGS_typeInstruction & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_typeInstructionList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_typeInstructionList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_typeInstructionList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_typeInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_typeInstruction & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_typeInstruction & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_typeInstruction & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_typeInstruction & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_typeInstructionList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_typeInstruction & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_typeInstructionList operator_concat (const GGS_typeInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_typeInstruction & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_typeInstruction & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_typeInstruction & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_typeInstruction 
  reader_mInstructionAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMInstructionAtIndex (C_CompilerEx & inLexique,
                              const GGS_typeInstruction  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeInstructionList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_typeInstructionList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_typeInstruction   & _mInstruction (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@typeListModel'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListModel ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeListModel ;

//---------------------------------------------------------------------------*

class GGS_typeListModel : public AC_GGS_list {
  public : typedef elementOf_GGS_typeListModel cElement ;

//--- Constructor 'emptyList'
  public : static GGS_typeListModel constructor_emptyList (void) ;
  public : static GGS_typeListModel constructor_listWithValue (const GGS_lstring & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_typeListModel & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_typeListModel
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_typeListModel
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_typeListModel * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_lstring & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_lstring & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_lstring & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_lstring & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_typeListModel inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_typeListModel operator_concat (const GGS_typeListModel & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mTypeNameAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMTypeNameAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeListModel castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_typeListModel & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mTypeName (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_TypeModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_TypeModel ;

//---------------------------------------------------------------------------*

class GGS_TypeModel : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_TypeModel (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_TypeModel (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_TypeModel (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_TypeModel
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_TypeModel * getPtr (void) const {
    return (cPtr_TypeModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_TypeModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_TypeModel * operator () (LOCATION_ARGS) const {
      return (cPtr_TypeModel *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_TypeModel castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__TypeModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_BoolModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_BoolModel ;

//---------------------------------------------------------------------------*

class GGS_BoolModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_BoolModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_BoolModel (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_BoolModel (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_BoolModel
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_BoolModel constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_BoolModel * getPtr (void) const {
    return (cPtr_BoolModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_BoolModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_BoolModel * operator () (LOCATION_ARGS) const {
      return (cPtr_BoolModel *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_BoolModel castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__BoolModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_CharModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_CharModel ;

//---------------------------------------------------------------------------*

class GGS_CharModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_CharModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_CharModel (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_CharModel (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_CharModel
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_CharModel constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_CharModel * getPtr (void) const {
    return (cPtr_CharModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_CharModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_CharModel * operator () (LOCATION_ARGS) const {
      return (cPtr_CharModel *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_CharModel castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__CharModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_UIntModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_UIntModel ;

//---------------------------------------------------------------------------*

class GGS_UIntModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_UIntModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_UIntModel (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_UIntModel (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_UIntModel
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_UIntModel constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_UIntModel * getPtr (void) const {
    return (cPtr_UIntModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_UIntModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_UIntModel * operator () (LOCATION_ARGS) const {
      return (cPtr_UIntModel *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_UIntModel castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__UIntModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_SIntModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_SIntModel ;

//---------------------------------------------------------------------------*

class GGS_SIntModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_SIntModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_SIntModel (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_SIntModel (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_SIntModel
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_SIntModel constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_SIntModel * getPtr (void) const {
    return (cPtr_SIntModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_SIntModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_SIntModel * operator () (LOCATION_ARGS) const {
      return (cPtr_SIntModel *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_SIntModel castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__SIntModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_UInt64Model'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_UInt64Model ;

//---------------------------------------------------------------------------*

class GGS_UInt64Model : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_UInt64Model (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_UInt64Model (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_UInt64Model (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_UInt64Model
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_UInt64Model constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_UInt64Model * getPtr (void) const {
    return (cPtr_UInt64Model *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_UInt64Model * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_UInt64Model * operator () (LOCATION_ARGS) const {
      return (cPtr_UInt64Model *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_UInt64Model castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__UInt64Model ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_SInt64Model'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_SInt64Model ;

//---------------------------------------------------------------------------*

class GGS_SInt64Model : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_SInt64Model (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_SInt64Model (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_SInt64Model (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_SInt64Model
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_SInt64Model constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_SInt64Model * getPtr (void) const {
    return (cPtr_SInt64Model *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_SInt64Model * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_SInt64Model * operator () (LOCATION_ARGS) const {
      return (cPtr_SInt64Model *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_SInt64Model castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__SInt64Model ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_DoubleModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_DoubleModel ;

//---------------------------------------------------------------------------*

class GGS_DoubleModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_DoubleModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_DoubleModel (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_DoubleModel (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_DoubleModel
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_DoubleModel constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_DoubleModel * getPtr (void) const {
    return (cPtr_DoubleModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_DoubleModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_DoubleModel * operator () (LOCATION_ARGS) const {
      return (cPtr_DoubleModel *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_DoubleModel castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__DoubleModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_StringModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_StringModel ;

//---------------------------------------------------------------------------*

class GGS_StringModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_StringModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_StringModel (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_StringModel (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_StringModel
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_StringModel constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_StringModel * getPtr (void) const {
    return (cPtr_StringModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_StringModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_StringModel * operator () (LOCATION_ARGS) const {
      return (cPtr_StringModel *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_StringModel castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__StringModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_LBoolModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_LBoolModel ;

//---------------------------------------------------------------------------*

class GGS_LBoolModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_LBoolModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_LBoolModel (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_LBoolModel (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_LBoolModel
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_LBoolModel constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_LBoolModel * getPtr (void) const {
    return (cPtr_LBoolModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LBoolModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LBoolModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LBoolModel *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_LBoolModel castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__LBoolModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_LCharModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_LCharModel ;

//---------------------------------------------------------------------------*

class GGS_LCharModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_LCharModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_LCharModel (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_LCharModel (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_LCharModel
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_LCharModel constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_LCharModel * getPtr (void) const {
    return (cPtr_LCharModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LCharModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LCharModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LCharModel *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_LCharModel castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__LCharModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_LUIntModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_LUIntModel ;

//---------------------------------------------------------------------------*

class GGS_LUIntModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_LUIntModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_LUIntModel (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_LUIntModel (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_LUIntModel
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_LUIntModel constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_LUIntModel * getPtr (void) const {
    return (cPtr_LUIntModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LUIntModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LUIntModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LUIntModel *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_LUIntModel castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__LUIntModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_LSIntModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_LSIntModel ;

//---------------------------------------------------------------------------*

class GGS_LSIntModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_LSIntModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_LSIntModel (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_LSIntModel (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_LSIntModel
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_LSIntModel constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_LSIntModel * getPtr (void) const {
    return (cPtr_LSIntModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LSIntModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LSIntModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LSIntModel *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_LSIntModel castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__LSIntModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_LUInt64Model'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_LUInt64Model ;

//---------------------------------------------------------------------------*

class GGS_LUInt64Model : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_LUInt64Model (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_LUInt64Model (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_LUInt64Model (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_LUInt64Model
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_LUInt64Model constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_LUInt64Model * getPtr (void) const {
    return (cPtr_LUInt64Model *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LUInt64Model * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LUInt64Model * operator () (LOCATION_ARGS) const {
      return (cPtr_LUInt64Model *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_LUInt64Model castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__LUInt64Model ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_LSInt64Model'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_LSInt64Model ;

//---------------------------------------------------------------------------*

class GGS_LSInt64Model : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_LSInt64Model (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_LSInt64Model (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_LSInt64Model (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_LSInt64Model
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_LSInt64Model constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_LSInt64Model * getPtr (void) const {
    return (cPtr_LSInt64Model *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LSInt64Model * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LSInt64Model * operator () (LOCATION_ARGS) const {
      return (cPtr_LSInt64Model *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_LSInt64Model castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__LSInt64Model ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_LDoubleModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_LDoubleModel ;

//---------------------------------------------------------------------------*

class GGS_LDoubleModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_LDoubleModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_LDoubleModel (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_LDoubleModel (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_LDoubleModel
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_LDoubleModel constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_LDoubleModel * getPtr (void) const {
    return (cPtr_LDoubleModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LDoubleModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LDoubleModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LDoubleModel *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_LDoubleModel castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__LDoubleModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_LStringModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_LStringModel ;

//---------------------------------------------------------------------------*

class GGS_LStringModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_LStringModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_LStringModel (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_LStringModel (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_LStringModel
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_LStringModel constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_LStringModel * getPtr (void) const {
    return (cPtr_LStringModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LStringModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LStringModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LStringModel *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_LStringModel castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__LStringModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_StringsetModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_StringsetModel ;

//---------------------------------------------------------------------------*

class GGS_StringsetModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_StringsetModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_StringsetModel (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_StringsetModel (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_StringsetModel
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_StringsetModel constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_StringsetModel * getPtr (void) const {
    return (cPtr_StringsetModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_StringsetModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_StringsetModel * operator () (LOCATION_ARGS) const {
      return (cPtr_StringsetModel *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_StringsetModel castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__StringsetModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_LocationModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_LocationModel ;

//---------------------------------------------------------------------------*

class GGS_LocationModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_LocationModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_LocationModel (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_LocationModel (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_LocationModel
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_LocationModel constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_LocationModel * getPtr (void) const {
    return (cPtr_LocationModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LocationModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LocationModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LocationModel *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_LocationModel castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__LocationModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_ListModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_ListModel ;

//---------------------------------------------------------------------------*

class GGS_ListModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_ListModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_ListModel (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_ListModel (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_ListModel
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_ListModel constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeListModel & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_ListModel * getPtr (void) const {
    return (cPtr_ListModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_ListModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_ListModel * operator () (LOCATION_ARGS) const {
      return (cPtr_ListModel *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_ListModel castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__ListModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_MapModel'                         *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_MapModel ;

//---------------------------------------------------------------------------*

class GGS_MapModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_MapModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_MapModel (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_MapModel (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_MapModel
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_MapModel constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeListModel & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_MapModel * getPtr (void) const {
    return (cPtr_MapModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_MapModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_MapModel * operator () (LOCATION_ARGS) const {
      return (cPtr_MapModel *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_MapModel castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__MapModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@enumConstantMap'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumConstantMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_enumConstantMap ;

//---------------------------------------------------------------------------*

class GGS_enumConstantMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_enumConstantMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_enumConstantMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_enumConstantMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_enumConstantMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_enumConstantMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_enumConstantMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_enumConstantMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_enumConstantMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_uint & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_uint &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_uint   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_uint & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_uint & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_enumConstantMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_enumConstantMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_enumConstantMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_enumConstantMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_enumConstantMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _mConstantIndex (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@enumUsedConstantMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumUsedConstantMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_enumUsedConstantMap ;

//---------------------------------------------------------------------------*

class GGS_enumUsedConstantMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_enumUsedConstantMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_enumUsedConstantMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_enumUsedConstantMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_enumUsedConstantMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_enumUsedConstantMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_enumUsedConstantMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_enumUsedConstantMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_enumUsedConstantMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey

                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_enumUsedConstantMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_enumUsedConstantMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_enumUsedConstantMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_enumUsedConstantMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_enumUsedConstantMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@EXenumMessageMap'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_EXenumMessageMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_EXenumMessageMap ;

//---------------------------------------------------------------------------*

class GGS_EXenumMessageMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_EXenumMessageMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_EXenumMessageMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_EXenumMessageMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_EXenumMessageMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_EXenumMessageMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_EXenumMessageMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_EXenumMessageMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_EXenumMessageMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey

                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_EXenumMessageMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_EXenumMessageMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_EXenumMessageMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_EXenumMessageMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_EXenumMessageMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_EnumModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_EnumModel ;

//---------------------------------------------------------------------------*

class GGS_EnumModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_EnumModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_EnumModel (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_EnumModel (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_EnumModel
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_EnumModel constructor_new (C_CompilerEx & inLexique,
                                const GGS_enumConstantMap & argument_0,
                                const GGS_EXenumMessageMap & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_EnumModel * getPtr (void) const {
    return (cPtr_EnumModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_EnumModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_EnumModel * operator () (LOCATION_ARGS) const {
      return (cPtr_EnumModel *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_EnumModel castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__EnumModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Map '@externTypeConstructorMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_externTypeConstructorMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_externTypeConstructorMap ;

//---------------------------------------------------------------------------*

class GGS_externTypeConstructorMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_externTypeConstructorMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_externTypeConstructorMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_externTypeConstructorMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_externTypeConstructorMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_externTypeConstructorMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_externTypeConstructorMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_externTypeConstructorMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_externTypeConstructorMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_typeListModel & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_typeListModel &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_typeListModel   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_typeListModel & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_typeListModel & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_externTypeConstructorMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_externTypeConstructorMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_externTypeConstructorMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_externTypeConstructorMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_externTypeConstructorMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_typeListModel   & _mFormalInputArgumentList (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@externTypeReaderMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_externTypeReaderMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_externTypeReaderMap ;

//---------------------------------------------------------------------------*

class GGS_externTypeReaderMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_externTypeReaderMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_externTypeReaderMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_externTypeReaderMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_externTypeReaderMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_externTypeReaderMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_externTypeReaderMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_externTypeReaderMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_externTypeReaderMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_signatureForGrammarAnalysis & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_signatureForGrammarAnalysis &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_signatureForGrammarAnalysis   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_signatureForGrammarAnalysis & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_signatureForGrammarAnalysis & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_externTypeReaderMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_externTypeReaderMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_externTypeReaderMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_externTypeReaderMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_externTypeReaderMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_signatureForGrammarAnalysis   & _mReaderFormalArgumentList (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Map '@externTypeModifierMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_externTypeModifierMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_externTypeModifierMap ;

//---------------------------------------------------------------------------*

class GGS_externTypeModifierMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_externTypeModifierMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_externTypeModifierMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_externTypeModifierMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_externTypeModifierMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_externTypeModifierMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_externTypeModifierMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_externTypeModifierMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_externTypeModifierMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_signatureForGrammarAnalysis & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_signatureForGrammarAnalysis &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_signatureForGrammarAnalysis   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_signatureForGrammarAnalysis & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_signatureForGrammarAnalysis & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_externTypeModifierMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_externTypeModifierMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_externTypeModifierMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_externTypeModifierMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_externTypeModifierMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_signatureForGrammarAnalysis   & _mModifierFormalArgumentList (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_ExternTypeModel'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_ExternTypeModel ;

//---------------------------------------------------------------------------*

class GGS_ExternTypeModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_ExternTypeModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_ExternTypeModel (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_ExternTypeModel (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_ExternTypeModel
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_ExternTypeModel constructor_new (C_CompilerEx & inLexique,
                                const GGS_externTypeConstructorMap & argument_0,
                                const GGS_externTypeReaderMap & argument_1,
                                const GGS_externTypeModifierMap & argument_2,
                                const GGS_typeListModel & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_ExternTypeModel * getPtr (void) const {
    return (cPtr_ExternTypeModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_ExternTypeModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_ExternTypeModel * operator () (LOCATION_ARGS) const {
      return (cPtr_ExternTypeModel *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_ExternTypeModel castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__ExternTypeModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@classMessageMap'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_classMessageMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_classMessageMap ;

//---------------------------------------------------------------------------*

class GGS_classMessageMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_classMessageMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_classMessageMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_classMessageMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_classMessageMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_classMessageMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_classMessageMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_classMessageMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_classMessageMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey

                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_classMessageMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_classMessageMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_classMessageMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_classMessageMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_classMessageMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_ClassModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_ClassModel ;

//---------------------------------------------------------------------------*

class GGS_ClassModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_ClassModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_ClassModel (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_ClassModel (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_ClassModel
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_ClassModel constructor_new (C_CompilerEx & inLexique,
                                const GGS_bool& argument_0,
                                const GGS_stringset & argument_1,
                                const GGS_typeListModel & argument_2,
                                const GGS_classMessageMap & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_ClassModel * getPtr (void) const {
    return (cPtr_ClassModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_stringset  reader_mSuperClasses (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeListModel  reader_mAttributeList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_classMessageMap  reader_mMessageMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_ClassModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_ClassModel * operator () (LOCATION_ARGS) const {
      return (cPtr_ClassModel *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_ClassModel castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__ClassModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                             Map '@ModelMap'                               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ModelMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_ModelMap ;

//---------------------------------------------------------------------------*

class GGS_ModelMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_ModelMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_ModelMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_ModelMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_ModelMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_ModelMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_ModelMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_ModelMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_ModelMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_TypeModel & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_TypeModel &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_TypeModel   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_TypeModel & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_TypeModel & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_ModelMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_ModelMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_ModelMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_ModelMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_ModelMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_TypeModel   & _mType (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                             Map '@ActionMap'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ActionMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_ActionMap ;

//---------------------------------------------------------------------------*

class GGS_ActionMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_ActionMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_ActionMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_ActionMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_ActionMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_ActionMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_ActionMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_ActionMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_ActionMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_signatureForGrammarAnalysis & inValue0,
                                             const GGS_bool& inValue1
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_signatureForGrammarAnalysis &  inParameter0,
                                const GGS_bool&  inParameter1 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_signatureForGrammarAnalysis   & outParameter0,
                                GGS_bool  & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_signatureForGrammarAnalysis & inParameter0,
                                   const GGS_bool& inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_signatureForGrammarAnalysis & outParameter0,
                                   GGS_bool& outParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_ActionMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_ActionMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_ActionMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_ActionMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_ActionMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_signatureForGrammarAnalysis   & _mSignature (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mIsExtern (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Class for 'localConstantBuildStyleEnum' Enumeration             *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_localConstantBuildStyleEnum ;

//---------------------------------------------------------------------------*

class GGS_localConstantBuildStyleEnum : public GGS__root {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_firstIsKeyOtherMapStyle, enum_listStyle, enum_mapStyle} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const { return mValue ; }

//--- Default constructor
  public : inline GGS_localConstantBuildStyleEnum (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_localConstantBuildStyleEnum (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline PMUInt16 bitCount (void) { return 2 ; }

//--- Is built ?
  public : bool isBuilt (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_localConstantBuildStyleEnum castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Construction from GALGAS constructor
  public : static inline GGS_localConstantBuildStyleEnum  constructor_firstIsKeyOtherMapStyle (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_localConstantBuildStyleEnum (enum_firstIsKeyOtherMapStyle) ;
  }
  public : static inline GGS_localConstantBuildStyleEnum  constructor_listStyle (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_localConstantBuildStyleEnum (enum_listStyle) ;
  }
  public : static inline GGS_localConstantBuildStyleEnum  constructor_mapStyle (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_localConstantBuildStyleEnum (enum_mapStyle) ;
  }

//--- Readers

//--- 'description' reader
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--- Drop operation
  public : inline void drop (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool operator_isEqual (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool operator_infOrEqual (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool operator_supOrEqual (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool operator_strictInf (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool operator_strictSup (const GGS_localConstantBuildStyleEnum inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_AC_galgasType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_AC_galgasType ;

//---------------------------------------------------------------------------*

class GGS_AC_galgasType : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_AC_galgasType (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_AC_galgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_AC_galgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_AC_galgasType
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_AC_galgasType * getPtr (void) const {
    return (cPtr_AC_galgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_AC_galgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_galgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_AC_galgasType *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_AC_galgasType castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__AC_galgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeEntiteType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeEntiteType ;

//---------------------------------------------------------------------------*

class GGS_typeEntiteType : public GGS_AC_semanticsEntity {
//--- Default constructor
  public : inline GGS_typeEntiteType (void) :
  GGS_AC_semanticsEntity () {}

//--- Pointer assignment constructor
  public : GGS_typeEntiteType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeEntiteType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeEntiteType
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeEntiteType constructor_new (C_CompilerEx & inLexique,
                                const GGS_AC_galgasType & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeEntiteType * getPtr (void) const {
    return (cPtr_typeEntiteType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_galgasType  reader_aDefType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- 'messageTypeEntite' message
  public : GGS_string reader_messageTypeEntite (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeEntiteType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeEntiteType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeEntiteType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeEntiteType castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeEntiteType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeCplusPlusName'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeCplusPlusName ;

//---------------------------------------------------------------------------*

class GGS_typeCplusPlusName : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_typeCplusPlusName (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_typeCplusPlusName (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeCplusPlusName (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeCplusPlusName
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeCplusPlusName * getPtr (void) const {
    return (cPtr_typeCplusPlusName *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mVariableLocation (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeCplusPlusName * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeCplusPlusName * operator () (LOCATION_ARGS) const {
      return (cPtr_typeCplusPlusName *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeCplusPlusName castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__typeCplusPlusName ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeDirectName'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeDirectName ;

//---------------------------------------------------------------------------*

class GGS_typeDirectName : public GGS_typeCplusPlusName {
//--- Default constructor
  public : inline GGS_typeDirectName (void) :
  GGS_typeCplusPlusName () {}

//--- Pointer assignment constructor
  public : GGS_typeDirectName (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeDirectName (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeDirectName
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeDirectName constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeDirectName * getPtr (void) const {
    return (cPtr_typeDirectName *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeDirectName * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeDirectName * operator () (LOCATION_ARGS) const {
      return (cPtr_typeDirectName *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeDirectName castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeDirectName ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeCurrentObjectName'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeCurrentObjectName ;

//---------------------------------------------------------------------------*

class GGS_typeCurrentObjectName : public GGS_typeCplusPlusName {
//--- Default constructor
  public : inline GGS_typeCurrentObjectName (void) :
  GGS_typeCplusPlusName () {}

//--- Pointer assignment constructor
  public : GGS_typeCurrentObjectName (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeCurrentObjectName (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeCurrentObjectName
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeCurrentObjectName constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeCurrentObjectName * getPtr (void) const {
    return (cPtr_typeCurrentObjectName *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeCurrentObjectName * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeCurrentObjectName * operator () (LOCATION_ARGS) const {
      return (cPtr_typeCurrentObjectName *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeCurrentObjectName castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeCurrentObjectName ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeCppStarThisName'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeCppStarThisName ;

//---------------------------------------------------------------------------*

class GGS_typeCppStarThisName : public GGS_typeCplusPlusName {
//--- Default constructor
  public : inline GGS_typeCppStarThisName (void) :
  GGS_typeCplusPlusName () {}

//--- Pointer assignment constructor
  public : GGS_typeCppStarThisName (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeCppStarThisName (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeCppStarThisName
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeCppStarThisName constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeCppStarThisName * getPtr (void) const {
    return (cPtr_typeCppStarThisName *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_string reader_mGalgasTypeName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeCppStarThisName * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeCppStarThisName * operator () (LOCATION_ARGS) const {
      return (cPtr_typeCppStarThisName *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeCppStarThisName castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeCppStarThisName ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeCppThisInCategoryName'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeCppThisInCategoryName ;

//---------------------------------------------------------------------------*

class GGS_typeCppThisInCategoryName : public GGS_typeCplusPlusName {
//--- Default constructor
  public : inline GGS_typeCppThisInCategoryName (void) :
  GGS_typeCplusPlusName () {}

//--- Pointer assignment constructor
  public : GGS_typeCppThisInCategoryName (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeCppThisInCategoryName (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeCppThisInCategoryName
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeCppThisInCategoryName constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeCppThisInCategoryName * getPtr (void) const {
    return (cPtr_typeCppThisInCategoryName *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeCppThisInCategoryName * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeCppThisInCategoryName * operator () (LOCATION_ARGS) const {
      return (cPtr_typeCppThisInCategoryName *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeCppThisInCategoryName castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeCppThisInCategoryName ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeCppInheritedName'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeCppInheritedName ;

//---------------------------------------------------------------------------*

class GGS_typeCppInheritedName : public GGS_typeCplusPlusName {
//--- Default constructor
  public : inline GGS_typeCppInheritedName (void) :
  GGS_typeCplusPlusName () {}

//--- Pointer assignment constructor
  public : GGS_typeCppInheritedName (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeCppInheritedName (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeCppInheritedName
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeCppInheritedName constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeCppInheritedName * getPtr (void) const {
    return (cPtr_typeCppInheritedName *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeCppInheritedName * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeCppInheritedName * operator () (LOCATION_ARGS) const {
      return (cPtr_typeCppInheritedName *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeCppInheritedName castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeCppInheritedName ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeAutomaticName'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeAutomaticName ;

//---------------------------------------------------------------------------*

class GGS_typeAutomaticName : public GGS_typeCplusPlusName {
//--- Default constructor
  public : inline GGS_typeAutomaticName (void) :
  GGS_typeCplusPlusName () {}

//--- Pointer assignment constructor
  public : GGS_typeAutomaticName (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeAutomaticName (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeAutomaticName
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeAutomaticName constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeAutomaticName * getPtr (void) const {
    return (cPtr_typeAutomaticName *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_string reader_mName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeAutomaticName * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeAutomaticName * operator () (LOCATION_ARGS) const {
      return (cPtr_typeAutomaticName *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeAutomaticName castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeAutomaticName ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeLocationAutomaticName'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeLocationAutomaticName ;

//---------------------------------------------------------------------------*

class GGS_typeLocationAutomaticName : public GGS_typeCplusPlusName {
//--- Default constructor
  public : inline GGS_typeLocationAutomaticName (void) :
  GGS_typeCplusPlusName () {}

//--- Pointer assignment constructor
  public : GGS_typeLocationAutomaticName (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeLocationAutomaticName (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeLocationAutomaticName
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeLocationAutomaticName constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_uint & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeLocationAutomaticName * getPtr (void) const {
    return (cPtr_typeLocationAutomaticName *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeLocationAutomaticName * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeLocationAutomaticName * operator () (LOCATION_ARGS) const {
      return (cPtr_typeLocationAutomaticName *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeLocationAutomaticName castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeLocationAutomaticName ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeOperandName'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeOperandName ;

//---------------------------------------------------------------------------*

class GGS_typeOperandName : public GGS_typeCplusPlusName {
//--- Default constructor
  public : inline GGS_typeOperandName (void) :
  GGS_typeCplusPlusName () {}

//--- Pointer assignment constructor
  public : GGS_typeOperandName (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeOperandName (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeOperandName
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeOperandName constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_string& argument_1,
                                const GGS_bool& argument_2,
                                const GGS_bool& argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeOperandName * getPtr (void) const {
    return (cPtr_typeOperandName *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeOperandName * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeOperandName * operator () (LOCATION_ARGS) const {
      return (cPtr_typeOperandName *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeOperandName castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeOperandName ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_typeKeyName'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeKeyName ;

//---------------------------------------------------------------------------*

class GGS_typeKeyName : public GGS_typeCplusPlusName {
//--- Default constructor
  public : inline GGS_typeKeyName (void) :
  GGS_typeCplusPlusName () {}

//--- Pointer assignment constructor
  public : GGS_typeKeyName (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeKeyName (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeKeyName
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeKeyName constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_bool& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeKeyName * getPtr (void) const {
    return (cPtr_typeKeyName *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeKeyName * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeKeyName * operator () (LOCATION_ARGS) const {
      return (cPtr_typeKeyName *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeKeyName castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeKeyName ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_typeNullName'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeNullName ;

//---------------------------------------------------------------------------*

class GGS_typeNullName : public GGS_typeCplusPlusName {
//--- Default constructor
  public : inline GGS_typeNullName (void) :
  GGS_typeCplusPlusName () {}

//--- Pointer assignment constructor
  public : GGS_typeNullName (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeNullName (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeNullName
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeNullName constructor_new (C_CompilerEx & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeNullName * getPtr (void) const {
    return (cPtr_typeNullName *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeNullName * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeNullName * operator () (LOCATION_ARGS) const {
      return (cPtr_typeNullName *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeNullName castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeNullName ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  list '@typeListeTypesEtNomsArgMethode'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListeTypesEtNomsArgMethode ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeListeTypesEtNomsArgMethode ;

//---------------------------------------------------------------------------*

class GGS_typeListeTypesEtNomsArgMethode : public AC_GGS_list {
  public : typedef elementOf_GGS_typeListeTypesEtNomsArgMethode cElement ;

//--- Constructor 'emptyList'
  public : static GGS_typeListeTypesEtNomsArgMethode constructor_emptyList (void) ;
  public : static GGS_typeListeTypesEtNomsArgMethode constructor_listWithValue (const GGS_AC_galgasType & argument_0,
                                const GGS_formalArgumentPassingModeAST& argument_1,
                                const GGS_typeCplusPlusName & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_lstring & argument_4) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_typeListeTypesEtNomsArgMethode & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_typeListeTypesEtNomsArgMethode
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_typeListeTypesEtNomsArgMethode
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_typeListeTypesEtNomsArgMethode * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_AC_galgasType & _out_0,
                              GGS_formalArgumentPassingModeAST& _out_1,
                              GGS_typeCplusPlusName & _out_2,
                              GGS_bool& _out_3,
                              GGS_lstring & _out_4
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_AC_galgasType & _out_0,
                             GGS_formalArgumentPassingModeAST& _out_1,
                             GGS_typeCplusPlusName & _out_2,
                             GGS_bool& _out_3,
                             GGS_lstring & _out_4
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_AC_galgasType & _out_0,
                                GGS_formalArgumentPassingModeAST& _out_1,
                                GGS_typeCplusPlusName & _out_2,
                                GGS_bool& _out_3,
                                GGS_lstring & _out_4
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_AC_galgasType & _out_0,
                                 GGS_formalArgumentPassingModeAST& _out_1,
                                 GGS_typeCplusPlusName & _out_2,
                                 GGS_bool& _out_3,
                                 GGS_lstring & _out_4
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_typeListeTypesEtNomsArgMethode inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_formalArgumentPassingModeAST& argument_1,
                                const GGS_typeCplusPlusName & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_lstring & argument_4) ;
//--- Handling '.' GALGAS operator
  public : GGS_typeListeTypesEtNomsArgMethode operator_concat (const GGS_typeListeTypesEtNomsArgMethode & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_formalArgumentPassingModeAST& argument_1,
                                const GGS_typeCplusPlusName & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_lstring & argument_4
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_AC_galgasType & argument_0,
                                const GGS_formalArgumentPassingModeAST& argument_1,
                                const GGS_typeCplusPlusName & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_lstring & argument_4
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_AC_galgasType & argument_0,
                                const GGS_formalArgumentPassingModeAST& argument_1,
                                const GGS_typeCplusPlusName & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_lstring & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_AC_galgasType 
  reader_mTypeAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_formalArgumentPassingModeAST
  reader_mFormalArgumentPassingModeAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_typeCplusPlusName 
  reader_mCppNameAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_bool
  reader_mModeInAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mParameterNameAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMTypeAtIndex (C_CompilerEx & inLexique,
                              const GGS_AC_galgasType  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMFormalArgumentPassingModeAtIndex (C_CompilerEx & inLexique,
                              const GGS_formalArgumentPassingModeAST & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMCppNameAtIndex (C_CompilerEx & inLexique,
                              const GGS_typeCplusPlusName  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMModeInAtIndex (C_CompilerEx & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMParameterNameAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeListeTypesEtNomsArgMethode castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_typeListeTypesEtNomsArgMethode & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_AC_galgasType   & _mType (LOCATION_ARGS) const ;
    public : /* const */ GGS_formalArgumentPassingModeAST  & _mFormalArgumentPassingMode (LOCATION_ARGS) const ;
    public : /* const */ GGS_typeCplusPlusName   & _mCppName (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mModeIn (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mParameterName (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@typeSuperClassesMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeSuperClassesMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeSuperClassesMap ;

//---------------------------------------------------------------------------*

class GGS_typeSuperClassesMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_typeSuperClassesMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_typeSuperClassesMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_typeSuperClassesMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeSuperClassesMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeSuperClassesMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeSuperClassesMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeSuperClassesMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_typeSuperClassesMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey

                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_typeSuperClassesMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_typeSuperClassesMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeSuperClassesMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_typeSuperClassesMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_typeSuperClassesMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  list '@typeListeAttributsSemantiques'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListeAttributsSemantiques ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeListeAttributsSemantiques ;

//---------------------------------------------------------------------------*

class GGS_typeListeAttributsSemantiques : public AC_GGS_list {
  public : typedef elementOf_GGS_typeListeAttributsSemantiques cElement ;

//--- Constructor 'emptyList'
  public : static GGS_typeListeAttributsSemantiques constructor_emptyList (void) ;
  public : static GGS_typeListeAttributsSemantiques constructor_listWithValue (const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_typeListeAttributsSemantiques & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_typeListeAttributsSemantiques
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_typeListeAttributsSemantiques
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_typeListeAttributsSemantiques * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_AC_galgasType & _out_0,
                              GGS_lstring & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_AC_galgasType & _out_0,
                             GGS_lstring & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_AC_galgasType & _out_0,
                                GGS_lstring & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_AC_galgasType & _out_0,
                                 GGS_lstring & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_typeListeAttributsSemantiques inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_typeListeAttributsSemantiques operator_concat (const GGS_typeListeAttributsSemantiques & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_AC_galgasType 
  reader_mAttributTypeAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mAttributeNameAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMAttributTypeAtIndex (C_CompilerEx & inLexique,
                              const GGS_AC_galgasType  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMAttributeNameAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeListeAttributsSemantiques castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_typeListeAttributsSemantiques & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_AC_galgasType   & _mAttributType (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mAttributeName (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@typeTypesList'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTypesList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeTypesList ;

//---------------------------------------------------------------------------*

class GGS_typeTypesList : public AC_GGS_list {
  public : typedef elementOf_GGS_typeTypesList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_typeTypesList constructor_emptyList (void) ;
  public : static GGS_typeTypesList constructor_listWithValue (const GGS_AC_galgasType & argument_0,
                                const GGS_location & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_typeTypesList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_typeTypesList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_typeTypesList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_typeTypesList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_AC_galgasType & _out_0,
                              GGS_location & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_AC_galgasType & _out_0,
                             GGS_location & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_AC_galgasType & _out_0,
                                GGS_location & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_AC_galgasType & _out_0,
                                 GGS_location & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_typeTypesList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_location & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_typeTypesList operator_concat (const GGS_typeTypesList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_AC_galgasType & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_AC_galgasType & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_AC_galgasType 
  reader_mTypeAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_location 
  reader_mEndOfExpressionLocationAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMTypeAtIndex (C_CompilerEx & inLexique,
                              const GGS_AC_galgasType  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMEndOfExpressionLocationAtIndex (C_CompilerEx & inLexique,
                              const GGS_location  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeTypesList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_typeTypesList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_AC_galgasType   & _mType (LOCATION_ARGS) const ;
    public : /* const */ GGS_location   & _mEndOfExpressionLocation (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@L_EXsignature'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_EXsignature ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_L_EXsignature ;

//---------------------------------------------------------------------------*

class GGS_L_EXsignature : public AC_GGS_list {
  public : typedef elementOf_GGS_L_EXsignature cElement ;

//--- Constructor 'emptyList'
  public : static GGS_L_EXsignature constructor_emptyList (void) ;
  public : static GGS_L_EXsignature constructor_listWithValue (const GGS_AC_galgasType & argument_0,
                                const GGS_formalArgumentPassingModeAST& argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_EXsignature & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_L_EXsignature
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_EXsignature
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_L_EXsignature * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_AC_galgasType & _out_0,
                              GGS_formalArgumentPassingModeAST& _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_AC_galgasType & _out_0,
                             GGS_formalArgumentPassingModeAST& _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_AC_galgasType & _out_0,
                                GGS_formalArgumentPassingModeAST& _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_AC_galgasType & _out_0,
                                 GGS_formalArgumentPassingModeAST& _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_L_EXsignature inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_formalArgumentPassingModeAST& argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_EXsignature operator_concat (const GGS_L_EXsignature & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_formalArgumentPassingModeAST& argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_AC_galgasType & argument_0,
                                const GGS_formalArgumentPassingModeAST& argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_AC_galgasType & argument_0,
                                const GGS_formalArgumentPassingModeAST& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_AC_galgasType 
  reader_mTypeAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_formalArgumentPassingModeAST
  reader_mFormalArgumentPassingModeAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMTypeAtIndex (C_CompilerEx & inLexique,
                              const GGS_AC_galgasType  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMFormalArgumentPassingModeAtIndex (C_CompilerEx & inLexique,
                              const GGS_formalArgumentPassingModeAST & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_L_EXsignature castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_L_EXsignature & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_AC_galgasType   & _mType (LOCATION_ARGS) const ;
    public : /* const */ GGS_formalArgumentPassingModeAST  & _mFormalArgumentPassingMode (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Class for 'categoryMethodKind' Enumeration                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_categoryMethodKind ;

//---------------------------------------------------------------------------*

class GGS_categoryMethodKind : public GGS__root {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_abstractMethod, enum_baseMethod, enum_overridingMethod} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const { return mValue ; }

//--- Default constructor
  public : inline GGS_categoryMethodKind (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_categoryMethodKind (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline PMUInt16 bitCount (void) { return 2 ; }

//--- Is built ?
  public : bool isBuilt (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_categoryMethodKind castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Construction from GALGAS constructor
  public : static inline GGS_categoryMethodKind  constructor_abstractMethod (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_categoryMethodKind (enum_abstractMethod) ;
  }
  public : static inline GGS_categoryMethodKind  constructor_baseMethod (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_categoryMethodKind (enum_baseMethod) ;
  }
  public : static inline GGS_categoryMethodKind  constructor_overridingMethod (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_categoryMethodKind (enum_overridingMethod) ;
  }

//--- Readers

//--- 'description' reader
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--- Drop operation
  public : inline void drop (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool operator_isEqual (const GGS_categoryMethodKind inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_categoryMethodKind inOperand) const ;
  public : GGS_bool operator_infOrEqual (const GGS_categoryMethodKind inOperand) const ;
  public : GGS_bool operator_supOrEqual (const GGS_categoryMethodKind inOperand) const ;
  public : GGS_bool operator_strictInf (const GGS_categoryMethodKind inOperand) const ;
  public : GGS_bool operator_strictSup (const GGS_categoryMethodKind inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@EXcategoryMethodMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_EXcategoryMethodMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_EXcategoryMethodMap ;

//---------------------------------------------------------------------------*

class GGS_EXcategoryMethodMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_EXcategoryMethodMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_EXcategoryMethodMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_EXcategoryMethodMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_EXcategoryMethodMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_EXcategoryMethodMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_EXcategoryMethodMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_EXcategoryMethodMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_EXcategoryMethodMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_categoryMethodKind& inValue0,
                                             const GGS_L_EXsignature & inValue1
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_categoryMethodKind&  inParameter0,
                                const GGS_L_EXsignature &  inParameter1 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_categoryMethodKind  & outParameter0,
                                GGS_L_EXsignature   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_categoryMethodKind& inParameter0,
                                   const GGS_L_EXsignature & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_categoryMethodKind& outParameter0,
                                   GGS_L_EXsignature & outParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_EXcategoryMethodMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_EXcategoryMethodMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_EXcategoryMethodMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_EXcategoryMethodMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_EXcategoryMethodMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_categoryMethodKind  & _mCategoryMethodKind (LOCATION_ARGS) const ;
    public : /* const */ GGS_L_EXsignature   & _aListeArgumentsFormels (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@EXcategoryReaderMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_EXcategoryReaderMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_EXcategoryReaderMap ;

//---------------------------------------------------------------------------*

class GGS_EXcategoryReaderMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_EXcategoryReaderMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_EXcategoryReaderMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_EXcategoryReaderMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_EXcategoryReaderMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_EXcategoryReaderMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_EXcategoryReaderMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_EXcategoryReaderMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_EXcategoryReaderMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_categoryMethodKind& inValue0,
                                             const GGS_L_EXsignature & inValue1,
                                             const GGS_AC_galgasType & inValue2
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_categoryMethodKind&  inParameter0,
                                const GGS_L_EXsignature &  inParameter1,
                                const GGS_AC_galgasType &  inParameter2 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_categoryMethodKind  & outParameter0,
                                GGS_L_EXsignature   & outParameter1,
                                GGS_AC_galgasType   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_categoryMethodKind& inParameter0,
                                   const GGS_L_EXsignature & inParameter1,
                                   const GGS_AC_galgasType & inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_categoryMethodKind& outParameter0,
                                   GGS_L_EXsignature & outParameter1,
                                   GGS_AC_galgasType & outParameter2,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_EXcategoryReaderMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_EXcategoryReaderMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_EXcategoryReaderMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_EXcategoryReaderMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_EXcategoryReaderMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_categoryMethodKind  & _mCategoryMethodKind (LOCATION_ARGS) const ;
    public : /* const */ GGS_L_EXsignature   & _aListeArgumentsFormels (LOCATION_ARGS) const ;
    public : /* const */ GGS_AC_galgasType   & _mReturnedType (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Map '@EXcategoryTemplateMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_EXcategoryTemplateMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_EXcategoryTemplateMap ;

//---------------------------------------------------------------------------*

class GGS_EXcategoryTemplateMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_EXcategoryTemplateMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_EXcategoryTemplateMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_EXcategoryTemplateMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_EXcategoryTemplateMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_EXcategoryTemplateMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_EXcategoryTemplateMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_EXcategoryTemplateMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_EXcategoryTemplateMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_categoryMethodKind& inValue0,
                                             const GGS_L_EXsignature & inValue1
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_categoryMethodKind&  inParameter0,
                                const GGS_L_EXsignature &  inParameter1 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_categoryMethodKind  & outParameter0,
                                GGS_L_EXsignature   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_categoryMethodKind& inParameter0,
                                   const GGS_L_EXsignature & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_categoryMethodKind& outParameter0,
                                   GGS_L_EXsignature & outParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_EXcategoryTemplateMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_EXcategoryTemplateMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_EXcategoryTemplateMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_EXcategoryTemplateMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_EXcategoryTemplateMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_categoryMethodKind  & _mCategoryMethodKind (LOCATION_ARGS) const ;
    public : /* const */ GGS_L_EXsignature   & _aListeArgumentsFormels (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@L_actualParametersSignature'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_actualParametersSignature ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_L_actualParametersSignature ;

//---------------------------------------------------------------------------*

class GGS_L_actualParametersSignature : public AC_GGS_list {
  public : typedef elementOf_GGS_L_actualParametersSignature cElement ;

//--- Constructor 'emptyList'
  public : static GGS_L_actualParametersSignature constructor_emptyList (void) ;
  public : static GGS_L_actualParametersSignature constructor_listWithValue (const GGS_AC_galgasType & argument_0,
                                const GGS_EXactualParametersPassingMode& argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_actualParametersSignature & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_L_actualParametersSignature
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_actualParametersSignature
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_L_actualParametersSignature * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_AC_galgasType & _out_0,
                              GGS_EXactualParametersPassingMode& _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_AC_galgasType & _out_0,
                             GGS_EXactualParametersPassingMode& _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_AC_galgasType & _out_0,
                                GGS_EXactualParametersPassingMode& _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_AC_galgasType & _out_0,
                                 GGS_EXactualParametersPassingMode& _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_L_actualParametersSignature inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_EXactualParametersPassingMode& argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_actualParametersSignature operator_concat (const GGS_L_actualParametersSignature & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_EXactualParametersPassingMode& argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_AC_galgasType & argument_0,
                                const GGS_EXactualParametersPassingMode& argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_AC_galgasType & argument_0,
                                const GGS_EXactualParametersPassingMode& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_AC_galgasType 
  reader_mTypeAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_EXactualParametersPassingMode
  reader_mFormalArgumentPassingModeAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMTypeAtIndex (C_CompilerEx & inLexique,
                              const GGS_AC_galgasType  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMFormalArgumentPassingModeAtIndex (C_CompilerEx & inLexique,
                              const GGS_EXactualParametersPassingMode & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_L_actualParametersSignature castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_L_actualParametersSignature & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_AC_galgasType   & _mType (LOCATION_ARGS) const ;
    public : /* const */ GGS_EXactualParametersPassingMode  & _mFormalArgumentPassingMode (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@M_accessors_map'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_accessors_map ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_M_accessors_map ;

//---------------------------------------------------------------------------*

class GGS_M_accessors_map : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_M_accessors_map cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_M_accessors_map & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_M_accessors_map & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_M_accessors_map castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_accessors_map * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_accessors_map * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_accessors_map constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_M_accessors_map constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_L_EXsignature & inValue0,
                                             const GGS_AC_galgasType & inValue1
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0,
                                const GGS_AC_galgasType &  inParameter1 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0,
                                GGS_AC_galgasType   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_L_EXsignature & inParameter0,
                                   const GGS_AC_galgasType & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_L_EXsignature & outParameter0,
                                   GGS_AC_galgasType & outParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_M_accessors_map constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_M_accessors_map & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_accessors_map reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_accessors_map & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_accessors_map & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_L_EXsignature   & _mAccessorSignature (LOCATION_ARGS) const ;
    public : /* const */ GGS_AC_galgasType   & _mReturnedType (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_typeGalgas_jokerInParameterList'             *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_jokerInParameterList ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_jokerInParameterList : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_jokerInParameterList (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_jokerInParameterList (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_jokerInParameterList (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_jokerInParameterList
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_jokerInParameterList constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_jokerInParameterList * getPtr (void) const {
    return (cPtr_typeGalgas_jokerInParameterList *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_jokerInParameterList * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_jokerInParameterList * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_jokerInParameterList *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_jokerInParameterList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_jokerInParameterList ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_bool'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_bool ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_bool : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_bool (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_bool (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_bool (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_bool
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_bool constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_bool * getPtr (void) const {
    return (cPtr_typeGalgas_bool *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_bool * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_bool * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_bool *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_bool castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_bool ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_uint'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_uint ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_uint : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_uint (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_uint (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_uint (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_uint
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_uint constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_uint * getPtr (void) const {
    return (cPtr_typeGalgas_uint *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_uint * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_uint * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_uint *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_uint castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_uint ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_char'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_char ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_char : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_char (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_char (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_char (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_char
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_char constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_char * getPtr (void) const {
    return (cPtr_typeGalgas_char *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_char * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_char * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_char *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_char castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_char ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_string'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_string ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_string : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_string (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_string (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_string (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_string
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_string constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_string * getPtr (void) const {
    return (cPtr_typeGalgas_string *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_string * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_string * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_string *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_string castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_string ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_sint'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_sint ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_sint : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_sint (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_sint (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_sint (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_sint
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_sint constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_sint * getPtr (void) const {
    return (cPtr_typeGalgas_sint *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_sint * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_sint * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_sint *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_sint castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_sint ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_sint64'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_sint64 ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_sint64 : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_sint64 (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_sint64 (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_sint64 (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_sint64
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_sint64 constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_sint64 * getPtr (void) const {
    return (cPtr_typeGalgas_sint64 *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_sint64 * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_sint64 * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_sint64 *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_sint64 castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_sint64 ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_uint64'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_uint64 ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_uint64 : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_uint64 (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_uint64 (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_uint64 (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_uint64
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_uint64 constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_uint64 * getPtr (void) const {
    return (cPtr_typeGalgas_uint64 *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_uint64 * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_uint64 * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_uint64 *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_uint64 castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_uint64 ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_double'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_double ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_double : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_double (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_double (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_double (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_double
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_double constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_double * getPtr (void) const {
    return (cPtr_typeGalgas_double *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_double * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_double * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_double *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_double castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_double ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeGalgas_binaryset'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_binaryset ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_binaryset : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_binaryset (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_binaryset (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_binaryset (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_binaryset
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_binaryset constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_binaryset * getPtr (void) const {
    return (cPtr_typeGalgas_binaryset *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_binaryset * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_binaryset * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_binaryset *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_binaryset castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_binaryset ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_C_galgasPrimitiveType'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_galgasPrimitiveType ;

//---------------------------------------------------------------------------*

class GGS_C_galgasPrimitiveType : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_C_galgasPrimitiveType (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_C_galgasPrimitiveType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_galgasPrimitiveType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_galgasPrimitiveType
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_galgasPrimitiveType * getPtr (void) const {
    return (cPtr_C_galgasPrimitiveType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_galgasPrimitiveType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_galgasPrimitiveType * operator () (LOCATION_ARGS) const {
      return (cPtr_C_galgasPrimitiveType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_galgasPrimitiveType castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_galgasPrimitiveType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgas_location'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_location ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_location : public GGS_C_galgasPrimitiveType {
//--- Default constructor
  public : inline GGS_typeGalgas_location (void) :
  GGS_C_galgasPrimitiveType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_location (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_location (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_location
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_location constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_location * getPtr (void) const {
    return (cPtr_typeGalgas_location *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_location * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_location * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_location *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_location castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_location ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgas_lstring'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_lstring ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_lstring : public GGS_C_galgasPrimitiveType {
//--- Default constructor
  public : inline GGS_typeGalgas_lstring (void) :
  GGS_C_galgasPrimitiveType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_lstring (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_lstring (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_lstring
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_lstring constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_lstring * getPtr (void) const {
    return (cPtr_typeGalgas_lstring *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_lstring * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_lstring * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_lstring *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_lstring castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_lstring ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_lchar'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_lchar ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_lchar : public GGS_C_galgasPrimitiveType {
//--- Default constructor
  public : inline GGS_typeGalgas_lchar (void) :
  GGS_C_galgasPrimitiveType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_lchar (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_lchar (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_lchar
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_lchar constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_lchar * getPtr (void) const {
    return (cPtr_typeGalgas_lchar *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_lchar * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_lchar * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_lchar *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_lchar castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_lchar ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_lbool'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_lbool ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_lbool : public GGS_C_galgasPrimitiveType {
//--- Default constructor
  public : inline GGS_typeGalgas_lbool (void) :
  GGS_C_galgasPrimitiveType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_lbool (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_lbool (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_lbool
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_lbool constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_lbool * getPtr (void) const {
    return (cPtr_typeGalgas_lbool *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_lbool * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_lbool * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_lbool *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_lbool castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_lbool ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_luint'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_luint ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_luint : public GGS_C_galgasPrimitiveType {
//--- Default constructor
  public : inline GGS_typeGalgas_luint (void) :
  GGS_C_galgasPrimitiveType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_luint (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_luint (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_luint
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_luint constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_luint * getPtr (void) const {
    return (cPtr_typeGalgas_luint *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_luint * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_luint * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_luint *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_luint castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_luint ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgas_luint64'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_luint64 ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_luint64 : public GGS_C_galgasPrimitiveType {
//--- Default constructor
  public : inline GGS_typeGalgas_luint64 (void) :
  GGS_C_galgasPrimitiveType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_luint64 (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_luint64 (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_luint64
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_luint64 constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_luint64 * getPtr (void) const {
    return (cPtr_typeGalgas_luint64 *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_luint64 * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_luint64 * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_luint64 *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_luint64 castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_luint64 ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_lsint'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_lsint ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_lsint : public GGS_C_galgasPrimitiveType {
//--- Default constructor
  public : inline GGS_typeGalgas_lsint (void) :
  GGS_C_galgasPrimitiveType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_lsint (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_lsint (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_lsint
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_lsint constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_lsint * getPtr (void) const {
    return (cPtr_typeGalgas_lsint *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_lsint * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_lsint * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_lsint *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_lsint castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_lsint ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgas_lsint64'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_lsint64 ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_lsint64 : public GGS_C_galgasPrimitiveType {
//--- Default constructor
  public : inline GGS_typeGalgas_lsint64 (void) :
  GGS_C_galgasPrimitiveType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_lsint64 (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_lsint64 (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_lsint64
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_lsint64 constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_lsint64 * getPtr (void) const {
    return (cPtr_typeGalgas_lsint64 *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_lsint64 * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_lsint64 * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_lsint64 *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_lsint64 castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_lsint64 ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgas_ldouble'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_ldouble ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_ldouble : public GGS_C_galgasPrimitiveType {
//--- Default constructor
  public : inline GGS_typeGalgas_ldouble (void) :
  GGS_C_galgasPrimitiveType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_ldouble (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_ldouble (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_ldouble
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_ldouble constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_ldouble * getPtr (void) const {
    return (cPtr_typeGalgas_ldouble *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_ldouble * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_ldouble * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_ldouble *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_ldouble castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_ldouble ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeGalgas_stringset'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_stringset ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_stringset : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_stringset (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_stringset (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_stringset (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_stringset
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_stringset constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_stringset * getPtr (void) const {
    return (cPtr_typeGalgas_stringset *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_stringset * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_stringset * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_stringset *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_stringset castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_stringset ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeGalgas_filewrapper'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_filewrapper ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_filewrapper : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_filewrapper (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_filewrapper (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_filewrapper (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_filewrapper
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_filewrapper constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_filewrapper * getPtr (void) const {
    return (cPtr_typeGalgas_filewrapper *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_filewrapper * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_filewrapper * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_filewrapper *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_filewrapper castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_filewrapper ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_data'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_data ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_data : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_data (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_data (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_data (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_data
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_data constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_data * getPtr (void) const {
    return (cPtr_typeGalgas_data *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_data * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_data * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_data *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_data castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_data ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_object'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_object ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_object : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_object (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_object (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_object (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_object
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_object constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_object * getPtr (void) const {
    return (cPtr_typeGalgas_object *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_object * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_object * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_object *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_object castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_object ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_type'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_type ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_type : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_type (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_type (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_type (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_type
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_type constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_type * getPtr (void) const {
    return (cPtr_typeGalgas_type *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_type * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_type * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_type *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_type castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_type ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgas_function'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_function ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_function : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_function (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_function (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_function (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_function
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_function constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_function * getPtr (void) const {
    return (cPtr_typeGalgas_function *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_function * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_function * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_function *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_function castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_function ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@typeTableMethodes'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableMethodes ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeTableMethodes ;

//---------------------------------------------------------------------------*

class GGS_typeTableMethodes : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_typeTableMethodes cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_typeTableMethodes & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_typeTableMethodes & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeTableMethodes castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeTableMethodes * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeTableMethodes * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeTableMethodes constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_typeTableMethodes constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_L_EXsignature & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_L_EXsignature & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_L_EXsignature & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_typeTableMethodes constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_typeTableMethodes & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeTableMethodes reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_typeTableMethodes & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_typeTableMethodes & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_L_EXsignature   & _aListeTypesParametres (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_typeGalgasUndefinedExternType'              *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgasUndefinedExternType ;

//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedExternType : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgasUndefinedExternType (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasUndefinedExternType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasUndefinedExternType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgasUndefinedExternType
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasUndefinedExternType constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasUndefinedExternType * getPtr (void) const {
    return (cPtr_typeGalgasUndefinedExternType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasUndefinedExternType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasUndefinedExternType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasUndefinedExternType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgasUndefinedExternType castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgasUndefinedExternType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map '@M_externTypeConstructorMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_externTypeConstructorMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_M_externTypeConstructorMap ;

//---------------------------------------------------------------------------*

class GGS_M_externTypeConstructorMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_M_externTypeConstructorMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_M_externTypeConstructorMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_M_externTypeConstructorMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_M_externTypeConstructorMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_externTypeConstructorMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_externTypeConstructorMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_externTypeConstructorMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_M_externTypeConstructorMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_typeListeAttributsSemantiques & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_typeListeAttributsSemantiques &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_typeListeAttributsSemantiques   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_typeListeAttributsSemantiques & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_typeListeAttributsSemantiques & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_M_externTypeConstructorMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_M_externTypeConstructorMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_externTypeConstructorMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_externTypeConstructorMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_externTypeConstructorMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_typeListeAttributsSemantiques   & _aListeDesAttributs (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeGalgasExternType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgasExternType ;

//---------------------------------------------------------------------------*

class GGS_typeGalgasExternType : public GGS_typeGalgasUndefinedExternType {
//--- Default constructor
  public : inline GGS_typeGalgasExternType (void) :
  GGS_typeGalgasUndefinedExternType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasExternType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasExternType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgasExternType
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasExternType constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_M_externTypeConstructorMap & argument_1,
                                const GGS_typeTableMethodes & argument_2,
                                const GGS_typeTableMethodes & argument_3,
                                const GGS_bool& argument_4,
                                const GGS_typeListeAttributsSemantiques & argument_5
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasExternType * getPtr (void) const {
    return (cPtr_typeGalgasExternType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasExternType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasExternType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasExternType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgasExternType castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgasExternType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map '@M_terminalSymbolsMapForUse'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_terminalSymbolsMapForUse ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_M_terminalSymbolsMapForUse ;

//---------------------------------------------------------------------------*

class GGS_M_terminalSymbolsMapForUse : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_M_terminalSymbolsMapForUse cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_M_terminalSymbolsMapForUse & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_M_terminalSymbolsMapForUse & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_M_terminalSymbolsMapForUse castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_terminalSymbolsMapForUse * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_terminalSymbolsMapForUse * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_terminalSymbolsMapForUse constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_M_terminalSymbolsMapForUse constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_typeListeAttributsSemantiques & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_typeListeAttributsSemantiques &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_typeListeAttributsSemantiques   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_typeListeAttributsSemantiques & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_typeListeAttributsSemantiques & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_M_terminalSymbolsMapForUse constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_M_terminalSymbolsMapForUse & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_terminalSymbolsMapForUse reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_terminalSymbolsMapForUse & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_terminalSymbolsMapForUse & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_typeListeAttributsSemantiques   & _aListeDesAttributs (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@M_lexiqueComponents'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_lexiqueComponents ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_M_lexiqueComponents ;

//---------------------------------------------------------------------------*

class GGS_M_lexiqueComponents : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_M_lexiqueComponents cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_M_lexiqueComponents & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_M_lexiqueComponents & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_M_lexiqueComponents castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_lexiqueComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_lexiqueComponents * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_lexiqueComponents constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_M_lexiqueComponents constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_M_terminalSymbolsMapForUse & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_terminalSymbolsMapForUse &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_terminalSymbolsMapForUse   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_M_terminalSymbolsMapForUse & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_M_terminalSymbolsMapForUse & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_M_lexiqueComponents constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_M_lexiqueComponents & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_lexiqueComponents reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_lexiqueComponents & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_lexiqueComponents & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_M_terminalSymbolsMapForUse   & _mTerminalSymbolMap (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@typeTableEnAvant'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableEnAvant ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeTableEnAvant ;

//---------------------------------------------------------------------------*

class GGS_typeTableEnAvant : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_typeTableEnAvant cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_typeTableEnAvant & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_typeTableEnAvant & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeTableEnAvant castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeTableEnAvant * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeTableEnAvant * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeTableEnAvant constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_typeTableEnAvant constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_AC_galgasType & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_galgasType   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_AC_galgasType & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_AC_galgasType & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_typeTableEnAvant constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_typeTableEnAvant & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeTableEnAvant reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_typeTableEnAvant & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_typeTableEnAvant & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_AC_galgasType   & _mType (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Map '@M_nonterminalSymbolAlts'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonterminalSymbolAlts ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_M_nonterminalSymbolAlts ;

//---------------------------------------------------------------------------*

class GGS_M_nonterminalSymbolAlts : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_M_nonterminalSymbolAlts cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_M_nonterminalSymbolAlts & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_M_nonterminalSymbolAlts & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_M_nonterminalSymbolAlts castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_nonterminalSymbolAlts * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_nonterminalSymbolAlts * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_nonterminalSymbolAlts constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_M_nonterminalSymbolAlts constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_L_EXsignature & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_L_EXsignature & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_L_EXsignature & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_M_nonterminalSymbolAlts constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_M_nonterminalSymbolAlts & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_nonterminalSymbolAlts reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_nonterminalSymbolAlts & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_nonterminalSymbolAlts & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_L_EXsignature   & _mFormalParametersList (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_C_grammarForSemantics'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_grammarForSemantics ;

//---------------------------------------------------------------------------*

class GGS_C_grammarForSemantics : public GGS_AC_semanticsEntity {
//--- Default constructor
  public : inline GGS_C_grammarForSemantics (void) :
  GGS_AC_semanticsEntity () {}

//--- Pointer assignment constructor
  public : GGS_C_grammarForSemantics (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_grammarForSemantics (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_grammarForSemantics
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_grammarForSemantics constructor_new (C_CompilerEx & inLexique,
                                const GGS_M_nonterminalSymbolAlts & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_grammarForSemantics * getPtr (void) const {
    return (cPtr_C_grammarForSemantics *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_M_nonterminalSymbolAlts  reader_mGrammarAltMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mLexiqueClassName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- 'messageTypeEntite' message
  public : GGS_string reader_messageTypeEntite (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_grammarForSemantics * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_grammarForSemantics * operator () (LOCATION_ARGS) const {
      return (cPtr_C_grammarForSemantics *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_grammarForSemantics castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_grammarForSemantics ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_AC_typeForGrammarComponent'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_AC_typeForGrammarComponent ;

//---------------------------------------------------------------------------*

class GGS_AC_typeForGrammarComponent : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_AC_typeForGrammarComponent (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_AC_typeForGrammarComponent (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_AC_typeForGrammarComponent (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_AC_typeForGrammarComponent
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_AC_typeForGrammarComponent * getPtr (void) const {
    return (cPtr_AC_typeForGrammarComponent *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'typeForGrammarComponentMessage' message
  public : GGS_string reader_typeForGrammarComponentMessage (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_AC_typeForGrammarComponent * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_typeForGrammarComponent * operator () (LOCATION_ARGS) const {
      return (cPtr_AC_typeForGrammarComponent *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_AC_typeForGrammarComponent castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__AC_typeForGrammarComponent ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map '@M_typesForGrammarComponent'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_typesForGrammarComponent ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_M_typesForGrammarComponent ;

//---------------------------------------------------------------------------*

class GGS_M_typesForGrammarComponent : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_M_typesForGrammarComponent cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_M_typesForGrammarComponent & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_M_typesForGrammarComponent & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_M_typesForGrammarComponent castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_typesForGrammarComponent * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_typesForGrammarComponent * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_typesForGrammarComponent constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_M_typesForGrammarComponent constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_AC_typeForGrammarComponent & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_typeForGrammarComponent &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_typeForGrammarComponent   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_AC_typeForGrammarComponent & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_AC_typeForGrammarComponent & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_M_typesForGrammarComponent constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_M_typesForGrammarComponent & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_typesForGrammarComponent reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_typesForGrammarComponent & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_typesForGrammarComponent & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_AC_typeForGrammarComponent   & _mType (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Routine 'checkSignature_ForGrammarComponent'                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkSignature_ForGrammarComponent (C_CompilerEx &,
                                const GGS_signatureForGrammarAnalysis  ,
                                const GGS_signatureForGrammarAnalysis  ,
                                const GGS_location  ,
                                const GGS_location   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@L_grammarsMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_grammarsMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_L_grammarsMap ;

//---------------------------------------------------------------------------*

class GGS_L_grammarsMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_L_grammarsMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_L_grammarsMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_L_grammarsMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_L_grammarsMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_L_grammarsMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_L_grammarsMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_L_grammarsMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_L_grammarsMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_M_nonterminalSymbolAlts & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_nonterminalSymbolAlts &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_nonterminalSymbolAlts   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_M_nonterminalSymbolAlts & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_M_nonterminalSymbolAlts & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_L_grammarsMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_L_grammarsMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_L_grammarsMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_L_grammarsMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_L_grammarsMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_M_nonterminalSymbolAlts   & _mStartSymbolParametersMap (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Map '@typeClassInheritedMessagesMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeClassInheritedMessagesMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeClassInheritedMessagesMap ;

//---------------------------------------------------------------------------*

class GGS_typeClassInheritedMessagesMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_typeClassInheritedMessagesMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_typeClassInheritedMessagesMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_typeClassInheritedMessagesMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeClassInheritedMessagesMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeClassInheritedMessagesMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeClassInheritedMessagesMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeClassInheritedMessagesMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_typeClassInheritedMessagesMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey

                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_typeClassInheritedMessagesMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_typeClassInheritedMessagesMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeClassInheritedMessagesMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_typeClassInheritedMessagesMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_typeClassInheritedMessagesMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Map '@typeSemanticAttributesMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeSemanticAttributesMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeSemanticAttributesMap ;

//---------------------------------------------------------------------------*

class GGS_typeSemanticAttributesMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_typeSemanticAttributesMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_typeSemanticAttributesMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_typeSemanticAttributesMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeSemanticAttributesMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeSemanticAttributesMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeSemanticAttributesMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeSemanticAttributesMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_typeSemanticAttributesMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_AC_galgasType & inValue0,
                                             const GGS_bool& inValue1,
                                             const GGS_bool& inValue2
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0,
                                const GGS_bool&  inParameter1,
                                const GGS_bool&  inParameter2 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_galgasType   & outParameter0,
                                GGS_bool  & outParameter1,
                                GGS_bool  & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_AC_galgasType & inParameter0,
                                   const GGS_bool& inParameter1,
                                   const GGS_bool& inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_AC_galgasType & outParameter0,
                                   GGS_bool& outParameter1,
                                   GGS_bool& outParameter2,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_typeSemanticAttributesMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_typeSemanticAttributesMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeSemanticAttributesMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_typeSemanticAttributesMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_typeSemanticAttributesMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_AC_galgasType   & _mAttributType (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mHasSetter (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mHasGetter (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@insertOrSearchMethodList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_insertOrSearchMethodList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_insertOrSearchMethodList ;

//---------------------------------------------------------------------------*

class GGS_insertOrSearchMethodList : public AC_GGS_list {
  public : typedef elementOf_GGS_insertOrSearchMethodList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_insertOrSearchMethodList constructor_emptyList (void) ;
  public : static GGS_insertOrSearchMethodList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_bool& argument_2,
                                const GGS_string& argument_3,
                                const GGS_uint & argument_4) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_insertOrSearchMethodList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_insertOrSearchMethodList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_insertOrSearchMethodList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_insertOrSearchMethodList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_lstring & _out_0,
                              GGS_string& _out_1,
                              GGS_bool& _out_2,
                              GGS_string& _out_3,
                              GGS_uint & _out_4
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_lstring & _out_0,
                             GGS_string& _out_1,
                             GGS_bool& _out_2,
                             GGS_string& _out_3,
                             GGS_uint & _out_4
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_lstring & _out_0,
                                GGS_string& _out_1,
                                GGS_bool& _out_2,
                                GGS_string& _out_3,
                                GGS_uint & _out_4
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_string& _out_1,
                                 GGS_bool& _out_2,
                                 GGS_string& _out_3,
                                 GGS_uint & _out_4
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_insertOrSearchMethodList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_bool& argument_2,
                                const GGS_string& argument_3,
                                const GGS_uint & argument_4) ;
//--- Handling '.' GALGAS operator
  public : GGS_insertOrSearchMethodList operator_concat (const GGS_insertOrSearchMethodList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_bool& argument_2,
                                const GGS_string& argument_3,
                                const GGS_uint & argument_4
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_bool& argument_2,
                                const GGS_string& argument_3,
                                const GGS_uint & argument_4
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_bool& argument_2,
                                const GGS_string& argument_3,
                                const GGS_uint & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mMethodNameAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_string
  reader_mErrorMessageAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_bool
  reader_mIsGetIndexMethodAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_string
  reader_mShadowErrorMessageAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_uint 
  reader_mStateOrActionIndexAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMMethodNameAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMErrorMessageAtIndex (C_CompilerEx & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMIsGetIndexMethodAtIndex (C_CompilerEx & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMShadowErrorMessageAtIndex (C_CompilerEx & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMStateOrActionIndexAtIndex (C_CompilerEx & inLexique,
                              const GGS_uint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_insertOrSearchMethodList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_insertOrSearchMethodList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mMethodName (LOCATION_ARGS) const ;
    public : /* const */ GGS_string  & _mErrorMessage (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mIsGetIndexMethod (LOCATION_ARGS) const ;
    public : /* const */ GGS_string  & _mShadowErrorMessage (LOCATION_ARGS) const ;
    public : /* const */ GGS_uint   & _mStateOrActionIndex (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeDefEntiteUtilisable'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeDefEntiteUtilisable ;

//---------------------------------------------------------------------------*

class GGS_typeDefEntiteUtilisable : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_typeDefEntiteUtilisable (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_typeDefEntiteUtilisable (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeDefEntiteUtilisable (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeDefEntiteUtilisable
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeDefEntiteUtilisable * getPtr (void) const {
    return (cPtr_typeDefEntiteUtilisable *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageTypeEntite' message
  public : GGS_string reader_messageTypeEntite (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeDefEntiteUtilisable * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeDefEntiteUtilisable * operator () (LOCATION_ARGS) const {
      return (cPtr_typeDefEntiteUtilisable *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeDefEntiteUtilisable castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__typeDefEntiteUtilisable ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_typeGalgasUndefinedListType'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgasUndefinedListType ;

//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedListType : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgasUndefinedListType (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasUndefinedListType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasUndefinedListType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgasUndefinedListType
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasUndefinedListType constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasUndefinedListType * getPtr (void) const {
    return (cPtr_typeGalgasUndefinedListType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mListTypeName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasUndefinedListType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasUndefinedListType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasUndefinedListType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgasUndefinedListType castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgasUndefinedListType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgasListType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgasListType ;

//---------------------------------------------------------------------------*

class GGS_typeGalgasListType : public GGS_typeGalgasUndefinedListType {
//--- Default constructor
  public : inline GGS_typeGalgasListType (void) :
  GGS_typeGalgasUndefinedListType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasListType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasListType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgasListType
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasListType constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_L_EXsignature & argument_2,
                                const GGS_L_EXsignature & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasListType * getPtr (void) const {
    return (cPtr_typeGalgasListType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeListeAttributsSemantiques  reader_mAttributeList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasListType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasListType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasListType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgasListType castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgasListType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeGalgasStructType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgasStructType ;

//---------------------------------------------------------------------------*

class GGS_typeGalgasStructType : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgasStructType (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasStructType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasStructType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgasStructType
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasStructType constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasStructType * getPtr (void) const {
    return (cPtr_typeGalgasStructType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mStructTypeName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeListeAttributsSemantiques  reader_mAttributeList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasStructType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasStructType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasStructType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgasStructType castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgasStructType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeGalgasListmapType'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgasListmapType ;

//---------------------------------------------------------------------------*

class GGS_typeGalgasListmapType : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgasListmapType (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasListmapType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasListmapType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgasListmapType
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasListmapType constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeGalgasListType & argument_2,
                                const GGS_typeListeAttributsSemantiques & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasListmapType * getPtr (void) const {
    return (cPtr_typeGalgasListmapType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeGalgasListType  reader_mListType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasListmapType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasListmapType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasListmapType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgasListmapType castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgasListmapType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Once function 'EXbuild_uintlist_type'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_EXbuild_uintlist_type ;

//---------------------------------------------------------------------------*

GGS_AC_galgasType  function_EXbuild_uintlist_type (C_CompilerEx & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Once function 'EXbuild_luintlist_type'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_EXbuild_luintlist_type ;

//---------------------------------------------------------------------------*

GGS_AC_galgasType  function_EXbuild_luintlist_type (C_CompilerEx & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Once function 'EXbuild_uint64list_type'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_EXbuild_uint64list_type ;

//---------------------------------------------------------------------------*

GGS_AC_galgasType  function_EXbuild_uint64list_type (C_CompilerEx & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Once function 'EXbuild_charlist_type'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_EXbuild_charlist_type ;

//---------------------------------------------------------------------------*

GGS_AC_galgasType  function_EXbuild_charlist_type (C_CompilerEx & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Once function 'EXbuild_lcharlist_type'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_EXbuild_lcharlist_type ;

//---------------------------------------------------------------------------*

GGS_AC_galgasType  function_EXbuild_lcharlist_type (C_CompilerEx & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Once function 'EXbuild_stringlist_type'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_EXbuild_stringlist_type ;

//---------------------------------------------------------------------------*

GGS_AC_galgasType  function_EXbuild_stringlist_type (C_CompilerEx & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Once function 'EXbuild_2stringlist_type'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_EXbuild_2stringlist_type ;

//---------------------------------------------------------------------------*

GGS_AC_galgasType  function_EXbuild_2stringlist_type (C_CompilerEx & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Once function 'EXbuild_lstringlist_type'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_EXbuild_lstringlist_type ;

//---------------------------------------------------------------------------*

GGS_AC_galgasType  function_EXbuild_lstringlist_type (C_CompilerEx & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Once function 'EXbuild_typelist_type'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_EXbuild_typelist_type ;

//---------------------------------------------------------------------------*

GGS_AC_galgasType  function_EXbuild_typelist_type (C_CompilerEx & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Once function 'EXbuild_objectlist_type'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_EXbuild_objectlist_type ;

//---------------------------------------------------------------------------*

GGS_AC_galgasType  function_EXbuild_objectlist_type (C_CompilerEx & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Once function 'EXbuild_functionlist_type'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_EXbuild_functionlist_type ;

//---------------------------------------------------------------------------*

GGS_AC_galgasType  function_EXbuild_functionlist_type (C_CompilerEx & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@domainRelationMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_domainRelationMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_domainRelationMap ;

//---------------------------------------------------------------------------*

class GGS_domainRelationMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_domainRelationMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_domainRelationMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_domainRelationMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_domainRelationMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_domainRelationMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_domainRelationMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_domainRelationMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_domainRelationMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_stringlist & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_stringlist &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_stringlist   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_stringlist & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_stringlist & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_domainRelationMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_domainRelationMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_domainRelationMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_domainRelationMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_domainRelationMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_stringlist   & _mDomains (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@domainModifierMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_domainModifierMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_domainModifierMap ;

//---------------------------------------------------------------------------*

class GGS_domainModifierMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_domainModifierMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_domainModifierMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_domainModifierMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_domainModifierMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_domainModifierMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_domainModifierMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_domainModifierMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_domainModifierMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_L_EXsignature & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_L_EXsignature & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_L_EXsignature & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_domainModifierMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_domainModifierMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_domainModifierMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_domainModifierMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_domainModifierMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_L_EXsignature   & _mFormalParametersList (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@domainAttributeMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_domainAttributeMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_domainAttributeMap ;

//---------------------------------------------------------------------------*

class GGS_domainAttributeMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_domainAttributeMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_domainAttributeMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_domainAttributeMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_domainAttributeMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_domainAttributeMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_domainAttributeMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_domainAttributeMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_domainAttributeMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey

                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_domainAttributeMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_domainAttributeMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_domainAttributeMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_domainAttributeMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_domainAttributeMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeGalgasDomainType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgasDomainType ;

//---------------------------------------------------------------------------*

class GGS_typeGalgasDomainType : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgasDomainType (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasDomainType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasDomainType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgasDomainType
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasDomainType constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_domainAttributeMap & argument_1,
                                const GGS_domainModifierMap & argument_2,
                                const GGS_domainRelationMap & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasDomainType * getPtr (void) const {
    return (cPtr_typeGalgasDomainType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_domainModifierMap  reader_mDomainModifierMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_domainRelationMap  reader_mDomainRelationMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasDomainType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasDomainType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasDomainType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgasDomainType castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgasDomainType ;

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS class 'GGS_typeGalgasUndefinedSortedListType'            *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgasUndefinedSortedListType ;

//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedSortedListType : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgasUndefinedSortedListType (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasUndefinedSortedListType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasUndefinedSortedListType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgasUndefinedSortedListType
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasUndefinedSortedListType constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasUndefinedSortedListType * getPtr (void) const {
    return (cPtr_typeGalgasUndefinedSortedListType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasUndefinedSortedListType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasUndefinedSortedListType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasUndefinedSortedListType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgasUndefinedSortedListType castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgasUndefinedSortedListType ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeGalgasSortedListType'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgasSortedListType ;

//---------------------------------------------------------------------------*

class GGS_typeGalgasSortedListType : public GGS_typeGalgasUndefinedSortedListType {
//--- Default constructor
  public : inline GGS_typeGalgasSortedListType (void) :
  GGS_typeGalgasUndefinedSortedListType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasSortedListType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasSortedListType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgasSortedListType
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasSortedListType constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_L_EXsignature & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasSortedListType * getPtr (void) const {
    return (cPtr_typeGalgasSortedListType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasSortedListType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasSortedListType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasSortedListType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgasSortedListType castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgasSortedListType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Map '@typeTableBlocsDeTable'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableBlocsDeTable ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeTableBlocsDeTable ;

//---------------------------------------------------------------------------*

class GGS_typeTableBlocsDeTable : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_typeTableBlocsDeTable cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_typeTableBlocsDeTable & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_typeTableBlocsDeTable & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeTableBlocsDeTable castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeTableBlocsDeTable * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeTableBlocsDeTable * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeTableBlocsDeTable constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_typeTableBlocsDeTable constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_L_EXsignature & inValue0,
                                             const GGS_L_EXsignature & inValue1
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0,
                                const GGS_L_EXsignature &  inParameter1 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0,
                                GGS_L_EXsignature   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_L_EXsignature & inParameter0,
                                   const GGS_L_EXsignature & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_L_EXsignature & outParameter0,
                                   GGS_L_EXsignature & outParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_typeTableBlocsDeTable constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_typeTableBlocsDeTable & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeTableBlocsDeTable reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_typeTableBlocsDeTable & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_typeTableBlocsDeTable & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_L_EXsignature   & _aSignatureDebut (LOCATION_ARGS) const ;
    public : /* const */ GGS_L_EXsignature   & _aSignatureFin (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_typeGalgasUndefinedMapType'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgasUndefinedMapType ;

//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedMapType : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgasUndefinedMapType (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasUndefinedMapType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasUndefinedMapType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgasUndefinedMapType
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasUndefinedMapType constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasUndefinedMapType * getPtr (void) const {
    return (cPtr_typeGalgasUndefinedMapType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasUndefinedMapType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasUndefinedMapType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasUndefinedMapType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgasUndefinedMapType castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgasUndefinedMapType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@mapModifierMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapModifierMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_mapModifierMap ;

//---------------------------------------------------------------------------*

class GGS_mapModifierMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_mapModifierMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_mapModifierMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_mapModifierMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_mapModifierMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_mapModifierMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_mapModifierMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_mapModifierMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_mapModifierMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_L_EXsignature & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_L_EXsignature & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_L_EXsignature & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_mapModifierMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_mapModifierMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_mapModifierMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_mapModifierMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_mapModifierMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_L_EXsignature   & _mMethodSignature (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@EXmapMethodMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_EXmapMethodMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_EXmapMethodMap ;

//---------------------------------------------------------------------------*

class GGS_EXmapMethodMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_EXmapMethodMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_EXmapMethodMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_EXmapMethodMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_EXmapMethodMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_EXmapMethodMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_EXmapMethodMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_EXmapMethodMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_EXmapMethodMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_L_EXsignature & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_L_EXsignature & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_L_EXsignature & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_EXmapMethodMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_EXmapMethodMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_EXmapMethodMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_EXmapMethodMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_EXmapMethodMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_L_EXsignature   & _mMethodSignature (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgasMapType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgasMapType ;

//---------------------------------------------------------------------------*

class GGS_typeGalgasMapType : public GGS_typeGalgasUndefinedMapType {
//--- Default constructor
  public : inline GGS_typeGalgasMapType (void) :
  GGS_typeGalgasUndefinedMapType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasMapType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasMapType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgasMapType
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasMapType constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_typeTableBlocsDeTable & argument_2,
                                const GGS_mapModifierMap & argument_3,
                                const GGS_EXmapMethodMap & argument_4,
                                const GGS_mapStateList & argument_5,
                                const GGS_lstringlist & argument_6
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasMapType * getPtr (void) const {
    return (cPtr_typeGalgasMapType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeListeAttributsSemantiques  reader_mAttributeList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeTableBlocsDeTable  reader_aTableMethodesSurcharger (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapModifierMap  reader_mModifierMethodMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_EXmapMethodMap  reader_mReaderMethodMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapStateList  reader_mMapStateList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mOverrideNameList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasMapType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasMapType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasMapType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgasMapType castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgasMapType ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_typeGalgasUndefinedMapindexType'             *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgasUndefinedMapindexType ;

//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedMapindexType : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgasUndefinedMapindexType (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasUndefinedMapindexType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasUndefinedMapindexType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgasUndefinedMapindexType
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasUndefinedMapindexType constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasUndefinedMapindexType * getPtr (void) const {
    return (cPtr_typeGalgasUndefinedMapindexType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasUndefinedMapindexType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasUndefinedMapindexType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasUndefinedMapindexType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgasUndefinedMapindexType castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgasUndefinedMapindexType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeGalgasMapindexType'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgasMapindexType ;

//---------------------------------------------------------------------------*

class GGS_typeGalgasMapindexType : public GGS_typeGalgasUndefinedMapindexType {
//--- Default constructor
  public : inline GGS_typeGalgasMapindexType (void) :
  GGS_typeGalgasUndefinedMapindexType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasMapindexType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasMapindexType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgasMapindexType
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasMapindexType constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeGalgasMapType & argument_2,
                                const GGS_typeListeAttributsSemantiques & argument_3,
                                const GGS_typeTableBlocsDeTable & argument_4,
                                const GGS_mapModifierMap & argument_5,
                                const GGS_EXmapMethodMap & argument_6
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasMapindexType * getPtr (void) const {
    return (cPtr_typeGalgasMapindexType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeGalgasMapType  reader_mMapType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeListeAttributsSemantiques  reader_mMapAttributesList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasMapindexType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasMapindexType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasMapindexType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgasMapindexType castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgasMapindexType ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_typeGalgasUndefinedClassType'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgasUndefinedClassType ;

//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedClassType : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgasUndefinedClassType (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasUndefinedClassType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasUndefinedClassType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgasUndefinedClassType
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasUndefinedClassType constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasUndefinedClassType * getPtr (void) const {
    return (cPtr_typeGalgasUndefinedClassType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mClassTypeName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasUndefinedClassType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasUndefinedClassType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasUndefinedClassType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgasUndefinedClassType castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgasUndefinedClassType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@L_lazyAttributeList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_lazyAttributeList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_L_lazyAttributeList ;

//---------------------------------------------------------------------------*

class GGS_L_lazyAttributeList : public AC_GGS_list {
  public : typedef elementOf_GGS_L_lazyAttributeList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_L_lazyAttributeList constructor_emptyList (void) ;
  public : static GGS_L_lazyAttributeList constructor_listWithValue (const GGS_location & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_typeInstructionList & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_lazyAttributeList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_L_lazyAttributeList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_lazyAttributeList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_L_lazyAttributeList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_location & _out_0,
                              GGS_typeListeAttributsSemantiques & _out_1,
                              GGS_typeInstructionList & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_location & _out_0,
                             GGS_typeListeAttributsSemantiques & _out_1,
                             GGS_typeInstructionList & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_location & _out_0,
                                GGS_typeListeAttributsSemantiques & _out_1,
                                GGS_typeInstructionList & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_location & _out_0,
                                 GGS_typeListeAttributsSemantiques & _out_1,
                                 GGS_typeInstructionList & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_L_lazyAttributeList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_location & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_typeInstructionList & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_lazyAttributeList operator_concat (const GGS_L_lazyAttributeList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_location & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_typeInstructionList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_location & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_typeInstructionList & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_location & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_typeInstructionList & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_location 
  reader_mLocationMagicNumberAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_typeListeAttributsSemantiques 
  reader_mComputedAttributeTypeAndNameListAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_typeInstructionList 
  reader_mInstructionListAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMLocationMagicNumberAtIndex (C_CompilerEx & inLexique,
                              const GGS_location  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMComputedAttributeTypeAndNameListAtIndex (C_CompilerEx & inLexique,
                              const GGS_typeListeAttributsSemantiques  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_CompilerEx & inLexique,
                              const GGS_typeInstructionList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_L_lazyAttributeList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_L_lazyAttributeList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_location   & _mLocationMagicNumber (LOCATION_ARGS) const ;
    public : /* const */ GGS_typeListeAttributsSemantiques   & _mComputedAttributeTypeAndNameList (LOCATION_ARGS) const ;
    public : /* const */ GGS_typeInstructionList   & _mInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgasClassType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgasClassType ;

//---------------------------------------------------------------------------*

class GGS_typeGalgasClassType : public GGS_typeGalgasUndefinedClassType {
//--- Default constructor
  public : inline GGS_typeGalgasClassType (void) :
  GGS_typeGalgasUndefinedClassType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasClassType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasClassType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgasClassType
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasClassType constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeTableMethodes & argument_1,
                                const GGS_typeListeAttributsSemantiques & argument_2,
                                const GGS_typeSuperClassesMap & argument_3,
                                const GGS_typeClassInheritedMessagesMap & argument_4,
                                const GGS_typeSemanticAttributesMap & argument_5,
                                const GGS_bool& argument_6,
                                const GGS_string& argument_7,
                                const GGS_bool& argument_8,
                                const GGS_L_lazyAttributeList & argument_9
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasClassType * getPtr (void) const {
    return (cPtr_typeGalgasClassType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeTableMethodes  reader_mMethodMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeListeAttributsSemantiques  reader_mAttributeList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeSuperClassesMap  reader_mAncestorClassesMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeClassInheritedMessagesMap  reader_mMessagesMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeSemanticAttributesMap  reader_mNonExternAttributesMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mClassIsAbstract (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_mClassMessage (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mHasGeneratedInSeparateFileSetting (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_L_lazyAttributeList  reader_mLazyAttributeList (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasClassType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasClassType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasClassType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgasClassType castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgasClassType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeEntiteRoutine'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeEntiteRoutine ;

//---------------------------------------------------------------------------*

class GGS_typeEntiteRoutine : public GGS_AC_semanticsEntity {
//--- Default constructor
  public : inline GGS_typeEntiteRoutine (void) :
  GGS_AC_semanticsEntity () {}

//--- Pointer assignment constructor
  public : GGS_typeEntiteRoutine (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeEntiteRoutine (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeEntiteRoutine
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeEntiteRoutine constructor_new (C_CompilerEx & inLexique,
                                const GGS_L_EXsignature & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeEntiteRoutine * getPtr (void) const {
    return (cPtr_typeEntiteRoutine *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_L_EXsignature  reader_aListeArgumentsFormels (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- 'messageTypeEntite' message
  public : GGS_string reader_messageTypeEntite (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeEntiteRoutine * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeEntiteRoutine * operator () (LOCATION_ARGS) const {
      return (cPtr_typeEntiteRoutine *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeEntiteRoutine castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeEntiteRoutine ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeEntiteFonction'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeEntiteFonction ;

//---------------------------------------------------------------------------*

class GGS_typeEntiteFonction : public GGS_AC_semanticsEntity {
//--- Default constructor
  public : inline GGS_typeEntiteFonction (void) :
  GGS_AC_semanticsEntity () {}

//--- Pointer assignment constructor
  public : GGS_typeEntiteFonction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeEntiteFonction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeEntiteFonction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeEntiteFonction constructor_new (C_CompilerEx & inLexique,
                                const GGS_L_EXsignature & argument_0,
                                const GGS_AC_galgasType & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeEntiteFonction * getPtr (void) const {
    return (cPtr_typeEntiteFonction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_L_EXsignature  reader_aListeArgumentsFormels (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_AC_galgasType  reader_mReturnedType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- 'messageTypeEntite' message
  public : GGS_string reader_messageTypeEntite (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeEntiteFonction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeEntiteFonction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeEntiteFonction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeEntiteFonction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeEntiteFonction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@typeEnumMessageMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeEnumMessageMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeEnumMessageMap ;

//---------------------------------------------------------------------------*

class GGS_typeEnumMessageMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_typeEnumMessageMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_typeEnumMessageMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_typeEnumMessageMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeEnumMessageMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeEnumMessageMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeEnumMessageMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeEnumMessageMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_typeEnumMessageMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_lstringlist & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lstringlist &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lstringlist   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_lstringlist & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_lstringlist & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_typeEnumMessageMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_typeEnumMessageMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeEnumMessageMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_typeEnumMessageMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_typeEnumMessageMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstringlist   & _mMessageStringList (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_enum'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_enum ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_enum : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_enum (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_enum (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_enum (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_enum
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_enum constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_enumConstantMap & argument_1,
                                const GGS_typeEnumMessageMap & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_enum * getPtr (void) const {
    return (cPtr_typeGalgas_enum *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mEnumTypeName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_enumConstantMap  reader_mEnumConstantesMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeEnumMessageMap  reader_mMessagesMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_enum * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_enum * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_enum *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_enum castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_enum ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Routine 'checkAssignmentTypesCompatibility'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkAssignmentTypesCompatibility (C_CompilerEx &,
                                const GGS_AC_galgasType  ,
                                const GGS_AC_galgasType  ,
                                const GGS_location  ,
                                const GGS_bool  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Routine 'verifierCompatibiliteSignatures'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_verifierCompatibiliteSignatures (C_CompilerEx &,
                                const GGS_L_EXsignature  ,
                                const GGS_L_EXsignature  ,
                                const GGS_location   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@M_cli_options'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_cli_options ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_M_cli_options ;

//---------------------------------------------------------------------------*

class GGS_M_cli_options : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_M_cli_options cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_M_cli_options & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_M_cli_options & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_M_cli_options castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_cli_options * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_cli_options * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_cli_options constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_M_cli_options constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_lchar & inValue0,
                                             const GGS_lstring & inValue1,
                                             const GGS_lstring & inValue2
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lchar &  inParameter0,
                                const GGS_lstring &  inParameter1,
                                const GGS_lstring &  inParameter2 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lchar   & outParameter0,
                                GGS_lstring   & outParameter1,
                                GGS_lstring   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_lchar & inParameter0,
                                   const GGS_lstring & inParameter1,
                                   const GGS_lstring & inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_lchar & outParameter0,
                                   GGS_lstring & outParameter1,
                                   GGS_lstring & outParameter2,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_M_cli_options constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_M_cli_options & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_cli_options reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_cli_options & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_cli_options & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lchar   & _mOptionChar (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mOptionString (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mComment (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@M_optionComponents'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_optionComponents ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_M_optionComponents ;

//---------------------------------------------------------------------------*

class GGS_M_optionComponents : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_M_optionComponents cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_M_optionComponents & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_M_optionComponents & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_M_optionComponents castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_optionComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_optionComponents * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_optionComponents constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_M_optionComponents constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_M_cli_options & inValue0,
                                             const GGS_M_cli_options & inValue1,
                                             const GGS_M_cli_options & inValue2
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_cli_options &  inParameter0,
                                const GGS_M_cli_options &  inParameter1,
                                const GGS_M_cli_options &  inParameter2 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_cli_options   & outParameter0,
                                GGS_M_cli_options   & outParameter1,
                                GGS_M_cli_options   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_M_cli_options & inParameter0,
                                   const GGS_M_cli_options & inParameter1,
                                   const GGS_M_cli_options & inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_M_cli_options & outParameter0,
                                   GGS_M_cli_options & outParameter1,
                                   GGS_M_cli_options & outParameter2,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_M_optionComponents constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_M_optionComponents & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_optionComponents reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_optionComponents & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_optionComponents & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_M_cli_options   & _mBoolOptionsMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_M_cli_options   & _mUintOptionsMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_M_cli_options   & _mStringOptionsMap (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@M_grammarComponents'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_grammarComponents ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_M_grammarComponents ;

//---------------------------------------------------------------------------*

class GGS_M_grammarComponents : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_M_grammarComponents cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_M_grammarComponents & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_M_grammarComponents & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_M_grammarComponents castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_grammarComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_grammarComponents * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_grammarComponents constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_M_grammarComponents constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_nonterminalSymbolLabelMapForGrammarAnalysis & inValue0,
                                             const GGS_lstring & inValue1,
                                             const GGS_M_optionComponents & inValue2
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_nonterminalSymbolLabelMapForGrammarAnalysis &  inParameter0,
                                const GGS_lstring &  inParameter1,
                                const GGS_M_optionComponents &  inParameter2 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_nonterminalSymbolLabelMapForGrammarAnalysis   & outParameter0,
                                GGS_lstring   & outParameter1,
                                GGS_M_optionComponents   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_nonterminalSymbolLabelMapForGrammarAnalysis & inParameter0,
                                   const GGS_lstring & inParameter1,
                                   const GGS_M_optionComponents & inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_nonterminalSymbolLabelMapForGrammarAnalysis & outParameter0,
                                   GGS_lstring & outParameter1,
                                   GGS_M_optionComponents & outParameter2,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_M_grammarComponents constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_M_grammarComponents & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_grammarComponents reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_grammarComponents & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_grammarComponents & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_nonterminalSymbolLabelMapForGrammarAnalysis   & _mNonterminalSymbolParametersMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mLexiqueName (LOCATION_ARGS) const ;
    public : /* const */ GGS_M_optionComponents   & _mOptionsMap (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Map '@M_semanticsComponents'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_semanticsComponents ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_M_semanticsComponents ;

//---------------------------------------------------------------------------*

class GGS_M_semanticsComponents : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_M_semanticsComponents cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_M_semanticsComponents & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_M_semanticsComponents & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_M_semanticsComponents castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_semanticsComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_semanticsComponents * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_semanticsComponents constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_M_semanticsComponents constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_ModelMap & inValue0,
                                             const GGS_ActionMap & inValue1,
                                             const GGS_stringset & inValue2,
                                             const GGS_stringset & inValue3,
                                             const GGS_stringset & inValue4,
                                             const GGS_M_optionComponents & inValue5,
                                             const GGS_M_semanticsEntitiesForUse & inValue6
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_ModelMap &  inParameter0,
                                const GGS_ActionMap &  inParameter1,
                                const GGS_stringset &  inParameter2,
                                const GGS_stringset &  inParameter3,
                                const GGS_stringset &  inParameter4,
                                const GGS_M_optionComponents &  inParameter5,
                                const GGS_M_semanticsEntitiesForUse &  inParameter6 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_ModelMap   & outParameter0,
                                GGS_ActionMap   & outParameter1,
                                GGS_stringset   & outParameter2,
                                GGS_stringset   & outParameter3,
                                GGS_stringset   & outParameter4,
                                GGS_M_optionComponents   & outParameter5,
                                GGS_M_semanticsEntitiesForUse   & outParameter6 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_ModelMap & inParameter0,
                                   const GGS_ActionMap & inParameter1,
                                   const GGS_stringset & inParameter2,
                                   const GGS_stringset & inParameter3,
                                   const GGS_stringset & inParameter4,
                                   const GGS_M_optionComponents & inParameter5,
                                   const GGS_M_semanticsEntitiesForUse & inParameter6,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_ModelMap & outParameter0,
                                   GGS_ActionMap & outParameter1,
                                   GGS_stringset & outParameter2,
                                   GGS_stringset & outParameter3,
                                   GGS_stringset & outParameter4,
                                   GGS_M_optionComponents & outParameter5,
                                   GGS_M_semanticsEntitiesForUse & outParameter6,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_M_semanticsComponents constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_M_semanticsComponents & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_semanticsComponents reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_semanticsComponents & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_semanticsComponents & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_ModelMap   & _mModelMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_ActionMap   & _mActionMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_stringset   & _mImportedSemanticsComponents (LOCATION_ARGS) const ;
    public : /* const */ GGS_stringset   & _mImportedMetamodelComponents (LOCATION_ARGS) const ;
    public : /* const */ GGS_stringset   & _mImportedOptionsComponents (LOCATION_ARGS) const ;
    public : /* const */ GGS_M_optionComponents   & _mOptionsComponents (LOCATION_ARGS) const ;
    public : /* const */ GGS_M_semanticsEntitiesForUse   & _mSemanticsEntitiesMap (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@M_regularFilesEX'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_regularFilesEX ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_M_regularFilesEX ;

//---------------------------------------------------------------------------*

class GGS_M_regularFilesEX : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_M_regularFilesEX cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_M_regularFilesEX & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_M_regularFilesEX & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_M_regularFilesEX castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_regularFilesEX * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_regularFilesEX * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_regularFilesEX constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_M_regularFilesEX constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_uint & inValue0,
                                             const GGS_uint & inValue1
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_uint &  inParameter0,
                                const GGS_uint &  inParameter1 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_uint   & outParameter0,
                                GGS_uint   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_uint & inParameter0,
                                   const GGS_uint & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_uint & outParameter0,
                                   GGS_uint & outParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_M_regularFilesEX constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_M_regularFilesEX & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_regularFilesEX reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_regularFilesEX & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_regularFilesEX & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _mWrapperDirectoryIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_uint   & _mWrapperFileIndex (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Map '@filewrapperTemplateMapEX'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_filewrapperTemplateMapEX ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_filewrapperTemplateMapEX ;

//---------------------------------------------------------------------------*

class GGS_filewrapperTemplateMapEX : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_filewrapperTemplateMapEX cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_filewrapperTemplateMapEX & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_filewrapperTemplateMapEX & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_filewrapperTemplateMapEX castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_filewrapperTemplateMapEX * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_filewrapperTemplateMapEX * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_filewrapperTemplateMapEX constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_filewrapperTemplateMapEX constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_typeListeAttributsSemantiques & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_typeListeAttributsSemantiques &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_typeListeAttributsSemantiques   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_typeListeAttributsSemantiques & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_typeListeAttributsSemantiques & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_filewrapperTemplateMapEX constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_filewrapperTemplateMapEX & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_filewrapperTemplateMapEX reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_filewrapperTemplateMapEX & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_filewrapperTemplateMapEX & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_typeListeAttributsSemantiques   & _mFormalAttributeList (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@M_filewrappersEX'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_filewrappersEX ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_M_filewrappersEX ;

//---------------------------------------------------------------------------*

class GGS_M_filewrappersEX : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_M_filewrappersEX cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_M_filewrappersEX & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_M_filewrappersEX & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_M_filewrappersEX castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_filewrappersEX * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_filewrappersEX * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_filewrappersEX constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_M_filewrappersEX constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_M_regularFilesEX & inValue0,
                                             const GGS_filewrapperTemplateMapEX & inValue1
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_regularFilesEX &  inParameter0,
                                const GGS_filewrapperTemplateMapEX &  inParameter1 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_regularFilesEX   & outParameter0,
                                GGS_filewrapperTemplateMapEX   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_M_regularFilesEX & inParameter0,
                                   const GGS_filewrapperTemplateMapEX & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_M_regularFilesEX & outParameter0,
                                   GGS_filewrapperTemplateMapEX & outParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_M_filewrappersEX constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_M_filewrappersEX & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_filewrappersEX reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_filewrappersEX & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_filewrappersEX & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_M_regularFilesEX   & _mRegularFileMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_filewrapperTemplateMapEX   & _mTemplateMap (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@labelForPopUpList'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_labelForPopUpList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_labelForPopUpList ;

//---------------------------------------------------------------------------*

class GGS_labelForPopUpList : public AC_GGS_list {
  public : typedef elementOf_GGS_labelForPopUpList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_labelForPopUpList constructor_emptyList (void) ;
  public : static GGS_labelForPopUpList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_uint & argument_3) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_labelForPopUpList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_labelForPopUpList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_labelForPopUpList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_labelForPopUpList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_lstring & _out_0,
                              GGS_uint & _out_1,
                              GGS_lstring & _out_2,
                              GGS_uint & _out_3
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_lstring & _out_0,
                             GGS_uint & _out_1,
                             GGS_lstring & _out_2,
                             GGS_uint & _out_3
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_lstring & _out_0,
                                GGS_uint & _out_1,
                                GGS_lstring & _out_2,
                                GGS_uint & _out_3
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_uint & _out_1,
                                 GGS_lstring & _out_2,
                                 GGS_uint & _out_3
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_labelForPopUpList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_uint & argument_3) ;
//--- Handling '.' GALGAS operator
  public : GGS_labelForPopUpList operator_concat (const GGS_labelForPopUpList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_uint & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_uint & argument_3
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_uint & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mTerminal1AtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_uint 
  reader_mTerminal1IDAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mTerminal2AtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_uint 
  reader_mTerminal2IDAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMTerminal1AtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMTerminal1IDAtIndex (C_CompilerEx & inLexique,
                              const GGS_uint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMTerminal2AtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMTerminal2IDAtIndex (C_CompilerEx & inLexique,
                              const GGS_uint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_labelForPopUpList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_labelForPopUpList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mTerminal1 (LOCATION_ARGS) const ;
    public : /* const */ GGS_uint   & _mTerminal1ID (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mTerminal2 (LOCATION_ARGS) const ;
    public : /* const */ GGS_uint   & _mTerminal2ID (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         list '@EXtextMacroList'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_EXtextMacroList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_EXtextMacroList ;

//---------------------------------------------------------------------------*

class GGS_EXtextMacroList : public AC_GGS_list {
  public : typedef elementOf_GGS_EXtextMacroList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_EXtextMacroList constructor_emptyList (void) ;
  public : static GGS_EXtextMacroList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_EXtextMacroList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_EXtextMacroList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_EXtextMacroList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_EXtextMacroList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstring & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstring & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstring & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstring & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_EXtextMacroList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_EXtextMacroList operator_concat (const GGS_EXtextMacroList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mKeyAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mContentsAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMKeyAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMContentsAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_EXtextMacroList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_EXtextMacroList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mKey (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mContents (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Map '@EXreaderMap'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_EXreaderMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_EXreaderMap ;

//---------------------------------------------------------------------------*

class GGS_EXreaderMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_EXreaderMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_EXreaderMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_EXreaderMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_EXreaderMap castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_EXreaderMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_EXreaderMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_EXreaderMap constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_EXreaderMap constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_typeListeAttributsSemantiques & inValue0,
                                             const GGS_AC_galgasType & inValue1,
                                             const GGS_bool& inValue2
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_typeListeAttributsSemantiques &  inParameter0,
                                const GGS_AC_galgasType &  inParameter1,
                                const GGS_bool&  inParameter2 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_typeListeAttributsSemantiques   & outParameter0,
                                GGS_AC_galgasType   & outParameter1,
                                GGS_bool  & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_typeListeAttributsSemantiques & inParameter0,
                                   const GGS_AC_galgasType & inParameter1,
                                   const GGS_bool& inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_typeListeAttributsSemantiques & outParameter0,
                                   GGS_AC_galgasType & outParameter1,
                                   GGS_bool& outParameter2,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_EXreaderMap constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_EXreaderMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_EXreaderMap reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_EXreaderMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_EXreaderMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_typeListeAttributsSemantiques   & _mAccessorTypesList (LOCATION_ARGS) const ;
    public : /* const */ GGS_AC_galgasType   & _mReturnedType (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mHasLexiqueAndLocationArguments (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Routine 'EXenterReaderWithoutArgument'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_EXenterReaderWithoutArgument (C_CompilerEx &,
                                GGS_EXreaderMap  &,
                                const GGS_string ,
                                const GGS_AC_galgasType  ,
                                const GGS_bool  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Routine 'EXenterReaderWithStringArgument'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_EXenterReaderWithStringArgument (C_CompilerEx &,
                                GGS_EXreaderMap  &,
                                const GGS_string ,
                                const GGS_AC_galgasType  ,
                                const GGS_bool  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Routine 'EXenterReaderWith2StringArguments'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_EXenterReaderWith2StringArguments (C_CompilerEx &,
                                GGS_EXreaderMap  &,
                                const GGS_string ,
                                const GGS_AC_galgasType  ,
                                const GGS_bool  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'EXenterReaderWithBoolArgument'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_EXenterReaderWithBoolArgument (C_CompilerEx &,
                                GGS_EXreaderMap  &,
                                const GGS_string ,
                                const GGS_AC_galgasType  ,
                                const GGS_bool  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Routine 'EXenterReaderWithBoolStringlistArguments'             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_EXenterReaderWithBoolStringlistArguments (C_CompilerEx &,
                                GGS_EXreaderMap  &,
                                const GGS_string ,
                                const GGS_AC_galgasType  ,
                                const GGS_bool  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'EXenterReaderWithUintArgument'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_EXenterReaderWithUintArgument (C_CompilerEx &,
                                GGS_EXreaderMap  &,
                                const GGS_string ,
                                const GGS_AC_galgasType  ,
                                const GGS_bool  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'enterReaderWith2UintArguments'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterReaderWith2UintArguments (C_CompilerEx &,
                                GGS_EXreaderMap  &,
                                const GGS_string ,
                                const GGS_AC_galgasType  ,
                                const GGS_bool  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Routine 'EXenterReaderWithUintCharArguments'                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_EXenterReaderWithUintCharArguments (C_CompilerEx &,
                                GGS_EXreaderMap  &,
                                const GGS_string ,
                                const GGS_AC_galgasType  ,
                                const GGS_bool  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Once function 'stringReaderMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_stringReaderMap ;

//---------------------------------------------------------------------------*

GGS_EXreaderMap  function_stringReaderMap (C_CompilerEx & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'handleStringReaderCall'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_handleStringReaderCall (C_CompilerEx &,
                                const GGS_lstring  ,
                                GGS_typeListeAttributsSemantiques  &,
                                GGS_AC_galgasType  &,
                                GGS_bool & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'handleReaderCall'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_handleReaderCall (C_CompilerEx &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_EXcategoryReaderMap  ,
                                const GGS_AC_galgasType  ,
                                const GGS_lstring  ,
                                GGS_typeListeAttributsSemantiques  &,
                                GGS_AC_galgasType  &,
                                GGS_string &,
                                GGS_string &,
                                GGS_bool & COMMA_LOCATION_ARGS) ;

void routine_check_KL_escapeCharacters (C_CompilerEx &,
                                GGS_lstring   COMMA_LOCATION_ARGS) ;

void routine_check_K_escapeCharacters (C_CompilerEx &,
                                GGS_lstring   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'importSemanticsComponent'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_importSemanticsComponent (C_CompilerEx &,
                                GGS_M_semanticsComponents  &,
                                GGS_ModelMap  &,
                                GGS_ActionMap  &,
                                GGS_stringset  &,
                                GGS_stringset  &,
                                GGS_lstring   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeGalgas_application'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgas_application ;

//---------------------------------------------------------------------------*

class GGS_typeGalgas_application : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_application (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_application (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_application (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_application
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_application constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_application * getPtr (void) const {
    return (cPtr_typeGalgas_application *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_application * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_application * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_application *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgas_application castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgas_application ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'enterBuiltinTypes'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterBuiltinTypes (C_CompilerEx &,
                                GGS_M_semanticsEntitiesForUse  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_templateInstruction'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateInstruction ;

//---------------------------------------------------------------------------*

class GGS_templateInstruction : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_templateInstruction (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_templateInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateInstruction * getPtr (void) const {
    return (cPtr_templateInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_templateInstruction *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__templateInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@templateInstructionList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_templateInstructionList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateInstructionList ;

//---------------------------------------------------------------------------*

class GGS_templateInstructionList : public AC_GGS_list {
  public : typedef elementOf_GGS_templateInstructionList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_templateInstructionList constructor_emptyList (void) ;
  public : static GGS_templateInstructionList constructor_listWithValue (const GGS_templateInstruction & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_templateInstructionList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_templateInstructionList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_templateInstructionList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_templateInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_templateInstruction & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_templateInstruction & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_templateInstruction & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_templateInstruction & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_templateInstructionList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_templateInstruction & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_templateInstructionList operator_concat (const GGS_templateInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_templateInstruction & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_templateInstruction & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_templateInstruction & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_templateInstruction 
  reader_mInstructionAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMInstructionAtIndex (C_CompilerEx & inLexique,
                              const GGS_templateInstruction  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateInstructionList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_templateInstructionList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_templateInstruction   & _mInstruction (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeExpression'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeExpression ;

//---------------------------------------------------------------------------*

class GGS_typeExpression : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_typeExpression (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_typeExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeExpression
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeExpression * getPtr (void) const {
    return (cPtr_typeExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_typeExpression *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeExpression castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__typeExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_templateInstructionString'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateInstructionString ;

//---------------------------------------------------------------------------*

class GGS_templateInstructionString : public GGS_templateInstruction {
//--- Default constructor
  public : inline GGS_templateInstructionString (void) :
  GGS_templateInstruction () {}

//--- Pointer assignment constructor
  public : GGS_templateInstructionString (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateInstructionString (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateInstructionString
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateInstructionString constructor_new (C_CompilerEx & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateInstructionString * getPtr (void) const {
    return (cPtr_templateInstructionString *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateInstructionString * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateInstructionString * operator () (LOCATION_ARGS) const {
      return (cPtr_templateInstructionString *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateInstructionString castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateInstructionString ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_templateInstructionExpression'              *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateInstructionExpression ;

//---------------------------------------------------------------------------*

class GGS_templateInstructionExpression : public GGS_templateInstruction {
//--- Default constructor
  public : inline GGS_templateInstructionExpression (void) :
  GGS_templateInstruction () {}

//--- Pointer assignment constructor
  public : GGS_templateInstructionExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateInstructionExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateInstructionExpression
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateInstructionExpression constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeExpression & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateInstructionExpression * getPtr (void) const {
    return (cPtr_templateInstructionExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateInstructionExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateInstructionExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_templateInstructionExpression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateInstructionExpression castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateInstructionExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_templateBlockInstruction'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateBlockInstruction ;

//---------------------------------------------------------------------------*

class GGS_templateBlockInstruction : public GGS_templateInstruction {
//--- Default constructor
  public : inline GGS_templateBlockInstruction (void) :
  GGS_templateInstruction () {}

//--- Pointer assignment constructor
  public : GGS_templateBlockInstruction (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateBlockInstruction (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateBlockInstruction
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateBlockInstruction constructor_new (C_CompilerEx & inLexique,
                                const GGS_typeExpression & argument_0,
                                const GGS_location & argument_1,
                                const GGS_templateInstructionList & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateBlockInstruction * getPtr (void) const {
    return (cPtr_templateBlockInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateBlockInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateBlockInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_templateBlockInstruction *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateBlockInstruction castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateBlockInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//         GALGAS class 'GGS_templateInstructionGetColumnLocation'           *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateInstructionGetColumnLocation ;

//---------------------------------------------------------------------------*

class GGS_templateInstructionGetColumnLocation : public GGS_templateInstruction {
//--- Default constructor
  public : inline GGS_templateInstructionGetColumnLocation (void) :
  GGS_templateInstruction () {}

//--- Pointer assignment constructor
  public : GGS_templateInstructionGetColumnLocation (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateInstructionGetColumnLocation (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateInstructionGetColumnLocation
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateInstructionGetColumnLocation constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateInstructionGetColumnLocation * getPtr (void) const {
    return (cPtr_templateInstructionGetColumnLocation *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateInstructionGetColumnLocation * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateInstructionGetColumnLocation * operator () (LOCATION_ARGS) const {
      return (cPtr_templateInstructionGetColumnLocation *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateInstructionGetColumnLocation castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateInstructionGetColumnLocation ;

//---------------------------------------------------------------------------*
//                                                                           *
//         GALGAS class 'GGS_templateInstructionGotoColumnLocation'          *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateInstructionGotoColumnLocation ;

//---------------------------------------------------------------------------*

class GGS_templateInstructionGotoColumnLocation : public GGS_templateInstruction {
//--- Default constructor
  public : inline GGS_templateInstructionGotoColumnLocation (void) :
  GGS_templateInstruction () {}

//--- Pointer assignment constructor
  public : GGS_templateInstructionGotoColumnLocation (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateInstructionGotoColumnLocation (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateInstructionGotoColumnLocation
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateInstructionGotoColumnLocation constructor_new (C_CompilerEx & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateInstructionGotoColumnLocation * getPtr (void) const {
    return (cPtr_templateInstructionGotoColumnLocation *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateInstructionGotoColumnLocation * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateInstructionGotoColumnLocation * operator () (LOCATION_ARGS) const {
      return (cPtr_templateInstructionGotoColumnLocation *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateInstructionGotoColumnLocation castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateInstructionGotoColumnLocation ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_templateInstructionForeach'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateInstructionForeach ;

//---------------------------------------------------------------------------*

class GGS_templateInstructionForeach : public GGS_templateInstruction {
//--- Default constructor
  public : inline GGS_templateInstructionForeach (void) :
  GGS_templateInstruction () {}

//--- Pointer assignment constructor
  public : GGS_templateInstructionForeach (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateInstructionForeach (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateInstructionForeach
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateInstructionForeach constructor_new (C_CompilerEx & inLexique,
                                const GGS_bool& argument_0,
                                const GGS_string& argument_1,
                                const GGS_bool& argument_2,
                                const GGS_typeExpression & argument_3,
                                const GGS_location & argument_4,
                                const GGS_templateInstructionList & argument_5,
                                const GGS_templateInstructionList & argument_6,
                                const GGS_lstring & argument_7,
                                const GGS_templateInstructionList & argument_8,
                                const GGS_templateInstructionList & argument_9
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateInstructionForeach * getPtr (void) const {
    return (cPtr_templateInstructionForeach *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateInstructionForeach * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateInstructionForeach * operator () (LOCATION_ARGS) const {
      return (cPtr_templateInstructionForeach *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateInstructionForeach castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateInstructionForeach ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 list '@templateInstructionIfBranchList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_templateInstructionIfBranchList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateInstructionIfBranchList ;

//---------------------------------------------------------------------------*

class GGS_templateInstructionIfBranchList : public AC_GGS_list {
  public : typedef elementOf_GGS_templateInstructionIfBranchList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_templateInstructionIfBranchList constructor_emptyList (void) ;
  public : static GGS_templateInstructionIfBranchList constructor_listWithValue (const GGS_typeExpression & argument_0,
                                const GGS_templateInstructionList & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_templateInstructionIfBranchList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_templateInstructionIfBranchList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_templateInstructionIfBranchList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_templateInstructionIfBranchList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_typeExpression & _out_0,
                              GGS_templateInstructionList & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_typeExpression & _out_0,
                             GGS_templateInstructionList & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_typeExpression & _out_0,
                                GGS_templateInstructionList & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_typeExpression & _out_0,
                                 GGS_templateInstructionList & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_templateInstructionIfBranchList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_typeExpression & argument_0,
                                const GGS_templateInstructionList & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_templateInstructionIfBranchList operator_concat (const GGS_templateInstructionIfBranchList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_typeExpression & argument_0,
                                const GGS_templateInstructionList & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_typeExpression & argument_0,
                                const GGS_templateInstructionList & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_typeExpression & argument_0,
                                const GGS_templateInstructionList & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_typeExpression 
  reader_mExpressionAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_templateInstructionList 
  reader_mInstructionListAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMExpressionAtIndex (C_CompilerEx & inLexique,
                              const GGS_typeExpression  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_CompilerEx & inLexique,
                              const GGS_templateInstructionList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateInstructionIfBranchList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_templateInstructionIfBranchList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_typeExpression   & _mExpression (LOCATION_ARGS) const ;
    public : /* const */ GGS_templateInstructionList   & _mInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_templateInstructionIf'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateInstructionIf ;

//---------------------------------------------------------------------------*

class GGS_templateInstructionIf : public GGS_templateInstruction {
//--- Default constructor
  public : inline GGS_templateInstructionIf (void) :
  GGS_templateInstruction () {}

//--- Pointer assignment constructor
  public : GGS_templateInstructionIf (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateInstructionIf (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateInstructionIf
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateInstructionIf constructor_new (C_CompilerEx & inLexique,
                                const GGS_templateInstructionIfBranchList & argument_0,
                                const GGS_templateInstructionList & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateInstructionIf * getPtr (void) const {
    return (cPtr_templateInstructionIf *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateInstructionIf * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateInstructionIf * operator () (LOCATION_ARGS) const {
      return (cPtr_templateInstructionIf *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateInstructionIf castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateInstructionIf ;

//---------------------------------------------------------------------------*
//                                                                           *
//               list '@templateInstructionSwitchBranchList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_templateInstructionSwitchBranchList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateInstructionSwitchBranchList ;

//---------------------------------------------------------------------------*

class GGS_templateInstructionSwitchBranchList : public AC_GGS_list {
  public : typedef elementOf_GGS_templateInstructionSwitchBranchList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_templateInstructionSwitchBranchList constructor_emptyList (void) ;
  public : static GGS_templateInstructionSwitchBranchList constructor_listWithValue (const GGS_lstringlist & argument_0,
                                const GGS_templateInstructionList & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_templateInstructionSwitchBranchList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_templateInstructionSwitchBranchList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_templateInstructionSwitchBranchList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_templateInstructionSwitchBranchList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_lstringlist & _out_0,
                              GGS_templateInstructionList & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_lstringlist & _out_0,
                             GGS_templateInstructionList & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_lstringlist & _out_0,
                                GGS_templateInstructionList & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_lstringlist & _out_0,
                                 GGS_templateInstructionList & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_templateInstructionSwitchBranchList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstringlist & argument_0,
                                const GGS_templateInstructionList & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_templateInstructionSwitchBranchList operator_concat (const GGS_templateInstructionSwitchBranchList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_lstringlist & argument_0,
                                const GGS_templateInstructionList & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstringlist & argument_0,
                                const GGS_templateInstructionList & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstringlist & argument_0,
                                const GGS_templateInstructionList & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstringlist 
  reader_mConstantListAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_templateInstructionList 
  reader_mInstructionListAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMConstantListAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstringlist  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_CompilerEx & inLexique,
                              const GGS_templateInstructionList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateInstructionSwitchBranchList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_templateInstructionSwitchBranchList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstringlist   & _mConstantList (LOCATION_ARGS) const ;
    public : /* const */ GGS_templateInstructionList   & _mInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_templateInstructionSwitch'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_templateInstructionSwitch ;

//---------------------------------------------------------------------------*

class GGS_templateInstructionSwitch : public GGS_templateInstruction {
//--- Default constructor
  public : inline GGS_templateInstructionSwitch (void) :
  GGS_templateInstruction () {}

//--- Pointer assignment constructor
  public : GGS_templateInstructionSwitch (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateInstructionSwitch (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_templateInstructionSwitch
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateInstructionSwitch constructor_new (C_CompilerEx & inLexique,
                                const GGS_string& argument_0,
                                const GGS_typeExpression & argument_1,
                                const GGS_templateInstructionSwitchBranchList & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateInstructionSwitch * getPtr (void) const {
    return (cPtr_templateInstructionSwitch *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_string reader_mSwitchExpressionTypeName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeExpression  reader_mSwitchExpression (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateInstructionSwitch * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateInstructionSwitch * operator () (LOCATION_ARGS) const {
      return (cPtr_templateInstructionSwitch *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_templateInstructionSwitch castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__templateInstructionSwitch ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@M_syntaxComponents'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_syntaxComponents ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_M_syntaxComponents ;

//---------------------------------------------------------------------------*

class GGS_M_syntaxComponents : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_M_syntaxComponents cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_M_syntaxComponents & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_M_syntaxComponents & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_M_syntaxComponents castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- 'insertFakeKey' modifier
  public : void modifier_insertFakeKey (C_CompilerEx & inCompiler,
                         const GGS_string & inKey,
                         const GGS_location & inHelperMessageErrorLocation,
                         const GGS_string & inHelperMessage
                         COMMA_LOCATION_ARGS) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_syntaxComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_syntaxComponents * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_syntaxComponents constructor_emptyMap (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_M_syntaxComponents constructor_mapWithKeyAndValue (C_CompilerEx & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_nonTerminalSymbolMapForGrammarAnalysis & inValue0,
                                             const GGS_productionRuleListForGrammarAnalysis & inValue1,
                                             const GGS_lstring & inValue2
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_nonTerminalSymbolMapForGrammarAnalysis &  inParameter0,
                                const GGS_productionRuleListForGrammarAnalysis &  inParameter1,
                                const GGS_lstring &  inParameter2 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_CompilerEx & inLexique,
                                const GGS_lstring & inKey,
                                GGS_nonTerminalSymbolMapForGrammarAnalysis   & outParameter0,
                                GGS_productionRuleListForGrammarAnalysis   & outParameter1,
                                GGS_lstring   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_nonTerminalSymbolMapForGrammarAnalysis & inParameter0,
                                   const GGS_productionRuleListForGrammarAnalysis & inParameter1,
                                   const GGS_lstring & inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_CompilerEx & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_nonTerminalSymbolMapForGrammarAnalysis & outParameter0,
                                   GGS_productionRuleListForGrammarAnalysis & outParameter1,
                                   GGS_lstring & outParameter2,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_M_syntaxComponents constructor_mapWithMapToOverride (C_CompilerEx & inLexique,
                                            const GGS_M_syntaxComponents & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_syntaxComponents reader_overriddenMap (C_CompilerEx & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_syntaxComponents & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_syntaxComponents & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_nonTerminalSymbolMapForGrammarAnalysis   & _mNonterminalSymbolsMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_productionRuleListForGrammarAnalysis   & _mProductionRulesList (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mLexiqueComponentName (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*

#include "include_AC_semanticsEntity.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@M_semanticsEntitiesForUse'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_semanticsEntitiesForUse {
  public : GGS_AC_semanticsEntity  aDefEntite ;

  public : e_M_semanticsEntitiesForUse (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_semanticsEntitiesForUse : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_semanticsEntitiesForUse (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_M_semanticsEntitiesForUse & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_M_semanticsEntitiesForUse * nextObject (void) const { return (elementOf_GGS_M_semanticsEntitiesForUse *) mNextItem ; }
  public : inline elementOf_GGS_M_semanticsEntitiesForUse * infObject (void) const { return (elementOf_GGS_M_semanticsEntitiesForUse *) mInfPtr ; }
  public : inline elementOf_GGS_M_semanticsEntitiesForUse * supObject (void) const { return (elementOf_GGS_M_semanticsEntitiesForUse *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_semanticsEntitiesForUse mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@typeInstructionList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeInstructionList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_typeInstruction  mInstruction ;
//--- Constructor
  public : elementOf_GGS_typeInstructionList (const GGS_typeInstruction & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_typeInstructionList * nextObject (void) const { return (elementOf_GGS_typeInstructionList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_typeInstructionList * previousObject (void) const { return (elementOf_GGS_typeInstructionList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_typeInstructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@typeListModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListModel : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mTypeName ;
//--- Constructor
  public : elementOf_GGS_typeListModel (const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_typeListModel * nextObject (void) const { return (elementOf_GGS_typeListModel *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_typeListModel * previousObject (void) const { return (elementOf_GGS_typeListModel *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_typeListModel ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_TypeModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_TypeModel : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_TypeModel (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_BoolModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_BoolModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_BoolModel (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_CharModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_CharModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_CharModel (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_UIntModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_UIntModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_UIntModel (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_SIntModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_SIntModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_SIntModel (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_UInt64Model'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_UInt64Model : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_UInt64Model (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_SInt64Model'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_SInt64Model : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_SInt64Model (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_DoubleModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_DoubleModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_DoubleModel (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_StringModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_StringModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_StringModel (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_LBoolModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_LBoolModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_LBoolModel (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_LCharModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_LCharModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_LCharModel (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_LUIntModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_LUIntModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_LUIntModel (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_LSIntModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_LSIntModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_LSIntModel (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_LUInt64Model'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_LUInt64Model : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_LUInt64Model (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_LSInt64Model'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_LSInt64Model : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_LSInt64Model (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_LDoubleModel'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_LDoubleModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_LDoubleModel (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_LStringModel'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_LStringModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_LStringModel (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   abstract class 'cPtr_StringsetModel'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_StringsetModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_StringsetModel (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   abstract class 'cPtr_LocationModel'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_LocationModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_LocationModel (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_ListModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_ListModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_ListModel (const GGS_typeListModel & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_typeListModel  mAttributeList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      abstract class 'cPtr_MapModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_MapModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_MapModel (const GGS_typeListModel & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_typeListModel  mAttributeList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@enumConstantMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_enumConstantMap {
  public : GGS_uint  mConstantIndex ;

  public : e_enumConstantMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_enumConstantMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_enumConstantMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_enumConstantMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_enumConstantMap * nextObject (void) const { return (elementOf_GGS_enumConstantMap *) mNextItem ; }
  public : inline elementOf_GGS_enumConstantMap * infObject (void) const { return (elementOf_GGS_enumConstantMap *) mInfPtr ; }
  public : inline elementOf_GGS_enumConstantMap * supObject (void) const { return (elementOf_GGS_enumConstantMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_enumConstantMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@enumUsedConstantMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_enumUsedConstantMap {

} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_enumUsedConstantMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_enumUsedConstantMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_enumUsedConstantMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_enumUsedConstantMap * nextObject (void) const { return (elementOf_GGS_enumUsedConstantMap *) mNextItem ; }
  public : inline elementOf_GGS_enumUsedConstantMap * infObject (void) const { return (elementOf_GGS_enumUsedConstantMap *) mInfPtr ; }
  public : inline elementOf_GGS_enumUsedConstantMap * supObject (void) const { return (elementOf_GGS_enumUsedConstantMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_enumUsedConstantMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@EXenumMessageMap'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_EXenumMessageMap {

} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_EXenumMessageMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_EXenumMessageMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_EXenumMessageMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_EXenumMessageMap * nextObject (void) const { return (elementOf_GGS_EXenumMessageMap *) mNextItem ; }
  public : inline elementOf_GGS_EXenumMessageMap * infObject (void) const { return (elementOf_GGS_EXenumMessageMap *) mInfPtr ; }
  public : inline elementOf_GGS_EXenumMessageMap * supObject (void) const { return (elementOf_GGS_EXenumMessageMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_EXenumMessageMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_EnumModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_EnumModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_EnumModel (const GGS_enumConstantMap & ,
                                const GGS_EXenumMessageMap & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_enumConstantMap  mEnumConstantesMap ;
  public : GGS_EXenumMessageMap  mMessagesMap ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of map '@externTypeConstructorMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class e_externTypeConstructorMap {
  public : GGS_typeListModel  mFormalInputArgumentList ;

  public : e_externTypeConstructorMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_externTypeConstructorMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_externTypeConstructorMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_externTypeConstructorMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_externTypeConstructorMap * nextObject (void) const { return (elementOf_GGS_externTypeConstructorMap *) mNextItem ; }
  public : inline elementOf_GGS_externTypeConstructorMap * infObject (void) const { return (elementOf_GGS_externTypeConstructorMap *) mInfPtr ; }
  public : inline elementOf_GGS_externTypeConstructorMap * supObject (void) const { return (elementOf_GGS_externTypeConstructorMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_externTypeConstructorMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@externTypeReaderMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_externTypeReaderMap {
  public : GGS_signatureForGrammarAnalysis  mReaderFormalArgumentList ;

  public : e_externTypeReaderMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_externTypeReaderMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_externTypeReaderMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_externTypeReaderMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_externTypeReaderMap * nextObject (void) const { return (elementOf_GGS_externTypeReaderMap *) mNextItem ; }
  public : inline elementOf_GGS_externTypeReaderMap * infObject (void) const { return (elementOf_GGS_externTypeReaderMap *) mInfPtr ; }
  public : inline elementOf_GGS_externTypeReaderMap * supObject (void) const { return (elementOf_GGS_externTypeReaderMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_externTypeReaderMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of map '@externTypeModifierMap'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_externTypeModifierMap {
  public : GGS_signatureForGrammarAnalysis  mModifierFormalArgumentList ;

  public : e_externTypeModifierMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_externTypeModifierMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_externTypeModifierMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_externTypeModifierMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_externTypeModifierMap * nextObject (void) const { return (elementOf_GGS_externTypeModifierMap *) mNextItem ; }
  public : inline elementOf_GGS_externTypeModifierMap * infObject (void) const { return (elementOf_GGS_externTypeModifierMap *) mInfPtr ; }
  public : inline elementOf_GGS_externTypeModifierMap * supObject (void) const { return (elementOf_GGS_externTypeModifierMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_externTypeModifierMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_ExternTypeModel'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_ExternTypeModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_ExternTypeModel (const GGS_externTypeConstructorMap & ,
                                const GGS_externTypeReaderMap & ,
                                const GGS_externTypeModifierMap & ,
                                const GGS_typeListModel & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_externTypeConstructorMap  mExternTypeConstructorMap ;
  public : GGS_externTypeReaderMap  mReaderMap ;
  public : GGS_externTypeModifierMap  mModifierMap ;
  public : GGS_typeListModel  mAddAssignFormalInputArgumentList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@classMessageMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_classMessageMap {

} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_classMessageMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_classMessageMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_classMessageMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_classMessageMap * nextObject (void) const { return (elementOf_GGS_classMessageMap *) mNextItem ; }
  public : inline elementOf_GGS_classMessageMap * infObject (void) const { return (elementOf_GGS_classMessageMap *) mInfPtr ; }
  public : inline elementOf_GGS_classMessageMap * supObject (void) const { return (elementOf_GGS_classMessageMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_classMessageMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_ClassModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_ClassModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_ClassModel (const GGS_bool& ,
                                const GGS_stringset & ,
                                const GGS_typeListModel & ,
                                const GGS_classMessageMap & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_bool mIsAbstract ;
  public : GGS_stringset  mSuperClasses ;
  public : GGS_typeListModel  mAttributeList ;
  public : GGS_classMessageMap  mMessageMap ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Element of map '@ModelMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class e_ModelMap {
  public : GGS_TypeModel  mType ;

  public : e_ModelMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_ModelMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_ModelMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_ModelMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_ModelMap * nextObject (void) const { return (elementOf_GGS_ModelMap *) mNextItem ; }
  public : inline elementOf_GGS_ModelMap * infObject (void) const { return (elementOf_GGS_ModelMap *) mInfPtr ; }
  public : inline elementOf_GGS_ModelMap * supObject (void) const { return (elementOf_GGS_ModelMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_ModelMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of map '@ActionMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class e_ActionMap {
  public : GGS_signatureForGrammarAnalysis  mSignature ;
  public : GGS_bool mIsExtern ;

  public : e_ActionMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_ActionMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_ActionMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_ActionMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_ActionMap * nextObject (void) const { return (elementOf_GGS_ActionMap *) mNextItem ; }
  public : inline elementOf_GGS_ActionMap * infObject (void) const { return (elementOf_GGS_ActionMap *) mInfPtr ; }
  public : inline elementOf_GGS_ActionMap * supObject (void) const { return (elementOf_GGS_ActionMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_ActionMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_AC_galgasType.h"

//---------------------------------------------------------------------------*

#include "include_typeEntiteType.h"

//---------------------------------------------------------------------------*

#include "include_typeCplusPlusName.h"

//---------------------------------------------------------------------------*

#include "include_typeDirectName.h"

//---------------------------------------------------------------------------*

#include "include_typeCurrentObjectName.h"

//---------------------------------------------------------------------------*

#include "include_typeCppStarThisName.h"

//---------------------------------------------------------------------------*

#include "include_typeCppThisInCategoryName.h"

//---------------------------------------------------------------------------*

#include "include_typeCppInheritedName.h"

//---------------------------------------------------------------------------*

#include "include_typeAutomaticName.h"

//---------------------------------------------------------------------------*

#include "include_typeLocationAutomaticName.h"

//---------------------------------------------------------------------------*

#include "include_typeOperandName.h"

//---------------------------------------------------------------------------*

#include "include_typeKeyName.h"

//---------------------------------------------------------------------------*

#include "include_typeNullName.h"

//---------------------------------------------------------------------------*
//                                                                           *
//            Element of list '@typeListeTypesEtNomsArgMethode'              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListeTypesEtNomsArgMethode : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_AC_galgasType  mType ;
  public : GGS_formalArgumentPassingModeAST mFormalArgumentPassingMode ;
  public : GGS_typeCplusPlusName  mCppName ;
  public : GGS_bool mModeIn ;
  public : GGS_lstring  mParameterName ;
//--- Constructor
  public : elementOf_GGS_typeListeTypesEtNomsArgMethode (const GGS_AC_galgasType & ,
                                const GGS_formalArgumentPassingModeAST& ,
                                const GGS_typeCplusPlusName & ,
                                const GGS_bool& ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_typeListeTypesEtNomsArgMethode * nextObject (void) const { return (elementOf_GGS_typeListeTypesEtNomsArgMethode *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_typeListeTypesEtNomsArgMethode * previousObject (void) const { return (elementOf_GGS_typeListeTypesEtNomsArgMethode *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_typeListeTypesEtNomsArgMethode ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@typeSuperClassesMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeSuperClassesMap {

} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeSuperClassesMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeSuperClassesMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_typeSuperClassesMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_typeSuperClassesMap * nextObject (void) const { return (elementOf_GGS_typeSuperClassesMap *) mNextItem ; }
  public : inline elementOf_GGS_typeSuperClassesMap * infObject (void) const { return (elementOf_GGS_typeSuperClassesMap *) mInfPtr ; }
  public : inline elementOf_GGS_typeSuperClassesMap * supObject (void) const { return (elementOf_GGS_typeSuperClassesMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeSuperClassesMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@typeListeAttributsSemantiques'              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListeAttributsSemantiques : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_AC_galgasType  mAttributType ;
  public : GGS_lstring  mAttributeName ;
//--- Constructor
  public : elementOf_GGS_typeListeAttributsSemantiques (const GGS_AC_galgasType & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_typeListeAttributsSemantiques * nextObject (void) const { return (elementOf_GGS_typeListeAttributsSemantiques *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_typeListeAttributsSemantiques * previousObject (void) const { return (elementOf_GGS_typeListeAttributsSemantiques *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_typeListeAttributsSemantiques ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@typeTypesList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTypesList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_AC_galgasType  mType ;
  public : GGS_location  mEndOfExpressionLocation ;
//--- Constructor
  public : elementOf_GGS_typeTypesList (const GGS_AC_galgasType & ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_typeTypesList * nextObject (void) const { return (elementOf_GGS_typeTypesList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_typeTypesList * previousObject (void) const { return (elementOf_GGS_typeTypesList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_typeTypesList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@L_EXsignature'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_EXsignature : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_AC_galgasType  mType ;
  public : GGS_formalArgumentPassingModeAST mFormalArgumentPassingMode ;
//--- Constructor
  public : elementOf_GGS_L_EXsignature (const GGS_AC_galgasType & ,
                                const GGS_formalArgumentPassingModeAST& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_EXsignature * nextObject (void) const { return (elementOf_GGS_L_EXsignature *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_EXsignature * previousObject (void) const { return (elementOf_GGS_L_EXsignature *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_L_EXsignature ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@EXcategoryMethodMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_EXcategoryMethodMap {
  public : GGS_categoryMethodKind mCategoryMethodKind ;
  public : GGS_L_EXsignature  aListeArgumentsFormels ;

  public : e_EXcategoryMethodMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_EXcategoryMethodMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_EXcategoryMethodMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_EXcategoryMethodMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_EXcategoryMethodMap * nextObject (void) const { return (elementOf_GGS_EXcategoryMethodMap *) mNextItem ; }
  public : inline elementOf_GGS_EXcategoryMethodMap * infObject (void) const { return (elementOf_GGS_EXcategoryMethodMap *) mInfPtr ; }
  public : inline elementOf_GGS_EXcategoryMethodMap * supObject (void) const { return (elementOf_GGS_EXcategoryMethodMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_EXcategoryMethodMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@EXcategoryReaderMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_EXcategoryReaderMap {
  public : GGS_categoryMethodKind mCategoryMethodKind ;
  public : GGS_L_EXsignature  aListeArgumentsFormels ;
  public : GGS_AC_galgasType  mReturnedType ;

  public : e_EXcategoryReaderMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_EXcategoryReaderMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_EXcategoryReaderMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_EXcategoryReaderMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_EXcategoryReaderMap * nextObject (void) const { return (elementOf_GGS_EXcategoryReaderMap *) mNextItem ; }
  public : inline elementOf_GGS_EXcategoryReaderMap * infObject (void) const { return (elementOf_GGS_EXcategoryReaderMap *) mInfPtr ; }
  public : inline elementOf_GGS_EXcategoryReaderMap * supObject (void) const { return (elementOf_GGS_EXcategoryReaderMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_EXcategoryReaderMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of map '@EXcategoryTemplateMap'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_EXcategoryTemplateMap {
  public : GGS_categoryMethodKind mCategoryMethodKind ;
  public : GGS_L_EXsignature  aListeArgumentsFormels ;

  public : e_EXcategoryTemplateMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_EXcategoryTemplateMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_EXcategoryTemplateMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_EXcategoryTemplateMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_EXcategoryTemplateMap * nextObject (void) const { return (elementOf_GGS_EXcategoryTemplateMap *) mNextItem ; }
  public : inline elementOf_GGS_EXcategoryTemplateMap * infObject (void) const { return (elementOf_GGS_EXcategoryTemplateMap *) mInfPtr ; }
  public : inline elementOf_GGS_EXcategoryTemplateMap * supObject (void) const { return (elementOf_GGS_EXcategoryTemplateMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_EXcategoryTemplateMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@L_actualParametersSignature'               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_actualParametersSignature : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_AC_galgasType  mType ;
  public : GGS_EXactualParametersPassingMode mFormalArgumentPassingMode ;
//--- Constructor
  public : elementOf_GGS_L_actualParametersSignature (const GGS_AC_galgasType & ,
                                const GGS_EXactualParametersPassingMode& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_actualParametersSignature * nextObject (void) const { return (elementOf_GGS_L_actualParametersSignature *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_actualParametersSignature * previousObject (void) const { return (elementOf_GGS_L_actualParametersSignature *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_L_actualParametersSignature ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@M_accessors_map'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_accessors_map {
  public : GGS_L_EXsignature  mAccessorSignature ;
  public : GGS_AC_galgasType  mReturnedType ;

  public : e_M_accessors_map (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_accessors_map : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_accessors_map (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_M_accessors_map & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_M_accessors_map * nextObject (void) const { return (elementOf_GGS_M_accessors_map *) mNextItem ; }
  public : inline elementOf_GGS_M_accessors_map * infObject (void) const { return (elementOf_GGS_M_accessors_map *) mInfPtr ; }
  public : inline elementOf_GGS_M_accessors_map * supObject (void) const { return (elementOf_GGS_M_accessors_map *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_accessors_map mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgas_jokerInParameterList.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_bool.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_uint.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_char.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_string.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_sint.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_sint64.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_uint64.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_double.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_binaryset.h"

//---------------------------------------------------------------------------*

#include "include_C_galgasPrimitiveType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_location.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_lstring.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_lchar.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_lbool.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_luint.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_luint64.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_lsint.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_lsint64.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_ldouble.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_stringset.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_filewrapper.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_data.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_object.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_type.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_function.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@typeTableMethodes'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeTableMethodes {
  public : GGS_L_EXsignature  aListeTypesParametres ;

  public : e_typeTableMethodes (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableMethodes : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeTableMethodes (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_typeTableMethodes & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_typeTableMethodes * nextObject (void) const { return (elementOf_GGS_typeTableMethodes *) mNextItem ; }
  public : inline elementOf_GGS_typeTableMethodes * infObject (void) const { return (elementOf_GGS_typeTableMethodes *) mInfPtr ; }
  public : inline elementOf_GGS_typeTableMethodes * supObject (void) const { return (elementOf_GGS_typeTableMethodes *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeTableMethodes mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedExternType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@M_externTypeConstructorMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_externTypeConstructorMap {
  public : GGS_typeListeAttributsSemantiques  aListeDesAttributs ;

  public : e_M_externTypeConstructorMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_externTypeConstructorMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_externTypeConstructorMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_M_externTypeConstructorMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_M_externTypeConstructorMap * nextObject (void) const { return (elementOf_GGS_M_externTypeConstructorMap *) mNextItem ; }
  public : inline elementOf_GGS_M_externTypeConstructorMap * infObject (void) const { return (elementOf_GGS_M_externTypeConstructorMap *) mInfPtr ; }
  public : inline elementOf_GGS_M_externTypeConstructorMap * supObject (void) const { return (elementOf_GGS_M_externTypeConstructorMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_externTypeConstructorMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgasExternType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@M_terminalSymbolsMapForUse'                *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_terminalSymbolsMapForUse {
  public : GGS_typeListeAttributsSemantiques  aListeDesAttributs ;

  public : e_M_terminalSymbolsMapForUse (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_terminalSymbolsMapForUse : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_terminalSymbolsMapForUse (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_M_terminalSymbolsMapForUse & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_M_terminalSymbolsMapForUse * nextObject (void) const { return (elementOf_GGS_M_terminalSymbolsMapForUse *) mNextItem ; }
  public : inline elementOf_GGS_M_terminalSymbolsMapForUse * infObject (void) const { return (elementOf_GGS_M_terminalSymbolsMapForUse *) mInfPtr ; }
  public : inline elementOf_GGS_M_terminalSymbolsMapForUse * supObject (void) const { return (elementOf_GGS_M_terminalSymbolsMapForUse *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_terminalSymbolsMapForUse mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@M_lexiqueComponents'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_lexiqueComponents {
  public : GGS_M_terminalSymbolsMapForUse  mTerminalSymbolMap ;

  public : e_M_lexiqueComponents (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_lexiqueComponents : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_lexiqueComponents (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_M_lexiqueComponents & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_M_lexiqueComponents * nextObject (void) const { return (elementOf_GGS_M_lexiqueComponents *) mNextItem ; }
  public : inline elementOf_GGS_M_lexiqueComponents * infObject (void) const { return (elementOf_GGS_M_lexiqueComponents *) mInfPtr ; }
  public : inline elementOf_GGS_M_lexiqueComponents * supObject (void) const { return (elementOf_GGS_M_lexiqueComponents *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_lexiqueComponents mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@typeTableEnAvant'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeTableEnAvant {
  public : GGS_AC_galgasType  mType ;

  public : e_typeTableEnAvant (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableEnAvant : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeTableEnAvant (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_typeTableEnAvant & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_typeTableEnAvant * nextObject (void) const { return (elementOf_GGS_typeTableEnAvant *) mNextItem ; }
  public : inline elementOf_GGS_typeTableEnAvant * infObject (void) const { return (elementOf_GGS_typeTableEnAvant *) mInfPtr ; }
  public : inline elementOf_GGS_typeTableEnAvant * supObject (void) const { return (elementOf_GGS_typeTableEnAvant *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeTableEnAvant mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of map '@M_nonterminalSymbolAlts'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_nonterminalSymbolAlts {
  public : GGS_L_EXsignature  mFormalParametersList ;

  public : e_M_nonterminalSymbolAlts (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonterminalSymbolAlts : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_nonterminalSymbolAlts (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_M_nonterminalSymbolAlts & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_M_nonterminalSymbolAlts * nextObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAlts *) mNextItem ; }
  public : inline elementOf_GGS_M_nonterminalSymbolAlts * infObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAlts *) mInfPtr ; }
  public : inline elementOf_GGS_M_nonterminalSymbolAlts * supObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAlts *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_nonterminalSymbolAlts mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_C_grammarForSemantics.h"

//---------------------------------------------------------------------------*

#include "include_AC_typeForGrammarComponent.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@M_typesForGrammarComponent'                *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_typesForGrammarComponent {
  public : GGS_AC_typeForGrammarComponent  mType ;

  public : e_M_typesForGrammarComponent (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_typesForGrammarComponent : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_typesForGrammarComponent (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_M_typesForGrammarComponent & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_M_typesForGrammarComponent * nextObject (void) const { return (elementOf_GGS_M_typesForGrammarComponent *) mNextItem ; }
  public : inline elementOf_GGS_M_typesForGrammarComponent * infObject (void) const { return (elementOf_GGS_M_typesForGrammarComponent *) mInfPtr ; }
  public : inline elementOf_GGS_M_typesForGrammarComponent * supObject (void) const { return (elementOf_GGS_M_typesForGrammarComponent *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_typesForGrammarComponent mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@L_grammarsMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_L_grammarsMap {
  public : GGS_M_nonterminalSymbolAlts  mStartSymbolParametersMap ;

  public : e_L_grammarsMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_L_grammarsMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_L_grammarsMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_L_grammarsMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_L_grammarsMap * nextObject (void) const { return (elementOf_GGS_L_grammarsMap *) mNextItem ; }
  public : inline elementOf_GGS_L_grammarsMap * infObject (void) const { return (elementOf_GGS_L_grammarsMap *) mInfPtr ; }
  public : inline elementOf_GGS_L_grammarsMap * supObject (void) const { return (elementOf_GGS_L_grammarsMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_L_grammarsMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of map '@typeClassInheritedMessagesMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeClassInheritedMessagesMap {

} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeClassInheritedMessagesMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeClassInheritedMessagesMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_typeClassInheritedMessagesMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_typeClassInheritedMessagesMap * nextObject (void) const { return (elementOf_GGS_typeClassInheritedMessagesMap *) mNextItem ; }
  public : inline elementOf_GGS_typeClassInheritedMessagesMap * infObject (void) const { return (elementOf_GGS_typeClassInheritedMessagesMap *) mInfPtr ; }
  public : inline elementOf_GGS_typeClassInheritedMessagesMap * supObject (void) const { return (elementOf_GGS_typeClassInheritedMessagesMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeClassInheritedMessagesMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@typeSemanticAttributesMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeSemanticAttributesMap {
  public : GGS_AC_galgasType  mAttributType ;
  public : GGS_bool mHasSetter ;
  public : GGS_bool mHasGetter ;

  public : e_typeSemanticAttributesMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeSemanticAttributesMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeSemanticAttributesMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_typeSemanticAttributesMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_typeSemanticAttributesMap * nextObject (void) const { return (elementOf_GGS_typeSemanticAttributesMap *) mNextItem ; }
  public : inline elementOf_GGS_typeSemanticAttributesMap * infObject (void) const { return (elementOf_GGS_typeSemanticAttributesMap *) mInfPtr ; }
  public : inline elementOf_GGS_typeSemanticAttributesMap * supObject (void) const { return (elementOf_GGS_typeSemanticAttributesMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeSemanticAttributesMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@insertOrSearchMethodList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_insertOrSearchMethodList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mMethodName ;
  public : GGS_string mErrorMessage ;
  public : GGS_bool mIsGetIndexMethod ;
  public : GGS_string mShadowErrorMessage ;
  public : GGS_uint  mStateOrActionIndex ;
//--- Constructor
  public : elementOf_GGS_insertOrSearchMethodList (const GGS_lstring & ,
                                const GGS_string& ,
                                const GGS_bool& ,
                                const GGS_string& ,
                                const GGS_uint & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_insertOrSearchMethodList * nextObject (void) const { return (elementOf_GGS_insertOrSearchMethodList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_insertOrSearchMethodList * previousObject (void) const { return (elementOf_GGS_insertOrSearchMethodList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_insertOrSearchMethodList ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeDefEntiteUtilisable.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedListType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasListType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasStructType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasListmapType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@domainRelationMap'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_domainRelationMap {
  public : GGS_stringlist  mDomains ;

  public : e_domainRelationMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_domainRelationMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_domainRelationMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_domainRelationMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_domainRelationMap * nextObject (void) const { return (elementOf_GGS_domainRelationMap *) mNextItem ; }
  public : inline elementOf_GGS_domainRelationMap * infObject (void) const { return (elementOf_GGS_domainRelationMap *) mInfPtr ; }
  public : inline elementOf_GGS_domainRelationMap * supObject (void) const { return (elementOf_GGS_domainRelationMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_domainRelationMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@domainModifierMap'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_domainModifierMap {
  public : GGS_L_EXsignature  mFormalParametersList ;

  public : e_domainModifierMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_domainModifierMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_domainModifierMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_domainModifierMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_domainModifierMap * nextObject (void) const { return (elementOf_GGS_domainModifierMap *) mNextItem ; }
  public : inline elementOf_GGS_domainModifierMap * infObject (void) const { return (elementOf_GGS_domainModifierMap *) mInfPtr ; }
  public : inline elementOf_GGS_domainModifierMap * supObject (void) const { return (elementOf_GGS_domainModifierMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_domainModifierMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@domainAttributeMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_domainAttributeMap {

} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_domainAttributeMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_domainAttributeMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_domainAttributeMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_domainAttributeMap * nextObject (void) const { return (elementOf_GGS_domainAttributeMap *) mNextItem ; }
  public : inline elementOf_GGS_domainAttributeMap * infObject (void) const { return (elementOf_GGS_domainAttributeMap *) mInfPtr ; }
  public : inline elementOf_GGS_domainAttributeMap * supObject (void) const { return (elementOf_GGS_domainAttributeMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_domainAttributeMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgasDomainType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedSortedListType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasSortedListType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of map '@typeTableBlocsDeTable'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeTableBlocsDeTable {
  public : GGS_L_EXsignature  aSignatureDebut ;
  public : GGS_L_EXsignature  aSignatureFin ;

  public : e_typeTableBlocsDeTable (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableBlocsDeTable : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeTableBlocsDeTable (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_typeTableBlocsDeTable & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_typeTableBlocsDeTable * nextObject (void) const { return (elementOf_GGS_typeTableBlocsDeTable *) mNextItem ; }
  public : inline elementOf_GGS_typeTableBlocsDeTable * infObject (void) const { return (elementOf_GGS_typeTableBlocsDeTable *) mInfPtr ; }
  public : inline elementOf_GGS_typeTableBlocsDeTable * supObject (void) const { return (elementOf_GGS_typeTableBlocsDeTable *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeTableBlocsDeTable mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedMapType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@mapModifierMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_mapModifierMap {
  public : GGS_L_EXsignature  mMethodSignature ;

  public : e_mapModifierMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_mapModifierMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_mapModifierMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_mapModifierMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_mapModifierMap * nextObject (void) const { return (elementOf_GGS_mapModifierMap *) mNextItem ; }
  public : inline elementOf_GGS_mapModifierMap * infObject (void) const { return (elementOf_GGS_mapModifierMap *) mInfPtr ; }
  public : inline elementOf_GGS_mapModifierMap * supObject (void) const { return (elementOf_GGS_mapModifierMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_mapModifierMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@EXmapMethodMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_EXmapMethodMap {
  public : GGS_L_EXsignature  mMethodSignature ;

  public : e_EXmapMethodMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_EXmapMethodMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_EXmapMethodMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_EXmapMethodMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_EXmapMethodMap * nextObject (void) const { return (elementOf_GGS_EXmapMethodMap *) mNextItem ; }
  public : inline elementOf_GGS_EXmapMethodMap * infObject (void) const { return (elementOf_GGS_EXmapMethodMap *) mInfPtr ; }
  public : inline elementOf_GGS_EXmapMethodMap * supObject (void) const { return (elementOf_GGS_EXmapMethodMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_EXmapMethodMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgasMapType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedMapindexType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasMapindexType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedClassType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@L_lazyAttributeList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_lazyAttributeList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_location  mLocationMagicNumber ;
  public : GGS_typeListeAttributsSemantiques  mComputedAttributeTypeAndNameList ;
  public : GGS_typeInstructionList  mInstructionList ;
//--- Constructor
  public : elementOf_GGS_L_lazyAttributeList (const GGS_location & ,
                                const GGS_typeListeAttributsSemantiques & ,
                                const GGS_typeInstructionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_lazyAttributeList * nextObject (void) const { return (elementOf_GGS_L_lazyAttributeList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_lazyAttributeList * previousObject (void) const { return (elementOf_GGS_L_lazyAttributeList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_L_lazyAttributeList ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgasClassType.h"

//---------------------------------------------------------------------------*

#include "include_typeEntiteRoutine.h"

//---------------------------------------------------------------------------*

#include "include_typeEntiteFonction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@typeEnumMessageMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeEnumMessageMap {
  public : GGS_lstringlist  mMessageStringList ;

  public : e_typeEnumMessageMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeEnumMessageMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeEnumMessageMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_typeEnumMessageMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_typeEnumMessageMap * nextObject (void) const { return (elementOf_GGS_typeEnumMessageMap *) mNextItem ; }
  public : inline elementOf_GGS_typeEnumMessageMap * infObject (void) const { return (elementOf_GGS_typeEnumMessageMap *) mInfPtr ; }
  public : inline elementOf_GGS_typeEnumMessageMap * supObject (void) const { return (elementOf_GGS_typeEnumMessageMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeEnumMessageMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgas_enum.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@M_cli_options'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_cli_options {
  public : GGS_lchar  mOptionChar ;
  public : GGS_lstring  mOptionString ;
  public : GGS_lstring  mComment ;

  public : e_M_cli_options (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_cli_options : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_cli_options (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_M_cli_options & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_M_cli_options * nextObject (void) const { return (elementOf_GGS_M_cli_options *) mNextItem ; }
  public : inline elementOf_GGS_M_cli_options * infObject (void) const { return (elementOf_GGS_M_cli_options *) mInfPtr ; }
  public : inline elementOf_GGS_M_cli_options * supObject (void) const { return (elementOf_GGS_M_cli_options *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_cli_options mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@M_optionComponents'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_optionComponents {
  public : GGS_M_cli_options  mBoolOptionsMap ;
  public : GGS_M_cli_options  mUintOptionsMap ;
  public : GGS_M_cli_options  mStringOptionsMap ;

  public : e_M_optionComponents (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_optionComponents : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_optionComponents (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_M_optionComponents & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_M_optionComponents * nextObject (void) const { return (elementOf_GGS_M_optionComponents *) mNextItem ; }
  public : inline elementOf_GGS_M_optionComponents * infObject (void) const { return (elementOf_GGS_M_optionComponents *) mInfPtr ; }
  public : inline elementOf_GGS_M_optionComponents * supObject (void) const { return (elementOf_GGS_M_optionComponents *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_optionComponents mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@M_grammarComponents'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_grammarComponents {
  public : GGS_nonterminalSymbolLabelMapForGrammarAnalysis  mNonterminalSymbolParametersMap ;
  public : GGS_lstring  mLexiqueName ;
  public : GGS_M_optionComponents  mOptionsMap ;

  public : e_M_grammarComponents (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_grammarComponents : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_grammarComponents (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_M_grammarComponents & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_M_grammarComponents * nextObject (void) const { return (elementOf_GGS_M_grammarComponents *) mNextItem ; }
  public : inline elementOf_GGS_M_grammarComponents * infObject (void) const { return (elementOf_GGS_M_grammarComponents *) mInfPtr ; }
  public : inline elementOf_GGS_M_grammarComponents * supObject (void) const { return (elementOf_GGS_M_grammarComponents *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_grammarComponents mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of map '@M_semanticsComponents'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_semanticsComponents {
  public : GGS_ModelMap  mModelMap ;
  public : GGS_ActionMap  mActionMap ;
  public : GGS_stringset  mImportedSemanticsComponents ;
  public : GGS_stringset  mImportedMetamodelComponents ;
  public : GGS_stringset  mImportedOptionsComponents ;
  public : GGS_M_optionComponents  mOptionsComponents ;
  public : GGS_M_semanticsEntitiesForUse  mSemanticsEntitiesMap ;

  public : e_M_semanticsComponents (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_semanticsComponents : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_semanticsComponents (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_M_semanticsComponents & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_M_semanticsComponents * nextObject (void) const { return (elementOf_GGS_M_semanticsComponents *) mNextItem ; }
  public : inline elementOf_GGS_M_semanticsComponents * infObject (void) const { return (elementOf_GGS_M_semanticsComponents *) mInfPtr ; }
  public : inline elementOf_GGS_M_semanticsComponents * supObject (void) const { return (elementOf_GGS_M_semanticsComponents *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_semanticsComponents mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@M_regularFilesEX'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_regularFilesEX {
  public : GGS_uint  mWrapperDirectoryIndex ;
  public : GGS_uint  mWrapperFileIndex ;

  public : e_M_regularFilesEX (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_regularFilesEX : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_regularFilesEX (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_M_regularFilesEX & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_M_regularFilesEX * nextObject (void) const { return (elementOf_GGS_M_regularFilesEX *) mNextItem ; }
  public : inline elementOf_GGS_M_regularFilesEX * infObject (void) const { return (elementOf_GGS_M_regularFilesEX *) mInfPtr ; }
  public : inline elementOf_GGS_M_regularFilesEX * supObject (void) const { return (elementOf_GGS_M_regularFilesEX *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_regularFilesEX mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of map '@filewrapperTemplateMapEX'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class e_filewrapperTemplateMapEX {
  public : GGS_typeListeAttributsSemantiques  mFormalAttributeList ;

  public : e_filewrapperTemplateMapEX (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_filewrapperTemplateMapEX : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_filewrapperTemplateMapEX (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_filewrapperTemplateMapEX & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_filewrapperTemplateMapEX * nextObject (void) const { return (elementOf_GGS_filewrapperTemplateMapEX *) mNextItem ; }
  public : inline elementOf_GGS_filewrapperTemplateMapEX * infObject (void) const { return (elementOf_GGS_filewrapperTemplateMapEX *) mInfPtr ; }
  public : inline elementOf_GGS_filewrapperTemplateMapEX * supObject (void) const { return (elementOf_GGS_filewrapperTemplateMapEX *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_filewrapperTemplateMapEX mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@M_filewrappersEX'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_filewrappersEX {
  public : GGS_M_regularFilesEX  mRegularFileMap ;
  public : GGS_filewrapperTemplateMapEX  mTemplateMap ;

  public : e_M_filewrappersEX (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_filewrappersEX : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_filewrappersEX (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_M_filewrappersEX & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_M_filewrappersEX * nextObject (void) const { return (elementOf_GGS_M_filewrappersEX *) mNextItem ; }
  public : inline elementOf_GGS_M_filewrappersEX * infObject (void) const { return (elementOf_GGS_M_filewrappersEX *) mInfPtr ; }
  public : inline elementOf_GGS_M_filewrappersEX * supObject (void) const { return (elementOf_GGS_M_filewrappersEX *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_filewrappersEX mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@labelForPopUpList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_labelForPopUpList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mTerminal1 ;
  public : GGS_uint  mTerminal1ID ;
  public : GGS_lstring  mTerminal2 ;
  public : GGS_uint  mTerminal2ID ;
//--- Constructor
  public : elementOf_GGS_labelForPopUpList (const GGS_lstring & ,
                                const GGS_uint & ,
                                const GGS_lstring & ,
                                const GGS_uint & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_labelForPopUpList * nextObject (void) const { return (elementOf_GGS_labelForPopUpList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_labelForPopUpList * previousObject (void) const { return (elementOf_GGS_labelForPopUpList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_labelForPopUpList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@EXtextMacroList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_EXtextMacroList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mKey ;
  public : GGS_lstring  mContents ;
//--- Constructor
  public : elementOf_GGS_EXtextMacroList (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_EXtextMacroList * nextObject (void) const { return (elementOf_GGS_EXtextMacroList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_EXtextMacroList * previousObject (void) const { return (elementOf_GGS_EXtextMacroList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_EXtextMacroList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@EXreaderMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class e_EXreaderMap {
  public : GGS_typeListeAttributsSemantiques  mAccessorTypesList ;
  public : GGS_AC_galgasType  mReturnedType ;
  public : GGS_bool mHasLexiqueAndLocationArguments ;

  public : e_EXreaderMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_EXreaderMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_EXreaderMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_EXreaderMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_EXreaderMap * nextObject (void) const { return (elementOf_GGS_EXreaderMap *) mNextItem ; }
  public : inline elementOf_GGS_EXreaderMap * infObject (void) const { return (elementOf_GGS_EXreaderMap *) mInfPtr ; }
  public : inline elementOf_GGS_EXreaderMap * supObject (void) const { return (elementOf_GGS_EXreaderMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_EXreaderMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgas_application.h"

//---------------------------------------------------------------------------*

#include "include_templateInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@templateInstructionList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_templateInstructionList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_templateInstruction  mInstruction ;
//--- Constructor
  public : elementOf_GGS_templateInstructionList (const GGS_templateInstruction & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_templateInstructionList * nextObject (void) const { return (elementOf_GGS_templateInstructionList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_templateInstructionList * previousObject (void) const { return (elementOf_GGS_templateInstructionList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_templateInstructionList ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeExpression.h"

//---------------------------------------------------------------------------*

#include "include_templateInstructionString.h"

//---------------------------------------------------------------------------*

#include "include_templateInstructionExpression.h"

//---------------------------------------------------------------------------*

#include "include_templateBlockInstruction.h"

//---------------------------------------------------------------------------*

#include "include_templateInstructionGetColumnLocation.h"

//---------------------------------------------------------------------------*

#include "include_templateInstructionGotoColumnLocation.h"

//---------------------------------------------------------------------------*

#include "include_templateInstructionForeach.h"

//---------------------------------------------------------------------------*
//                                                                           *
//            Element of list '@templateInstructionIfBranchList'             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_templateInstructionIfBranchList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_typeExpression  mExpression ;
  public : GGS_templateInstructionList  mInstructionList ;
//--- Constructor
  public : elementOf_GGS_templateInstructionIfBranchList (const GGS_typeExpression & ,
                                const GGS_templateInstructionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_templateInstructionIfBranchList * nextObject (void) const { return (elementOf_GGS_templateInstructionIfBranchList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_templateInstructionIfBranchList * previousObject (void) const { return (elementOf_GGS_templateInstructionIfBranchList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_templateInstructionIfBranchList ;
} ;

//---------------------------------------------------------------------------*

#include "include_templateInstructionIf.h"

//---------------------------------------------------------------------------*
//                                                                           *
//          Element of list '@templateInstructionSwitchBranchList'           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_templateInstructionSwitchBranchList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstringlist  mConstantList ;
  public : GGS_templateInstructionList  mInstructionList ;
//--- Constructor
  public : elementOf_GGS_templateInstructionSwitchBranchList (const GGS_lstringlist & ,
                                const GGS_templateInstructionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_templateInstructionSwitchBranchList * nextObject (void) const { return (elementOf_GGS_templateInstructionSwitchBranchList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_templateInstructionSwitchBranchList * previousObject (void) const { return (elementOf_GGS_templateInstructionSwitchBranchList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_templateInstructionSwitchBranchList ;
} ;

//---------------------------------------------------------------------------*

#include "include_templateInstructionSwitch.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               Declarations for 'EXsemanticContext' struct                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_EXsemanticContext ;

//---------------------------------------------------------------------------*

class GGS_EXsemanticContext : public GGS__root {
//--- Default constructor
  public : GGS_EXsemanticContext (void) ;

//--- Virtual destructor
  public : virtual ~GGS_EXsemanticContext (void) ;

//--- Handle 'drop' instruction
  public : void drop (void) ;

//--- Method 'isBuilt'
  public : bool isBuilt (void) const ;

//--- Support for method call handling in GALGAS
  public : inline const GGS_EXsemanticContext * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
  public : inline GGS_EXsemanticContext * operator () (UNUSED_LOCATION_ARGS) { return this ; }

//--- Comparison
  public : GGS_bool operator_isEqual (const GGS_EXsemanticContext & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_EXsemanticContext & inOperand) const ;

//--- Reader 'description'
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_EXsemanticContext castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Galgas 'new' destructor
  public : static GGS_EXsemanticContext constructor_new (const GGS_M_filewrappersEX & argument_0,
                 const GGS_stringset & argument_1,
                 const GGS_EXcategoryMethodMap & argument_2,
                 const GGS_EXcategoryReaderMap & argument_3,
                 const GGS_EXcategoryTemplateMap & argument_4) ;

//--- Readers
  public : inline GGS_M_filewrappersEX 
  reader_mFilewrappers (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mFilewrappers ;
  }

  public : inline GGS_stringset 
  reader_mImportedSemanticComponents (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mImportedSemanticComponents ;
  }

  public : inline GGS_EXcategoryMethodMap 
  reader_mCategoryMethodMap (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mCategoryMethodMap ;
  }

  public : inline GGS_EXcategoryReaderMap 
  reader_mCategoryReaderMap (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mCategoryReaderMap ;
  }

  public : inline GGS_EXcategoryTemplateMap 
  reader_mCategoryTemplateMap (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mCategoryTemplateMap ;
  }

//--- Attributes
  public : GGS_M_filewrappersEX  mFilewrappers ;
  public : GGS_stringset  mImportedSemanticComponents ;
  public : GGS_EXcategoryMethodMap  mCategoryMethodMap ;
  public : GGS_EXcategoryReaderMap  mCategoryReaderMap ;
  public : GGS_EXcategoryTemplateMap  mCategoryTemplateMap ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@M_syntaxComponents'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_syntaxComponents {
  public : GGS_nonTerminalSymbolMapForGrammarAnalysis  mNonterminalSymbolsMap ;
  public : GGS_productionRuleListForGrammarAnalysis  mProductionRulesList ;
  public : GGS_lstring  mLexiqueComponentName ;

  public : e_M_syntaxComponents (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_syntaxComponents : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_syntaxComponents (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_M_syntaxComponents & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_M_syntaxComponents * nextObject (void) const { return (elementOf_GGS_M_syntaxComponents *) mNextItem ; }
  public : inline elementOf_GGS_M_syntaxComponents * infObject (void) const { return (elementOf_GGS_M_syntaxComponents *) mInfPtr ; }
  public : inline elementOf_GGS_M_syntaxComponents * supObject (void) const { return (elementOf_GGS_M_syntaxComponents *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_syntaxComponents mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

#endif
