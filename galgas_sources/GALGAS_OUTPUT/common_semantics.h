//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'common_semantics.h'                          *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                     october 14th, 2006, at 18h18'14"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef common_semantics_DEFINED
#define common_semantics_DEFINED

#include <string.h>

#include "galgas/C_GGS_Object.h"
#include "galgas/AC_galgas_io.h"
#include "galgas/GGS_location.h"
#include "galgas/GGS_lbool.h"
#include "galgas/GGS_lchar.h"
#include "galgas/GGS_lstring.h"
#include "galgas/GGS_ldouble.h"
#include "galgas/GGS_luint.h"
#include "galgas/GGS_lsint.h"
#include "galgas/GGS_luint64.h"
#include "galgas/GGS_lsint64.h"
#include "galgas/GGS_stringset.h"
#include "galgas/AC_galgas_map.h"
#include "galgas/C_Lexique.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_L_lstringList ;
class GGS_actualParametersPassingMode ;
class GGS_formalArgumentPassingMode ;
class GGS_L_signature ;
class GGS_typeListModel ;
class GGS_TypeModel ;
class cPtr_TypeModel ;
class GGS_BoolModel ;
class cPtr_BoolModel ;
class GGS_CharModel ;
class cPtr_CharModel ;
class GGS_UIntModel ;
class cPtr_UIntModel ;
class GGS_SIntModel ;
class cPtr_SIntModel ;
class GGS_UInt64Model ;
class cPtr_UInt64Model ;
class GGS_SInt64Model ;
class cPtr_SInt64Model ;
class GGS_DoubleModel ;
class cPtr_DoubleModel ;
class GGS_StringModel ;
class cPtr_StringModel ;
class GGS_LBoolModel ;
class cPtr_LBoolModel ;
class GGS_LCharModel ;
class cPtr_LCharModel ;
class GGS_LUIntModel ;
class cPtr_LUIntModel ;
class GGS_LSIntModel ;
class cPtr_LSIntModel ;
class GGS_LUInt64Model ;
class cPtr_LUInt64Model ;
class GGS_LSInt64Model ;
class cPtr_LSInt64Model ;
class GGS_LDoubleModel ;
class cPtr_LDoubleModel ;
class GGS_LStringModel ;
class cPtr_LStringModel ;
class GGS_StringsetModel ;
class cPtr_StringsetModel ;
class GGS_LocationModel ;
class cPtr_LocationModel ;
class GGS_ListModel ;
class cPtr_ListModel ;
class GGS_MapModel ;
class cPtr_MapModel ;
class GGS_enumConstantMap ;
class GGS_enumMessageMap ;
class GGS_EnumModel ;
class cPtr_EnumModel ;
class GGS_constructorMap ;
class GGS_readerMap ;
class GGS_modifierMap ;
class GGS_ExternTypeModel ;
class cPtr_ExternTypeModel ;
class GGS_classMessageMap ;
class GGS_ClassModel ;
class cPtr_ClassModel ;
class GGS_ModelMap ;
class GGS_ActionMap ;
class GGS_localConstantBuildStyleEnum ;
class GGS_AC_galgasType ;
class cPtr_AC_galgasType ;
class GGS_metamodelPropertyKind ;
class GGS_L_propertyPath ;
class GGS_L_ListOfPropertyPathes ;
class GGS_entityPropertyMap ;
class GGS_contextPropertyMap ;
class GGS_contextParameterMap ;
class GGS_mapPropertyMap ;
class GGS_insertionMap ;
class GGS_relationVarMap ;
class GGS_metamodelRelationExpression ;
class cPtr_metamodelRelationExpression ;
class GGS_metamodelRelationAnd ;
class cPtr_metamodelRelationAnd ;
class GGS_metamodelRelationOr ;
class cPtr_metamodelRelationOr ;
class GGS_metamodelRelationNot ;
class cPtr_metamodelRelationNot ;
class GGS_metamodelRelationTrue ;
class cPtr_metamodelRelationTrue ;
class GGS_metamodelRelationFalse ;
class cPtr_metamodelRelationFalse ;
class GGS_metamodelRelationPrimary ;
class cPtr_metamodelRelationPrimary ;
class GGS_metamodelRelationParameterList ;
class GGS_metamodelRelationDo ;
class cPtr_metamodelRelationDo ;
class GGS_relationMap ;
class GGS_mapEntityMap ;
class GGS_mapAndEntityUniqueMap ;
class GGS_entityToImplementMap ;
class GGS_typeGalgas_singleEntity ;
class cPtr_typeGalgas_singleEntity ;
class GGS_typeGalgas_multipleEntity ;
class cPtr_typeGalgas_multipleEntity ;
class GGS_typeListeAttributsSemantiques ;
class GGS_typeTypesList ;
class GGS_L_EXsignature ;
class GGS_L_actualParametersSignature ;
class GGS_M_accessors_map ;
class GGS_L_stringList ;
class GGS_typeGalgas_jokerInParameterList ;
class cPtr_typeGalgas_jokerInParameterList ;
class GGS_typeGalgas_bool ;
class cPtr_typeGalgas_bool ;
class GGS_typeGalgas_string ;
class cPtr_typeGalgas_string ;
class GGS_typeGalgas_sint ;
class cPtr_typeGalgas_sint ;
class GGS_typeGalgas_sint64 ;
class cPtr_typeGalgas_sint64 ;
class GGS_typeGalgas_uint ;
class cPtr_typeGalgas_uint ;
class GGS_typeGalgas_uint64 ;
class cPtr_typeGalgas_uint64 ;
class GGS_typeGalgas_char ;
class cPtr_typeGalgas_char ;
class GGS_typeGalgas_double ;
class cPtr_typeGalgas_double ;
class GGS_C_galgasPrimitiveType ;
class cPtr_C_galgasPrimitiveType ;
class GGS_typeGalgas_location ;
class cPtr_typeGalgas_location ;
class GGS_typeGalgas_lstring ;
class cPtr_typeGalgas_lstring ;
class GGS_typeGalgas_lchar ;
class cPtr_typeGalgas_lchar ;
class GGS_typeGalgas_lbool ;
class cPtr_typeGalgas_lbool ;
class GGS_typeGalgas_luint ;
class cPtr_typeGalgas_luint ;
class GGS_typeGalgas_luint64 ;
class cPtr_typeGalgas_luint64 ;
class GGS_typeGalgas_lsint ;
class cPtr_typeGalgas_lsint ;
class GGS_typeGalgas_lsint64 ;
class cPtr_typeGalgas_lsint64 ;
class GGS_typeGalgas_ldouble ;
class cPtr_typeGalgas_ldouble ;
class GGS_typeGalgas_stringset ;
class cPtr_typeGalgas_stringset ;
class GGS_typeTableMethodes ;
class GGS_typeGalgasUndefinedExternType ;
class cPtr_typeGalgasUndefinedExternType ;
class GGS_M_externTypeConstructorMap ;
class GGS_typeGalgasExternType ;
class cPtr_typeGalgasExternType ;
class GGS_M_terminalSymbolsMapForUse ;
class GGS_M_lexiqueComponents ;
class GGS_typeTableEnAvant ;
class GGS_M_nonterminalSymbolAlts ;
class GGS_AC_semanticsEntity ;
class cPtr_AC_semanticsEntity ;
class GGS_C_grammarForSemantics ;
class cPtr_C_grammarForSemantics ;
class GGS_M_semanticsEntitiesForUse ;
class GGS_AC_typeForGrammarComponent ;
class cPtr_AC_typeForGrammarComponent ;
class GGS_M_typesForGrammarComponent ;
class GGS_AC_instruction_ForGrammar ;
class cPtr_AC_instruction_ForGrammar ;
class GGS_L_ruleSyntaxSignature ;
class GGS_L_grammarsMap ;
class GGS_M_nonterminalSymbolAltsForGrammar ;
class GGS_L_productionRules_ForGrammarComponent ;
class GGS_M_nonTerminalSymbolsForGrammar ;
class GGS_M_syntaxComponents ;
class GGS_T_terminalInstruction_forGrammarComponent ;
class cPtr_T_terminalInstruction_forGrammarComponent ;
class GGS_T_nonterminalInstruction_forGrammarComponent ;
class cPtr_T_nonterminalInstruction_forGrammarComponent ;
class GGS_L_branchList_ForGrammarComponent ;
class GGS_T_selectInstruction_forGrammarComponent ;
class cPtr_T_selectInstruction_forGrammarComponent ;
class GGS_T_repeatInstruction_forGrammarComponent ;
class cPtr_T_repeatInstruction_forGrammarComponent ;
class GGS_L_syntaxComponents_ForGrammar ;
class GGS_M_startSymbolEntityAndMetamodel ;
class GGS_L_identifiers ;
class GGS_typeSuperClassesMap ;
class GGS_typeClassInheritedMessagesMap ;
class GGS_typeSemanticAttributesMap ;
class GGS_insertOrSearchMethodList ;
class GGS_typeDefEntiteUtilisable ;
class cPtr_typeDefEntiteUtilisable ;
class GGS_typeGalgasUndefinedListType ;
class cPtr_typeGalgasUndefinedListType ;
class GGS_typeGalgasListType ;
class cPtr_typeGalgasListType ;
class GGS_typeTableBlocsDeTable ;
class GGS_typeGalgasUndefinedMapType ;
class cPtr_typeGalgasUndefinedMapType ;
class GGS_mapMethodMap ;
class GGS_typeGalgasMapType ;
class cPtr_typeGalgasMapType ;
class GGS_typeGalgasUndefinedClassType ;
class cPtr_typeGalgasUndefinedClassType ;
class GGS_typeGalgasNewClassType ;
class cPtr_typeGalgasNewClassType ;
class GGS_typeGalgasClassType ;
class cPtr_typeGalgasClassType ;
class GGS_typeEntiteType ;
class cPtr_typeEntiteType ;
class GGS_typeEntiteRoutine ;
class cPtr_typeEntiteRoutine ;
class GGS_typeGalgas_entityInInstruction ;
class cPtr_typeGalgas_entityInInstruction ;
class GGS_typeGalgas_mapIndexInInstruction ;
class cPtr_typeGalgas_mapIndexInInstruction ;
class GGS_typeGalgas_mapEntityInInstruction ;
class cPtr_typeGalgas_mapEntityInInstruction ;
class GGS_typeEnumMessageMap ;
class GGS_typeGalgas_enum ;
class cPtr_typeGalgas_enum ;
class GGS_M_cli_options ;
class GGS_M_optionComponents ;
class GGS_M_grammarComponents ;
class GGS_M_semanticsComponents ;
class GGS_M_metamodelsComponents ;
class GGS_M_constraintComponents ;
class GGS_typeListeAttributsAxiome ;
class GGS_L_grammarDescriptorForProgram ;
class GGS_L_nibAndClassList ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@L_lstringList'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_lstringList ;

class GGS_L_lstringList {
  public : typedef elementOf_GGS_L_lstringList element_type ;
//--- Embedded class for list root
  protected : class cRootList {
    public : element_type * mFirstItem ;
    public : element_type * mLastItem ;
    public : sint32 mListLength ;
    public : sint32 mCountReference ;
  //--- Default constructor
    public : cRootList (void) ;
  //--- Destructor
    public : ~cRootList (void) ;
  //--- No Copy
    private : cRootList (const cRootList &) ;
    private : void operator = (const cRootList &) ;
  } ;
//--- Private attribute
  private : cRootList * _mRoot ;
//--- Default Constructor
  public : GGS_L_lstringList (void) ;
//--- Copy Constructor
  public : GGS_L_lstringList (const GGS_L_lstringList & inSource) ;
//--- Assignment Operator
  public : void operator = (const GGS_L_lstringList & inSource) ;
//--- Destructor
  public : ~GGS_L_lstringList (void) ;

//--- Constructor 'emptyList'
  public : static GGS_L_lstringList constructor_emptyList (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Function 'count'
  public : sint32 count (void) const ;
//--- Reader 'description'
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- Get first object
  public : element_type * firstObject (void) const ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0) ;
//--- Internal Methods
  protected : void _internalAppendItem (const GGS_lstring & argument_0) ;
  protected : void _insulateList (void) ;
//--- '_isBuilt' method
  public : inline bool _isBuilt (void) const {
    return _mRoot != NULL ;
  }
//--- Handling GALGAS 'drop' instruction
  public : void _drop_operation (void) ;
//--- Handling GALGAS 'length' reader
  public : GGS_uint reader_length (C_Lexique & /* inLexique */
                                   COMMA_UNUSED_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Class for 'actualParametersPassingMode' Enumeration             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_actualParametersPassingMode {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_parameterOut, enum_parameterOutIn, enum_parameterIn} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const {return mValue ; }

//--- Default constructor
  public : inline GGS_actualParametersPassingMode (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_actualParametersPassingMode (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline uint16 bitCount (void) { return 2 ; }

//--- Is built ?
  public : inline bool _isBuilt (void) const { return mValue > kNotBuilt ; }

//--- Construction from GALGAS constructor
  public : static inline GGS_actualParametersPassingMode constructor_parameterOut (C_Lexique & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_actualParametersPassingMode (enum_parameterOut) ;
  }
  public : static inline GGS_actualParametersPassingMode constructor_parameterOutIn (C_Lexique & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_actualParametersPassingMode (enum_parameterOutIn) ;
  }
  public : static inline GGS_actualParametersPassingMode constructor_parameterIn (C_Lexique & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_actualParametersPassingMode (enum_parameterIn) ;
  }

//--- Messages
  public : GGS_string reader_actualArgumentMessage (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;

//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;

//--- Drop operation
  public : inline void _drop_operation (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool operator == (const GGS_actualParametersPassingMode inOperand) const ;
  public : GGS_bool operator != (const GGS_actualParametersPassingMode inOperand) const ;
  public : GGS_bool operator <= (const GGS_actualParametersPassingMode inOperand) const ;
  public : GGS_bool operator >= (const GGS_actualParametersPassingMode inOperand) const ;
  public : GGS_bool operator <  (const GGS_actualParametersPassingMode inOperand) const ;
  public : GGS_bool operator >  (const GGS_actualParametersPassingMode inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Class for 'formalArgumentPassingMode' Enumeration              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_formalArgumentPassingMode {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_argumentIn, enum_argumentOut, enum_argumentInOut, enum_argumentConstantIn} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const {return mValue ; }

//--- Default constructor
  public : inline GGS_formalArgumentPassingMode (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_formalArgumentPassingMode (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline uint16 bitCount (void) { return 3 ; }

//--- Is built ?
  public : inline bool _isBuilt (void) const { return mValue > kNotBuilt ; }

//--- Construction from GALGAS constructor
  public : static inline GGS_formalArgumentPassingMode constructor_argumentIn (C_Lexique & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_formalArgumentPassingMode (enum_argumentIn) ;
  }
  public : static inline GGS_formalArgumentPassingMode constructor_argumentOut (C_Lexique & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_formalArgumentPassingMode (enum_argumentOut) ;
  }
  public : static inline GGS_formalArgumentPassingMode constructor_argumentInOut (C_Lexique & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_formalArgumentPassingMode (enum_argumentInOut) ;
  }
  public : static inline GGS_formalArgumentPassingMode constructor_argumentConstantIn (C_Lexique & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_formalArgumentPassingMode (enum_argumentConstantIn) ;
  }

//--- Messages
  public : GGS_string reader_formalArgumentMessage (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;

//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;

//--- Drop operation
  public : inline void _drop_operation (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool operator == (const GGS_formalArgumentPassingMode inOperand) const ;
  public : GGS_bool operator != (const GGS_formalArgumentPassingMode inOperand) const ;
  public : GGS_bool operator <= (const GGS_formalArgumentPassingMode inOperand) const ;
  public : GGS_bool operator >= (const GGS_formalArgumentPassingMode inOperand) const ;
  public : GGS_bool operator <  (const GGS_formalArgumentPassingMode inOperand) const ;
  public : GGS_bool operator >  (const GGS_formalArgumentPassingMode inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           list '@L_signature'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_signature ;

class GGS_L_signature {
  public : typedef elementOf_GGS_L_signature element_type ;
//--- Embedded class for list root
  protected : class cRootList {
    public : element_type * mFirstItem ;
    public : element_type * mLastItem ;
    public : sint32 mListLength ;
    public : sint32 mCountReference ;
  //--- Default constructor
    public : cRootList (void) ;
  //--- Destructor
    public : ~cRootList (void) ;
  //--- No Copy
    private : cRootList (const cRootList &) ;
    private : void operator = (const cRootList &) ;
  } ;
//--- Private attribute
  private : cRootList * _mRoot ;
//--- Default Constructor
  public : GGS_L_signature (void) ;
//--- Copy Constructor
  public : GGS_L_signature (const GGS_L_signature & inSource) ;
//--- Assignment Operator
  public : void operator = (const GGS_L_signature & inSource) ;
//--- Destructor
  public : ~GGS_L_signature (void) ;

//--- Constructor 'emptyList'
  public : static GGS_L_signature constructor_emptyList (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Function 'count'
  public : sint32 count (void) const ;
//--- Reader 'description'
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- Get first object
  public : element_type * firstObject (void) const ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_formalArgumentPassingMode& argument_0,
                                const GGS_lstring & argument_1) ;
//--- Internal Methods
  protected : void _internalAppendItem (const GGS_formalArgumentPassingMode& argument_0,
                                const GGS_lstring & argument_1) ;
  protected : void _insulateList (void) ;
//--- '_isBuilt' method
  public : inline bool _isBuilt (void) const {
    return _mRoot != NULL ;
  }
//--- Handling GALGAS 'drop' instruction
  public : void _drop_operation (void) ;
//--- Handling GALGAS 'length' reader
  public : GGS_uint reader_length (C_Lexique & /* inLexique */
                                   COMMA_UNUSED_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@typeListModel'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListModel ;

class GGS_typeListModel {
  public : typedef elementOf_GGS_typeListModel element_type ;
//--- Embedded class for list root
  protected : class cRootList {
    public : element_type * mFirstItem ;
    public : element_type * mLastItem ;
    public : sint32 mListLength ;
    public : sint32 mCountReference ;
  //--- Default constructor
    public : cRootList (void) ;
  //--- Destructor
    public : ~cRootList (void) ;
  //--- No Copy
    private : cRootList (const cRootList &) ;
    private : void operator = (const cRootList &) ;
  } ;
//--- Private attribute
  private : cRootList * _mRoot ;
//--- Default Constructor
  public : GGS_typeListModel (void) ;
//--- Copy Constructor
  public : GGS_typeListModel (const GGS_typeListModel & inSource) ;
//--- Assignment Operator
  public : void operator = (const GGS_typeListModel & inSource) ;
//--- Destructor
  public : ~GGS_typeListModel (void) ;

//--- Constructor 'emptyList'
  public : static GGS_typeListModel constructor_emptyList (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Function 'count'
  public : sint32 count (void) const ;
//--- Reader 'description'
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- Get first object
  public : element_type * firstObject (void) const ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0) ;
//--- Internal Methods
  protected : void _internalAppendItem (const GGS_lstring & argument_0) ;
  protected : void _insulateList (void) ;
//--- '_isBuilt' method
  public : inline bool _isBuilt (void) const {
    return _mRoot != NULL ;
  }
//--- Handling GALGAS 'drop' instruction
  public : void _drop_operation (void) ;
//--- Handling GALGAS 'length' reader
  public : GGS_uint reader_length (C_Lexique & /* inLexique */
                                   COMMA_UNUSED_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_TypeModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_TypeModel {
//--- Pointer to actual instance
  protected : cPtr_TypeModel * mPointer ;
//--- Default constructor
  public : GGS_TypeModel (void) ;
//--- Copy constructor
  public : GGS_TypeModel (const GGS_TypeModel &) ;
//--- Virtual destructor
  public : virtual ~GGS_TypeModel (void) ;
//--- Assignment operator
  public : void operator = (const GGS_TypeModel &) ;
//--- _isBuilt
  public : inline bool _isBuilt (void) const { return mPointer != NULL ; }
//--- isEqualTo
  public : inline bool isEqualTo (const GGS_TypeModel & _inOperand) const {
    return mPointer == _inOperand.mPointer ;
  }
//--- getPtr
  public : inline cPtr_TypeModel * getPtr (void) const {
    return mPointer ;
  }
//--- drop
  public : void _drop_operation (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_TypeModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_TypeModel * operator () (LOCATION_ARGS) const {
      return mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_BoolModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_BoolModel : public GGS_TypeModel {
//--- Default Constructor
  public : GGS_BoolModel (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_BoolModel constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_BoolModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_BoolModel * operator () (LOCATION_ARGS) const {
      return (cPtr_BoolModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_CharModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_CharModel : public GGS_TypeModel {
//--- Default Constructor
  public : GGS_CharModel (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_CharModel constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_CharModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_CharModel * operator () (LOCATION_ARGS) const {
      return (cPtr_CharModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_UIntModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_UIntModel : public GGS_TypeModel {
//--- Default Constructor
  public : GGS_UIntModel (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_UIntModel constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_UIntModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_UIntModel * operator () (LOCATION_ARGS) const {
      return (cPtr_UIntModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_SIntModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_SIntModel : public GGS_TypeModel {
//--- Default Constructor
  public : GGS_SIntModel (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_SIntModel constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_SIntModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_SIntModel * operator () (LOCATION_ARGS) const {
      return (cPtr_SIntModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_UInt64Model'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_UInt64Model : public GGS_TypeModel {
//--- Default Constructor
  public : GGS_UInt64Model (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_UInt64Model constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_UInt64Model * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_UInt64Model * operator () (LOCATION_ARGS) const {
      return (cPtr_UInt64Model *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_SInt64Model'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_SInt64Model : public GGS_TypeModel {
//--- Default Constructor
  public : GGS_SInt64Model (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_SInt64Model constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_SInt64Model * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_SInt64Model * operator () (LOCATION_ARGS) const {
      return (cPtr_SInt64Model *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_DoubleModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_DoubleModel : public GGS_TypeModel {
//--- Default Constructor
  public : GGS_DoubleModel (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_DoubleModel constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_DoubleModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_DoubleModel * operator () (LOCATION_ARGS) const {
      return (cPtr_DoubleModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_StringModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_StringModel : public GGS_TypeModel {
//--- Default Constructor
  public : GGS_StringModel (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_StringModel constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_StringModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_StringModel * operator () (LOCATION_ARGS) const {
      return (cPtr_StringModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_LBoolModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LBoolModel : public GGS_TypeModel {
//--- Default Constructor
  public : GGS_LBoolModel (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_LBoolModel constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LBoolModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LBoolModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LBoolModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_LCharModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LCharModel : public GGS_TypeModel {
//--- Default Constructor
  public : GGS_LCharModel (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_LCharModel constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LCharModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LCharModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LCharModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_LUIntModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LUIntModel : public GGS_TypeModel {
//--- Default Constructor
  public : GGS_LUIntModel (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_LUIntModel constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LUIntModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LUIntModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LUIntModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_LSIntModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LSIntModel : public GGS_TypeModel {
//--- Default Constructor
  public : GGS_LSIntModel (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_LSIntModel constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LSIntModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LSIntModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LSIntModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_LUInt64Model'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LUInt64Model : public GGS_TypeModel {
//--- Default Constructor
  public : GGS_LUInt64Model (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_LUInt64Model constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LUInt64Model * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LUInt64Model * operator () (LOCATION_ARGS) const {
      return (cPtr_LUInt64Model *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_LSInt64Model'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LSInt64Model : public GGS_TypeModel {
//--- Default Constructor
  public : GGS_LSInt64Model (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_LSInt64Model constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LSInt64Model * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LSInt64Model * operator () (LOCATION_ARGS) const {
      return (cPtr_LSInt64Model *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_LDoubleModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LDoubleModel : public GGS_TypeModel {
//--- Default Constructor
  public : GGS_LDoubleModel (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_LDoubleModel constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LDoubleModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LDoubleModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LDoubleModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_LStringModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LStringModel : public GGS_TypeModel {
//--- Default Constructor
  public : GGS_LStringModel (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_LStringModel constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LStringModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LStringModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LStringModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_StringsetModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_StringsetModel : public GGS_TypeModel {
//--- Default Constructor
  public : GGS_StringsetModel (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_StringsetModel constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_StringsetModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_StringsetModel * operator () (LOCATION_ARGS) const {
      return (cPtr_StringsetModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_LocationModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LocationModel : public GGS_TypeModel {
//--- Default Constructor
  public : GGS_LocationModel (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_LocationModel constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LocationModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LocationModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LocationModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_ListModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_ListModel : public GGS_TypeModel {
//--- Default Constructor
  public : GGS_ListModel (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_ListModel constructor_new (C_Lexique & inLexique,
                                const GGS_typeListModel & argument_0 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_ListModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_ListModel * operator () (LOCATION_ARGS) const {
      return (cPtr_ListModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_MapModel'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_MapModel : public GGS_TypeModel {
//--- Default Constructor
  public : GGS_MapModel (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_MapModel constructor_new (C_Lexique & inLexique,
                                const GGS_typeListModel & argument_0 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_MapModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_MapModel * operator () (LOCATION_ARGS) const {
      return (cPtr_MapModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@enumConstantMap'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumConstantMap ;

class GGS_enumConstantMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_enumConstantMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_enumConstantMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_enumConstantMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_enumConstantMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_enumConstantMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_enumConstantMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_enumConstantMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@enumMessageMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumMessageMap ;

class GGS_enumMessageMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_enumMessageMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_enumMessageMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_enumMessageMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_enumMessageMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_enumMessageMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_enumMessageMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_enumMessageMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_EnumModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_EnumModel : public GGS_TypeModel {
//--- Default Constructor
  public : GGS_EnumModel (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_EnumModel constructor_new (C_Lexique & inLexique,
                                const GGS_enumConstantMap & argument_0,
                                const GGS_enumMessageMap & argument_1 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_EnumModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_EnumModel * operator () (LOCATION_ARGS) const {
      return (cPtr_EnumModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@constructorMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_constructorMap ;

class GGS_constructorMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_constructorMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_constructorMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_constructorMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_constructorMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_typeListModel &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_typeListModel   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_typeListModel & inParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_typeListModel & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_constructorMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_constructorMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_constructorMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                             Map '@readerMap'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_readerMap ;

class GGS_readerMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_readerMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_readerMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_readerMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_readerMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_signature &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_signature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_L_signature & inParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_L_signature & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_readerMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_readerMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_readerMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Map '@modifierMap'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_modifierMap ;

class GGS_modifierMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_modifierMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_modifierMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_modifierMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_modifierMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_signature &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_signature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_L_signature & inParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_L_signature & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_modifierMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_modifierMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_modifierMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_ExternTypeModel'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_ExternTypeModel : public GGS_TypeModel {
//--- Default Constructor
  public : GGS_ExternTypeModel (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_ExternTypeModel constructor_new (C_Lexique & inLexique,
                                const GGS_constructorMap & argument_0,
                                const GGS_readerMap & argument_1,
                                const GGS_modifierMap & argument_2,
                                const GGS_typeListModel & argument_3 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_ExternTypeModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_ExternTypeModel * operator () (LOCATION_ARGS) const {
      return (cPtr_ExternTypeModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@classMessageMap'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_classMessageMap ;

class GGS_classMessageMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_classMessageMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_classMessageMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_classMessageMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_classMessageMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_classMessageMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_classMessageMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_classMessageMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_ClassModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_ClassModel : public GGS_TypeModel {
//--- Default Constructor
  public : GGS_ClassModel (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_ClassModel constructor_new (C_Lexique & inLexique,
                                const GGS_bool& argument_0,
                                const GGS_stringset & argument_1,
                                const GGS_typeListModel & argument_2,
                                const GGS_classMessageMap & argument_3 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_ClassModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_ClassModel * operator () (LOCATION_ARGS) const {
      return (cPtr_ClassModel *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                             Map '@ModelMap'                               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ModelMap ;

class GGS_ModelMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_ModelMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_ModelMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_ModelMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_ModelMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_TypeModel &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_TypeModel   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_TypeModel & inParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_TypeModel & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_ModelMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_ModelMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_ModelMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                             Map '@ActionMap'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ActionMap ;

class GGS_ActionMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_ActionMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_ActionMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_ActionMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_ActionMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_signature &  inParameter0,
                                const GGS_bool&  inParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_signature   & outParameter0,
                                GGS_bool  & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_L_signature & inParameter0,
                                  const GGS_bool& inParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_L_signature & outParameter0,
                                  GGS_bool& outParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_ActionMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_ActionMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_ActionMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Class for 'localConstantBuildStyleEnum' Enumeration             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_localConstantBuildStyleEnum {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_listStyle, enum_mapStyle, enum_firstIsKeyOtherMapStyle} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const {return mValue ; }

//--- Default constructor
  public : inline GGS_localConstantBuildStyleEnum (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_localConstantBuildStyleEnum (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline uint16 bitCount (void) { return 2 ; }

//--- Is built ?
  public : inline bool _isBuilt (void) const { return mValue > kNotBuilt ; }

//--- Construction from GALGAS constructor
  public : static inline GGS_localConstantBuildStyleEnum constructor_listStyle (C_Lexique & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_localConstantBuildStyleEnum (enum_listStyle) ;
  }
  public : static inline GGS_localConstantBuildStyleEnum constructor_mapStyle (C_Lexique & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_localConstantBuildStyleEnum (enum_mapStyle) ;
  }
  public : static inline GGS_localConstantBuildStyleEnum constructor_firstIsKeyOtherMapStyle (C_Lexique & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_localConstantBuildStyleEnum (enum_firstIsKeyOtherMapStyle) ;
  }

//--- Messages

//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;

//--- Drop operation
  public : inline void _drop_operation (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool operator == (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool operator != (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool operator <= (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool operator >= (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool operator <  (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool operator >  (const GGS_localConstantBuildStyleEnum inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_AC_galgasType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_AC_galgasType {
//--- Pointer to actual instance
  protected : cPtr_AC_galgasType * mPointer ;
//--- Default constructor
  public : GGS_AC_galgasType (void) ;
//--- Copy constructor
  public : GGS_AC_galgasType (const GGS_AC_galgasType &) ;
//--- Virtual destructor
  public : virtual ~GGS_AC_galgasType (void) ;
//--- Assignment operator
  public : void operator = (const GGS_AC_galgasType &) ;
//--- _isBuilt
  public : inline bool _isBuilt (void) const { return mPointer != NULL ; }
//--- isEqualTo
  public : inline bool isEqualTo (const GGS_AC_galgasType & _inOperand) const {
    return mPointer == _inOperand.mPointer ;
  }
//--- getPtr
  public : inline cPtr_AC_galgasType * getPtr (void) const {
    return mPointer ;
  }
//--- drop
  public : void _drop_operation (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_AC_galgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_galgasType * operator () (LOCATION_ARGS) const {
      return mPointer ;
    }
  #endif
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Class for 'metamodelPropertyKind' Enumeration                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_metamodelPropertyKind {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_attributeProperty, enum_singleReferenceProperty, enum_multipleReferenceProperty} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const {return mValue ; }

//--- Default constructor
  public : inline GGS_metamodelPropertyKind (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_metamodelPropertyKind (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline uint16 bitCount (void) { return 2 ; }

//--- Is built ?
  public : inline bool _isBuilt (void) const { return mValue > kNotBuilt ; }

//--- Construction from GALGAS constructor
  public : static inline GGS_metamodelPropertyKind constructor_attributeProperty (C_Lexique & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_metamodelPropertyKind (enum_attributeProperty) ;
  }
  public : static inline GGS_metamodelPropertyKind constructor_singleReferenceProperty (C_Lexique & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_metamodelPropertyKind (enum_singleReferenceProperty) ;
  }
  public : static inline GGS_metamodelPropertyKind constructor_multipleReferenceProperty (C_Lexique & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_metamodelPropertyKind (enum_multipleReferenceProperty) ;
  }

//--- Messages

//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;

//--- Drop operation
  public : inline void _drop_operation (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool operator == (const GGS_metamodelPropertyKind inOperand) const ;
  public : GGS_bool operator != (const GGS_metamodelPropertyKind inOperand) const ;
  public : GGS_bool operator <= (const GGS_metamodelPropertyKind inOperand) const ;
  public : GGS_bool operator >= (const GGS_metamodelPropertyKind inOperand) const ;
  public : GGS_bool operator <  (const GGS_metamodelPropertyKind inOperand) const ;
  public : GGS_bool operator >  (const GGS_metamodelPropertyKind inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@L_propertyPath'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_propertyPath ;

class GGS_L_propertyPath {
  public : typedef elementOf_GGS_L_propertyPath element_type ;
//--- Embedded class for list root
  protected : class cRootList {
    public : element_type * mFirstItem ;
    public : element_type * mLastItem ;
    public : sint32 mListLength ;
    public : sint32 mCountReference ;
  //--- Default constructor
    public : cRootList (void) ;
  //--- Destructor
    public : ~cRootList (void) ;
  //--- No Copy
    private : cRootList (const cRootList &) ;
    private : void operator = (const cRootList &) ;
  } ;
//--- Private attribute
  private : cRootList * _mRoot ;
//--- Default Constructor
  public : GGS_L_propertyPath (void) ;
//--- Copy Constructor
  public : GGS_L_propertyPath (const GGS_L_propertyPath & inSource) ;
//--- Assignment Operator
  public : void operator = (const GGS_L_propertyPath & inSource) ;
//--- Destructor
  public : ~GGS_L_propertyPath (void) ;

//--- Constructor 'emptyList'
  public : static GGS_L_propertyPath constructor_emptyList (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Function 'count'
  public : sint32 count (void) const ;
//--- Reader 'description'
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- Get first object
  public : element_type * firstObject (void) const ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0) ;
//--- Internal Methods
  protected : void _internalAppendItem (const GGS_lstring & argument_0) ;
  protected : void _insulateList (void) ;
//--- '_isBuilt' method
  public : inline bool _isBuilt (void) const {
    return _mRoot != NULL ;
  }
//--- Handling GALGAS 'drop' instruction
  public : void _drop_operation (void) ;
//--- Handling GALGAS 'length' reader
  public : GGS_uint reader_length (C_Lexique & /* inLexique */
                                   COMMA_UNUSED_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@L_ListOfPropertyPathes'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_ListOfPropertyPathes ;

class GGS_L_ListOfPropertyPathes {
  public : typedef elementOf_GGS_L_ListOfPropertyPathes element_type ;
//--- Embedded class for list root
  protected : class cRootList {
    public : element_type * mFirstItem ;
    public : element_type * mLastItem ;
    public : sint32 mListLength ;
    public : sint32 mCountReference ;
  //--- Default constructor
    public : cRootList (void) ;
  //--- Destructor
    public : ~cRootList (void) ;
  //--- No Copy
    private : cRootList (const cRootList &) ;
    private : void operator = (const cRootList &) ;
  } ;
//--- Private attribute
  private : cRootList * _mRoot ;
//--- Default Constructor
  public : GGS_L_ListOfPropertyPathes (void) ;
//--- Copy Constructor
  public : GGS_L_ListOfPropertyPathes (const GGS_L_ListOfPropertyPathes & inSource) ;
//--- Assignment Operator
  public : void operator = (const GGS_L_ListOfPropertyPathes & inSource) ;
//--- Destructor
  public : ~GGS_L_ListOfPropertyPathes (void) ;

//--- Constructor 'emptyList'
  public : static GGS_L_ListOfPropertyPathes constructor_emptyList (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Function 'count'
  public : sint32 count (void) const ;
//--- Reader 'description'
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- Get first object
  public : element_type * firstObject (void) const ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_L_propertyPath & argument_0,
                                const GGS_location & argument_1) ;
//--- Internal Methods
  protected : void _internalAppendItem (const GGS_L_propertyPath & argument_0,
                                const GGS_location & argument_1) ;
  protected : void _insulateList (void) ;
//--- '_isBuilt' method
  public : inline bool _isBuilt (void) const {
    return _mRoot != NULL ;
  }
//--- Handling GALGAS 'drop' instruction
  public : void _drop_operation (void) ;
//--- Handling GALGAS 'length' reader
  public : GGS_uint reader_length (C_Lexique & /* inLexique */
                                   COMMA_UNUSED_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@entityPropertyMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_entityPropertyMap ;

class GGS_entityPropertyMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_entityPropertyMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_entityPropertyMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_entityPropertyMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_entityPropertyMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_metamodelPropertyKind&  inParameter0,
                                const GGS_lstring &  inParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_metamodelPropertyKind  & outParameter0,
                                GGS_lstring   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_metamodelPropertyKind& inParameter0,
                                  const GGS_lstring & inParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_metamodelPropertyKind& outParameter0,
                                  GGS_lstring & outParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_entityPropertyMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_entityPropertyMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_entityPropertyMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@contextPropertyMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_contextPropertyMap ;

class GGS_contextPropertyMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_contextPropertyMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_contextPropertyMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_contextPropertyMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_contextPropertyMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lstring &  inParameter0,
                                const GGS_bool&  inParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lstring   & outParameter0,
                                GGS_bool  & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_lstring & inParameter0,
                                  const GGS_bool& inParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_lstring & outParameter0,
                                  GGS_bool& outParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_contextPropertyMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_contextPropertyMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_contextPropertyMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@contextParameterMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_contextParameterMap ;

class GGS_contextParameterMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_contextParameterMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_contextParameterMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_contextParameterMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_contextParameterMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_lstringList &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_lstringList   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_L_lstringList & inParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_L_lstringList & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_contextParameterMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_contextParameterMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_contextParameterMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@mapPropertyMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapPropertyMap ;

class GGS_mapPropertyMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_mapPropertyMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_mapPropertyMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_mapPropertyMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_mapPropertyMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lstring &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lstring   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_lstring & inParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_lstring & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_mapPropertyMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_mapPropertyMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_mapPropertyMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@insertionMap'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_insertionMap ;

class GGS_insertionMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_insertionMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_insertionMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_insertionMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_insertionMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lstring &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_lstring & inParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_lstring & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_insertionMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_insertionMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_insertionMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@relationVarMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_relationVarMap ;

class GGS_relationVarMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_relationVarMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_relationVarMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_relationVarMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_relationVarMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lstring &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lstring   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- 'searchKeyAndGetIndex' Search Method
  public : void method_searchKeyAndGetIndex (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                GGS_lstring   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_lstring & inParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_lstring & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_relationVarMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_relationVarMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_relationVarMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_metamodelRelationExpression'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_metamodelRelationExpression {
//--- Pointer to actual instance
  protected : cPtr_metamodelRelationExpression * mPointer ;
//--- Default constructor
  public : GGS_metamodelRelationExpression (void) ;
//--- Copy constructor
  public : GGS_metamodelRelationExpression (const GGS_metamodelRelationExpression &) ;
//--- Virtual destructor
  public : virtual ~GGS_metamodelRelationExpression (void) ;
//--- Assignment operator
  public : void operator = (const GGS_metamodelRelationExpression &) ;
//--- _isBuilt
  public : inline bool _isBuilt (void) const { return mPointer != NULL ; }
//--- isEqualTo
  public : inline bool isEqualTo (const GGS_metamodelRelationExpression & _inOperand) const {
    return mPointer == _inOperand.mPointer ;
  }
//--- getPtr
  public : inline cPtr_metamodelRelationExpression * getPtr (void) const {
    return mPointer ;
  }
//--- drop
  public : void _drop_operation (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_metamodelRelationExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_metamodelRelationExpression * operator () (LOCATION_ARGS) const {
      return mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_metamodelRelationAnd'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_metamodelRelationAnd : public GGS_metamodelRelationExpression {
//--- Default Constructor
  public : GGS_metamodelRelationAnd (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_metamodelRelationAnd constructor_new (C_Lexique & inLexique,
                                const GGS_metamodelRelationExpression & argument_0,
                                const GGS_metamodelRelationExpression & argument_1 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_metamodelRelationAnd * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_metamodelRelationAnd * operator () (LOCATION_ARGS) const {
      return (cPtr_metamodelRelationAnd *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_metamodelRelationOr'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_metamodelRelationOr : public GGS_metamodelRelationExpression {
//--- Default Constructor
  public : GGS_metamodelRelationOr (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_metamodelRelationOr constructor_new (C_Lexique & inLexique,
                                const GGS_metamodelRelationExpression & argument_0,
                                const GGS_metamodelRelationExpression & argument_1 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_metamodelRelationOr * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_metamodelRelationOr * operator () (LOCATION_ARGS) const {
      return (cPtr_metamodelRelationOr *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_metamodelRelationNot'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_metamodelRelationNot : public GGS_metamodelRelationExpression {
//--- Default Constructor
  public : GGS_metamodelRelationNot (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_metamodelRelationNot constructor_new (C_Lexique & inLexique,
                                const GGS_metamodelRelationExpression & argument_0 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_metamodelRelationNot * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_metamodelRelationNot * operator () (LOCATION_ARGS) const {
      return (cPtr_metamodelRelationNot *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_metamodelRelationTrue'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_metamodelRelationTrue : public GGS_metamodelRelationExpression {
//--- Default Constructor
  public : GGS_metamodelRelationTrue (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_metamodelRelationTrue constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_metamodelRelationTrue * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_metamodelRelationTrue * operator () (LOCATION_ARGS) const {
      return (cPtr_metamodelRelationTrue *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_metamodelRelationFalse'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_metamodelRelationFalse : public GGS_metamodelRelationExpression {
//--- Default Constructor
  public : GGS_metamodelRelationFalse (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_metamodelRelationFalse constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_metamodelRelationFalse * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_metamodelRelationFalse * operator () (LOCATION_ARGS) const {
      return (cPtr_metamodelRelationFalse *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_metamodelRelationPrimary'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_metamodelRelationPrimary : public GGS_metamodelRelationExpression {
//--- Default Constructor
  public : GGS_metamodelRelationPrimary (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_metamodelRelationPrimary constructor_new (C_Lexique & inLexique,
                                const GGS_relationVarMap & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_luint & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_lstring & argument_4 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_metamodelRelationPrimary * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_metamodelRelationPrimary * operator () (LOCATION_ARGS) const {
      return (cPtr_metamodelRelationPrimary *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  list '@metamodelRelationParameterList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_metamodelRelationParameterList ;

class GGS_metamodelRelationParameterList {
  public : typedef elementOf_GGS_metamodelRelationParameterList element_type ;
//--- Embedded class for list root
  protected : class cRootList {
    public : element_type * mFirstItem ;
    public : element_type * mLastItem ;
    public : sint32 mListLength ;
    public : sint32 mCountReference ;
  //--- Default constructor
    public : cRootList (void) ;
  //--- Destructor
    public : ~cRootList (void) ;
  //--- No Copy
    private : cRootList (const cRootList &) ;
    private : void operator = (const cRootList &) ;
  } ;
//--- Private attribute
  private : cRootList * _mRoot ;
//--- Default Constructor
  public : GGS_metamodelRelationParameterList (void) ;
//--- Copy Constructor
  public : GGS_metamodelRelationParameterList (const GGS_metamodelRelationParameterList & inSource) ;
//--- Assignment Operator
  public : void operator = (const GGS_metamodelRelationParameterList & inSource) ;
//--- Destructor
  public : ~GGS_metamodelRelationParameterList (void) ;

//--- Constructor 'emptyList'
  public : static GGS_metamodelRelationParameterList constructor_emptyList (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Function 'count'
  public : sint32 count (void) const ;
//--- Reader 'description'
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- Get first object
  public : element_type * firstObject (void) const ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_luint & argument_1,
                                const GGS_lstring & argument_2) ;
//--- Internal Methods
  protected : void _internalAppendItem (const GGS_lstring & argument_0,
                                const GGS_luint & argument_1,
                                const GGS_lstring & argument_2) ;
  protected : void _insulateList (void) ;
//--- '_isBuilt' method
  public : inline bool _isBuilt (void) const {
    return _mRoot != NULL ;
  }
//--- Handling GALGAS 'drop' instruction
  public : void _drop_operation (void) ;
//--- Handling GALGAS 'length' reader
  public : GGS_uint reader_length (C_Lexique & /* inLexique */
                                   COMMA_UNUSED_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_metamodelRelationDo'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_metamodelRelationDo : public GGS_metamodelRelationExpression {
//--- Default Constructor
  public : GGS_metamodelRelationDo (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_metamodelRelationDo constructor_new (C_Lexique & inLexique,
                                const GGS_relationVarMap & argument_0,
                                const GGS_metamodelRelationParameterList & argument_1,
                                const GGS_L_propertyPath & argument_2,
                                const GGS_lbool & argument_3 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_metamodelRelationDo * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_metamodelRelationDo * operator () (LOCATION_ARGS) const {
      return (cPtr_metamodelRelationDo *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Map '@relationMap'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_relationMap ;

class GGS_relationMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_relationMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_relationMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_relationMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_relationMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_relationVarMap &  inParameter0,
                                const GGS_metamodelRelationExpression &  inParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_relationVarMap   & outParameter0,
                                GGS_metamodelRelationExpression   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_relationVarMap & inParameter0,
                                  const GGS_metamodelRelationExpression & inParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_relationVarMap & outParameter0,
                                  GGS_metamodelRelationExpression & outParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_relationMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_relationMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_relationMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@mapEntityMap'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapEntityMap ;

class GGS_mapEntityMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_mapEntityMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_mapEntityMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_mapEntityMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_mapEntityMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lstring &  inParameter0,
                                const GGS_lstring &  inParameter1,
                                const GGS_lstring &  inParameter2 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lstring   & outParameter0,
                                GGS_lstring   & outParameter1,
                                GGS_lstring   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_lstring & inParameter0,
                                  const GGS_lstring & inParameter1,
                                  const GGS_lstring & inParameter2,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_lstring & outParameter0,
                                  GGS_lstring & outParameter1,
                                  GGS_lstring & outParameter2,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_mapEntityMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_mapEntityMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_mapEntityMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Map '@mapAndEntityUniqueMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapAndEntityUniqueMap ;

class GGS_mapAndEntityUniqueMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_mapAndEntityUniqueMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_mapAndEntityUniqueMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_mapAndEntityUniqueMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_mapAndEntityUniqueMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_mapAndEntityUniqueMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_mapAndEntityUniqueMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_mapAndEntityUniqueMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Map '@entityToImplementMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_entityToImplementMap ;

class GGS_entityToImplementMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_entityToImplementMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_entityToImplementMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_entityToImplementMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_entityToImplementMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_entityPropertyMap &  inParameter0,
                                const GGS_bool&  inParameter1,
                                const GGS_entityPropertyMap &  inParameter2,
                                const GGS_lstring &  inParameter3,
                                const GGS_stringset &  inParameter4 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_entityPropertyMap   & outParameter0,
                                GGS_bool  & outParameter1,
                                GGS_entityPropertyMap   & outParameter2,
                                GGS_lstring   & outParameter3,
                                GGS_stringset   & outParameter4 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_entityPropertyMap & inParameter0,
                                  const GGS_bool& inParameter1,
                                  const GGS_entityPropertyMap & inParameter2,
                                  const GGS_lstring & inParameter3,
                                  const GGS_stringset & inParameter4,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_entityPropertyMap & outParameter0,
                                  GGS_bool& outParameter1,
                                  GGS_entityPropertyMap & outParameter2,
                                  GGS_lstring & outParameter3,
                                  GGS_stringset & outParameter4,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_entityToImplementMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_entityToImplementMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_entityToImplementMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

void routine_generate_metamodel (C_Lexique &,
                                GGS_entityToImplementMap  &,
                                GGS_lstring  ,
                                GGS_stringset  ,
                                GGS_lstring   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeGalgas_singleEntity'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_singleEntity : public GGS_AC_galgasType {
//--- Default Constructor
  public : GGS_typeGalgas_singleEntity (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_singleEntity constructor_new (C_Lexique & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_entityPropertyMap & argument_1,
                                const GGS_bool& argument_2,
                                const GGS_entityPropertyMap & argument_3,
                                const GGS_lstring & argument_4,
                                const GGS_stringset & argument_5 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_singleEntity * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_singleEntity * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_singleEntity *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeGalgas_multipleEntity'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_multipleEntity : public GGS_AC_galgasType {
//--- Default Constructor
  public : GGS_typeGalgas_multipleEntity (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_multipleEntity constructor_new (C_Lexique & inLexique,
                                const GGS_lstring & argument_0 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_multipleEntity * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_multipleEntity * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_multipleEntity *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  list '@typeListeAttributsSemantiques'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListeAttributsSemantiques ;

class GGS_typeListeAttributsSemantiques {
  public : typedef elementOf_GGS_typeListeAttributsSemantiques element_type ;
//--- Embedded class for list root
  protected : class cRootList {
    public : element_type * mFirstItem ;
    public : element_type * mLastItem ;
    public : sint32 mListLength ;
    public : sint32 mCountReference ;
  //--- Default constructor
    public : cRootList (void) ;
  //--- Destructor
    public : ~cRootList (void) ;
  //--- No Copy
    private : cRootList (const cRootList &) ;
    private : void operator = (const cRootList &) ;
  } ;
//--- Private attribute
  private : cRootList * _mRoot ;
//--- Default Constructor
  public : GGS_typeListeAttributsSemantiques (void) ;
//--- Copy Constructor
  public : GGS_typeListeAttributsSemantiques (const GGS_typeListeAttributsSemantiques & inSource) ;
//--- Assignment Operator
  public : void operator = (const GGS_typeListeAttributsSemantiques & inSource) ;
//--- Destructor
  public : ~GGS_typeListeAttributsSemantiques (void) ;

//--- Constructor 'emptyList'
  public : static GGS_typeListeAttributsSemantiques constructor_emptyList (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Function 'count'
  public : sint32 count (void) const ;
//--- Reader 'description'
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- Get first object
  public : element_type * firstObject (void) const ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Internal Methods
  protected : void _internalAppendItem (const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1) ;
  protected : void _insulateList (void) ;
//--- '_isBuilt' method
  public : inline bool _isBuilt (void) const {
    return _mRoot != NULL ;
  }
//--- Handling GALGAS 'drop' instruction
  public : void _drop_operation (void) ;
//--- Handling GALGAS 'length' reader
  public : GGS_uint reader_length (C_Lexique & /* inLexique */
                                   COMMA_UNUSED_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@typeTypesList'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTypesList ;

class GGS_typeTypesList {
  public : typedef elementOf_GGS_typeTypesList element_type ;
//--- Embedded class for list root
  protected : class cRootList {
    public : element_type * mFirstItem ;
    public : element_type * mLastItem ;
    public : sint32 mListLength ;
    public : sint32 mCountReference ;
  //--- Default constructor
    public : cRootList (void) ;
  //--- Destructor
    public : ~cRootList (void) ;
  //--- No Copy
    private : cRootList (const cRootList &) ;
    private : void operator = (const cRootList &) ;
  } ;
//--- Private attribute
  private : cRootList * _mRoot ;
//--- Default Constructor
  public : GGS_typeTypesList (void) ;
//--- Copy Constructor
  public : GGS_typeTypesList (const GGS_typeTypesList & inSource) ;
//--- Assignment Operator
  public : void operator = (const GGS_typeTypesList & inSource) ;
//--- Destructor
  public : ~GGS_typeTypesList (void) ;

//--- Constructor 'emptyList'
  public : static GGS_typeTypesList constructor_emptyList (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Function 'count'
  public : sint32 count (void) const ;
//--- Reader 'description'
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- Get first object
  public : element_type * firstObject (void) const ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_location & argument_1) ;
//--- Internal Methods
  protected : void _internalAppendItem (const GGS_AC_galgasType & argument_0,
                                const GGS_location & argument_1) ;
  protected : void _insulateList (void) ;
//--- '_isBuilt' method
  public : inline bool _isBuilt (void) const {
    return _mRoot != NULL ;
  }
//--- Handling GALGAS 'drop' instruction
  public : void _drop_operation (void) ;
//--- Handling GALGAS 'length' reader
  public : GGS_uint reader_length (C_Lexique & /* inLexique */
                                   COMMA_UNUSED_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@L_EXsignature'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_EXsignature ;

class GGS_L_EXsignature {
  public : typedef elementOf_GGS_L_EXsignature element_type ;
//--- Embedded class for list root
  protected : class cRootList {
    public : element_type * mFirstItem ;
    public : element_type * mLastItem ;
    public : sint32 mListLength ;
    public : sint32 mCountReference ;
  //--- Default constructor
    public : cRootList (void) ;
  //--- Destructor
    public : ~cRootList (void) ;
  //--- No Copy
    private : cRootList (const cRootList &) ;
    private : void operator = (const cRootList &) ;
  } ;
//--- Private attribute
  private : cRootList * _mRoot ;
//--- Default Constructor
  public : GGS_L_EXsignature (void) ;
//--- Copy Constructor
  public : GGS_L_EXsignature (const GGS_L_EXsignature & inSource) ;
//--- Assignment Operator
  public : void operator = (const GGS_L_EXsignature & inSource) ;
//--- Destructor
  public : ~GGS_L_EXsignature (void) ;

//--- Constructor 'emptyList'
  public : static GGS_L_EXsignature constructor_emptyList (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Function 'count'
  public : sint32 count (void) const ;
//--- Reader 'description'
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- Get first object
  public : element_type * firstObject (void) const ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_formalArgumentPassingMode& argument_1) ;
//--- Internal Methods
  protected : void _internalAppendItem (const GGS_AC_galgasType & argument_0,
                                const GGS_formalArgumentPassingMode& argument_1) ;
  protected : void _insulateList (void) ;
//--- '_isBuilt' method
  public : inline bool _isBuilt (void) const {
    return _mRoot != NULL ;
  }
//--- Handling GALGAS 'drop' instruction
  public : void _drop_operation (void) ;
//--- Handling GALGAS 'length' reader
  public : GGS_uint reader_length (C_Lexique & /* inLexique */
                                   COMMA_UNUSED_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@L_actualParametersSignature'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_actualParametersSignature ;

class GGS_L_actualParametersSignature {
  public : typedef elementOf_GGS_L_actualParametersSignature element_type ;
//--- Embedded class for list root
  protected : class cRootList {
    public : element_type * mFirstItem ;
    public : element_type * mLastItem ;
    public : sint32 mListLength ;
    public : sint32 mCountReference ;
  //--- Default constructor
    public : cRootList (void) ;
  //--- Destructor
    public : ~cRootList (void) ;
  //--- No Copy
    private : cRootList (const cRootList &) ;
    private : void operator = (const cRootList &) ;
  } ;
//--- Private attribute
  private : cRootList * _mRoot ;
//--- Default Constructor
  public : GGS_L_actualParametersSignature (void) ;
//--- Copy Constructor
  public : GGS_L_actualParametersSignature (const GGS_L_actualParametersSignature & inSource) ;
//--- Assignment Operator
  public : void operator = (const GGS_L_actualParametersSignature & inSource) ;
//--- Destructor
  public : ~GGS_L_actualParametersSignature (void) ;

//--- Constructor 'emptyList'
  public : static GGS_L_actualParametersSignature constructor_emptyList (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Function 'count'
  public : sint32 count (void) const ;
//--- Reader 'description'
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- Get first object
  public : element_type * firstObject (void) const ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_actualParametersPassingMode& argument_1) ;
//--- Internal Methods
  protected : void _internalAppendItem (const GGS_AC_galgasType & argument_0,
                                const GGS_actualParametersPassingMode& argument_1) ;
  protected : void _insulateList (void) ;
//--- '_isBuilt' method
  public : inline bool _isBuilt (void) const {
    return _mRoot != NULL ;
  }
//--- Handling GALGAS 'drop' instruction
  public : void _drop_operation (void) ;
//--- Handling GALGAS 'length' reader
  public : GGS_uint reader_length (C_Lexique & /* inLexique */
                                   COMMA_UNUSED_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@M_accessors_map'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_accessors_map ;

class GGS_M_accessors_map : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_accessors_map element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_accessors_map * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_accessors_map * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_M_accessors_map constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0,
                                const GGS_AC_galgasType &  inParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0,
                                GGS_AC_galgasType   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_L_EXsignature & inParameter0,
                                  const GGS_AC_galgasType & inParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_L_EXsignature & outParameter0,
                                  GGS_AC_galgasType & outParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_M_accessors_map constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_M_accessors_map & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_accessors_map reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           list '@L_stringList'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_stringList ;

class GGS_L_stringList {
  public : typedef elementOf_GGS_L_stringList element_type ;
//--- Embedded class for list root
  protected : class cRootList {
    public : element_type * mFirstItem ;
    public : element_type * mLastItem ;
    public : sint32 mListLength ;
    public : sint32 mCountReference ;
  //--- Default constructor
    public : cRootList (void) ;
  //--- Destructor
    public : ~cRootList (void) ;
  //--- No Copy
    private : cRootList (const cRootList &) ;
    private : void operator = (const cRootList &) ;
  } ;
//--- Private attribute
  private : cRootList * _mRoot ;
//--- Default Constructor
  public : GGS_L_stringList (void) ;
//--- Copy Constructor
  public : GGS_L_stringList (const GGS_L_stringList & inSource) ;
//--- Assignment Operator
  public : void operator = (const GGS_L_stringList & inSource) ;
//--- Destructor
  public : ~GGS_L_stringList (void) ;

//--- Constructor 'emptyList'
  public : static GGS_L_stringList constructor_emptyList (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Function 'count'
  public : sint32 count (void) const ;
//--- Reader 'description'
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- Get first object
  public : element_type * firstObject (void) const ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_string& argument_0) ;
//--- Internal Methods
  protected : void _internalAppendItem (const GGS_string& argument_0) ;
  protected : void _insulateList (void) ;
//--- '_isBuilt' method
  public : inline bool _isBuilt (void) const {
    return _mRoot != NULL ;
  }
//--- Handling GALGAS 'drop' instruction
  public : void _drop_operation (void) ;
//--- Handling GALGAS 'length' reader
  public : GGS_uint reader_length (C_Lexique & /* inLexique */
                                   COMMA_UNUSED_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_typeGalgas_jokerInParameterList'             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_jokerInParameterList : public GGS_AC_galgasType {
//--- Default Constructor
  public : GGS_typeGalgas_jokerInParameterList (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_jokerInParameterList constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_jokerInParameterList * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_jokerInParameterList * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_jokerInParameterList *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_bool'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_bool : public GGS_AC_galgasType {
//--- Default Constructor
  public : GGS_typeGalgas_bool (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_bool constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_bool * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_bool * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_bool *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_string'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_string : public GGS_AC_galgasType {
//--- Default Constructor
  public : GGS_typeGalgas_string (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_string constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_string * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_string * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_string *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_sint'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_sint : public GGS_AC_galgasType {
//--- Default Constructor
  public : GGS_typeGalgas_sint (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_sint constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_sint * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_sint * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_sint *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_sint64'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_sint64 : public GGS_AC_galgasType {
//--- Default Constructor
  public : GGS_typeGalgas_sint64 (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_sint64 constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_sint64 * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_sint64 * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_sint64 *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_uint'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_uint : public GGS_AC_galgasType {
//--- Default Constructor
  public : GGS_typeGalgas_uint (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_uint constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_uint * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_uint * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_uint *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_uint64'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_uint64 : public GGS_AC_galgasType {
//--- Default Constructor
  public : GGS_typeGalgas_uint64 (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_uint64 constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_uint64 * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_uint64 * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_uint64 *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_char'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_char : public GGS_AC_galgasType {
//--- Default Constructor
  public : GGS_typeGalgas_char (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_char constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_char * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_char * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_char *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_double'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_double : public GGS_AC_galgasType {
//--- Default Constructor
  public : GGS_typeGalgas_double (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_double constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_double * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_double * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_double *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_C_galgasPrimitiveType'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_C_galgasPrimitiveType : public GGS_AC_galgasType {
//--- Default constructor
  public : GGS_C_galgasPrimitiveType (void) ;
//--- Copy constructor
  public : GGS_C_galgasPrimitiveType (const GGS_C_galgasPrimitiveType &) ;
//--- Virtual destructor
  public : virtual ~GGS_C_galgasPrimitiveType (void) ;
//--- Assignment operator
  public : void operator = (const GGS_C_galgasPrimitiveType &) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_galgasPrimitiveType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_galgasPrimitiveType * operator () (LOCATION_ARGS) const {
      return (cPtr_C_galgasPrimitiveType *) mPointer ;
    }
  #endif
//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgas_location'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_location : public GGS_C_galgasPrimitiveType {
//--- Default Constructor
  public : GGS_typeGalgas_location (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_location constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_location * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_location * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_location *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgas_lstring'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_lstring : public GGS_C_galgasPrimitiveType {
//--- Default Constructor
  public : GGS_typeGalgas_lstring (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_lstring constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_lstring * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_lstring * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_lstring *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_lchar'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_lchar : public GGS_C_galgasPrimitiveType {
//--- Default Constructor
  public : GGS_typeGalgas_lchar (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_lchar constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_lchar * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_lchar * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_lchar *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_lbool'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_lbool : public GGS_C_galgasPrimitiveType {
//--- Default Constructor
  public : GGS_typeGalgas_lbool (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_lbool constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_lbool * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_lbool * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_lbool *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_luint'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_luint : public GGS_C_galgasPrimitiveType {
//--- Default Constructor
  public : GGS_typeGalgas_luint (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_luint constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_luint * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_luint * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_luint *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgas_luint64'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_luint64 : public GGS_C_galgasPrimitiveType {
//--- Default Constructor
  public : GGS_typeGalgas_luint64 (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_luint64 constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_luint64 * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_luint64 * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_luint64 *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_lsint'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_lsint : public GGS_C_galgasPrimitiveType {
//--- Default Constructor
  public : GGS_typeGalgas_lsint (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_lsint constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_lsint * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_lsint * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_lsint *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgas_lsint64'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_lsint64 : public GGS_C_galgasPrimitiveType {
//--- Default Constructor
  public : GGS_typeGalgas_lsint64 (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_lsint64 constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_lsint64 * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_lsint64 * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_lsint64 *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgas_ldouble'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_ldouble : public GGS_C_galgasPrimitiveType {
//--- Default Constructor
  public : GGS_typeGalgas_ldouble (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_ldouble constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_ldouble * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_ldouble * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_ldouble *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeGalgas_stringset'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_stringset : public GGS_AC_galgasType {
//--- Default Constructor
  public : GGS_typeGalgas_stringset (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_stringset constructor_new (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_stringset * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_stringset * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_stringset *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@typeTableMethodes'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableMethodes ;

class GGS_typeTableMethodes : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeTableMethodes element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_typeTableMethodes * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeTableMethodes * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_typeTableMethodes constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_L_EXsignature & inParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_L_EXsignature & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_typeTableMethodes constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_typeTableMethodes & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeTableMethodes reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_typeGalgasUndefinedExternType'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedExternType : public GGS_AC_galgasType {
//--- Default Constructor
  public : GGS_typeGalgasUndefinedExternType (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgasUndefinedExternType constructor_new (C_Lexique & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasUndefinedExternType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasUndefinedExternType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasUndefinedExternType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map '@M_externTypeConstructorMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_externTypeConstructorMap ;

class GGS_M_externTypeConstructorMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_externTypeConstructorMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_externTypeConstructorMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_externTypeConstructorMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_M_externTypeConstructorMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_typeListeAttributsSemantiques &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_typeListeAttributsSemantiques   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_typeListeAttributsSemantiques & inParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_typeListeAttributsSemantiques & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_M_externTypeConstructorMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_M_externTypeConstructorMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_externTypeConstructorMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeGalgasExternType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasExternType : public GGS_typeGalgasUndefinedExternType {
//--- Default Constructor
  public : GGS_typeGalgasExternType (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgasExternType constructor_new (C_Lexique & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_M_externTypeConstructorMap & argument_2,
                                const GGS_typeTableMethodes & argument_3,
                                const GGS_typeTableMethodes & argument_4,
                                const GGS_bool& argument_5,
                                const GGS_typeListeAttributsSemantiques & argument_6 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasExternType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasExternType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasExternType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map '@M_terminalSymbolsMapForUse'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_terminalSymbolsMapForUse ;

class GGS_M_terminalSymbolsMapForUse : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_terminalSymbolsMapForUse element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_terminalSymbolsMapForUse * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_terminalSymbolsMapForUse * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_M_terminalSymbolsMapForUse constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_typeListeAttributsSemantiques &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_typeListeAttributsSemantiques   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- 'searchKeyGetIndex' Search Method
  public : void method_searchKeyGetIndex (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                GGS_typeListeAttributsSemantiques   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_typeListeAttributsSemantiques & inParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_typeListeAttributsSemantiques & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_M_terminalSymbolsMapForUse constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_M_terminalSymbolsMapForUse & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_terminalSymbolsMapForUse reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@M_lexiqueComponents'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_lexiqueComponents ;

class GGS_M_lexiqueComponents : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_lexiqueComponents element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_lexiqueComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_lexiqueComponents * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_M_lexiqueComponents constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_terminalSymbolsMapForUse &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_terminalSymbolsMapForUse   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_M_terminalSymbolsMapForUse & inParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_M_terminalSymbolsMapForUse & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_M_lexiqueComponents constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_M_lexiqueComponents & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_lexiqueComponents reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@typeTableEnAvant'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableEnAvant ;

class GGS_typeTableEnAvant : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeTableEnAvant element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_typeTableEnAvant * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeTableEnAvant * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_typeTableEnAvant constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_galgasType   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_AC_galgasType & inParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_AC_galgasType & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_typeTableEnAvant constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_typeTableEnAvant & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeTableEnAvant reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Map '@M_nonterminalSymbolAlts'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonterminalSymbolAlts ;

class GGS_M_nonterminalSymbolAlts : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_nonterminalSymbolAlts element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_nonterminalSymbolAlts * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_nonterminalSymbolAlts * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_M_nonterminalSymbolAlts constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0,
                                const GGS_lstring &  inParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0,
                                GGS_lstring   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_L_EXsignature & inParameter0,
                                  const GGS_lstring & inParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_L_EXsignature & outParameter0,
                                  GGS_lstring & outParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_M_nonterminalSymbolAlts constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_M_nonterminalSymbolAlts & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_nonterminalSymbolAlts reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_AC_semanticsEntity'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_AC_semanticsEntity {
//--- Pointer to actual instance
  protected : cPtr_AC_semanticsEntity * mPointer ;
//--- Default constructor
  public : GGS_AC_semanticsEntity (void) ;
//--- Copy constructor
  public : GGS_AC_semanticsEntity (const GGS_AC_semanticsEntity &) ;
//--- Virtual destructor
  public : virtual ~GGS_AC_semanticsEntity (void) ;
//--- Assignment operator
  public : void operator = (const GGS_AC_semanticsEntity &) ;
//--- _isBuilt
  public : inline bool _isBuilt (void) const { return mPointer != NULL ; }
//--- isEqualTo
  public : inline bool isEqualTo (const GGS_AC_semanticsEntity & _inOperand) const {
    return mPointer == _inOperand.mPointer ;
  }
//--- getPtr
  public : inline cPtr_AC_semanticsEntity * getPtr (void) const {
    return mPointer ;
  }
//--- drop
  public : void _drop_operation (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_AC_semanticsEntity * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_semanticsEntity * operator () (LOCATION_ARGS) const {
      return mPointer ;
    }
  #endif
//--- 'messageTypeEntite' message
  public : GGS_string reader_messageTypeEntite (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_C_grammarForSemantics'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_C_grammarForSemantics : public GGS_AC_semanticsEntity {
//--- Default Constructor
  public : GGS_C_grammarForSemantics (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_C_grammarForSemantics constructor_new (C_Lexique & inLexique,
                                const GGS_M_nonterminalSymbolAlts & argument_0 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_grammarForSemantics * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_grammarForSemantics * operator () (LOCATION_ARGS) const {
      return (cPtr_C_grammarForSemantics *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Map '@M_semanticsEntitiesForUse'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_semanticsEntitiesForUse ;

class GGS_M_semanticsEntitiesForUse : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_semanticsEntitiesForUse element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_semanticsEntitiesForUse * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_semanticsEntitiesForUse * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_M_semanticsEntitiesForUse constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_semanticsEntity &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_semanticsEntity   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_AC_semanticsEntity & inParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_AC_semanticsEntity & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_M_semanticsEntitiesForUse constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_M_semanticsEntitiesForUse & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_semanticsEntitiesForUse reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_AC_typeForGrammarComponent'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_AC_typeForGrammarComponent {
//--- Pointer to actual instance
  protected : cPtr_AC_typeForGrammarComponent * mPointer ;
//--- Default constructor
  public : GGS_AC_typeForGrammarComponent (void) ;
//--- Copy constructor
  public : GGS_AC_typeForGrammarComponent (const GGS_AC_typeForGrammarComponent &) ;
//--- Virtual destructor
  public : virtual ~GGS_AC_typeForGrammarComponent (void) ;
//--- Assignment operator
  public : void operator = (const GGS_AC_typeForGrammarComponent &) ;
//--- _isBuilt
  public : inline bool _isBuilt (void) const { return mPointer != NULL ; }
//--- isEqualTo
  public : inline bool isEqualTo (const GGS_AC_typeForGrammarComponent & _inOperand) const {
    return mPointer == _inOperand.mPointer ;
  }
//--- getPtr
  public : inline cPtr_AC_typeForGrammarComponent * getPtr (void) const {
    return mPointer ;
  }
//--- drop
  public : void _drop_operation (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_AC_typeForGrammarComponent * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_typeForGrammarComponent * operator () (LOCATION_ARGS) const {
      return mPointer ;
    }
  #endif
//--- 'typeForGrammarComponentMessage' message
  public : GGS_string reader_typeForGrammarComponentMessage (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map '@M_typesForGrammarComponent'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_typesForGrammarComponent ;

class GGS_M_typesForGrammarComponent : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_typesForGrammarComponent element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_typesForGrammarComponent * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_typesForGrammarComponent * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_M_typesForGrammarComponent constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_typeForGrammarComponent &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_typeForGrammarComponent   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_AC_typeForGrammarComponent & inParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_AC_typeForGrammarComponent & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_M_typesForGrammarComponent constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_M_typesForGrammarComponent & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_typesForGrammarComponent reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

void routine_checkSignature_ForGrammarComponent (C_Lexique &,
                                const GGS_L_signature  &,
                                const GGS_L_signature  &,
                                const GGS_location  &,
                                const GGS_location  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_AC_instruction_ForGrammar'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_AC_instruction_ForGrammar {
//--- Pointer to actual instance
  protected : cPtr_AC_instruction_ForGrammar * mPointer ;
//--- Default constructor
  public : GGS_AC_instruction_ForGrammar (void) ;
//--- Copy constructor
  public : GGS_AC_instruction_ForGrammar (const GGS_AC_instruction_ForGrammar &) ;
//--- Virtual destructor
  public : virtual ~GGS_AC_instruction_ForGrammar (void) ;
//--- Assignment operator
  public : void operator = (const GGS_AC_instruction_ForGrammar &) ;
//--- _isBuilt
  public : inline bool _isBuilt (void) const { return mPointer != NULL ; }
//--- isEqualTo
  public : inline bool isEqualTo (const GGS_AC_instruction_ForGrammar & _inOperand) const {
    return mPointer == _inOperand.mPointer ;
  }
//--- getPtr
  public : inline cPtr_AC_instruction_ForGrammar * getPtr (void) const {
    return mPointer ;
  }
//--- drop
  public : void _drop_operation (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_AC_instruction_ForGrammar * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_instruction_ForGrammar * operator () (LOCATION_ARGS) const {
      return mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@L_ruleSyntaxSignature'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_ruleSyntaxSignature ;

class GGS_L_ruleSyntaxSignature {
  public : typedef elementOf_GGS_L_ruleSyntaxSignature element_type ;
//--- Embedded class for list root
  protected : class cRootList {
    public : element_type * mFirstItem ;
    public : element_type * mLastItem ;
    public : sint32 mListLength ;
    public : sint32 mCountReference ;
  //--- Default constructor
    public : cRootList (void) ;
  //--- Destructor
    public : ~cRootList (void) ;
  //--- No Copy
    private : cRootList (const cRootList &) ;
    private : void operator = (const cRootList &) ;
  } ;
//--- Private attribute
  private : cRootList * _mRoot ;
//--- Default Constructor
  public : GGS_L_ruleSyntaxSignature (void) ;
//--- Copy Constructor
  public : GGS_L_ruleSyntaxSignature (const GGS_L_ruleSyntaxSignature & inSource) ;
//--- Assignment Operator
  public : void operator = (const GGS_L_ruleSyntaxSignature & inSource) ;
//--- Destructor
  public : ~GGS_L_ruleSyntaxSignature (void) ;

//--- Constructor 'emptyList'
  public : static GGS_L_ruleSyntaxSignature constructor_emptyList (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Function 'count'
  public : sint32 count (void) const ;
//--- Reader 'description'
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- Get first object
  public : element_type * firstObject (void) const ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_AC_instruction_ForGrammar & argument_0) ;
//--- Internal Methods
  protected : void _internalAppendItem (const GGS_AC_instruction_ForGrammar & argument_0) ;
  protected : void _insulateList (void) ;
//--- '_isBuilt' method
  public : inline bool _isBuilt (void) const {
    return _mRoot != NULL ;
  }
//--- Handling GALGAS 'drop' instruction
  public : void _drop_operation (void) ;
//--- Handling GALGAS 'length' reader
  public : GGS_uint reader_length (C_Lexique & /* inLexique */
                                   COMMA_UNUSED_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@L_grammarsMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_grammarsMap ;

class GGS_L_grammarsMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_L_grammarsMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_L_grammarsMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_L_grammarsMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_L_grammarsMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_nonterminalSymbolAlts &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_nonterminalSymbolAlts   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_M_nonterminalSymbolAlts & inParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_M_nonterminalSymbolAlts & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_L_grammarsMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_L_grammarsMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_L_grammarsMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Map '@M_nonterminalSymbolAltsForGrammar'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonterminalSymbolAltsForGrammar ;

class GGS_M_nonterminalSymbolAltsForGrammar : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_nonterminalSymbolAltsForGrammar element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_nonterminalSymbolAltsForGrammar * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_nonterminalSymbolAltsForGrammar * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_M_nonterminalSymbolAltsForGrammar constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_signature &  inParameter0,
                                const GGS_lstring &  inParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_signature   & outParameter0,
                                GGS_lstring   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_L_signature & inParameter0,
                                  const GGS_lstring & inParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_L_signature & outParameter0,
                                  GGS_lstring & outParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_M_nonterminalSymbolAltsForGrammar constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_M_nonterminalSymbolAltsForGrammar & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_nonterminalSymbolAltsForGrammar reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              list '@L_productionRules_ForGrammarComponent'                *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_productionRules_ForGrammarComponent ;

class GGS_L_productionRules_ForGrammarComponent {
  public : typedef elementOf_GGS_L_productionRules_ForGrammarComponent element_type ;
//--- Embedded class for list root
  protected : class cRootList {
    public : element_type * mFirstItem ;
    public : element_type * mLastItem ;
    public : sint32 mListLength ;
    public : sint32 mCountReference ;
  //--- Default constructor
    public : cRootList (void) ;
  //--- Destructor
    public : ~cRootList (void) ;
  //--- No Copy
    private : cRootList (const cRootList &) ;
    private : void operator = (const cRootList &) ;
  } ;
//--- Private attribute
  private : cRootList * _mRoot ;
//--- Default Constructor
  public : GGS_L_productionRules_ForGrammarComponent (void) ;
//--- Copy Constructor
  public : GGS_L_productionRules_ForGrammarComponent (const GGS_L_productionRules_ForGrammarComponent & inSource) ;
//--- Assignment Operator
  public : void operator = (const GGS_L_productionRules_ForGrammarComponent & inSource) ;
//--- Destructor
  public : ~GGS_L_productionRules_ForGrammarComponent (void) ;

//--- Constructor 'emptyList'
  public : static GGS_L_productionRules_ForGrammarComponent constructor_emptyList (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Function 'count'
  public : sint32 count (void) const ;
//--- Reader 'description'
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- Get first object
  public : element_type * firstObject (void) const ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_L_ruleSyntaxSignature & argument_2) ;
//--- Internal Methods
  protected : void _internalAppendItem (const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_L_ruleSyntaxSignature & argument_2) ;
  protected : void _insulateList (void) ;
//--- '_isBuilt' method
  public : inline bool _isBuilt (void) const {
    return _mRoot != NULL ;
  }
//--- Handling GALGAS 'drop' instruction
  public : void _drop_operation (void) ;
//--- Handling GALGAS 'length' reader
  public : GGS_uint reader_length (C_Lexique & /* inLexique */
                                   COMMA_UNUSED_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Map '@M_nonTerminalSymbolsForGrammar'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonTerminalSymbolsForGrammar ;

class GGS_M_nonTerminalSymbolsForGrammar : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_nonTerminalSymbolsForGrammar element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_nonTerminalSymbolsForGrammar * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_nonTerminalSymbolsForGrammar * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_M_nonTerminalSymbolsForGrammar constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_nonterminalSymbolAltsForGrammar &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_nonterminalSymbolAltsForGrammar   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- 'searchKeyGetIndex' Search Method
  public : void method_searchKeyGetIndex (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                GGS_M_nonterminalSymbolAltsForGrammar   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_M_nonterminalSymbolAltsForGrammar & inParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_M_nonterminalSymbolAltsForGrammar & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_M_nonTerminalSymbolsForGrammar constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_M_nonTerminalSymbolsForGrammar & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_nonTerminalSymbolsForGrammar reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@M_syntaxComponents'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_syntaxComponents ;

class GGS_M_syntaxComponents : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_syntaxComponents element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_syntaxComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_syntaxComponents * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_M_syntaxComponents constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_nonTerminalSymbolsForGrammar &  inParameter0,
                                const GGS_L_productionRules_ForGrammarComponent &  inParameter1,
                                const GGS_lstring &  inParameter2 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_nonTerminalSymbolsForGrammar   & outParameter0,
                                GGS_L_productionRules_ForGrammarComponent   & outParameter1,
                                GGS_lstring   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_M_nonTerminalSymbolsForGrammar & inParameter0,
                                  const GGS_L_productionRules_ForGrammarComponent & inParameter1,
                                  const GGS_lstring & inParameter2,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_M_nonTerminalSymbolsForGrammar & outParameter0,
                                  GGS_L_productionRules_ForGrammarComponent & outParameter1,
                                  GGS_lstring & outParameter2,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_M_syntaxComponents constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_M_syntaxComponents & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_syntaxComponents reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//       GALGAS class 'GGS_T_terminalInstruction_forGrammarComponent'        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_T_terminalInstruction_forGrammarComponent : public GGS_AC_instruction_ForGrammar {
//--- Default Constructor
  public : GGS_T_terminalInstruction_forGrammarComponent (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_T_terminalInstruction_forGrammarComponent constructor_new (C_Lexique & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_uint & argument_2 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_T_terminalInstruction_forGrammarComponent * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_T_terminalInstruction_forGrammarComponent * operator () (LOCATION_ARGS) const {
      return (cPtr_T_terminalInstruction_forGrammarComponent *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//     GALGAS class 'GGS_T_nonterminalInstruction_forGrammarComponent'       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_T_nonterminalInstruction_forGrammarComponent : public GGS_AC_instruction_ForGrammar {
//--- Default Constructor
  public : GGS_T_nonterminalInstruction_forGrammarComponent (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_T_nonterminalInstruction_forGrammarComponent constructor_new (C_Lexique & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_uint & argument_2 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_T_nonterminalInstruction_forGrammarComponent * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_T_nonterminalInstruction_forGrammarComponent * operator () (LOCATION_ARGS) const {
      return (cPtr_T_nonterminalInstruction_forGrammarComponent *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 list '@L_branchList_ForGrammarComponent'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_branchList_ForGrammarComponent ;

class GGS_L_branchList_ForGrammarComponent {
  public : typedef elementOf_GGS_L_branchList_ForGrammarComponent element_type ;
//--- Embedded class for list root
  protected : class cRootList {
    public : element_type * mFirstItem ;
    public : element_type * mLastItem ;
    public : sint32 mListLength ;
    public : sint32 mCountReference ;
  //--- Default constructor
    public : cRootList (void) ;
  //--- Destructor
    public : ~cRootList (void) ;
  //--- No Copy
    private : cRootList (const cRootList &) ;
    private : void operator = (const cRootList &) ;
  } ;
//--- Private attribute
  private : cRootList * _mRoot ;
//--- Default Constructor
  public : GGS_L_branchList_ForGrammarComponent (void) ;
//--- Copy Constructor
  public : GGS_L_branchList_ForGrammarComponent (const GGS_L_branchList_ForGrammarComponent & inSource) ;
//--- Assignment Operator
  public : void operator = (const GGS_L_branchList_ForGrammarComponent & inSource) ;
//--- Destructor
  public : ~GGS_L_branchList_ForGrammarComponent (void) ;

//--- Constructor 'emptyList'
  public : static GGS_L_branchList_ForGrammarComponent constructor_emptyList (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Function 'count'
  public : sint32 count (void) const ;
//--- Reader 'description'
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- Get first object
  public : element_type * firstObject (void) const ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_L_ruleSyntaxSignature & argument_0) ;
//--- Internal Methods
  protected : void _internalAppendItem (const GGS_L_ruleSyntaxSignature & argument_0) ;
  protected : void _insulateList (void) ;
//--- '_isBuilt' method
  public : inline bool _isBuilt (void) const {
    return _mRoot != NULL ;
  }
//--- Handling GALGAS 'drop' instruction
  public : void _drop_operation (void) ;
//--- Handling GALGAS 'length' reader
  public : GGS_uint reader_length (C_Lexique & /* inLexique */
                                   COMMA_UNUSED_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//        GALGAS class 'GGS_T_selectInstruction_forGrammarComponent'         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_T_selectInstruction_forGrammarComponent : public GGS_AC_instruction_ForGrammar {
//--- Default Constructor
  public : GGS_T_selectInstruction_forGrammarComponent (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_T_selectInstruction_forGrammarComponent constructor_new (C_Lexique & inLexique,
                                const GGS_location & argument_0,
                                const GGS_L_branchList_ForGrammarComponent & argument_1,
                                const GGS_uint & argument_2 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_T_selectInstruction_forGrammarComponent * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_T_selectInstruction_forGrammarComponent * operator () (LOCATION_ARGS) const {
      return (cPtr_T_selectInstruction_forGrammarComponent *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//        GALGAS class 'GGS_T_repeatInstruction_forGrammarComponent'         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_T_repeatInstruction_forGrammarComponent : public GGS_AC_instruction_ForGrammar {
//--- Default Constructor
  public : GGS_T_repeatInstruction_forGrammarComponent (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_T_repeatInstruction_forGrammarComponent constructor_new (C_Lexique & inLexique,
                                const GGS_location & argument_0,
                                const GGS_L_branchList_ForGrammarComponent & argument_1,
                                const GGS_uint & argument_2 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_T_repeatInstruction_forGrammarComponent * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_T_repeatInstruction_forGrammarComponent * operator () (LOCATION_ARGS) const {
      return (cPtr_T_repeatInstruction_forGrammarComponent *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  list '@L_syntaxComponents_ForGrammar'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_syntaxComponents_ForGrammar ;

class GGS_L_syntaxComponents_ForGrammar {
  public : typedef elementOf_GGS_L_syntaxComponents_ForGrammar element_type ;
//--- Embedded class for list root
  protected : class cRootList {
    public : element_type * mFirstItem ;
    public : element_type * mLastItem ;
    public : sint32 mListLength ;
    public : sint32 mCountReference ;
  //--- Default constructor
    public : cRootList (void) ;
  //--- Destructor
    public : ~cRootList (void) ;
  //--- No Copy
    private : cRootList (const cRootList &) ;
    private : void operator = (const cRootList &) ;
  } ;
//--- Private attribute
  private : cRootList * _mRoot ;
//--- Default Constructor
  public : GGS_L_syntaxComponents_ForGrammar (void) ;
//--- Copy Constructor
  public : GGS_L_syntaxComponents_ForGrammar (const GGS_L_syntaxComponents_ForGrammar & inSource) ;
//--- Assignment Operator
  public : void operator = (const GGS_L_syntaxComponents_ForGrammar & inSource) ;
//--- Destructor
  public : ~GGS_L_syntaxComponents_ForGrammar (void) ;

//--- Constructor 'emptyList'
  public : static GGS_L_syntaxComponents_ForGrammar constructor_emptyList (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Function 'count'
  public : sint32 count (void) const ;
//--- Reader 'description'
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- Get first object
  public : element_type * firstObject (void) const ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_M_nonTerminalSymbolsForGrammar & argument_0,
                                const GGS_L_productionRules_ForGrammarComponent & argument_1,
                                const GGS_lstring & argument_2) ;
//--- Internal Methods
  protected : void _internalAppendItem (const GGS_M_nonTerminalSymbolsForGrammar & argument_0,
                                const GGS_L_productionRules_ForGrammarComponent & argument_1,
                                const GGS_lstring & argument_2) ;
  protected : void _insulateList (void) ;
//--- '_isBuilt' method
  public : inline bool _isBuilt (void) const {
    return _mRoot != NULL ;
  }
//--- Handling GALGAS 'drop' instruction
  public : void _drop_operation (void) ;
//--- Handling GALGAS 'length' reader
  public : GGS_uint reader_length (C_Lexique & /* inLexique */
                                   COMMA_UNUSED_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Map '@M_startSymbolEntityAndMetamodel'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_startSymbolEntityAndMetamodel ;

class GGS_M_startSymbolEntityAndMetamodel : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_startSymbolEntityAndMetamodel element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_startSymbolEntityAndMetamodel * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_startSymbolEntityAndMetamodel * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_M_startSymbolEntityAndMetamodel constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lstring &  inParameter0,
                                const GGS_lstring &  inParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lstring   & outParameter0,
                                GGS_lstring   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_lstring & inParameter0,
                                  const GGS_lstring & inParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_lstring & outParameter0,
                                  GGS_lstring & outParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_M_startSymbolEntityAndMetamodel constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_M_startSymbolEntityAndMetamodel & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_startSymbolEntityAndMetamodel reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@L_identifiers'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_identifiers ;

class GGS_L_identifiers {
  public : typedef elementOf_GGS_L_identifiers element_type ;
//--- Embedded class for list root
  protected : class cRootList {
    public : element_type * mFirstItem ;
    public : element_type * mLastItem ;
    public : sint32 mListLength ;
    public : sint32 mCountReference ;
  //--- Default constructor
    public : cRootList (void) ;
  //--- Destructor
    public : ~cRootList (void) ;
  //--- No Copy
    private : cRootList (const cRootList &) ;
    private : void operator = (const cRootList &) ;
  } ;
//--- Private attribute
  private : cRootList * _mRoot ;
//--- Default Constructor
  public : GGS_L_identifiers (void) ;
//--- Copy Constructor
  public : GGS_L_identifiers (const GGS_L_identifiers & inSource) ;
//--- Assignment Operator
  public : void operator = (const GGS_L_identifiers & inSource) ;
//--- Destructor
  public : ~GGS_L_identifiers (void) ;

//--- Constructor 'emptyList'
  public : static GGS_L_identifiers constructor_emptyList (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Function 'count'
  public : sint32 count (void) const ;
//--- Reader 'description'
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- Get first object
  public : element_type * firstObject (void) const ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0) ;
//--- Internal Methods
  protected : void _internalAppendItem (const GGS_lstring & argument_0) ;
  protected : void _insulateList (void) ;
//--- '_isBuilt' method
  public : inline bool _isBuilt (void) const {
    return _mRoot != NULL ;
  }
//--- Handling GALGAS 'drop' instruction
  public : void _drop_operation (void) ;
//--- Handling GALGAS 'length' reader
  public : GGS_uint reader_length (C_Lexique & /* inLexique */
                                   COMMA_UNUSED_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@typeSuperClassesMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeSuperClassesMap ;

class GGS_typeSuperClassesMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeSuperClassesMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_typeSuperClassesMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeSuperClassesMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_typeSuperClassesMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_typeSuperClassesMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_typeSuperClassesMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeSuperClassesMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Map '@typeClassInheritedMessagesMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeClassInheritedMessagesMap ;

class GGS_typeClassInheritedMessagesMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeClassInheritedMessagesMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_typeClassInheritedMessagesMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeClassInheritedMessagesMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_typeClassInheritedMessagesMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_typeClassInheritedMessagesMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_typeClassInheritedMessagesMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeClassInheritedMessagesMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Map '@typeSemanticAttributesMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeSemanticAttributesMap ;

class GGS_typeSemanticAttributesMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeSemanticAttributesMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_typeSemanticAttributesMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeSemanticAttributesMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_typeSemanticAttributesMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_galgasType   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_AC_galgasType & inParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_AC_galgasType & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_typeSemanticAttributesMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_typeSemanticAttributesMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeSemanticAttributesMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@insertOrSearchMethodList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_insertOrSearchMethodList ;

class GGS_insertOrSearchMethodList {
  public : typedef elementOf_GGS_insertOrSearchMethodList element_type ;
//--- Embedded class for list root
  protected : class cRootList {
    public : element_type * mFirstItem ;
    public : element_type * mLastItem ;
    public : sint32 mListLength ;
    public : sint32 mCountReference ;
  //--- Default constructor
    public : cRootList (void) ;
  //--- Destructor
    public : ~cRootList (void) ;
  //--- No Copy
    private : cRootList (const cRootList &) ;
    private : void operator = (const cRootList &) ;
  } ;
//--- Private attribute
  private : cRootList * _mRoot ;
//--- Default Constructor
  public : GGS_insertOrSearchMethodList (void) ;
//--- Copy Constructor
  public : GGS_insertOrSearchMethodList (const GGS_insertOrSearchMethodList & inSource) ;
//--- Assignment Operator
  public : void operator = (const GGS_insertOrSearchMethodList & inSource) ;
//--- Destructor
  public : ~GGS_insertOrSearchMethodList (void) ;

//--- Constructor 'emptyList'
  public : static GGS_insertOrSearchMethodList constructor_emptyList (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Function 'count'
  public : sint32 count (void) const ;
//--- Reader 'description'
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- Get first object
  public : element_type * firstObject (void) const ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_bool& argument_2,
                                const GGS_string& argument_3) ;
//--- Internal Methods
  protected : void _internalAppendItem (const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_bool& argument_2,
                                const GGS_string& argument_3) ;
  protected : void _insulateList (void) ;
//--- '_isBuilt' method
  public : inline bool _isBuilt (void) const {
    return _mRoot != NULL ;
  }
//--- Handling GALGAS 'drop' instruction
  public : void _drop_operation (void) ;
//--- Handling GALGAS 'length' reader
  public : GGS_uint reader_length (C_Lexique & /* inLexique */
                                   COMMA_UNUSED_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeDefEntiteUtilisable'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeDefEntiteUtilisable {
//--- Pointer to actual instance
  protected : cPtr_typeDefEntiteUtilisable * mPointer ;
//--- Default constructor
  public : GGS_typeDefEntiteUtilisable (void) ;
//--- Copy constructor
  public : GGS_typeDefEntiteUtilisable (const GGS_typeDefEntiteUtilisable &) ;
//--- Virtual destructor
  public : virtual ~GGS_typeDefEntiteUtilisable (void) ;
//--- Assignment operator
  public : void operator = (const GGS_typeDefEntiteUtilisable &) ;
//--- _isBuilt
  public : inline bool _isBuilt (void) const { return mPointer != NULL ; }
//--- isEqualTo
  public : inline bool isEqualTo (const GGS_typeDefEntiteUtilisable & _inOperand) const {
    return mPointer == _inOperand.mPointer ;
  }
//--- getPtr
  public : inline cPtr_typeDefEntiteUtilisable * getPtr (void) const {
    return mPointer ;
  }
//--- drop
  public : void _drop_operation (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeDefEntiteUtilisable * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeDefEntiteUtilisable * operator () (LOCATION_ARGS) const {
      return mPointer ;
    }
  #endif
//--- 'messageTypeEntite' message
  public : GGS_string reader_messageTypeEntite (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_typeGalgasUndefinedListType'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedListType : public GGS_AC_galgasType {
//--- Default Constructor
  public : GGS_typeGalgasUndefinedListType (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgasUndefinedListType constructor_new (C_Lexique & inLexique,
                                const GGS_lstring & argument_0 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasUndefinedListType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasUndefinedListType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasUndefinedListType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgasListType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasListType : public GGS_typeGalgasUndefinedListType {
//--- Default Constructor
  public : GGS_typeGalgasListType (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgasListType constructor_new (C_Lexique & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasListType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasListType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasListType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Map '@typeTableBlocsDeTable'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableBlocsDeTable ;

class GGS_typeTableBlocsDeTable : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeTableBlocsDeTable element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_typeTableBlocsDeTable * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeTableBlocsDeTable * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_typeTableBlocsDeTable constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0,
                                const GGS_L_EXsignature &  inParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0,
                                GGS_L_EXsignature   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_L_EXsignature & inParameter0,
                                  const GGS_L_EXsignature & inParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_L_EXsignature & outParameter0,
                                  GGS_L_EXsignature & outParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_typeTableBlocsDeTable constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_typeTableBlocsDeTable & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeTableBlocsDeTable reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_typeGalgasUndefinedMapType'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedMapType : public GGS_AC_galgasType {
//--- Default Constructor
  public : GGS_typeGalgasUndefinedMapType (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgasUndefinedMapType constructor_new (C_Lexique & inLexique,
                                const GGS_lstring & argument_0 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasUndefinedMapType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasUndefinedMapType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasUndefinedMapType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@mapMethodMap'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapMethodMap ;

class GGS_mapMethodMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_mapMethodMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_mapMethodMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_mapMethodMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_mapMethodMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_L_EXsignature & inParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_L_EXsignature & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_mapMethodMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_mapMethodMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_mapMethodMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgasMapType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasMapType : public GGS_typeGalgasUndefinedMapType {
//--- Default Constructor
  public : GGS_typeGalgasMapType (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgasMapType constructor_new (C_Lexique & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_typeTableBlocsDeTable & argument_2,
                                const GGS_mapMethodMap & argument_3,
                                const GGS_mapMethodMap & argument_4 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasMapType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasMapType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasMapType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_typeGalgasUndefinedClassType'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedClassType : public GGS_AC_galgasType {
//--- Default Constructor
  public : GGS_typeGalgasUndefinedClassType (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgasUndefinedClassType constructor_new (C_Lexique & inLexique,
                                const GGS_lstring & argument_0 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasUndefinedClassType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasUndefinedClassType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasUndefinedClassType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeGalgasNewClassType'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasNewClassType : public GGS_typeGalgasUndefinedClassType {
//--- Default Constructor
  public : GGS_typeGalgasNewClassType (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgasNewClassType constructor_new (C_Lexique & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeSuperClassesMap & argument_1 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasNewClassType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasNewClassType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasNewClassType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgasClassType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasClassType : public GGS_typeGalgasUndefinedClassType {
//--- Default Constructor
  public : GGS_typeGalgasClassType (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgasClassType constructor_new (C_Lexique & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeTableMethodes & argument_1,
                                const GGS_typeListeAttributsSemantiques & argument_2,
                                const GGS_typeSuperClassesMap & argument_3,
                                const GGS_typeClassInheritedMessagesMap & argument_4,
                                const GGS_typeSemanticAttributesMap & argument_5,
                                const GGS_bool& argument_6 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasClassType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasClassType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasClassType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeEntiteType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeEntiteType : public GGS_AC_semanticsEntity {
//--- Default Constructor
  public : GGS_typeEntiteType (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeEntiteType constructor_new (C_Lexique & inLexique,
                                const GGS_AC_galgasType & argument_0 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeEntiteType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeEntiteType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeEntiteType *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeEntiteRoutine'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeEntiteRoutine : public GGS_AC_semanticsEntity {
//--- Default Constructor
  public : GGS_typeEntiteRoutine (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeEntiteRoutine constructor_new (C_Lexique & inLexique,
                                const GGS_L_EXsignature & argument_0 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeEntiteRoutine * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeEntiteRoutine * operator () (LOCATION_ARGS) const {
      return (cPtr_typeEntiteRoutine *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_typeGalgas_entityInInstruction'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_entityInInstruction : public GGS_AC_galgasType {
//--- Default Constructor
  public : GGS_typeGalgas_entityInInstruction (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_entityInInstruction constructor_new (C_Lexique & inLexique,
                                const GGS_string& argument_0 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_entityInInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_entityInInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_entityInInstruction *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS class 'GGS_typeGalgas_mapIndexInInstruction'             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_mapIndexInInstruction : public GGS_AC_galgasType {
//--- Default Constructor
  public : GGS_typeGalgas_mapIndexInInstruction (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_mapIndexInInstruction constructor_new (C_Lexique & inLexique,
                                const GGS_string& argument_0 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_mapIndexInInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_mapIndexInInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_mapIndexInInstruction *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS class 'GGS_typeGalgas_mapEntityInInstruction'            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_mapEntityInInstruction : public GGS_AC_galgasType {
//--- Default Constructor
  public : GGS_typeGalgas_mapEntityInInstruction (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_mapEntityInInstruction constructor_new (C_Lexique & inLexique,
                                const GGS_string& argument_0,
                                const GGS_string& argument_1 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_mapEntityInInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_mapEntityInInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_mapEntityInInstruction *) mPointer ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@typeEnumMessageMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeEnumMessageMap ;

class GGS_typeEnumMessageMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeEnumMessageMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_typeEnumMessageMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeEnumMessageMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_typeEnumMessageMap constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_lstringList &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_lstringList   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_L_lstringList & inParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_L_lstringList & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_typeEnumMessageMap constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_typeEnumMessageMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeEnumMessageMap reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_enum'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_enum : public GGS_AC_galgasType {
//--- Default Constructor
  public : GGS_typeGalgas_enum (void) ;
//--- 'description' reader
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- 'new' constructor
  public : static GGS_typeGalgas_enum constructor_new (C_Lexique & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_enumConstantMap & argument_1,
                                const GGS_typeEnumMessageMap & argument_2 COMMA_LOCATION_ARGS) ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_enum * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_enum * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_enum *) mPointer ;
    }
  #endif
} ;

void routine_checkAssignmentTypesCompatibility (C_Lexique &,
                                const GGS_AC_galgasType  &,
                                const GGS_AC_galgasType  &,
                                const GGS_location  &,
                                const GGS_bool & COMMA_LOCATION_ARGS) ;

void routine_verifierCompatibiliteSignatures (C_Lexique &,
                                const GGS_L_EXsignature  &,
                                const GGS_L_EXsignature  &,
                                const GGS_location  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@M_cli_options'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_cli_options ;

class GGS_M_cli_options : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_cli_options element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_cli_options * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_cli_options * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_M_cli_options constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lchar &  inParameter0,
                                const GGS_lstring &  inParameter1,
                                const GGS_lstring &  inParameter2,
                                const GGS_uint &  inParameter3 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lchar   & outParameter0,
                                GGS_lstring   & outParameter1,
                                GGS_lstring   & outParameter2,
                                GGS_uint   & outParameter3 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_lchar & inParameter0,
                                  const GGS_lstring & inParameter1,
                                  const GGS_lstring & inParameter2,
                                  const GGS_uint & inParameter3,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_lchar & outParameter0,
                                  GGS_lstring & outParameter1,
                                  GGS_lstring & outParameter2,
                                  GGS_uint & outParameter3,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_M_cli_options constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_M_cli_options & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_cli_options reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@M_optionComponents'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_optionComponents ;

class GGS_M_optionComponents : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_optionComponents element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_optionComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_optionComponents * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_M_optionComponents constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_cli_options &  inParameter0,
                                const GGS_M_cli_options &  inParameter1,
                                const GGS_M_cli_options &  inParameter2 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_cli_options   & outParameter0,
                                GGS_M_cli_options   & outParameter1,
                                GGS_M_cli_options   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_M_cli_options & inParameter0,
                                  const GGS_M_cli_options & inParameter1,
                                  const GGS_M_cli_options & inParameter2,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_M_cli_options & outParameter0,
                                  GGS_M_cli_options & outParameter1,
                                  GGS_M_cli_options & outParameter2,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_M_optionComponents constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_M_optionComponents & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_optionComponents reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@M_grammarComponents'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_grammarComponents ;

class GGS_M_grammarComponents : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_grammarComponents element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_grammarComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_grammarComponents * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_M_grammarComponents constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_nonterminalSymbolAltsForGrammar &  inParameter0,
                                const GGS_lstring &  inParameter1,
                                const GGS_M_optionComponents &  inParameter2 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_nonterminalSymbolAltsForGrammar   & outParameter0,
                                GGS_lstring   & outParameter1,
                                GGS_M_optionComponents   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_M_nonterminalSymbolAltsForGrammar & inParameter0,
                                  const GGS_lstring & inParameter1,
                                  const GGS_M_optionComponents & inParameter2,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_M_nonterminalSymbolAltsForGrammar & outParameter0,
                                  GGS_lstring & outParameter1,
                                  GGS_M_optionComponents & outParameter2,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_M_grammarComponents constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_M_grammarComponents & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_grammarComponents reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Map '@M_semanticsComponents'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_semanticsComponents ;

class GGS_M_semanticsComponents : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_semanticsComponents element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_semanticsComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_semanticsComponents * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_M_semanticsComponents constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_ModelMap &  inParameter0,
                                const GGS_ActionMap &  inParameter1,
                                const GGS_stringset &  inParameter2,
                                const GGS_stringset &  inParameter3,
                                const GGS_stringset &  inParameter4,
                                const GGS_M_optionComponents &  inParameter5,
                                const GGS_M_semanticsEntitiesForUse &  inParameter6 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_ModelMap   & outParameter0,
                                GGS_ActionMap   & outParameter1,
                                GGS_stringset   & outParameter2,
                                GGS_stringset   & outParameter3,
                                GGS_stringset   & outParameter4,
                                GGS_M_optionComponents   & outParameter5,
                                GGS_M_semanticsEntitiesForUse   & outParameter6 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_ModelMap & inParameter0,
                                  const GGS_ActionMap & inParameter1,
                                  const GGS_stringset & inParameter2,
                                  const GGS_stringset & inParameter3,
                                  const GGS_stringset & inParameter4,
                                  const GGS_M_optionComponents & inParameter5,
                                  const GGS_M_semanticsEntitiesForUse & inParameter6,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_ModelMap & outParameter0,
                                  GGS_ActionMap & outParameter1,
                                  GGS_stringset & outParameter2,
                                  GGS_stringset & outParameter3,
                                  GGS_stringset & outParameter4,
                                  GGS_M_optionComponents & outParameter5,
                                  GGS_M_semanticsEntitiesForUse & outParameter6,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_M_semanticsComponents constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_M_semanticsComponents & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_semanticsComponents reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Map '@M_metamodelsComponents'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_metamodelsComponents ;

class GGS_M_metamodelsComponents : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_metamodelsComponents element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_metamodelsComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_metamodelsComponents * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_M_metamodelsComponents constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lstring &  inParameter0,
                                const GGS_M_semanticsEntitiesForUse &  inParameter1,
                                const GGS_entityToImplementMap &  inParameter2,
                                const GGS_stringset &  inParameter3 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lstring   & outParameter0,
                                GGS_M_semanticsEntitiesForUse   & outParameter1,
                                GGS_entityToImplementMap   & outParameter2,
                                GGS_stringset   & outParameter3 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_lstring & inParameter0,
                                  const GGS_M_semanticsEntitiesForUse & inParameter1,
                                  const GGS_entityToImplementMap & inParameter2,
                                  const GGS_stringset & inParameter3,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_lstring & outParameter0,
                                  GGS_M_semanticsEntitiesForUse & outParameter1,
                                  GGS_entityToImplementMap & outParameter2,
                                  GGS_stringset & outParameter3,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_M_metamodelsComponents constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_M_metamodelsComponents & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_metamodelsComponents reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Map '@M_constraintComponents'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_constraintComponents ;

class GGS_M_constraintComponents : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_constraintComponents element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) internalRootObject () ; }
  public : inline element_type * firstObject (void) const { return (element_type *) internalFirstObject () ; }
  public : inline element_type * lastObject (void) const { return (element_type *) internalLastObject () ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_constraintComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_constraintComponents * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
//--- 'emptyMap' constructor
  public : static GGS_M_constraintComponents constructor_emptyMap (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void method_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lstring &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lstring   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_lstring & inParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_lstring & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
  public : static GGS_M_constraintComponents constructor_mapWithMapToOverride (C_Lexique & inLexique,
                                            const GGS_M_constraintComponents & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_constraintComponents reader_overriddenMap (C_Lexique & inLexique
                                            COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@typeListeAttributsAxiome'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListeAttributsAxiome ;

class GGS_typeListeAttributsAxiome {
  public : typedef elementOf_GGS_typeListeAttributsAxiome element_type ;
//--- Embedded class for list root
  protected : class cRootList {
    public : element_type * mFirstItem ;
    public : element_type * mLastItem ;
    public : sint32 mListLength ;
    public : sint32 mCountReference ;
  //--- Default constructor
    public : cRootList (void) ;
  //--- Destructor
    public : ~cRootList (void) ;
  //--- No Copy
    private : cRootList (const cRootList &) ;
    private : void operator = (const cRootList &) ;
  } ;
//--- Private attribute
  private : cRootList * _mRoot ;
//--- Default Constructor
  public : GGS_typeListeAttributsAxiome (void) ;
//--- Copy Constructor
  public : GGS_typeListeAttributsAxiome (const GGS_typeListeAttributsAxiome & inSource) ;
//--- Assignment Operator
  public : void operator = (const GGS_typeListeAttributsAxiome & inSource) ;
//--- Destructor
  public : ~GGS_typeListeAttributsAxiome (void) ;

//--- Constructor 'emptyList'
  public : static GGS_typeListeAttributsAxiome constructor_emptyList (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Function 'count'
  public : sint32 count (void) const ;
//--- Reader 'description'
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- Get first object
  public : element_type * firstObject (void) const ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0) ;
//--- Internal Methods
  protected : void _internalAppendItem (const GGS_lstring & argument_0) ;
  protected : void _insulateList (void) ;
//--- '_isBuilt' method
  public : inline bool _isBuilt (void) const {
    return _mRoot != NULL ;
  }
//--- Handling GALGAS 'drop' instruction
  public : void _drop_operation (void) ;
//--- Handling GALGAS 'length' reader
  public : GGS_uint reader_length (C_Lexique & /* inLexique */
                                   COMMA_UNUSED_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  list '@L_grammarDescriptorForProgram'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_grammarDescriptorForProgram ;

class GGS_L_grammarDescriptorForProgram {
  public : typedef elementOf_GGS_L_grammarDescriptorForProgram element_type ;
//--- Embedded class for list root
  protected : class cRootList {
    public : element_type * mFirstItem ;
    public : element_type * mLastItem ;
    public : sint32 mListLength ;
    public : sint32 mCountReference ;
  //--- Default constructor
    public : cRootList (void) ;
  //--- Destructor
    public : ~cRootList (void) ;
  //--- No Copy
    private : cRootList (const cRootList &) ;
    private : void operator = (const cRootList &) ;
  } ;
//--- Private attribute
  private : cRootList * _mRoot ;
//--- Default Constructor
  public : GGS_L_grammarDescriptorForProgram (void) ;
//--- Copy Constructor
  public : GGS_L_grammarDescriptorForProgram (const GGS_L_grammarDescriptorForProgram & inSource) ;
//--- Assignment Operator
  public : void operator = (const GGS_L_grammarDescriptorForProgram & inSource) ;
//--- Destructor
  public : ~GGS_L_grammarDescriptorForProgram (void) ;

//--- Constructor 'emptyList'
  public : static GGS_L_grammarDescriptorForProgram constructor_emptyList (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Function 'count'
  public : sint32 count (void) const ;
//--- Reader 'description'
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- Get first object
  public : element_type * firstObject (void) const ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_string& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_L_signature & argument_2,
                                const GGS_typeListeAttributsAxiome & argument_3,
                                const GGS_lstring & argument_4,
                                const GGS_lstring & argument_5,
                                const GGS_lstring & argument_6,
                                const GGS_L_lstringList & argument_7) ;
//--- Internal Methods
  protected : void _internalAppendItem (const GGS_string& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_L_signature & argument_2,
                                const GGS_typeListeAttributsAxiome & argument_3,
                                const GGS_lstring & argument_4,
                                const GGS_lstring & argument_5,
                                const GGS_lstring & argument_6,
                                const GGS_L_lstringList & argument_7) ;
  protected : void _insulateList (void) ;
//--- '_isBuilt' method
  public : inline bool _isBuilt (void) const {
    return _mRoot != NULL ;
  }
//--- Handling GALGAS 'drop' instruction
  public : void _drop_operation (void) ;
//--- Handling GALGAS 'length' reader
  public : GGS_uint reader_length (C_Lexique & /* inLexique */
                                   COMMA_UNUSED_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@L_nibAndClassList'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_nibAndClassList ;

class GGS_L_nibAndClassList {
  public : typedef elementOf_GGS_L_nibAndClassList element_type ;
//--- Embedded class for list root
  protected : class cRootList {
    public : element_type * mFirstItem ;
    public : element_type * mLastItem ;
    public : sint32 mListLength ;
    public : sint32 mCountReference ;
  //--- Default constructor
    public : cRootList (void) ;
  //--- Destructor
    public : ~cRootList (void) ;
  //--- No Copy
    private : cRootList (const cRootList &) ;
    private : void operator = (const cRootList &) ;
  } ;
//--- Private attribute
  private : cRootList * _mRoot ;
//--- Default Constructor
  public : GGS_L_nibAndClassList (void) ;
//--- Copy Constructor
  public : GGS_L_nibAndClassList (const GGS_L_nibAndClassList & inSource) ;
//--- Assignment Operator
  public : void operator = (const GGS_L_nibAndClassList & inSource) ;
//--- Destructor
  public : ~GGS_L_nibAndClassList (void) ;

//--- Constructor 'emptyList'
  public : static GGS_L_nibAndClassList constructor_emptyList (C_Lexique & inLexique COMMA_LOCATION_ARGS) ;
//--- Function 'count'
  public : sint32 count (void) const ;
//--- Reader 'description'
  public : GGS_string reader_description (C_Lexique & _inLexique COMMA_LOCATION_ARGS) const ;
//--- Get first object
  public : element_type * firstObject (void) const ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0) ;
//--- Internal Methods
  protected : void _internalAppendItem (const GGS_lstring & argument_0) ;
  protected : void _insulateList (void) ;
//--- '_isBuilt' method
  public : inline bool _isBuilt (void) const {
    return _mRoot != NULL ;
  }
//--- Handling GALGAS 'drop' instruction
  public : void _drop_operation (void) ;
//--- Handling GALGAS 'length' reader
  public : GGS_uint reader_length (C_Lexique & /* inLexique */
                                   COMMA_UNUSED_LOCATION_ARGS) const ;
} ;

void routine_handleReaderCall (C_Lexique &,
                                const GGS_AC_galgasType  &,
                                const GGS_lstring  &,
                                GGS_typeListeAttributsSemantiques  &,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

void routine_check_KL_escapeCharacters (C_Lexique &,
                                GGS_lstring   COMMA_LOCATION_ARGS) ;

void routine_check_K_escapeCharacters (C_Lexique &,
                                GGS_lstring   COMMA_LOCATION_ARGS) ;

void routine_importSemanticsComponent (C_Lexique &,
                                GGS_M_semanticsComponents  &,
                                GGS_M_metamodelsComponents  &,
                                GGS_ModelMap  &,
                                GGS_ActionMap  &,
                                GGS_stringset  &,
                                GGS_stringset  &,
                                GGS_lstring   COMMA_LOCATION_ARGS) ;

void routine_computeRepresentativeEntityName (C_Lexique &,
                                const GGS_entityToImplementMap  &,
                                const GGS_entityToImplementMap  &,
                                const GGS_lstring  &,
                                GGS_lstring  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@L_lstringList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_lstringList {
  private : elementOf_GGS_L_lstringList * mNextItem ;
    public : GGS_lstring  mString ;
  public : elementOf_GGS_L_lstringList (const GGS_lstring & ) ;

  public : inline elementOf_GGS_L_lstringList * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_lstringList (const elementOf_GGS_L_lstringList &) ;
  private : void operator = (const elementOf_GGS_L_lstringList &) ;
  public : inline ~elementOf_GGS_L_lstringList (void) {}
  public : void appendForListDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
  friend class GGS_L_lstringList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of list '@L_signature'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_signature {
  private : elementOf_GGS_L_signature * mNextItem ;
    public : GGS_formalArgumentPassingMode mFormalArgumentPassingMode ;
    public : GGS_lstring  mGalgasTypeName ;
  public : elementOf_GGS_L_signature (const GGS_formalArgumentPassingMode& ,
                                const GGS_lstring & ) ;

  public : inline elementOf_GGS_L_signature * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_signature (const elementOf_GGS_L_signature &) ;
  private : void operator = (const elementOf_GGS_L_signature &) ;
  public : inline ~elementOf_GGS_L_signature (void) {}
  public : void appendForListDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
  friend class GGS_L_signature ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@typeListModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListModel {
  private : elementOf_GGS_typeListModel * mNextItem ;
    public : GGS_lstring  mTypeName ;
  public : elementOf_GGS_typeListModel (const GGS_lstring & ) ;

  public : inline elementOf_GGS_typeListModel * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_typeListModel (const elementOf_GGS_typeListModel &) ;
  private : void operator = (const elementOf_GGS_typeListModel &) ;
  public : inline ~elementOf_GGS_typeListModel (void) {}
  public : void appendForListDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
  friend class GGS_typeListModel ;
} ;

//---------------------------------------------------------------------------*

#include "include_TypeModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                            class 'BoolModel'                              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_BoolModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                            class 'CharModel'                              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_CharModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                            class 'UIntModel'                              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_UIntModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                            class 'SIntModel'                              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_SIntModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                           class 'UInt64Model'                             *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_UInt64Model.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                           class 'SInt64Model'                             *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_SInt64Model.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                           class 'DoubleModel'                             *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_DoubleModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                           class 'StringModel'                             *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_StringModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                            class 'LBoolModel'                             *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_LBoolModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                            class 'LCharModel'                             *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_LCharModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                            class 'LUIntModel'                             *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_LUIntModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                            class 'LSIntModel'                             *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_LSIntModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                           class 'LUInt64Model'                            *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_LUInt64Model.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                           class 'LSInt64Model'                            *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_LSInt64Model.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                           class 'LDoubleModel'                            *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_LDoubleModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                           class 'LStringModel'                            *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_LStringModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                          class 'StringsetModel'                           *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_StringsetModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                          class 'LocationModel'                            *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_LocationModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                            class 'ListModel'                              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_ListModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                             class 'MapModel'                              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_MapModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@enumConstantMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_enumConstantMap {
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_enumConstantMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_enumConstantMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_enumConstantMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_enumConstantMap * nextObject (void) const { return (elementOf_GGS_enumConstantMap *) mNextItem ; }
  public : inline elementOf_GGS_enumConstantMap * infObject (void) const { return (elementOf_GGS_enumConstantMap *) mInfPtr ; }
  public : inline elementOf_GGS_enumConstantMap * supObject (void) const { return (elementOf_GGS_enumConstantMap *) mSupPtr ; }
//--- Data member
  public : e_enumConstantMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@enumMessageMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_enumMessageMap {
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_enumMessageMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_enumMessageMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_enumMessageMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_enumMessageMap * nextObject (void) const { return (elementOf_GGS_enumMessageMap *) mNextItem ; }
  public : inline elementOf_GGS_enumMessageMap * infObject (void) const { return (elementOf_GGS_enumMessageMap *) mInfPtr ; }
  public : inline elementOf_GGS_enumMessageMap * supObject (void) const { return (elementOf_GGS_enumMessageMap *) mSupPtr ; }
//--- Data member
  public : e_enumMessageMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            class 'EnumModel'                              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_EnumModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@constructorMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_constructorMap {
  public : GGS_typeListModel  mFormalInputArgumentList ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_constructorMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_constructorMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_constructorMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_constructorMap * nextObject (void) const { return (elementOf_GGS_constructorMap *) mNextItem ; }
  public : inline elementOf_GGS_constructorMap * infObject (void) const { return (elementOf_GGS_constructorMap *) mInfPtr ; }
  public : inline elementOf_GGS_constructorMap * supObject (void) const { return (elementOf_GGS_constructorMap *) mSupPtr ; }
//--- Data member
  public : e_constructorMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of map '@readerMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class e_readerMap {
  public : GGS_L_signature  mReaderFormalArgumentList ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_readerMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_readerMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_readerMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_readerMap * nextObject (void) const { return (elementOf_GGS_readerMap *) mNextItem ; }
  public : inline elementOf_GGS_readerMap * infObject (void) const { return (elementOf_GGS_readerMap *) mInfPtr ; }
  public : inline elementOf_GGS_readerMap * supObject (void) const { return (elementOf_GGS_readerMap *) mSupPtr ; }
//--- Data member
  public : e_readerMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@modifierMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class e_modifierMap {
  public : GGS_L_signature  mModifierFormalArgumentList ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_modifierMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_modifierMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_modifierMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_modifierMap * nextObject (void) const { return (elementOf_GGS_modifierMap *) mNextItem ; }
  public : inline elementOf_GGS_modifierMap * infObject (void) const { return (elementOf_GGS_modifierMap *) mInfPtr ; }
  public : inline elementOf_GGS_modifierMap * supObject (void) const { return (elementOf_GGS_modifierMap *) mSupPtr ; }
//--- Data member
  public : e_modifierMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'ExternTypeModel'                           *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_ExternTypeModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@classMessageMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_classMessageMap {
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_classMessageMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_classMessageMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_classMessageMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_classMessageMap * nextObject (void) const { return (elementOf_GGS_classMessageMap *) mNextItem ; }
  public : inline elementOf_GGS_classMessageMap * infObject (void) const { return (elementOf_GGS_classMessageMap *) mInfPtr ; }
  public : inline elementOf_GGS_classMessageMap * supObject (void) const { return (elementOf_GGS_classMessageMap *) mSupPtr ; }
//--- Data member
  public : e_classMessageMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            class 'ClassModel'                             *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_ClassModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                        Element of map '@ModelMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class e_ModelMap {
  public : GGS_TypeModel  mType ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_ModelMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_ModelMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_ModelMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_ModelMap * nextObject (void) const { return (elementOf_GGS_ModelMap *) mNextItem ; }
  public : inline elementOf_GGS_ModelMap * infObject (void) const { return (elementOf_GGS_ModelMap *) mInfPtr ; }
  public : inline elementOf_GGS_ModelMap * supObject (void) const { return (elementOf_GGS_ModelMap *) mSupPtr ; }
//--- Data member
  public : e_ModelMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of map '@ActionMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class e_ActionMap {
  public : GGS_L_signature  mSignature ;
  public : GGS_bool mIsExtern ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_ActionMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_ActionMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_ActionMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_ActionMap * nextObject (void) const { return (elementOf_GGS_ActionMap *) mNextItem ; }
  public : inline elementOf_GGS_ActionMap * infObject (void) const { return (elementOf_GGS_ActionMap *) mInfPtr ; }
  public : inline elementOf_GGS_ActionMap * supObject (void) const { return (elementOf_GGS_ActionMap *) mSupPtr ; }
//--- Data member
  public : e_ActionMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_AC_galgasType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@L_propertyPath'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_propertyPath {
  private : elementOf_GGS_L_propertyPath * mNextItem ;
    public : GGS_lstring  mPathElement ;
  public : elementOf_GGS_L_propertyPath (const GGS_lstring & ) ;

  public : inline elementOf_GGS_L_propertyPath * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_propertyPath (const elementOf_GGS_L_propertyPath &) ;
  private : void operator = (const elementOf_GGS_L_propertyPath &) ;
  public : inline ~elementOf_GGS_L_propertyPath (void) {}
  public : void appendForListDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
  friend class GGS_L_propertyPath ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@L_ListOfPropertyPathes'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_ListOfPropertyPathes {
  private : elementOf_GGS_L_ListOfPropertyPathes * mNextItem ;
    public : GGS_L_propertyPath  mPath ;
    public : GGS_location  mEndOfPathLocation ;
  public : elementOf_GGS_L_ListOfPropertyPathes (const GGS_L_propertyPath & ,
                                const GGS_location & ) ;

  public : inline elementOf_GGS_L_ListOfPropertyPathes * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_ListOfPropertyPathes (const elementOf_GGS_L_ListOfPropertyPathes &) ;
  private : void operator = (const elementOf_GGS_L_ListOfPropertyPathes &) ;
  public : inline ~elementOf_GGS_L_ListOfPropertyPathes (void) {}
  public : void appendForListDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
  friend class GGS_L_ListOfPropertyPathes ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@entityPropertyMap'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_entityPropertyMap {
  public : GGS_metamodelPropertyKind mKind ;
  public : GGS_lstring  mTypeName ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_entityPropertyMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_entityPropertyMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_entityPropertyMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_entityPropertyMap * nextObject (void) const { return (elementOf_GGS_entityPropertyMap *) mNextItem ; }
  public : inline elementOf_GGS_entityPropertyMap * infObject (void) const { return (elementOf_GGS_entityPropertyMap *) mInfPtr ; }
  public : inline elementOf_GGS_entityPropertyMap * supObject (void) const { return (elementOf_GGS_entityPropertyMap *) mSupPtr ; }
//--- Data member
  public : e_entityPropertyMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@contextPropertyMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_contextPropertyMap {
  public : GGS_lstring  mTypeName ;
  public : GGS_bool mIsMap ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_contextPropertyMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_contextPropertyMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_contextPropertyMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_contextPropertyMap * nextObject (void) const { return (elementOf_GGS_contextPropertyMap *) mNextItem ; }
  public : inline elementOf_GGS_contextPropertyMap * infObject (void) const { return (elementOf_GGS_contextPropertyMap *) mInfPtr ; }
  public : inline elementOf_GGS_contextPropertyMap * supObject (void) const { return (elementOf_GGS_contextPropertyMap *) mSupPtr ; }
//--- Data member
  public : e_contextPropertyMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@contextParameterMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_contextParameterMap {
  public : GGS_L_lstringList  mContextParameterList ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_contextParameterMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_contextParameterMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_contextParameterMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_contextParameterMap * nextObject (void) const { return (elementOf_GGS_contextParameterMap *) mNextItem ; }
  public : inline elementOf_GGS_contextParameterMap * infObject (void) const { return (elementOf_GGS_contextParameterMap *) mInfPtr ; }
  public : inline elementOf_GGS_contextParameterMap * supObject (void) const { return (elementOf_GGS_contextParameterMap *) mSupPtr ; }
//--- Data member
  public : e_contextParameterMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@mapPropertyMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_mapPropertyMap {
  public : GGS_lstring  mTypeName ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_mapPropertyMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_mapPropertyMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_mapPropertyMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_mapPropertyMap * nextObject (void) const { return (elementOf_GGS_mapPropertyMap *) mNextItem ; }
  public : inline elementOf_GGS_mapPropertyMap * infObject (void) const { return (elementOf_GGS_mapPropertyMap *) mInfPtr ; }
  public : inline elementOf_GGS_mapPropertyMap * supObject (void) const { return (elementOf_GGS_mapPropertyMap *) mSupPtr ; }
//--- Data member
  public : e_mapPropertyMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@insertionMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_insertionMap {
  public : GGS_lstring  mIndexName ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_insertionMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_insertionMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_insertionMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_insertionMap * nextObject (void) const { return (elementOf_GGS_insertionMap *) mNextItem ; }
  public : inline elementOf_GGS_insertionMap * infObject (void) const { return (elementOf_GGS_insertionMap *) mInfPtr ; }
  public : inline elementOf_GGS_insertionMap * supObject (void) const { return (elementOf_GGS_insertionMap *) mSupPtr ; }
//--- Data member
  public : e_insertionMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@relationVarMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_relationVarMap {
  public : GGS_lstring  mDomainVariableName ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_relationVarMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_relationVarMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_relationVarMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_relationVarMap * nextObject (void) const { return (elementOf_GGS_relationVarMap *) mNextItem ; }
  public : inline elementOf_GGS_relationVarMap * infObject (void) const { return (elementOf_GGS_relationVarMap *) mInfPtr ; }
  public : inline elementOf_GGS_relationVarMap * supObject (void) const { return (elementOf_GGS_relationVarMap *) mSupPtr ; }
//--- Data member
  public : e_relationVarMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_metamodelRelationExpression.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                       class 'metamodelRelationAnd'                        *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_metamodelRelationAnd.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                       class 'metamodelRelationOr'                         *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_metamodelRelationOr.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                       class 'metamodelRelationNot'                        *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_metamodelRelationNot.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                      class 'metamodelRelationTrue'                        *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_metamodelRelationTrue.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                      class 'metamodelRelationFalse'                       *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_metamodelRelationFalse.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                     class 'metamodelRelationPrimary'                      *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_metamodelRelationPrimary.h"

//---------------------------------------------------------------------------*
//                                                                           *
//            Element of list '@metamodelRelationParameterList'              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_metamodelRelationParameterList {
  private : elementOf_GGS_metamodelRelationParameterList * mNextItem ;
    public : GGS_lstring  mParameter ;
    public : GGS_luint  mParameterIndex ;
    public : GGS_lstring  mDomainVariable ;
  public : elementOf_GGS_metamodelRelationParameterList (const GGS_lstring & ,
                                const GGS_luint & ,
                                const GGS_lstring & ) ;

  public : inline elementOf_GGS_metamodelRelationParameterList * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_metamodelRelationParameterList (const elementOf_GGS_metamodelRelationParameterList &) ;
  private : void operator = (const elementOf_GGS_metamodelRelationParameterList &) ;
  public : inline ~elementOf_GGS_metamodelRelationParameterList (void) {}
  public : void appendForListDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
  friend class GGS_metamodelRelationParameterList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       class 'metamodelRelationDo'                         *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_metamodelRelationDo.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@relationMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class e_relationMap {
  public : GGS_relationVarMap  mRelationVarMap ;
  public : GGS_metamodelRelationExpression  mExpression ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_relationMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_relationMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_relationMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_relationMap * nextObject (void) const { return (elementOf_GGS_relationMap *) mNextItem ; }
  public : inline elementOf_GGS_relationMap * infObject (void) const { return (elementOf_GGS_relationMap *) mInfPtr ; }
  public : inline elementOf_GGS_relationMap * supObject (void) const { return (elementOf_GGS_relationMap *) mSupPtr ; }
//--- Data member
  public : e_relationMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@mapEntityMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_mapEntityMap {
  public : GGS_lstring  mElementEntityName ;
  public : GGS_lstring  mInsertErrorMessage ;
  public : GGS_lstring  mSearchErrorMessage ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_mapEntityMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_mapEntityMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_mapEntityMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_mapEntityMap * nextObject (void) const { return (elementOf_GGS_mapEntityMap *) mNextItem ; }
  public : inline elementOf_GGS_mapEntityMap * infObject (void) const { return (elementOf_GGS_mapEntityMap *) mInfPtr ; }
  public : inline elementOf_GGS_mapEntityMap * supObject (void) const { return (elementOf_GGS_mapEntityMap *) mSupPtr ; }
//--- Data member
  public : e_mapEntityMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of map '@mapAndEntityUniqueMap'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_mapAndEntityUniqueMap {
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_mapAndEntityUniqueMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_mapAndEntityUniqueMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_mapAndEntityUniqueMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_mapAndEntityUniqueMap * nextObject (void) const { return (elementOf_GGS_mapAndEntityUniqueMap *) mNextItem ; }
  public : inline elementOf_GGS_mapAndEntityUniqueMap * infObject (void) const { return (elementOf_GGS_mapAndEntityUniqueMap *) mInfPtr ; }
  public : inline elementOf_GGS_mapAndEntityUniqueMap * supObject (void) const { return (elementOf_GGS_mapAndEntityUniqueMap *) mSupPtr ; }
//--- Data member
  public : e_mapAndEntityUniqueMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@entityToImplementMap'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_entityToImplementMap {
  public : GGS_entityPropertyMap  mAllPropertiesMap ;
  public : GGS_bool mIsAbstract ;
  public : GGS_entityPropertyMap  mEntityPropertiesMap ;
  public : GGS_lstring  mSuperEntityName ;
  public : GGS_stringset  mSuperClassSet ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_entityToImplementMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_entityToImplementMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_entityToImplementMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_entityToImplementMap * nextObject (void) const { return (elementOf_GGS_entityToImplementMap *) mNextItem ; }
  public : inline elementOf_GGS_entityToImplementMap * infObject (void) const { return (elementOf_GGS_entityToImplementMap *) mInfPtr ; }
  public : inline elementOf_GGS_entityToImplementMap * supObject (void) const { return (elementOf_GGS_entityToImplementMap *) mSupPtr ; }
//--- Data member
  public : e_entityToImplementMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     class 'typeGalgas_singleEntity'                       *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_singleEntity.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    class 'typeGalgas_multipleEntity'                      *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_multipleEntity.h"

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@typeListeAttributsSemantiques'              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListeAttributsSemantiques {
  private : elementOf_GGS_typeListeAttributsSemantiques * mNextItem ;
    public : GGS_AC_galgasType  mAttributType ;
    public : GGS_lstring  aNomAttribut ;
  public : elementOf_GGS_typeListeAttributsSemantiques (const GGS_AC_galgasType & ,
                                const GGS_lstring & ) ;

  public : inline elementOf_GGS_typeListeAttributsSemantiques * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_typeListeAttributsSemantiques (const elementOf_GGS_typeListeAttributsSemantiques &) ;
  private : void operator = (const elementOf_GGS_typeListeAttributsSemantiques &) ;
  public : inline ~elementOf_GGS_typeListeAttributsSemantiques (void) {}
  public : void appendForListDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
  friend class GGS_typeListeAttributsSemantiques ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@typeTypesList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTypesList {
  private : elementOf_GGS_typeTypesList * mNextItem ;
    public : GGS_AC_galgasType  mType ;
    public : GGS_location  mEndOfExpressionLocation ;
  public : elementOf_GGS_typeTypesList (const GGS_AC_galgasType & ,
                                const GGS_location & ) ;

  public : inline elementOf_GGS_typeTypesList * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_typeTypesList (const elementOf_GGS_typeTypesList &) ;
  private : void operator = (const elementOf_GGS_typeTypesList &) ;
  public : inline ~elementOf_GGS_typeTypesList (void) {}
  public : void appendForListDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
  friend class GGS_typeTypesList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@L_EXsignature'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_EXsignature {
  private : elementOf_GGS_L_EXsignature * mNextItem ;
    public : GGS_AC_galgasType  mType ;
    public : GGS_formalArgumentPassingMode mFormalArgumentPassingMode ;
  public : elementOf_GGS_L_EXsignature (const GGS_AC_galgasType & ,
                                const GGS_formalArgumentPassingMode& ) ;

  public : inline elementOf_GGS_L_EXsignature * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_EXsignature (const elementOf_GGS_L_EXsignature &) ;
  private : void operator = (const elementOf_GGS_L_EXsignature &) ;
  public : inline ~elementOf_GGS_L_EXsignature (void) {}
  public : void appendForListDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
  friend class GGS_L_EXsignature ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@L_actualParametersSignature'               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_actualParametersSignature {
  private : elementOf_GGS_L_actualParametersSignature * mNextItem ;
    public : GGS_AC_galgasType  mType ;
    public : GGS_actualParametersPassingMode mFormalArgumentPassingMode ;
  public : elementOf_GGS_L_actualParametersSignature (const GGS_AC_galgasType & ,
                                const GGS_actualParametersPassingMode& ) ;

  public : inline elementOf_GGS_L_actualParametersSignature * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_actualParametersSignature (const elementOf_GGS_L_actualParametersSignature &) ;
  private : void operator = (const elementOf_GGS_L_actualParametersSignature &) ;
  public : inline ~elementOf_GGS_L_actualParametersSignature (void) {}
  public : void appendForListDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
  friend class GGS_L_actualParametersSignature ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@M_accessors_map'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_accessors_map {
  public : GGS_L_EXsignature  mAccessorSignature ;
  public : GGS_AC_galgasType  mReturnedType ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_accessors_map : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_accessors_map (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_accessors_map & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_accessors_map * nextObject (void) const { return (elementOf_GGS_M_accessors_map *) mNextItem ; }
  public : inline elementOf_GGS_M_accessors_map * infObject (void) const { return (elementOf_GGS_M_accessors_map *) mInfPtr ; }
  public : inline elementOf_GGS_M_accessors_map * supObject (void) const { return (elementOf_GGS_M_accessors_map *) mSupPtr ; }
//--- Data member
  public : e_M_accessors_map mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@L_stringList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_stringList {
  private : elementOf_GGS_L_stringList * mNextItem ;
    public : GGS_string mErrorMessageElement ;
  public : elementOf_GGS_L_stringList (const GGS_string& ) ;

  public : inline elementOf_GGS_L_stringList * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_stringList (const elementOf_GGS_L_stringList &) ;
  private : void operator = (const elementOf_GGS_L_stringList &) ;
  public : inline ~elementOf_GGS_L_stringList (void) {}
  public : void appendForListDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
  friend class GGS_L_stringList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 class 'typeGalgas_jokerInParameterList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_jokerInParameterList.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'typeGalgas_bool'                           *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_bool.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeGalgas_string'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_string.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'typeGalgas_sint'                           *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_sint.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeGalgas_sint64'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_sint64.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'typeGalgas_uint'                           *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_uint.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeGalgas_uint64'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_uint64.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'typeGalgas_char'                           *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_char.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeGalgas_double'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_double.h"

//---------------------------------------------------------------------------*

#include "include_C_galgasPrimitiveType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                       class 'typeGalgas_location'                         *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_location.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeGalgas_lstring'                         *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_lstring.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'typeGalgas_lchar'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_lchar.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'typeGalgas_lbool'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_lbool.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'typeGalgas_luint'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_luint.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeGalgas_luint64'                         *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_luint64.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'typeGalgas_lsint'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_lsint.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeGalgas_lsint64'                         *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_lsint64.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeGalgas_ldouble'                         *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_ldouble.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                       class 'typeGalgas_stringset'                        *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_stringset.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@typeTableMethodes'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeTableMethodes {
  public : GGS_L_EXsignature  aListeTypesParametres ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableMethodes : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeTableMethodes (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_typeTableMethodes & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_typeTableMethodes * nextObject (void) const { return (elementOf_GGS_typeTableMethodes *) mNextItem ; }
  public : inline elementOf_GGS_typeTableMethodes * infObject (void) const { return (elementOf_GGS_typeTableMethodes *) mInfPtr ; }
  public : inline elementOf_GGS_typeTableMethodes * supObject (void) const { return (elementOf_GGS_typeTableMethodes *) mSupPtr ; }
//--- Data member
  public : e_typeTableMethodes mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  class 'typeGalgasUndefinedExternType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedExternType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@M_externTypeConstructorMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_externTypeConstructorMap {
  public : GGS_typeListeAttributsSemantiques  aListeDesAttributs ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_externTypeConstructorMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_externTypeConstructorMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_externTypeConstructorMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_externTypeConstructorMap * nextObject (void) const { return (elementOf_GGS_M_externTypeConstructorMap *) mNextItem ; }
  public : inline elementOf_GGS_M_externTypeConstructorMap * infObject (void) const { return (elementOf_GGS_M_externTypeConstructorMap *) mInfPtr ; }
  public : inline elementOf_GGS_M_externTypeConstructorMap * supObject (void) const { return (elementOf_GGS_M_externTypeConstructorMap *) mSupPtr ; }
//--- Data member
  public : e_M_externTypeConstructorMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       class 'typeGalgasExternType'                        *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgasExternType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@M_terminalSymbolsMapForUse'                *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_terminalSymbolsMapForUse {
  public : GGS_typeListeAttributsSemantiques  aListeDesAttributs ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_terminalSymbolsMapForUse : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_terminalSymbolsMapForUse (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_terminalSymbolsMapForUse & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_terminalSymbolsMapForUse * nextObject (void) const { return (elementOf_GGS_M_terminalSymbolsMapForUse *) mNextItem ; }
  public : inline elementOf_GGS_M_terminalSymbolsMapForUse * infObject (void) const { return (elementOf_GGS_M_terminalSymbolsMapForUse *) mInfPtr ; }
  public : inline elementOf_GGS_M_terminalSymbolsMapForUse * supObject (void) const { return (elementOf_GGS_M_terminalSymbolsMapForUse *) mSupPtr ; }
//--- Data member
  public : e_M_terminalSymbolsMapForUse mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@M_lexiqueComponents'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_lexiqueComponents {
  public : GGS_M_terminalSymbolsMapForUse  mTerminalSymbolMap ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_lexiqueComponents : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_lexiqueComponents (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_lexiqueComponents & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_lexiqueComponents * nextObject (void) const { return (elementOf_GGS_M_lexiqueComponents *) mNextItem ; }
  public : inline elementOf_GGS_M_lexiqueComponents * infObject (void) const { return (elementOf_GGS_M_lexiqueComponents *) mInfPtr ; }
  public : inline elementOf_GGS_M_lexiqueComponents * supObject (void) const { return (elementOf_GGS_M_lexiqueComponents *) mSupPtr ; }
//--- Data member
  public : e_M_lexiqueComponents mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@typeTableEnAvant'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeTableEnAvant {
  public : GGS_AC_galgasType  mType ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableEnAvant : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeTableEnAvant (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_typeTableEnAvant & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_typeTableEnAvant * nextObject (void) const { return (elementOf_GGS_typeTableEnAvant *) mNextItem ; }
  public : inline elementOf_GGS_typeTableEnAvant * infObject (void) const { return (elementOf_GGS_typeTableEnAvant *) mInfPtr ; }
  public : inline elementOf_GGS_typeTableEnAvant * supObject (void) const { return (elementOf_GGS_typeTableEnAvant *) mSupPtr ; }
//--- Data member
  public : e_typeTableEnAvant mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of map '@M_nonterminalSymbolAlts'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_nonterminalSymbolAlts {
  public : GGS_L_EXsignature  mFormalParametersList ;
  public : GGS_lstring  mReturnedEntity ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonterminalSymbolAlts : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_nonterminalSymbolAlts (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_nonterminalSymbolAlts & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_nonterminalSymbolAlts * nextObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAlts *) mNextItem ; }
  public : inline elementOf_GGS_M_nonterminalSymbolAlts * infObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAlts *) mInfPtr ; }
  public : inline elementOf_GGS_M_nonterminalSymbolAlts * supObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAlts *) mSupPtr ; }
//--- Data member
  public : e_M_nonterminalSymbolAlts mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_AC_semanticsEntity.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                      class 'C_grammarForSemantics'                        *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_C_grammarForSemantics.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@M_semanticsEntitiesForUse'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_semanticsEntitiesForUse {
  public : GGS_AC_semanticsEntity  aDefEntite ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_semanticsEntitiesForUse : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_semanticsEntitiesForUse (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_semanticsEntitiesForUse & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_semanticsEntitiesForUse * nextObject (void) const { return (elementOf_GGS_M_semanticsEntitiesForUse *) mNextItem ; }
  public : inline elementOf_GGS_M_semanticsEntitiesForUse * infObject (void) const { return (elementOf_GGS_M_semanticsEntitiesForUse *) mInfPtr ; }
  public : inline elementOf_GGS_M_semanticsEntitiesForUse * supObject (void) const { return (elementOf_GGS_M_semanticsEntitiesForUse *) mSupPtr ; }
//--- Data member
  public : e_M_semanticsEntitiesForUse mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_AC_typeForGrammarComponent.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@M_typesForGrammarComponent'                *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_typesForGrammarComponent {
  public : GGS_AC_typeForGrammarComponent  mType ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_typesForGrammarComponent : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_typesForGrammarComponent (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_typesForGrammarComponent & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_typesForGrammarComponent * nextObject (void) const { return (elementOf_GGS_M_typesForGrammarComponent *) mNextItem ; }
  public : inline elementOf_GGS_M_typesForGrammarComponent * infObject (void) const { return (elementOf_GGS_M_typesForGrammarComponent *) mInfPtr ; }
  public : inline elementOf_GGS_M_typesForGrammarComponent * supObject (void) const { return (elementOf_GGS_M_typesForGrammarComponent *) mSupPtr ; }
//--- Data member
  public : e_M_typesForGrammarComponent mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_AC_instruction_ForGrammar.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@L_ruleSyntaxSignature'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_ruleSyntaxSignature {
  private : elementOf_GGS_L_ruleSyntaxSignature * mNextItem ;
    public : GGS_AC_instruction_ForGrammar  mInstruction ;
  public : elementOf_GGS_L_ruleSyntaxSignature (const GGS_AC_instruction_ForGrammar & ) ;

  public : inline elementOf_GGS_L_ruleSyntaxSignature * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_ruleSyntaxSignature (const elementOf_GGS_L_ruleSyntaxSignature &) ;
  private : void operator = (const elementOf_GGS_L_ruleSyntaxSignature &) ;
  public : inline ~elementOf_GGS_L_ruleSyntaxSignature (void) {}
  public : void appendForListDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
  friend class GGS_L_ruleSyntaxSignature ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@L_grammarsMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_L_grammarsMap {
  public : GGS_M_nonterminalSymbolAlts  mStartSymbolParametersMap ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_L_grammarsMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_L_grammarsMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_L_grammarsMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_L_grammarsMap * nextObject (void) const { return (elementOf_GGS_L_grammarsMap *) mNextItem ; }
  public : inline elementOf_GGS_L_grammarsMap * infObject (void) const { return (elementOf_GGS_L_grammarsMap *) mInfPtr ; }
  public : inline elementOf_GGS_L_grammarsMap * supObject (void) const { return (elementOf_GGS_L_grammarsMap *) mSupPtr ; }
//--- Data member
  public : e_L_grammarsMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Element of map '@M_nonterminalSymbolAltsForGrammar'             *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_nonterminalSymbolAltsForGrammar {
  public : GGS_L_signature  mFormalParametersList ;
  public : GGS_lstring  mReturnedEntityTypeName ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonterminalSymbolAltsForGrammar : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_nonterminalSymbolAltsForGrammar (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_nonterminalSymbolAltsForGrammar & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_nonterminalSymbolAltsForGrammar * nextObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAltsForGrammar *) mNextItem ; }
  public : inline elementOf_GGS_M_nonterminalSymbolAltsForGrammar * infObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAltsForGrammar *) mInfPtr ; }
  public : inline elementOf_GGS_M_nonterminalSymbolAltsForGrammar * supObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAltsForGrammar *) mSupPtr ; }
//--- Data member
  public : e_M_nonterminalSymbolAltsForGrammar mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Element of list '@L_productionRules_ForGrammarComponent'          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_productionRules_ForGrammarComponent {
  private : elementOf_GGS_L_productionRules_ForGrammarComponent * mNextItem ;
    public : GGS_lstring  mLeftNonterminalSymbol ;
    public : GGS_uint  mLeftNonterminalSymbolIndex ;
    public : GGS_L_ruleSyntaxSignature  mInstructionList ;
  public : elementOf_GGS_L_productionRules_ForGrammarComponent (const GGS_lstring & ,
                                const GGS_uint & ,
                                const GGS_L_ruleSyntaxSignature & ) ;

  public : inline elementOf_GGS_L_productionRules_ForGrammarComponent * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_productionRules_ForGrammarComponent (const elementOf_GGS_L_productionRules_ForGrammarComponent &) ;
  private : void operator = (const elementOf_GGS_L_productionRules_ForGrammarComponent &) ;
  public : inline ~elementOf_GGS_L_productionRules_ForGrammarComponent (void) {}
  public : void appendForListDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
  friend class GGS_L_productionRules_ForGrammarComponent ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of map '@M_nonTerminalSymbolsForGrammar'              *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_nonTerminalSymbolsForGrammar {
  public : GGS_M_nonterminalSymbolAltsForGrammar  mNonterminalSymbolParametersMap ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonTerminalSymbolsForGrammar : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_nonTerminalSymbolsForGrammar (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_nonTerminalSymbolsForGrammar & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_nonTerminalSymbolsForGrammar * nextObject (void) const { return (elementOf_GGS_M_nonTerminalSymbolsForGrammar *) mNextItem ; }
  public : inline elementOf_GGS_M_nonTerminalSymbolsForGrammar * infObject (void) const { return (elementOf_GGS_M_nonTerminalSymbolsForGrammar *) mInfPtr ; }
  public : inline elementOf_GGS_M_nonTerminalSymbolsForGrammar * supObject (void) const { return (elementOf_GGS_M_nonTerminalSymbolsForGrammar *) mSupPtr ; }
//--- Data member
  public : e_M_nonTerminalSymbolsForGrammar mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@M_syntaxComponents'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_syntaxComponents {
  public : GGS_M_nonTerminalSymbolsForGrammar  mNonterminalSymbolsMap ;
  public : GGS_L_productionRules_ForGrammarComponent  mProductionRulesList ;
  public : GGS_lstring  mLexiqueComponentName ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_syntaxComponents : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_syntaxComponents (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_syntaxComponents & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_syntaxComponents * nextObject (void) const { return (elementOf_GGS_M_syntaxComponents *) mNextItem ; }
  public : inline elementOf_GGS_M_syntaxComponents * infObject (void) const { return (elementOf_GGS_M_syntaxComponents *) mInfPtr ; }
  public : inline elementOf_GGS_M_syntaxComponents * supObject (void) const { return (elementOf_GGS_M_syntaxComponents *) mSupPtr ; }
//--- Data member
  public : e_M_syntaxComponents mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            class 'T_terminalInstruction_forGrammarComponent'              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_T_terminalInstruction_forGrammarComponent.h"

//---------------------------------------------------------------------------*
//                                                                           *
//           class 'T_nonterminalInstruction_forGrammarComponent'            *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_T_nonterminalInstruction_forGrammarComponent.h"

//---------------------------------------------------------------------------*
//                                                                           *
//           Element of list '@L_branchList_ForGrammarComponent'             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_branchList_ForGrammarComponent {
  private : elementOf_GGS_L_branchList_ForGrammarComponent * mNextItem ;
    public : GGS_L_ruleSyntaxSignature  mInstructionList ;
  public : elementOf_GGS_L_branchList_ForGrammarComponent (const GGS_L_ruleSyntaxSignature & ) ;

  public : inline elementOf_GGS_L_branchList_ForGrammarComponent * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_branchList_ForGrammarComponent (const elementOf_GGS_L_branchList_ForGrammarComponent &) ;
  private : void operator = (const elementOf_GGS_L_branchList_ForGrammarComponent &) ;
  public : inline ~elementOf_GGS_L_branchList_ForGrammarComponent (void) {}
  public : void appendForListDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
  friend class GGS_L_branchList_ForGrammarComponent ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             class 'T_selectInstruction_forGrammarComponent'               *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_T_selectInstruction_forGrammarComponent.h"

//---------------------------------------------------------------------------*
//                                                                           *
//             class 'T_repeatInstruction_forGrammarComponent'               *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_T_repeatInstruction_forGrammarComponent.h"

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@L_syntaxComponents_ForGrammar'              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_syntaxComponents_ForGrammar {
  private : elementOf_GGS_L_syntaxComponents_ForGrammar * mNextItem ;
    public : GGS_M_nonTerminalSymbolsForGrammar  mNonterminalSymbolsMap ;
    public : GGS_L_productionRules_ForGrammarComponent  mProductionRulesList ;
    public : GGS_lstring  mSyntaxComponentName ;
  public : elementOf_GGS_L_syntaxComponents_ForGrammar (const GGS_M_nonTerminalSymbolsForGrammar & ,
                                const GGS_L_productionRules_ForGrammarComponent & ,
                                const GGS_lstring & ) ;

  public : inline elementOf_GGS_L_syntaxComponents_ForGrammar * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_syntaxComponents_ForGrammar (const elementOf_GGS_L_syntaxComponents_ForGrammar &) ;
  private : void operator = (const elementOf_GGS_L_syntaxComponents_ForGrammar &) ;
  public : inline ~elementOf_GGS_L_syntaxComponents_ForGrammar (void) {}
  public : void appendForListDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
  friend class GGS_L_syntaxComponents_ForGrammar ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Element of map '@M_startSymbolEntityAndMetamodel'              *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_startSymbolEntityAndMetamodel {
  public : GGS_lstring  mReturnedEntityName ;
  public : GGS_lstring  mReturnedMetamodelName ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_startSymbolEntityAndMetamodel : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_startSymbolEntityAndMetamodel (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_startSymbolEntityAndMetamodel & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_startSymbolEntityAndMetamodel * nextObject (void) const { return (elementOf_GGS_M_startSymbolEntityAndMetamodel *) mNextItem ; }
  public : inline elementOf_GGS_M_startSymbolEntityAndMetamodel * infObject (void) const { return (elementOf_GGS_M_startSymbolEntityAndMetamodel *) mInfPtr ; }
  public : inline elementOf_GGS_M_startSymbolEntityAndMetamodel * supObject (void) const { return (elementOf_GGS_M_startSymbolEntityAndMetamodel *) mSupPtr ; }
//--- Data member
  public : e_M_startSymbolEntityAndMetamodel mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@L_identifiers'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_identifiers {
  private : elementOf_GGS_L_identifiers * mNextItem ;
    public : GGS_lstring  aIdentificateur ;
  public : elementOf_GGS_L_identifiers (const GGS_lstring & ) ;

  public : inline elementOf_GGS_L_identifiers * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_identifiers (const elementOf_GGS_L_identifiers &) ;
  private : void operator = (const elementOf_GGS_L_identifiers &) ;
  public : inline ~elementOf_GGS_L_identifiers (void) {}
  public : void appendForListDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
  friend class GGS_L_identifiers ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@typeSuperClassesMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeSuperClassesMap {
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeSuperClassesMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeSuperClassesMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_typeSuperClassesMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_typeSuperClassesMap * nextObject (void) const { return (elementOf_GGS_typeSuperClassesMap *) mNextItem ; }
  public : inline elementOf_GGS_typeSuperClassesMap * infObject (void) const { return (elementOf_GGS_typeSuperClassesMap *) mInfPtr ; }
  public : inline elementOf_GGS_typeSuperClassesMap * supObject (void) const { return (elementOf_GGS_typeSuperClassesMap *) mSupPtr ; }
//--- Data member
  public : e_typeSuperClassesMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of map '@typeClassInheritedMessagesMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeClassInheritedMessagesMap {
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeClassInheritedMessagesMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeClassInheritedMessagesMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_typeClassInheritedMessagesMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_typeClassInheritedMessagesMap * nextObject (void) const { return (elementOf_GGS_typeClassInheritedMessagesMap *) mNextItem ; }
  public : inline elementOf_GGS_typeClassInheritedMessagesMap * infObject (void) const { return (elementOf_GGS_typeClassInheritedMessagesMap *) mInfPtr ; }
  public : inline elementOf_GGS_typeClassInheritedMessagesMap * supObject (void) const { return (elementOf_GGS_typeClassInheritedMessagesMap *) mSupPtr ; }
//--- Data member
  public : e_typeClassInheritedMessagesMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@typeSemanticAttributesMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeSemanticAttributesMap {
  public : GGS_AC_galgasType  mAttributType ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeSemanticAttributesMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeSemanticAttributesMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_typeSemanticAttributesMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_typeSemanticAttributesMap * nextObject (void) const { return (elementOf_GGS_typeSemanticAttributesMap *) mNextItem ; }
  public : inline elementOf_GGS_typeSemanticAttributesMap * infObject (void) const { return (elementOf_GGS_typeSemanticAttributesMap *) mInfPtr ; }
  public : inline elementOf_GGS_typeSemanticAttributesMap * supObject (void) const { return (elementOf_GGS_typeSemanticAttributesMap *) mSupPtr ; }
//--- Data member
  public : e_typeSemanticAttributesMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@insertOrSearchMethodList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_insertOrSearchMethodList {
  private : elementOf_GGS_insertOrSearchMethodList * mNextItem ;
    public : GGS_lstring  mMethodName ;
    public : GGS_string mErrorMessage ;
    public : GGS_bool mIsGetIndexMethod ;
    public : GGS_string mShadowErrorMessage ;
  public : elementOf_GGS_insertOrSearchMethodList (const GGS_lstring & ,
                                const GGS_string& ,
                                const GGS_bool& ,
                                const GGS_string& ) ;

  public : inline elementOf_GGS_insertOrSearchMethodList * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_insertOrSearchMethodList (const elementOf_GGS_insertOrSearchMethodList &) ;
  private : void operator = (const elementOf_GGS_insertOrSearchMethodList &) ;
  public : inline ~elementOf_GGS_insertOrSearchMethodList (void) {}
  public : void appendForListDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
  friend class GGS_insertOrSearchMethodList ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeDefEntiteUtilisable.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   class 'typeGalgasUndefinedListType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedListType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeGalgasListType'                         *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgasListType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of map '@typeTableBlocsDeTable'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeTableBlocsDeTable {
  public : GGS_L_EXsignature  aSignatureDebut ;
  public : GGS_L_EXsignature  aSignatureFin ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableBlocsDeTable : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeTableBlocsDeTable (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_typeTableBlocsDeTable & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_typeTableBlocsDeTable * nextObject (void) const { return (elementOf_GGS_typeTableBlocsDeTable *) mNextItem ; }
  public : inline elementOf_GGS_typeTableBlocsDeTable * infObject (void) const { return (elementOf_GGS_typeTableBlocsDeTable *) mInfPtr ; }
  public : inline elementOf_GGS_typeTableBlocsDeTable * supObject (void) const { return (elementOf_GGS_typeTableBlocsDeTable *) mSupPtr ; }
//--- Data member
  public : e_typeTableBlocsDeTable mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    class 'typeGalgasUndefinedMapType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedMapType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@mapMethodMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_mapMethodMap {
  public : GGS_L_EXsignature  mMethodSignature ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_mapMethodMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_mapMethodMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_mapMethodMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_mapMethodMap * nextObject (void) const { return (elementOf_GGS_mapMethodMap *) mNextItem ; }
  public : inline elementOf_GGS_mapMethodMap * infObject (void) const { return (elementOf_GGS_mapMethodMap *) mInfPtr ; }
  public : inline elementOf_GGS_mapMethodMap * supObject (void) const { return (elementOf_GGS_mapMethodMap *) mSupPtr ; }
//--- Data member
  public : e_mapMethodMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeGalgasMapType'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgasMapType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   class 'typeGalgasUndefinedClassType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedClassType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                      class 'typeGalgasNewClassType'                       *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgasNewClassType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                       class 'typeGalgasClassType'                         *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgasClassType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                          class 'typeEntiteType'                           *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeEntiteType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeEntiteRoutine'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeEntiteRoutine.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                  class 'typeGalgas_entityInInstruction'                   *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_entityInInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                 class 'typeGalgas_mapIndexInInstruction'                  *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_mapIndexInInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                class 'typeGalgas_mapEntityInInstruction'                  *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_mapEntityInInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@typeEnumMessageMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeEnumMessageMap {
  public : GGS_L_lstringList  mMessageStringList ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeEnumMessageMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeEnumMessageMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_typeEnumMessageMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_typeEnumMessageMap * nextObject (void) const { return (elementOf_GGS_typeEnumMessageMap *) mNextItem ; }
  public : inline elementOf_GGS_typeEnumMessageMap * infObject (void) const { return (elementOf_GGS_typeEnumMessageMap *) mInfPtr ; }
  public : inline elementOf_GGS_typeEnumMessageMap * supObject (void) const { return (elementOf_GGS_typeEnumMessageMap *) mSupPtr ; }
//--- Data member
  public : e_typeEnumMessageMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'typeGalgas_enum'                           *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_enum.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@M_cli_options'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_cli_options {
  public : GGS_lchar  mOptionChar ;
  public : GGS_lstring  mOptionString ;
  public : GGS_lstring  mComment ;
  public : GGS_uint  mDefaultValue ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_cli_options : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_cli_options (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_cli_options & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_cli_options * nextObject (void) const { return (elementOf_GGS_M_cli_options *) mNextItem ; }
  public : inline elementOf_GGS_M_cli_options * infObject (void) const { return (elementOf_GGS_M_cli_options *) mInfPtr ; }
  public : inline elementOf_GGS_M_cli_options * supObject (void) const { return (elementOf_GGS_M_cli_options *) mSupPtr ; }
//--- Data member
  public : e_M_cli_options mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@M_optionComponents'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_optionComponents {
  public : GGS_M_cli_options  mBoolOptionsMap ;
  public : GGS_M_cli_options  mUintOptionsMap ;
  public : GGS_M_cli_options  mStringOptionsMap ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_optionComponents : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_optionComponents (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_optionComponents & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_optionComponents * nextObject (void) const { return (elementOf_GGS_M_optionComponents *) mNextItem ; }
  public : inline elementOf_GGS_M_optionComponents * infObject (void) const { return (elementOf_GGS_M_optionComponents *) mInfPtr ; }
  public : inline elementOf_GGS_M_optionComponents * supObject (void) const { return (elementOf_GGS_M_optionComponents *) mSupPtr ; }
//--- Data member
  public : e_M_optionComponents mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@M_grammarComponents'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_grammarComponents {
  public : GGS_M_nonterminalSymbolAltsForGrammar  mNonterminalSymbolParametersMap ;
  public : GGS_lstring  mLexiqueName ;
  public : GGS_M_optionComponents  mOptionsMap ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_grammarComponents : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_grammarComponents (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_grammarComponents & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_grammarComponents * nextObject (void) const { return (elementOf_GGS_M_grammarComponents *) mNextItem ; }
  public : inline elementOf_GGS_M_grammarComponents * infObject (void) const { return (elementOf_GGS_M_grammarComponents *) mInfPtr ; }
  public : inline elementOf_GGS_M_grammarComponents * supObject (void) const { return (elementOf_GGS_M_grammarComponents *) mSupPtr ; }
//--- Data member
  public : e_M_grammarComponents mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of map '@M_semanticsComponents'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_semanticsComponents {
  public : GGS_ModelMap  mModelMap ;
  public : GGS_ActionMap  mActionMap ;
  public : GGS_stringset  mImportedSemanticsComponents ;
  public : GGS_stringset  mImportedMetamodelComponents ;
  public : GGS_stringset  mImportedOptionsComponents ;
  public : GGS_M_optionComponents  mOptionsComponents ;
  public : GGS_M_semanticsEntitiesForUse  mSemanticsEntitiesMap ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_semanticsComponents : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_semanticsComponents (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_semanticsComponents & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_semanticsComponents * nextObject (void) const { return (elementOf_GGS_M_semanticsComponents *) mNextItem ; }
  public : inline elementOf_GGS_M_semanticsComponents * infObject (void) const { return (elementOf_GGS_M_semanticsComponents *) mInfPtr ; }
  public : inline elementOf_GGS_M_semanticsComponents * supObject (void) const { return (elementOf_GGS_M_semanticsComponents *) mSupPtr ; }
//--- Data member
  public : e_M_semanticsComponents mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of map '@M_metamodelsComponents'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_metamodelsComponents {
  public : GGS_lstring  mRootEntity ;
  public : GGS_M_semanticsEntitiesForUse  mSemanticsEntitiesMap ;
  public : GGS_entityToImplementMap  mEntityMap ;
  public : GGS_stringset  mMultiReferencedEntities ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_metamodelsComponents : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_metamodelsComponents (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_metamodelsComponents & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_metamodelsComponents * nextObject (void) const { return (elementOf_GGS_M_metamodelsComponents *) mNextItem ; }
  public : inline elementOf_GGS_M_metamodelsComponents * infObject (void) const { return (elementOf_GGS_M_metamodelsComponents *) mInfPtr ; }
  public : inline elementOf_GGS_M_metamodelsComponents * supObject (void) const { return (elementOf_GGS_M_metamodelsComponents *) mSupPtr ; }
//--- Data member
  public : e_M_metamodelsComponents mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of map '@M_constraintComponents'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_constraintComponents {
  public : GGS_lstring  mMetamodel ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_constraintComponents : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_constraintComponents (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_constraintComponents & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_constraintComponents * nextObject (void) const { return (elementOf_GGS_M_constraintComponents *) mNextItem ; }
  public : inline elementOf_GGS_M_constraintComponents * infObject (void) const { return (elementOf_GGS_M_constraintComponents *) mInfPtr ; }
  public : inline elementOf_GGS_M_constraintComponents * supObject (void) const { return (elementOf_GGS_M_constraintComponents *) mSupPtr ; }
//--- Data member
  public : e_M_constraintComponents mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@typeListeAttributsAxiome'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListeAttributsAxiome {
  private : elementOf_GGS_typeListeAttributsAxiome * mNextItem ;
    public : GGS_lstring  aAttributAxiome ;
  public : elementOf_GGS_typeListeAttributsAxiome (const GGS_lstring & ) ;

  public : inline elementOf_GGS_typeListeAttributsAxiome * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_typeListeAttributsAxiome (const elementOf_GGS_typeListeAttributsAxiome &) ;
  private : void operator = (const elementOf_GGS_typeListeAttributsAxiome &) ;
  public : inline ~elementOf_GGS_typeListeAttributsAxiome (void) {}
  public : void appendForListDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
  friend class GGS_typeListeAttributsAxiome ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@L_grammarDescriptorForProgram'              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_grammarDescriptorForProgram {
  private : elementOf_GGS_L_grammarDescriptorForProgram * mNextItem ;
    public : GGS_string mGrammarPostfix ;
    public : GGS_lstring  mGrammarName ;
    public : GGS_L_signature  mStartSymbolSignature ;
    public : GGS_typeListeAttributsAxiome  mStartSymbolAttributesList ;
    public : GGS_lstring  mLexiqueClassName ;
    public : GGS_lstring  mReturnedMetamodelName ;
    public : GGS_lstring  mReturnedRootEntityName ;
    public : GGS_L_lstringList  mConstraintsForMetamodel ;
  public : elementOf_GGS_L_grammarDescriptorForProgram (const GGS_string& ,
                                const GGS_lstring & ,
                                const GGS_L_signature & ,
                                const GGS_typeListeAttributsAxiome & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_L_lstringList & ) ;

  public : inline elementOf_GGS_L_grammarDescriptorForProgram * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_grammarDescriptorForProgram (const elementOf_GGS_L_grammarDescriptorForProgram &) ;
  private : void operator = (const elementOf_GGS_L_grammarDescriptorForProgram &) ;
  public : inline ~elementOf_GGS_L_grammarDescriptorForProgram (void) {}
  public : void appendForListDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
  friend class GGS_L_grammarDescriptorForProgram ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@L_nibAndClassList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_nibAndClassList {
  private : elementOf_GGS_L_nibAndClassList * mNextItem ;
    public : GGS_lstring  mValue ;
  public : elementOf_GGS_L_nibAndClassList (const GGS_lstring & ) ;

  public : inline elementOf_GGS_L_nibAndClassList * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_nibAndClassList (const elementOf_GGS_L_nibAndClassList &) ;
  private : void operator = (const elementOf_GGS_L_nibAndClassList &) ;
  public : inline ~elementOf_GGS_L_nibAndClassList (void) {}
  public : void appendForListDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
  friend class GGS_L_nibAndClassList ;
} ;

//---------------------------------------------------------------------------*

#endif
