//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'common_semantics.h'                          *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                     january 13th, 2006, at 18h31'30"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef common_semantics_DEFINED
#define common_semantics_DEFINED

#include <string.h>

#include "galgas/C_GGS_Object.h"
#include "galgas/AC_galgas_io.h"
#include "galgas/GGS_location.h"
#include "galgas/GGS_lbool.h"
#include "galgas/GGS_lchar.h"
#include "galgas/GGS_lstring.h"
#include "galgas/GGS_ldouble.h"
#include "galgas/GGS_luint.h"
#include "galgas/GGS_lsint.h"
#include "galgas/GGS_stringset.h"
#include "galgas/AC_galgas_map.h"
#include "galgas/C_Lexique.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_actualParametersPassingMode ;
class GGS_formalArgumentPassingMode ;
class GGS_L_signature ;
class GGS_typeListModel ;
class GGS_TypeModel ;
class GGS_BoolModel ;
class GGS_CharModel ;
class GGS_UIntModel ;
class GGS_SIntModel ;
class GGS_DoubleModel ;
class GGS_StringModel ;
class GGS_LBoolModel ;
class GGS_LCharModel ;
class GGS_LUIntModel ;
class GGS_LSIntModel ;
class GGS_LDoubleModel ;
class GGS_LStringModel ;
class GGS_StringsetModel ;
class GGS_LocationModel ;
class GGS_ListModel ;
class GGS_enumConstantMap ;
class GGS_enumMessageMap ;
class GGS_EnumModel ;
class GGS_constructorMap ;
class GGS_readerMap ;
class GGS_modifierMap ;
class GGS_ExternTypeModel ;
class GGS_classMessageMap ;
class GGS_ClassModel ;
class GGS_ModelMap ;
class GGS_ActionMap ;
class GGS_localConstantBuildStyleEnum ;
class GGS_AC_galgasType ;
class GGS_typeListeAttributsSemantiques ;
class GGS_typeTypesList ;
class GGS_L_EXsignature ;
class GGS_L_actualParametersSignature ;
class GGS_M_accessors_map ;
class GGS_L_stringList ;
class GGS_L_lstringList ;
class GGS_typeGalgas_jokerInParameterList ;
class GGS_typeGalgas_bool ;
class GGS_typeGalgas_string ;
class GGS_typeGalgas_sint ;
class GGS_typeGalgas_uint ;
class GGS_typeGalgas_char ;
class GGS_typeGalgas_double ;
class GGS_C_galgasPrimitiveType ;
class GGS_typeGalgas_location ;
class GGS_typeGalgas_lstring ;
class GGS_typeGalgas_lchar ;
class GGS_typeGalgas_lbool ;
class GGS_typeGalgas_luint ;
class GGS_typeGalgas_lsint ;
class GGS_typeGalgas_ldouble ;
class GGS_typeGalgas_stringset ;
class GGS_typeTableMethodes ;
#include "cClassMethodsMap.h"
class GGS_typeGalgasUndefinedExternType ;
class GGS_M_externTypeConstructorMap ;
class GGS_typeGalgasExternType ;
class GGS_M_terminalSymbolsMapForUse ;
class GGS_M_lexiqueComponents ;
class GGS_typeTableEnAvant ;
class GGS_M_nonterminalSymbolAlts ;
class GGS_AC_semanticsEntity ;
class GGS_C_grammarForSemantics ;
class GGS_M_semanticsEntitiesForUse ;
class GGS_AC_typeForGrammarComponent ;
class GGS_M_typesForGrammarComponent ;
class GGS_AC_instruction_ForGrammar ;
class GGS_L_ruleSyntaxSignature ;
class GGS_L_grammarsMap ;
class GGS_M_nonterminalSymbolAltsForGrammar ;
class GGS_L_productionRules_ForGrammarComponent ;
class GGS_M_nonTerminalSymbolsForGrammar ;
class GGS_M_syntaxComponents ;
class GGS_T_terminalInstruction_forGrammarComponent ;
class GGS_T_nonterminalInstruction_forGrammarComponent ;
class GGS_L_branchList_ForGrammarComponent ;
class GGS_T_selectInstruction_forGrammarComponent ;
class GGS_T_repeatInstruction_forGrammarComponent ;
class GGS_L_syntaxComponents_ForGrammar ;
class GGS_L_identifiers ;
class GGS_typeSuperClassesMap ;
class GGS_typeClassInheritedMessagesMap ;
class GGS_typeSemanticAttributesMap ;
class GGS_lastStateEnum ;
class GGS_lastStateList ;
class GGS_transitionStatusMap ;
class GGS_insertOrSearchMethodList ;
class GGS_typeDefEntiteUtilisable ;
class GGS_typeGalgasUndefinedListType ;
class GGS_typeGalgasListType ;
class GGS_typeTableBlocsDeTable ;
class GGS_typeGalgasUndefinedMapType ;
class GGS_mapMethodMap ;
class GGS_typeGalgasMapType ;
class GGS_typeGalgasUndefinedClassType ;
class GGS_typeGalgasClassType ;
class GGS_typeEntiteType ;
class GGS_typeEntiteRoutine ;
class GGS_typeEnumMessageMap ;
class GGS_typeGalgas_enum ;
class GGS_M_cli_options ;
class GGS_M_optionComponents ;
class GGS_M_grammarComponents ;
class GGS_M_semanticsComponents ;

//---------------------------------------------------------------------------*
//                                                                           *
//           class for enumeration 'actualParametersPassingMode'             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_actualParametersPassingMode {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_parameterOut, enum_parameterOutIn, enum_parameterIn} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const {return mValue ; }

//--- Default constructor
  public : inline GGS_actualParametersPassingMode (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_actualParametersPassingMode (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline uint16 bitCount (void) { return 2 ; }

//--- Is built ?
  public : inline bool isBuilt (void) const { return mValue > kNotBuilt ; }

//--- Construction from GALGAS constructor
  public : static inline GGS_actualParametersPassingMode constructor_parameterOut (void) {
    return GGS_actualParametersPassingMode (enum_parameterOut) ;
  }
  public : static inline GGS_actualParametersPassingMode constructor_parameterOutIn (void) {
    return GGS_actualParametersPassingMode (enum_parameterOutIn) ;
  }
  public : static inline GGS_actualParametersPassingMode constructor_parameterIn (void) {
    return GGS_actualParametersPassingMode (enum_parameterIn) ;
  }

//--- Messages
  public : GGS_string reader_actualArgumentMessage (void) const ;

//--- Drop operation
  public : inline void drop_operation (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool operator == (const GGS_actualParametersPassingMode inOperand) const ;
  public : GGS_bool operator != (const GGS_actualParametersPassingMode inOperand) const ;
  public : GGS_bool operator <= (const GGS_actualParametersPassingMode inOperand) const ;
  public : GGS_bool operator >= (const GGS_actualParametersPassingMode inOperand) const ;
  public : GGS_bool operator <  (const GGS_actualParametersPassingMode inOperand) const ;
  public : GGS_bool operator >  (const GGS_actualParametersPassingMode inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            class for enumeration 'formalArgumentPassingMode'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_formalArgumentPassingMode {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_argumentIn, enum_argumentOut, enum_argumentInOut, enum_argumentConstantIn} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const {return mValue ; }

//--- Default constructor
  public : inline GGS_formalArgumentPassingMode (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_formalArgumentPassingMode (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline uint16 bitCount (void) { return 3 ; }

//--- Is built ?
  public : inline bool isBuilt (void) const { return mValue > kNotBuilt ; }

//--- Construction from GALGAS constructor
  public : static inline GGS_formalArgumentPassingMode constructor_argumentIn (void) {
    return GGS_formalArgumentPassingMode (enum_argumentIn) ;
  }
  public : static inline GGS_formalArgumentPassingMode constructor_argumentOut (void) {
    return GGS_formalArgumentPassingMode (enum_argumentOut) ;
  }
  public : static inline GGS_formalArgumentPassingMode constructor_argumentInOut (void) {
    return GGS_formalArgumentPassingMode (enum_argumentInOut) ;
  }
  public : static inline GGS_formalArgumentPassingMode constructor_argumentConstantIn (void) {
    return GGS_formalArgumentPassingMode (enum_argumentConstantIn) ;
  }

//--- Messages
  public : GGS_string reader_formalArgumentMessage (void) const ;

//--- Drop operation
  public : inline void drop_operation (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool operator == (const GGS_formalArgumentPassingMode inOperand) const ;
  public : GGS_bool operator != (const GGS_formalArgumentPassingMode inOperand) const ;
  public : GGS_bool operator <= (const GGS_formalArgumentPassingMode inOperand) const ;
  public : GGS_bool operator >= (const GGS_formalArgumentPassingMode inOperand) const ;
  public : GGS_bool operator <  (const GGS_formalArgumentPassingMode inOperand) const ;
  public : GGS_bool operator >  (const GGS_formalArgumentPassingMode inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           list '@L_signature'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_signature ;

class GGS_L_signature {
  public : typedef elementOf_GGS_L_signature element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_L_signature (void) ; // Default Constructor
  public : GGS_L_signature (const GGS_L_signature &) ; // Copy constructor
  public : void operator = (const GGS_L_signature &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_L_signature (void) ;

//--- Constructor 'empty'
  public : static GGS_L_signature constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_formalArgumentPassingMode& argument_0,
                                const GGS_lstring & argument_1) ;
  protected : void internalAppendItem (const GGS_formalArgumentPassingMode& argument_0,
                                const GGS_lstring & argument_1) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@typeListModel'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListModel ;

class GGS_typeListModel {
  public : typedef elementOf_GGS_typeListModel element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_typeListModel (void) ; // Default Constructor
  public : GGS_typeListModel (const GGS_typeListModel &) ; // Copy constructor
  public : void operator = (const GGS_typeListModel &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_typeListModel (void) ;

//--- Constructor 'empty'
  public : static GGS_typeListModel constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_lstring & argument_0) ;
  protected : void internalAppendItem (const GGS_lstring & argument_0) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

class cPtr_TypeModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_TypeModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_TypeModel {
  protected : cPtr_TypeModel * mPointer ;
  public : GGS_TypeModel (void) ;
  public : GGS_TypeModel (const GGS_TypeModel &) ;
  public : virtual ~GGS_TypeModel (void) ;
  public : void operator = (const GGS_TypeModel &) ;
  public : inline bool isBuilt (void) const { return mPointer != NULL ; }
  public : inline bool isEqualTo (const GGS_TypeModel & operand_) const {
    return mPointer == operand_.mPointer ;
  }
  public : void operator = (cPtr_TypeModel * inSource) ;
  public : GGS_TypeModel (cPtr_TypeModel * inSource) ;
  public : inline cPtr_TypeModel * getPtr (void) const {
    return mPointer ;
  }
  public : void drop_operation (void) ;
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : cPtr_TypeModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_TypeModel * operator () (LOCATION_ARGS) const { return mPointer ; }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@enumConstantMap'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumConstantMap ;

class GGS_enumConstantMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_enumConstantMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_enumConstantMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_enumConstantMap constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@enumMessageMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumMessageMap ;

class GGS_enumMessageMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_enumMessageMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_enumMessageMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_enumMessageMap constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@constructorMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_constructorMap ;

class GGS_constructorMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_constructorMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_constructorMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_constructorMap constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_typeListModel &  inParameter0) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_typeListModel   & outParameter0) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_typeListModel & inParameter0,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_typeListModel & outParameter0,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                             Map '@readerMap'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_readerMap ;

class GGS_readerMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_readerMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_readerMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_readerMap constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_signature &  inParameter0) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_signature   & outParameter0) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_L_signature & inParameter0,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_L_signature & outParameter0,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Map '@modifierMap'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_modifierMap ;

class GGS_modifierMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_modifierMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_modifierMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_modifierMap constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_signature &  inParameter0) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_signature   & outParameter0) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_L_signature & inParameter0,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_L_signature & outParameter0,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@classMessageMap'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_classMessageMap ;

class GGS_classMessageMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_classMessageMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_classMessageMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_classMessageMap constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                             Map '@ModelMap'                               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ModelMap ;

class GGS_ModelMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_ModelMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_ModelMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_ModelMap constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_TypeModel &  inParameter0) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_TypeModel   & outParameter0) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_TypeModel & inParameter0,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_TypeModel & outParameter0,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                             Map '@ActionMap'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ActionMap ;

class GGS_ActionMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_ActionMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_ActionMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_ActionMap constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_signature &  inParameter0,
                                const GGS_bool&  inParameter1) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_signature   & outParameter0,
                                GGS_bool  & outParameter1) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_L_signature & inParameter0,
                                  const GGS_bool& inParameter1,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_L_signature & outParameter0,
                                  GGS_bool& outParameter1,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           class for enumeration 'localConstantBuildStyleEnum'             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_localConstantBuildStyleEnum {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_listStyle, enum_mapStyle, enum_firstIsKeyOtherMapStyle} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const {return mValue ; }

//--- Default constructor
  public : inline GGS_localConstantBuildStyleEnum (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_localConstantBuildStyleEnum (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline uint16 bitCount (void) { return 2 ; }

//--- Is built ?
  public : inline bool isBuilt (void) const { return mValue > kNotBuilt ; }

//--- Construction from GALGAS constructor
  public : static inline GGS_localConstantBuildStyleEnum constructor_listStyle (void) {
    return GGS_localConstantBuildStyleEnum (enum_listStyle) ;
  }
  public : static inline GGS_localConstantBuildStyleEnum constructor_mapStyle (void) {
    return GGS_localConstantBuildStyleEnum (enum_mapStyle) ;
  }
  public : static inline GGS_localConstantBuildStyleEnum constructor_firstIsKeyOtherMapStyle (void) {
    return GGS_localConstantBuildStyleEnum (enum_firstIsKeyOtherMapStyle) ;
  }

//--- Messages

//--- Drop operation
  public : inline void drop_operation (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool operator == (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool operator != (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool operator <= (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool operator >= (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool operator <  (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool operator >  (const GGS_localConstantBuildStyleEnum inOperand) const ;
} ;

class cPtr_AC_galgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_AC_galgasType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_AC_galgasType {
  protected : cPtr_AC_galgasType * mPointer ;
  public : GGS_AC_galgasType (void) ;
  public : GGS_AC_galgasType (const GGS_AC_galgasType &) ;
  public : virtual ~GGS_AC_galgasType (void) ;
  public : void operator = (const GGS_AC_galgasType &) ;
  public : inline bool isBuilt (void) const { return mPointer != NULL ; }
  public : inline bool isEqualTo (const GGS_AC_galgasType & operand_) const {
    return mPointer == operand_.mPointer ;
  }
  public : void operator = (cPtr_AC_galgasType * inSource) ;
  public : GGS_AC_galgasType (cPtr_AC_galgasType * inSource) ;
  public : inline cPtr_AC_galgasType * getPtr (void) const {
    return mPointer ;
  }
  public : void drop_operation (void) ;
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : cPtr_AC_galgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_galgasType * operator () (LOCATION_ARGS) const { return mPointer ; }
  #endif
  public : GGS_string reader_messageGalgasType (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  list '@typeListeAttributsSemantiques'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListeAttributsSemantiques ;

class GGS_typeListeAttributsSemantiques {
  public : typedef elementOf_GGS_typeListeAttributsSemantiques element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_typeListeAttributsSemantiques (void) ; // Default Constructor
  public : GGS_typeListeAttributsSemantiques (const GGS_typeListeAttributsSemantiques &) ; // Copy constructor
  public : void operator = (const GGS_typeListeAttributsSemantiques &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_typeListeAttributsSemantiques (void) ;

//--- Constructor 'empty'
  public : static GGS_typeListeAttributsSemantiques constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1) ;
  protected : void internalAppendItem (const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@typeTypesList'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTypesList ;

class GGS_typeTypesList {
  public : typedef elementOf_GGS_typeTypesList element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_typeTypesList (void) ; // Default Constructor
  public : GGS_typeTypesList (const GGS_typeTypesList &) ; // Copy constructor
  public : void operator = (const GGS_typeTypesList &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_typeTypesList (void) ;

//--- Constructor 'empty'
  public : static GGS_typeTypesList constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_location & argument_1) ;
  protected : void internalAppendItem (const GGS_AC_galgasType & argument_0,
                                const GGS_location & argument_1) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@L_EXsignature'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_EXsignature ;

class GGS_L_EXsignature {
  public : typedef elementOf_GGS_L_EXsignature element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_L_EXsignature (void) ; // Default Constructor
  public : GGS_L_EXsignature (const GGS_L_EXsignature &) ; // Copy constructor
  public : void operator = (const GGS_L_EXsignature &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_L_EXsignature (void) ;

//--- Constructor 'empty'
  public : static GGS_L_EXsignature constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_formalArgumentPassingMode& argument_1) ;
  protected : void internalAppendItem (const GGS_AC_galgasType & argument_0,
                                const GGS_formalArgumentPassingMode& argument_1) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@L_actualParametersSignature'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_actualParametersSignature ;

class GGS_L_actualParametersSignature {
  public : typedef elementOf_GGS_L_actualParametersSignature element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_L_actualParametersSignature (void) ; // Default Constructor
  public : GGS_L_actualParametersSignature (const GGS_L_actualParametersSignature &) ; // Copy constructor
  public : void operator = (const GGS_L_actualParametersSignature &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_L_actualParametersSignature (void) ;

//--- Constructor 'empty'
  public : static GGS_L_actualParametersSignature constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_actualParametersPassingMode& argument_1) ;
  protected : void internalAppendItem (const GGS_AC_galgasType & argument_0,
                                const GGS_actualParametersPassingMode& argument_1) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@M_accessors_map'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_accessors_map ;

class GGS_M_accessors_map : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_accessors_map element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_accessors_map * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_M_accessors_map constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0,
                                const GGS_AC_galgasType &  inParameter1) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0,
                                GGS_AC_galgasType   & outParameter1) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_L_EXsignature & inParameter0,
                                  const GGS_AC_galgasType & inParameter1,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_L_EXsignature & outParameter0,
                                  GGS_AC_galgasType & outParameter1,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           list '@L_stringList'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_stringList ;

class GGS_L_stringList {
  public : typedef elementOf_GGS_L_stringList element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_L_stringList (void) ; // Default Constructor
  public : GGS_L_stringList (const GGS_L_stringList &) ; // Copy constructor
  public : void operator = (const GGS_L_stringList &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_L_stringList (void) ;

//--- Constructor 'empty'
  public : static GGS_L_stringList constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_string& argument_0) ;
  protected : void internalAppendItem (const GGS_string& argument_0) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@L_lstringList'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_lstringList ;

class GGS_L_lstringList {
  public : typedef elementOf_GGS_L_lstringList element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_L_lstringList (void) ; // Default Constructor
  public : GGS_L_lstringList (const GGS_L_lstringList &) ; // Copy constructor
  public : void operator = (const GGS_L_lstringList &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_L_lstringList (void) ;

//--- Constructor 'empty'
  public : static GGS_L_lstringList constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_lstring & argument_0) ;
  protected : void internalAppendItem (const GGS_lstring & argument_0) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

class cPtr_C_galgasPrimitiveType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_C_galgasPrimitiveType'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_C_galgasPrimitiveType {
  protected : cPtr_C_galgasPrimitiveType * mPointer ;
  public : GGS_C_galgasPrimitiveType (void) ;
  public : GGS_C_galgasPrimitiveType (const GGS_C_galgasPrimitiveType &) ;
  public : virtual ~GGS_C_galgasPrimitiveType (void) ;
  public : void operator = (const GGS_C_galgasPrimitiveType &) ;
  public : inline bool isBuilt (void) const { return mPointer != NULL ; }
  public : inline bool isEqualTo (const GGS_C_galgasPrimitiveType & operand_) const {
    return mPointer == operand_.mPointer ;
  }
  public : void operator = (cPtr_C_galgasPrimitiveType * inSource) ;
  public : GGS_C_galgasPrimitiveType (cPtr_C_galgasPrimitiveType * inSource) ;
  public : inline cPtr_C_galgasPrimitiveType * getPtr (void) const {
    return mPointer ;
  }
  public : void drop_operation (void) ;
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : cPtr_C_galgasPrimitiveType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_galgasPrimitiveType * operator () (LOCATION_ARGS) const { return mPointer ; }
  #endif
  public : GGS_string reader_messageGalgasType (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 class map element 'e_typeTableMethodes'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeTableMethodes {
  public : GGS_L_EXsignature  aListeTypesParametres ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         map 'typeTableMethodes'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeTableMethodes : public cClassMethodsMap <e_typeTableMethodes> {
//--- Get object pointer
  public : inline GGS_typeTableMethodes * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- Handle 'empty' constructor
  public : static GGS_typeTableMethodes constructor_empty (void) ;
//---
public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0) ;
public : void methode_searchKeyGetIndex (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                GGS_L_EXsignature   & outParameter0) ;
//---
public : void methode_searchForOverride (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0) ;
public : void methode_searchForOverrideGetIndex (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                GGS_L_EXsignature   & outParameter0) ;
//---
public : void methode_insertAbstract (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0) ;
public : void methode_insertAbstractGetIndex (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_L_EXsignature &  inParameter0) ;
//---
public : void methode_insertNotAbstract (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0) ;
public : void methode_insertNotAbstractGetIndex (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                const GGS_L_EXsignature &  inParameter0) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map '@M_externTypeConstructorMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_externTypeConstructorMap ;

class GGS_M_externTypeConstructorMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_externTypeConstructorMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_externTypeConstructorMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_M_externTypeConstructorMap constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_typeListeAttributsSemantiques &  inParameter0) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_typeListeAttributsSemantiques   & outParameter0) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_typeListeAttributsSemantiques & inParameter0,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_typeListeAttributsSemantiques & outParameter0,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map '@M_terminalSymbolsMapForUse'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_terminalSymbolsMapForUse ;

class GGS_M_terminalSymbolsMapForUse : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_terminalSymbolsMapForUse element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_terminalSymbolsMapForUse * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_M_terminalSymbolsMapForUse constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_typeListeAttributsSemantiques &  inParameter0) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_typeListeAttributsSemantiques   & outParameter0) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_typeListeAttributsSemantiques & inParameter0,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_typeListeAttributsSemantiques & outParameter0,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@M_lexiqueComponents'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_lexiqueComponents ;

class GGS_M_lexiqueComponents : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_lexiqueComponents element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_lexiqueComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_M_lexiqueComponents constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_terminalSymbolsMapForUse &  inParameter0) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_terminalSymbolsMapForUse   & outParameter0) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_M_terminalSymbolsMapForUse & inParameter0,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_M_terminalSymbolsMapForUse & outParameter0,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@typeTableEnAvant'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableEnAvant ;

class GGS_typeTableEnAvant : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeTableEnAvant element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_typeTableEnAvant * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_typeTableEnAvant constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_galgasType   & outParameter0) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_AC_galgasType & inParameter0,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_AC_galgasType & outParameter0,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Map '@M_nonterminalSymbolAlts'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonterminalSymbolAlts ;

class GGS_M_nonterminalSymbolAlts : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_nonterminalSymbolAlts element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_nonterminalSymbolAlts * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_M_nonterminalSymbolAlts constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_L_EXsignature & inParameter0,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_L_EXsignature & outParameter0,
                                  GGS_luint * outIndex) ;
} ;

class cPtr_AC_semanticsEntity ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_AC_semanticsEntity'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_AC_semanticsEntity {
  protected : cPtr_AC_semanticsEntity * mPointer ;
  public : GGS_AC_semanticsEntity (void) ;
  public : GGS_AC_semanticsEntity (const GGS_AC_semanticsEntity &) ;
  public : virtual ~GGS_AC_semanticsEntity (void) ;
  public : void operator = (const GGS_AC_semanticsEntity &) ;
  public : inline bool isBuilt (void) const { return mPointer != NULL ; }
  public : inline bool isEqualTo (const GGS_AC_semanticsEntity & operand_) const {
    return mPointer == operand_.mPointer ;
  }
  public : void operator = (cPtr_AC_semanticsEntity * inSource) ;
  public : GGS_AC_semanticsEntity (cPtr_AC_semanticsEntity * inSource) ;
  public : inline cPtr_AC_semanticsEntity * getPtr (void) const {
    return mPointer ;
  }
  public : void drop_operation (void) ;
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : cPtr_AC_semanticsEntity * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_semanticsEntity * operator () (LOCATION_ARGS) const { return mPointer ; }
  #endif
  public : GGS_string reader_messageTypeEntite (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Map '@M_semanticsEntitiesForUse'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_semanticsEntitiesForUse ;

class GGS_M_semanticsEntitiesForUse : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_semanticsEntitiesForUse element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_semanticsEntitiesForUse * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_M_semanticsEntitiesForUse constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_semanticsEntity &  inParameter0) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_semanticsEntity   & outParameter0) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_AC_semanticsEntity & inParameter0,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_AC_semanticsEntity & outParameter0,
                                  GGS_luint * outIndex) ;
} ;

class cPtr_AC_typeForGrammarComponent ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_AC_typeForGrammarComponent'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_AC_typeForGrammarComponent {
  protected : cPtr_AC_typeForGrammarComponent * mPointer ;
  public : GGS_AC_typeForGrammarComponent (void) ;
  public : GGS_AC_typeForGrammarComponent (const GGS_AC_typeForGrammarComponent &) ;
  public : virtual ~GGS_AC_typeForGrammarComponent (void) ;
  public : void operator = (const GGS_AC_typeForGrammarComponent &) ;
  public : inline bool isBuilt (void) const { return mPointer != NULL ; }
  public : inline bool isEqualTo (const GGS_AC_typeForGrammarComponent & operand_) const {
    return mPointer == operand_.mPointer ;
  }
  public : void operator = (cPtr_AC_typeForGrammarComponent * inSource) ;
  public : GGS_AC_typeForGrammarComponent (cPtr_AC_typeForGrammarComponent * inSource) ;
  public : inline cPtr_AC_typeForGrammarComponent * getPtr (void) const {
    return mPointer ;
  }
  public : void drop_operation (void) ;
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : cPtr_AC_typeForGrammarComponent * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_typeForGrammarComponent * operator () (LOCATION_ARGS) const { return mPointer ; }
  #endif
  public : GGS_string reader_typeForGrammarComponentMessage (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map '@M_typesForGrammarComponent'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_typesForGrammarComponent ;

class GGS_M_typesForGrammarComponent : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_typesForGrammarComponent element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_typesForGrammarComponent * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_M_typesForGrammarComponent constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_typeForGrammarComponent &  inParameter0) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_typeForGrammarComponent   & outParameter0) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_AC_typeForGrammarComponent & inParameter0,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_AC_typeForGrammarComponent & outParameter0,
                                  GGS_luint * outIndex) ;
} ;

void routine_checkSignature_ForGrammarComponent (C_Lexique &,
                                const GGS_L_signature  &,
                                const GGS_L_signature  &,
                                const GGS_location  &) ;

class cPtr_AC_instruction_ForGrammar ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_AC_instruction_ForGrammar'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_AC_instruction_ForGrammar {
  protected : cPtr_AC_instruction_ForGrammar * mPointer ;
  public : GGS_AC_instruction_ForGrammar (void) ;
  public : GGS_AC_instruction_ForGrammar (const GGS_AC_instruction_ForGrammar &) ;
  public : virtual ~GGS_AC_instruction_ForGrammar (void) ;
  public : void operator = (const GGS_AC_instruction_ForGrammar &) ;
  public : inline bool isBuilt (void) const { return mPointer != NULL ; }
  public : inline bool isEqualTo (const GGS_AC_instruction_ForGrammar & operand_) const {
    return mPointer == operand_.mPointer ;
  }
  public : void operator = (cPtr_AC_instruction_ForGrammar * inSource) ;
  public : GGS_AC_instruction_ForGrammar (cPtr_AC_instruction_ForGrammar * inSource) ;
  public : inline cPtr_AC_instruction_ForGrammar * getPtr (void) const {
    return mPointer ;
  }
  public : void drop_operation (void) ;
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : cPtr_AC_instruction_ForGrammar * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_instruction_ForGrammar * operator () (LOCATION_ARGS) const { return mPointer ; }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@L_ruleSyntaxSignature'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_ruleSyntaxSignature ;

class GGS_L_ruleSyntaxSignature {
  public : typedef elementOf_GGS_L_ruleSyntaxSignature element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_L_ruleSyntaxSignature (void) ; // Default Constructor
  public : GGS_L_ruleSyntaxSignature (const GGS_L_ruleSyntaxSignature &) ; // Copy constructor
  public : void operator = (const GGS_L_ruleSyntaxSignature &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_L_ruleSyntaxSignature (void) ;

//--- Constructor 'empty'
  public : static GGS_L_ruleSyntaxSignature constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_AC_instruction_ForGrammar & argument_0) ;
  protected : void internalAppendItem (const GGS_AC_instruction_ForGrammar & argument_0) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@L_grammarsMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_grammarsMap ;

class GGS_L_grammarsMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_L_grammarsMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_L_grammarsMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_L_grammarsMap constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_nonterminalSymbolAlts &  inParameter0) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_nonterminalSymbolAlts   & outParameter0) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_M_nonterminalSymbolAlts & inParameter0,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_M_nonterminalSymbolAlts & outParameter0,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Map '@M_nonterminalSymbolAltsForGrammar'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonterminalSymbolAltsForGrammar ;

class GGS_M_nonterminalSymbolAltsForGrammar : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_nonterminalSymbolAltsForGrammar element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_nonterminalSymbolAltsForGrammar * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_M_nonterminalSymbolAltsForGrammar constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_signature &  inParameter0) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_signature   & outParameter0) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_L_signature & inParameter0,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_L_signature & outParameter0,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              list '@L_productionRules_ForGrammarComponent'                *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_productionRules_ForGrammarComponent ;

class GGS_L_productionRules_ForGrammarComponent {
  public : typedef elementOf_GGS_L_productionRules_ForGrammarComponent element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_L_productionRules_ForGrammarComponent (void) ; // Default Constructor
  public : GGS_L_productionRules_ForGrammarComponent (const GGS_L_productionRules_ForGrammarComponent &) ; // Copy constructor
  public : void operator = (const GGS_L_productionRules_ForGrammarComponent &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_L_productionRules_ForGrammarComponent (void) ;

//--- Constructor 'empty'
  public : static GGS_L_productionRules_ForGrammarComponent constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_L_ruleSyntaxSignature & argument_2) ;
  protected : void internalAppendItem (const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_L_ruleSyntaxSignature & argument_2) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Map '@M_nonTerminalSymbolsForGrammar'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonTerminalSymbolsForGrammar ;

class GGS_M_nonTerminalSymbolsForGrammar : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_nonTerminalSymbolsForGrammar element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_nonTerminalSymbolsForGrammar * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_M_nonTerminalSymbolsForGrammar constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_nonterminalSymbolAltsForGrammar &  inParameter0) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_nonterminalSymbolAltsForGrammar   & outParameter0) ;
//--- 'searchKeyGetIndex' Search Method
  public : void methode_searchKeyGetIndex (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                GGS_M_nonterminalSymbolAltsForGrammar   & outParameter0) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_M_nonterminalSymbolAltsForGrammar & inParameter0,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_M_nonterminalSymbolAltsForGrammar & outParameter0,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@M_syntaxComponents'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_syntaxComponents ;

class GGS_M_syntaxComponents : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_syntaxComponents element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_syntaxComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_M_syntaxComponents constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_nonTerminalSymbolsForGrammar &  inParameter0,
                                const GGS_L_productionRules_ForGrammarComponent &  inParameter1,
                                const GGS_lstring &  inParameter2) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_nonTerminalSymbolsForGrammar   & outParameter0,
                                GGS_L_productionRules_ForGrammarComponent   & outParameter1,
                                GGS_lstring   & outParameter2) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_M_nonTerminalSymbolsForGrammar & inParameter0,
                                  const GGS_L_productionRules_ForGrammarComponent & inParameter1,
                                  const GGS_lstring & inParameter2,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_M_nonTerminalSymbolsForGrammar & outParameter0,
                                  GGS_L_productionRules_ForGrammarComponent & outParameter1,
                                  GGS_lstring & outParameter2,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 list '@L_branchList_ForGrammarComponent'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_branchList_ForGrammarComponent ;

class GGS_L_branchList_ForGrammarComponent {
  public : typedef elementOf_GGS_L_branchList_ForGrammarComponent element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_L_branchList_ForGrammarComponent (void) ; // Default Constructor
  public : GGS_L_branchList_ForGrammarComponent (const GGS_L_branchList_ForGrammarComponent &) ; // Copy constructor
  public : void operator = (const GGS_L_branchList_ForGrammarComponent &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_L_branchList_ForGrammarComponent (void) ;

//--- Constructor 'empty'
  public : static GGS_L_branchList_ForGrammarComponent constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_L_ruleSyntaxSignature & argument_0) ;
  protected : void internalAppendItem (const GGS_L_ruleSyntaxSignature & argument_0) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  list '@L_syntaxComponents_ForGrammar'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_syntaxComponents_ForGrammar ;

class GGS_L_syntaxComponents_ForGrammar {
  public : typedef elementOf_GGS_L_syntaxComponents_ForGrammar element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_L_syntaxComponents_ForGrammar (void) ; // Default Constructor
  public : GGS_L_syntaxComponents_ForGrammar (const GGS_L_syntaxComponents_ForGrammar &) ; // Copy constructor
  public : void operator = (const GGS_L_syntaxComponents_ForGrammar &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_L_syntaxComponents_ForGrammar (void) ;

//--- Constructor 'empty'
  public : static GGS_L_syntaxComponents_ForGrammar constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_M_nonTerminalSymbolsForGrammar & argument_0,
                                const GGS_L_productionRules_ForGrammarComponent & argument_1,
                                const GGS_lstring & argument_2) ;
  protected : void internalAppendItem (const GGS_M_nonTerminalSymbolsForGrammar & argument_0,
                                const GGS_L_productionRules_ForGrammarComponent & argument_1,
                                const GGS_lstring & argument_2) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@L_identifiers'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_identifiers ;

class GGS_L_identifiers {
  public : typedef elementOf_GGS_L_identifiers element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_L_identifiers (void) ; // Default Constructor
  public : GGS_L_identifiers (const GGS_L_identifiers &) ; // Copy constructor
  public : void operator = (const GGS_L_identifiers &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_L_identifiers (void) ;

//--- Constructor 'empty'
  public : static GGS_L_identifiers constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_lstring & argument_0) ;
  protected : void internalAppendItem (const GGS_lstring & argument_0) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@typeSuperClassesMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeSuperClassesMap ;

class GGS_typeSuperClassesMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeSuperClassesMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_typeSuperClassesMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_typeSuperClassesMap constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Map '@typeClassInheritedMessagesMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeClassInheritedMessagesMap ;

class GGS_typeClassInheritedMessagesMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeClassInheritedMessagesMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_typeClassInheritedMessagesMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_typeClassInheritedMessagesMap constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Map '@typeSemanticAttributesMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeSemanticAttributesMap ;

class GGS_typeSemanticAttributesMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeSemanticAttributesMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_typeSemanticAttributesMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_typeSemanticAttributesMap constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_galgasType   & outParameter0) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_AC_galgasType & inParameter0,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_AC_galgasType & outParameter0,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  class for enumeration 'lastStateEnum'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_lastStateEnum {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_acceptedState, enum_warningState, enum_errorState} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const {return mValue ; }

//--- Default constructor
  public : inline GGS_lastStateEnum (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_lastStateEnum (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline uint16 bitCount (void) { return 2 ; }

//--- Is built ?
  public : inline bool isBuilt (void) const { return mValue > kNotBuilt ; }

//--- Construction from GALGAS constructor
  public : static inline GGS_lastStateEnum constructor_acceptedState (void) {
    return GGS_lastStateEnum (enum_acceptedState) ;
  }
  public : static inline GGS_lastStateEnum constructor_warningState (void) {
    return GGS_lastStateEnum (enum_warningState) ;
  }
  public : static inline GGS_lastStateEnum constructor_errorState (void) {
    return GGS_lastStateEnum (enum_errorState) ;
  }

//--- Messages

//--- Drop operation
  public : inline void drop_operation (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool operator == (const GGS_lastStateEnum inOperand) const ;
  public : GGS_bool operator != (const GGS_lastStateEnum inOperand) const ;
  public : GGS_bool operator <= (const GGS_lastStateEnum inOperand) const ;
  public : GGS_bool operator >= (const GGS_lastStateEnum inOperand) const ;
  public : GGS_bool operator <  (const GGS_lastStateEnum inOperand) const ;
  public : GGS_bool operator >  (const GGS_lastStateEnum inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@lastStateList'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_lastStateList ;

class GGS_lastStateList {
  public : typedef elementOf_GGS_lastStateList element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_lastStateList (void) ; // Default Constructor
  public : GGS_lastStateList (const GGS_lastStateList &) ; // Copy constructor
  public : void operator = (const GGS_lastStateList &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_lastStateList (void) ;

//--- Constructor 'empty'
  public : static GGS_lastStateList constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lastStateEnum& argument_1,
                                const GGS_L_stringList & argument_2) ;
  protected : void internalAppendItem (const GGS_lstring & argument_0,
                                const GGS_lastStateEnum& argument_1,
                                const GGS_L_stringList & argument_2) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@transitionStatusMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_transitionStatusMap ;

class GGS_transitionStatusMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_transitionStatusMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_transitionStatusMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_transitionStatusMap constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lastStateEnum&  inParameter0,
                                const GGS_L_stringList &  inParameter1) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_lastStateEnum& inParameter0,
                                  const GGS_L_stringList & inParameter1,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_lastStateEnum& outParameter0,
                                  GGS_L_stringList & outParameter1,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@insertOrSearchMethodList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_insertOrSearchMethodList ;

class GGS_insertOrSearchMethodList {
  public : typedef elementOf_GGS_insertOrSearchMethodList element_type ;
  private : element_type * mFirstItem ;
  private : element_type * mLastItem ;
  private : sint32 mListLength ;
  public : inline sint32 count (void) const {
    return mListLength ;
  }
  private : sint32 * mCountReference ;
  public : GGS_insertOrSearchMethodList (void) ; // Default Constructor
  public : GGS_insertOrSearchMethodList (const GGS_insertOrSearchMethodList &) ; // Copy constructor
  public : void operator = (const GGS_insertOrSearchMethodList &) ; // Assignment operator
//--- Virtual destructor
  public : virtual ~GGS_insertOrSearchMethodList (void) ;

//--- Constructor 'empty'
  public : static GGS_insertOrSearchMethodList constructor_empty (void) ;
//--- Get first item
  public : inline element_type * firstObject (void) const { return mFirstItem ; }
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_string& argument_2,
                                const GGS_lastStateList & argument_3,
                                const GGS_transitionStatusMap & argument_4,
                                const GGS_bool& argument_5) ;
  protected : void internalAppendItem (const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_string& argument_2,
                                const GGS_lastStateList & argument_3,
                                const GGS_transitionStatusMap & argument_4,
                                const GGS_bool& argument_5) ;
  public : void insulateList (void) ;
  public : void emptyList (void) ;
  public : inline bool isBuilt (void) const {
    return mCountReference != NULL ;
  }
  public : void drop_operation (void) ;
  public : inline GGS_uint reader_length (void)  const {
    return GGS_uint (mCountReference != NULL, (uint32) mListLength) ;
  }
} ;

class cPtr_typeDefEntiteUtilisable ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeDefEntiteUtilisable'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeDefEntiteUtilisable {
  protected : cPtr_typeDefEntiteUtilisable * mPointer ;
  public : GGS_typeDefEntiteUtilisable (void) ;
  public : GGS_typeDefEntiteUtilisable (const GGS_typeDefEntiteUtilisable &) ;
  public : virtual ~GGS_typeDefEntiteUtilisable (void) ;
  public : void operator = (const GGS_typeDefEntiteUtilisable &) ;
  public : inline bool isBuilt (void) const { return mPointer != NULL ; }
  public : inline bool isEqualTo (const GGS_typeDefEntiteUtilisable & operand_) const {
    return mPointer == operand_.mPointer ;
  }
  public : void operator = (cPtr_typeDefEntiteUtilisable * inSource) ;
  public : GGS_typeDefEntiteUtilisable (cPtr_typeDefEntiteUtilisable * inSource) ;
  public : inline cPtr_typeDefEntiteUtilisable * getPtr (void) const {
    return mPointer ;
  }
  public : void drop_operation (void) ;
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : cPtr_typeDefEntiteUtilisable * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeDefEntiteUtilisable * operator () (LOCATION_ARGS) const { return mPointer ; }
  #endif
  public : GGS_string reader_messageTypeEntite (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Map '@typeTableBlocsDeTable'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableBlocsDeTable ;

class GGS_typeTableBlocsDeTable : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeTableBlocsDeTable element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_typeTableBlocsDeTable * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_typeTableBlocsDeTable constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0,
                                const GGS_L_EXsignature &  inParameter1) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0,
                                GGS_L_EXsignature   & outParameter1) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_L_EXsignature & inParameter0,
                                  const GGS_L_EXsignature & inParameter1,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_L_EXsignature & outParameter0,
                                  GGS_L_EXsignature & outParameter1,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@mapMethodMap'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapMethodMap ;

class GGS_mapMethodMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_mapMethodMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_mapMethodMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_mapMethodMap constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_L_EXsignature & inParameter0,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_L_EXsignature & outParameter0,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@typeEnumMessageMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeEnumMessageMap ;

class GGS_typeEnumMessageMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeEnumMessageMap element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_typeEnumMessageMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_typeEnumMessageMap constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_lstringList &  inParameter0) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_lstringList   & outParameter0) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_L_lstringList & inParameter0,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_L_lstringList & outParameter0,
                                  GGS_luint * outIndex) ;
} ;

void routine_verifierCompatibiliteTypesSemantiques (C_Lexique &,
                                const GGS_AC_galgasType  &,
                                const GGS_AC_galgasType  &,
                                const GGS_location  &) ;

void routine_verifierCompatibiliteSignatures (C_Lexique &,
                                GGS_L_EXsignature  ,
                                GGS_L_EXsignature  ,
                                GGS_location  ) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@M_cli_options'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_cli_options ;

class GGS_M_cli_options : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_cli_options element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_cli_options * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_M_cli_options constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lchar &  inParameter0,
                                const GGS_lstring &  inParameter1,
                                const GGS_lstring &  inParameter2,
                                const GGS_uint &  inParameter3) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lchar   & outParameter0,
                                GGS_lstring   & outParameter1,
                                GGS_lstring   & outParameter2,
                                GGS_uint   & outParameter3) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_lchar & inParameter0,
                                  const GGS_lstring & inParameter1,
                                  const GGS_lstring & inParameter2,
                                  const GGS_uint & inParameter3,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_lchar & outParameter0,
                                  GGS_lstring & outParameter1,
                                  GGS_lstring & outParameter2,
                                  GGS_uint & outParameter3,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@M_optionComponents'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_optionComponents ;

class GGS_M_optionComponents : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_optionComponents element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_optionComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_M_optionComponents constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_cli_options &  inParameter0,
                                const GGS_M_cli_options &  inParameter1,
                                const GGS_M_cli_options &  inParameter2) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_cli_options   & outParameter0,
                                GGS_M_cli_options   & outParameter1,
                                GGS_M_cli_options   & outParameter2) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_M_cli_options & inParameter0,
                                  const GGS_M_cli_options & inParameter1,
                                  const GGS_M_cli_options & inParameter2,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_M_cli_options & outParameter0,
                                  GGS_M_cli_options & outParameter1,
                                  GGS_M_cli_options & outParameter2,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@M_grammarComponents'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_grammarComponents ;

class GGS_M_grammarComponents : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_grammarComponents element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_grammarComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_M_grammarComponents constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_nonterminalSymbolAltsForGrammar &  inParameter0,
                                const GGS_lstring &  inParameter1,
                                const GGS_M_optionComponents &  inParameter2) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_nonterminalSymbolAltsForGrammar   & outParameter0,
                                GGS_lstring   & outParameter1,
                                GGS_M_optionComponents   & outParameter2) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_M_nonterminalSymbolAltsForGrammar & inParameter0,
                                  const GGS_lstring & inParameter1,
                                  const GGS_M_optionComponents & inParameter2,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_M_nonterminalSymbolAltsForGrammar & outParameter0,
                                  GGS_lstring & outParameter1,
                                  GGS_M_optionComponents & outParameter2,
                                  GGS_luint * outIndex) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Map '@M_semanticsComponents'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_semanticsComponents ;

class GGS_M_semanticsComponents : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_semanticsComponents element_type ;
//--- Get pointers
  public : inline element_type * rootObject (void) const { return (element_type *) mRoot ; }
  public : inline element_type * firstObject (void) const { return (element_type *) mFirstItem ; }
  public : inline element_type * lastObject (void) const { return (element_type *) mLastItem ; }
//--- Create a new element
  protected : virtual AC_galgas_map_element * new_element (const GGS_lstring & inKey, void * inInfo) ;
//--- Get object pointer (for method call)
  public : inline GGS_M_semanticsComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
//--- 'empty' constructor
  public : static GGS_M_semanticsComponents constructor_empty (void) ;
//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;
//--- 'insertKey' Insert Method
  public : void methode_insertKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_ModelMap &  inParameter0,
                                const GGS_ActionMap &  inParameter1,
                                const GGS_stringset &  inParameter2,
                                const GGS_stringset &  inParameter3,
                                const GGS_M_optionComponents &  inParameter4,
                                const GGS_M_semanticsEntitiesForUse &  inParameter5) ;
//--- 'searchKey' Search Method
  public : void methode_searchKey (C_Lexique & inLexique,
                                const GGS_lstring & inKey,
                                GGS_ModelMap   & outParameter0,
                                GGS_ActionMap   & outParameter1,
                                GGS_stringset   & outParameter2,
                                GGS_stringset   & outParameter3,
                                GGS_M_optionComponents   & outParameter4,
                                GGS_M_semanticsEntitiesForUse   & outParameter5) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  const GGS_ModelMap & inParameter0,
                                  const GGS_ActionMap & inParameter1,
                                  const GGS_stringset & inParameter2,
                                  const GGS_stringset & inParameter3,
                                  const GGS_M_optionComponents & inParameter4,
                                  const GGS_M_semanticsEntitiesForUse & inParameter5,
                                  GGS_luint * outIndex) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Lexique & inLexique,
                                  const char * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_ModelMap & outParameter0,
                                  GGS_ActionMap & outParameter1,
                                  GGS_stringset & outParameter2,
                                  GGS_stringset & outParameter3,
                                  GGS_M_optionComponents & outParameter4,
                                  GGS_M_semanticsEntitiesForUse & outParameter5,
                                  GGS_luint * outIndex) ;
} ;

void routine_handleReaderCall (C_Lexique &,
                                const GGS_AC_galgasType  &,
                                const GGS_lstring  &,
                                GGS_typeListeAttributsSemantiques  &,
                                GGS_AC_galgasType  &) ;

void routine_check_KL_escapeCharacters (C_Lexique &,
                                GGS_lstring  ) ;

void routine_check_K_escapeCharacters (C_Lexique &,
                                GGS_lstring  ) ;

void routine_importSemanticsComponent (C_Lexique &,
                                GGS_M_semanticsComponents  &,
                                GGS_ModelMap  &,
                                GGS_ActionMap  &,
                                GGS_stringset  &,
                                GGS_lstring  ) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of list '@L_signature'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_signature {
  private : elementOf_GGS_L_signature * mNextItem ;
    public : GGS_formalArgumentPassingMode mFormalArgumentPassingMode ;
    public : GGS_lstring  mGalgasTypeName ;
  public : elementOf_GGS_L_signature (const GGS_formalArgumentPassingMode& ,
                                const GGS_lstring & ) ;

  public : inline elementOf_GGS_L_signature * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_signature (const elementOf_GGS_L_signature &) ;
  private : void operator = (const elementOf_GGS_L_signature &) ;
  public : inline ~elementOf_GGS_L_signature (void) {}
  friend class GGS_L_signature ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@typeListModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListModel {
  private : elementOf_GGS_typeListModel * mNextItem ;
    public : GGS_lstring  mTypeName ;
  public : elementOf_GGS_typeListModel (const GGS_lstring & ) ;

  public : inline elementOf_GGS_typeListModel * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_typeListModel (const elementOf_GGS_typeListModel &) ;
  private : void operator = (const elementOf_GGS_typeListModel &) ;
  public : inline ~elementOf_GGS_typeListModel (void) {}
  friend class GGS_typeListModel ;
} ;

#include "include_TypeModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                            class 'BoolModel'                              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_BoolModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_BoolModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_BoolModel {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_BoolModel * constructor_new () ;
  #else
    public : inline static cPtr_BoolModel * constructor_new () {
      return new cPtr_BoolModel() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            class 'CharModel'                              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_CharModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_CharModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_CharModel {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_CharModel * constructor_new () ;
  #else
    public : inline static cPtr_CharModel * constructor_new () {
      return new cPtr_CharModel() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            class 'UIntModel'                              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_UIntModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_UIntModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_UIntModel {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_UIntModel * constructor_new () ;
  #else
    public : inline static cPtr_UIntModel * constructor_new () {
      return new cPtr_UIntModel() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            class 'SIntModel'                              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_SIntModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_SIntModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_SIntModel {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_SIntModel * constructor_new () ;
  #else
    public : inline static cPtr_SIntModel * constructor_new () {
      return new cPtr_SIntModel() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           class 'DoubleModel'                             *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_DoubleModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_DoubleModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_DoubleModel {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_DoubleModel * constructor_new () ;
  #else
    public : inline static cPtr_DoubleModel * constructor_new () {
      return new cPtr_DoubleModel() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           class 'StringModel'                             *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_StringModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_StringModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_StringModel {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_StringModel * constructor_new () ;
  #else
    public : inline static cPtr_StringModel * constructor_new () {
      return new cPtr_StringModel() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            class 'LBoolModel'                             *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_LBoolModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_LBoolModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LBoolModel {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_LBoolModel * constructor_new () ;
  #else
    public : inline static cPtr_LBoolModel * constructor_new () {
      return new cPtr_LBoolModel() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            class 'LCharModel'                             *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_LCharModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_LCharModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LCharModel {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_LCharModel * constructor_new () ;
  #else
    public : inline static cPtr_LCharModel * constructor_new () {
      return new cPtr_LCharModel() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            class 'LUIntModel'                             *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_LUIntModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_LUIntModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LUIntModel {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_LUIntModel * constructor_new () ;
  #else
    public : inline static cPtr_LUIntModel * constructor_new () {
      return new cPtr_LUIntModel() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            class 'LSIntModel'                             *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_LSIntModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_LSIntModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LSIntModel {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_LSIntModel * constructor_new () ;
  #else
    public : inline static cPtr_LSIntModel * constructor_new () {
      return new cPtr_LSIntModel() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           class 'LDoubleModel'                            *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_LDoubleModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_LDoubleModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LDoubleModel {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_LDoubleModel * constructor_new () ;
  #else
    public : inline static cPtr_LDoubleModel * constructor_new () {
      return new cPtr_LDoubleModel() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           class 'LStringModel'                            *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_LStringModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_LStringModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LStringModel {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_LStringModel * constructor_new () ;
  #else
    public : inline static cPtr_LStringModel * constructor_new () {
      return new cPtr_LStringModel() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          class 'StringsetModel'                           *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_StringsetModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_StringsetModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_StringsetModel {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_StringsetModel * constructor_new () ;
  #else
    public : inline static cPtr_StringsetModel * constructor_new () {
      return new cPtr_StringsetModel() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          class 'LocationModel'                            *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_LocationModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_LocationModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LocationModel {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_LocationModel * constructor_new () ;
  #else
    public : inline static cPtr_LocationModel * constructor_new () {
      return new cPtr_LocationModel() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            class 'ListModel'                              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_ListModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_ListModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_ListModel {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_ListModel * constructor_new (const GGS_typeListModel & argument_0) ;
  #else
    public : inline static cPtr_ListModel * constructor_new (const GGS_typeListModel & argument_0) {
      return new cPtr_ListModel(argument_0) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@enumConstantMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_enumConstantMap {
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_enumConstantMap : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_enumConstantMap (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_enumConstantMap & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_enumConstantMap * nextObject (void) const { return (elementOf_GGS_enumConstantMap *) mNextItem ; }
    public : inline elementOf_GGS_enumConstantMap * infObject (void) const { return (elementOf_GGS_enumConstantMap *) mInfPtr ; }
    public : inline elementOf_GGS_enumConstantMap * supObject (void) const { return (elementOf_GGS_enumConstantMap *) mSupPtr ; }
  //--- Data members
    public : e_enumConstantMap mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@enumMessageMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_enumMessageMap {
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_enumMessageMap : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_enumMessageMap (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_enumMessageMap & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_enumMessageMap * nextObject (void) const { return (elementOf_GGS_enumMessageMap *) mNextItem ; }
    public : inline elementOf_GGS_enumMessageMap * infObject (void) const { return (elementOf_GGS_enumMessageMap *) mInfPtr ; }
    public : inline elementOf_GGS_enumMessageMap * supObject (void) const { return (elementOf_GGS_enumMessageMap *) mSupPtr ; }
  //--- Data members
    public : e_enumMessageMap mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//                            class 'EnumModel'                              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_EnumModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_EnumModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_EnumModel {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_EnumModel * constructor_new (const GGS_enumConstantMap & argument_0,
                                const GGS_enumMessageMap & argument_1) ;
  #else
    public : inline static cPtr_EnumModel * constructor_new (const GGS_enumConstantMap & argument_0,
                                const GGS_enumMessageMap & argument_1) {
      return new cPtr_EnumModel(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@constructorMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_constructorMap {
  public : GGS_typeListModel  mFormalInputArgumentList ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_constructorMap : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_constructorMap (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_constructorMap & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_constructorMap * nextObject (void) const { return (elementOf_GGS_constructorMap *) mNextItem ; }
    public : inline elementOf_GGS_constructorMap * infObject (void) const { return (elementOf_GGS_constructorMap *) mInfPtr ; }
    public : inline elementOf_GGS_constructorMap * supObject (void) const { return (elementOf_GGS_constructorMap *) mSupPtr ; }
  //--- Data members
    public : e_constructorMap mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of map '@readerMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class e_readerMap {
  public : GGS_L_signature  mReaderFormalArgumentList ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_readerMap : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_readerMap (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_readerMap & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_readerMap * nextObject (void) const { return (elementOf_GGS_readerMap *) mNextItem ; }
    public : inline elementOf_GGS_readerMap * infObject (void) const { return (elementOf_GGS_readerMap *) mInfPtr ; }
    public : inline elementOf_GGS_readerMap * supObject (void) const { return (elementOf_GGS_readerMap *) mSupPtr ; }
  //--- Data members
    public : e_readerMap mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@modifierMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class e_modifierMap {
  public : GGS_L_signature  mModifierFormalArgumentList ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_modifierMap : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_modifierMap (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_modifierMap & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_modifierMap * nextObject (void) const { return (elementOf_GGS_modifierMap *) mNextItem ; }
    public : inline elementOf_GGS_modifierMap * infObject (void) const { return (elementOf_GGS_modifierMap *) mInfPtr ; }
    public : inline elementOf_GGS_modifierMap * supObject (void) const { return (elementOf_GGS_modifierMap *) mSupPtr ; }
  //--- Data members
    public : e_modifierMap mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'ExternTypeModel'                           *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_ExternTypeModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_ExternTypeModel'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_ExternTypeModel {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_ExternTypeModel * constructor_new (const GGS_constructorMap & argument_0,
                                const GGS_readerMap & argument_1,
                                const GGS_modifierMap & argument_2,
                                const GGS_typeListModel & argument_3) ;
  #else
    public : inline static cPtr_ExternTypeModel * constructor_new (const GGS_constructorMap & argument_0,
                                const GGS_readerMap & argument_1,
                                const GGS_modifierMap & argument_2,
                                const GGS_typeListModel & argument_3) {
      return new cPtr_ExternTypeModel(argument_0,
                                argument_1,
                                argument_2,
                                argument_3) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@classMessageMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_classMessageMap {
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_classMessageMap : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_classMessageMap (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_classMessageMap & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_classMessageMap * nextObject (void) const { return (elementOf_GGS_classMessageMap *) mNextItem ; }
    public : inline elementOf_GGS_classMessageMap * infObject (void) const { return (elementOf_GGS_classMessageMap *) mInfPtr ; }
    public : inline elementOf_GGS_classMessageMap * supObject (void) const { return (elementOf_GGS_classMessageMap *) mSupPtr ; }
  //--- Data members
    public : e_classMessageMap mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//                            class 'ClassModel'                             *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_ClassModel.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_ClassModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_ClassModel {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_ClassModel * constructor_new (const GGS_bool& argument_0,
                                const GGS_stringset & argument_1,
                                const GGS_typeListModel & argument_2,
                                const GGS_classMessageMap & argument_3) ;
  #else
    public : inline static cPtr_ClassModel * constructor_new (const GGS_bool& argument_0,
                                const GGS_stringset & argument_1,
                                const GGS_typeListModel & argument_2,
                                const GGS_classMessageMap & argument_3) {
      return new cPtr_ClassModel(argument_0,
                                argument_1,
                                argument_2,
                                argument_3) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Element of map '@ModelMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class e_ModelMap {
  public : GGS_TypeModel  mType ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_ModelMap : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_ModelMap (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_ModelMap & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_ModelMap * nextObject (void) const { return (elementOf_GGS_ModelMap *) mNextItem ; }
    public : inline elementOf_GGS_ModelMap * infObject (void) const { return (elementOf_GGS_ModelMap *) mInfPtr ; }
    public : inline elementOf_GGS_ModelMap * supObject (void) const { return (elementOf_GGS_ModelMap *) mSupPtr ; }
  //--- Data members
    public : e_ModelMap mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of map '@ActionMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class e_ActionMap {
  public : GGS_L_signature  mSignature ;
  public : GGS_bool mIsExtern ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_ActionMap : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_ActionMap (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_ActionMap & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_ActionMap * nextObject (void) const { return (elementOf_GGS_ActionMap *) mNextItem ; }
    public : inline elementOf_GGS_ActionMap * infObject (void) const { return (elementOf_GGS_ActionMap *) mInfPtr ; }
    public : inline elementOf_GGS_ActionMap * supObject (void) const { return (elementOf_GGS_ActionMap *) mSupPtr ; }
  //--- Data members
    public : e_ActionMap mInfo ;
} ;
#include "include_AC_galgasType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@typeListeAttributsSemantiques'              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListeAttributsSemantiques {
  private : elementOf_GGS_typeListeAttributsSemantiques * mNextItem ;
    public : GGS_AC_galgasType  mAttributType ;
    public : GGS_lstring  aNomAttribut ;
  public : elementOf_GGS_typeListeAttributsSemantiques (const GGS_AC_galgasType & ,
                                const GGS_lstring & ) ;

  public : inline elementOf_GGS_typeListeAttributsSemantiques * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_typeListeAttributsSemantiques (const elementOf_GGS_typeListeAttributsSemantiques &) ;
  private : void operator = (const elementOf_GGS_typeListeAttributsSemantiques &) ;
  public : inline ~elementOf_GGS_typeListeAttributsSemantiques (void) {}
  friend class GGS_typeListeAttributsSemantiques ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@typeTypesList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTypesList {
  private : elementOf_GGS_typeTypesList * mNextItem ;
    public : GGS_AC_galgasType  mType ;
    public : GGS_location  mEndOfExpressionLocation ;
  public : elementOf_GGS_typeTypesList (const GGS_AC_galgasType & ,
                                const GGS_location & ) ;

  public : inline elementOf_GGS_typeTypesList * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_typeTypesList (const elementOf_GGS_typeTypesList &) ;
  private : void operator = (const elementOf_GGS_typeTypesList &) ;
  public : inline ~elementOf_GGS_typeTypesList (void) {}
  friend class GGS_typeTypesList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@L_EXsignature'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_EXsignature {
  private : elementOf_GGS_L_EXsignature * mNextItem ;
    public : GGS_AC_galgasType  mType ;
    public : GGS_formalArgumentPassingMode mFormalArgumentPassingMode ;
  public : elementOf_GGS_L_EXsignature (const GGS_AC_galgasType & ,
                                const GGS_formalArgumentPassingMode& ) ;

  public : inline elementOf_GGS_L_EXsignature * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_EXsignature (const elementOf_GGS_L_EXsignature &) ;
  private : void operator = (const elementOf_GGS_L_EXsignature &) ;
  public : inline ~elementOf_GGS_L_EXsignature (void) {}
  friend class GGS_L_EXsignature ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@L_actualParametersSignature'               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_actualParametersSignature {
  private : elementOf_GGS_L_actualParametersSignature * mNextItem ;
    public : GGS_AC_galgasType  mType ;
    public : GGS_actualParametersPassingMode mFormalArgumentPassingMode ;
  public : elementOf_GGS_L_actualParametersSignature (const GGS_AC_galgasType & ,
                                const GGS_actualParametersPassingMode& ) ;

  public : inline elementOf_GGS_L_actualParametersSignature * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_actualParametersSignature (const elementOf_GGS_L_actualParametersSignature &) ;
  private : void operator = (const elementOf_GGS_L_actualParametersSignature &) ;
  public : inline ~elementOf_GGS_L_actualParametersSignature (void) {}
  friend class GGS_L_actualParametersSignature ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@M_accessors_map'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_accessors_map {
  public : GGS_L_EXsignature  mAccessorSignature ;
  public : GGS_AC_galgasType  mReturnedType ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_accessors_map : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_M_accessors_map (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_M_accessors_map & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_M_accessors_map * nextObject (void) const { return (elementOf_GGS_M_accessors_map *) mNextItem ; }
    public : inline elementOf_GGS_M_accessors_map * infObject (void) const { return (elementOf_GGS_M_accessors_map *) mInfPtr ; }
    public : inline elementOf_GGS_M_accessors_map * supObject (void) const { return (elementOf_GGS_M_accessors_map *) mSupPtr ; }
  //--- Data members
    public : e_M_accessors_map mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@L_stringList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_stringList {
  private : elementOf_GGS_L_stringList * mNextItem ;
    public : GGS_string mErrorMessageElement ;
  public : elementOf_GGS_L_stringList (const GGS_string& ) ;

  public : inline elementOf_GGS_L_stringList * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_stringList (const elementOf_GGS_L_stringList &) ;
  private : void operator = (const elementOf_GGS_L_stringList &) ;
  public : inline ~elementOf_GGS_L_stringList (void) {}
  friend class GGS_L_stringList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@L_lstringList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_lstringList {
  private : elementOf_GGS_L_lstringList * mNextItem ;
    public : GGS_lstring  mString ;
  public : elementOf_GGS_L_lstringList (const GGS_lstring & ) ;

  public : inline elementOf_GGS_L_lstringList * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_lstringList (const elementOf_GGS_L_lstringList &) ;
  private : void operator = (const elementOf_GGS_L_lstringList &) ;
  public : inline ~elementOf_GGS_L_lstringList (void) {}
  friend class GGS_L_lstringList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 class 'typeGalgas_jokerInParameterList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_jokerInParameterList.h"

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_typeGalgas_jokerInParameterList'             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_jokerInParameterList {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeGalgas_jokerInParameterList * constructor_new () ;
  #else
    public : inline static cPtr_typeGalgas_jokerInParameterList * constructor_new () {
      return new cPtr_typeGalgas_jokerInParameterList() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'typeGalgas_bool'                           *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_bool.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_bool'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_bool {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeGalgas_bool * constructor_new () ;
  #else
    public : inline static cPtr_typeGalgas_bool * constructor_new () {
      return new cPtr_typeGalgas_bool() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeGalgas_string'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_string.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_string'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_string {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeGalgas_string * constructor_new () ;
  #else
    public : inline static cPtr_typeGalgas_string * constructor_new () {
      return new cPtr_typeGalgas_string() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'typeGalgas_sint'                           *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_sint.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_sint'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_sint {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeGalgas_sint * constructor_new () ;
  #else
    public : inline static cPtr_typeGalgas_sint * constructor_new () {
      return new cPtr_typeGalgas_sint() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'typeGalgas_uint'                           *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_uint.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_uint'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_uint {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeGalgas_uint * constructor_new () ;
  #else
    public : inline static cPtr_typeGalgas_uint * constructor_new () {
      return new cPtr_typeGalgas_uint() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'typeGalgas_char'                           *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_char.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_char'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_char {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeGalgas_char * constructor_new () ;
  #else
    public : inline static cPtr_typeGalgas_char * constructor_new () {
      return new cPtr_typeGalgas_char() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeGalgas_double'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_double.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_double'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_double {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeGalgas_double * constructor_new () ;
  #else
    public : inline static cPtr_typeGalgas_double * constructor_new () {
      return new cPtr_typeGalgas_double() ;
    }
  #endif
} ;

#include "include_C_galgasPrimitiveType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                       class 'typeGalgas_location'                         *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_location.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgas_location'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_location {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeGalgas_location * constructor_new () ;
  #else
    public : inline static cPtr_typeGalgas_location * constructor_new () {
      return new cPtr_typeGalgas_location() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeGalgas_lstring'                         *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_lstring.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgas_lstring'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_lstring {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeGalgas_lstring * constructor_new () ;
  #else
    public : inline static cPtr_typeGalgas_lstring * constructor_new () {
      return new cPtr_typeGalgas_lstring() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'typeGalgas_lchar'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_lchar.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_lchar'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_lchar {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeGalgas_lchar * constructor_new () ;
  #else
    public : inline static cPtr_typeGalgas_lchar * constructor_new () {
      return new cPtr_typeGalgas_lchar() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'typeGalgas_lbool'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_lbool.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_lbool'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_lbool {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeGalgas_lbool * constructor_new () ;
  #else
    public : inline static cPtr_typeGalgas_lbool * constructor_new () {
      return new cPtr_typeGalgas_lbool() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'typeGalgas_luint'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_luint.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_luint'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_luint {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeGalgas_luint * constructor_new () ;
  #else
    public : inline static cPtr_typeGalgas_luint * constructor_new () {
      return new cPtr_typeGalgas_luint() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'typeGalgas_lsint'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_lsint.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_lsint'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_lsint {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeGalgas_lsint * constructor_new () ;
  #else
    public : inline static cPtr_typeGalgas_lsint * constructor_new () {
      return new cPtr_typeGalgas_lsint() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeGalgas_ldouble'                         *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_ldouble.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgas_ldouble'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_ldouble {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeGalgas_ldouble * constructor_new () ;
  #else
    public : inline static cPtr_typeGalgas_ldouble * constructor_new () {
      return new cPtr_typeGalgas_ldouble() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       class 'typeGalgas_stringset'                        *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_stringset.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeGalgas_stringset'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_stringset {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeGalgas_stringset * constructor_new () ;
  #else
    public : inline static cPtr_typeGalgas_stringset * constructor_new () {
      return new cPtr_typeGalgas_stringset() ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  class 'typeGalgasUndefinedExternType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedExternType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_typeGalgasUndefinedExternType'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedExternType {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeGalgasUndefinedExternType * constructor_new (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
  #else
    public : inline static cPtr_typeGalgasUndefinedExternType * constructor_new (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) {
      return new cPtr_typeGalgasUndefinedExternType(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@M_externTypeConstructorMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_externTypeConstructorMap {
  public : GGS_typeListeAttributsSemantiques  aListeDesAttributs ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_externTypeConstructorMap : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_M_externTypeConstructorMap (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_M_externTypeConstructorMap & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_M_externTypeConstructorMap * nextObject (void) const { return (elementOf_GGS_M_externTypeConstructorMap *) mNextItem ; }
    public : inline elementOf_GGS_M_externTypeConstructorMap * infObject (void) const { return (elementOf_GGS_M_externTypeConstructorMap *) mInfPtr ; }
    public : inline elementOf_GGS_M_externTypeConstructorMap * supObject (void) const { return (elementOf_GGS_M_externTypeConstructorMap *) mSupPtr ; }
  //--- Data members
    public : e_M_externTypeConstructorMap mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//                       class 'typeGalgasExternType'                        *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgasExternType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeGalgasExternType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasExternType {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeGalgasExternType * constructor_new (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_M_externTypeConstructorMap & argument_2,
                                const GGS_typeTableMethodes & argument_3,
                                const GGS_typeTableMethodes & argument_4,
                                const GGS_bool& argument_5,
                                const GGS_typeListeAttributsSemantiques & argument_6) ;
  #else
    public : inline static cPtr_typeGalgasExternType * constructor_new (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_M_externTypeConstructorMap & argument_2,
                                const GGS_typeTableMethodes & argument_3,
                                const GGS_typeTableMethodes & argument_4,
                                const GGS_bool& argument_5,
                                const GGS_typeListeAttributsSemantiques & argument_6) {
      return new cPtr_typeGalgasExternType(argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4,
                                argument_5,
                                argument_6) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@M_terminalSymbolsMapForUse'                *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_terminalSymbolsMapForUse {
  public : GGS_typeListeAttributsSemantiques  aListeDesAttributs ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_terminalSymbolsMapForUse : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_M_terminalSymbolsMapForUse (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_M_terminalSymbolsMapForUse & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_M_terminalSymbolsMapForUse * nextObject (void) const { return (elementOf_GGS_M_terminalSymbolsMapForUse *) mNextItem ; }
    public : inline elementOf_GGS_M_terminalSymbolsMapForUse * infObject (void) const { return (elementOf_GGS_M_terminalSymbolsMapForUse *) mInfPtr ; }
    public : inline elementOf_GGS_M_terminalSymbolsMapForUse * supObject (void) const { return (elementOf_GGS_M_terminalSymbolsMapForUse *) mSupPtr ; }
  //--- Data members
    public : e_M_terminalSymbolsMapForUse mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@M_lexiqueComponents'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_lexiqueComponents {
  public : GGS_M_terminalSymbolsMapForUse  mTerminalSymbolMap ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_lexiqueComponents : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_M_lexiqueComponents (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_M_lexiqueComponents & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_M_lexiqueComponents * nextObject (void) const { return (elementOf_GGS_M_lexiqueComponents *) mNextItem ; }
    public : inline elementOf_GGS_M_lexiqueComponents * infObject (void) const { return (elementOf_GGS_M_lexiqueComponents *) mInfPtr ; }
    public : inline elementOf_GGS_M_lexiqueComponents * supObject (void) const { return (elementOf_GGS_M_lexiqueComponents *) mSupPtr ; }
  //--- Data members
    public : e_M_lexiqueComponents mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@typeTableEnAvant'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeTableEnAvant {
  public : GGS_AC_galgasType  mType ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableEnAvant : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_typeTableEnAvant (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_typeTableEnAvant & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_typeTableEnAvant * nextObject (void) const { return (elementOf_GGS_typeTableEnAvant *) mNextItem ; }
    public : inline elementOf_GGS_typeTableEnAvant * infObject (void) const { return (elementOf_GGS_typeTableEnAvant *) mInfPtr ; }
    public : inline elementOf_GGS_typeTableEnAvant * supObject (void) const { return (elementOf_GGS_typeTableEnAvant *) mSupPtr ; }
  //--- Data members
    public : e_typeTableEnAvant mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//                Element of map '@M_nonterminalSymbolAlts'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_nonterminalSymbolAlts {
  public : GGS_L_EXsignature  mFormalParametersList ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonterminalSymbolAlts : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_M_nonterminalSymbolAlts (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_M_nonterminalSymbolAlts & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_M_nonterminalSymbolAlts * nextObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAlts *) mNextItem ; }
    public : inline elementOf_GGS_M_nonterminalSymbolAlts * infObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAlts *) mInfPtr ; }
    public : inline elementOf_GGS_M_nonterminalSymbolAlts * supObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAlts *) mSupPtr ; }
  //--- Data members
    public : e_M_nonterminalSymbolAlts mInfo ;
} ;
#include "include_AC_semanticsEntity.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                      class 'C_grammarForSemantics'                        *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_C_grammarForSemantics.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_C_grammarForSemantics'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_C_grammarForSemantics {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_C_grammarForSemantics * constructor_new (const GGS_M_nonterminalSymbolAlts & argument_0) ;
  #else
    public : inline static cPtr_C_grammarForSemantics * constructor_new (const GGS_M_nonterminalSymbolAlts & argument_0) {
      return new cPtr_C_grammarForSemantics(argument_0) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@M_semanticsEntitiesForUse'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_semanticsEntitiesForUse {
  public : GGS_AC_semanticsEntity  aDefEntite ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_semanticsEntitiesForUse : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_M_semanticsEntitiesForUse (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_M_semanticsEntitiesForUse & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_M_semanticsEntitiesForUse * nextObject (void) const { return (elementOf_GGS_M_semanticsEntitiesForUse *) mNextItem ; }
    public : inline elementOf_GGS_M_semanticsEntitiesForUse * infObject (void) const { return (elementOf_GGS_M_semanticsEntitiesForUse *) mInfPtr ; }
    public : inline elementOf_GGS_M_semanticsEntitiesForUse * supObject (void) const { return (elementOf_GGS_M_semanticsEntitiesForUse *) mSupPtr ; }
  //--- Data members
    public : e_M_semanticsEntitiesForUse mInfo ;
} ;
#include "include_AC_typeForGrammarComponent.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@M_typesForGrammarComponent'                *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_typesForGrammarComponent {
  public : GGS_AC_typeForGrammarComponent  mType ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_typesForGrammarComponent : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_M_typesForGrammarComponent (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_M_typesForGrammarComponent & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_M_typesForGrammarComponent * nextObject (void) const { return (elementOf_GGS_M_typesForGrammarComponent *) mNextItem ; }
    public : inline elementOf_GGS_M_typesForGrammarComponent * infObject (void) const { return (elementOf_GGS_M_typesForGrammarComponent *) mInfPtr ; }
    public : inline elementOf_GGS_M_typesForGrammarComponent * supObject (void) const { return (elementOf_GGS_M_typesForGrammarComponent *) mSupPtr ; }
  //--- Data members
    public : e_M_typesForGrammarComponent mInfo ;
} ;
#include "include_AC_instruction_ForGrammar.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@L_ruleSyntaxSignature'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_ruleSyntaxSignature {
  private : elementOf_GGS_L_ruleSyntaxSignature * mNextItem ;
    public : GGS_AC_instruction_ForGrammar  mInstruction ;
  public : elementOf_GGS_L_ruleSyntaxSignature (const GGS_AC_instruction_ForGrammar & ) ;

  public : inline elementOf_GGS_L_ruleSyntaxSignature * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_ruleSyntaxSignature (const elementOf_GGS_L_ruleSyntaxSignature &) ;
  private : void operator = (const elementOf_GGS_L_ruleSyntaxSignature &) ;
  public : inline ~elementOf_GGS_L_ruleSyntaxSignature (void) {}
  friend class GGS_L_ruleSyntaxSignature ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@L_grammarsMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_L_grammarsMap {
  public : GGS_M_nonterminalSymbolAlts  mStartSymbolParametersMap ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_L_grammarsMap : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_L_grammarsMap (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_L_grammarsMap & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_L_grammarsMap * nextObject (void) const { return (elementOf_GGS_L_grammarsMap *) mNextItem ; }
    public : inline elementOf_GGS_L_grammarsMap * infObject (void) const { return (elementOf_GGS_L_grammarsMap *) mInfPtr ; }
    public : inline elementOf_GGS_L_grammarsMap * supObject (void) const { return (elementOf_GGS_L_grammarsMap *) mSupPtr ; }
  //--- Data members
    public : e_L_grammarsMap mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//           Element of map '@M_nonterminalSymbolAltsForGrammar'             *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_nonterminalSymbolAltsForGrammar {
  public : GGS_L_signature  mFormalParametersList ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonterminalSymbolAltsForGrammar : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_M_nonterminalSymbolAltsForGrammar (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_M_nonterminalSymbolAltsForGrammar & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_M_nonterminalSymbolAltsForGrammar * nextObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAltsForGrammar *) mNextItem ; }
    public : inline elementOf_GGS_M_nonterminalSymbolAltsForGrammar * infObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAltsForGrammar *) mInfPtr ; }
    public : inline elementOf_GGS_M_nonterminalSymbolAltsForGrammar * supObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAltsForGrammar *) mSupPtr ; }
  //--- Data members
    public : e_M_nonterminalSymbolAltsForGrammar mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//         Element of list '@L_productionRules_ForGrammarComponent'          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_productionRules_ForGrammarComponent {
  private : elementOf_GGS_L_productionRules_ForGrammarComponent * mNextItem ;
    public : GGS_lstring  mLeftNonterminalSymbol ;
    public : GGS_uint  mLeftNonterminalSymbolIndex ;
    public : GGS_L_ruleSyntaxSignature  mInstructionsList ;
  public : elementOf_GGS_L_productionRules_ForGrammarComponent (const GGS_lstring & ,
                                const GGS_uint & ,
                                const GGS_L_ruleSyntaxSignature & ) ;

  public : inline elementOf_GGS_L_productionRules_ForGrammarComponent * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_productionRules_ForGrammarComponent (const elementOf_GGS_L_productionRules_ForGrammarComponent &) ;
  private : void operator = (const elementOf_GGS_L_productionRules_ForGrammarComponent &) ;
  public : inline ~elementOf_GGS_L_productionRules_ForGrammarComponent (void) {}
  friend class GGS_L_productionRules_ForGrammarComponent ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of map '@M_nonTerminalSymbolsForGrammar'              *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_nonTerminalSymbolsForGrammar {
  public : GGS_M_nonterminalSymbolAltsForGrammar  mNonterminalSymbolParametersMap ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonTerminalSymbolsForGrammar : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_M_nonTerminalSymbolsForGrammar (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_M_nonTerminalSymbolsForGrammar & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_M_nonTerminalSymbolsForGrammar * nextObject (void) const { return (elementOf_GGS_M_nonTerminalSymbolsForGrammar *) mNextItem ; }
    public : inline elementOf_GGS_M_nonTerminalSymbolsForGrammar * infObject (void) const { return (elementOf_GGS_M_nonTerminalSymbolsForGrammar *) mInfPtr ; }
    public : inline elementOf_GGS_M_nonTerminalSymbolsForGrammar * supObject (void) const { return (elementOf_GGS_M_nonTerminalSymbolsForGrammar *) mSupPtr ; }
  //--- Data members
    public : e_M_nonTerminalSymbolsForGrammar mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@M_syntaxComponents'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_syntaxComponents {
  public : GGS_M_nonTerminalSymbolsForGrammar  mNonterminalSymbolsMap ;
  public : GGS_L_productionRules_ForGrammarComponent  mProductionRulesList ;
  public : GGS_lstring  mLexiqueComponentName ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_syntaxComponents : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_M_syntaxComponents (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_M_syntaxComponents & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_M_syntaxComponents * nextObject (void) const { return (elementOf_GGS_M_syntaxComponents *) mNextItem ; }
    public : inline elementOf_GGS_M_syntaxComponents * infObject (void) const { return (elementOf_GGS_M_syntaxComponents *) mInfPtr ; }
    public : inline elementOf_GGS_M_syntaxComponents * supObject (void) const { return (elementOf_GGS_M_syntaxComponents *) mSupPtr ; }
  //--- Data members
    public : e_M_syntaxComponents mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//            class 'T_terminalInstruction_forGrammarComponent'              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_T_terminalInstruction_forGrammarComponent.h"

//---------------------------------------------------------------------------*
//                                                                           *
//       GALGAS class 'GGS_T_terminalInstruction_forGrammarComponent'        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_T_terminalInstruction_forGrammarComponent {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_T_terminalInstruction_forGrammarComponent * constructor_new (const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_uint & argument_2) ;
  #else
    public : inline static cPtr_T_terminalInstruction_forGrammarComponent * constructor_new (const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_uint & argument_2) {
      return new cPtr_T_terminalInstruction_forGrammarComponent(argument_0,
                                argument_1,
                                argument_2) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           class 'T_nonterminalInstruction_forGrammarComponent'            *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_T_nonterminalInstruction_forGrammarComponent.h"

//---------------------------------------------------------------------------*
//                                                                           *
//     GALGAS class 'GGS_T_nonterminalInstruction_forGrammarComponent'       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_T_nonterminalInstruction_forGrammarComponent {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_T_nonterminalInstruction_forGrammarComponent * constructor_new (const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_uint & argument_2) ;
  #else
    public : inline static cPtr_T_nonterminalInstruction_forGrammarComponent * constructor_new (const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_uint & argument_2) {
      return new cPtr_T_nonterminalInstruction_forGrammarComponent(argument_0,
                                argument_1,
                                argument_2) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Element of list '@L_branchList_ForGrammarComponent'             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_branchList_ForGrammarComponent {
  private : elementOf_GGS_L_branchList_ForGrammarComponent * mNextItem ;
    public : GGS_L_ruleSyntaxSignature  mInstructionsList ;
  public : elementOf_GGS_L_branchList_ForGrammarComponent (const GGS_L_ruleSyntaxSignature & ) ;

  public : inline elementOf_GGS_L_branchList_ForGrammarComponent * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_branchList_ForGrammarComponent (const elementOf_GGS_L_branchList_ForGrammarComponent &) ;
  private : void operator = (const elementOf_GGS_L_branchList_ForGrammarComponent &) ;
  public : inline ~elementOf_GGS_L_branchList_ForGrammarComponent (void) {}
  friend class GGS_L_branchList_ForGrammarComponent ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             class 'T_selectInstruction_forGrammarComponent'               *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_T_selectInstruction_forGrammarComponent.h"

//---------------------------------------------------------------------------*
//                                                                           *
//        GALGAS class 'GGS_T_selectInstruction_forGrammarComponent'         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_T_selectInstruction_forGrammarComponent {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_T_selectInstruction_forGrammarComponent * constructor_new (const GGS_location & argument_0,
                                const GGS_L_branchList_ForGrammarComponent & argument_1,
                                const GGS_uint & argument_2) ;
  #else
    public : inline static cPtr_T_selectInstruction_forGrammarComponent * constructor_new (const GGS_location & argument_0,
                                const GGS_L_branchList_ForGrammarComponent & argument_1,
                                const GGS_uint & argument_2) {
      return new cPtr_T_selectInstruction_forGrammarComponent(argument_0,
                                argument_1,
                                argument_2) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             class 'T_repeatInstruction_forGrammarComponent'               *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_T_repeatInstruction_forGrammarComponent.h"

//---------------------------------------------------------------------------*
//                                                                           *
//        GALGAS class 'GGS_T_repeatInstruction_forGrammarComponent'         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_T_repeatInstruction_forGrammarComponent {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_T_repeatInstruction_forGrammarComponent * constructor_new (const GGS_location & argument_0,
                                const GGS_L_branchList_ForGrammarComponent & argument_1,
                                const GGS_uint & argument_2) ;
  #else
    public : inline static cPtr_T_repeatInstruction_forGrammarComponent * constructor_new (const GGS_location & argument_0,
                                const GGS_L_branchList_ForGrammarComponent & argument_1,
                                const GGS_uint & argument_2) {
      return new cPtr_T_repeatInstruction_forGrammarComponent(argument_0,
                                argument_1,
                                argument_2) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@L_syntaxComponents_ForGrammar'              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_syntaxComponents_ForGrammar {
  private : elementOf_GGS_L_syntaxComponents_ForGrammar * mNextItem ;
    public : GGS_M_nonTerminalSymbolsForGrammar  mNonterminalSymbolsMap ;
    public : GGS_L_productionRules_ForGrammarComponent  mProductionRulesList ;
    public : GGS_lstring  mSyntaxComponentName ;
  public : elementOf_GGS_L_syntaxComponents_ForGrammar (const GGS_M_nonTerminalSymbolsForGrammar & ,
                                const GGS_L_productionRules_ForGrammarComponent & ,
                                const GGS_lstring & ) ;

  public : inline elementOf_GGS_L_syntaxComponents_ForGrammar * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_syntaxComponents_ForGrammar (const elementOf_GGS_L_syntaxComponents_ForGrammar &) ;
  private : void operator = (const elementOf_GGS_L_syntaxComponents_ForGrammar &) ;
  public : inline ~elementOf_GGS_L_syntaxComponents_ForGrammar (void) {}
  friend class GGS_L_syntaxComponents_ForGrammar ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@L_identifiers'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_identifiers {
  private : elementOf_GGS_L_identifiers * mNextItem ;
    public : GGS_lstring  aIdentificateur ;
  public : elementOf_GGS_L_identifiers (const GGS_lstring & ) ;

  public : inline elementOf_GGS_L_identifiers * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_L_identifiers (const elementOf_GGS_L_identifiers &) ;
  private : void operator = (const elementOf_GGS_L_identifiers &) ;
  public : inline ~elementOf_GGS_L_identifiers (void) {}
  friend class GGS_L_identifiers ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@typeSuperClassesMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeSuperClassesMap {
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeSuperClassesMap : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_typeSuperClassesMap (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_typeSuperClassesMap & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_typeSuperClassesMap * nextObject (void) const { return (elementOf_GGS_typeSuperClassesMap *) mNextItem ; }
    public : inline elementOf_GGS_typeSuperClassesMap * infObject (void) const { return (elementOf_GGS_typeSuperClassesMap *) mInfPtr ; }
    public : inline elementOf_GGS_typeSuperClassesMap * supObject (void) const { return (elementOf_GGS_typeSuperClassesMap *) mSupPtr ; }
  //--- Data members
    public : e_typeSuperClassesMap mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//             Element of map '@typeClassInheritedMessagesMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeClassInheritedMessagesMap {
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeClassInheritedMessagesMap : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_typeClassInheritedMessagesMap (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_typeClassInheritedMessagesMap & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_typeClassInheritedMessagesMap * nextObject (void) const { return (elementOf_GGS_typeClassInheritedMessagesMap *) mNextItem ; }
    public : inline elementOf_GGS_typeClassInheritedMessagesMap * infObject (void) const { return (elementOf_GGS_typeClassInheritedMessagesMap *) mInfPtr ; }
    public : inline elementOf_GGS_typeClassInheritedMessagesMap * supObject (void) const { return (elementOf_GGS_typeClassInheritedMessagesMap *) mSupPtr ; }
  //--- Data members
    public : e_typeClassInheritedMessagesMap mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@typeSemanticAttributesMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeSemanticAttributesMap {
  public : GGS_AC_galgasType  mAttributType ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeSemanticAttributesMap : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_typeSemanticAttributesMap (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_typeSemanticAttributesMap & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_typeSemanticAttributesMap * nextObject (void) const { return (elementOf_GGS_typeSemanticAttributesMap *) mNextItem ; }
    public : inline elementOf_GGS_typeSemanticAttributesMap * infObject (void) const { return (elementOf_GGS_typeSemanticAttributesMap *) mInfPtr ; }
    public : inline elementOf_GGS_typeSemanticAttributesMap * supObject (void) const { return (elementOf_GGS_typeSemanticAttributesMap *) mSupPtr ; }
  //--- Data members
    public : e_typeSemanticAttributesMap mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@lastStateList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_lastStateList {
  private : elementOf_GGS_lastStateList * mNextItem ;
    public : GGS_lstring  mLastState ;
    public : GGS_lastStateEnum mStatus ;
    public : GGS_L_stringList  mMessageList ;
  public : elementOf_GGS_lastStateList (const GGS_lstring & ,
                                const GGS_lastStateEnum& ,
                                const GGS_L_stringList & ) ;

  public : inline elementOf_GGS_lastStateList * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_lastStateList (const elementOf_GGS_lastStateList &) ;
  private : void operator = (const elementOf_GGS_lastStateList &) ;
  public : inline ~elementOf_GGS_lastStateList (void) {}
  friend class GGS_lastStateList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@transitionStatusMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_transitionStatusMap {
  public : GGS_lastStateEnum mStatus ;
  public : GGS_L_stringList  mMessageList ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_transitionStatusMap : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_transitionStatusMap (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_transitionStatusMap & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_transitionStatusMap * nextObject (void) const { return (elementOf_GGS_transitionStatusMap *) mNextItem ; }
    public : inline elementOf_GGS_transitionStatusMap * infObject (void) const { return (elementOf_GGS_transitionStatusMap *) mInfPtr ; }
    public : inline elementOf_GGS_transitionStatusMap * supObject (void) const { return (elementOf_GGS_transitionStatusMap *) mSupPtr ; }
  //--- Data members
    public : e_transitionStatusMap mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@insertOrSearchMethodList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_insertOrSearchMethodList {
  private : elementOf_GGS_insertOrSearchMethodList * mNextItem ;
    public : GGS_lstring  mMethodName ;
    public : GGS_string mErrorMessage ;
    public : GGS_string mFirstState ;
    public : GGS_lastStateList  mLastStateList ;
    public : GGS_transitionStatusMap  mTransitionStatusMap ;
    public : GGS_bool mIsGetIndexMethod ;
  public : elementOf_GGS_insertOrSearchMethodList (const GGS_lstring & ,
                                const GGS_string& ,
                                const GGS_string& ,
                                const GGS_lastStateList & ,
                                const GGS_transitionStatusMap & ,
                                const GGS_bool& ) ;

  public : inline elementOf_GGS_insertOrSearchMethodList * nextObject (void) const { return mNextItem ; }
  private : elementOf_GGS_insertOrSearchMethodList (const elementOf_GGS_insertOrSearchMethodList &) ;
  private : void operator = (const elementOf_GGS_insertOrSearchMethodList &) ;
  public : inline ~elementOf_GGS_insertOrSearchMethodList (void) {}
  friend class GGS_insertOrSearchMethodList ;
} ;

#include "include_typeDefEntiteUtilisable.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   class 'typeGalgasUndefinedListType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedListType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_typeGalgasUndefinedListType'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedListType {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeGalgasUndefinedListType * constructor_new (const GGS_lstring & argument_0) ;
  #else
    public : inline static cPtr_typeGalgasUndefinedListType * constructor_new (const GGS_lstring & argument_0) {
      return new cPtr_typeGalgasUndefinedListType(argument_0) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeGalgasListType'                         *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgasListType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgasListType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasListType {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeGalgasListType * constructor_new (const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1) ;
  #else
    public : inline static cPtr_typeGalgasListType * constructor_new (const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1) {
      return new cPtr_typeGalgasListType(argument_0,
                                argument_1) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of map '@typeTableBlocsDeTable'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeTableBlocsDeTable {
  public : GGS_L_EXsignature  aSignatureDebut ;
  public : GGS_L_EXsignature  aSignatureFin ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableBlocsDeTable : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_typeTableBlocsDeTable (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_typeTableBlocsDeTable & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_typeTableBlocsDeTable * nextObject (void) const { return (elementOf_GGS_typeTableBlocsDeTable *) mNextItem ; }
    public : inline elementOf_GGS_typeTableBlocsDeTable * infObject (void) const { return (elementOf_GGS_typeTableBlocsDeTable *) mInfPtr ; }
    public : inline elementOf_GGS_typeTableBlocsDeTable * supObject (void) const { return (elementOf_GGS_typeTableBlocsDeTable *) mSupPtr ; }
  //--- Data members
    public : e_typeTableBlocsDeTable mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//                    class 'typeGalgasUndefinedMapType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedMapType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_typeGalgasUndefinedMapType'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedMapType {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeGalgasUndefinedMapType * constructor_new (const GGS_lstring & argument_0) ;
  #else
    public : inline static cPtr_typeGalgasUndefinedMapType * constructor_new (const GGS_lstring & argument_0) {
      return new cPtr_typeGalgasUndefinedMapType(argument_0) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@mapMethodMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_mapMethodMap {
  public : GGS_L_EXsignature  mMethodSignature ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_mapMethodMap : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_mapMethodMap (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_mapMethodMap & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_mapMethodMap * nextObject (void) const { return (elementOf_GGS_mapMethodMap *) mNextItem ; }
    public : inline elementOf_GGS_mapMethodMap * infObject (void) const { return (elementOf_GGS_mapMethodMap *) mInfPtr ; }
    public : inline elementOf_GGS_mapMethodMap * supObject (void) const { return (elementOf_GGS_mapMethodMap *) mSupPtr ; }
  //--- Data members
    public : e_mapMethodMap mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeGalgasMapType'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgasMapType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgasMapType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasMapType {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeGalgasMapType * constructor_new (const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_typeTableBlocsDeTable & argument_2,
                                const GGS_mapMethodMap & argument_3) ;
  #else
    public : inline static cPtr_typeGalgasMapType * constructor_new (const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_typeTableBlocsDeTable & argument_2,
                                const GGS_mapMethodMap & argument_3) {
      return new cPtr_typeGalgasMapType(argument_0,
                                argument_1,
                                argument_2,
                                argument_3) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   class 'typeGalgasUndefinedClassType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedClassType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_typeGalgasUndefinedClassType'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedClassType {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeGalgasUndefinedClassType * constructor_new (const GGS_lstring & argument_0) ;
  #else
    public : inline static cPtr_typeGalgasUndefinedClassType * constructor_new (const GGS_lstring & argument_0) {
      return new cPtr_typeGalgasUndefinedClassType(argument_0) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       class 'typeGalgasClassType'                         *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgasClassType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgasClassType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasClassType {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeGalgasClassType * constructor_new (const GGS_lstring & argument_0,
                                const GGS_typeTableMethodes & argument_1,
                                const GGS_typeListeAttributsSemantiques & argument_2,
                                const GGS_typeSuperClassesMap & argument_3,
                                const GGS_typeClassInheritedMessagesMap & argument_4,
                                const GGS_typeSemanticAttributesMap & argument_5,
                                const GGS_bool& argument_6) ;
  #else
    public : inline static cPtr_typeGalgasClassType * constructor_new (const GGS_lstring & argument_0,
                                const GGS_typeTableMethodes & argument_1,
                                const GGS_typeListeAttributsSemantiques & argument_2,
                                const GGS_typeSuperClassesMap & argument_3,
                                const GGS_typeClassInheritedMessagesMap & argument_4,
                                const GGS_typeSemanticAttributesMap & argument_5,
                                const GGS_bool& argument_6) {
      return new cPtr_typeGalgasClassType(argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4,
                                argument_5,
                                argument_6) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          class 'typeEntiteType'                           *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeEntiteType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeEntiteType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeEntiteType {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeEntiteType * constructor_new (const GGS_AC_galgasType & argument_0) ;
  #else
    public : inline static cPtr_typeEntiteType * constructor_new (const GGS_AC_galgasType & argument_0) {
      return new cPtr_typeEntiteType(argument_0) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        class 'typeEntiteRoutine'                          *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeEntiteRoutine.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeEntiteRoutine'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeEntiteRoutine {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeEntiteRoutine * constructor_new (const GGS_L_EXsignature & argument_0) ;
  #else
    public : inline static cPtr_typeEntiteRoutine * constructor_new (const GGS_L_EXsignature & argument_0) {
      return new cPtr_typeEntiteRoutine(argument_0) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@typeEnumMessageMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeEnumMessageMap {
  public : GGS_L_lstringList  mMessageStringList ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeEnumMessageMap : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_typeEnumMessageMap (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_typeEnumMessageMap & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_typeEnumMessageMap * nextObject (void) const { return (elementOf_GGS_typeEnumMessageMap *) mNextItem ; }
    public : inline elementOf_GGS_typeEnumMessageMap * infObject (void) const { return (elementOf_GGS_typeEnumMessageMap *) mInfPtr ; }
    public : inline elementOf_GGS_typeEnumMessageMap * supObject (void) const { return (elementOf_GGS_typeEnumMessageMap *) mSupPtr ; }
  //--- Data members
    public : e_typeEnumMessageMap mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'typeGalgas_enum'                           *
//                                                                           *
//---------------------------------------------------------------------------*

#include "include_typeGalgas_enum.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_enum'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_enum {
  #ifndef DO_NOT_GENERATE_MEMORY_CHECK_CODE
    public : static cPtr_typeGalgas_enum * constructor_new (const GGS_lstring & argument_0,
                                const GGS_enumConstantMap & argument_1,
                                const GGS_typeEnumMessageMap & argument_2) ;
  #else
    public : inline static cPtr_typeGalgas_enum * constructor_new (const GGS_lstring & argument_0,
                                const GGS_enumConstantMap & argument_1,
                                const GGS_typeEnumMessageMap & argument_2) {
      return new cPtr_typeGalgas_enum(argument_0,
                                argument_1,
                                argument_2) ;
    }
  #endif
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@M_cli_options'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_cli_options {
  public : GGS_lchar  mOptionChar ;
  public : GGS_lstring  mOptionString ;
  public : GGS_lstring  mComment ;
  public : GGS_uint  mDefaultValue ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_cli_options : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_M_cli_options (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_M_cli_options & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_M_cli_options * nextObject (void) const { return (elementOf_GGS_M_cli_options *) mNextItem ; }
    public : inline elementOf_GGS_M_cli_options * infObject (void) const { return (elementOf_GGS_M_cli_options *) mInfPtr ; }
    public : inline elementOf_GGS_M_cli_options * supObject (void) const { return (elementOf_GGS_M_cli_options *) mSupPtr ; }
  //--- Data members
    public : e_M_cli_options mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@M_optionComponents'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_optionComponents {
  public : GGS_M_cli_options  mBoolOptionsMap ;
  public : GGS_M_cli_options  mUintOptionsMap ;
  public : GGS_M_cli_options  mStringOptionsMap ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_optionComponents : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_M_optionComponents (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_M_optionComponents & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_M_optionComponents * nextObject (void) const { return (elementOf_GGS_M_optionComponents *) mNextItem ; }
    public : inline elementOf_GGS_M_optionComponents * infObject (void) const { return (elementOf_GGS_M_optionComponents *) mInfPtr ; }
    public : inline elementOf_GGS_M_optionComponents * supObject (void) const { return (elementOf_GGS_M_optionComponents *) mSupPtr ; }
  //--- Data members
    public : e_M_optionComponents mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@M_grammarComponents'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_grammarComponents {
  public : GGS_M_nonterminalSymbolAltsForGrammar  mNonterminalSymbolParametersMap ;
  public : GGS_lstring  mLexiqueName ;
  public : GGS_M_optionComponents  mOptionsMap ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_grammarComponents : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_M_grammarComponents (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_M_grammarComponents & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_M_grammarComponents * nextObject (void) const { return (elementOf_GGS_M_grammarComponents *) mNextItem ; }
    public : inline elementOf_GGS_M_grammarComponents * infObject (void) const { return (elementOf_GGS_M_grammarComponents *) mInfPtr ; }
    public : inline elementOf_GGS_M_grammarComponents * supObject (void) const { return (elementOf_GGS_M_grammarComponents *) mSupPtr ; }
  //--- Data members
    public : e_M_grammarComponents mInfo ;
} ;
//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of map '@M_semanticsComponents'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_semanticsComponents {
  public : GGS_ModelMap  mModelMap ;
  public : GGS_ActionMap  mActionMap ;
  public : GGS_stringset  mImportedSemanticsComponents ;
  public : GGS_stringset  mImportedOptionsComponents ;
  public : GGS_M_optionComponents  mOptionsComponents ;
  public : GGS_M_semanticsEntitiesForUse  mSemanticsEntitiesMap ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_semanticsComponents : public AC_galgas_map_element {
  //--- Constructor
    public : elementOf_GGS_M_semanticsComponents (const GGS_lstring & inKey,
                                      const sint32 inIndex,
                                      const e_M_semanticsComponents & inInfo) ;
  //--- Get pointers
    public : inline elementOf_GGS_M_semanticsComponents * nextObject (void) const { return (elementOf_GGS_M_semanticsComponents *) mNextItem ; }
    public : inline elementOf_GGS_M_semanticsComponents * infObject (void) const { return (elementOf_GGS_M_semanticsComponents *) mInfPtr ; }
    public : inline elementOf_GGS_M_semanticsComponents * supObject (void) const { return (elementOf_GGS_M_semanticsComponents *) mSupPtr ; }
  //--- Data members
    public : e_M_semanticsComponents mInfo ;
} ;
//---------------------------------------------------------------------------*

#endif
